<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 18:27:11.800" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.388" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:27:12.397" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:27:13.580" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:27:12.387" endtime="20201030 18:27:13.581"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.583" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:27:13.582" endtime="20201030 18:27:13.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.386" endtime="20201030 18:27:13.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:13.588" endtime="20201030 18:27:13.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.586" endtime="20201030 18:27:13.773"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.786" endtime="20201030 18:27:13.801"></status>
</kw>
<msg timestamp="20201030 18:27:13.801" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:13.784" endtime="20201030 18:27:13.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.804" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:13.802" endtime="20201030 18:27:13.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.807" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:13.805" endtime="20201030 18:27:13.807"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:13.782" endtime="20201030 18:27:13.808"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:13.780" endtime="20201030 18:27:13.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.778" endtime="20201030 18:27:13.809"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:13.813" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:13.813" endtime="20201030 18:27:13.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.810" endtime="20201030 18:27:13.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.777" endtime="20201030 18:27:13.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.777" endtime="20201030 18:27:13.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.815" endtime="20201030 18:27:13.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.775" endtime="20201030 18:27:13.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.821" endtime="20201030 18:27:13.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.774" endtime="20201030 18:27:13.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.384" endtime="20201030 18:27:13.827"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:13.839" endtime="20201030 18:27:13.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.836" endtime="20201030 18:27:13.862"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.891" endtime="20201030 18:27:13.908"></status>
</kw>
<msg timestamp="20201030 18:27:13.909" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:13.887" endtime="20201030 18:27:13.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.915" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:13.912" endtime="20201030 18:27:13.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.919" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:13.917" endtime="20201030 18:27:13.919"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:13.882" endtime="20201030 18:27:13.920"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:13.876" endtime="20201030 18:27:13.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.873" endtime="20201030 18:27:13.921"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:13.924" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:13.924" endtime="20201030 18:27:13.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.921" endtime="20201030 18:27:13.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.871" endtime="20201030 18:27:13.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.870" endtime="20201030 18:27:13.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.926" endtime="20201030 18:27:13.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.867" endtime="20201030 18:27:13.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.864" endtime="20201030 18:27:13.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.834" endtime="20201030 18:27:13.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.938" endtime="20201030 18:27:13.948"></status>
</kw>
<msg timestamp="20201030 18:27:13.949" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:13.935" endtime="20201030 18:27:13.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.951" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:13.950" endtime="20201030 18:27:13.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.952" endtime="20201030 18:27:13.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.932" endtime="20201030 18:27:13.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.930" endtime="20201030 18:27:13.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.959" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 18:27:13.958" endtime="20201030 18:27:13.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.961" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 18:27:13.960" endtime="20201030 18:27:13.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.956" endtime="20201030 18:27:13.962"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:13.828" endtime="20201030 18:27:13.962" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:27:11.925" endtime="20201030 18:27:13.965"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.017" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:27:14.025" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:27:15.273" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:27:14.016" endtime="20201030 18:27:15.274"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.276" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:27:15.275" endtime="20201030 18:27:15.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.014" endtime="20201030 18:27:15.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:15.279" endtime="20201030 18:27:15.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.278" endtime="20201030 18:27:15.550"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.568" endtime="20201030 18:27:15.583"></status>
</kw>
<msg timestamp="20201030 18:27:15.583" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:15.566" endtime="20201030 18:27:15.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.587" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:15.585" endtime="20201030 18:27:15.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.592" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:15.589" endtime="20201030 18:27:15.592"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:15.563" endtime="20201030 18:27:15.593"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:15.560" endtime="20201030 18:27:15.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.555" endtime="20201030 18:27:15.594"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:15.598" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:15.597" endtime="20201030 18:27:15.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.595" endtime="20201030 18:27:15.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.554" endtime="20201030 18:27:15.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.553" endtime="20201030 18:27:15.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.599" endtime="20201030 18:27:15.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.552" endtime="20201030 18:27:15.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.602" endtime="20201030 18:27:15.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.551" endtime="20201030 18:27:15.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.013" endtime="20201030 18:27:15.605"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:15.611" endtime="20201030 18:27:15.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.609" endtime="20201030 18:27:15.631"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.645" endtime="20201030 18:27:15.658"></status>
</kw>
<msg timestamp="20201030 18:27:15.659" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:15.643" endtime="20201030 18:27:15.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.662" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:15.660" endtime="20201030 18:27:15.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.665" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:15.663" endtime="20201030 18:27:15.665"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:15.640" endtime="20201030 18:27:15.666"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:15.638" endtime="20201030 18:27:15.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.637" endtime="20201030 18:27:15.667"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:15.670" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:15.670" endtime="20201030 18:27:15.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.667" endtime="20201030 18:27:15.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.636" endtime="20201030 18:27:15.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.635" endtime="20201030 18:27:15.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.672" endtime="20201030 18:27:15.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.634" endtime="20201030 18:27:15.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.632" endtime="20201030 18:27:15.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.608" endtime="20201030 18:27:15.675"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.683" endtime="20201030 18:27:15.694"></status>
</kw>
<msg timestamp="20201030 18:27:15.695" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:15.682" endtime="20201030 18:27:15.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.697" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:15.696" endtime="20201030 18:27:15.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.698" endtime="20201030 18:27:15.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.679" endtime="20201030 18:27:15.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.678" endtime="20201030 18:27:15.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.707" endtime="20201030 18:27:15.976"></status>
</kw>
<msg timestamp="20201030 18:27:15.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062930792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062932931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:15.706" endtime="20201030 18:27:15.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062930792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062932931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:15.979" endtime="20201030 18:27:15.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.985" endtime="20201030 18:27:15.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.703" endtime="20201030 18:27:15.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.701" endtime="20201030 18:27:15.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:16.001" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:27:15.988" endtime="20201030 18:27:16.001"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.002" endtime="20201030 18:27:16.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.008" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:16.007" endtime="20201030 18:27:16.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.011" level="INFO">VALUE: {'eventsource_diff': [0, 2.1389999999982257e-06, 2.1800000000044006e-06, 2.1949999999965053e-06, 2.1250000000055946e-06, 2.055000000000806e-06, 2.1809999999899965e-06, 2.069000000007315e-06, 1.945000000003194e-06, 2.2219999999961715e-06, 1.9859999999954914e-06, 2.042000000007649e-06, 2.179999999990523e-06, 2.05600000000028e-06, 2.165999999997892e-06, 2.1810000000038743e-06, 2.1389999999982257e-06, 1.9720000000028604e-06, 2.082999999999946e-06, 2.1810000000038743e-06, 2.2080000000035405e-06, 2.013999999994631e-06, 1.9579999999963515e-06, 2.02800000000114e-06, 2.05600000000028e-06, 1.9579999999963515e-06, 1.945000000003194e-06, 2.1800000000044006e-06, 2.2080000000035405e-06, 2.236999999988276e-06, 2.082999999999946e-06, 2.000000000002e-06, 2.1800000000044006e-06, 1.945000000003194e-06, 2.1529999999908567e-06, 2.097000000006455e-06, 2.1800000000044006e-06, 2.124999999991717e-06, 2.1669999999973655e-06, 2.02800000000114e-06, 2.082999999999946e-06, 2.1670000000112433e-06, 2.110999999999086e-06, 2.041999999993771e-06, 2.1800000000044006e-06, 2.1389999999982257e-06, 2.000000000002e-06, 2.1809999999899965e-06, 2.1660000000117696e-06, 2.2499999999953113e-06], 'time': [0.062930792, 0.062932931, 0.062935111, 0.062937306, 0.062939431, 0.062941486, 0.062943667, 0.062945736, 0.062947681, 0.062949903, 0.062951889, 0.062953931, 0.062956111, 0.062958167, 0.062960333, 0.062962514, 0.062964653, 0.062966625, 0.062968708, 0.062970889, 0.062973097, 0.062975111, 0.062977069, 0.062979097, 0.062981153, 0.062983111, 0.062985056, 0.062987236, 0.062989444, 0.062991681, 0.062993764, 0.062995764, 0.062997944, 0.062999889, 0.063002042, 0.063004139, 0.063006319, 0.063008444, 0.063010611, 0.063012639, 0.063014722, 0.063016889, 0.063019, 0.063021042, 0.063023222, 0.063025361, 0.063027361, 0.063029542, 0.063031708, 0.063033958], 'sourcediff': [0, 2.1389999999982257e-06, 2.1800000000044006e-06, 2.1949999999965053e-06, 2.1250000000055946e-06, 2.055000000000806e-06, 2.1809999999899965e-06, 2.069000000007315e-06, 1.945000000003194e-06, 2.2219999999961715e-06, 1.9859999999954914e-06, 2.042000000007649e-06, 2.179999999990523e-06, 2.05600000000028e-06, 2.165999999997892e-06, 2.1810000000038743e-06, 2.1389999999982257e-06, 1.9720000000028604e-06, 2.082999999999946e-06, 2.1810000000038743e-06, 2.2080000000035405e-06, 2.013999999994631e-06, 1.9579999999963515e-06, 2.02800000000114e-06, 2.05600000000028e-06, 1.9579999999963515e-06, 1.945000000003194e-06, 2.1800000000044006e-06, 2.2080000000035405e-06, 2.236999999988276e-06, 2.082999999999946e-06, 2.000000000002e-06, 2.1800000000044006e-06, 1.945000000003194e-06, 2.1529999999908567e-06, 2.097000000006455e-06, 2.1800000000044006e-06, 2.124999999991717e-06, 2.1669999999973655e-06, 2.02800000000114e-06, 2.082999999999946e-06, 2.1670000000112433e-06, 2.110999999999086e-06, 2.041999999993771e-06, 2.1800000000044006e-06, 2.1389999999982257e-06, 2.000000000002e-06, 2.1809999999899965e-06, 2.1660000000117696e-06, 2.2499999999953113e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:16.009" endtime="20201030 18:27:16.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.005" endtime="20201030 18:27:16.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:16.015" level="INFO">${RESULT} = [{'diff': 2.1389999999982257e-06}, {'diff': 2.1949999999965053e-06}, {'diff': 2.055000000000806e-06}, {'diff': 2.069000000007315e-06}, {'diff': 2.2219999999961715e-06}, {'diff': 2.042000000007649e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:16.013" endtime="20201030 18:27:16.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:16.019" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.1389999999982257e-06, 2.1949999999965053e-06, 2.055000000000806e-06, 2.069000000007315e-06, 2.2219999999961715e-06, 2.042000000007649e-06, 2.05600000000028e-06, 2.1810000000038743e-06, 1.9...</msg>
<status status="PASS" starttime="20201030 18:27:16.016" endtime="20201030 18:27:16.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.023" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:16.022" endtime="20201030 18:27:16.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.025" level="INFO">VALUE: [2.1389999999982257e-06, 2.1949999999965053e-06, 2.055000000000806e-06, 2.069000000007315e-06, 2.2219999999961715e-06, 2.042000000007649e-06, 2.05600000000028e-06, 2.1810000000038743e-06, 1.9720000000028604e-06, 2.1810000000038743e-06, 2.013999999994631e-06, 2.02800000000114e-06, 1.9579999999963515e-06, 2.1800000000044006e-06, 2.236999999988276e-06, 2.000000000002e-06, 1.945000000003194e-06, 2.097000000006455e-06, 2.124999999991717e-06, 2.02800000000114e-06, 2.1670000000112433e-06, 2.041999999993771e-06, 2.1389999999982257e-06, 2.1809999999899965e-06, 2.2499999999953113e-06]</msg>
<status status="PASS" starttime="20201030 18:27:16.024" endtime="20201030 18:27:16.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.019" endtime="20201030 18:27:16.026"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:16.030" endtime="20201030 18:27:16.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.028" endtime="20201030 18:27:16.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.027" endtime="20201030 18:27:16.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.676" endtime="20201030 18:27:16.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.676" endtime="20201030 18:27:16.051"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.059" endtime="20201030 18:27:16.070"></status>
</kw>
<msg timestamp="20201030 18:27:16.070" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:16.058" endtime="20201030 18:27:16.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.072" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:16.071" endtime="20201030 18:27:16.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.074" endtime="20201030 18:27:16.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.055" endtime="20201030 18:27:16.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.053" endtime="20201030 18:27:16.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.083" endtime="20201030 18:27:16.352"></status>
</kw>
<msg timestamp="20201030 18:27:16.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018825903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018826444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:16.081" endtime="20201030 18:27:16.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018825903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018826444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:16.355" endtime="20201030 18:27:16.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.360" endtime="20201030 18:27:16.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.079" endtime="20201030 18:27:16.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.077" endtime="20201030 18:27:16.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:16.377" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:27:16.363" endtime="20201030 18:27:16.377"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.378" endtime="20201030 18:27:16.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.383" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:16.382" endtime="20201030 18:27:16.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.386" level="INFO">VALUE: {'eventsource_diff': [0, 5.409999999997361e-07, 1.6389999999977256e-06, 2.181000000000405e-06, 1.930000000000681e-06, 2.1119999999985595e-06, 2.1110000000025553e-06, 1.8889999999979756e-06, 2.194000000000501e-06, 1.985999999998961e-06, 2.139000000001695e-06, 2.221999999999641e-06, 2.02800000000114e-06, 1.985999999998961e-06, 2.0699999999998497e-06, 2.1520000000017914e-06, 2.110999999999086e-06, 2.0699999999998497e-06, 2.069000000000376e-06, 2.1249999999986557e-06, 2.0699999999998497e-06, 2.000000000002e-06, 2.0689999999969066e-06, 2.000000000002e-06, 2.1389999999982257e-06, 1.957999999999821e-06, 2.223000000002584e-06, 2.082999999999946e-06, 1.971999999999391e-06, 2.0139999999981006e-06, 2.181000000000405e-06, 2.000000000002e-06, 2.151999999998322e-06, 2.0839999999994197e-06, 1.957999999999821e-06, 1.945000000003194e-06, 2.110999999999086e-06, 2.040999999997767e-06, 2.01400000000157e-06, 2.221999999999641e-06, 2.1949999999999747e-06, 2.01400000000157e-06, 2.1799999999974617e-06, 1.9860000000024303e-06, 2.0419999999972405e-06, 2.01400000000157e-06, 2.069000000000376e-06, 1.9999999999985307e-06, 2.1949999999999747e-06, 2.000000000002e-06, 2.180000000000931e-06], 'time': [0.018825903, 0.018826444, 0.018828083, 0.018830264, 0.018832194, 0.018834306, 0.018836417, 0.018838306, 0.0188405, 0.018842486, 0.018844625, 0.018846847, 0.018848875, 0.018850861, 0.018852931, 0.018855083, 0.018857194, 0.018859264, 0.018861333, 0.018863458, 0.018865528, 0.018867528, 0.018869597, 0.018871597, 0.018873736, 0.018875694, 0.018877917, 0.01888, 0.018881972, 0.018883986, 0.018886167, 0.018888167, 0.018890319, 0.018892403, 0.018894361, 0.018896306, 0.018898417, 0.018900458, 0.018902472, 0.018904694, 0.018906889, 0.018908903, 0.018911083, 0.018913069, 0.018915111, 0.018917125, 0.018919194, 0.018921194, 0.018923389, 0.018925389, 0.018927569], 'sourcediff': [0, 5.409999999997361e-07, 1.6389999999977256e-06, 2.181000000000405e-06, 1.930000000000681e-06, 2.1119999999985595e-06, 2.1110000000025553e-06, 1.8889999999979756e-06, 2.194000000000501e-06, 1.985999999998961e-06, 2.139000000001695e-06, 2.221999999999641e-06, 2.02800000000114e-06, 1.985999999998961e-06, 2.0699999999998497e-06, 2.1520000000017914e-06, 2.110999999999086e-06, 2.0699999999998497e-06, 2.069000000000376e-06, 2.1249999999986557e-06, 2.0699999999998497e-06, 2.000000000002e-06, 2.0689999999969066e-06, 2.000000000002e-06, 2.1389999999982257e-06, 1.957999999999821e-06, 2.223000000002584e-06, 2.082999999999946e-06, 1.971999999999391e-06, 2.0139999999981006e-06, 2.181000000000405e-06, 2.000000000002e-06, 2.151999999998322e-06, 2.0839999999994197e-06, 1.957999999999821e-06, 1.945000000003194e-06, 2.110999999999086e-06, 2.040999999997767e-06, 2.01400000000157e-06, 2.221999999999641e-06, 2.1949999999999747e-06, 2.01400000000157e-06, 2.1799999999974617e-06, 1.9860000000024303e-06, 2.0419999999972405e-06, 2.01400000000157e-06, 2.069000000000376e-06, 1.9999999999985307e-06, 2.1949999999999747e-06, 2.000000000002e-06, 2.180000000000931e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:16.384" endtime="20201030 18:27:16.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.380" endtime="20201030 18:27:16.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:16.391" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 2.181000000000405e-06}, {'diff': 2.1119999999985595e-06}, {'diff': 1.8889999999979756e-06}, {'diff': 1.985999999998961e-06}, {'diff': 2.221999999999641e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:16.388" endtime="20201030 18:27:16.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:16.395" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 2.181000000000405e-06, 2.1119999999985595e-06, 1.8889999999979756e-06, 1.985999999998961e-06, 2.221999999999641e-06, 1.985999999998961e-06, 2.1520000000017914e-06, 2.0...</msg>
<status status="PASS" starttime="20201030 18:27:16.392" endtime="20201030 18:27:16.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.399" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:16.398" endtime="20201030 18:27:16.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.401" level="INFO">VALUE: [5.409999999997361e-07, 2.181000000000405e-06, 2.1119999999985595e-06, 1.8889999999979756e-06, 1.985999999998961e-06, 2.221999999999641e-06, 1.985999999998961e-06, 2.1520000000017914e-06, 2.0699999999998497e-06, 2.1249999999986557e-06, 2.000000000002e-06, 2.000000000002e-06, 1.957999999999821e-06, 2.082999999999946e-06, 2.0139999999981006e-06, 2.000000000002e-06, 2.0839999999994197e-06, 1.945000000003194e-06, 2.040999999997767e-06, 2.221999999999641e-06, 2.01400000000157e-06, 1.9860000000024303e-06, 2.01400000000157e-06, 1.9999999999985307e-06, 2.000000000002e-06]</msg>
<status status="PASS" starttime="20201030 18:27:16.400" endtime="20201030 18:27:16.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.396" endtime="20201030 18:27:16.402"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:16.406" endtime="20201030 18:27:16.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.404" endtime="20201030 18:27:16.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.403" endtime="20201030 18:27:16.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.052" endtime="20201030 18:27:16.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.052" endtime="20201030 18:27:16.428"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.440" endtime="20201030 18:27:16.452"></status>
</kw>
<msg timestamp="20201030 18:27:16.453" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:16.436" endtime="20201030 18:27:16.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.456" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:16.454" endtime="20201030 18:27:16.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.458" endtime="20201030 18:27:16.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.433" endtime="20201030 18:27:16.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.430" endtime="20201030 18:27:16.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.469" endtime="20201030 18:27:16.742"></status>
</kw>
<msg timestamp="20201030 18:27:16.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025840278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025842431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:16.467" endtime="20201030 18:27:16.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025840278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025842431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:16.746" endtime="20201030 18:27:16.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.753" endtime="20201030 18:27:16.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.464" endtime="20201030 18:27:16.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.462" endtime="20201030 18:27:16.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:16.772" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:27:16.757" endtime="20201030 18:27:16.772"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.774" endtime="20201030 18:27:16.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.785" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:16.783" endtime="20201030 18:27:16.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.788" level="INFO">VALUE: {'eventsource_diff': [0, 2.1529999999977956e-06, 2.180000000000931e-06, 2.221999999999641e-06, 2.01400000000157e-06, 2.0839999999994197e-06, 2.137999999998752e-06, 2.0839999999994197e-06, 1.930000000000681e-06, 2.2229999999991146e-06, 2.0410000000012363e-06, 2.2089999999995447e-06, 2.1380000000022215e-06, 2.2089999999995447e-06, 2.082999999999946e-06, 2.082999999999946e-06, 2.0699999999998497e-06, 2.0279999999976706e-06, 2.0270000000016664e-06, 2.02800000000114e-06, 2.0699999999998497e-06, 2.026999999998197e-06, 1.9449999999997247e-06, 2.069000000000376e-06, 2.125000000002125e-06, 2.2089999999995447e-06, 1.944000000000251e-06, 2.1949999999999747e-06, 2.137999999998752e-06, 1.9999999999985307e-06, 2.153000000001265e-06, 2.2089999999995447e-06, 1.930000000000681e-06, 1.971999999999391e-06, 1.9449999999997247e-06, 2.110999999999086e-06, 2.02800000000114e-06, 2.180000000000931e-06, 2.0839999999994197e-06, 2.194000000000501e-06, 2.0139999999981006e-06, 1.9720000000028604e-06, 2.208000000000071e-06, 2.1669999999973655e-06, 2.221999999999641e-06, 2.070000000003319e-06, 2.096999999999516e-06, 1.9999999999985307e-06, 2.194000000000501e-06, 2.1949999999999747e-06], 'time': [0.025840278, 0.025842431, 0.025844611, 0.025846833, 0.025848847, 0.025850931, 0.025853069, 0.025855153, 0.025857083, 0.025859306, 0.025861347, 0.025863556, 0.025865694, 0.025867903, 0.025869986, 0.025872069, 0.025874139, 0.025876167, 0.025878194, 0.025880222, 0.025882292, 0.025884319, 0.025886264, 0.025888333, 0.025890458, 0.025892667, 0.025894611, 0.025896806, 0.025898944, 0.025900944, 0.025903097, 0.025905306, 0.025907236, 0.025909208, 0.025911153, 0.025913264, 0.025915292, 0.025917472, 0.025919556, 0.02592175, 0.025923764, 0.025925736, 0.025927944, 0.025930111, 0.025932333, 0.025934403, 0.0259365, 0.0259385, 0.025940694, 0.025942889], 'sourcediff': [0, 2.1529999999977956e-06, 2.180000000000931e-06, 2.221999999999641e-06, 2.01400000000157e-06, 2.0839999999994197e-06, 2.137999999998752e-06, 2.0839999999994197e-06, 1.930000000000681e-06, 2.2229999999991146e-06, 2.0410000000012363e-06, 2.2089999999995447e-06, 2.1380000000022215e-06, 2.2089999999995447e-06, 2.082999999999946e-06, 2.082999999999946e-06, 2.0699999999998497e-06, 2.0279999999976706e-06, 2.0270000000016664e-06, 2.02800000000114e-06, 2.0699999999998497e-06, 2.026999999998197e-06, 1.9449999999997247e-06, 2.069000000000376e-06, 2.125000000002125e-06, 2.2089999999995447e-06, 1.944000000000251e-06, 2.1949999999999747e-06, 2.137999999998752e-06, 1.9999999999985307e-06, 2.153000000001265e-06, 2.2089999999995447e-06, 1.930000000000681e-06, 1.971999999999391e-06, 1.9449999999997247e-06, 2.110999999999086e-06, 2.02800000000114e-06, 2.180000000000931e-06, 2.0839999999994197e-06, 2.194000000000501e-06, 2.0139999999981006e-06, 1.9720000000028604e-06, 2.208000000000071e-06, 2.1669999999973655e-06, 2.221999999999641e-06, 2.070000000003319e-06, 2.096999999999516e-06, 1.9999999999985307e-06, 2.194000000000501e-06, 2.1949999999999747e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:16.786" endtime="20201030 18:27:16.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.781" endtime="20201030 18:27:16.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:16.793" level="INFO">${RESULT} = [{'diff': 2.1529999999977956e-06}, {'diff': 2.221999999999641e-06}, {'diff': 2.0839999999994197e-06}, {'diff': 2.0839999999994197e-06}, {'diff': 2.2229999999991146e-06}, {'diff': 2.2089999999995447e-0...</msg>
<status status="PASS" starttime="20201030 18:27:16.790" endtime="20201030 18:27:16.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:16.797" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.1529999999977956e-06, 2.221999999999641e-06, 2.0839999999994197e-06, 2.0839999999994197e-06, 2.2229999999991146e-06, 2.2089999999995447e-06, 2.2089999999995447e-06, 2.082999999999946e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:16.794" endtime="20201030 18:27:16.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.804" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:16.803" endtime="20201030 18:27:16.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.807" level="INFO">VALUE: [2.1529999999977956e-06, 2.221999999999641e-06, 2.0839999999994197e-06, 2.0839999999994197e-06, 2.2229999999991146e-06, 2.2089999999995447e-06, 2.2089999999995447e-06, 2.082999999999946e-06, 2.0279999999976706e-06, 2.02800000000114e-06, 2.026999999998197e-06, 2.069000000000376e-06, 2.2089999999995447e-06, 2.1949999999999747e-06, 1.9999999999985307e-06, 2.2089999999995447e-06, 1.971999999999391e-06, 2.110999999999086e-06, 2.180000000000931e-06, 2.194000000000501e-06, 1.9720000000028604e-06, 2.1669999999973655e-06, 2.070000000003319e-06, 1.9999999999985307e-06, 2.1949999999999747e-06]</msg>
<status status="PASS" starttime="20201030 18:27:16.806" endtime="20201030 18:27:16.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.798" endtime="20201030 18:27:16.808"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:16.812" endtime="20201030 18:27:16.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.810" endtime="20201030 18:27:16.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.809" endtime="20201030 18:27:16.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.428" endtime="20201030 18:27:16.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.428" endtime="20201030 18:27:16.835"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.843" endtime="20201030 18:27:16.853"></status>
</kw>
<msg timestamp="20201030 18:27:16.854" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:16.842" endtime="20201030 18:27:16.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.856" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:16.855" endtime="20201030 18:27:16.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.858" endtime="20201030 18:27:16.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.839" endtime="20201030 18:27:16.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.837" endtime="20201030 18:27:16.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.868" endtime="20201030 18:27:17.154"></status>
</kw>
<msg timestamp="20201030 18:27:17.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021475361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021477458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:16.867" endtime="20201030 18:27:17.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021475361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021477458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:17.157" endtime="20201030 18:27:17.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.162" endtime="20201030 18:27:17.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.863" endtime="20201030 18:27:17.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.861" endtime="20201030 18:27:17.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:17.179" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:27:17.166" endtime="20201030 18:27:17.179"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.180" endtime="20201030 18:27:17.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.185" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:17.184" endtime="20201030 18:27:17.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.189" level="INFO">VALUE: {'eventsource_diff': [0, 2.0970000000029854e-06, 2.0419999999972405e-06, 2.181000000000405e-06, 2.125000000002125e-06, 2.1249999999986557e-06, 2.221999999999641e-06, 2.153000000001265e-06, 2.221999999999641e-06, 2.069000000000376e-06, 1.9449999999997247e-06, 2.026999999998197e-06, 2.209000000003014e-06, 1.9999999999985307e-06, 2.0139999999981006e-06, 2.0410000000012363e-06, 2.02800000000114e-06, 2.082999999999946e-06, 2.2229999999991146e-06, 2.000000000002e-06, 2.0689999999969066e-06, 2.153000000001265e-06, 2.04200000000071e-06, 2.165999999997892e-06, 2.084000000002889e-06, 2.208000000000071e-06, 1.9999999999985307e-06, 1.957999999999821e-06, 2.181000000000405e-06, 2.1389999999982257e-06, 2.1110000000025553e-06, 2.208000000000071e-06, 2.0279999999976706e-06, 1.944000000000251e-06, 2.04200000000071e-06, 2.04200000000071e-06, 2.1389999999982257e-06, 2.1660000000013613e-06, 2.235999999999211e-06, 2.01400000000157e-06, 2.0839999999994197e-06, 1.944000000000251e-06, 2.1249999999986557e-06, 2.02800000000114e-06, 2.194000000000501e-06, 2.1249999999986557e-06, 2.02800000000114e-06, 2.110999999999086e-06, 1.971999999999391e-06, 1.9860000000024303e-06], 'time': [0.021475361, 0.021477458, 0.0214795, 0.021481681, 0.021483806, 0.021485931, 0.021488153, 0.021490306, 0.021492528, 0.021494597, 0.021496542, 0.021498569, 0.021500778, 0.021502778, 0.021504792, 0.021506833, 0.021508861, 0.021510944, 0.021513167, 0.021515167, 0.021517236, 0.021519389, 0.021521431, 0.021523597, 0.021525681, 0.021527889, 0.021529889, 0.021531847, 0.021534028, 0.021536167, 0.021538278, 0.021540486, 0.021542514, 0.021544458, 0.0215465, 0.021548542, 0.021550681, 0.021552847, 0.021555083, 0.021557097, 0.021559181, 0.021561125, 0.02156325, 0.021565278, 0.021567472, 0.021569597, 0.021571625, 0.021573736, 0.021575708, 0.021577694], 'sourcediff': [0, 2.0970000000029854e-06, 2.0419999999972405e-06, 2.181000000000405e-06, 2.125000000002125e-06, 2.1249999999986557e-06, 2.221999999999641e-06, 2.153000000001265e-06, 2.221999999999641e-06, 2.069000000000376e-06, 1.9449999999997247e-06, 2.026999999998197e-06, 2.209000000003014e-06, 1.9999999999985307e-06, 2.0139999999981006e-06, 2.0410000000012363e-06, 2.02800000000114e-06, 2.082999999999946e-06, 2.2229999999991146e-06, 2.000000000002e-06, 2.0689999999969066e-06, 2.153000000001265e-06, 2.04200000000071e-06, 2.165999999997892e-06, 2.084000000002889e-06, 2.208000000000071e-06, 1.9999999999985307e-06, 1.957999999999821e-06, 2.181000000000405e-06, 2.1389999999982257e-06, 2.1110000000025553e-06, 2.208000000000071e-06, 2.0279999999976706e-06, 1.944000000000251e-06, 2.04200000000071e-06, 2.04200000000071e-06, 2.1389999999982257e-06, 2.1660000000013613e-06, 2.235999999999211e-06, 2.01400000000157e-06, 2.0839999999994197e-06, 1.944000000000251e-06, 2.1249999999986557e-06, 2.02800000000114e-06, 2.194000000000501e-06, 2.1249999999986557e-06, 2.02800000000114e-06, 2.110999999999086e-06, 1.971999999999391e-06, 1.9860000000024303e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:17.186" endtime="20201030 18:27:17.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.182" endtime="20201030 18:27:17.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:17.194" level="INFO">${RESULT} = [{'diff': 2.0970000000029854e-06}, {'diff': 2.181000000000405e-06}, {'diff': 2.1249999999986557e-06}, {'diff': 2.153000000001265e-06}, {'diff': 2.069000000000376e-06}, {'diff': 2.026999999998197e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:17.191" endtime="20201030 18:27:17.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:17.197" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.0970000000029854e-06, 2.181000000000405e-06, 2.1249999999986557e-06, 2.153000000001265e-06, 2.069000000000376e-06, 2.026999999998197e-06, 1.9999999999985307e-06, 2.0410000000012363e-06, 2....</msg>
<status status="PASS" starttime="20201030 18:27:17.195" endtime="20201030 18:27:17.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.201" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:17.200" endtime="20201030 18:27:17.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.205" level="INFO">VALUE: [2.0970000000029854e-06, 2.181000000000405e-06, 2.1249999999986557e-06, 2.153000000001265e-06, 2.069000000000376e-06, 2.026999999998197e-06, 1.9999999999985307e-06, 2.0410000000012363e-06, 2.082999999999946e-06, 2.000000000002e-06, 2.153000000001265e-06, 2.165999999997892e-06, 2.208000000000071e-06, 1.957999999999821e-06, 2.1389999999982257e-06, 2.208000000000071e-06, 1.944000000000251e-06, 2.04200000000071e-06, 2.1660000000013613e-06, 2.01400000000157e-06, 1.944000000000251e-06, 2.02800000000114e-06, 2.1249999999986557e-06, 2.110999999999086e-06, 1.9860000000024303e-06]</msg>
<status status="PASS" starttime="20201030 18:27:17.203" endtime="20201030 18:27:17.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.198" endtime="20201030 18:27:17.206"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:17.211" endtime="20201030 18:27:17.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.209" endtime="20201030 18:27:17.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.207" endtime="20201030 18:27:17.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.836" endtime="20201030 18:27:17.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.835" endtime="20201030 18:27:17.233"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.243" endtime="20201030 18:27:17.254"></status>
</kw>
<msg timestamp="20201030 18:27:17.254" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:17.242" endtime="20201030 18:27:17.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.257" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:17.255" endtime="20201030 18:27:17.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.258" endtime="20201030 18:27:17.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.238" endtime="20201030 18:27:17.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.236" endtime="20201030 18:27:17.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.267" endtime="20201030 18:27:17.537"></status>
</kw>
<msg timestamp="20201030 18:27:17.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021595278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021597458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:17.266" endtime="20201030 18:27:17.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021595278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021597458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:17.540" endtime="20201030 18:27:17.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.547" endtime="20201030 18:27:17.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.263" endtime="20201030 18:27:17.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.261" endtime="20201030 18:27:17.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:17.568" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:27:17.554" endtime="20201030 18:27:17.568"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.569" endtime="20201030 18:27:17.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.577" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:17.576" endtime="20201030 18:27:17.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.581" level="INFO">VALUE: {'eventsource_diff': [0, 2.180000000000931e-06, 2.2089999999995447e-06, 2.0270000000016664e-06, 2.1949999999999747e-06, 2.1799999999974617e-06, 2.01400000000157e-06, 2.04200000000071e-06, 1.944000000000251e-06, 2.1119999999985595e-06, 2.000000000002e-06, 2.110999999999086e-06, 2.040999999997767e-06, 2.0699999999998497e-06, 2.153000000001265e-06, 2.137999999998752e-06, 2.153000000001265e-06, 1.9589999999992946e-06, 1.957999999999821e-06, 2.139000000001695e-06, 2.0410000000012363e-06, 2.0559999999968104e-06, 2.082999999999946e-06, 2.125000000002125e-06, 2.0979999999989896e-06, 1.985999999998961e-06, 2.1110000000025553e-06, 2.221999999999641e-06, 2.208000000000071e-06, 2.110999999999086e-06, 2.0699999999998497e-06, 2.221999999999641e-06, 1.889000000001445e-06, 2.082999999999946e-06, 1.985999999998961e-06, 2.153000000001265e-06, 2.2089999999995447e-06, 2.1249999999986557e-06, 2.0270000000016664e-06, 1.9729999999988646e-06, 2.012999999998627e-06, 2.05600000000028e-06, 2.194000000000501e-06, 2.139000000001695e-06, 2.167000000000835e-06, 2.1249999999986557e-06, 2.05600000000028e-06, 1.957999999999821e-06, 1.944000000000251e-06, 1.9999999999985307e-06], 'time': [0.021595278, 0.021597458, 0.021599667, 0.021601694, 0.021603889, 0.021606069, 0.021608083, 0.021610125, 0.021612069, 0.021614181, 0.021616181, 0.021618292, 0.021620333, 0.021622403, 0.021624556, 0.021626694, 0.021628847, 0.021630806, 0.021632764, 0.021634903, 0.021636944, 0.021639, 0.021641083, 0.021643208, 0.021645306, 0.021647292, 0.021649403, 0.021651625, 0.021653833, 0.021655944, 0.021658014, 0.021660236, 0.021662125, 0.021664208, 0.021666194, 0.021668347, 0.021670556, 0.021672681, 0.021674708, 0.021676681, 0.021678694, 0.02168075, 0.021682944, 0.021685083, 0.02168725, 0.021689375, 0.021691431, 0.021693389, 0.021695333, 0.021697333], 'sourcediff': [0, 2.180000000000931e-06, 2.2089999999995447e-06, 2.0270000000016664e-06, 2.1949999999999747e-06, 2.1799999999974617e-06, 2.01400000000157e-06, 2.04200000000071e-06, 1.944000000000251e-06, 2.1119999999985595e-06, 2.000000000002e-06, 2.110999999999086e-06, 2.040999999997767e-06, 2.0699999999998497e-06, 2.153000000001265e-06, 2.137999999998752e-06, 2.153000000001265e-06, 1.9589999999992946e-06, 1.957999999999821e-06, 2.139000000001695e-06, 2.0410000000012363e-06, 2.0559999999968104e-06, 2.082999999999946e-06, 2.125000000002125e-06, 2.0979999999989896e-06, 1.985999999998961e-06, 2.1110000000025553e-06, 2.221999999999641e-06, 2.208000000000071e-06, 2.110999999999086e-06, 2.0699999999998497e-06, 2.221999999999641e-06, 1.889000000001445e-06, 2.082999999999946e-06, 1.985999999998961e-06, 2.153000000001265e-06, 2.2089999999995447e-06, 2.1249999999986557e-06, 2.0270000000016664e-06, 1.9729999999988646e-06, 2.012999999998627e-06, 2.05600000000028e-06, 2.194000000000501e-06, 2.139000000001695e-06, 2.167000000000835e-06, 2.1249999999986557e-06, 2.05600000000028e-06, 1.957999999999821e-06, 1.944000000000251e-06, 1.9999999999985307e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:17.579" endtime="20201030 18:27:17.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.573" endtime="20201030 18:27:17.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:17.585" level="INFO">${RESULT} = [{'diff': 2.180000000000931e-06}, {'diff': 2.0270000000016664e-06}, {'diff': 2.1799999999974617e-06}, {'diff': 2.04200000000071e-06}, {'diff': 2.1119999999985595e-06}, {'diff': 2.110999999999086e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:17.582" endtime="20201030 18:27:17.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:17.588" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.180000000000931e-06, 2.0270000000016664e-06, 2.1799999999974617e-06, 2.04200000000071e-06, 2.1119999999985595e-06, 2.110999999999086e-06, 2.0699999999998497e-06, 2.137999999998752e-06, 1.9...</msg>
<status status="PASS" starttime="20201030 18:27:17.586" endtime="20201030 18:27:17.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.593" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:17.592" endtime="20201030 18:27:17.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.596" level="INFO">VALUE: [2.180000000000931e-06, 2.0270000000016664e-06, 2.1799999999974617e-06, 2.04200000000071e-06, 2.1119999999985595e-06, 2.110999999999086e-06, 2.0699999999998497e-06, 2.137999999998752e-06, 1.9589999999992946e-06, 2.139000000001695e-06, 2.0559999999968104e-06, 2.125000000002125e-06, 1.985999999998961e-06, 2.221999999999641e-06, 2.110999999999086e-06, 2.221999999999641e-06, 2.082999999999946e-06, 2.153000000001265e-06, 2.1249999999986557e-06, 1.9729999999988646e-06, 2.05600000000028e-06, 2.139000000001695e-06, 2.1249999999986557e-06, 1.957999999999821e-06, 1.9999999999985307e-06]</msg>
<status status="PASS" starttime="20201030 18:27:17.594" endtime="20201030 18:27:17.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.589" endtime="20201030 18:27:17.600"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:17.604" endtime="20201030 18:27:17.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.603" endtime="20201030 18:27:17.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.601" endtime="20201030 18:27:17.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.234" endtime="20201030 18:27:17.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.234" endtime="20201030 18:27:17.626"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.635" endtime="20201030 18:27:17.644"></status>
</kw>
<msg timestamp="20201030 18:27:17.645" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:17.634" endtime="20201030 18:27:17.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.647" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:17.646" endtime="20201030 18:27:17.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.649" endtime="20201030 18:27:17.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.631" endtime="20201030 18:27:17.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.629" endtime="20201030 18:27:17.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.658" endtime="20201030 18:27:17.943"></status>
</kw>
<msg timestamp="20201030 18:27:17.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020704972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020705514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:17.656" endtime="20201030 18:27:17.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020704972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020705514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:17.946" endtime="20201030 18:27:17.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.951" endtime="20201030 18:27:17.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.653" endtime="20201030 18:27:17.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.652" endtime="20201030 18:27:17.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:17.968" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:27:17.955" endtime="20201030 18:27:17.968"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.969" endtime="20201030 18:27:17.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.974" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:17.973" endtime="20201030 18:27:17.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.977" level="INFO">VALUE: {'eventsource_diff': [0, 5.420000000026792e-07, 1.582999999999446e-06, 2.110999999999086e-06, 1.985999999998961e-06, 2.01400000000157e-06, 1.985999999998961e-06, 2.0699999999998497e-06, 1.930000000000681e-06, 2.02800000000114e-06, 2.235999999999211e-06, 2.01400000000157e-06, 1.971999999999391e-06, 2.2369999999986845e-06, 2.0270000000016664e-06, 2.0559999999968104e-06, 1.9860000000024303e-06, 2.181000000000405e-06, 2.110999999999086e-06, 2.151999999998322e-06, 2.098000000002459e-06, 2.110999999999086e-06, 2.1389999999982257e-06, 2.180000000000931e-06, 2.181000000000405e-06, 2.221999999999641e-06, 2.208000000000071e-06, 2.000000000002e-06, 2.2089999999995447e-06, 2.096999999999516e-06, 1.957999999999821e-06, 2.0699999999998497e-06, 2.221999999999641e-06, 2.069000000000376e-06, 2.1949999999999747e-06, 2.082999999999946e-06, 2.0699999999998497e-06, 2.180000000000931e-06, 2.167000000000835e-06, 1.971999999999391e-06, 2.110999999999086e-06, 2.153000000001265e-06, 1.957999999999821e-06, 2.1389999999982257e-06, 2.221999999999641e-06, 1.9589999999992946e-06, 2.01400000000157e-06, 2.012999999998627e-06, 1.987000000001904e-06, 1.944000000000251e-06, 2.082999999999946e-06], 'time': [0.020704972, 0.020705514, 0.020707097, 0.020709208, 0.020711194, 0.020713208, 0.020715194, 0.020717264, 0.020719194, 0.020721222, 0.020723458, 0.020725472, 0.020727444, 0.020729681, 0.020731708, 0.020733764, 0.02073575, 0.020737931, 0.020740042, 0.020742194, 0.020744292, 0.020746403, 0.020748542, 0.020750722, 0.020752903, 0.020755125, 0.020757333, 0.020759333, 0.020761542, 0.020763639, 0.020765597, 0.020767667, 0.020769889, 0.020771958, 0.020774153, 0.020776236, 0.020778306, 0.020780486, 0.020782653, 0.020784625, 0.020786736, 0.020788889, 0.020790847, 0.020792986, 0.020795208, 0.020797167, 0.020799181, 0.020801194, 0.020803181, 0.020805125, 0.020807208], 'sourcediff': [0, 5.420000000026792e-07, 1.582999999999446e-06, 2.110999999999086e-06, 1.985999999998961e-06, 2.01400000000157e-06, 1.985999999998961e-06, 2.0699999999998497e-06, 1.930000000000681e-06, 2.02800000000114e-06, 2.235999999999211e-06, 2.01400000000157e-06, 1.971999999999391e-06, 2.2369999999986845e-06, 2.0270000000016664e-06, 2.0559999999968104e-06, 1.9860000000024303e-06, 2.181000000000405e-06, 2.110999999999086e-06, 2.151999999998322e-06, 2.098000000002459e-06, 2.110999999999086e-06, 2.1389999999982257e-06, 2.180000000000931e-06, 2.181000000000405e-06, 2.221999999999641e-06, 2.208000000000071e-06, 2.000000000002e-06, 2.2089999999995447e-06, 2.096999999999516e-06, 1.957999999999821e-06, 2.0699999999998497e-06, 2.221999999999641e-06, 2.069000000000376e-06, 2.1949999999999747e-06, 2.082999999999946e-06, 2.0699999999998497e-06, 2.180000000000931e-06, 2.167000000000835e-06, 1.971999999999391e-06, 2.110999999999086e-06, 2.153000000001265e-06, 1.957999999999821e-06, 2.1389999999982257e-06, 2.221999999999641e-06, 1.9589999999992946e-06, 2.01400000000157e-06, 2.012999999998627e-06, 1.987000000001904e-06, 1.944000000000251e-06, 2.082999999999946e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:17.975" endtime="20201030 18:27:17.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.971" endtime="20201030 18:27:17.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:17.982" level="INFO">${RESULT} = [{'diff': 5.420000000026792e-07}, {'diff': 2.110999999999086e-06}, {'diff': 2.01400000000157e-06}, {'diff': 2.0699999999998497e-06}, {'diff': 2.02800000000114e-06}, {'diff': 2.01400000000157e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:17.979" endtime="20201030 18:27:17.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:17.987" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.420000000026792e-07, 2.110999999999086e-06, 2.01400000000157e-06, 2.0699999999998497e-06, 2.02800000000114e-06, 2.01400000000157e-06, 2.2369999999986845e-06, 2.0559999999968104e-06, 2.1810...</msg>
<status status="PASS" starttime="20201030 18:27:17.983" endtime="20201030 18:27:17.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.991" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:17.990" endtime="20201030 18:27:17.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.993" level="INFO">VALUE: [5.420000000026792e-07, 2.110999999999086e-06, 2.01400000000157e-06, 2.0699999999998497e-06, 2.02800000000114e-06, 2.01400000000157e-06, 2.2369999999986845e-06, 2.0559999999968104e-06, 2.181000000000405e-06, 2.151999999998322e-06, 2.110999999999086e-06, 2.180000000000931e-06, 2.221999999999641e-06, 2.000000000002e-06, 2.096999999999516e-06, 2.0699999999998497e-06, 2.069000000000376e-06, 2.082999999999946e-06, 2.180000000000931e-06, 1.971999999999391e-06, 2.153000000001265e-06, 2.1389999999982257e-06, 1.9589999999992946e-06, 2.012999999998627e-06, 1.944000000000251e-06]</msg>
<status status="PASS" starttime="20201030 18:27:17.992" endtime="20201030 18:27:17.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.987" endtime="20201030 18:27:17.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:17.998" endtime="20201030 18:27:18.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.996" endtime="20201030 18:27:18.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.995" endtime="20201030 18:27:18.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.627" endtime="20201030 18:27:18.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.626" endtime="20201030 18:27:18.019"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.026" endtime="20201030 18:27:18.037"></status>
</kw>
<msg timestamp="20201030 18:27:18.037" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:18.025" endtime="20201030 18:27:18.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.040" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:18.038" endtime="20201030 18:27:18.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.041" endtime="20201030 18:27:18.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.022" endtime="20201030 18:27:18.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.021" endtime="20201030 18:27:18.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.050" endtime="20201030 18:27:18.315"></status>
</kw>
<msg timestamp="20201030 18:27:18.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018396333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018398681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:18.048" endtime="20201030 18:27:18.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018396333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018398681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:18.318" endtime="20201030 18:27:18.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.324" endtime="20201030 18:27:18.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.046" endtime="20201030 18:27:18.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.044" endtime="20201030 18:27:18.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:18.341" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:27:18.328" endtime="20201030 18:27:18.341"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.342" endtime="20201030 18:27:18.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.347" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:18.346" endtime="20201030 18:27:18.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.350" level="INFO">VALUE: {'eventsource_diff': [0, 2.3479999999992396e-06, 2.1660000000013613e-06, 2.1389999999982257e-06, 2.04200000000071e-06, 1.957999999999821e-06, 2.0699999999998497e-06, 1.971999999999391e-06, 2.069000000000376e-06, 1.9589999999992946e-06, 2.1110000000025553e-06, 1.971999999999391e-06, 2.0549999999973367e-06, 2.181000000000405e-06, 2.194000000000501e-06, 1.987000000001904e-06, 2.0549999999973367e-06, 2.02800000000114e-06, 2.082999999999946e-06, 2.0699999999998497e-06, 2.208000000000071e-06, 2.181000000000405e-06, 1.985999999998961e-06, 2.139000000001695e-06, 1.971999999999391e-06, 2.02800000000114e-06, 2.1799999999974617e-06, 2.2220000000031104e-06, 1.9589999999992946e-06, 2.026999999998197e-06, 2.2229999999991146e-06, 1.944000000000251e-06, 2.0970000000029854e-06, 1.9449999999997247e-06, 1.944000000000251e-06, 1.985999999998961e-06, 2.1389999999982257e-06, 2.221999999999641e-06, 2.125000000002125e-06, 2.0699999999998497e-06, 2.235999999999211e-06, 2.04200000000071e-06, 2.221999999999641e-06, 1.944000000000251e-06, 1.9729999999988646e-06, 1.957999999999821e-06, 1.944000000000251e-06, 2.223000000002584e-06, 1.9439999999967816e-06, 2.082999999999946e-06], 'time': [0.018396333, 0.018398681, 0.018400847, 0.018402986, 0.018405028, 0.018406986, 0.018409056, 0.018411028, 0.018413097, 0.018415056, 0.018417167, 0.018419139, 0.018421194, 0.018423375, 0.018425569, 0.018427556, 0.018429611, 0.018431639, 0.018433722, 0.018435792, 0.018438, 0.018440181, 0.018442167, 0.018444306, 0.018446278, 0.018448306, 0.018450486, 0.018452708, 0.018454667, 0.018456694, 0.018458917, 0.018460861, 0.018462958, 0.018464903, 0.018466847, 0.018468833, 0.018470972, 0.018473194, 0.018475319, 0.018477389, 0.018479625, 0.018481667, 0.018483889, 0.018485833, 0.018487806, 0.018489764, 0.018491708, 0.018493931, 0.018495875, 0.018497958], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 2.3479999999992396e-06, 2.1660000000013613e-06, 2.1389999999982257e-06, 2.04200000000071e-06, 1.957999999999821e-06, 2.0699999999998497e-06, 1.971999999999391e-06, 2.069000000000376e-06, 1.9589999999992946e-06, 2.1110000000025553e-06, 1.971999999999391e-06, 2.0549999999973367e-06, 2.181000000000405e-06, 2.194000000000501e-06, 1.987000000001904e-06, 2.0549999999973367e-06, 2.02800000000114e-06, 2.082999999999946e-06, 2.0699999999998497e-06, 2.208000000000071e-06, 2.181000000000405e-06, 1.985999999998961e-06, 2.139000000001695e-06, 1.971999999999391e-06, 2.02800000000114e-06, 2.1799999999974617e-06, 2.2220000000031104e-06, 1.9589999999992946e-06, 2.026999999998197e-06, 2.2229999999991146e-06, 1.944000000000251e-06, 2.0970000000029854e-06, 1.9449999999997247e-06, 1.944000000000251e-06, 1.985999999998961e-06, 2.1389999999982257e-06, 2.221999999999641e-06, 2.125000000002125e-06, 2.0699999999998497e-06, 2.235999999999211e-06, 2.04200000000071e-06, 2.221999999999641e-06, 1.944000000000251e-06, 1.9729999999988646e-06, 1.957999999999821e-06, 1.944000000000251e-06, 2.223000000002584e-06, 1.9439999999967816e-06, 2.082999999999946e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:18.348" endtime="20201030 18:27:18.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.344" endtime="20201030 18:27:18.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:18.355" level="INFO">${RESULT} = [{'diff': 2.3479999999992396e-06}, {'diff': 2.1389999999982257e-06}, {'diff': 1.957999999999821e-06}, {'diff': 1.971999999999391e-06}, {'diff': 1.9589999999992946e-06}, {'diff': 1.971999999999391e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:18.352" endtime="20201030 18:27:18.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:18.358" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.3479999999992396e-06, 2.1389999999982257e-06, 1.957999999999821e-06, 1.971999999999391e-06, 1.9589999999992946e-06, 1.971999999999391e-06, 2.181000000000405e-06, 1.987000000001904e-06, 2.0...</msg>
<status status="PASS" starttime="20201030 18:27:18.356" endtime="20201030 18:27:18.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.362" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:18.361" endtime="20201030 18:27:18.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.364" level="INFO">VALUE: [2.3479999999992396e-06, 2.1389999999982257e-06, 1.957999999999821e-06, 1.971999999999391e-06, 1.9589999999992946e-06, 1.971999999999391e-06, 2.181000000000405e-06, 1.987000000001904e-06, 2.02800000000114e-06, 2.0699999999998497e-06, 2.181000000000405e-06, 2.139000000001695e-06, 2.02800000000114e-06, 2.2220000000031104e-06, 2.026999999998197e-06, 1.944000000000251e-06, 1.9449999999997247e-06, 1.985999999998961e-06, 2.221999999999641e-06, 2.0699999999998497e-06, 2.04200000000071e-06, 1.944000000000251e-06, 1.957999999999821e-06, 2.223000000002584e-06, 2.082999999999946e-06]</msg>
<status status="PASS" starttime="20201030 18:27:18.363" endtime="20201030 18:27:18.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.359" endtime="20201030 18:27:18.366"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:18.369" endtime="20201030 18:27:18.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.368" endtime="20201030 18:27:18.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.367" endtime="20201030 18:27:18.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.019" endtime="20201030 18:27:18.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.019" endtime="20201030 18:27:18.390"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.398" endtime="20201030 18:27:18.407"></status>
</kw>
<msg timestamp="20201030 18:27:18.408" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:18.397" endtime="20201030 18:27:18.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.410" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:18.409" endtime="20201030 18:27:18.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.411" endtime="20201030 18:27:18.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.394" endtime="20201030 18:27:18.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.392" endtime="20201030 18:27:18.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.422" endtime="20201030 18:27:18.692"></status>
</kw>
<msg timestamp="20201030 18:27:18.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018612931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018615236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:18.420" endtime="20201030 18:27:18.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018612931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018615236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:18.695" endtime="20201030 18:27:18.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.701" endtime="20201030 18:27:18.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.416" endtime="20201030 18:27:18.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.415" endtime="20201030 18:27:18.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:18.717" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:27:18.704" endtime="20201030 18:27:18.718"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.719" endtime="20201030 18:27:18.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.724" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:18.723" endtime="20201030 18:27:18.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.727" level="INFO">VALUE: {'eventsource_diff': [0, 2.305000000001056e-06, 2.167000000000835e-06, 2.235999999999211e-06, 2.1389999999982257e-06, 2.1660000000013613e-06, 1.9589999999992946e-06, 2.01400000000157e-06, 2.276999999998447e-06, 1.987000000001904e-06, 2.208000000000071e-06, 2.1249999999986557e-06, 2.069000000000376e-06, 2.2229999999991146e-06, 2.0410000000012363e-06, 2.0139999999981006e-06, 2.01400000000157e-06, 2.02800000000114e-06, 2.082999999999946e-06, 2.110999999999086e-06, 2.1949999999999747e-06, 2.180000000000931e-06, 1.971999999999391e-06, 2.181000000000405e-06, 2.1529999999977956e-06, 2.055000000000806e-06, 2.153000000001265e-06, 2.0699999999998497e-06, 1.971999999999391e-06, 2.194000000000501e-06, 2.167000000000835e-06, 1.985999999998961e-06, 2.096999999999516e-06, 2.05600000000028e-06, 2.0139999999981006e-06, 1.9720000000028604e-06, 2.1799999999974617e-06, 2.000000000002e-06, 2.1119999999985595e-06, 2.1660000000013613e-06, 2.1249999999986557e-06, 1.985999999998961e-06, 2.05600000000028e-06, 2.0970000000029854e-06, 1.931000000000155e-06, 2.1799999999974617e-06, 2.181000000000405e-06, 2.01400000000157e-06, 1.9999999999985307e-06, 2.180000000000931e-06], 'time': [0.018612931, 0.018615236, 0.018617403, 0.018619639, 0.018621778, 0.018623944, 0.018625903, 0.018627917, 0.018630194, 0.018632181, 0.018634389, 0.018636514, 0.018638583, 0.018640806, 0.018642847, 0.018644861, 0.018646875, 0.018648903, 0.018650986, 0.018653097, 0.018655292, 0.018657472, 0.018659444, 0.018661625, 0.018663778, 0.018665833, 0.018667986, 0.018670056, 0.018672028, 0.018674222, 0.018676389, 0.018678375, 0.018680472, 0.018682528, 0.018684542, 0.018686514, 0.018688694, 0.018690694, 0.018692806, 0.018694972, 0.018697097, 0.018699083, 0.018701139, 0.018703236, 0.018705167, 0.018707347, 0.018709528, 0.018711542, 0.018713542, 0.018715722], 'sourcediff': [0, 2.305000000001056e-06, 2.167000000000835e-06, 2.235999999999211e-06, 2.1389999999982257e-06, 2.1660000000013613e-06, 1.9589999999992946e-06, 2.01400000000157e-06, 2.276999999998447e-06, 1.987000000001904e-06, 2.208000000000071e-06, 2.1249999999986557e-06, 2.069000000000376e-06, 2.2229999999991146e-06, 2.0410000000012363e-06, 2.0139999999981006e-06, 2.01400000000157e-06, 2.02800000000114e-06, 2.082999999999946e-06, 2.110999999999086e-06, 2.1949999999999747e-06, 2.180000000000931e-06, 1.971999999999391e-06, 2.181000000000405e-06, 2.1529999999977956e-06, 2.055000000000806e-06, 2.153000000001265e-06, 2.0699999999998497e-06, 1.971999999999391e-06, 2.194000000000501e-06, 2.167000000000835e-06, 1.985999999998961e-06, 2.096999999999516e-06, 2.05600000000028e-06, 2.0139999999981006e-06, 1.9720000000028604e-06, 2.1799999999974617e-06, 2.000000000002e-06, 2.1119999999985595e-06, 2.1660000000013613e-06, 2.1249999999986557e-06, 1.985999999998961e-06, 2.05600000000028e-06, 2.0970000000029854e-06, 1.931000000000155e-06, 2.1799999999974617e-06, 2.181000000000405e-06, 2.01400000000157e-06, 1.9999999999985307e-06, 2.180000000000931e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:18.725" endtime="20201030 18:27:18.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.721" endtime="20201030 18:27:18.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:18.732" level="INFO">${RESULT} = [{'diff': 2.305000000001056e-06}, {'diff': 2.235999999999211e-06}, {'diff': 2.1660000000013613e-06}, {'diff': 2.01400000000157e-06}, {'diff': 1.987000000001904e-06}, {'diff': 2.1249999999986557e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:18.730" endtime="20201030 18:27:18.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:18.736" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.305000000001056e-06, 2.235999999999211e-06, 2.1660000000013613e-06, 2.01400000000157e-06, 1.987000000001904e-06, 2.1249999999986557e-06, 2.2229999999991146e-06, 2.0139999999981006e-06, 2.0...</msg>
<status status="PASS" starttime="20201030 18:27:18.733" endtime="20201030 18:27:18.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.740" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:18.739" endtime="20201030 18:27:18.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.743" level="INFO">VALUE: [2.305000000001056e-06, 2.235999999999211e-06, 2.1660000000013613e-06, 2.01400000000157e-06, 1.987000000001904e-06, 2.1249999999986557e-06, 2.2229999999991146e-06, 2.0139999999981006e-06, 2.02800000000114e-06, 2.110999999999086e-06, 2.180000000000931e-06, 2.181000000000405e-06, 2.055000000000806e-06, 2.0699999999998497e-06, 2.194000000000501e-06, 1.985999999998961e-06, 2.05600000000028e-06, 1.9720000000028604e-06, 2.000000000002e-06, 2.1660000000013613e-06, 1.985999999998961e-06, 2.0970000000029854e-06, 2.1799999999974617e-06, 2.01400000000157e-06, 2.180000000000931e-06]</msg>
<status status="PASS" starttime="20201030 18:27:18.741" endtime="20201030 18:27:18.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.737" endtime="20201030 18:27:18.743"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:18.747" endtime="20201030 18:27:18.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.746" endtime="20201030 18:27:18.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.744" endtime="20201030 18:27:18.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.391" endtime="20201030 18:27:18.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.390" endtime="20201030 18:27:18.768"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.777" endtime="20201030 18:27:18.787"></status>
</kw>
<msg timestamp="20201030 18:27:18.788" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:18.776" endtime="20201030 18:27:18.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.790" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:18.789" endtime="20201030 18:27:18.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.791" endtime="20201030 18:27:18.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.772" endtime="20201030 18:27:18.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.770" endtime="20201030 18:27:18.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.801" endtime="20201030 18:27:19.070"></status>
</kw>
<msg timestamp="20201030 18:27:19.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019774375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019776403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:18.799" endtime="20201030 18:27:19.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019774375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019776403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:19.072" endtime="20201030 18:27:19.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.078" endtime="20201030 18:27:19.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.796" endtime="20201030 18:27:19.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.795" endtime="20201030 18:27:19.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:19.095" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:27:19.082" endtime="20201030 18:27:19.095"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.096" endtime="20201030 18:27:19.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.101" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:19.100" endtime="20201030 18:27:19.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.105" level="INFO">VALUE: {'eventsource_diff': [0, 2.02800000000114e-06, 2.2499999999987808e-06, 2.082999999999946e-06, 2.05600000000028e-06, 1.971999999999391e-06, 2.221999999999641e-06, 2.110999999999086e-06, 2.181000000000405e-06, 2.1660000000013613e-06, 1.9999999999985307e-06, 2.098000000002459e-06, 1.901999999998072e-06, 2.01400000000157e-06, 2.0839999999994197e-06, 2.110999999999086e-06, 2.096999999999516e-06, 2.082999999999946e-06, 1.9449999999997247e-06, 2.02800000000114e-06, 2.055000000000806e-06, 2.0139999999981006e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.137999999998752e-06, 2.181000000000405e-06, 2.110999999999086e-06, 1.931000000000155e-06, 2.096999999999516e-06, 2.02800000000114e-06, 2.180000000000931e-06, 2.096999999999516e-06, 2.2229999999991146e-06, 2.1520000000017914e-06, 2.1809999999969354e-06, 2.02800000000114e-06, 1.985999999998961e-06, 1.9860000000024303e-06, 1.985999999998961e-06, 1.9999999999985307e-06, 2.070000000003319e-06, 2.208000000000071e-06, 2.1669999999973655e-06, 2.1520000000017914e-06, 2.0139999999981006e-06, 2.221999999999641e-06, 2.112000000002029e-06, 2.026999999998197e-06, 1.9449999999997247e-06, 2.1110000000025553e-06], 'time': [0.019774375, 0.019776403, 0.019778653, 0.019780736, 0.019782792, 0.019784764, 0.019786986, 0.019789097, 0.019791278, 0.019793444, 0.019795444, 0.019797542, 0.019799444, 0.019801458, 0.019803542, 0.019805653, 0.01980775, 0.019809833, 0.019811778, 0.019813806, 0.019815861, 0.019817875, 0.019819903, 0.019821931, 0.019824069, 0.01982625, 0.019828361, 0.019830292, 0.019832389, 0.019834417, 0.019836597, 0.019838694, 0.019840917, 0.019843069, 0.01984525, 0.019847278, 0.019849264, 0.01985125, 0.019853236, 0.019855236, 0.019857306, 0.019859514, 0.019861681, 0.019863833, 0.019865847, 0.019868069, 0.019870181, 0.019872208, 0.019874153, 0.019876264], 'sourcediff': [0, 2.02800000000114e-06, 2.2499999999987808e-06, 2.082999999999946e-06, 2.05600000000028e-06, 1.971999999999391e-06, 2.221999999999641e-06, 2.110999999999086e-06, 2.181000000000405e-06, 2.1660000000013613e-06, 1.9999999999985307e-06, 2.098000000002459e-06, 1.901999999998072e-06, 2.01400000000157e-06, 2.0839999999994197e-06, 2.110999999999086e-06, 2.096999999999516e-06, 2.082999999999946e-06, 1.9449999999997247e-06, 2.02800000000114e-06, 2.055000000000806e-06, 2.0139999999981006e-06, 2.02800000000114e-06, 2.02800000000114e-06, 2.137999999998752e-06, 2.181000000000405e-06, 2.110999999999086e-06, 1.931000000000155e-06, 2.096999999999516e-06, 2.02800000000114e-06, 2.180000000000931e-06, 2.096999999999516e-06, 2.2229999999991146e-06, 2.1520000000017914e-06, 2.1809999999969354e-06, 2.02800000000114e-06, 1.985999999998961e-06, 1.9860000000024303e-06, 1.985999999998961e-06, 1.9999999999985307e-06, 2.070000000003319e-06, 2.208000000000071e-06, 2.1669999999973655e-06, 2.1520000000017914e-06, 2.0139999999981006e-06, 2.221999999999641e-06, 2.112000000002029e-06, 2.026999999998197e-06, 1.9449999999997247e-06, 2.1110000000025553e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:19.103" endtime="20201030 18:27:19.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.098" endtime="20201030 18:27:19.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:19.109" level="INFO">${RESULT} = [{'diff': 2.02800000000114e-06}, {'diff': 2.082999999999946e-06}, {'diff': 1.971999999999391e-06}, {'diff': 2.110999999999086e-06}, {'diff': 2.1660000000013613e-06}, {'diff': 2.098000000002459e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:19.107" endtime="20201030 18:27:19.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:19.113" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.02800000000114e-06, 2.082999999999946e-06, 1.971999999999391e-06, 2.110999999999086e-06, 2.1660000000013613e-06, 2.098000000002459e-06, 2.01400000000157e-06, 2.110999999999086e-06, 2.08299...</msg>
<status status="PASS" starttime="20201030 18:27:19.110" endtime="20201030 18:27:19.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.117" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:19.116" endtime="20201030 18:27:19.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.120" level="INFO">VALUE: [2.02800000000114e-06, 2.082999999999946e-06, 1.971999999999391e-06, 2.110999999999086e-06, 2.1660000000013613e-06, 2.098000000002459e-06, 2.01400000000157e-06, 2.110999999999086e-06, 2.082999999999946e-06, 2.02800000000114e-06, 2.0139999999981006e-06, 2.02800000000114e-06, 2.181000000000405e-06, 1.931000000000155e-06, 2.02800000000114e-06, 2.096999999999516e-06, 2.1520000000017914e-06, 2.02800000000114e-06, 1.9860000000024303e-06, 1.9999999999985307e-06, 2.208000000000071e-06, 2.1520000000017914e-06, 2.221999999999641e-06, 2.026999999998197e-06, 2.1110000000025553e-06]</msg>
<status status="PASS" starttime="20201030 18:27:19.118" endtime="20201030 18:27:19.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.113" endtime="20201030 18:27:19.121"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:19.125" endtime="20201030 18:27:19.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.124" endtime="20201030 18:27:19.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.122" endtime="20201030 18:27:19.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.769" endtime="20201030 18:27:19.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.768" endtime="20201030 18:27:19.146"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.154" endtime="20201030 18:27:19.163"></status>
</kw>
<msg timestamp="20201030 18:27:19.164" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:19.153" endtime="20201030 18:27:19.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.167" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:19.165" endtime="20201030 18:27:19.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.168" endtime="20201030 18:27:19.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.150" endtime="20201030 18:27:19.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.148" endtime="20201030 18:27:19.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.177" endtime="20201030 18:27:19.448"></status>
</kw>
<msg timestamp="20201030 18:27:19.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018843028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018845139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:19.176" endtime="20201030 18:27:19.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018843028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018845139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:19.451" endtime="20201030 18:27:19.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.456" endtime="20201030 18:27:19.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.173" endtime="20201030 18:27:19.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.171" endtime="20201030 18:27:19.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:19.473" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:27:19.459" endtime="20201030 18:27:19.473"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.474" endtime="20201030 18:27:19.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.479" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:19.478" endtime="20201030 18:27:19.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.482" level="INFO">VALUE: {'eventsource_diff': [0, 2.110999999999086e-06, 2.2639999999983507e-06, 2.082999999999946e-06, 2.181000000000405e-06, 2.000000000002e-06, 2.0549999999973367e-06, 2.1110000000025553e-06, 1.9589999999992946e-06, 1.957999999999821e-06, 2.235999999999211e-06, 1.9860000000024303e-06, 1.9999999999985307e-06, 1.9999999999985307e-06, 1.931000000000155e-06, 1.944000000000251e-06, 2.1110000000025553e-06, 2.0699999999998497e-06, 2.208000000000071e-06, 2.1949999999999747e-06, 2.082999999999946e-06, 2.1669999999973655e-06, 1.971999999999391e-06, 2.139000000001695e-06, 1.985999999998961e-06, 2.1110000000025553e-06, 2.0139999999981006e-06, 2.096999999999516e-06, 2.05600000000028e-06, 1.957999999999821e-06, 2.180000000000931e-06, 2.181000000000405e-06, 2.096999999999516e-06, 2.0699999999998497e-06, 2.0410000000012363e-06, 2.0979999999989896e-06, 2.110999999999086e-06, 2.139000000001695e-06, 2.137999999998752e-06, 2.2089999999995447e-06, 2.110999999999086e-06, 2.069000000000376e-06, 1.903000000001015e-06, 1.931000000000155e-06, 2.0410000000012363e-06, 2.1529999999977956e-06, 2.153000000001265e-06, 2.02800000000114e-06, 2.026999999998197e-06, 1.9729999999988646e-06], 'time': [0.018843028, 0.018845139, 0.018847403, 0.018849486, 0.018851667, 0.018853667, 0.018855722, 0.018857833, 0.018859792, 0.01886175, 0.018863986, 0.018865972, 0.018867972, 0.018869972, 0.018871903, 0.018873847, 0.018875958, 0.018878028, 0.018880236, 0.018882431, 0.018884514, 0.018886681, 0.018888653, 0.018890792, 0.018892778, 0.018894889, 0.018896903, 0.018899, 0.018901056, 0.018903014, 0.018905194, 0.018907375, 0.018909472, 0.018911542, 0.018913583, 0.018915681, 0.018917792, 0.018919931, 0.018922069, 0.018924278, 0.018926389, 0.018928458, 0.018930361, 0.018932292, 0.018934333, 0.018936486, 0.018938639, 0.018940667, 0.018942694, 0.018944667], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 2.110999999999086e-06, 2.2639999999983507e-06, 2.082999999999946e-06, 2.181000000000405e-06, 2.000000000002e-06, 2.0549999999973367e-06, 2.1110000000025553e-06, 1.9589999999992946e-06, 1.957999999999821e-06, 2.235999999999211e-06, 1.9860000000024303e-06, 1.9999999999985307e-06, 1.9999999999985307e-06, 1.931000000000155e-06, 1.944000000000251e-06, 2.1110000000025553e-06, 2.0699999999998497e-06, 2.208000000000071e-06, 2.1949999999999747e-06, 2.082999999999946e-06, 2.1669999999973655e-06, 1.971999999999391e-06, 2.139000000001695e-06, 1.985999999998961e-06, 2.1110000000025553e-06, 2.0139999999981006e-06, 2.096999999999516e-06, 2.05600000000028e-06, 1.957999999999821e-06, 2.180000000000931e-06, 2.181000000000405e-06, 2.096999999999516e-06, 2.0699999999998497e-06, 2.0410000000012363e-06, 2.0979999999989896e-06, 2.110999999999086e-06, 2.139000000001695e-06, 2.137999999998752e-06, 2.2089999999995447e-06, 2.110999999999086e-06, 2.069000000000376e-06, 1.903000000001015e-06, 1.931000000000155e-06, 2.0410000000012363e-06, 2.1529999999977956e-06, 2.153000000001265e-06, 2.02800000000114e-06, 2.026999999998197e-06, 1.9729999999988646e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:19.480" endtime="20201030 18:27:19.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.476" endtime="20201030 18:27:19.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:19.487" level="INFO">${RESULT} = [{'diff': 2.110999999999086e-06}, {'diff': 2.082999999999946e-06}, {'diff': 2.000000000002e-06}, {'diff': 2.1110000000025553e-06}, {'diff': 1.957999999999821e-06}, {'diff': 1.9860000000024303e-06}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:19.485" endtime="20201030 18:27:19.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:19.491" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.110999999999086e-06, 2.082999999999946e-06, 2.000000000002e-06, 2.1110000000025553e-06, 1.957999999999821e-06, 1.9860000000024303e-06, 1.9999999999985307e-06, 1.944000000000251e-06, 2.0699...</msg>
<status status="PASS" starttime="20201030 18:27:19.488" endtime="20201030 18:27:19.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.495" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:19.494" endtime="20201030 18:27:19.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.498" level="INFO">VALUE: [2.110999999999086e-06, 2.082999999999946e-06, 2.000000000002e-06, 2.1110000000025553e-06, 1.957999999999821e-06, 1.9860000000024303e-06, 1.9999999999985307e-06, 1.944000000000251e-06, 2.0699999999998497e-06, 2.1949999999999747e-06, 2.1669999999973655e-06, 2.139000000001695e-06, 2.1110000000025553e-06, 2.096999999999516e-06, 1.957999999999821e-06, 2.181000000000405e-06, 2.0699999999998497e-06, 2.0979999999989896e-06, 2.139000000001695e-06, 2.2089999999995447e-06, 2.069000000000376e-06, 1.931000000000155e-06, 2.1529999999977956e-06, 2.02800000000114e-06, 1.9729999999988646e-06]</msg>
<status status="PASS" starttime="20201030 18:27:19.496" endtime="20201030 18:27:19.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.492" endtime="20201030 18:27:19.499"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:19.502" endtime="20201030 18:27:19.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.501" endtime="20201030 18:27:19.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.500" endtime="20201030 18:27:19.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.147" endtime="20201030 18:27:19.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.146" endtime="20201030 18:27:19.523"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.531" endtime="20201030 18:27:19.540"></status>
</kw>
<msg timestamp="20201030 18:27:19.541" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:19.529" endtime="20201030 18:27:19.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.543" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:19.542" endtime="20201030 18:27:19.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.544" endtime="20201030 18:27:19.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.527" endtime="20201030 18:27:19.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.525" endtime="20201030 18:27:19.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.553" endtime="20201030 18:27:19.819"></status>
</kw>
<msg timestamp="20201030 18:27:19.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018316403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018316944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:19.552" endtime="20201030 18:27:19.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018316403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018316944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:19.821" endtime="20201030 18:27:19.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.827" endtime="20201030 18:27:19.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.549" endtime="20201030 18:27:19.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.548" endtime="20201030 18:27:19.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:19.844" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:27:19.831" endtime="20201030 18:27:19.844"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.845" endtime="20201030 18:27:19.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.850" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:19.849" endtime="20201030 18:27:19.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.854" level="INFO">VALUE: {'eventsource_diff': [0, 5.410000000032056e-07, 1.7089999999990446e-06, 2.0279999999976706e-06, 2.0410000000012363e-06, 2.02800000000114e-06, 2.1529999999977956e-06, 2.153000000001265e-06, 2.137999999998752e-06, 2.153000000001265e-06, 2.0699999999998497e-06, 2.069000000000376e-06, 1.971999999999391e-06, 2.2089999999995447e-06, 2.139000000001695e-06, 1.944000000000251e-06, 2.0139999999981006e-06, 2.1110000000025553e-06, 2.082999999999946e-06, 2.110999999999086e-06, 2.1249999999986557e-06, 2.04200000000071e-06, 2.1249999999986557e-06, 2.04200000000071e-06, 2.125000000002125e-06, 1.9999999999985307e-06, 2.1660000000013613e-06, 2.1529999999977956e-06, 2.000000000002e-06, 2.235999999999211e-06, 2.1949999999999747e-06, 2.110999999999086e-06, 2.180000000000931e-06, 2.0839999999994197e-06, 1.944000000000251e-06, 2.1249999999986557e-06, 2.181000000000405e-06, 1.930000000000681e-06, 2.0979999999989896e-06, 2.069000000000376e-06, 2.000000000002e-06, 2.082999999999946e-06, 2.1249999999986557e-06, 2.02800000000114e-06, 1.957999999999821e-06, 2.0139999999981006e-06, 2.02800000000114e-06, 2.235999999999211e-06, 2.167000000000835e-06, 2.153000000001265e-06, 2.208000000000071e-06], 'time': [0.018316403, 0.018316944, 0.018318653, 0.018320681, 0.018322722, 0.01832475, 0.018326903, 0.018329056, 0.018331194, 0.018333347, 0.018335417, 0.018337486, 0.018339458, 0.018341667, 0.018343806, 0.01834575, 0.018347764, 0.018349875, 0.018351958, 0.018354069, 0.018356194, 0.018358236, 0.018360361, 0.018362403, 0.018364528, 0.018366528, 0.018368694, 0.018370847, 0.018372847, 0.018375083, 0.018377278, 0.018379389, 0.018381569, 0.018383653, 0.018385597, 0.018387722, 0.018389903, 0.018391833, 0.018393931, 0.018396, 0.018398, 0.018400083, 0.018402208, 0.018404236, 0.018406194, 0.018408208, 0.018410236, 0.018412472, 0.018414639, 0.018416792, 0.018419], 'sourcediff': [0, 5.410000000032056e-07, 1.7089999999990446e-06, 2.0279999999976706e-06, 2.0410000000012363e-06, 2.02800000000114e-06, 2.1529999999977956e-06, 2.153000000001265e-06, 2.137999999998752e-06, 2.153000000001265e-06, 2.0699999999998497e-06, 2.069000000000376e-06, 1.971999999999391e-06, 2.2089999999995447e-06, 2.139000000001695e-06, 1.944000000000251e-06, 2.0139999999981006e-06, 2.1110000000025553e-06, 2.082999999999946e-06, 2.110999999999086e-06, 2.1249999999986557e-06, 2.04200000000071e-06, 2.1249999999986557e-06, 2.04200000000071e-06, 2.125000000002125e-06, 1.9999999999985307e-06, 2.1660000000013613e-06, 2.1529999999977956e-06, 2.000000000002e-06, 2.235999999999211e-06, 2.1949999999999747e-06, 2.110999999999086e-06, 2.180000000000931e-06, 2.0839999999994197e-06, 1.944000000000251e-06, 2.1249999999986557e-06, 2.181000000000405e-06, 1.930000000000681e-06, 2.0979999999989896e-06, 2.069000000000376e-06, 2.000000000002e-06, 2.082999999999946e-06, 2.1249999999986557e-06, 2.02800000000114e-06, 1.957999999999821e-06, 2.0139999999981006e-06, 2.02800000000114e-06, 2.235999999999211e-06, 2.167000000000835e-06, 2.153000000001265e-06, 2.208000000000071e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:19.851" endtime="20201030 18:27:19.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.848" endtime="20201030 18:27:19.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:19.858" level="INFO">${RESULT} = [{'diff': 5.410000000032056e-07}, {'diff': 2.0279999999976706e-06}, {'diff': 2.02800000000114e-06}, {'diff': 2.153000000001265e-06}, {'diff': 2.153000000001265e-06}, {'diff': 2.069000000000376e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:19.855" endtime="20201030 18:27:19.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:19.861" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.410000000032056e-07, 2.0279999999976706e-06, 2.02800000000114e-06, 2.153000000001265e-06, 2.153000000001265e-06, 2.069000000000376e-06, 2.2089999999995447e-06, 1.944000000000251e-06, 2.111...</msg>
<status status="PASS" starttime="20201030 18:27:19.859" endtime="20201030 18:27:19.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.865" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:19.864" endtime="20201030 18:27:19.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.868" level="INFO">VALUE: [5.410000000032056e-07, 2.0279999999976706e-06, 2.02800000000114e-06, 2.153000000001265e-06, 2.153000000001265e-06, 2.069000000000376e-06, 2.2089999999995447e-06, 1.944000000000251e-06, 2.1110000000025553e-06, 2.110999999999086e-06, 2.04200000000071e-06, 2.04200000000071e-06, 1.9999999999985307e-06, 2.1529999999977956e-06, 2.235999999999211e-06, 2.110999999999086e-06, 2.0839999999994197e-06, 2.1249999999986557e-06, 1.930000000000681e-06, 2.069000000000376e-06, 2.082999999999946e-06, 2.02800000000114e-06, 2.0139999999981006e-06, 2.235999999999211e-06, 2.153000000001265e-06]</msg>
<status status="PASS" starttime="20201030 18:27:19.866" endtime="20201030 18:27:19.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.862" endtime="20201030 18:27:19.869"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:19.873" endtime="20201030 18:27:19.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.871" endtime="20201030 18:27:19.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.870" endtime="20201030 18:27:19.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.524" endtime="20201030 18:27:19.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.523" endtime="20201030 18:27:19.893"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.901" endtime="20201030 18:27:19.911"></status>
</kw>
<msg timestamp="20201030 18:27:19.911" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:19.900" endtime="20201030 18:27:19.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.914" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:19.912" endtime="20201030 18:27:19.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.915" endtime="20201030 18:27:19.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.897" endtime="20201030 18:27:19.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.896" endtime="20201030 18:27:19.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.925" endtime="20201030 18:27:20.195"></status>
</kw>
<msg timestamp="20201030 18:27:20.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018704264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018706347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:19.923" endtime="20201030 18:27:20.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018704264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018706347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:20.198" endtime="20201030 18:27:20.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.203" endtime="20201030 18:27:20.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.921" endtime="20201030 18:27:20.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.919" endtime="20201030 18:27:20.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:20.219" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:27:20.206" endtime="20201030 18:27:20.219"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.220" endtime="20201030 18:27:20.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.225" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:20.224" endtime="20201030 18:27:20.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.228" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 2.082999999999946e-06, 2.0419999999972405e-06, 2.069000000000376e-06, 2.0699999999998497e-06, 2.1110000000025553e-06, 2.235999999999211e-06, 2.235999999999211e-06, 2.082999999999946e-06, 2.0839999999994197e-06, 2.221999999999641e-06, 1.971999999999391e-06, 2.0970000000029854e-06, 2.2369999999986845e-06, 2.1660000000013613e-06, 2.1249999999986557e-06, 2.1249999999986557e-06, 2.1949999999999747e-06, 2.000000000002e-06, 2.0139999999981006e-06, 2.1520000000017914e-06, 2.1949999999999747e-06, 2.040999999997767e-06, 2.01400000000157e-06, 2.1249999999986557e-06, 2.084000000002889e-06, 1.985999999998961e-06, 2.02800000000114e-06, 2.082999999999946e-06, 2.1939999999970317e-06, 2.223000000002584e-06, 2.151999999998322e-06, 2.0979999999989896e-06, 2.0130000000020964e-06, 2.1119999999985595e-06, 2.0410000000012363e-06, 2.04200000000071e-06, 1.957999999999821e-06, 2.181000000000405e-06, 2.1389999999982257e-06, 2.235999999999211e-06, 2.153000000001265e-06, 2.221999999999641e-06, 2.096999999999516e-06, 2.221999999999641e-06, 2.2089999999995447e-06, 2.125000000002125e-06, 2.040999999997767e-06, 1.959000000002764e-06, 2.012999999998627e-06], 'time': [0.018704264, 0.018706347, 0.018708389, 0.018710458, 0.018712528, 0.018714639, 0.018716875, 0.018719111, 0.018721194, 0.018723278, 0.0187255, 0.018727472, 0.018729569, 0.018731806, 0.018733972, 0.018736097, 0.018738222, 0.018740417, 0.018742417, 0.018744431, 0.018746583, 0.018748778, 0.018750819, 0.018752833, 0.018754958, 0.018757042, 0.018759028, 0.018761056, 0.018763139, 0.018765333, 0.018767556, 0.018769708, 0.018771806, 0.018773819, 0.018775931, 0.018777972, 0.018780014, 0.018781972, 0.018784153, 0.018786292, 0.018788528, 0.018790681, 0.018792903, 0.018795, 0.018797222, 0.018799431, 0.018801556, 0.018803597, 0.018805556, 0.018807569], 'sourcediff': [0, 2.082999999999946e-06, 2.0419999999972405e-06, 2.069000000000376e-06, 2.0699999999998497e-06, 2.1110000000025553e-06, 2.235999999999211e-06, 2.235999999999211e-06, 2.082999999999946e-06, 2.0839999999994197e-06, 2.221999999999641e-06, 1.971999999999391e-06, 2.0970000000029854e-06, 2.2369999999986845e-06, 2.1660000000013613e-06, 2.1249999999986557e-06, 2.1249999999986557e-06, 2.1949999999999747e-06, 2.000000000002e-06, 2.0139999999981006e-06, 2.1520000000017914e-06, 2.1949999999999747e-06, 2.040999999997767e-06, 2.01400000000157e-06, 2.1249999999986557e-06, 2.084000000002889e-06, 1.985999999998961e-06, 2.02800000000114e-06, 2.082999999999946e-06, 2.1939999999970317e-06, 2.223000000002584e-06, 2.151999999998322e-06, 2.0979999999989896e-06, 2.0130000000020964e-06, 2.1119999999985595e-06, 2.0410000000012363e-06, 2.04200000000071e-06, 1.957999999999821e-06, 2.181000000000405e-06, 2.1389999999982257e-06, 2.235999999999211e-06, 2.153000000001265e-06, 2.221999999999641e-06, 2.096999999999516e-06, 2.221999999999641e-06, 2.2089999999995447e-06, 2.125000000002125e-06, 2.040999999997767e-06, 1.959000000002764e-06, 2.012999999998627e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:20.226" endtime="20201030 18:27:20.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.222" endtime="20201030 18:27:20.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:20.233" level="INFO">${RESULT} = [{'diff': 2.082999999999946e-06}, {'diff': 2.069000000000376e-06}, {'diff': 2.1110000000025553e-06}, {'diff': 2.235999999999211e-06}, {'diff': 2.0839999999994197e-06}, {'diff': 1.971999999999391e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:20.230" endtime="20201030 18:27:20.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:20.236" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.082999999999946e-06, 2.069000000000376e-06, 2.1110000000025553e-06, 2.235999999999211e-06, 2.0839999999994197e-06, 1.971999999999391e-06, 2.2369999999986845e-06, 2.1249999999986557e-06, 2....</msg>
<status status="PASS" starttime="20201030 18:27:20.234" endtime="20201030 18:27:20.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.240" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:20.239" endtime="20201030 18:27:20.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.243" level="INFO">VALUE: [2.082999999999946e-06, 2.069000000000376e-06, 2.1110000000025553e-06, 2.235999999999211e-06, 2.0839999999994197e-06, 1.971999999999391e-06, 2.2369999999986845e-06, 2.1249999999986557e-06, 2.1949999999999747e-06, 2.0139999999981006e-06, 2.1949999999999747e-06, 2.01400000000157e-06, 2.084000000002889e-06, 2.02800000000114e-06, 2.1939999999970317e-06, 2.151999999998322e-06, 2.0130000000020964e-06, 2.0410000000012363e-06, 1.957999999999821e-06, 2.1389999999982257e-06, 2.153000000001265e-06, 2.096999999999516e-06, 2.2089999999995447e-06, 2.040999999997767e-06, 2.012999999998627e-06]</msg>
<status status="PASS" starttime="20201030 18:27:20.242" endtime="20201030 18:27:20.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.237" endtime="20201030 18:27:20.244"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:20.248" endtime="20201030 18:27:20.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.246" endtime="20201030 18:27:20.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.245" endtime="20201030 18:27:20.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.894" endtime="20201030 18:27:20.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.894" endtime="20201030 18:27:20.269"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.277" endtime="20201030 18:27:20.287"></status>
</kw>
<msg timestamp="20201030 18:27:20.287" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:20.275" endtime="20201030 18:27:20.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.290" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:20.288" endtime="20201030 18:27:20.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.291" endtime="20201030 18:27:20.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.273" endtime="20201030 18:27:20.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.271" endtime="20201030 18:27:20.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.300" endtime="20201030 18:27:20.565"></status>
</kw>
<msg timestamp="20201030 18:27:20.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018470694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018472792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:20.299" endtime="20201030 18:27:20.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018470694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018472792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:20.568" endtime="20201030 18:27:20.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.573" endtime="20201030 18:27:20.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.296" endtime="20201030 18:27:20.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.294" endtime="20201030 18:27:20.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:20.597" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:27:20.584" endtime="20201030 18:27:20.598"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.599" endtime="20201030 18:27:20.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.604" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:20.603" endtime="20201030 18:27:20.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.607" level="INFO">VALUE: {'eventsource_diff': [0, 2.0979999999989896e-06, 1.9580000000032904e-06, 2.0279999999976706e-06, 1.944000000000251e-06, 2.181000000000405e-06, 2.153000000001265e-06, 1.9999999999985307e-06, 2.012999999998627e-06, 2.181000000000405e-06, 1.9720000000028604e-06, 2.2639999999983507e-06, 1.917000000000585e-06, 1.985999999998961e-06, 2.04200000000071e-06, 2.082999999999946e-06, 2.221999999999641e-06, 2.208000000000071e-06, 2.01400000000157e-06, 2.0139999999981006e-06, 2.110999999999086e-06, 2.209000000003014e-06, 2.1389999999982257e-06, 1.971999999999391e-06, 2.208000000000071e-06, 1.957999999999821e-06, 1.973000000002334e-06, 2.040999999997767e-06, 2.04200000000071e-06, 2.208000000000071e-06, 2.02800000000114e-06, 2.0279999999976706e-06, 2.180000000000931e-06, 2.0979999999989896e-06, 2.180000000000931e-06, 2.110999999999086e-06, 2.2089999999995447e-06, 2.194000000000501e-06, 1.9449999999997247e-06, 2.0970000000029854e-06, 2.165999999997892e-06, 2.167000000000835e-06, 2.167000000000835e-06, 2.0139999999981006e-06, 2.082999999999946e-06, 2.096999999999516e-06, 1.9860000000024303e-06, 2.0699999999998497e-06, 2.208000000000071e-06, 2.110999999999086e-06], 'time': [0.018470694, 0.018472792, 0.01847475, 0.018476778, 0.018478722, 0.018480903, 0.018483056, 0.018485056, 0.018487069, 0.01848925, 0.018491222, 0.018493486, 0.018495403, 0.018497389, 0.018499431, 0.018501514, 0.018503736, 0.018505944, 0.018507958, 0.018509972, 0.018512083, 0.018514292, 0.018516431, 0.018518403, 0.018520611, 0.018522569, 0.018524542, 0.018526583, 0.018528625, 0.018530833, 0.018532861, 0.018534889, 0.018537069, 0.018539167, 0.018541347, 0.018543458, 0.018545667, 0.018547861, 0.018549806, 0.018551903, 0.018554069, 0.018556236, 0.018558403, 0.018560417, 0.0185625, 0.018564597, 0.018566583, 0.018568653, 0.018570861, 0.018572972], 'sourcediff': [0, 2.0979999999989896e-06, 1.9580000000032904e-06, 2.0279999999976706e-06, 1.944000000000251e-06, 2.181000000000405e-06, 2.153000000001265e-06, 1.9999999999985307e-06, 2.012999999998627e-06, 2.181000000000405e-06, 1.9720000000028604e-06, 2.2639999999983507e-06, 1.917000000000585e-06, 1.985999999998961e-06, 2.04200000000071e-06, 2.082999999999946e-06, 2.221999999999641e-06, 2.208000000000071e-06, 2.01400000000157e-06, 2.0139999999981006e-06, 2.110999999999086e-06, 2.209000000003014e-06, 2.1389999999982257e-06, 1.971999999999391e-06, 2.208000000000071e-06, 1.957999999999821e-06, 1.973000000002334e-06, 2.040999999997767e-06, 2.04200000000071e-06, 2.208000000000071e-06, 2.02800000000114e-06, 2.0279999999976706e-06, 2.180000000000931e-06, 2.0979999999989896e-06, 2.180000000000931e-06, 2.110999999999086e-06, 2.2089999999995447e-06, 2.194000000000501e-06, 1.9449999999997247e-06, 2.0970000000029854e-06, 2.165999999997892e-06, 2.167000000000835e-06, 2.167000000000835e-06, 2.0139999999981006e-06, 2.082999999999946e-06, 2.096999999999516e-06, 1.9860000000024303e-06, 2.0699999999998497e-06, 2.208000000000071e-06, 2.110999999999086e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:20.605" endtime="20201030 18:27:20.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.601" endtime="20201030 18:27:20.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:20.612" level="INFO">${RESULT} = [{'diff': 2.0979999999989896e-06}, {'diff': 2.0279999999976706e-06}, {'diff': 2.181000000000405e-06}, {'diff': 1.9999999999985307e-06}, {'diff': 2.181000000000405e-06}, {'diff': 2.2639999999983507e-06...</msg>
<status status="PASS" starttime="20201030 18:27:20.609" endtime="20201030 18:27:20.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:20.616" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.0979999999989896e-06, 2.0279999999976706e-06, 2.181000000000405e-06, 1.9999999999985307e-06, 2.181000000000405e-06, 2.2639999999983507e-06, 1.985999999998961e-06, 2.082999999999946e-06, 2....</msg>
<status status="PASS" starttime="20201030 18:27:20.613" endtime="20201030 18:27:20.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.620" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:20.619" endtime="20201030 18:27:20.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.623" level="INFO">VALUE: [2.0979999999989896e-06, 2.0279999999976706e-06, 2.181000000000405e-06, 1.9999999999985307e-06, 2.181000000000405e-06, 2.2639999999983507e-06, 1.985999999998961e-06, 2.082999999999946e-06, 2.208000000000071e-06, 2.0139999999981006e-06, 2.209000000003014e-06, 1.971999999999391e-06, 1.957999999999821e-06, 2.040999999997767e-06, 2.208000000000071e-06, 2.0279999999976706e-06, 2.0979999999989896e-06, 2.110999999999086e-06, 2.194000000000501e-06, 2.0970000000029854e-06, 2.167000000000835e-06, 2.0139999999981006e-06, 2.096999999999516e-06, 2.0699999999998497e-06, 2.110999999999086e-06]</msg>
<status status="PASS" starttime="20201030 18:27:20.621" endtime="20201030 18:27:20.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.617" endtime="20201030 18:27:20.624"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:20.628" endtime="20201030 18:27:20.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.626" endtime="20201030 18:27:20.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.625" endtime="20201030 18:27:20.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.270" endtime="20201030 18:27:20.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.269" endtime="20201030 18:27:20.649"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.657" endtime="20201030 18:27:20.667"></status>
</kw>
<msg timestamp="20201030 18:27:20.668" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:20.656" endtime="20201030 18:27:20.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.670" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:20.669" endtime="20201030 18:27:20.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.672" endtime="20201030 18:27:20.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.653" endtime="20201030 18:27:20.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.651" endtime="20201030 18:27:20.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.681" endtime="20201030 18:27:20.946"></status>
</kw>
<msg timestamp="20201030 18:27:20.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019202444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019202986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:20.679" endtime="20201030 18:27:20.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019202444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019202986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:20.949" endtime="20201030 18:27:20.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.954" endtime="20201030 18:27:20.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.677" endtime="20201030 18:27:20.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.675" endtime="20201030 18:27:20.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:20.972" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:27:20.957" endtime="20201030 18:27:20.972"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.973" endtime="20201030 18:27:20.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.978" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:20.977" endtime="20201030 18:27:20.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.981" level="INFO">VALUE: {'eventsource_diff': [0, 5.419999999992098e-07, 1.653000000000765e-06, 2.180000000000931e-06, 1.9729999999988646e-06, 2.096999999999516e-06, 2.208000000000071e-06, 2.02800000000114e-06, 2.069000000000376e-06, 2.04200000000071e-06, 2.096999999999516e-06, 2.1389999999982257e-06, 2.05600000000028e-06, 1.957999999999821e-06, 2.181000000000405e-06, 2.082999999999946e-06, 2.221999999999641e-06, 2.2360000000026803e-06, 2.0419999999972405e-06, 2.194000000000501e-06, 2.223000000002584e-06, 2.151999999998322e-06, 2.167000000000835e-06, 2.0699999999998497e-06, 2.040999999997767e-06, 1.959000000002764e-06, 2.151999999998322e-06, 1.9589999999992946e-06, 2.000000000002e-06, 1.985999999998961e-06, 2.02800000000114e-06, 2.180000000000931e-06, 1.9449999999997247e-06, 2.110999999999086e-06, 1.985999999998961e-06, 2.1660000000013613e-06, 2.1389999999982257e-06, 2.0699999999998497e-06, 2.000000000002e-06, 2.1529999999977956e-06, 2.1380000000022215e-06, 2.04200000000071e-06, 2.096999999999516e-06, 2.2089999999995447e-06, 2.194000000000501e-06, 2.1389999999982257e-06, 2.25000000000225e-06, 2.082999999999946e-06, 2.1249999999986557e-06, 2.181000000000405e-06, 2.1529999999977956e-06], 'time': [0.019202444, 0.019202986, 0.019204639, 0.019206819, 0.019208792, 0.019210889, 0.019213097, 0.019215125, 0.019217194, 0.019219236, 0.019221333, 0.019223472, 0.019225528, 0.019227486, 0.019229667, 0.01923175, 0.019233972, 0.019236208, 0.01923825, 0.019240444, 0.019242667, 0.019244819, 0.019246986, 0.019249056, 0.019251097, 0.019253056, 0.019255208, 0.019257167, 0.019259167, 0.019261153, 0.019263181, 0.019265361, 0.019267306, 0.019269417, 0.019271403, 0.019273569, 0.019275708, 0.019277778, 0.019279778, 0.019281931, 0.019284069, 0.019286111, 0.019288208, 0.019290417, 0.019292611, 0.01929475, 0.019297, 0.019299083, 0.019301208, 0.019303389, 0.019305542], 'sourcediff': [0, 5.419999999992098e-07, 1.653000000000765e-06, 2.180000000000931e-06, 1.9729999999988646e-06, 2.096999999999516e-06, 2.208000000000071e-06, 2.02800000000114e-06, 2.069000000000376e-06, 2.04200000000071e-06, 2.096999999999516e-06, 2.1389999999982257e-06, 2.05600000000028e-06, 1.957999999999821e-06, 2.181000000000405e-06, 2.082999999999946e-06, 2.221999999999641e-06, 2.2360000000026803e-06, 2.0419999999972405e-06, 2.194000000000501e-06, 2.223000000002584e-06, 2.151999999998322e-06, 2.167000000000835e-06, 2.0699999999998497e-06, 2.040999999997767e-06, 1.959000000002764e-06, 2.151999999998322e-06, 1.9589999999992946e-06, 2.000000000002e-06, 1.985999999998961e-06, 2.02800000000114e-06, 2.180000000000931e-06, 1.9449999999997247e-06, 2.110999999999086e-06, 1.985999999998961e-06, 2.1660000000013613e-06, 2.1389999999982257e-06, 2.0699999999998497e-06, 2.000000000002e-06, 2.1529999999977956e-06, 2.1380000000022215e-06, 2.04200000000071e-06, 2.096999999999516e-06, 2.2089999999995447e-06, 2.194000000000501e-06, 2.1389999999982257e-06, 2.25000000000225e-06, 2.082999999999946e-06, 2.1249999999986557e-06, 2.181000000000405e-06, 2.1529999999977956e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:20.979" endtime="20201030 18:27:20.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.975" endtime="20201030 18:27:20.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:20.986" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 2.180000000000931e-06}, {'diff': 2.096999999999516e-06}, {'diff': 2.02800000000114e-06}, {'diff': 2.04200000000071e-06}, {'diff': 2.1389999999982257e-06}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:20.983" endtime="20201030 18:27:20.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:20.989" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 2.180000000000931e-06, 2.096999999999516e-06, 2.02800000000114e-06, 2.04200000000071e-06, 2.1389999999982257e-06, 1.957999999999821e-06, 2.082999999999946e-06, 2.23600...</msg>
<status status="PASS" starttime="20201030 18:27:20.987" endtime="20201030 18:27:20.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.993" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:20.992" endtime="20201030 18:27:20.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.996" level="INFO">VALUE: [5.419999999992098e-07, 2.180000000000931e-06, 2.096999999999516e-06, 2.02800000000114e-06, 2.04200000000071e-06, 2.1389999999982257e-06, 1.957999999999821e-06, 2.082999999999946e-06, 2.2360000000026803e-06, 2.194000000000501e-06, 2.151999999998322e-06, 2.0699999999998497e-06, 1.959000000002764e-06, 1.9589999999992946e-06, 1.985999999998961e-06, 2.180000000000931e-06, 2.110999999999086e-06, 2.1660000000013613e-06, 2.0699999999998497e-06, 2.1529999999977956e-06, 2.04200000000071e-06, 2.2089999999995447e-06, 2.1389999999982257e-06, 2.082999999999946e-06, 2.181000000000405e-06]</msg>
<status status="PASS" starttime="20201030 18:27:20.994" endtime="20201030 18:27:20.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.990" endtime="20201030 18:27:20.997"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:21.000" endtime="20201030 18:27:21.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.999" endtime="20201030 18:27:21.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.998" endtime="20201030 18:27:21.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.650" endtime="20201030 18:27:21.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.649" endtime="20201030 18:27:21.021"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.029" endtime="20201030 18:27:21.039"></status>
</kw>
<msg timestamp="20201030 18:27:21.040" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:21.027" endtime="20201030 18:27:21.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.044" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:21.041" endtime="20201030 18:27:21.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.046" endtime="20201030 18:27:21.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.025" endtime="20201030 18:27:21.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.023" endtime="20201030 18:27:21.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.057" endtime="20201030 18:27:21.322"></status>
</kw>
<msg timestamp="20201030 18:27:21.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018442347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018442889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:21.055" endtime="20201030 18:27:21.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018442347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018442889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:21.325" endtime="20201030 18:27:21.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.331" endtime="20201030 18:27:21.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.052" endtime="20201030 18:27:21.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.050" endtime="20201030 18:27:21.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:21.347" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:27:21.334" endtime="20201030 18:27:21.348"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.349" endtime="20201030 18:27:21.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.354" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:21.353" endtime="20201030 18:27:21.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.357" level="INFO">VALUE: {'eventsource_diff': [0, 5.419999999992098e-07, 1.7359999999987108e-06, 1.9860000000024303e-06, 2.1249999999986557e-06, 2.0699999999998497e-06, 1.9999999999985307e-06, 2.0970000000029854e-06, 1.971999999999391e-06, 2.194000000000501e-06, 2.0559999999968104e-06, 2.208000000000071e-06, 2.000000000002e-06, 1.985999999998961e-06, 1.9589999999992946e-06, 2.000000000002e-06, 2.180000000000931e-06, 1.9449999999997247e-06, 2.1529999999977956e-06, 2.069000000000376e-06, 1.985999999998961e-06, 2.181000000000405e-06, 2.221999999999641e-06, 1.957999999999821e-06, 2.2360000000026803e-06, 1.985999999998961e-06, 2.153000000001265e-06, 2.235999999999211e-06, 1.9999999999985307e-06, 2.000000000002e-06, 2.1249999999986557e-06, 2.153000000001265e-06, 2.0139999999981006e-06, 2.167000000000835e-06, 2.194000000000501e-06, 2.167000000000835e-06, 1.957999999999821e-06, 2.1249999999986557e-06, 2.01400000000157e-06, 2.1389999999982257e-06, 2.01400000000157e-06, 2.096999999999516e-06, 2.1529999999977956e-06, 2.208000000000071e-06, 2.0699999999998497e-06, 2.0830000000034155e-06, 1.985999999998961e-06, 2.0279999999976706e-06, 1.944000000000251e-06, 1.9449999999997247e-06, 2.0830000000034155e-06], 'time': [0.018442347, 0.018442889, 0.018444625, 0.018446611, 0.018448736, 0.018450806, 0.018452806, 0.018454903, 0.018456875, 0.018459069, 0.018461125, 0.018463333, 0.018465333, 0.018467319, 0.018469278, 0.018471278, 0.018473458, 0.018475403, 0.018477556, 0.018479625, 0.018481611, 0.018483792, 0.018486014, 0.018487972, 0.018490208, 0.018492194, 0.018494347, 0.018496583, 0.018498583, 0.018500583, 0.018502708, 0.018504861, 0.018506875, 0.018509042, 0.018511236, 0.018513403, 0.018515361, 0.018517486, 0.0185195, 0.018521639, 0.018523653, 0.01852575, 0.018527903, 0.018530111, 0.018532181, 0.018534264, 0.01853625, 0.018538278, 0.018540222, 0.018542167, 0.01854425], 'sourcediff': [0, 5.419999999992098e-07, 1.7359999999987108e-06, 1.9860000000024303e-06, 2.1249999999986557e-06, 2.0699999999998497e-06, 1.9999999999985307e-06, 2.0970000000029854e-06, 1.971999999999391e-06, 2.194000000000501e-06, 2.0559999999968104e-06, 2.208000000000071e-06, 2.000000000002e-06, 1.985999999998961e-06, 1.9589999999992946e-06, 2.000000000002e-06, 2.180000000000931e-06, 1.9449999999997247e-06, 2.1529999999977956e-06, 2.069000000000376e-06, 1.985999999998961e-06, 2.181000000000405e-06, 2.221999999999641e-06, 1.957999999999821e-06, 2.2360000000026803e-06, 1.985999999998961e-06, 2.153000000001265e-06, 2.235999999999211e-06, 1.9999999999985307e-06, 2.000000000002e-06, 2.1249999999986557e-06, 2.153000000001265e-06, 2.0139999999981006e-06, 2.167000000000835e-06, 2.194000000000501e-06, 2.167000000000835e-06, 1.957999999999821e-06, 2.1249999999986557e-06, 2.01400000000157e-06, 2.1389999999982257e-06, 2.01400000000157e-06, 2.096999999999516e-06, 2.1529999999977956e-06, 2.208000000000071e-06, 2.0699999999998497e-06, 2.0830000000034155e-06, 1.985999999998961e-06, 2.0279999999976706e-06, 1.944000000000251e-06, 1.9449999999997247e-06, 2.0830000000034155e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:21.355" endtime="20201030 18:27:21.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.351" endtime="20201030 18:27:21.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:21.361" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 1.9860000000024303e-06}, {'diff': 2.0699999999998497e-06}, {'diff': 2.0970000000029854e-06}, {'diff': 2.194000000000501e-06}, {'diff': 2.208000000000071e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:21.359" endtime="20201030 18:27:21.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:21.364" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 1.9860000000024303e-06, 2.0699999999998497e-06, 2.0970000000029854e-06, 2.194000000000501e-06, 2.208000000000071e-06, 1.985999999998961e-06, 2.000000000002e-06, 1.9449...</msg>
<status status="PASS" starttime="20201030 18:27:21.362" endtime="20201030 18:27:21.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.369" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:21.368" endtime="20201030 18:27:21.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.371" level="INFO">VALUE: [5.419999999992098e-07, 1.9860000000024303e-06, 2.0699999999998497e-06, 2.0970000000029854e-06, 2.194000000000501e-06, 2.208000000000071e-06, 1.985999999998961e-06, 2.000000000002e-06, 1.9449999999997247e-06, 2.069000000000376e-06, 2.181000000000405e-06, 1.957999999999821e-06, 1.985999999998961e-06, 2.235999999999211e-06, 2.000000000002e-06, 2.153000000001265e-06, 2.167000000000835e-06, 2.167000000000835e-06, 2.1249999999986557e-06, 2.1389999999982257e-06, 2.096999999999516e-06, 2.208000000000071e-06, 2.0830000000034155e-06, 2.0279999999976706e-06, 1.9449999999997247e-06]</msg>
<status status="PASS" starttime="20201030 18:27:21.370" endtime="20201030 18:27:21.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.365" endtime="20201030 18:27:21.372"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:21.376" endtime="20201030 18:27:21.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.374" endtime="20201030 18:27:21.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.373" endtime="20201030 18:27:21.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.022" endtime="20201030 18:27:21.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.021" endtime="20201030 18:27:21.397"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.406" endtime="20201030 18:27:21.415"></status>
</kw>
<msg timestamp="20201030 18:27:21.416" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:21.404" endtime="20201030 18:27:21.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.418" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:21.417" endtime="20201030 18:27:21.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.419" endtime="20201030 18:27:21.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.401" endtime="20201030 18:27:21.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.399" endtime="20201030 18:27:21.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.428" endtime="20201030 18:27:21.695"></status>
</kw>
<msg timestamp="20201030 18:27:21.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019419417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019419958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:21.427" endtime="20201030 18:27:21.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019419417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019419958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:21.698" endtime="20201030 18:27:21.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.704" endtime="20201030 18:27:21.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.424" endtime="20201030 18:27:21.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.423" endtime="20201030 18:27:21.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:21.720" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:27:21.707" endtime="20201030 18:27:21.720"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.721" endtime="20201030 18:27:21.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.726" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:21.725" endtime="20201030 18:27:21.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.729" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING'], 'source_diff': [0, 5.409999999997361e-07, 1.5420000000002099e-06, 1.944000000000251e-06, 2.1389999999982257e-06, 2.0839999999994197e-06, 2.194000000000501e-06, 2.04200000000071e-06, 1.957999999999821e-06, 2.0139999999981006e-06, 2.181000000000405e-06, 2.0970000000029854e-06, 1.957999999999821e-06, 2.0279999999976706e-06, 2.069000000000376e-06, 2.2229999999991146e-06, 2.0130000000020964e-06, 1.9729999999988646e-06, 2.069000000000376e-06, 2.1249999999986557e-06, 2.167000000000835e-06, 2.139000000001695e-06, 2.221999999999641e-06, 2.069000000000376e-06, 2.2229999999991146e-06, 1.944000000000251e-06, 1.971999999999391e-06, 2.181000000000405e-06, 1.9999999999985307e-06, 2.096999999999516e-06, 2.194000000000501e-06, 2.112000000002029e-06, 1.9999999999985307e-06, 2.194000000000501e-06, 2.110999999999086e-06, 2.000000000002e-06, 1.957999999999821e-06, 2.2499999999987808e-06, 2.167000000000835e-06, 2.05600000000028e-06, 2.040999999997767e-06, 2.153000000001265e-06, 2.139000000001695e-06, 2.2639999999983507e-06, 1.985999999998961e-06, 2.208000000000071e-06, 2.01400000000157e-06, 2.153000000001265e-06, 2.1809999999969354e-06, 2.194000000000501e-06, 1.9860000000024303e-06], 'time': [0.019419417, 0.019419958, 0.0194215, 0.019423444, 0.019425583, 0.019427667, 0.019429861, 0.019431903, 0.019433861, 0.019435875, 0.019438056, 0.019440153, 0.019442111, 0.019444139, 0.019446208, 0.019448431, 0.019450444, 0.019452417, 0.019454486, 0.019456611, 0.019458778, 0.019460917, 0.019463139, 0.019465208, 0.019467431, 0.019469375, 0.019471347, 0.019473528, 0.019475528, 0.019477625, 0.019479819, 0.019481931, 0.019483931, 0.019486125, 0.019488236, 0.019490236, 0.019492194, 0.019494444, 0.019496611, 0.019498667, 0.019500708, 0.019502861, 0.019505, 0.019507264, 0.01950925, 0.019511458, 0.019513472, 0.019515625, 0.019517806, 0.01952, 0.019521986], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 5.409999999997361e-07, 1.5420000000002099e-06, 1.944000000000251e-06, 2.1389999999982257e-06, 2.0839999999994197e-06, 2.194000000000501e-06, 2.04200000000071e-06, 1.957999999999821e-06, 2.0139999999981006e-06, 2.181000000000405e-06, 2.0970000000029854e-06, 1.957999999999821e-06, 2.0279999999976706e-06, 2.069000000000376e-06, 2.2229999999991146e-06, 2.0130000000020964e-06, 1.9729999999988646e-06, 2.069000000000376e-06, 2.1249999999986557e-06, 2.167000000000835e-06, 2.139000000001695e-06, 2.221999999999641e-06, 2.069000000000376e-06, 2.2229999999991146e-06, 1.944000000000251e-06, 1.971999999999391e-06, 2.181000000000405e-06, 1.9999999999985307e-06, 2.096999999999516e-06, 2.194000000000501e-06, 2.112000000002029e-06, 1.9999999999985307e-06, 2.194000000000501e-06, 2.110999999999086e-06, 2.000000000002e-06, 1.957999999999821e-06, 2.2499999999987808e-06, 2.167000000000835e-06, 2.05600000000028e-06, 2.040999999997767e-06, 2.153000000001265e-06, 2.139000000001695e-06, 2.2639999999983507e-06, 1.985999999998961e-06, 2.208000000000071e-06, 2.01400000000157e-06, 2.153000000001265e-06, 2.1809999999969354e-06, 2.194000000000501e-06, 1.9860000000024303e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:21.727" endtime="20201030 18:27:21.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.723" endtime="20201030 18:27:21.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:21.734" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 1.944000000000251e-06}, {'diff': 2.0839999999994197e-06}, {'diff': 2.04200000000071e-06}, {'diff': 2.0139999999981006e-06}, {'diff': 2.0970000000029854e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:21.732" endtime="20201030 18:27:21.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:21.737" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 1.944000000000251e-06, 2.0839999999994197e-06, 2.04200000000071e-06, 2.0139999999981006e-06, 2.0970000000029854e-06, 2.0279999999976706e-06, 2.2229999999991146e-06, 1....</msg>
<status status="PASS" starttime="20201030 18:27:21.735" endtime="20201030 18:27:21.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.742" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:21.741" endtime="20201030 18:27:21.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.745" level="INFO">VALUE: [5.409999999997361e-07, 1.944000000000251e-06, 2.0839999999994197e-06, 2.04200000000071e-06, 2.0139999999981006e-06, 2.0970000000029854e-06, 2.0279999999976706e-06, 2.2229999999991146e-06, 1.9729999999988646e-06, 2.1249999999986557e-06, 2.139000000001695e-06, 2.069000000000376e-06, 1.944000000000251e-06, 2.181000000000405e-06, 2.096999999999516e-06, 2.112000000002029e-06, 2.194000000000501e-06, 2.000000000002e-06, 2.2499999999987808e-06, 2.05600000000028e-06, 2.153000000001265e-06, 2.2639999999983507e-06, 2.208000000000071e-06, 2.153000000001265e-06, 2.194000000000501e-06]</msg>
<status status="PASS" starttime="20201030 18:27:21.743" endtime="20201030 18:27:21.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.738" endtime="20201030 18:27:21.746"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:21.749" endtime="20201030 18:27:21.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.748" endtime="20201030 18:27:21.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.747" endtime="20201030 18:27:21.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.397" endtime="20201030 18:27:21.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.397" endtime="20201030 18:27:21.770"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.778" endtime="20201030 18:27:21.788"></status>
</kw>
<msg timestamp="20201030 18:27:21.788" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:21.776" endtime="20201030 18:27:21.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.791" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:21.789" endtime="20201030 18:27:21.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.792" endtime="20201030 18:27:21.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.774" endtime="20201030 18:27:21.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.772" endtime="20201030 18:27:21.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.801" endtime="20201030 18:27:22.066"></status>
</kw>
<msg timestamp="20201030 18:27:22.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018476, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018476542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:21.799" endtime="20201030 18:27:22.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018476, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018476542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:22.069" endtime="20201030 18:27:22.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.074" endtime="20201030 18:27:22.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.797" endtime="20201030 18:27:22.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.795" endtime="20201030 18:27:22.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:22.091" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:27:22.078" endtime="20201030 18:27:22.092"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.092" endtime="20201030 18:27:22.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.099" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:22.097" endtime="20201030 18:27:22.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.102" level="INFO">VALUE: {'eventsource_diff': [0, 5.419999999992098e-07, 1.7770000000014163e-06, 2.1949999999999747e-06, 2.2499999999987808e-06, 2.194000000000501e-06, 2.0839999999994197e-06, 2.0410000000012363e-06, 2.04200000000071e-06, 2.1529999999977956e-06, 2.01400000000157e-06, 2.1660000000013613e-06, 2.1249999999986557e-06, 2.02800000000114e-06, 2.1669999999973655e-06, 2.153000000001265e-06, 2.180000000000931e-06, 2.181000000000405e-06, 2.194000000000501e-06, 2.208000000000071e-06, 1.9729999999988646e-06, 2.026999999998197e-06, 2.153000000001265e-06, 2.02800000000114e-06, 2.1389999999982257e-06, 2.167000000000835e-06, 2.096999999999516e-06, 1.971999999999391e-06, 2.000000000002e-06, 2.0279999999976706e-06, 2.221999999999641e-06, 2.000000000002e-06, 2.1249999999986557e-06, 2.069000000000376e-06, 2.112000000002029e-06, 1.971999999999391e-06, 2.040999999997767e-06, 2.0699999999998497e-06, 2.02800000000114e-06, 1.971999999999391e-06, 2.26400000000182e-06, 1.985999999998961e-06, 1.930000000000681e-06, 2.1119999999985595e-06, 1.971999999999391e-06, 2.1110000000025553e-06, 2.110999999999086e-06, 2.05600000000028e-06, 2.1660000000013613e-06, 2.0559999999968104e-06, 2.0410000000012363e-06], 'time': [0.018476, 0.018476542, 0.018478319, 0.018480514, 0.018482764, 0.018484958, 0.018487042, 0.018489083, 0.018491125, 0.018493278, 0.018495292, 0.018497458, 0.018499583, 0.018501611, 0.018503778, 0.018505931, 0.018508111, 0.018510292, 0.018512486, 0.018514694, 0.018516667, 0.018518694, 0.018520847, 0.018522875, 0.018525014, 0.018527181, 0.018529278, 0.01853125, 0.01853325, 0.018535278, 0.0185375, 0.0185395, 0.018541625, 0.018543694, 0.018545806, 0.018547778, 0.018549819, 0.018551889, 0.018553917, 0.018555889, 0.018558153, 0.018560139, 0.018562069, 0.018564181, 0.018566153, 0.018568264, 0.018570375, 0.018572431, 0.018574597, 0.018576653, 0.018578694], 'sourcediff': [0, 5.419999999992098e-07, 1.7770000000014163e-06, 2.1949999999999747e-06, 2.2499999999987808e-06, 2.194000000000501e-06, 2.0839999999994197e-06, 2.0410000000012363e-06, 2.04200000000071e-06, 2.1529999999977956e-06, 2.01400000000157e-06, 2.1660000000013613e-06, 2.1249999999986557e-06, 2.02800000000114e-06, 2.1669999999973655e-06, 2.153000000001265e-06, 2.180000000000931e-06, 2.181000000000405e-06, 2.194000000000501e-06, 2.208000000000071e-06, 1.9729999999988646e-06, 2.026999999998197e-06, 2.153000000001265e-06, 2.02800000000114e-06, 2.1389999999982257e-06, 2.167000000000835e-06, 2.096999999999516e-06, 1.971999999999391e-06, 2.000000000002e-06, 2.0279999999976706e-06, 2.221999999999641e-06, 2.000000000002e-06, 2.1249999999986557e-06, 2.069000000000376e-06, 2.112000000002029e-06, 1.971999999999391e-06, 2.040999999997767e-06, 2.0699999999998497e-06, 2.02800000000114e-06, 1.971999999999391e-06, 2.26400000000182e-06, 1.985999999998961e-06, 1.930000000000681e-06, 2.1119999999985595e-06, 1.971999999999391e-06, 2.1110000000025553e-06, 2.110999999999086e-06, 2.05600000000028e-06, 2.1660000000013613e-06, 2.0559999999968104e-06, 2.0410000000012363e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:22.100" endtime="20201030 18:27:22.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.095" endtime="20201030 18:27:22.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:22.107" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 2.1949999999999747e-06}, {'diff': 2.194000000000501e-06}, {'diff': 2.0410000000012363e-06}, {'diff': 2.1529999999977956e-06}, {'diff': 2.1660000000013613e-06...</msg>
<status status="PASS" starttime="20201030 18:27:22.104" endtime="20201030 18:27:22.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:22.110" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 2.1949999999999747e-06, 2.194000000000501e-06, 2.0410000000012363e-06, 2.1529999999977956e-06, 2.1660000000013613e-06, 2.02800000000114e-06, 2.153000000001265e-06, 2.1...</msg>
<status status="PASS" starttime="20201030 18:27:22.108" endtime="20201030 18:27:22.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.114" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:22.113" endtime="20201030 18:27:22.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.116" level="INFO">VALUE: [5.419999999992098e-07, 2.1949999999999747e-06, 2.194000000000501e-06, 2.0410000000012363e-06, 2.1529999999977956e-06, 2.1660000000013613e-06, 2.02800000000114e-06, 2.153000000001265e-06, 2.181000000000405e-06, 2.208000000000071e-06, 2.026999999998197e-06, 2.02800000000114e-06, 2.167000000000835e-06, 1.971999999999391e-06, 2.0279999999976706e-06, 2.000000000002e-06, 2.069000000000376e-06, 1.971999999999391e-06, 2.0699999999998497e-06, 1.971999999999391e-06, 1.985999999998961e-06, 2.1119999999985595e-06, 2.1110000000025553e-06, 2.05600000000028e-06, 2.0559999999968104e-06]</msg>
<status status="PASS" starttime="20201030 18:27:22.115" endtime="20201030 18:27:22.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.111" endtime="20201030 18:27:22.118"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:22.121" endtime="20201030 18:27:22.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.120" endtime="20201030 18:27:22.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.119" endtime="20201030 18:27:22.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.771" endtime="20201030 18:27:22.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.770" endtime="20201030 18:27:22.142"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.150" endtime="20201030 18:27:22.160"></status>
</kw>
<msg timestamp="20201030 18:27:22.160" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:22.149" endtime="20201030 18:27:22.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.163" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:22.161" endtime="20201030 18:27:22.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.164" endtime="20201030 18:27:22.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.146" endtime="20201030 18:27:22.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.144" endtime="20201030 18:27:22.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.173" endtime="20201030 18:27:22.443"></status>
</kw>
<msg timestamp="20201030 18:27:22.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018646806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018647347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:22.171" endtime="20201030 18:27:22.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018646806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018647347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:22.446" endtime="20201030 18:27:22.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.452" endtime="20201030 18:27:22.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.169" endtime="20201030 18:27:22.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.167" endtime="20201030 18:27:22.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:22.468" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:27:22.455" endtime="20201030 18:27:22.469"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.470" endtime="20201030 18:27:22.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.475" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:22.474" endtime="20201030 18:27:22.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.478" level="INFO">VALUE: {'eventsource_diff': [0, 5.410000000032056e-07, 1.7219999999991409e-06, 1.9589999999992946e-06, 2.153000000001265e-06, 2.1799999999974617e-06, 2.181000000000405e-06, 2.235999999999211e-06, 1.930000000000681e-06, 2.04200000000071e-06, 2.208000000000071e-06, 2.02800000000114e-06, 2.0699999999998497e-06, 2.208000000000071e-06, 1.944000000000251e-06, 2.0839999999994197e-06, 2.055000000000806e-06, 1.931000000000155e-06, 2.208000000000071e-06, 2.1249999999986557e-06, 2.096999999999516e-06, 2.04200000000071e-06, 2.235999999999211e-06, 2.139000000001695e-06, 2.221999999999641e-06, 2.0839999999994197e-06, 2.151999999998322e-06, 2.084000000002889e-06, 2.040999999997767e-06, 2.167000000000835e-06, 2.04200000000071e-06, 1.944000000000251e-06, 2.0699999999998497e-06, 1.944000000000251e-06, 2.1389999999982257e-06, 2.125000000002125e-06, 2.1669999999973655e-06, 1.957999999999821e-06, 2.180000000000931e-06, 2.2229999999991146e-06, 2.082999999999946e-06, 1.9720000000028604e-06, 1.9449999999997247e-06, 2.1799999999974617e-06, 2.05600000000028e-06, 1.971999999999391e-06, 1.944000000000251e-06, 1.973000000002334e-06, 2.1249999999986557e-06, 2.01400000000157e-06, 2.096999999999516e-06], 'time': [0.018646806, 0.018647347, 0.018649069, 0.018651028, 0.018653181, 0.018655361, 0.018657542, 0.018659778, 0.018661708, 0.01866375, 0.018665958, 0.018667986, 0.018670056, 0.018672264, 0.018674208, 0.018676292, 0.018678347, 0.018680278, 0.018682486, 0.018684611, 0.018686708, 0.01868875, 0.018690986, 0.018693125, 0.018695347, 0.018697431, 0.018699583, 0.018701667, 0.018703708, 0.018705875, 0.018707917, 0.018709861, 0.018711931, 0.018713875, 0.018716014, 0.018718139, 0.018720306, 0.018722264, 0.018724444, 0.018726667, 0.01872875, 0.018730722, 0.018732667, 0.018734847, 0.018736903, 0.018738875, 0.018740819, 0.018742792, 0.018744917, 0.018746931, 0.018749028], 'sourcediff': [0, 5.410000000032056e-07, 1.7219999999991409e-06, 1.9589999999992946e-06, 2.153000000001265e-06, 2.1799999999974617e-06, 2.181000000000405e-06, 2.235999999999211e-06, 1.930000000000681e-06, 2.04200000000071e-06, 2.208000000000071e-06, 2.02800000000114e-06, 2.0699999999998497e-06, 2.208000000000071e-06, 1.944000000000251e-06, 2.0839999999994197e-06, 2.055000000000806e-06, 1.931000000000155e-06, 2.208000000000071e-06, 2.1249999999986557e-06, 2.096999999999516e-06, 2.04200000000071e-06, 2.235999999999211e-06, 2.139000000001695e-06, 2.221999999999641e-06, 2.0839999999994197e-06, 2.151999999998322e-06, 2.084000000002889e-06, 2.040999999997767e-06, 2.167000000000835e-06, 2.04200000000071e-06, 1.944000000000251e-06, 2.0699999999998497e-06, 1.944000000000251e-06, 2.1389999999982257e-06, 2.125000000002125e-06, 2.1669999999973655e-06, 1.957999999999821e-06, 2.180000000000931e-06, 2.2229999999991146e-06, 2.082999999999946e-06, 1.9720000000028604e-06, 1.9449999999997247e-06, 2.1799999999974617e-06, 2.05600000000028e-06, 1.971999999999391e-06, 1.944000000000251e-06, 1.973000000002334e-06, 2.1249999999986557e-06, 2.01400000000157e-06, 2.096999999999516e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:22.476" endtime="20201030 18:27:22.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.472" endtime="20201030 18:27:22.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:22.483" level="INFO">${RESULT} = [{'diff': 5.410000000032056e-07}, {'diff': 1.9589999999992946e-06}, {'diff': 2.1799999999974617e-06}, {'diff': 2.235999999999211e-06}, {'diff': 2.04200000000071e-06}, {'diff': 2.02800000000114e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:22.480" endtime="20201030 18:27:22.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:22.487" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.410000000032056e-07, 1.9589999999992946e-06, 2.1799999999974617e-06, 2.235999999999211e-06, 2.04200000000071e-06, 2.02800000000114e-06, 2.208000000000071e-06, 2.0839999999994197e-06, 1.931...</msg>
<status status="PASS" starttime="20201030 18:27:22.484" endtime="20201030 18:27:22.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.491" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:22.490" endtime="20201030 18:27:22.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.493" level="INFO">VALUE: [5.410000000032056e-07, 1.9589999999992946e-06, 2.1799999999974617e-06, 2.235999999999211e-06, 2.04200000000071e-06, 2.02800000000114e-06, 2.208000000000071e-06, 2.0839999999994197e-06, 1.931000000000155e-06, 2.1249999999986557e-06, 2.04200000000071e-06, 2.139000000001695e-06, 2.0839999999994197e-06, 2.084000000002889e-06, 2.167000000000835e-06, 1.944000000000251e-06, 1.944000000000251e-06, 2.125000000002125e-06, 1.957999999999821e-06, 2.2229999999991146e-06, 1.9720000000028604e-06, 2.1799999999974617e-06, 1.971999999999391e-06, 1.973000000002334e-06, 2.01400000000157e-06]</msg>
<status status="PASS" starttime="20201030 18:27:22.492" endtime="20201030 18:27:22.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.487" endtime="20201030 18:27:22.494"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:22.498" endtime="20201030 18:27:22.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.496" endtime="20201030 18:27:22.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.495" endtime="20201030 18:27:22.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.143" endtime="20201030 18:27:22.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.142" endtime="20201030 18:27:22.519"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.528" endtime="20201030 18:27:22.537"></status>
</kw>
<msg timestamp="20201030 18:27:22.537" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:22.525" endtime="20201030 18:27:22.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.540" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:22.538" endtime="20201030 18:27:22.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.541" endtime="20201030 18:27:22.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.523" endtime="20201030 18:27:22.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.521" endtime="20201030 18:27:22.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.550" endtime="20201030 18:27:22.824"></status>
</kw>
<msg timestamp="20201030 18:27:22.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019742306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019744597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:22.549" endtime="20201030 18:27:22.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019742306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019744597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:22.830" endtime="20201030 18:27:22.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.842" endtime="20201030 18:27:22.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.546" endtime="20201030 18:27:22.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.544" endtime="20201030 18:27:22.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:22.879" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:27:22.850" endtime="20201030 18:27:22.879"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.881" endtime="20201030 18:27:22.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.891" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:22.889" endtime="20201030 18:27:22.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.898" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 2.290999999998017e-06, 2.05600000000028e-06, 2.221999999999641e-06, 1.957999999999821e-06, 2.2360000000026803e-06, 2.2499999999987808e-06, 1.917000000000585e-06, 2.082999999999946e-06, 1.9729999999988646e-06, 2.194000000000501e-06, 1.9449999999997247e-06, 2.0410000000012363e-06, 2.0279999999976706e-06, 2.125000000002125e-06, 1.9999999999985307e-06, 2.01400000000157e-06, 2.221999999999641e-06, 2.110999999999086e-06, 2.221999999999641e-06, 2.2229999999991146e-06, 2.2220000000031104e-06, 2.1249999999986557e-06, 2.194000000000501e-06, 2.1949999999999747e-06, 2.1529999999977956e-06, 2.0970000000029854e-06, 2.0549999999973367e-06, 2.139000000001695e-06, 1.9449999999997247e-06, 2.151999999998322e-06, 2.125000000002125e-06, 2.0279999999976706e-06, 2.2220000000031104e-06, 1.9589999999992946e-06, 1.944000000000251e-06, 2.0279999999976706e-06, 1.903000000001015e-06, 2.055000000000806e-06, 2.2229999999991146e-06, 2.096999999999516e-06, 1.930000000000681e-06, 2.153000000001265e-06, 1.971999999999391e-06, 1.9449999999997247e-06, 1.944000000000251e-06, 2.167000000000835e-06, 2.1389999999982257e-06, 2.221999999999641e-06, 2.167000000000835e-06], 'time': [0.019742306, 0.019744597, 0.019746653, 0.019748875, 0.019750833, 0.019753069, 0.019755319, 0.019757236, 0.019759319, 0.019761292, 0.019763486, 0.019765431, 0.019767472, 0.0197695, 0.019771625, 0.019773625, 0.019775639, 0.019777861, 0.019779972, 0.019782194, 0.019784417, 0.019786639, 0.019788764, 0.019790958, 0.019793153, 0.019795306, 0.019797403, 0.019799458, 0.019801597, 0.019803542, 0.019805694, 0.019807819, 0.019809847, 0.019812069, 0.019814028, 0.019815972, 0.019818, 0.019819903, 0.019821958, 0.019824181, 0.019826278, 0.019828208, 0.019830361, 0.019832333, 0.019834278, 0.019836222, 0.019838389, 0.019840528, 0.01984275, 0.019844917], 'sourcediff': [0, 2.290999999998017e-06, 2.05600000000028e-06, 2.221999999999641e-06, 1.957999999999821e-06, 2.2360000000026803e-06, 2.2499999999987808e-06, 1.917000000000585e-06, 2.082999999999946e-06, 1.9729999999988646e-06, 2.194000000000501e-06, 1.9449999999997247e-06, 2.0410000000012363e-06, 2.0279999999976706e-06, 2.125000000002125e-06, 1.9999999999985307e-06, 2.01400000000157e-06, 2.221999999999641e-06, 2.110999999999086e-06, 2.221999999999641e-06, 2.2229999999991146e-06, 2.2220000000031104e-06, 2.1249999999986557e-06, 2.194000000000501e-06, 2.1949999999999747e-06, 2.1529999999977956e-06, 2.0970000000029854e-06, 2.0549999999973367e-06, 2.139000000001695e-06, 1.9449999999997247e-06, 2.151999999998322e-06, 2.125000000002125e-06, 2.0279999999976706e-06, 2.2220000000031104e-06, 1.9589999999992946e-06, 1.944000000000251e-06, 2.0279999999976706e-06, 1.903000000001015e-06, 2.055000000000806e-06, 2.2229999999991146e-06, 2.096999999999516e-06, 1.930000000000681e-06, 2.153000000001265e-06, 1.971999999999391e-06, 1.9449999999997247e-06, 1.944000000000251e-06, 2.167000000000835e-06, 2.1389999999982257e-06, 2.221999999999641e-06, 2.167000000000835e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:22.893" endtime="20201030 18:27:22.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.885" endtime="20201030 18:27:22.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:22.907" level="INFO">${RESULT} = [{'diff': 2.290999999998017e-06}, {'diff': 2.221999999999641e-06}, {'diff': 2.2360000000026803e-06}, {'diff': 1.917000000000585e-06}, {'diff': 1.9729999999988646e-06}, {'diff': 1.9449999999997247e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:22.902" endtime="20201030 18:27:22.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:22.910" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.290999999998017e-06, 2.221999999999641e-06, 2.2360000000026803e-06, 1.917000000000585e-06, 1.9729999999988646e-06, 1.9449999999997247e-06, 2.0279999999976706e-06, 1.9999999999985307e-06, 2...</msg>
<status status="PASS" starttime="20201030 18:27:22.908" endtime="20201030 18:27:22.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.914" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:22.913" endtime="20201030 18:27:22.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.916" level="INFO">VALUE: [2.290999999998017e-06, 2.221999999999641e-06, 2.2360000000026803e-06, 1.917000000000585e-06, 1.9729999999988646e-06, 1.9449999999997247e-06, 2.0279999999976706e-06, 1.9999999999985307e-06, 2.221999999999641e-06, 2.221999999999641e-06, 2.2220000000031104e-06, 2.194000000000501e-06, 2.1529999999977956e-06, 2.0549999999973367e-06, 1.9449999999997247e-06, 2.125000000002125e-06, 2.2220000000031104e-06, 1.944000000000251e-06, 1.903000000001015e-06, 2.2229999999991146e-06, 1.930000000000681e-06, 1.971999999999391e-06, 1.944000000000251e-06, 2.1389999999982257e-06, 2.167000000000835e-06]</msg>
<status status="PASS" starttime="20201030 18:27:22.915" endtime="20201030 18:27:22.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.911" endtime="20201030 18:27:22.918"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:22.922" endtime="20201030 18:27:22.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.920" endtime="20201030 18:27:22.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.919" endtime="20201030 18:27:22.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.520" endtime="20201030 18:27:22.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.519" endtime="20201030 18:27:22.943"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.951" endtime="20201030 18:27:22.960"></status>
</kw>
<msg timestamp="20201030 18:27:22.960" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:22.949" endtime="20201030 18:27:22.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.963" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:22.961" endtime="20201030 18:27:22.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.964" endtime="20201030 18:27:22.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.946" endtime="20201030 18:27:22.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.945" endtime="20201030 18:27:22.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.973" endtime="20201030 18:27:23.237"></status>
</kw>
<msg timestamp="20201030 18:27:23.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018410958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018413083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:22.971" endtime="20201030 18:27:23.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018410958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018413083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:23.240" endtime="20201030 18:27:23.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.245" endtime="20201030 18:27:23.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.969" endtime="20201030 18:27:23.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.967" endtime="20201030 18:27:23.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:23.261" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:27:23.248" endtime="20201030 18:27:23.261"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.262" endtime="20201030 18:27:23.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.267" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:23.266" endtime="20201030 18:27:23.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.270" level="INFO">VALUE: {'eventsource_diff': [0, 2.1249999999986557e-06, 2.153000000001265e-06, 2.0559999999968104e-06, 2.2360000000026803e-06, 2.069000000000376e-06, 2.1809999999969354e-06, 2.208000000000071e-06, 2.070000000003319e-06, 1.985999999998961e-06, 2.069000000000376e-06, 2.1949999999999747e-06, 2.026999999998197e-06, 2.125000000002125e-06, 2.181000000000405e-06, 2.1249999999986557e-06, 1.9999999999985307e-06, 1.944000000000251e-06, 2.181000000000405e-06, 2.221999999999641e-06, 2.110999999999086e-06, 2.2220000000031104e-06, 1.9449999999997247e-06, 2.0139999999981006e-06, 1.944000000000251e-06, 2.167000000000835e-06, 1.985999999998961e-06, 2.069000000000376e-06, 2.0699999999998497e-06, 1.971999999999391e-06, 2.181000000000405e-06, 1.9860000000024303e-06, 2.2079999999966016e-06, 2.02800000000114e-06, 1.985999999998961e-06, 1.9860000000024303e-06, 2.1529999999977956e-06, 1.944000000000251e-06, 2.000000000002e-06, 2.1949999999999747e-06, 2.082999999999946e-06, 1.9449999999997247e-06, 2.208000000000071e-06, 2.167000000000835e-06, 2.110999999999086e-06, 2.208000000000071e-06, 2.167000000000835e-06, 2.096999999999516e-06, 2.1669999999973655e-06, 2.0970000000029854e-06], 'time': [0.018410958, 0.018413083, 0.018415236, 0.018417292, 0.018419528, 0.018421597, 0.018423778, 0.018425986, 0.018428056, 0.018430042, 0.018432111, 0.018434306, 0.018436333, 0.018438458, 0.018440639, 0.018442764, 0.018444764, 0.018446708, 0.018448889, 0.018451111, 0.018453222, 0.018455444, 0.018457389, 0.018459403, 0.018461347, 0.018463514, 0.0184655, 0.018467569, 0.018469639, 0.018471611, 0.018473792, 0.018475778, 0.018477986, 0.018480014, 0.018482, 0.018483986, 0.018486139, 0.018488083, 0.018490083, 0.018492278, 0.018494361, 0.018496306, 0.018498514, 0.018500681, 0.018502792, 0.018505, 0.018507167, 0.018509264, 0.018511431, 0.018513528], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 2.1249999999986557e-06, 2.153000000001265e-06, 2.0559999999968104e-06, 2.2360000000026803e-06, 2.069000000000376e-06, 2.1809999999969354e-06, 2.208000000000071e-06, 2.070000000003319e-06, 1.985999999998961e-06, 2.069000000000376e-06, 2.1949999999999747e-06, 2.026999999998197e-06, 2.125000000002125e-06, 2.181000000000405e-06, 2.1249999999986557e-06, 1.9999999999985307e-06, 1.944000000000251e-06, 2.181000000000405e-06, 2.221999999999641e-06, 2.110999999999086e-06, 2.2220000000031104e-06, 1.9449999999997247e-06, 2.0139999999981006e-06, 1.944000000000251e-06, 2.167000000000835e-06, 1.985999999998961e-06, 2.069000000000376e-06, 2.0699999999998497e-06, 1.971999999999391e-06, 2.181000000000405e-06, 1.9860000000024303e-06, 2.2079999999966016e-06, 2.02800000000114e-06, 1.985999999998961e-06, 1.9860000000024303e-06, 2.1529999999977956e-06, 1.944000000000251e-06, 2.000000000002e-06, 2.1949999999999747e-06, 2.082999999999946e-06, 1.9449999999997247e-06, 2.208000000000071e-06, 2.167000000000835e-06, 2.110999999999086e-06, 2.208000000000071e-06, 2.167000000000835e-06, 2.096999999999516e-06, 2.1669999999973655e-06, 2.0970000000029854e-06]}</msg>
<status status="PASS" starttime="20201030 18:27:23.268" endtime="20201030 18:27:23.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.264" endtime="20201030 18:27:23.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:23.275" level="INFO">${RESULT} = [{'diff': 2.1249999999986557e-06}, {'diff': 2.0559999999968104e-06}, {'diff': 2.069000000000376e-06}, {'diff': 2.208000000000071e-06}, {'diff': 1.985999999998961e-06}, {'diff': 2.1949999999999747e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:23.273" endtime="20201030 18:27:23.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:23.279" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.1249999999986557e-06, 2.0559999999968104e-06, 2.069000000000376e-06, 2.208000000000071e-06, 1.985999999998961e-06, 2.1949999999999747e-06, 2.125000000002125e-06, 2.1249999999986557e-06, 1....</msg>
<status status="PASS" starttime="20201030 18:27:23.276" endtime="20201030 18:27:23.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.283" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:23.282" endtime="20201030 18:27:23.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.286" level="INFO">VALUE: [2.1249999999986557e-06, 2.0559999999968104e-06, 2.069000000000376e-06, 2.208000000000071e-06, 1.985999999998961e-06, 2.1949999999999747e-06, 2.125000000002125e-06, 2.1249999999986557e-06, 1.944000000000251e-06, 2.221999999999641e-06, 2.2220000000031104e-06, 2.0139999999981006e-06, 2.167000000000835e-06, 2.069000000000376e-06, 1.971999999999391e-06, 1.9860000000024303e-06, 2.02800000000114e-06, 1.9860000000024303e-06, 1.944000000000251e-06, 2.1949999999999747e-06, 1.9449999999997247e-06, 2.167000000000835e-06, 2.208000000000071e-06, 2.096999999999516e-06, 2.0970000000029854e-06]</msg>
<status status="PASS" starttime="20201030 18:27:23.284" endtime="20201030 18:27:23.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.280" endtime="20201030 18:27:23.286"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:23.290" endtime="20201030 18:27:23.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.289" endtime="20201030 18:27:23.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.287" endtime="20201030 18:27:23.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.943" endtime="20201030 18:27:23.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.943" endtime="20201030 18:27:23.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.675" endtime="20201030 18:27:23.311"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:23.315" endtime="20201030 18:27:23.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.313" endtime="20201030 18:27:23.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.312" endtime="20201030 18:27:23.335"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:15.605" endtime="20201030 18:27:23.335" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:23.342" endtime="20201030 18:27:23.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.341" endtime="20201030 18:27:23.362"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.375" endtime="20201030 18:27:23.390"></status>
</kw>
<msg timestamp="20201030 18:27:23.390" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.373" endtime="20201030 18:27:23.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.393" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.391" endtime="20201030 18:27:23.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.396" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:23.394" endtime="20201030 18:27:23.396"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:23.371" endtime="20201030 18:27:23.397"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:23.368" endtime="20201030 18:27:23.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.367" endtime="20201030 18:27:23.398"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:23.402" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:23.401" endtime="20201030 18:27:23.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.399" endtime="20201030 18:27:23.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.366" endtime="20201030 18:27:23.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.366" endtime="20201030 18:27:23.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.404" endtime="20201030 18:27:23.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.364" endtime="20201030 18:27:23.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.363" endtime="20201030 18:27:23.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.339" endtime="20201030 18:27:23.407"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.415" endtime="20201030 18:27:23.427"></status>
</kw>
<msg timestamp="20201030 18:27:23.428" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.414" endtime="20201030 18:27:23.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.430" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.429" endtime="20201030 18:27:23.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.431" endtime="20201030 18:27:23.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.411" endtime="20201030 18:27:23.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.409" endtime="20201030 18:27:23.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.440" endtime="20201030 18:27:23.732"></status>
</kw>
<msg timestamp="20201030 18:27:23.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064473444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064474736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:23.439" endtime="20201030 18:27:23.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064473444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064474736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:23.736" endtime="20201030 18:27:23.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.744" endtime="20201030 18:27:23.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.436" endtime="20201030 18:27:23.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.435" endtime="20201030 18:27:23.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:23.750" level="INFO">${RESULT} = [{'diff': 1.2919999999999598e-06}, {'diff': 9.029999999965455e-07}, {'diff': 9.450000000021941e-07}, {'diff': 8.750000000112834e-07}, {'diff': 8.749999999974056e-07}, {'diff': 9.029999999965455e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:27:23.747" endtime="20201030 18:27:23.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:23.757" level="INFO">${OVERHEAD} = {'diff': [1.2919999999999598e-06, 9.029999999965455e-07, 9.450000000021941e-07, 8.750000000112834e-07, 8.749999999974056e-07, 9.029999999965455e-07, 9.019999999970718e-07, 9.029999999965455e-07, 8.880...</msg>
<status status="PASS" starttime="20201030 18:27:23.751" endtime="20201030 18:27:23.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.761" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:23.760" endtime="20201030 18:27:23.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.763" level="INFO">VALUE: [1.2919999999999598e-06, 9.029999999965455e-07, 9.450000000021941e-07, 8.750000000112834e-07, 8.749999999974056e-07, 9.029999999965455e-07, 9.019999999970718e-07, 9.029999999965455e-07, 8.880000000044408e-07, 9.029999999965455e-07, 9.019999999970718e-07, 9.439999999888427e-07, 9.030000000104232e-07, 9.029999999965455e-07, 9.030000000104232e-07, 8.890000000039144e-07, 8.749999999974056e-07, 9.029999999965455e-07, 8.890000000039144e-07, 8.890000000039144e-07, 8.890000000039144e-07, 8.890000000039144e-07, 9.159999999897028e-07, 8.890000000039144e-07, 8.880000000044408e-07, 9.029999999965455e-07, 9.029999999965455e-07, 8.889999999900366e-07, 9.030000000104232e-07, 9.029999999965455e-07, 9.170000000030543e-07, 9.030000000104232e-07, 8.749999999974056e-07, 8.609999999908968e-07, 8.889999999900366e-07, 9.020000000109496e-07, 8.889999999900366e-07, 9.020000000109496e-07, 9.029999999965455e-07, 9.029999999965455e-07, 9.030000000104232e-07, 8.890000000039144e-07, 9.029999999965455e-07, 9.019999999970718e-07, 9.029999999965455e-07, 9.029999999965455e-07, 8.890000000039144e-07, 8.890000000039144e-07, 9.86000000008369e-07, 9.159999999897028e-07]</msg>
<status status="PASS" starttime="20201030 18:27:23.762" endtime="20201030 18:27:23.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.758" endtime="20201030 18:27:23.765"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:23.768" endtime="20201030 18:27:23.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.767" endtime="20201030 18:27:23.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.766" endtime="20201030 18:27:23.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.408" endtime="20201030 18:27:23.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.408" endtime="20201030 18:27:23.789"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.797" endtime="20201030 18:27:23.809"></status>
</kw>
<msg timestamp="20201030 18:27:23.809" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.795" endtime="20201030 18:27:23.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.811" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.810" endtime="20201030 18:27:23.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.813" endtime="20201030 18:27:23.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.793" endtime="20201030 18:27:23.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.791" endtime="20201030 18:27:23.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.821" endtime="20201030 18:27:24.112"></status>
</kw>
<msg timestamp="20201030 18:27:24.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019513653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019514944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:23.820" endtime="20201030 18:27:24.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019513653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019514944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:24.116" endtime="20201030 18:27:24.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.124" endtime="20201030 18:27:24.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.817" endtime="20201030 18:27:24.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.816" endtime="20201030 18:27:24.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:24.131" level="INFO">${RESULT} = [{'diff': 1.2910000000004862e-06}, {'diff': 9.169999999995848e-07}, {'diff': 9.43999999999251e-07}, {'diff': 9.160000000001112e-07}, {'diff': 9.030000000000149e-07}, {'diff': 8.89000000000445e-07}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:24.128" endtime="20201030 18:27:24.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:24.135" level="INFO">${OVERHEAD} = {'diff': [1.2910000000004862e-06, 9.169999999995848e-07, 9.43999999999251e-07, 9.160000000001112e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.879999999975019e-07, 8.89000000000445e-07, 8.890000...</msg>
<status status="PASS" starttime="20201030 18:27:24.132" endtime="20201030 18:27:24.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.139" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:24.138" endtime="20201030 18:27:24.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.142" level="INFO">VALUE: [1.2910000000004862e-06, 9.169999999995848e-07, 9.43999999999251e-07, 9.160000000001112e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.879999999975019e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.43999999999251e-07, 8.750000000008751e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.020000000005413e-07, 9.030000000000149e-07, 8.889999999969755e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.470000000017353e-07, 8.469999999982658e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.609999999978357e-07, 8.479999999977395e-07, 8.889999999969755e-07, 8.880000000009713e-07, 9.020000000005413e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.469999999982658e-07, 8.610000000013052e-07, 9.030000000000149e-07, 9.019999999970718e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.030000000000149e-07, 8.610000000013052e-07]</msg>
<status status="PASS" starttime="20201030 18:27:24.141" endtime="20201030 18:27:24.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.136" endtime="20201030 18:27:24.143"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:24.146" endtime="20201030 18:27:24.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.145" endtime="20201030 18:27:24.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.144" endtime="20201030 18:27:24.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.790" endtime="20201030 18:27:24.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.789" endtime="20201030 18:27:24.167"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.176" endtime="20201030 18:27:24.188"></status>
</kw>
<msg timestamp="20201030 18:27:24.188" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.173" endtime="20201030 18:27:24.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.191" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.189" endtime="20201030 18:27:24.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.192" endtime="20201030 18:27:24.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.171" endtime="20201030 18:27:24.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.169" endtime="20201030 18:27:24.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.207" endtime="20201030 18:27:24.497"></status>
</kw>
<msg timestamp="20201030 18:27:24.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020415097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020416389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:24.204" endtime="20201030 18:27:24.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020415097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020416389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:24.501" endtime="20201030 18:27:24.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.509" endtime="20201030 18:27:24.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.200" endtime="20201030 18:27:24.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.197" endtime="20201030 18:27:24.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:24.515" level="INFO">${RESULT} = [{'diff': 1.2919999999999598e-06}, {'diff': 8.339999999981695e-07}, {'diff': 8.750000000008751e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.030000000000149e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:27:24.512" endtime="20201030 18:27:24.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:24.519" level="INFO">${OVERHEAD} = {'diff': [1.2919999999999598e-06, 8.339999999981695e-07, 8.750000000008751e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.019999999970718e-07, 9.030000000000149e-07, 8.200...</msg>
<status status="PASS" starttime="20201030 18:27:24.516" endtime="20201030 18:27:24.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.524" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:24.523" endtime="20201030 18:27:24.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.526" level="INFO">VALUE: [1.2919999999999598e-06, 8.339999999981695e-07, 8.750000000008751e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.019999999970718e-07, 9.030000000000149e-07, 8.200000000020691e-07, 9.020000000005413e-07, 8.750000000008751e-07, 8.18999999999126e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.750000000008751e-07, 9.020000000005413e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.860000000014302e-07, 9.43999999999251e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.160000000001112e-07, 8.889999999969755e-07, 8.89000000000445e-07, 8.750000000008751e-07, 9.030000000000149e-07, 8.889999999969755e-07, 9.030000000000149e-07, 9.170000000030543e-07, 8.89000000000445e-07]</msg>
<status status="PASS" starttime="20201030 18:27:24.525" endtime="20201030 18:27:24.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.521" endtime="20201030 18:27:24.528"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:24.532" endtime="20201030 18:27:24.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.530" endtime="20201030 18:27:24.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.529" endtime="20201030 18:27:24.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.168" endtime="20201030 18:27:24.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.167" endtime="20201030 18:27:24.552"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.560" endtime="20201030 18:27:24.571"></status>
</kw>
<msg timestamp="20201030 18:27:24.572" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.559" endtime="20201030 18:27:24.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.574" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.573" endtime="20201030 18:27:24.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.575" endtime="20201030 18:27:24.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.556" endtime="20201030 18:27:24.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.554" endtime="20201030 18:27:24.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.584" endtime="20201030 18:27:24.873"></status>
</kw>
<msg timestamp="20201030 18:27:24.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019473597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019474889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:24.583" endtime="20201030 18:27:24.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019473597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019474889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:24.877" endtime="20201030 18:27:24.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.886" endtime="20201030 18:27:24.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.580" endtime="20201030 18:27:24.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.578" endtime="20201030 18:27:24.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:24.892" level="INFO">${RESULT} = [{'diff': 1.2919999999999598e-06}, {'diff': 9.020000000005413e-07}, {'diff': 8.060000000024992e-07}, {'diff': 9.440000000027204e-07}, {'diff': 9.020000000005413e-07}, {'diff': 9.030000000000149e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:27:24.889" endtime="20201030 18:27:24.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:24.897" level="INFO">${OVERHEAD} = {'diff': [1.2919999999999598e-06, 9.020000000005413e-07, 8.060000000024992e-07, 9.440000000027204e-07, 9.020000000005413e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.169999999995848e-07, 8.8900...</msg>
<status status="PASS" starttime="20201030 18:27:24.893" endtime="20201030 18:27:24.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.902" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:24.900" endtime="20201030 18:27:24.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.904" level="INFO">VALUE: [1.2919999999999598e-06, 9.020000000005413e-07, 8.060000000024992e-07, 9.440000000027204e-07, 9.020000000005413e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.169999999995848e-07, 8.89000000000445e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.449999999987246e-07, 8.750000000008751e-07, 8.89000000000445e-07, 9.020000000005413e-07, 9.309999999991547e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.889999999969755e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.610000000013052e-07, 9.019999999970718e-07, 9.169999999995848e-07, 9.160000000001112e-07, 8.750000000008751e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.889999999969755e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.030000000000149e-07, 8.889999999969755e-07]</msg>
<status status="PASS" starttime="20201030 18:27:24.903" endtime="20201030 18:27:24.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.898" endtime="20201030 18:27:24.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:24.909" endtime="20201030 18:27:24.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.907" endtime="20201030 18:27:24.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.906" endtime="20201030 18:27:24.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.553" endtime="20201030 18:27:24.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.553" endtime="20201030 18:27:24.929"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.937" endtime="20201030 18:27:24.948"></status>
</kw>
<msg timestamp="20201030 18:27:24.948" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.936" endtime="20201030 18:27:24.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.951" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.949" endtime="20201030 18:27:24.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.952" endtime="20201030 18:27:24.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.933" endtime="20201030 18:27:24.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.931" endtime="20201030 18:27:24.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.961" endtime="20201030 18:27:25.251"></status>
</kw>
<msg timestamp="20201030 18:27:25.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019419292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019420597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:24.959" endtime="20201030 18:27:25.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019419292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019420597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:25.255" endtime="20201030 18:27:25.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.263" endtime="20201030 18:27:25.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.957" endtime="20201030 18:27:25.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.955" endtime="20201030 18:27:25.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:25.272" level="INFO">${RESULT} = [{'diff': 1.3050000000000561e-06}, {'diff': 9.169999999995848e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.860000000014302e-07}, {'diff': 9.57999999998821e-07}, {'diff': 9.030000000000149e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:27:25.267" endtime="20201030 18:27:25.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:25.281" level="INFO">${OVERHEAD} = {'diff': [1.3050000000000561e-06, 9.169999999995848e-07, 9.030000000000149e-07, 9.860000000014302e-07, 9.57999999998821e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.16000...</msg>
<status status="PASS" starttime="20201030 18:27:25.275" endtime="20201030 18:27:25.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.291" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:25.289" endtime="20201030 18:27:25.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.298" level="INFO">VALUE: [1.3050000000000561e-06, 9.169999999995848e-07, 9.030000000000149e-07, 9.860000000014302e-07, 9.57999999998821e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.020000000005413e-07, 8.89000000000445e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.89000000000445e-07, 8.339999999981695e-07, 9.59000000001764e-07, 8.880000000009713e-07, 9.449999999987246e-07, 9.019999999970718e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.57999999998821e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.589999999982945e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 8.889999999969755e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000000000149e-07]</msg>
<status status="PASS" starttime="20201030 18:27:25.294" endtime="20201030 18:27:25.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.284" endtime="20201030 18:27:25.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:25.309" endtime="20201030 18:27:25.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.305" endtime="20201030 18:27:25.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.303" endtime="20201030 18:27:25.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.930" endtime="20201030 18:27:25.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.930" endtime="20201030 18:27:25.333"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.344" endtime="20201030 18:27:25.356"></status>
</kw>
<msg timestamp="20201030 18:27:25.357" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:25.343" endtime="20201030 18:27:25.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.360" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:25.359" endtime="20201030 18:27:25.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.362" endtime="20201030 18:27:25.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.340" endtime="20201030 18:27:25.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.337" endtime="20201030 18:27:25.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.375" endtime="20201030 18:27:25.669"></status>
</kw>
<msg timestamp="20201030 18:27:25.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025249972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025251278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:25.372" endtime="20201030 18:27:25.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025249972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025251278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:25.673" endtime="20201030 18:27:25.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.682" endtime="20201030 18:27:25.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.369" endtime="20201030 18:27:25.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.367" endtime="20201030 18:27:25.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:25.689" level="INFO">${RESULT} = [{'diff': 1.3059999999995298e-06}, {'diff': 8.610000000013052e-07}, {'diff': 9.030000000000149e-07}, {'diff': 8.750000000008751e-07}, {'diff': 8.749999999974056e-07}, {'diff': 9.169999999995848e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:27:25.686" endtime="20201030 18:27:25.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:25.693" level="INFO">${OVERHEAD} = {'diff': [1.3059999999995298e-06, 8.610000000013052e-07, 9.030000000000149e-07, 8.750000000008751e-07, 8.749999999974056e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.890...</msg>
<status status="PASS" starttime="20201030 18:27:25.690" endtime="20201030 18:27:25.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.697" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:25.696" endtime="20201030 18:27:25.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.700" level="INFO">VALUE: [1.3059999999995298e-06, 8.610000000013052e-07, 9.030000000000149e-07, 8.750000000008751e-07, 8.749999999974056e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.89000000000445e-07, 9.020000000005413e-07, 8.89000000000445e-07, 8.889999999969755e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.750000000008751e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.879999999975019e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.020000000005413e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.889999999969755e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.889999999969755e-07, 9.030000000000149e-07, 9.170000000030543e-07, 9.169999999995848e-07, 9.450000000021941e-07, 8.750000000008751e-07, 9.030000000000149e-07]</msg>
<status status="PASS" starttime="20201030 18:27:25.698" endtime="20201030 18:27:25.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.694" endtime="20201030 18:27:25.701"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:25.705" endtime="20201030 18:27:25.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.704" endtime="20201030 18:27:25.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.702" endtime="20201030 18:27:25.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.335" endtime="20201030 18:27:25.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.334" endtime="20201030 18:27:25.726"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.737" endtime="20201030 18:27:25.753"></status>
</kw>
<msg timestamp="20201030 18:27:25.754" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:25.734" endtime="20201030 18:27:25.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.759" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:25.756" endtime="20201030 18:27:25.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.761" endtime="20201030 18:27:25.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.730" endtime="20201030 18:27:25.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.728" endtime="20201030 18:27:25.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.780" endtime="20201030 18:27:26.072"></status>
</kw>
<msg timestamp="20201030 18:27:26.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023944167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023945458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:25.777" endtime="20201030 18:27:26.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023944167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023945458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:26.077" endtime="20201030 18:27:26.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.085" endtime="20201030 18:27:26.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.772" endtime="20201030 18:27:26.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.768" endtime="20201030 18:27:26.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:26.092" level="INFO">${RESULT} = [{'diff': 1.2910000000004862e-06}, {'diff': 9.030000000000149e-07}, {'diff': 9.019999999970718e-07}, {'diff': 9.030000000000149e-07}, {'diff': 8.750000000008751e-07}, {'diff': 8.330000000021653e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:27:26.089" endtime="20201030 18:27:26.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:26.097" level="INFO">${OVERHEAD} = {'diff': [1.2910000000004862e-06, 9.030000000000149e-07, 9.019999999970718e-07, 9.030000000000149e-07, 8.750000000008751e-07, 8.330000000021653e-07, 8.89000000000445e-07, 9.169999999995848e-07, 8.8900...</msg>
<status status="PASS" starttime="20201030 18:27:26.093" endtime="20201030 18:27:26.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.101" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:26.100" endtime="20201030 18:27:26.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.103" level="INFO">VALUE: [1.2910000000004862e-06, 9.030000000000149e-07, 9.019999999970718e-07, 9.030000000000149e-07, 8.750000000008751e-07, 8.330000000021653e-07, 8.89000000000445e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.43999999999251e-07, 9.160000000001112e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.020000000005413e-07, 9.030000000000149e-07, 8.610000000013052e-07, 8.610000000013052e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.880000000009713e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.609999999978357e-07, 9.020000000005413e-07, 8.329999999986959e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.030000000000149e-07, 8.479999999977395e-07, 9.309999999991547e-07, 8.880000000009713e-07, 8.89000000000445e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.020000000005413e-07, 8.89000000000445e-07, 9.160000000001112e-07, 8.89000000000445e-07, 8.89000000000445e-07]</msg>
<status status="PASS" starttime="20201030 18:27:26.102" endtime="20201030 18:27:26.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.098" endtime="20201030 18:27:26.104"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:26.108" endtime="20201030 18:27:26.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.107" endtime="20201030 18:27:26.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.105" endtime="20201030 18:27:26.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.727" endtime="20201030 18:27:26.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.726" endtime="20201030 18:27:26.129"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.137" endtime="20201030 18:27:26.148"></status>
</kw>
<msg timestamp="20201030 18:27:26.149" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.135" endtime="20201030 18:27:26.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.151" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.150" endtime="20201030 18:27:26.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.152" endtime="20201030 18:27:26.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.133" endtime="20201030 18:27:26.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.131" endtime="20201030 18:27:26.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.161" endtime="20201030 18:27:26.452"></status>
</kw>
<msg timestamp="20201030 18:27:26.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019664361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019665653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:26.160" endtime="20201030 18:27:26.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019664361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019665653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:26.456" endtime="20201030 18:27:26.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.464" endtime="20201030 18:27:26.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.157" endtime="20201030 18:27:26.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.156" endtime="20201030 18:27:26.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:26.471" level="INFO">${RESULT} = [{'diff': 1.2919999999999598e-06}, {'diff': 9.160000000001112e-07}, {'diff': 8.199999999985996e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.030000000000149e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:27:26.468" endtime="20201030 18:27:26.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:26.476" level="INFO">${OVERHEAD} = {'diff': [1.2919999999999598e-06, 9.160000000001112e-07, 8.199999999985996e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.169999999995848e-07, 8.8900...</msg>
<status status="PASS" starttime="20201030 18:27:26.472" endtime="20201030 18:27:26.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.480" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:26.479" endtime="20201030 18:27:26.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.482" level="INFO">VALUE: [1.2919999999999598e-06, 9.160000000001112e-07, 8.199999999985996e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.020000000005413e-07, 9.299999999996811e-07, 9.309999999991547e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.019999999970718e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.169999999995848e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.020000000005413e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.610000000013052e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.469999999982658e-07, 8.89000000000445e-07, 8.330000000021653e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.609999999978357e-07, 8.89000000000445e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.299999999996811e-07, 9.43999999999251e-07, 8.889999999969755e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07]</msg>
<status status="PASS" starttime="20201030 18:27:26.481" endtime="20201030 18:27:26.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.477" endtime="20201030 18:27:26.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:26.487" endtime="20201030 18:27:26.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.485" endtime="20201030 18:27:26.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.484" endtime="20201030 18:27:26.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.130" endtime="20201030 18:27:26.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.129" endtime="20201030 18:27:26.508"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.515" endtime="20201030 18:27:26.526"></status>
</kw>
<msg timestamp="20201030 18:27:26.526" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.514" endtime="20201030 18:27:26.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.529" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.527" endtime="20201030 18:27:26.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.530" endtime="20201030 18:27:26.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.511" endtime="20201030 18:27:26.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.510" endtime="20201030 18:27:26.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.540" endtime="20201030 18:27:26.838"></status>
</kw>
<msg timestamp="20201030 18:27:26.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0193995, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019400792, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:26.539" endtime="20201030 18:27:26.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0193995, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019400792, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:26.842" endtime="20201030 18:27:26.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.850" endtime="20201030 18:27:26.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.536" endtime="20201030 18:27:26.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.534" endtime="20201030 18:27:26.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:26.856" level="INFO">${RESULT} = [{'diff': 1.2919999999999598e-06}, {'diff': 8.89000000000445e-07}, {'diff': 8.89000000000445e-07}, {'diff': 8.89000000000445e-07}, {'diff': 9.170000000030543e-07}, {'diff': 9.030000000000149e-07}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:26.853" endtime="20201030 18:27:26.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:26.861" level="INFO">${OVERHEAD} = {'diff': [1.2919999999999598e-06, 8.89000000000445e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.170000000030543e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000...</msg>
<status status="PASS" starttime="20201030 18:27:26.857" endtime="20201030 18:27:26.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.865" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:26.864" endtime="20201030 18:27:26.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.867" level="INFO">VALUE: [1.2919999999999598e-06, 8.89000000000445e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.170000000030543e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.89000000000445e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.18999999999126e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.750000000008751e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 8.750000000008751e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.89000000000445e-07, 8.89000000000445e-07, 8.749999999974056e-07]</msg>
<status status="PASS" starttime="20201030 18:27:26.866" endtime="20201030 18:27:26.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.861" endtime="20201030 18:27:26.869"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:26.872" endtime="20201030 18:27:26.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.871" endtime="20201030 18:27:26.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.870" endtime="20201030 18:27:26.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.508" endtime="20201030 18:27:26.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.508" endtime="20201030 18:27:26.893"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.901" endtime="20201030 18:27:26.913"></status>
</kw>
<msg timestamp="20201030 18:27:26.913" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.899" endtime="20201030 18:27:26.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.916" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.914" endtime="20201030 18:27:26.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.917" endtime="20201030 18:27:26.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.897" endtime="20201030 18:27:26.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.895" endtime="20201030 18:27:26.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.926" endtime="20201030 18:27:27.206"></status>
</kw>
<msg timestamp="20201030 18:27:27.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01927175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019273028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:26.925" endtime="20201030 18:27:27.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01927175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019273028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:27.210" endtime="20201030 18:27:27.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.218" endtime="20201030 18:27:27.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.922" endtime="20201030 18:27:27.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.920" endtime="20201030 18:27:27.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:27.225" level="INFO">${RESULT} = [{'diff': 1.27800000000039e-06}, {'diff': 9.73000000001334e-07}, {'diff': 9.449999999987246e-07}, {'diff': 8.89000000000445e-07}, {'diff': 9.030000000000149e-07}, {'diff': 8.610000000013052e-07}, {'di...</msg>
<status status="PASS" starttime="20201030 18:27:27.222" endtime="20201030 18:27:27.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:27.232" level="INFO">${OVERHEAD} = {'diff': [1.27800000000039e-06, 9.73000000001334e-07, 9.449999999987246e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.610000000013052e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.0200000...</msg>
<status status="PASS" starttime="20201030 18:27:27.226" endtime="20201030 18:27:27.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.236" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:27.235" endtime="20201030 18:27:27.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.238" level="INFO">VALUE: [1.27800000000039e-06, 9.73000000001334e-07, 9.449999999987246e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.610000000013052e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.160000000001112e-07, 8.200000000020691e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.750000000008751e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.169999999995848e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 8.879999999975019e-07, 8.749999999974056e-07, 9.73000000001334e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.59000000001764e-07, 9.309999999991547e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.020000000005413e-07, 9.170000000030543e-07]</msg>
<status status="PASS" starttime="20201030 18:27:27.237" endtime="20201030 18:27:27.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.233" endtime="20201030 18:27:27.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:27.243" endtime="20201030 18:27:27.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.241" endtime="20201030 18:27:27.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.240" endtime="20201030 18:27:27.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.894" endtime="20201030 18:27:27.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.893" endtime="20201030 18:27:27.264"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.271" endtime="20201030 18:27:27.283"></status>
</kw>
<msg timestamp="20201030 18:27:27.283" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.270" endtime="20201030 18:27:27.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.286" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.284" endtime="20201030 18:27:27.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.287" endtime="20201030 18:27:27.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.267" endtime="20201030 18:27:27.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.266" endtime="20201030 18:27:27.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.296" endtime="20201030 18:27:27.580"></status>
</kw>
<msg timestamp="20201030 18:27:27.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019377458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019378764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:27.295" endtime="20201030 18:27:27.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019377458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019378764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:27.584" endtime="20201030 18:27:27.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.592" endtime="20201030 18:27:27.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.292" endtime="20201030 18:27:27.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.290" endtime="20201030 18:27:27.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:27.599" level="INFO">${RESULT} = [{'diff': 1.3059999999995298e-06}, {'diff': 9.169999999995848e-07}, {'diff': 9.030000000000149e-07}, {'diff': 8.89000000000445e-07}, {'diff': 9.020000000005413e-07}, {'diff': 9.719999999983908e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:27:27.596" endtime="20201030 18:27:27.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:27.603" level="INFO">${OVERHEAD} = {'diff': [1.3059999999995298e-06, 9.169999999995848e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.020000000005413e-07, 9.719999999983908e-07, 9.020000000005413e-07, 8.89000000000445e-07, 9.43999...</msg>
<status status="PASS" starttime="20201030 18:27:27.600" endtime="20201030 18:27:27.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.608" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:27.607" endtime="20201030 18:27:27.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.610" level="INFO">VALUE: [1.3059999999995298e-06, 9.169999999995848e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.020000000005413e-07, 9.719999999983908e-07, 9.020000000005413e-07, 8.89000000000445e-07, 9.43999999999251e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.889999999969755e-07, 9.020000000005413e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 8.889999999969755e-07, 9.030000000000149e-07, 9.169999999995848e-07, 8.889999999969755e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.749999999974056e-07, 8.750000000008751e-07, 9.450000000021941e-07, 9.160000000001112e-07, 9.170000000030543e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.019999999970718e-07, 9.020000000005413e-07, 8.89000000000445e-07, 8.89000000000445e-07, 8.889999999969755e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.020000000005413e-07, 8.889999999969755e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.170000000030543e-07]</msg>
<status status="PASS" starttime="20201030 18:27:27.609" endtime="20201030 18:27:27.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.604" endtime="20201030 18:27:27.611"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:27.615" endtime="20201030 18:27:27.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.613" endtime="20201030 18:27:27.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.612" endtime="20201030 18:27:27.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.264" endtime="20201030 18:27:27.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.264" endtime="20201030 18:27:27.635"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.643" endtime="20201030 18:27:27.654"></status>
</kw>
<msg timestamp="20201030 18:27:27.655" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.641" endtime="20201030 18:27:27.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.657" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.656" endtime="20201030 18:27:27.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.659" endtime="20201030 18:27:27.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.639" endtime="20201030 18:27:27.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.637" endtime="20201030 18:27:27.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.668" endtime="20201030 18:27:27.958"></status>
</kw>
<msg timestamp="20201030 18:27:27.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019610736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019612028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:27.667" endtime="20201030 18:27:27.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019610736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019612028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:27.962" endtime="20201030 18:27:27.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.970" endtime="20201030 18:27:27.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.664" endtime="20201030 18:27:27.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.662" endtime="20201030 18:27:27.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:27.976" level="INFO">${RESULT} = [{'diff': 1.2919999999999598e-06}, {'diff': 8.89000000000445e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.169999999995848e-07}, {'diff': 9.160000000001112e-07}, {'diff': 9.030000000000149e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:27:27.973" endtime="20201030 18:27:27.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:27.981" level="INFO">${OVERHEAD} = {'diff': [1.2919999999999598e-06, 8.89000000000445e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.030000000000149e-07, 8.469999999982658e-07, 8.889999999969755e-07, 9.1699...</msg>
<status status="PASS" starttime="20201030 18:27:27.977" endtime="20201030 18:27:27.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.985" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:27.984" endtime="20201030 18:27:27.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.987" level="INFO">VALUE: [1.2919999999999598e-06, 8.89000000000445e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.030000000000149e-07, 8.469999999982658e-07, 8.889999999969755e-07, 9.169999999995848e-07, 8.34000000001639e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.170000000030543e-07, 9.450000000021941e-07, 8.469999999982658e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.480000000012089e-07, 9.030000000000149e-07, 8.470000000017353e-07, 9.020000000005413e-07, 8.89000000000445e-07, 9.020000000005413e-07, 9.030000000000149e-07, 8.880000000009713e-07, 9.030000000000149e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.170000000030543e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.449999999987246e-07, 8.750000000008751e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.749999999974056e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07]</msg>
<status status="PASS" starttime="20201030 18:27:27.986" endtime="20201030 18:27:27.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.981" endtime="20201030 18:27:27.989"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:27.992" endtime="20201030 18:27:28.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.991" endtime="20201030 18:27:28.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.990" endtime="20201030 18:27:28.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.636" endtime="20201030 18:27:28.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.636" endtime="20201030 18:27:28.014"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.028" endtime="20201030 18:27:28.040"></status>
</kw>
<msg timestamp="20201030 18:27:28.041" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:28.026" endtime="20201030 18:27:28.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.045" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:28.042" endtime="20201030 18:27:28.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.047" endtime="20201030 18:27:28.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.021" endtime="20201030 18:27:28.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.018" endtime="20201030 18:27:28.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.057" endtime="20201030 18:27:28.347"></status>
</kw>
<msg timestamp="20201030 18:27:28.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027728972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027730319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:28.055" endtime="20201030 18:27:28.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027728972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027730319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:28.351" endtime="20201030 18:27:28.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.359" endtime="20201030 18:27:28.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.053" endtime="20201030 18:27:28.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.051" endtime="20201030 18:27:28.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:28.365" level="INFO">${RESULT} = [{'diff': 1.3469999999987659e-06}, {'diff': 9.030000000000149e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.020000000005413e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.170000000030543e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:27:28.362" endtime="20201030 18:27:28.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:28.370" level="INFO">${OVERHEAD} = {'diff': [1.3469999999987659e-06, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.170000000030543e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.0300...</msg>
<status status="PASS" starttime="20201030 18:27:28.366" endtime="20201030 18:27:28.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.374" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:28.373" endtime="20201030 18:27:28.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.377" level="INFO">VALUE: [1.3469999999987659e-06, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.170000000030543e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.750000000008751e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 8.329999999986959e-07, 9.160000000001112e-07, 9.020000000005413e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.030000000000149e-07, 8.610000000013052e-07, 9.030000000000149e-07, 9.170000000030543e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.750000000008751e-07, 9.020000000005413e-07, 8.89000000000445e-07, 8.889999999969755e-07, 8.880000000009713e-07, 8.880000000009713e-07, 8.889999999969755e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.020000000005413e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.170000000030543e-07]</msg>
<status status="PASS" starttime="20201030 18:27:28.376" endtime="20201030 18:27:28.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.371" endtime="20201030 18:27:28.378"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:28.381" endtime="20201030 18:27:28.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.380" endtime="20201030 18:27:28.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.379" endtime="20201030 18:27:28.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.016" endtime="20201030 18:27:28.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.015" endtime="20201030 18:27:28.402"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.410" endtime="20201030 18:27:28.422"></status>
</kw>
<msg timestamp="20201030 18:27:28.422" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:28.409" endtime="20201030 18:27:28.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.425" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:28.423" endtime="20201030 18:27:28.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.426" endtime="20201030 18:27:28.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.406" endtime="20201030 18:27:28.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.404" endtime="20201030 18:27:28.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.435" endtime="20201030 18:27:28.716"></status>
</kw>
<msg timestamp="20201030 18:27:28.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020126208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020127569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:28.433" endtime="20201030 18:27:28.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020126208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020127569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:28.720" endtime="20201030 18:27:28.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.728" endtime="20201030 18:27:28.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.431" endtime="20201030 18:27:28.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.429" endtime="20201030 18:27:28.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:28.736" level="INFO">${RESULT} = [{'diff': 1.3610000000018052e-06}, {'diff': 9.310000000026242e-07}, {'diff': 8.89000000000445e-07}, {'diff': 8.750000000008751e-07}, {'diff': 9.020000000005413e-07}, {'diff': 9.030000000000149e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:27:28.733" endtime="20201030 18:27:28.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:28.740" level="INFO">${OVERHEAD} = {'diff': [1.3610000000018052e-06, 9.310000000026242e-07, 8.89000000000445e-07, 8.750000000008751e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.8900...</msg>
<status status="PASS" starttime="20201030 18:27:28.737" endtime="20201030 18:27:28.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.744" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:28.743" endtime="20201030 18:27:28.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.747" level="INFO">VALUE: [1.3610000000018052e-06, 9.310000000026242e-07, 8.89000000000445e-07, 8.750000000008751e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.89000000000445e-07, 8.889999999969755e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 8.879999999975019e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.749999999974056e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.019999999970718e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.159999999966417e-07, 8.89000000000445e-07, 8.89000000000445e-07, 8.89000000000445e-07, 8.89000000000445e-07, 8.89000000000445e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.89000000000445e-07, 8.89000000000445e-07, 8.750000000008751e-07, 9.030000000000149e-07, 8.18999999999126e-07, 9.160000000001112e-07]</msg>
<status status="PASS" starttime="20201030 18:27:28.745" endtime="20201030 18:27:28.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.741" endtime="20201030 18:27:28.748"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:28.751" endtime="20201030 18:27:28.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.750" endtime="20201030 18:27:28.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.749" endtime="20201030 18:27:28.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.403" endtime="20201030 18:27:28.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.403" endtime="20201030 18:27:28.772"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.780" endtime="20201030 18:27:28.791"></status>
</kw>
<msg timestamp="20201030 18:27:28.791" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:28.779" endtime="20201030 18:27:28.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.794" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:28.793" endtime="20201030 18:27:28.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.795" endtime="20201030 18:27:28.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.776" endtime="20201030 18:27:28.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.774" endtime="20201030 18:27:28.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.805" endtime="20201030 18:27:29.094"></status>
</kw>
<msg timestamp="20201030 18:27:29.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019571403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:28.803" endtime="20201030 18:27:29.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019571403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:29.098" endtime="20201030 18:27:29.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.106" endtime="20201030 18:27:29.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.801" endtime="20201030 18:27:29.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.799" endtime="20201030 18:27:29.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:29.113" level="INFO">${RESULT} = [{'diff': 1.2919999999999598e-06}, {'diff': 8.89000000000445e-07}, {'diff': 9.169999999995848e-07}, {'diff': 8.889999999969755e-07}, {'diff': 8.18999999999126e-07}, {'diff': 8.750000000008751e-07}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:29.109" endtime="20201030 18:27:29.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:29.117" level="INFO">${OVERHEAD} = {'diff': [1.2919999999999598e-06, 8.89000000000445e-07, 9.169999999995848e-07, 8.889999999969755e-07, 8.18999999999126e-07, 8.750000000008751e-07, 9.020000000005413e-07, 9.030000000000149e-07, 8.89000...</msg>
<status status="PASS" starttime="20201030 18:27:29.114" endtime="20201030 18:27:29.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.121" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:29.120" endtime="20201030 18:27:29.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.124" level="INFO">VALUE: [1.2919999999999598e-06, 8.89000000000445e-07, 9.169999999995848e-07, 8.889999999969755e-07, 8.18999999999126e-07, 8.750000000008751e-07, 9.020000000005413e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.020000000005413e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.889999999969755e-07, 8.750000000008751e-07, 8.889999999969755e-07, 9.449999999987246e-07, 9.299999999996811e-07, 9.440000000027204e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.169999999995848e-07, 8.889999999969755e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.880000000009713e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.169999999995848e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.019999999970718e-07, 9.020000000005413e-07, 9.020000000005413e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.589999999982945e-07]</msg>
<status status="PASS" starttime="20201030 18:27:29.122" endtime="20201030 18:27:29.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.117" endtime="20201030 18:27:29.128"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:29.135" endtime="20201030 18:27:29.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.132" endtime="20201030 18:27:29.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.130" endtime="20201030 18:27:29.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.773" endtime="20201030 18:27:29.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.773" endtime="20201030 18:27:29.156"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.164" endtime="20201030 18:27:29.175"></status>
</kw>
<msg timestamp="20201030 18:27:29.175" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.163" endtime="20201030 18:27:29.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.178" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.176" endtime="20201030 18:27:29.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.179" endtime="20201030 18:27:29.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.160" endtime="20201030 18:27:29.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.158" endtime="20201030 18:27:29.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.187" endtime="20201030 18:27:29.477"></status>
</kw>
<msg timestamp="20201030 18:27:29.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019803944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019805236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:29.186" endtime="20201030 18:27:29.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019803944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019805236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:29.481" endtime="20201030 18:27:29.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.489" endtime="20201030 18:27:29.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.183" endtime="20201030 18:27:29.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.182" endtime="20201030 18:27:29.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:29.495" level="INFO">${RESULT} = [{'diff': 1.2919999999999598e-06}, {'diff': 8.750000000008751e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.309999999991547e-07}, {'diff': 9.449999999987246e-07}, {'diff': 9.020000000005413e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:27:29.492" endtime="20201030 18:27:29.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:29.500" level="INFO">${OVERHEAD} = {'diff': [1.2919999999999598e-06, 8.750000000008751e-07, 9.030000000000149e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.020000000005413e-07, 8.889999999969755e-07, 9.030000000000149e-07, 8.890...</msg>
<status status="PASS" starttime="20201030 18:27:29.496" endtime="20201030 18:27:29.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.504" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:29.503" endtime="20201030 18:27:29.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.507" level="INFO">VALUE: [1.2919999999999598e-06, 8.750000000008751e-07, 9.030000000000149e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.020000000005413e-07, 8.889999999969755e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.170000000030543e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.750000000008751e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.750000000008751e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.750000000008751e-07, 8.89000000000445e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.749999999974056e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.880000000009713e-07, 8.89000000000445e-07, 9.020000000005413e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.880000000009713e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.169999999995848e-07]</msg>
<status status="PASS" starttime="20201030 18:27:29.506" endtime="20201030 18:27:29.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.501" endtime="20201030 18:27:29.508"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:29.512" endtime="20201030 18:27:29.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.510" endtime="20201030 18:27:29.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.509" endtime="20201030 18:27:29.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.157" endtime="20201030 18:27:29.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.157" endtime="20201030 18:27:29.532"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.540" endtime="20201030 18:27:29.551"></status>
</kw>
<msg timestamp="20201030 18:27:29.552" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.539" endtime="20201030 18:27:29.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.554" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.553" endtime="20201030 18:27:29.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.555" endtime="20201030 18:27:29.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.536" endtime="20201030 18:27:29.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.535" endtime="20201030 18:27:29.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.564" endtime="20201030 18:27:29.849"></status>
</kw>
<msg timestamp="20201030 18:27:29.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019400847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019402139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:29.563" endtime="20201030 18:27:29.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019400847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019402139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:29.853" endtime="20201030 18:27:29.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.861" endtime="20201030 18:27:29.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.560" endtime="20201030 18:27:29.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.559" endtime="20201030 18:27:29.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:29.869" level="INFO">${RESULT} = [{'diff': 1.2919999999999598e-06}, {'diff': 9.450000000021941e-07}, {'diff': 9.43999999999251e-07}, {'diff': 9.020000000005413e-07}, {'diff': 8.889999999969755e-07}, {'diff': 9.030000000000149e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:27:29.866" endtime="20201030 18:27:29.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:29.873" level="INFO">${OVERHEAD} = {'diff': [1.2919999999999598e-06, 9.450000000021941e-07, 9.43999999999251e-07, 9.020000000005413e-07, 8.889999999969755e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.8899...</msg>
<status status="PASS" starttime="20201030 18:27:29.870" endtime="20201030 18:27:29.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.877" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:29.876" endtime="20201030 18:27:29.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.879" level="INFO">VALUE: [1.2919999999999598e-06, 9.450000000021941e-07, 9.43999999999251e-07, 9.020000000005413e-07, 8.889999999969755e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.889999999969755e-07, 9.030000000000149e-07, 8.750000000008751e-07, 8.469999999982658e-07, 8.750000000008751e-07, 9.160000000001112e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.89000000000445e-07, 9.020000000005413e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.889999999969755e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.610000000013052e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.89000000000445e-07, 8.750000000008751e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.169999999995848e-07, 8.89000000000445e-07, 8.889999999969755e-07, 9.169999999995848e-07, 9.030000000000149e-07, 8.749999999974056e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.020000000005413e-07, 8.89000000000445e-07, 9.020000000005413e-07, 8.610000000013052e-07]</msg>
<status status="PASS" starttime="20201030 18:27:29.878" endtime="20201030 18:27:29.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.874" endtime="20201030 18:27:29.881"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:29.884" endtime="20201030 18:27:29.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.883" endtime="20201030 18:27:29.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.882" endtime="20201030 18:27:29.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.533" endtime="20201030 18:27:29.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.533" endtime="20201030 18:27:29.905"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.913" endtime="20201030 18:27:29.924"></status>
</kw>
<msg timestamp="20201030 18:27:29.925" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.911" endtime="20201030 18:27:29.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.927" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.926" endtime="20201030 18:27:29.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.928" endtime="20201030 18:27:29.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.909" endtime="20201030 18:27:29.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.907" endtime="20201030 18:27:29.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.938" endtime="20201030 18:27:30.227"></status>
</kw>
<msg timestamp="20201030 18:27:30.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019524292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019525542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:29.936" endtime="20201030 18:27:30.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019524292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019525542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:30.231" endtime="20201030 18:27:30.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.239" endtime="20201030 18:27:30.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.934" endtime="20201030 18:27:30.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.932" endtime="20201030 18:27:30.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:30.245" level="INFO">${RESULT} = [{'diff': 1.2500000000012501e-06}, {'diff': 9.030000000000149e-07}, {'diff': 8.749999999974056e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.030000000000149e-07}, {'diff': 8.470000000017353e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:27:30.242" endtime="20201030 18:27:30.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:30.249" level="INFO">${OVERHEAD} = {'diff': [1.2500000000012501e-06, 9.030000000000149e-07, 8.749999999974056e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.470000000017353e-07, 8.749999999974056e-07, 9.020000000005413e-07, 9.020...</msg>
<status status="PASS" starttime="20201030 18:27:30.246" endtime="20201030 18:27:30.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.253" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:30.252" endtime="20201030 18:27:30.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.256" level="INFO">VALUE: [1.2500000000012501e-06, 9.030000000000149e-07, 8.749999999974056e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.470000000017353e-07, 8.749999999974056e-07, 9.020000000005413e-07, 9.020000000005413e-07, 9.020000000005413e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.160000000001112e-07, 8.89000000000445e-07, 9.020000000005413e-07, 8.89000000000445e-07, 9.170000000030543e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.880000000009713e-07, 8.889999999969755e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.880000000009713e-07, 8.89000000000445e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.469999999982658e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.57999999998821e-07, 9.309999999991547e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.889999999969755e-07, 9.030000000000149e-07, 9.170000000030543e-07, 9.019999999970718e-07, 9.030000000000149e-07, 8.89000000000445e-07]</msg>
<status status="PASS" starttime="20201030 18:27:30.255" endtime="20201030 18:27:30.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.250" endtime="20201030 18:27:30.258"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:30.262" endtime="20201030 18:27:30.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.260" endtime="20201030 18:27:30.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.259" endtime="20201030 18:27:30.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.906" endtime="20201030 18:27:30.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.906" endtime="20201030 18:27:30.282"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.290" endtime="20201030 18:27:30.301"></status>
</kw>
<msg timestamp="20201030 18:27:30.302" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:30.289" endtime="20201030 18:27:30.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.304" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:30.303" endtime="20201030 18:27:30.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.305" endtime="20201030 18:27:30.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.286" endtime="20201030 18:27:30.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.284" endtime="20201030 18:27:30.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.314" endtime="20201030 18:27:30.604"></status>
</kw>
<msg timestamp="20201030 18:27:30.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019538097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019539389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:30.313" endtime="20201030 18:27:30.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019538097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019539389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:30.608" endtime="20201030 18:27:30.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.616" endtime="20201030 18:27:30.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.310" endtime="20201030 18:27:30.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.309" endtime="20201030 18:27:30.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:30.623" level="INFO">${RESULT} = [{'diff': 1.2919999999999598e-06}, {'diff': 9.309999999991547e-07}, {'diff': 9.43999999999251e-07}, {'diff': 9.160000000001112e-07}, {'diff': 9.030000000000149e-07}, {'diff': 8.89000000000445e-07}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:30.620" endtime="20201030 18:27:30.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:30.630" level="INFO">${OVERHEAD} = {'diff': [1.2919999999999598e-06, 9.309999999991547e-07, 9.43999999999251e-07, 9.160000000001112e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000...</msg>
<status status="PASS" starttime="20201030 18:27:30.624" endtime="20201030 18:27:30.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.634" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:30.633" endtime="20201030 18:27:30.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.636" level="INFO">VALUE: [1.2919999999999598e-06, 9.309999999991547e-07, 9.43999999999251e-07, 9.160000000001112e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.860000000014302e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.43999999999251e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.020000000005413e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07]</msg>
<status status="PASS" starttime="20201030 18:27:30.635" endtime="20201030 18:27:30.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.631" endtime="20201030 18:27:30.638"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:30.641" endtime="20201030 18:27:30.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.640" endtime="20201030 18:27:30.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.639" endtime="20201030 18:27:30.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.283" endtime="20201030 18:27:30.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.283" endtime="20201030 18:27:30.662"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.670" endtime="20201030 18:27:30.681"></status>
</kw>
<msg timestamp="20201030 18:27:30.682" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:30.668" endtime="20201030 18:27:30.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.684" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:30.683" endtime="20201030 18:27:30.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.685" endtime="20201030 18:27:30.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.666" endtime="20201030 18:27:30.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.664" endtime="20201030 18:27:30.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.694" endtime="20201030 18:27:30.980"></status>
</kw>
<msg timestamp="20201030 18:27:30.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019431361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019432667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:30.692" endtime="20201030 18:27:30.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019431361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019432667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:30.985" endtime="20201030 18:27:30.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.993" endtime="20201030 18:27:30.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.690" endtime="20201030 18:27:30.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.688" endtime="20201030 18:27:30.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:31.000" level="INFO">${RESULT} = [{'diff': 1.3059999999995298e-06}, {'diff': 9.450000000021941e-07}, {'diff': 8.880000000009713e-07}, {'diff': 8.89000000000445e-07}, {'diff': 8.880000000009713e-07}, {'diff': 8.89000000000445e-07}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:30.997" endtime="20201030 18:27:31.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:31.004" level="INFO">${OVERHEAD} = {'diff': [1.3059999999995298e-06, 9.450000000021941e-07, 8.880000000009713e-07, 8.89000000000445e-07, 8.880000000009713e-07, 8.89000000000445e-07, 8.749999999974056e-07, 8.750000000008751e-07, 9.17000...</msg>
<status status="PASS" starttime="20201030 18:27:31.001" endtime="20201030 18:27:31.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.008" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:31.007" endtime="20201030 18:27:31.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.011" level="INFO">VALUE: [1.3059999999995298e-06, 9.450000000021941e-07, 8.880000000009713e-07, 8.89000000000445e-07, 8.880000000009713e-07, 8.89000000000445e-07, 8.749999999974056e-07, 8.750000000008751e-07, 9.170000000030543e-07, 9.160000000001112e-07, 8.880000000009713e-07, 8.89000000000445e-07, 9.449999999987246e-07, 9.030000000000149e-07, 9.169999999995848e-07, 8.89000000000445e-07, 8.880000000009713e-07, 8.469999999982658e-07, 9.160000000001112e-07, 9.030000000000149e-07, 8.880000000009713e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.89000000000445e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.169999999995848e-07, 8.889999999969755e-07, 8.470000000017353e-07, 9.020000000005413e-07, 9.020000000005413e-07, 9.030000000000149e-07, 8.750000000008751e-07, 8.89000000000445e-07, 9.299999999996811e-07, 9.020000000005413e-07, 8.89000000000445e-07, 9.309999999991547e-07, 8.89000000000445e-07]</msg>
<status status="PASS" starttime="20201030 18:27:31.009" endtime="20201030 18:27:31.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.005" endtime="20201030 18:27:31.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:31.020" endtime="20201030 18:27:31.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.019" endtime="20201030 18:27:31.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.018" endtime="20201030 18:27:31.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.663" endtime="20201030 18:27:31.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.662" endtime="20201030 18:27:31.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.407" endtime="20201030 18:27:31.041"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:31.045" endtime="20201030 18:27:31.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.043" endtime="20201030 18:27:31.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.042" endtime="20201030 18:27:31.065"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:23.337" endtime="20201030 18:27:31.066" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:31.072" endtime="20201030 18:27:31.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.071" endtime="20201030 18:27:31.092"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.106" endtime="20201030 18:27:31.120"></status>
</kw>
<msg timestamp="20201030 18:27:31.121" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.104" endtime="20201030 18:27:31.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.123" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.122" endtime="20201030 18:27:31.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.126" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:31.124" endtime="20201030 18:27:31.127"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:31.102" endtime="20201030 18:27:31.127"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:31.100" endtime="20201030 18:27:31.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.098" endtime="20201030 18:27:31.128"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:31.132" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:31.131" endtime="20201030 18:27:31.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.129" endtime="20201030 18:27:31.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.098" endtime="20201030 18:27:31.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.097" endtime="20201030 18:27:31.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.134" endtime="20201030 18:27:31.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.095" endtime="20201030 18:27:31.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.093" endtime="20201030 18:27:31.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.070" endtime="20201030 18:27:31.136"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.144" endtime="20201030 18:27:31.163"></status>
</kw>
<msg timestamp="20201030 18:27:31.164" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.143" endtime="20201030 18:27:31.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.166" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.165" endtime="20201030 18:27:31.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.167" endtime="20201030 18:27:31.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.140" endtime="20201030 18:27:31.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.138" endtime="20201030 18:27:31.170"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.172" endtime="20201030 18:27:31.174"></status>
</kw>
<msg timestamp="20201030 18:27:31.174" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:27:31.171" endtime="20201030 18:27:31.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.178" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:31.177" endtime="20201030 18:27:31.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.180" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:31.179" endtime="20201030 18:27:31.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.175" endtime="20201030 18:27:31.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.186" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:31.185" endtime="20201030 18:27:31.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.188" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:31.187" endtime="20201030 18:27:31.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.182" endtime="20201030 18:27:31.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.195" endtime="20201030 18:27:31.479"></status>
</kw>
<msg timestamp="20201030 18:27:31.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064490667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064494569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.194" endtime="20201030 18:27:31.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064490667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064494569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.483" endtime="20201030 18:27:31.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.491" endtime="20201030 18:27:31.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.191" endtime="20201030 18:27:31.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.190" endtime="20201030 18:27:31.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:31.498" level="INFO">${RESULT} = [{'diff': 3.902000000000072e-06}, {'diff': 2.76400000000232e-06}, {'diff': 2.7499999999958114e-06}, {'diff': 2.7360000000031803e-06}, {'diff': 2.79200000000146e-06}, {'diff': 2.7499999999958114e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:31.495" endtime="20201030 18:27:31.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:31.502" level="INFO">${OVERHEAD} = {'diff': [3.902000000000072e-06, 2.76400000000232e-06, 2.7499999999958114e-06, 2.7360000000031803e-06, 2.79200000000146e-06, 2.7499999999958114e-06, 2.7360000000031803e-06, 2.7360000000031803e-06, 2.7...</msg>
<status status="PASS" starttime="20201030 18:27:31.499" endtime="20201030 18:27:31.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.507" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 18:27:31.505" endtime="20201030 18:27:31.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.510" level="INFO">VALUE: [3.902000000000072e-06, 2.76400000000232e-06, 2.7499999999958114e-06, 2.7360000000031803e-06, 2.79200000000146e-06, 2.7499999999958114e-06, 2.7360000000031803e-06, 2.7360000000031803e-06, 2.7089999999896364e-06, 2.7499999999958114e-06, 2.7219999999966715e-06, 2.750000000009689e-06, 2.750000000009689e-06, 2.750000000009689e-06, 2.7499999999958114e-06, 2.76400000000232e-06, 2.7360000000031803e-06, 2.7360000000031803e-06, 2.7499999999958114e-06, 2.750000000009689e-06, 2.76400000000232e-06, 2.722999999996145e-06, 2.750000000009689e-06, 2.722999999996145e-06, 2.7360000000031803e-06, 2.737000000002654e-06, 2.7639999999884424e-06, 2.7499999999958114e-06, 2.7360000000031803e-06, 2.750000000009689e-06, 2.7360000000031803e-06, 2.750000000009689e-06, 2.709000000003514e-06, 2.7360000000031803e-06, 2.7220000000105493e-06, 2.750000000009689e-06, 2.7359999999893025e-06, 2.7630000000028465e-06, 2.7219999999966715e-06, 2.7499999999958114e-06, 2.805000000008495e-06, 2.7219999999966715e-06, 2.7499999999958114e-06, 2.7360000000031803e-06, 2.76400000000232e-06, 2.7499999999958114e-06, 2.7499999999958114e-06, 2.7359999999893025e-06, 2.8189999999872484e-06, 2.7360000000031803e-06]</msg>
<status status="PASS" starttime="20201030 18:27:31.508" endtime="20201030 18:27:31.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.503" endtime="20201030 18:27:31.511"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:31.515" endtime="20201030 18:27:31.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.513" endtime="20201030 18:27:31.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.512" endtime="20201030 18:27:31.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.137" endtime="20201030 18:27:31.535"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:31.067" endtime="20201030 18:27:31.536" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:31.543" endtime="20201030 18:27:31.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.541" endtime="20201030 18:27:31.562"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.575" endtime="20201030 18:27:31.590"></status>
</kw>
<msg timestamp="20201030 18:27:31.590" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.574" endtime="20201030 18:27:31.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.593" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.591" endtime="20201030 18:27:31.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.596" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:31.594" endtime="20201030 18:27:31.596"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:31.571" endtime="20201030 18:27:31.597"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:31.569" endtime="20201030 18:27:31.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.568" endtime="20201030 18:27:31.598"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:31.601" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:31.601" endtime="20201030 18:27:31.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.599" endtime="20201030 18:27:31.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.567" endtime="20201030 18:27:31.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.566" endtime="20201030 18:27:31.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.603" endtime="20201030 18:27:31.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.565" endtime="20201030 18:27:31.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.563" endtime="20201030 18:27:31.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.540" endtime="20201030 18:27:31.606"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.616" endtime="20201030 18:27:31.662"></status>
</kw>
<msg timestamp="20201030 18:27:31.663" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.614" endtime="20201030 18:27:31.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.665" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.664" endtime="20201030 18:27:31.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.667" endtime="20201030 18:27:31.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.610" endtime="20201030 18:27:31.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.608" endtime="20201030 18:27:31.669"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.671" endtime="20201030 18:27:31.673"></status>
</kw>
<msg timestamp="20201030 18:27:31.673" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:27:31.670" endtime="20201030 18:27:31.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.678" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:31.677" endtime="20201030 18:27:31.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.680" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:31.679" endtime="20201030 18:27:31.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.674" endtime="20201030 18:27:31.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.684" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:31.683" endtime="20201030 18:27:31.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.686" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:31.685" endtime="20201030 18:27:31.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.681" endtime="20201030 18:27:31.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.693" endtime="20201030 18:27:31.980"></status>
</kw>
<msg timestamp="20201030 18:27:31.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066602917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066622847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.692" endtime="20201030 18:27:31.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066602917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066622847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.984" endtime="20201030 18:27:31.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.991" endtime="20201030 18:27:31.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.689" endtime="20201030 18:27:31.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.688" endtime="20201030 18:27:31.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:31.998" level="INFO">${RESULT} = [{'diff': 1.9930000000001336e-05}, {'diff': 1.961100000000271e-05}, {'diff': 1.9666000000001516e-05}, {'diff': 1.963900000000185e-05}, {'diff': 1.962499999999534e-05}, {'diff': 1.963900000000185e-05},...</msg>
<status status="PASS" starttime="20201030 18:27:31.995" endtime="20201030 18:27:31.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:32.003" level="INFO">${OVERHEAD} = {'diff': [1.9930000000001336e-05, 1.961100000000271e-05, 1.9666000000001516e-05, 1.963900000000185e-05, 1.962499999999534e-05, 1.963900000000185e-05, 1.972299999999927e-05, 1.963900000000185e-05, 1.96...</msg>
<status status="PASS" starttime="20201030 18:27:31.999" endtime="20201030 18:27:32.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.008" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 18:27:32.007" endtime="20201030 18:27:32.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.010" level="INFO">VALUE: [1.9930000000001336e-05, 1.961100000000271e-05, 1.9666000000001516e-05, 1.963900000000185e-05, 1.962499999999534e-05, 1.963900000000185e-05, 1.972299999999927e-05, 1.963900000000185e-05, 1.9653000000008358e-05, 1.963899999998797e-05, 1.962499999999534e-05, 1.965299999999448e-05, 1.963900000000185e-05, 1.963900000000185e-05, 1.961100000000271e-05, 1.963899999998797e-05, 1.961100000000271e-05, 1.963900000000185e-05, 1.963900000000185e-05, 1.962499999999534e-05, 1.963900000000185e-05, 1.963900000000185e-05, 1.9680000000008024e-05, 1.9708000000007164e-05, 1.963900000000185e-05, 1.963900000000185e-05, 1.962499999999534e-05, 1.9582999999989692e-05, 1.962499999999534e-05, 1.965299999999448e-05, 1.963900000000185e-05, 1.965299999999448e-05, 1.962500000000922e-05, 1.965299999999448e-05, 1.965299999999448e-05, 1.963899999998797e-05, 1.963900000000185e-05, 1.965299999999448e-05, 1.963900000000185e-05, 1.962499999999534e-05, 1.963900000000185e-05, 1.965299999999448e-05, 1.963900000000185e-05, 1.962500000000922e-05, 1.970899999999276e-05, 1.9707999999993286e-05, 1.962499999999534e-05, 1.963900000000185e-05, 1.9651999999995007e-05, 1.965299999999448e-05]</msg>
<status status="PASS" starttime="20201030 18:27:32.009" endtime="20201030 18:27:32.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.004" endtime="20201030 18:27:32.011"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:32.015" endtime="20201030 18:27:32.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.013" endtime="20201030 18:27:32.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.012" endtime="20201030 18:27:32.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.606" endtime="20201030 18:27:32.037"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:31.537" endtime="20201030 18:27:32.038" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:32.046" endtime="20201030 18:27:32.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.044" endtime="20201030 18:27:32.067"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.082" endtime="20201030 18:27:32.097"></status>
</kw>
<msg timestamp="20201030 18:27:32.097" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.080" endtime="20201030 18:27:32.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.100" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.098" endtime="20201030 18:27:32.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.103" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:32.101" endtime="20201030 18:27:32.104"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:32.078" endtime="20201030 18:27:32.105"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:32.075" endtime="20201030 18:27:32.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.074" endtime="20201030 18:27:32.106"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:32.109" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:32.108" endtime="20201030 18:27:32.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.106" endtime="20201030 18:27:32.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.073" endtime="20201030 18:27:32.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.072" endtime="20201030 18:27:32.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.111" endtime="20201030 18:27:32.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.070" endtime="20201030 18:27:32.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.067" endtime="20201030 18:27:32.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.043" endtime="20201030 18:27:32.114"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.122" endtime="20201030 18:27:32.239"></status>
</kw>
<msg timestamp="20201030 18:27:32.240" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.121" endtime="20201030 18:27:32.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.242" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.241" endtime="20201030 18:27:32.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.243" endtime="20201030 18:27:32.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.118" endtime="20201030 18:27:32.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.116" endtime="20201030 18:27:32.246"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.248" endtime="20201030 18:27:32.250"></status>
</kw>
<msg timestamp="20201030 18:27:32.250" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:27:32.247" endtime="20201030 18:27:32.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.254" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:32.253" endtime="20201030 18:27:32.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.256" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:32.255" endtime="20201030 18:27:32.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.251" endtime="20201030 18:27:32.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.261" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:32.260" endtime="20201030 18:27:32.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.263" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:32.262" endtime="20201030 18:27:32.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.258" endtime="20201030 18:27:32.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.270" endtime="20201030 18:27:32.591"></status>
</kw>
<msg timestamp="20201030 18:27:32.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069670792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069708361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:32.268" endtime="20201030 18:27:32.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069670792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069708361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:32.595" endtime="20201030 18:27:32.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.603" endtime="20201030 18:27:32.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.266" endtime="20201030 18:27:32.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.264" endtime="20201030 18:27:32.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:32.609" level="INFO">${RESULT} = [{'diff': 3.7569000000001185e-05}, {'diff': 3.7013999999988e-05}, {'diff': 3.711100000000633e-05}, {'diff': 3.705600000000753e-05}, {'diff': 3.7096999999999825e-05}, {'diff': 3.7082999999993316e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:27:32.606" endtime="20201030 18:27:32.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:32.613" level="INFO">${OVERHEAD} = {'diff': [3.7569000000001185e-05, 3.7013999999988e-05, 3.711100000000633e-05, 3.705600000000753e-05, 3.7096999999999825e-05, 3.7082999999993316e-05, 3.7096999999999825e-05, 3.7096999999999825e-05, 3.7...</msg>
<status status="PASS" starttime="20201030 18:27:32.610" endtime="20201030 18:27:32.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.619" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 18:27:32.617" endtime="20201030 18:27:32.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.621" level="INFO">VALUE: [3.7569000000001185e-05, 3.7013999999988e-05, 3.711100000000633e-05, 3.705600000000753e-05, 3.7096999999999825e-05, 3.7082999999993316e-05, 3.7096999999999825e-05, 3.7096999999999825e-05, 3.70979999999993e-05, 3.7083000000007194e-05, 3.7083000000007194e-05, 3.705599999999365e-05, 3.704200000000102e-05, 3.704200000000102e-05, 3.704200000000102e-05, 3.7083000000007194e-05, 3.705599999999365e-05, 3.7083000000007194e-05, 3.7083000000007194e-05, 3.704200000000102e-05, 3.7041000000001545e-05, 3.7096999999999825e-05, 3.707000000000016e-05, 3.702799999999451e-05, 3.7124999999998964e-05, 3.7055000000008054e-05, 3.707000000000016e-05, 3.705600000000753e-05, 3.709699999998595e-05, 3.707000000000016e-05, 3.7082999999993316e-05, 3.70970000000137e-05, 3.7124999999998964e-05, 3.7082999999993316e-05, 3.707000000000016e-05, 3.7084000000020545e-05, 3.7082999999993316e-05, 3.7084000000020545e-05, 3.708399999999279e-05, 3.7082999999993316e-05, 3.709799999998542e-05, 3.70970000000137e-05, 3.711100000000633e-05, 3.7082999999993316e-05, 3.70970000000137e-05, 3.7082999999993316e-05, 3.708399999999279e-05, 3.7055000000008054e-05, 3.7069000000000685e-05, 3.7069000000000685e-05]</msg>
<status status="PASS" starttime="20201030 18:27:32.620" endtime="20201030 18:27:32.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.615" endtime="20201030 18:27:32.622"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:32.626" endtime="20201030 18:27:32.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.624" endtime="20201030 18:27:32.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.623" endtime="20201030 18:27:32.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.114" endtime="20201030 18:27:32.646"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:32.040" endtime="20201030 18:27:32.647" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:32.653" endtime="20201030 18:27:32.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.652" endtime="20201030 18:27:32.673"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.688" endtime="20201030 18:27:32.702"></status>
</kw>
<msg timestamp="20201030 18:27:32.703" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.686" endtime="20201030 18:27:32.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.706" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.704" endtime="20201030 18:27:32.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.709" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:32.707" endtime="20201030 18:27:32.709"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:32.684" endtime="20201030 18:27:32.710"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:32.681" endtime="20201030 18:27:32.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.679" endtime="20201030 18:27:32.711"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:32.715" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:32.714" endtime="20201030 18:27:32.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.711" endtime="20201030 18:27:32.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.678" endtime="20201030 18:27:32.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.677" endtime="20201030 18:27:32.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.717" endtime="20201030 18:27:32.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.676" endtime="20201030 18:27:32.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.674" endtime="20201030 18:27:32.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.651" endtime="20201030 18:27:32.720"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.729" endtime="20201030 18:27:32.748"></status>
</kw>
<msg timestamp="20201030 18:27:32.749" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.727" endtime="20201030 18:27:32.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.752" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.750" endtime="20201030 18:27:32.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.753" endtime="20201030 18:27:32.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.725" endtime="20201030 18:27:32.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.722" endtime="20201030 18:27:32.756"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.758" endtime="20201030 18:27:32.760"></status>
</kw>
<msg timestamp="20201030 18:27:32.760" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:27:32.757" endtime="20201030 18:27:32.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.766" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:32.765" endtime="20201030 18:27:32.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.769" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:32.768" endtime="20201030 18:27:32.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.761" endtime="20201030 18:27:32.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.776" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:32.774" endtime="20201030 18:27:32.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.778" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:32.777" endtime="20201030 18:27:32.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.771" endtime="20201030 18:27:32.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.787" endtime="20201030 18:27:33.074"></status>
</kw>
<msg timestamp="20201030 18:27:33.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068008722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068009889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:32.786" endtime="20201030 18:27:33.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068008722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068009889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:33.079" endtime="20201030 18:27:33.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.089" endtime="20201030 18:27:33.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.783" endtime="20201030 18:27:33.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.780" endtime="20201030 18:27:33.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:33.097" level="INFO">${RESULT} = [{'diff': 1.1670000000102432e-06}, {'diff': 1.054999999999806e-06}, {'diff': 9.309999999956853e-07}, {'diff': 1.0700000000057885e-06}, {'diff': 9.440000000027204e-07}, {'diff': 1.1250000000045945e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:33.093" endtime="20201030 18:27:33.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:33.103" level="INFO">${OVERHEAD} = {'diff': [1.1670000000102432e-06, 1.054999999999806e-06, 9.309999999956853e-07, 1.0700000000057885e-06, 9.440000000027204e-07, 1.1250000000045945e-06, 9.299999999962116e-07, 1.0700000000057885e-06, 9....</msg>
<status status="PASS" starttime="20201030 18:27:33.098" endtime="20201030 18:27:33.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.109" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 18:27:33.107" endtime="20201030 18:27:33.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.113" level="INFO">VALUE: [1.1670000000102432e-06, 1.054999999999806e-06, 9.309999999956853e-07, 1.0700000000057885e-06, 9.440000000027204e-07, 1.1250000000045945e-06, 9.299999999962116e-07, 1.0700000000057885e-06, 9.170000000030543e-07, 1.069000000006315e-06, 9.440000000027204e-07, 1.082999999998946e-06, 9.309999999956853e-07, 1.082999999998946e-06, 9.170000000030543e-07, 1.069000000006315e-06, 9.029999999965455e-07, 1.082999999998946e-06, 9.309999999956853e-07, 1.0979999999910506e-06, 9.309999999956853e-07, 1.0689999999924371e-06, 9.439999999888427e-07, 1.069000000006315e-06, 9.310000000095631e-07, 1.0689999999924371e-06, 9.450000000021941e-07, 1.0699999999919108e-06, 9.309999999956853e-07, 1.0420000000066487e-06, 9.310000000095631e-07, 1.082999999998946e-06, 9.030000000104232e-07, 1.0560000000131575e-06, 9.029999999965455e-07, 1.0700000000057885e-06, 9.170000000030543e-07, 1.0559999999992797e-06, 9.309999999956853e-07, 1.082999999998946e-06, 9.169999999891765e-07, 1.0839999999984196e-06, 9.309999999956853e-07, 1.082999999998946e-06, 9.299999999962116e-07, 1.0699999999919108e-06, 9.310000000095631e-07, 1.082999999998946e-06, 9.170000000030543e-07, 1.0699999999919108e-06]</msg>
<status status="PASS" starttime="20201030 18:27:33.111" endtime="20201030 18:27:33.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.104" endtime="20201030 18:27:33.114"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:33.119" endtime="20201030 18:27:33.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.117" endtime="20201030 18:27:33.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.115" endtime="20201030 18:27:33.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.721" endtime="20201030 18:27:33.139"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:32.648" endtime="20201030 18:27:33.140" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:33.147" endtime="20201030 18:27:33.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.145" endtime="20201030 18:27:33.167"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.180" endtime="20201030 18:27:33.193"></status>
</kw>
<msg timestamp="20201030 18:27:33.194" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.178" endtime="20201030 18:27:33.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.196" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.195" endtime="20201030 18:27:33.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.199" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:33.197" endtime="20201030 18:27:33.200"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:33.176" endtime="20201030 18:27:33.200"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:33.173" endtime="20201030 18:27:33.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.172" endtime="20201030 18:27:33.201"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:33.205" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:33.204" endtime="20201030 18:27:33.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.202" endtime="20201030 18:27:33.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.171" endtime="20201030 18:27:33.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.170" endtime="20201030 18:27:33.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.207" endtime="20201030 18:27:33.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.169" endtime="20201030 18:27:33.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.167" endtime="20201030 18:27:33.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.144" endtime="20201030 18:27:33.210"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.221" endtime="20201030 18:27:33.268"></status>
</kw>
<msg timestamp="20201030 18:27:33.269" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.220" endtime="20201030 18:27:33.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.271" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.270" endtime="20201030 18:27:33.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.272" endtime="20201030 18:27:33.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.214" endtime="20201030 18:27:33.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.212" endtime="20201030 18:27:33.275"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.277" endtime="20201030 18:27:33.279"></status>
</kw>
<msg timestamp="20201030 18:27:33.279" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:27:33.276" endtime="20201030 18:27:33.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.283" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:33.282" endtime="20201030 18:27:33.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.285" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:33.284" endtime="20201030 18:27:33.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.280" endtime="20201030 18:27:33.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.290" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:33.289" endtime="20201030 18:27:33.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.292" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:33.291" endtime="20201030 18:27:33.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.287" endtime="20201030 18:27:33.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.299" endtime="20201030 18:27:33.587"></status>
</kw>
<msg timestamp="20201030 18:27:33.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067783014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067791625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:33.298" endtime="20201030 18:27:33.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067783014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067791625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:33.591" endtime="20201030 18:27:33.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.600" endtime="20201030 18:27:33.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.295" endtime="20201030 18:27:33.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.293" endtime="20201030 18:27:33.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:33.608" level="INFO">${RESULT} = [{'diff': 8.610999999991709e-06}, {'diff': 8.52800000000764e-06}, {'diff': 8.542000000000272e-06}, {'diff': 8.596999999999078e-06}, {'diff': 8.527000000008167e-06}, {'diff': 8.542000000000272e-06}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:33.604" endtime="20201030 18:27:33.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:33.613" level="INFO">${OVERHEAD} = {'diff': [8.610999999991709e-06, 8.52800000000764e-06, 8.542000000000272e-06, 8.596999999999078e-06, 8.527000000008167e-06, 8.542000000000272e-06, 8.542000000000272e-06, 8.554999999993429e-06, 8.52799...</msg>
<status status="PASS" starttime="20201030 18:27:33.609" endtime="20201030 18:27:33.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.618" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 18:27:33.617" endtime="20201030 18:27:33.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.620" level="INFO">VALUE: [8.610999999991709e-06, 8.52800000000764e-06, 8.542000000000272e-06, 8.596999999999078e-06, 8.527000000008167e-06, 8.542000000000272e-06, 8.542000000000272e-06, 8.554999999993429e-06, 8.527999999993763e-06, 8.541000000000798e-06, 8.52800000000764e-06, 8.555000000007307e-06, 8.569999999999411e-06, 8.485999999988114e-06, 8.514000000001132e-06, 8.555000000007307e-06, 8.55600000000678e-06, 8.542000000000272e-06, 8.542000000000272e-06, 8.542000000000272e-06, 8.541000000000798e-06, 8.541000000000798e-06, 8.5000000000085e-06, 8.527999999993763e-06, 8.527999999993763e-06, 8.542000000000272e-06, 8.542000000000272e-06, 8.555999999992903e-06, 8.554999999993429e-06, 8.54099999998692e-06, 8.568999999999938e-06, 8.541000000000798e-06, 8.52800000000764e-06, 8.499999999994623e-06, 8.55600000000678e-06, 8.542000000000272e-06, 8.555000000007307e-06, 8.514000000001132e-06, 8.527999999993763e-06, 8.527000000008167e-06, 8.527999999993763e-06, 8.486000000001992e-06, 8.568999999999938e-06, 8.542000000000272e-06, 8.582999999992569e-06, 8.541000000000798e-06, 8.5000000000085e-06, 8.542000000000272e-06, 8.5000000000085e-06, 8.52800000000764e-06]</msg>
<status status="PASS" starttime="20201030 18:27:33.619" endtime="20201030 18:27:33.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.614" endtime="20201030 18:27:33.621"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:33.625" endtime="20201030 18:27:33.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.623" endtime="20201030 18:27:33.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.622" endtime="20201030 18:27:33.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.210" endtime="20201030 18:27:33.646"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:33.141" endtime="20201030 18:27:33.646" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:33.653" endtime="20201030 18:27:33.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.652" endtime="20201030 18:27:33.673"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.686" endtime="20201030 18:27:33.700"></status>
</kw>
<msg timestamp="20201030 18:27:33.700" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.684" endtime="20201030 18:27:33.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.703" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.701" endtime="20201030 18:27:33.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.707" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:33.704" endtime="20201030 18:27:33.707"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:33.682" endtime="20201030 18:27:33.708"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:33.679" endtime="20201030 18:27:33.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.678" endtime="20201030 18:27:33.708"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:33.712" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:33.711" endtime="20201030 18:27:33.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.709" endtime="20201030 18:27:33.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.677" endtime="20201030 18:27:33.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.677" endtime="20201030 18:27:33.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.714" endtime="20201030 18:27:33.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.675" endtime="20201030 18:27:33.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.674" endtime="20201030 18:27:33.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.650" endtime="20201030 18:27:33.717"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.726" endtime="20201030 18:27:33.844"></status>
</kw>
<msg timestamp="20201030 18:27:33.845" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.724" endtime="20201030 18:27:33.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.847" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.846" endtime="20201030 18:27:33.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.848" endtime="20201030 18:27:33.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.721" endtime="20201030 18:27:33.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.719" endtime="20201030 18:27:33.851"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.853" endtime="20201030 18:27:33.855"></status>
</kw>
<msg timestamp="20201030 18:27:33.855" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:27:33.852" endtime="20201030 18:27:33.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.859" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:33.858" endtime="20201030 18:27:33.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.861" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:33.860" endtime="20201030 18:27:33.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.856" endtime="20201030 18:27:33.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.866" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:33.865" endtime="20201030 18:27:33.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.868" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:33.867" endtime="20201030 18:27:33.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.863" endtime="20201030 18:27:33.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.875" endtime="20201030 18:27:34.168"></status>
</kw>
<msg timestamp="20201030 18:27:34.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067061486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067077278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:33.874" endtime="20201030 18:27:34.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067061486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067077278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:34.172" endtime="20201030 18:27:34.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.180" endtime="20201030 18:27:34.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.871" endtime="20201030 18:27:34.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.869" endtime="20201030 18:27:34.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:34.188" level="INFO">${RESULT} = [{'diff': 1.5792000000000583e-05}, {'diff': 1.5708000000003164e-05}, {'diff': 1.556899999999306e-05}, {'diff': 1.569499999999613e-05}, {'diff': 1.558299999999957e-05}, {'diff': 1.5749999999994935e-05}...</msg>
<status status="PASS" starttime="20201030 18:27:34.185" endtime="20201030 18:27:34.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:34.192" level="INFO">${OVERHEAD} = {'diff': [1.5792000000000583e-05, 1.5708000000003164e-05, 1.556899999999306e-05, 1.569499999999613e-05, 1.558299999999957e-05, 1.5749999999994935e-05, 1.5598000000005552e-05, 1.5709000000002638e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:27:34.189" endtime="20201030 18:27:34.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.197" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 18:27:34.196" endtime="20201030 18:27:34.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.199" level="INFO">VALUE: [1.5792000000000583e-05, 1.5708000000003164e-05, 1.556899999999306e-05, 1.569499999999613e-05, 1.558299999999957e-05, 1.5749999999994935e-05, 1.5598000000005552e-05, 1.5709000000002638e-05, 1.558299999999957e-05, 1.566699999999699e-05, 1.556900000000694e-05, 1.5749999999994935e-05, 1.5555999999999903e-05, 1.5695000000010007e-05, 1.5598000000005552e-05, 1.5708000000003164e-05, 1.5583999999999043e-05, 1.5721999999995795e-05, 1.561099999999871e-05, 1.5708000000003164e-05, 1.556900000000694e-05, 1.5749999999994935e-05, 1.55969999999922e-05, 1.5721999999995795e-05, 1.5583999999999043e-05, 1.5721999999995795e-05, 1.5569999999992534e-05, 1.5736000000002304e-05, 1.5570000000006412e-05, 1.5721999999995795e-05, 1.5569999999992534e-05, 1.5721999999995795e-05, 1.556899999999306e-05, 1.5721999999995795e-05, 1.5569000000020816e-05, 1.5653000000004358e-05, 1.558400000001292e-05, 1.5749999999981057e-05, 1.557000000002029e-05, 1.5750000000008813e-05, 1.5597000000006078e-05, 1.5735999999988426e-05, 1.556899999999306e-05, 1.5721999999995795e-05, 1.5569000000020816e-05, 1.5708000000003164e-05, 1.556899999999306e-05, 1.5777999999994075e-05, 1.556899999999306e-05, 1.573600000001618e-05]</msg>
<status status="PASS" starttime="20201030 18:27:34.198" endtime="20201030 18:27:34.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.193" endtime="20201030 18:27:34.200"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:34.204" endtime="20201030 18:27:34.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.202" endtime="20201030 18:27:34.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.201" endtime="20201030 18:27:34.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.718" endtime="20201030 18:27:34.224"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:33.648" endtime="20201030 18:27:34.225" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:34.231" endtime="20201030 18:27:34.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.230" endtime="20201030 18:27:34.251"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.265" endtime="20201030 18:27:34.279"></status>
</kw>
<msg timestamp="20201030 18:27:34.279" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.264" endtime="20201030 18:27:34.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.282" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.280" endtime="20201030 18:27:34.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.285" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:34.283" endtime="20201030 18:27:34.285"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:34.261" endtime="20201030 18:27:34.286"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:34.259" endtime="20201030 18:27:34.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.256" endtime="20201030 18:27:34.287"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:34.291" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:34.290" endtime="20201030 18:27:34.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.288" endtime="20201030 18:27:34.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.256" endtime="20201030 18:27:34.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.255" endtime="20201030 18:27:34.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.292" endtime="20201030 18:27:34.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.254" endtime="20201030 18:27:34.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.252" endtime="20201030 18:27:34.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.229" endtime="20201030 18:27:34.295"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.299" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:27:34.307" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:27:35.579" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:27:34.297" endtime="20201030 18:27:35.580"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.582" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:27:35.581" endtime="20201030 18:27:35.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.296" endtime="20201030 18:27:35.583"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.593" endtime="20201030 18:27:35.600"></status>
</kw>
<msg timestamp="20201030 18:27:35.601" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:35.591" endtime="20201030 18:27:35.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.603" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:35.602" endtime="20201030 18:27:35.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.605" endtime="20201030 18:27:35.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.589" endtime="20201030 18:27:35.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.587" endtime="20201030 18:27:35.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.615" endtime="20201030 18:27:35.914"></status>
</kw>
<msg timestamp="20201030 18:27:35.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.351373319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.351377417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:35.614" endtime="20201030 18:27:35.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.351373319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.351377417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:35.919" endtime="20201030 18:27:35.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.927" endtime="20201030 18:27:35.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.610" endtime="20201030 18:27:35.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.608" endtime="20201030 18:27:35.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:35.935" level="INFO">${PHILIP_RES} = [{'diff': 4.098000000007929e-06}, {'diff': 2.7780000000365845e-06}, {'diff': 2.806000000132869e-06}, {'diff': 2.8059999999108243e-06}, {'diff': 2.806000000132869e-06}, {'diff': 2.791999999862682e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:35.931" endtime="20201030 18:27:35.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:35.941" level="INFO">${RESULT} = {'diff': [4.098000000007929e-06, 2.7780000000365845e-06, 2.806000000132869e-06, 2.8059999999108243e-06, 2.806000000132869e-06, 2.791999999862682e-06, 2.8190000000982707e-06, 2.804999999828084e-06, 2.7...</msg>
<status status="PASS" starttime="20201030 18:27:35.936" endtime="20201030 18:27:35.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.947" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:35.946" endtime="20201030 18:27:35.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.951" level="INFO">VALUE: [4.098000000007929e-06, 2.7780000000365845e-06, 2.806000000132869e-06, 2.8059999999108243e-06, 2.806000000132869e-06, 2.791999999862682e-06, 2.8190000000982707e-06, 2.804999999828084e-06, 2.7910000000019863e-06, 2.804999999828084e-06, 2.8190000000982707e-06, 2.8059999999108243e-06, 2.7920000000847267e-06, 2.8059999999108243e-06, 2.806000000132869e-06, 2.791999999862682e-06, 2.833000000146413e-06, 2.818999999876226e-06, 2.7920000000847267e-06, 2.7910000000019863e-06, 2.8050000000501285e-06, 2.7910000000019863e-06, 2.8050000000501285e-06, 2.8050000000501285e-06, 2.791999999862682e-06, 2.806000000132869e-06, 2.8059999999108243e-06, 2.7920000000847267e-06, 2.791999999862682e-06, 2.806000000132869e-06, 2.8059999999108243e-06, 2.7920000000847267e-06, 2.818999999876226e-06, 2.8050000000501285e-06, 2.7910000000019863e-06, 2.8050000000501285e-06, 2.818999999876226e-06, 2.806000000132869e-06, 2.8059999999108243e-06, 2.820000000181011e-06, 2.7920000000847267e-06, 2.7920000000847267e-06, 2.8059999999108243e-06, 2.7920000000847267e-06, 2.791999999862682e-06, 2.8050000000501285e-06, 2.8050000000501285e-06, 2.7910000000019863e-06, 2.8050000000501285e-06, 2.8050000000501285e-06]</msg>
<status status="PASS" starttime="20201030 18:27:35.949" endtime="20201030 18:27:35.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.943" endtime="20201030 18:27:35.953"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:35.958" endtime="20201030 18:27:35.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.955" endtime="20201030 18:27:35.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.954" endtime="20201030 18:27:35.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.585" endtime="20201030 18:27:35.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.584" endtime="20201030 18:27:35.981"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.989" endtime="20201030 18:27:35.996"></status>
</kw>
<msg timestamp="20201030 18:27:35.997" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:35.988" endtime="20201030 18:27:35.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.999" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:35.998" endtime="20201030 18:27:36.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.000" endtime="20201030 18:27:36.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.985" endtime="20201030 18:27:36.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.983" endtime="20201030 18:27:36.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.010" endtime="20201030 18:27:36.308"></status>
</kw>
<msg timestamp="20201030 18:27:36.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018879681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018886708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:36.008" endtime="20201030 18:27:36.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018879681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018886708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:36.312" endtime="20201030 18:27:36.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.320" endtime="20201030 18:27:36.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.005" endtime="20201030 18:27:36.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.004" endtime="20201030 18:27:36.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:36.327" level="INFO">${PHILIP_RES} = [{'diff': 7.026999999999728e-06}, {'diff': 5.596999999999547e-06}, {'diff': 5.610999999999117e-06}, {'diff': 5.610999999999117e-06}, {'diff': 5.610999999999117e-06}, {'diff': 5.596999999999547e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:36.323" endtime="20201030 18:27:36.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:36.340" level="INFO">${RESULT} = {'diff': [7.026999999999728e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.611000000002586e-06, 5.596999999999547e-06, 5.5969...</msg>
<status status="PASS" starttime="20201030 18:27:36.336" endtime="20201030 18:27:36.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.344" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:36.343" endtime="20201030 18:27:36.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.347" level="INFO">VALUE: [7.026999999999728e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.611000000002586e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.582999999999977e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.59800000000249e-06, 5.61200000000206e-06, 5.61199999999859e-06, 5.5979999999990204e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.624999999998687e-06, 5.597000000003016e-06, 5.610999999999117e-06, 5.624999999998687e-06, 5.651999999998353e-06, 5.582999999999977e-06, 5.624999999998687e-06, 5.597000000003016e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.610999999999117e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.555000000000837e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.611000000002586e-06, 5.582999999999977e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.542000000000741e-06, 5.61200000000206e-06, 5.59800000000249e-06, 5.637999999998783e-06, 5.624999999998687e-06, 5.610999999999117e-06, 5.596999999999547e-06]</msg>
<status status="PASS" starttime="20201030 18:27:36.345" endtime="20201030 18:27:36.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.341" endtime="20201030 18:27:36.348"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:36.351" endtime="20201030 18:27:36.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.350" endtime="20201030 18:27:36.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.349" endtime="20201030 18:27:36.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.982" endtime="20201030 18:27:36.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.981" endtime="20201030 18:27:36.372"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.381" endtime="20201030 18:27:36.388"></status>
</kw>
<msg timestamp="20201030 18:27:36.389" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.379" endtime="20201030 18:27:36.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.391" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.390" endtime="20201030 18:27:36.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.392" endtime="20201030 18:27:36.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.376" endtime="20201030 18:27:36.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.374" endtime="20201030 18:27:36.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.401" endtime="20201030 18:27:36.685"></status>
</kw>
<msg timestamp="20201030 18:27:36.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018889292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018899486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:36.400" endtime="20201030 18:27:36.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018889292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018899486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:36.690" endtime="20201030 18:27:36.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.698" endtime="20201030 18:27:36.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.397" endtime="20201030 18:27:36.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.395" endtime="20201030 18:27:36.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:36.706" level="INFO">${PHILIP_RES} = [{'diff': 1.0194000000001563e-05}, {'diff': 9.054999999997398e-06}, {'diff': 9.042000000000772e-06}, {'diff': 9.028000000001202e-06}, {'diff': 9.027999999997732e-06}, {'diff': 9.028000000001202e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:36.701" endtime="20201030 18:27:36.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:36.710" level="INFO">${RESULT} = {'diff': [1.0194000000001563e-05, 9.054999999997398e-06, 9.042000000000772e-06, 9.028000000001202e-06, 9.027999999997732e-06, 9.028000000001202e-06, 9.056000000000342e-06, 9.069999999999911e-06, 9.042...</msg>
<status status="PASS" starttime="20201030 18:27:36.707" endtime="20201030 18:27:36.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.714" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:36.713" endtime="20201030 18:27:36.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.717" level="INFO">VALUE: [1.0194000000001563e-05, 9.054999999997398e-06, 9.042000000000772e-06, 9.028000000001202e-06, 9.027999999997732e-06, 9.028000000001202e-06, 9.056000000000342e-06, 9.069999999999911e-06, 9.042000000000772e-06, 9.040999999997829e-06, 9.042000000000772e-06, 9.042000000000772e-06, 9.069999999999911e-06, 9.055000000000868e-06, 9.040999999997829e-06, 9.042000000000772e-06, 9.042000000000772e-06, 9.041999999997302e-06, 9.055000000000868e-06, 9.040999999997829e-06, 9.014000000001632e-06, 9.013999999998162e-06, 9.056000000000342e-06, 9.055000000000868e-06, 9.083000000000008e-06, 9.056000000000342e-06, 9.042000000000772e-06, 9.028000000001202e-06, 9.069000000000438e-06, 9.056000000000342e-06, 9.042000000000772e-06, 9.056000000000342e-06, 9.027000000001728e-06, 9.042000000000772e-06, 8.958999999999356e-06, 9.042000000000772e-06, 9.028000000001202e-06, 8.972000000002922e-06, 9.042000000000772e-06, 9.042000000000772e-06, 9.028000000001202e-06, 9.027999999997732e-06, 9.055000000000868e-06, 9.056000000000342e-06, 9.041999999997302e-06, 9.042000000000772e-06, 8.971999999999453e-06, 9.055000000000868e-06, 9.042000000000772e-06, 9.056000000000342e-06]</msg>
<status status="PASS" starttime="20201030 18:27:36.715" endtime="20201030 18:27:36.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.711" endtime="20201030 18:27:36.718"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:36.721" endtime="20201030 18:27:36.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.720" endtime="20201030 18:27:36.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.719" endtime="20201030 18:27:36.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.373" endtime="20201030 18:27:36.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.372" endtime="20201030 18:27:36.742"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.750" endtime="20201030 18:27:36.759"></status>
</kw>
<msg timestamp="20201030 18:27:36.759" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.749" endtime="20201030 18:27:36.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.762" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.760" endtime="20201030 18:27:36.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.763" endtime="20201030 18:27:36.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.746" endtime="20201030 18:27:36.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.744" endtime="20201030 18:27:36.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.773" endtime="20201030 18:27:37.059"></status>
</kw>
<msg timestamp="20201030 18:27:37.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018608097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018621819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:36.771" endtime="20201030 18:27:37.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018608097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018621819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:37.063" endtime="20201030 18:27:37.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.071" endtime="20201030 18:27:37.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.768" endtime="20201030 18:27:37.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.766" endtime="20201030 18:27:37.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:37.078" level="INFO">${PHILIP_RES} = [{'diff': 1.3722000000000734e-05}, {'diff': 1.2569000000000469e-05}, {'diff': 1.2569999999999942e-05}, {'diff': 1.2499999999998623e-05}, {'diff': 1.2624999999998748e-05}, {'diff': 1.2583000000000039e-...</msg>
<status status="PASS" starttime="20201030 18:27:37.075" endtime="20201030 18:27:37.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:37.083" level="INFO">${RESULT} = {'diff': [1.3722000000000734e-05, 1.2569000000000469e-05, 1.2569999999999942e-05, 1.2499999999998623e-05, 1.2624999999998748e-05, 1.2583000000000039e-05, 1.2528000000001233e-05, 1.2583000000000039e-05...</msg>
<status status="PASS" starttime="20201030 18:27:37.079" endtime="20201030 18:27:37.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.087" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:37.086" endtime="20201030 18:27:37.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.089" level="INFO">VALUE: [1.3722000000000734e-05, 1.2569000000000469e-05, 1.2569999999999942e-05, 1.2499999999998623e-05, 1.2624999999998748e-05, 1.2583000000000039e-05, 1.2528000000001233e-05, 1.2583000000000039e-05, 1.2527999999997763e-05, 1.2542000000000803e-05, 1.2569999999999942e-05, 1.2597000000003078e-05, 1.2583000000000039e-05, 1.2596999999999609e-05, 1.2583000000000039e-05, 1.2569000000000469e-05, 1.2583000000000039e-05, 1.2569999999999942e-05, 1.2556000000000372e-05, 1.2555000000000899e-05, 1.2555999999996903e-05, 1.2499999999998623e-05, 1.2596999999999609e-05, 1.2542000000000803e-05, 1.2542000000000803e-05, 1.2555000000000899e-05, 1.2541000000001329e-05, 1.2569999999999942e-05, 1.2583000000000039e-05, 1.255499999999743e-05, 1.2514000000001663e-05, 1.2569999999999942e-05, 1.2569000000000469e-05, 1.2569000000000469e-05, 1.2556000000000372e-05, 1.2583000000000039e-05, 1.2569000000000469e-05, 1.2556000000000372e-05, 1.2569999999999942e-05, 1.2568999999997e-05, 1.2569000000000469e-05, 1.2610999999999178e-05, 1.2651999999998415e-05, 1.2569000000000469e-05, 1.2556000000000372e-05, 1.2624999999998748e-05, 1.2583000000000039e-05, 1.2568999999997e-05, 1.2584000000002982e-05, 1.2556000000000372e-05]</msg>
<status status="PASS" starttime="20201030 18:27:37.088" endtime="20201030 18:27:37.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.083" endtime="20201030 18:27:37.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:37.094" endtime="20201030 18:27:37.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.092" endtime="20201030 18:27:37.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.091" endtime="20201030 18:27:37.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.743" endtime="20201030 18:27:37.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.742" endtime="20201030 18:27:37.115"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.124" endtime="20201030 18:27:37.132"></status>
</kw>
<msg timestamp="20201030 18:27:37.133" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.122" endtime="20201030 18:27:37.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.135" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.134" endtime="20201030 18:27:37.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.136" endtime="20201030 18:27:37.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.120" endtime="20201030 18:27:37.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.117" endtime="20201030 18:27:37.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.149" endtime="20201030 18:27:37.435"></status>
</kw>
<msg timestamp="20201030 18:27:37.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019303361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019320931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:37.147" endtime="20201030 18:27:37.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019303361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019320931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:37.439" endtime="20201030 18:27:37.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.448" endtime="20201030 18:27:37.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.141" endtime="20201030 18:27:37.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.139" endtime="20201030 18:27:37.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:37.455" level="INFO">${PHILIP_RES} = [{'diff': 1.7569999999998004e-05}, {'diff': 1.6444000000000875e-05}, {'diff': 1.6513999999998724e-05}, {'diff': 1.6445000000000348e-05}, {'diff': 1.641699999999774e-05}, {'diff': 1.6444000000000875e-0...</msg>
<status status="PASS" starttime="20201030 18:27:37.451" endtime="20201030 18:27:37.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:37.460" level="INFO">${RESULT} = {'diff': [1.7569999999998004e-05, 1.6444000000000875e-05, 1.6513999999998724e-05, 1.6445000000000348e-05, 1.641699999999774e-05, 1.6444000000000875e-05, 1.6458000000000444e-05, 1.6485999999999584e-05,...</msg>
<status status="PASS" starttime="20201030 18:27:37.456" endtime="20201030 18:27:37.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.464" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:37.463" endtime="20201030 18:27:37.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.467" level="INFO">VALUE: [1.7569999999998004e-05, 1.6444000000000875e-05, 1.6513999999998724e-05, 1.6445000000000348e-05, 1.641699999999774e-05, 1.6444000000000875e-05, 1.6458000000000444e-05, 1.6485999999999584e-05, 1.6402000000002165e-05, 1.6429999999997835e-05, 1.6445000000000348e-05, 1.6485999999999584e-05, 1.6415999999998265e-05, 1.6445000000000348e-05, 1.6458000000000444e-05, 1.6444000000000875e-05, 1.6513999999998724e-05, 1.643099999999731e-05, 1.6430000000001305e-05, 1.63889999999986e-05, 1.643100000000078e-05, 1.6388000000002595e-05, 1.6429999999997835e-05, 1.6445000000000348e-05, 1.6430000000001305e-05, 1.6443999999997405e-05, 1.643100000000078e-05, 1.641699999999774e-05, 1.6444000000000875e-05, 1.6458999999999918e-05, 1.643099999999731e-05, 1.6416000000001735e-05, 1.640299999999817e-05, 1.643100000000078e-05, 1.6430000000001305e-05, 1.6485999999999584e-05, 1.643100000000078e-05, 1.6444000000000875e-05, 1.6415999999998265e-05, 1.6445000000000348e-05, 1.6444000000000875e-05, 1.6444000000000875e-05, 1.6458999999999918e-05, 1.6485999999999584e-05, 1.6444000000000875e-05, 1.6445000000000348e-05, 1.6445000000000348e-05, 1.6444000000000875e-05, 1.641699999999774e-05, 1.6445000000000348e-05]</msg>
<status status="PASS" starttime="20201030 18:27:37.465" endtime="20201030 18:27:37.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.460" endtime="20201030 18:27:37.467"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:37.471" endtime="20201030 18:27:37.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.470" endtime="20201030 18:27:37.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.468" endtime="20201030 18:27:37.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.116" endtime="20201030 18:27:37.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.115" endtime="20201030 18:27:37.492"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.500" endtime="20201030 18:27:37.509"></status>
</kw>
<msg timestamp="20201030 18:27:37.510" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.499" endtime="20201030 18:27:37.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.512" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.511" endtime="20201030 18:27:37.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.513" endtime="20201030 18:27:37.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.496" endtime="20201030 18:27:37.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.494" endtime="20201030 18:27:37.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.522" endtime="20201030 18:27:37.822"></status>
</kw>
<msg timestamp="20201030 18:27:37.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018754347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018776153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:37.521" endtime="20201030 18:27:37.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018754347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018776153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:37.826" endtime="20201030 18:27:37.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.835" endtime="20201030 18:27:37.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.518" endtime="20201030 18:27:37.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.516" endtime="20201030 18:27:37.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:37.847" level="INFO">${PHILIP_RES} = [{'diff': 2.1805999999999215e-05}, {'diff': 2.063899999999938e-05}, {'diff': 2.0680000000002086e-05}, {'diff': 2.066699999999852e-05}, {'diff': 2.0708000000001225e-05}, {'diff': 2.066699999999852e-05}...</msg>
<status status="PASS" starttime="20201030 18:27:37.838" endtime="20201030 18:27:37.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:37.855" level="INFO">${RESULT} = {'diff': [2.1805999999999215e-05, 2.063899999999938e-05, 2.0680000000002086e-05, 2.066699999999852e-05, 2.0708000000001225e-05, 2.066699999999852e-05, 2.066700000000199e-05, 2.066699999999852e-05, 2.0...</msg>
<status status="PASS" starttime="20201030 18:27:37.848" endtime="20201030 18:27:37.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.860" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:37.859" endtime="20201030 18:27:37.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.862" level="INFO">VALUE: [2.1805999999999215e-05, 2.063899999999938e-05, 2.0680000000002086e-05, 2.066699999999852e-05, 2.0708000000001225e-05, 2.066699999999852e-05, 2.066700000000199e-05, 2.066699999999852e-05, 2.0680000000002086e-05, 2.0679999999998616e-05, 2.0666000000002516e-05, 2.0693999999998186e-05, 2.066700000000199e-05, 2.065299999999895e-05, 2.07090000000007e-05, 2.07090000000007e-05, 2.0679999999998616e-05, 2.0679999999998616e-05, 2.0637999999999906e-05, 2.0722000000000795e-05, 2.068099999999809e-05, 2.066699999999852e-05, 2.069500000000113e-05, 2.0665999999999046e-05, 2.0665999999999046e-05, 2.0665999999999046e-05, 2.0611999999999714e-05, 2.068100000000156e-05, 2.066699999999852e-05, 2.062499999999981e-05, 2.065299999999895e-05, 2.0680000000002086e-05, 2.0693999999998186e-05, 2.066700000000199e-05, 2.068099999999809e-05, 2.065300000000242e-05, 2.069499999999766e-05, 2.068100000000156e-05, 2.0665999999999046e-05, 2.0666000000002516e-05, 2.0651999999999476e-05, 2.0707999999997756e-05, 2.068099999999809e-05, 2.066700000000199e-05, 2.066699999999852e-05, 2.066699999999852e-05, 2.0680000000002086e-05, 2.0665999999999046e-05, 2.063900000000285e-05, 2.068099999999809e-05]</msg>
<status status="PASS" starttime="20201030 18:27:37.861" endtime="20201030 18:27:37.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.856" endtime="20201030 18:27:37.863"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:37.867" endtime="20201030 18:27:37.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.865" endtime="20201030 18:27:37.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.864" endtime="20201030 18:27:37.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.493" endtime="20201030 18:27:37.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.492" endtime="20201030 18:27:37.887"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.896" endtime="20201030 18:27:37.905"></status>
</kw>
<msg timestamp="20201030 18:27:37.905" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.894" endtime="20201030 18:27:37.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.908" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.906" endtime="20201030 18:27:37.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.909" endtime="20201030 18:27:37.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.891" endtime="20201030 18:27:37.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.890" endtime="20201030 18:27:37.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.918" endtime="20201030 18:27:38.206"></status>
</kw>
<msg timestamp="20201030 18:27:38.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018578972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018605389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:37.917" endtime="20201030 18:27:38.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018578972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018605389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:38.211" endtime="20201030 18:27:38.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.219" endtime="20201030 18:27:38.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.914" endtime="20201030 18:27:38.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.912" endtime="20201030 18:27:38.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:38.225" level="INFO">${PHILIP_RES} = [{'diff': 2.64170000000008e-05}, {'diff': 2.5236000000001396e-05}, {'diff': 2.5250000000000966e-05}, {'diff': 2.5235999999997927e-05}, {'diff': 2.5235999999997927e-05}, {'diff': 2.5236000000001396e-05...</msg>
<status status="PASS" starttime="20201030 18:27:38.222" endtime="20201030 18:27:38.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:38.230" level="INFO">${RESULT} = {'diff': [2.64170000000008e-05, 2.5236000000001396e-05, 2.5250000000000966e-05, 2.5235999999997927e-05, 2.5235999999997927e-05, 2.5236000000001396e-05, 2.5236000000001396e-05, 2.5250000000000966e-05, ...</msg>
<status status="PASS" starttime="20201030 18:27:38.226" endtime="20201030 18:27:38.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.234" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:38.233" endtime="20201030 18:27:38.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.237" level="INFO">VALUE: [2.64170000000008e-05, 2.5236000000001396e-05, 2.5250000000000966e-05, 2.5235999999997927e-05, 2.5235999999997927e-05, 2.5236000000001396e-05, 2.5236000000001396e-05, 2.5250000000000966e-05, 2.522299999999783e-05, 2.523700000000087e-05, 2.5236000000001396e-05, 2.5320000000002285e-05, 2.5278000000000106e-05, 2.5264000000000536e-05, 2.5236000000001396e-05, 2.5236000000001396e-05, 2.5250000000000966e-05, 2.5235999999997927e-05, 2.5264000000000536e-05, 2.5263000000001062e-05, 2.5264000000000536e-05, 2.5235999999997927e-05, 2.5221999999998357e-05, 2.5250000000000966e-05, 2.5250000000000966e-05, 2.5235999999997927e-05, 2.5278000000000106e-05, 2.5250000000000966e-05, 2.5236000000001396e-05, 2.52230000000013e-05, 2.5249999999997497e-05, 2.5235999999997927e-05, 2.5264000000000536e-05, 2.5236000000001396e-05, 2.5250000000000966e-05, 2.5235999999997927e-05, 2.5278000000000106e-05, 2.5250000000000966e-05, 2.5249999999997497e-05, 2.5235999999997927e-05, 2.5236000000001396e-05, 2.5236000000001396e-05, 2.5250000000000966e-05, 2.5250000000000966e-05, 2.5249999999997497e-05, 2.5236000000001396e-05, 2.5179999999999647e-05, 2.5250000000000966e-05, 2.5235999999997927e-05, 2.5250000000000966e-05]</msg>
<status status="PASS" starttime="20201030 18:27:38.235" endtime="20201030 18:27:38.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.230" endtime="20201030 18:27:38.237"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:38.241" endtime="20201030 18:27:38.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.240" endtime="20201030 18:27:38.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.238" endtime="20201030 18:27:38.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.888" endtime="20201030 18:27:38.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.888" endtime="20201030 18:27:38.262"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.271" endtime="20201030 18:27:38.279"></status>
</kw>
<msg timestamp="20201030 18:27:38.280" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.269" endtime="20201030 18:27:38.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.282" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.281" endtime="20201030 18:27:38.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.283" endtime="20201030 18:27:38.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.266" endtime="20201030 18:27:38.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.264" endtime="20201030 18:27:38.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.293" endtime="20201030 18:27:38.594"></status>
</kw>
<msg timestamp="20201030 18:27:38.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019437181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019468514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:38.291" endtime="20201030 18:27:38.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019437181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019468514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:38.599" endtime="20201030 18:27:38.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.607" endtime="20201030 18:27:38.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.289" endtime="20201030 18:27:38.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.287" endtime="20201030 18:27:38.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:38.613" level="INFO">${PHILIP_RES} = [{'diff': 3.1332999999997974e-05}, {'diff': 3.0181000000000652e-05}, {'diff': 3.019500000000022e-05}, {'diff': 3.0180000000001178e-05}, {'diff': 3.0180000000001178e-05}, {'diff': 3.0181000000000652e-0...</msg>
<status status="PASS" starttime="20201030 18:27:38.610" endtime="20201030 18:27:38.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:38.618" level="INFO">${RESULT} = {'diff': [3.1332999999997974e-05, 3.0181000000000652e-05, 3.019500000000022e-05, 3.0180000000001178e-05, 3.0180000000001178e-05, 3.0181000000000652e-05, 3.0180999999997182e-05, 3.017999999999771e-05, ...</msg>
<status status="PASS" starttime="20201030 18:27:38.614" endtime="20201030 18:27:38.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.622" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:38.621" endtime="20201030 18:27:38.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.625" level="INFO">VALUE: [3.1332999999997974e-05, 3.0181000000000652e-05, 3.019500000000022e-05, 3.0180000000001178e-05, 3.0180000000001178e-05, 3.0181000000000652e-05, 3.0180999999997182e-05, 3.017999999999771e-05, 3.0180000000001178e-05, 3.0181000000000652e-05, 3.0194000000000748e-05, 3.017999999999771e-05, 3.020899999999979e-05, 3.0235999999999458e-05, 3.0208000000000318e-05, 3.0181000000000652e-05, 3.0180999999997182e-05, 3.0111999999998806e-05, 3.0180000000001178e-05, 3.0167000000001082e-05, 3.0167000000001082e-05, 3.0180000000001178e-05, 3.0180000000001178e-05, 3.0167000000001082e-05, 3.0180000000001178e-05, 3.017999999999771e-05, 3.0138999999998473e-05, 3.0181000000000652e-05, 3.0166000000001608e-05, 3.0167000000001082e-05, 3.019500000000022e-05, 3.019500000000022e-05, 3.0166000000001608e-05, 3.0194000000000748e-05, 3.013800000000247e-05, 3.017999999999771e-05, 3.0194000000000748e-05, 3.0124999999998903e-05, 3.0208000000000318e-05, 3.016599999999814e-05, 3.02370000000024e-05, 3.0167000000001082e-05, 3.0194000000000748e-05, 3.017999999999771e-05, 3.0180999999997182e-05, 3.019500000000022e-05, 3.0249999999999028e-05, 3.0181000000000652e-05, 3.019500000000022e-05, 3.0221999999999888e-05]</msg>
<status status="PASS" starttime="20201030 18:27:38.623" endtime="20201030 18:27:38.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.619" endtime="20201030 18:27:38.626"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:38.630" endtime="20201030 18:27:38.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.628" endtime="20201030 18:27:38.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.627" endtime="20201030 18:27:38.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.263" endtime="20201030 18:27:38.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.262" endtime="20201030 18:27:38.651"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.659" endtime="20201030 18:27:38.667"></status>
</kw>
<msg timestamp="20201030 18:27:38.668" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.658" endtime="20201030 18:27:38.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.671" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.669" endtime="20201030 18:27:38.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.672" endtime="20201030 18:27:38.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.655" endtime="20201030 18:27:38.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.653" endtime="20201030 18:27:38.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.681" endtime="20201030 18:27:38.967"></status>
</kw>
<msg timestamp="20201030 18:27:38.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018547292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018583917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:38.680" endtime="20201030 18:27:38.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018547292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018583917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:38.972" endtime="20201030 18:27:38.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.980" endtime="20201030 18:27:38.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.677" endtime="20201030 18:27:38.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.675" endtime="20201030 18:27:38.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:38.987" level="INFO">${PHILIP_RES} = [{'diff': 3.6624999999998464e-05}, {'diff': 3.545799999999863e-05}, {'diff': 3.5445000000002e-05}, {'diff': 3.5445000000002e-05}, {'diff': 3.548600000000124e-05}, {'diff': 3.538799999999731e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:27:38.984" endtime="20201030 18:27:38.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:38.992" level="INFO">${RESULT} = {'diff': [3.6624999999998464e-05, 3.545799999999863e-05, 3.5445000000002e-05, 3.5445000000002e-05, 3.548600000000124e-05, 3.538799999999731e-05, 3.548600000000124e-05, 3.54719999999982e-05, 3.54579999...</msg>
<status status="PASS" starttime="20201030 18:27:38.988" endtime="20201030 18:27:38.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.997" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:38.996" endtime="20201030 18:27:38.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.999" level="INFO">VALUE: [3.6624999999998464e-05, 3.545799999999863e-05, 3.5445000000002e-05, 3.5445000000002e-05, 3.548600000000124e-05, 3.538799999999731e-05, 3.548600000000124e-05, 3.54719999999982e-05, 3.545799999999863e-05, 3.545799999999863e-05, 3.54589999999981e-05, 3.54719999999982e-05, 3.547200000000167e-05, 3.548600000000124e-05, 3.544400000000253e-05, 3.547200000000167e-05, 3.54580000000021e-05, 3.5445000000002e-05, 3.54589999999981e-05, 3.54589999999981e-05, 3.544399999999906e-05, 3.545799999999863e-05, 3.548599999999777e-05, 3.5402999999999823e-05, 3.543099999999896e-05, 3.545900000000157e-05, 3.547200000000167e-05, 3.5389000000000254e-05, 3.545799999999863e-05, 3.54580000000021e-05, 3.544399999999906e-05, 3.54719999999982e-05, 3.547299999999767e-05, 3.544499999999853e-05, 3.544399999999906e-05, 3.541599999999992e-05, 3.547200000000167e-05, 3.54580000000021e-05, 3.547200000000167e-05, 3.547300000000114e-05, 3.5402999999999823e-05, 3.545799999999863e-05, 3.547200000000167e-05, 3.54719999999982e-05, 3.544399999999906e-05, 3.54719999999982e-05, 3.549999999999734e-05, 3.543099999999896e-05, 3.550000000000081e-05, 3.54580000000021e-05]</msg>
<status status="PASS" starttime="20201030 18:27:38.998" endtime="20201030 18:27:39.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.993" endtime="20201030 18:27:39.000"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:39.004" endtime="20201030 18:27:39.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.003" endtime="20201030 18:27:39.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.001" endtime="20201030 18:27:39.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.652" endtime="20201030 18:27:39.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.651" endtime="20201030 18:27:39.025"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.034" endtime="20201030 18:27:39.043"></status>
</kw>
<msg timestamp="20201030 18:27:39.044" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.032" endtime="20201030 18:27:39.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.047" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.045" endtime="20201030 18:27:39.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.048" endtime="20201030 18:27:39.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.029" endtime="20201030 18:27:39.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.027" endtime="20201030 18:27:39.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.057" endtime="20201030 18:27:39.355"></status>
</kw>
<msg timestamp="20201030 18:27:39.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019599111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019641347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:39.055" endtime="20201030 18:27:39.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019599111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019641347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:39.359" endtime="20201030 18:27:39.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.368" endtime="20201030 18:27:39.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.053" endtime="20201030 18:27:39.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.051" endtime="20201030 18:27:39.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:39.375" level="INFO">${PHILIP_RES} = [{'diff': 4.223600000000105e-05}, {'diff': 4.1153000000002105e-05}, {'diff': 4.1097000000000355e-05}, {'diff': 4.109799999999983e-05}, {'diff': 4.1110999999999925e-05}, {'diff': 4.1124999999999495e-05...</msg>
<status status="PASS" starttime="20201030 18:27:39.372" endtime="20201030 18:27:39.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:39.379" level="INFO">${RESULT} = {'diff': [4.223600000000105e-05, 4.1153000000002105e-05, 4.1097000000000355e-05, 4.109799999999983e-05, 4.1110999999999925e-05, 4.1124999999999495e-05, 4.1097000000000355e-05, 4.105600000000112e-05, 4...</msg>
<status status="PASS" starttime="20201030 18:27:39.376" endtime="20201030 18:27:39.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.384" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:39.383" endtime="20201030 18:27:39.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.386" level="INFO">VALUE: [4.223600000000105e-05, 4.1153000000002105e-05, 4.1097000000000355e-05, 4.109799999999983e-05, 4.1110999999999925e-05, 4.1124999999999495e-05, 4.1097000000000355e-05, 4.105600000000112e-05, 4.1083000000000786e-05, 4.102800000000198e-05, 4.1055000000001646e-05, 4.1097000000000355e-05, 4.1097000000000355e-05, 4.1097000000000355e-05, 4.1097000000000355e-05, 4.1110999999999925e-05, 4.1097000000000355e-05, 4.1097000000000355e-05, 4.109799999999983e-05, 4.105600000000112e-05, 4.109799999999983e-05, 4.10980000000033e-05, 4.109799999999983e-05, 4.1097000000000355e-05, 4.1097000000000355e-05, 4.1097000000000355e-05, 4.1110999999999925e-05, 4.1138999999999065e-05, 4.1152999999998635e-05, 4.1110999999999925e-05, 4.1110999999999925e-05, 4.1069000000001216e-05, 4.1096999999996886e-05, 4.1082999999997316e-05, 4.1097000000000355e-05, 4.1097000000000355e-05, 4.1110999999999925e-05, 4.1055000000001646e-05, 4.1041000000002076e-05, 4.1069000000001216e-05, 4.1166999999998205e-05, 4.1166999999998205e-05, 4.109799999999983e-05, 4.111200000000287e-05, 4.11119999999994e-05, 4.1110999999999925e-05, 4.11660000000022e-05, 4.1110999999999925e-05, 4.1083000000000786e-05, 4.1110999999999925e-05]</msg>
<status status="PASS" starttime="20201030 18:27:39.385" endtime="20201030 18:27:39.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.380" endtime="20201030 18:27:39.387"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:39.391" endtime="20201030 18:27:39.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.389" endtime="20201030 18:27:39.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.388" endtime="20201030 18:27:39.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.026" endtime="20201030 18:27:39.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.025" endtime="20201030 18:27:39.411"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.420" endtime="20201030 18:27:39.431"></status>
</kw>
<msg timestamp="20201030 18:27:39.432" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.419" endtime="20201030 18:27:39.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.434" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.433" endtime="20201030 18:27:39.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.435" endtime="20201030 18:27:39.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.416" endtime="20201030 18:27:39.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.414" endtime="20201030 18:27:39.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.444" endtime="20201030 18:27:39.730"></status>
</kw>
<msg timestamp="20201030 18:27:39.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019773306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0198215, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:39.443" endtime="20201030 18:27:39.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019773306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0198215, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:39.734" endtime="20201030 18:27:39.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.742" endtime="20201030 18:27:39.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.440" endtime="20201030 18:27:39.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.438" endtime="20201030 18:27:39.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:39.749" level="INFO">${PHILIP_RES} = [{'diff': 4.819399999999793e-05}, {'diff': 4.706999999999975e-05}, {'diff': 4.706900000000028e-05}, {'diff': 4.708299999999985e-05}, {'diff': 4.709699999999942e-05}, {'diff': 4.706900000000028e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:39.746" endtime="20201030 18:27:39.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:39.753" level="INFO">${RESULT} = {'diff': [4.819399999999793e-05, 4.706999999999975e-05, 4.706900000000028e-05, 4.708299999999985e-05, 4.709699999999942e-05, 4.706900000000028e-05, 4.706999999999975e-05, 4.709699999999942e-05, 4.7083...</msg>
<status status="PASS" starttime="20201030 18:27:39.750" endtime="20201030 18:27:39.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.757" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:39.756" endtime="20201030 18:27:39.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.760" level="INFO">VALUE: [4.819399999999793e-05, 4.706999999999975e-05, 4.706900000000028e-05, 4.708299999999985e-05, 4.709699999999942e-05, 4.706900000000028e-05, 4.706999999999975e-05, 4.709699999999942e-05, 4.708399999999932e-05, 4.708299999999985e-05, 4.709699999999942e-05, 4.708299999999985e-05, 4.706900000000028e-05, 4.699999999999843e-05, 4.706900000000028e-05, 4.705600000000018e-05, 4.705500000000071e-05, 4.706999999999975e-05, 4.706900000000028e-05, 4.706900000000028e-05, 4.708299999999985e-05, 4.706900000000028e-05, 4.706999999999975e-05, 4.7111000000002456e-05, 4.712499999999856e-05, 4.706899999999681e-05, 4.708299999999985e-05, 4.708299999999985e-05, 4.709699999999942e-05, 4.7125000000002026e-05, 4.708299999999985e-05, 4.709799999999889e-05, 4.706900000000028e-05, 4.709800000000236e-05, 4.709699999999942e-05, 4.706999999999975e-05, 4.708299999999985e-05, 4.705500000000071e-05, 4.704199999999714e-05, 4.705500000000071e-05, 4.698599999999886e-05, 4.713899999999813e-05, 4.706999999999975e-05, 4.706900000000028e-05, 4.705600000000018e-05, 4.705500000000071e-05, 4.711099999999899e-05, 4.708400000000279e-05, 4.708299999999985e-05, 4.708399999999932e-05]</msg>
<status status="PASS" starttime="20201030 18:27:39.758" endtime="20201030 18:27:39.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.754" endtime="20201030 18:27:39.761"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:39.765" endtime="20201030 18:27:39.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.763" endtime="20201030 18:27:39.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.762" endtime="20201030 18:27:39.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.412" endtime="20201030 18:27:39.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.412" endtime="20201030 18:27:39.786"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.794" endtime="20201030 18:27:39.804"></status>
</kw>
<msg timestamp="20201030 18:27:39.805" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.793" endtime="20201030 18:27:39.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.807" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.806" endtime="20201030 18:27:39.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.808" endtime="20201030 18:27:39.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.790" endtime="20201030 18:27:39.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.788" endtime="20201030 18:27:39.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.817" endtime="20201030 18:27:40.103"></status>
</kw>
<msg timestamp="20201030 18:27:40.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018880653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018935222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:39.816" endtime="20201030 18:27:40.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018880653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018935222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:40.107" endtime="20201030 18:27:40.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.115" endtime="20201030 18:27:40.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.813" endtime="20201030 18:27:40.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.811" endtime="20201030 18:27:40.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:40.122" level="INFO">${PHILIP_RES} = [{'diff': 5.456900000000084e-05}, {'diff': 5.3485999999998424e-05}, {'diff': 5.3457999999999284e-05}, {'diff': 5.343099999999962e-05}, {'diff': 5.343099999999962e-05}, {'diff': 5.3430000000000144e-05}...</msg>
<status status="PASS" starttime="20201030 18:27:40.119" endtime="20201030 18:27:40.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:40.127" level="INFO">${RESULT} = {'diff': [5.456900000000084e-05, 5.3485999999998424e-05, 5.3457999999999284e-05, 5.343099999999962e-05, 5.343099999999962e-05, 5.3430000000000144e-05, 5.3416000000000574e-05, 5.3430000000000144e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:27:40.123" endtime="20201030 18:27:40.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.131" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:40.130" endtime="20201030 18:27:40.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.134" level="INFO">VALUE: [5.456900000000084e-05, 5.3485999999998424e-05, 5.3457999999999284e-05, 5.343099999999962e-05, 5.343099999999962e-05, 5.3430000000000144e-05, 5.3416000000000574e-05, 5.3430000000000144e-05, 5.3430000000000144e-05, 5.3443999999999714e-05, 5.344499999999919e-05, 5.343099999999962e-05, 5.341700000000005e-05, 5.343100000000309e-05, 5.340300000000048e-05, 5.3416000000000574e-05, 5.3430000000000144e-05, 5.3416000000000574e-05, 5.343099999999962e-05, 5.341700000000005e-05, 5.343099999999962e-05, 5.341700000000005e-05, 5.341700000000005e-05, 5.341700000000005e-05, 5.3402000000001004e-05, 5.3430000000000144e-05, 5.3402000000001004e-05, 5.341700000000005e-05, 5.338900000000091e-05, 5.340300000000048e-05, 5.340299999999701e-05, 5.348700000000137e-05, 5.3416000000000574e-05, 5.3416000000000574e-05, 5.3416000000000574e-05, 5.341700000000005e-05, 5.343099999999962e-05, 5.341700000000005e-05, 5.340299999999701e-05, 5.340300000000048e-05, 5.341700000000005e-05, 5.340300000000048e-05, 5.3416000000000574e-05, 5.3416000000000574e-05, 5.340300000000048e-05, 5.341700000000005e-05, 5.337499999999787e-05, 5.341700000000005e-05, 5.343099999999962e-05, 5.341700000000005e-05]</msg>
<status status="PASS" starttime="20201030 18:27:40.132" endtime="20201030 18:27:40.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.128" endtime="20201030 18:27:40.135"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:40.139" endtime="20201030 18:27:40.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.137" endtime="20201030 18:27:40.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.136" endtime="20201030 18:27:40.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.787" endtime="20201030 18:27:40.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.786" endtime="20201030 18:27:40.159"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.168" endtime="20201030 18:27:40.179"></status>
</kw>
<msg timestamp="20201030 18:27:40.180" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:40.166" endtime="20201030 18:27:40.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.182" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:40.181" endtime="20201030 18:27:40.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.183" endtime="20201030 18:27:40.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.164" endtime="20201030 18:27:40.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.162" endtime="20201030 18:27:40.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.192" endtime="20201030 18:27:40.478"></status>
</kw>
<msg timestamp="20201030 18:27:40.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018620319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018681597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:40.191" endtime="20201030 18:27:40.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018620319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018681597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:40.482" endtime="20201030 18:27:40.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.490" endtime="20201030 18:27:40.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.188" endtime="20201030 18:27:40.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.186" endtime="20201030 18:27:40.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:40.498" level="INFO">${PHILIP_RES} = [{'diff': 6.127800000000141e-05}, {'diff': 6.0111999999997584e-05}, {'diff': 6.0097999999998014e-05}, {'diff': 6.0098000000001484e-05}, {'diff': 6.012500000000115e-05}, {'diff': 6.0112000000001053e-05...</msg>
<status status="PASS" starttime="20201030 18:27:40.494" endtime="20201030 18:27:40.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:40.502" level="INFO">${RESULT} = {'diff': [6.127800000000141e-05, 6.0111999999997584e-05, 6.0097999999998014e-05, 6.0098000000001484e-05, 6.012500000000115e-05, 6.0112000000001053e-05, 6.0112000000001053e-05, 6.013900000000072e-05, 6...</msg>
<status status="PASS" starttime="20201030 18:27:40.499" endtime="20201030 18:27:40.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.506" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:40.505" endtime="20201030 18:27:40.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.508" level="INFO">VALUE: [6.127800000000141e-05, 6.0111999999997584e-05, 6.0097999999998014e-05, 6.0098000000001484e-05, 6.012500000000115e-05, 6.0112000000001053e-05, 6.0112000000001053e-05, 6.013900000000072e-05, 6.012499999999768e-05, 6.012500000000115e-05, 6.0098000000001484e-05, 6.0112000000001053e-05, 6.013900000000072e-05, 6.0098000000001484e-05, 6.0097999999998014e-05, 6.012499999999768e-05, 6.0097999999998014e-05, 6.0098000000001484e-05, 6.0098000000001484e-05, 6.011100000000158e-05, 6.0084000000001914e-05, 6.009699999999854e-05, 6.0097999999998014e-05, 6.0083999999998444e-05, 6.015300000000029e-05, 6.0084000000001914e-05, 6.011100000000158e-05, 6.011100000000158e-05, 6.009699999999854e-05, 6.011099999999811e-05, 6.009699999999854e-05, 6.011100000000158e-05, 6.018099999999943e-05, 6.011100000000158e-05, 6.009700000000201e-05, 6.011099999999811e-05, 6.009699999999854e-05, 6.009699999999854e-05, 6.011100000000158e-05, 6.011100000000158e-05, 6.011100000000158e-05, 6.012500000000115e-05, 6.009700000000201e-05, 6.012499999999768e-05, 6.009699999999854e-05, 6.008299999999897e-05, 6.00689999999994e-05, 6.015300000000029e-05, 6.015300000000029e-05, 6.008299999999897e-05]</msg>
<status status="PASS" starttime="20201030 18:27:40.507" endtime="20201030 18:27:40.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.503" endtime="20201030 18:27:40.510"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:40.513" endtime="20201030 18:27:40.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.512" endtime="20201030 18:27:40.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.511" endtime="20201030 18:27:40.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.160" endtime="20201030 18:27:40.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.160" endtime="20201030 18:27:40.534"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.542" endtime="20201030 18:27:40.555"></status>
</kw>
<msg timestamp="20201030 18:27:40.555" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:40.541" endtime="20201030 18:27:40.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.558" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:40.556" endtime="20201030 18:27:40.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.559" endtime="20201030 18:27:40.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.538" endtime="20201030 18:27:40.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.537" endtime="20201030 18:27:40.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.568" endtime="20201030 18:27:40.868"></status>
</kw>
<msg timestamp="20201030 18:27:40.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019577222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019645528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:40.566" endtime="20201030 18:27:40.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019577222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019645528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:40.872" endtime="20201030 18:27:40.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.880" endtime="20201030 18:27:40.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.563" endtime="20201030 18:27:40.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.562" endtime="20201030 18:27:40.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:40.888" level="INFO">${PHILIP_RES} = [{'diff': 6.830600000000062e-05}, {'diff': 6.713899999999731e-05}, {'diff': 6.716699999999992e-05}, {'diff': 6.709700000000207e-05}, {'diff': 6.715300000000035e-05}, {'diff': 6.713899999999731e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:40.884" endtime="20201030 18:27:40.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:40.893" level="INFO">${RESULT} = {'diff': [6.830600000000062e-05, 6.713899999999731e-05, 6.716699999999992e-05, 6.709700000000207e-05, 6.715300000000035e-05, 6.713899999999731e-05, 6.716699999999992e-05, 6.715300000000035e-05, 6.7151...</msg>
<status status="PASS" starttime="20201030 18:27:40.889" endtime="20201030 18:27:40.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.898" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:40.897" endtime="20201030 18:27:40.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.901" level="INFO">VALUE: [6.830600000000062e-05, 6.713899999999731e-05, 6.716699999999992e-05, 6.709700000000207e-05, 6.715300000000035e-05, 6.713899999999731e-05, 6.716699999999992e-05, 6.715300000000035e-05, 6.715199999999741e-05, 6.716600000000045e-05, 6.716600000000045e-05, 6.715199999999741e-05, 6.716699999999992e-05, 6.713900000000078e-05, 6.715300000000035e-05, 6.716699999999992e-05, 6.713900000000078e-05, 6.716699999999992e-05, 6.716699999999992e-05, 6.715300000000035e-05, 6.715300000000035e-05, 6.718099999999949e-05, 6.716599999999698e-05, 6.716600000000045e-05, 6.713900000000078e-05, 6.713900000000078e-05, 6.716699999999992e-05, 6.712500000000121e-05, 6.715300000000035e-05, 6.716699999999992e-05, 6.716699999999992e-05, 6.716699999999992e-05, 6.719399999999959e-05, 6.715200000000088e-05, 6.718000000000002e-05, 6.713899999999731e-05, 6.715300000000035e-05, 6.715300000000035e-05, 6.715299999999688e-05, 6.715300000000035e-05, 6.713900000000078e-05, 6.718099999999949e-05, 6.715299999999688e-05, 6.709799999999808e-05, 6.715300000000035e-05, 6.716599999999698e-05, 6.713800000000131e-05, 6.715200000000088e-05, 6.718000000000002e-05, 6.712499999999774e-05]</msg>
<status status="PASS" starttime="20201030 18:27:40.900" endtime="20201030 18:27:40.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.894" endtime="20201030 18:27:40.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:40.907" endtime="20201030 18:27:40.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.906" endtime="20201030 18:27:40.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.905" endtime="20201030 18:27:40.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.535" endtime="20201030 18:27:40.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.535" endtime="20201030 18:27:40.928"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.937" endtime="20201030 18:27:40.949"></status>
</kw>
<msg timestamp="20201030 18:27:40.949" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:40.935" endtime="20201030 18:27:40.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.952" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:40.950" endtime="20201030 18:27:40.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.953" endtime="20201030 18:27:40.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.933" endtime="20201030 18:27:40.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.931" endtime="20201030 18:27:40.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.962" endtime="20201030 18:27:41.249"></status>
</kw>
<msg timestamp="20201030 18:27:41.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019406681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019482375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:40.961" endtime="20201030 18:27:41.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019406681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019482375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:41.253" endtime="20201030 18:27:41.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.262" endtime="20201030 18:27:41.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.958" endtime="20201030 18:27:41.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.956" endtime="20201030 18:27:41.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:41.268" level="INFO">${PHILIP_RES} = [{'diff': 7.569400000000115e-05}, {'diff': 7.455500000000045e-05}, {'diff': 7.452800000000079e-05}, {'diff': 7.448599999999861e-05}, {'diff': 7.452800000000079e-05}, {'diff': 7.458300000000306e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:41.265" endtime="20201030 18:27:41.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:41.276" level="INFO">${RESULT} = {'diff': [7.569400000000115e-05, 7.455500000000045e-05, 7.452800000000079e-05, 7.448599999999861e-05, 7.452800000000079e-05, 7.458300000000306e-05, 7.454099999999741e-05, 7.450000000000165e-05, 7.4528...</msg>
<status status="PASS" starttime="20201030 18:27:41.269" endtime="20201030 18:27:41.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.280" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:41.279" endtime="20201030 18:27:41.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.283" level="INFO">VALUE: [7.569400000000115e-05, 7.455500000000045e-05, 7.452800000000079e-05, 7.448599999999861e-05, 7.452800000000079e-05, 7.458300000000306e-05, 7.454099999999741e-05, 7.450000000000165e-05, 7.452800000000079e-05, 7.454200000000036e-05, 7.455599999999993e-05, 7.448599999999861e-05, 7.455500000000045e-05, 7.455500000000045e-05, 7.455599999999993e-05, 7.451400000000122e-05, 7.454200000000036e-05, 7.45699999999995e-05, 7.451300000000174e-05, 7.454100000000088e-05, 7.456900000000002e-05, 7.458399999999907e-05, 7.454200000000036e-05, 7.454099999999741e-05, 7.456900000000002e-05, 7.455599999999993e-05, 7.455599999999993e-05, 7.451400000000122e-05, 7.454200000000036e-05, 7.454100000000088e-05, 7.456900000000002e-05, 7.456900000000002e-05, 7.457000000000297e-05, 7.454200000000036e-05, 7.454200000000036e-05, 7.454100000000088e-05, 7.452700000000131e-05, 7.454200000000036e-05, 7.455599999999993e-05, 7.458400000000254e-05, 7.451399999999775e-05, 7.454099999999741e-05, 7.452800000000079e-05, 7.451400000000122e-05, 7.454200000000036e-05, 7.455599999999993e-05, 7.458400000000254e-05, 7.454100000000088e-05, 7.454200000000036e-05, 7.454199999999689e-05]</msg>
<status status="PASS" starttime="20201030 18:27:41.282" endtime="20201030 18:27:41.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.277" endtime="20201030 18:27:41.284"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:41.288" endtime="20201030 18:27:41.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.287" endtime="20201030 18:27:41.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.285" endtime="20201030 18:27:41.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.929" endtime="20201030 18:27:41.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.928" endtime="20201030 18:27:41.310"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.321" endtime="20201030 18:27:41.336"></status>
</kw>
<msg timestamp="20201030 18:27:41.337" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:41.320" endtime="20201030 18:27:41.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.340" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:41.339" endtime="20201030 18:27:41.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.341" endtime="20201030 18:27:41.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.316" endtime="20201030 18:27:41.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.313" endtime="20201030 18:27:41.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.351" endtime="20201030 18:27:41.637"></status>
</kw>
<msg timestamp="20201030 18:27:41.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023354278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023437736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:41.349" endtime="20201030 18:27:41.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023354278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023437736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:41.641" endtime="20201030 18:27:41.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.650" endtime="20201030 18:27:41.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.347" endtime="20201030 18:27:41.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.345" endtime="20201030 18:27:41.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:41.658" level="INFO">${PHILIP_RES} = [{'diff': 8.345800000000153e-05}, {'diff': 8.229200000000117e-05}, {'diff': 8.226399999999856e-05}, {'diff': 8.226399999999856e-05}, {'diff': 8.227700000000213e-05}, {'diff': 8.227799999999813e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:41.654" endtime="20201030 18:27:41.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:41.662" level="INFO">${RESULT} = {'diff': [8.345800000000153e-05, 8.229200000000117e-05, 8.226399999999856e-05, 8.226399999999856e-05, 8.227700000000213e-05, 8.227799999999813e-05, 8.230500000000127e-05, 8.229200000000117e-05, 8.2304...</msg>
<status status="PASS" starttime="20201030 18:27:41.659" endtime="20201030 18:27:41.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.666" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:41.665" endtime="20201030 18:27:41.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.669" level="INFO">VALUE: [8.345800000000153e-05, 8.229200000000117e-05, 8.226399999999856e-05, 8.226399999999856e-05, 8.227700000000213e-05, 8.227799999999813e-05, 8.230500000000127e-05, 8.229200000000117e-05, 8.23049999999978e-05, 8.230600000000074e-05, 8.234699999999998e-05, 8.232000000000031e-05, 8.230500000000127e-05, 8.22919999999977e-05, 8.229200000000117e-05, 8.230500000000127e-05, 8.230599999999727e-05, 8.227700000000213e-05, 8.227799999999813e-05, 8.230500000000127e-05, 8.229200000000117e-05, 8.229099999999823e-05, 8.230600000000074e-05, 8.23049999999978e-05, 8.229200000000117e-05, 8.22910000000017e-05, 8.234699999999998e-05, 8.229200000000117e-05, 8.230500000000127e-05, 8.230599999999727e-05, 8.22780000000016e-05, 8.22919999999977e-05, 8.225000000000246e-05, 8.229200000000117e-05, 8.23049999999978e-05, 8.229200000000117e-05, 8.222199999999985e-05, 8.230600000000074e-05, 8.22910000000017e-05, 8.23049999999978e-05, 8.22780000000016e-05, 8.231900000000084e-05, 8.230600000000074e-05, 8.230500000000127e-05, 8.224999999999899e-05, 8.23330000000004e-05, 8.230600000000074e-05, 8.23049999999978e-05, 8.229200000000117e-05, 8.227699999999866e-05]</msg>
<status status="PASS" starttime="20201030 18:27:41.667" endtime="20201030 18:27:41.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.663" endtime="20201030 18:27:41.677"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:41.681" endtime="20201030 18:27:41.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.679" endtime="20201030 18:27:41.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.678" endtime="20201030 18:27:41.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.311" endtime="20201030 18:27:41.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.310" endtime="20201030 18:27:41.702"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.710" endtime="20201030 18:27:41.723"></status>
</kw>
<msg timestamp="20201030 18:27:41.724" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:41.709" endtime="20201030 18:27:41.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.726" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:41.725" endtime="20201030 18:27:41.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.728" endtime="20201030 18:27:41.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.706" endtime="20201030 18:27:41.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.704" endtime="20201030 18:27:41.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.737" endtime="20201030 18:27:42.023"></status>
</kw>
<msg timestamp="20201030 18:27:42.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019990417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020081972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:41.735" endtime="20201030 18:27:42.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019990417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020081972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:42.027" endtime="20201030 18:27:42.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.036" endtime="20201030 18:27:42.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.733" endtime="20201030 18:27:42.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.731" endtime="20201030 18:27:42.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:42.042" level="INFO">${PHILIP_RES} = [{'diff': 9.155500000000011e-05}, {'diff': 9.038899999999975e-05}, {'diff': 9.036100000000061e-05}, {'diff': 9.040299999999932e-05}, {'diff': 9.043100000000193e-05}, {'diff': 9.040299999999932e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:42.039" endtime="20201030 18:27:42.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:42.047" level="INFO">${RESULT} = {'diff': [9.155500000000011e-05, 9.038899999999975e-05, 9.036100000000061e-05, 9.040299999999932e-05, 9.043100000000193e-05, 9.040299999999932e-05, 9.038899999999975e-05, 9.040299999999932e-05, 9.0402...</msg>
<status status="PASS" starttime="20201030 18:27:42.043" endtime="20201030 18:27:42.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.051" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:42.050" endtime="20201030 18:27:42.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.054" level="INFO">VALUE: [9.155500000000011e-05, 9.038899999999975e-05, 9.036100000000061e-05, 9.040299999999932e-05, 9.043100000000193e-05, 9.040299999999932e-05, 9.038899999999975e-05, 9.040299999999932e-05, 9.040299999999932e-05, 9.03879999999968e-05, 9.037500000000018e-05, 9.036100000000061e-05, 9.036099999999714e-05, 9.037500000000018e-05, 9.037500000000018e-05, 9.03190000000019e-05, 9.038899999999975e-05, 9.038899999999975e-05, 9.043100000000193e-05, 9.037500000000018e-05, 9.034700000000104e-05, 9.038800000000027e-05, 9.037500000000018e-05, 9.038899999999975e-05, 9.037500000000018e-05, 9.037500000000018e-05, 9.037499999999671e-05, 9.037500000000018e-05, 9.038899999999975e-05, 9.043099999999846e-05, 9.036100000000061e-05, 9.040300000000279e-05, 9.043099999999846e-05, 9.038800000000027e-05, 9.040199999999984e-05, 9.036099999999714e-05, 9.040299999999932e-05, 9.038899999999975e-05, 9.038899999999975e-05, 9.037500000000018e-05, 9.038899999999975e-05, 9.040300000000279e-05, 9.038899999999975e-05, 9.038800000000027e-05, 9.037499999999671e-05, 9.036200000000008e-05, 9.037500000000018e-05, 9.034700000000104e-05, 9.045800000000159e-05, 9.038899999999975e-05]</msg>
<status status="PASS" starttime="20201030 18:27:42.052" endtime="20201030 18:27:42.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.047" endtime="20201030 18:27:42.056"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:42.060" endtime="20201030 18:27:42.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.058" endtime="20201030 18:27:42.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.057" endtime="20201030 18:27:42.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.702" endtime="20201030 18:27:42.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.702" endtime="20201030 18:27:42.080"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.089" endtime="20201030 18:27:42.102"></status>
</kw>
<msg timestamp="20201030 18:27:42.102" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:42.088" endtime="20201030 18:27:42.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.105" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:42.103" endtime="20201030 18:27:42.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.106" endtime="20201030 18:27:42.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.085" endtime="20201030 18:27:42.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.083" endtime="20201030 18:27:42.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.115" endtime="20201030 18:27:42.400"></status>
</kw>
<msg timestamp="20201030 18:27:42.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019200583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019300528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:42.114" endtime="20201030 18:27:42.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019200583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019300528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:42.405" endtime="20201030 18:27:42.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.413" endtime="20201030 18:27:42.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.111" endtime="20201030 18:27:42.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.109" endtime="20201030 18:27:42.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:42.419" level="INFO">${PHILIP_RES} = [{'diff': 9.994500000000059e-05}, {'diff': 9.884699999999913e-05}, {'diff': 9.884699999999913e-05}, {'diff': 9.883399999999903e-05}, {'diff': 9.88609999999987e-05}, {'diff': 9.884699999999913e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:42.416" endtime="20201030 18:27:42.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:42.424" level="INFO">${RESULT} = {'diff': [9.994500000000059e-05, 9.884699999999913e-05, 9.884699999999913e-05, 9.883399999999903e-05, 9.88609999999987e-05, 9.884699999999913e-05, 9.888900000000131e-05, 9.883299999999956e-05, 9.88470...</msg>
<status status="PASS" starttime="20201030 18:27:42.420" endtime="20201030 18:27:42.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.428" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:42.427" endtime="20201030 18:27:42.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.431" level="INFO">VALUE: [9.994500000000059e-05, 9.884699999999913e-05, 9.884699999999913e-05, 9.883399999999903e-05, 9.88609999999987e-05, 9.884699999999913e-05, 9.888900000000131e-05, 9.883299999999956e-05, 9.88470000000026e-05, 9.884699999999913e-05, 9.884699999999913e-05, 9.884699999999913e-05, 9.884699999999913e-05, 9.88059999999999e-05, 9.883399999999903e-05, 9.883299999999956e-05, 9.884699999999913e-05, 9.88609999999987e-05, 9.884800000000207e-05, 9.88470000000026e-05, 9.887500000000174e-05, 9.88470000000026e-05, 9.884800000000207e-05, 9.891700000000045e-05, 9.884699999999913e-05, 9.883299999999956e-05, 9.877800000000075e-05, 9.88609999999987e-05, 9.883299999999956e-05, 9.88059999999999e-05, 9.88059999999999e-05, 9.88470000000026e-05, 9.88470000000026e-05, 9.88470000000026e-05, 9.879200000000032e-05, 9.886100000000217e-05, 9.887500000000174e-05, 9.881899999999999e-05, 9.883399999999903e-05, 9.880500000000042e-05, 9.880500000000042e-05, 9.883299999999956e-05, 9.883399999999903e-05, 9.884699999999913e-05, 9.883299999999956e-05, 9.88470000000026e-05, 9.884800000000207e-05, 9.884699999999913e-05, 9.88609999999987e-05, 9.886100000000217e-05]</msg>
<status status="PASS" starttime="20201030 18:27:42.429" endtime="20201030 18:27:42.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.425" endtime="20201030 18:27:42.432"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:42.436" endtime="20201030 18:27:42.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.434" endtime="20201030 18:27:42.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.433" endtime="20201030 18:27:42.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.081" endtime="20201030 18:27:42.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.081" endtime="20201030 18:27:42.457"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.465" endtime="20201030 18:27:42.478"></status>
</kw>
<msg timestamp="20201030 18:27:42.478" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:42.463" endtime="20201030 18:27:42.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.481" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:42.480" endtime="20201030 18:27:42.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.482" endtime="20201030 18:27:42.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.461" endtime="20201030 18:27:42.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.459" endtime="20201030 18:27:42.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.491" endtime="20201030 18:27:42.777"></status>
</kw>
<msg timestamp="20201030 18:27:42.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018569708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0186785, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:42.490" endtime="20201030 18:27:42.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018569708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0186785, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:42.781" endtime="20201030 18:27:42.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.789" endtime="20201030 18:27:42.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.487" endtime="20201030 18:27:42.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.485" endtime="20201030 18:27:42.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:42.796" level="INFO">${PHILIP_RES} = [{'diff': 0.00010879199999999992}, {'diff': 0.00010763900000000312}, {'diff': 0.00010763899999999965}, {'diff': 0.00010766599999999932}, {'diff': 0.00010768099999999836}, {'diff': 0.000107638999999999...</msg>
<status status="PASS" starttime="20201030 18:27:42.793" endtime="20201030 18:27:42.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:42.800" level="INFO">${RESULT} = {'diff': [0.00010879199999999992, 0.00010763900000000312, 0.00010763899999999965, 0.00010766599999999932, 0.00010768099999999836, 0.00010763899999999965, 0.00010761100000000051, 0.00010763899999999965...</msg>
<status status="PASS" starttime="20201030 18:27:42.797" endtime="20201030 18:27:42.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.804" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:42.803" endtime="20201030 18:27:42.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.807" level="INFO">VALUE: [0.00010879199999999992, 0.00010763900000000312, 0.00010763899999999965, 0.00010766599999999932, 0.00010768099999999836, 0.00010763899999999965, 0.00010761100000000051, 0.00010763899999999965, 0.00010765299999999922, 0.00010762500000000008, 0.00010763899999999965, 0.00010759699999999747, 0.00010763899999999965, 0.00010763899999999965, 0.00010762500000000008, 0.00010763800000000018, 0.00010763899999999965, 0.00010763900000000312, 0.00010766599999999932, 0.00010762500000000008, 0.00010763899999999965, 0.00010765300000000269, 0.00010761199999999999, 0.00010767999999999889, 0.00010762500000000008, 0.00010765299999999922, 0.00010759799999999695, 0.00010762500000000008, 0.00010765299999999922, 0.00010765299999999922, 0.00010762500000000008, 0.00010763899999999965, 0.00010762500000000008, 0.00010763899999999965, 0.00010765199999999975, 0.00010762500000000008, 0.00010763899999999965, 0.00010762500000000008, 0.00010762500000000008, 0.00010762500000000008, 0.00010762500000000008, 0.00010765299999999922, 0.00010763899999999965, 0.00010761099999999704, 0.00010758300000000137, 0.00010761100000000051, 0.00010763899999999965, 0.00010763899999999965, 0.00010763899999999965, 0.00010762500000000008]</msg>
<status status="PASS" starttime="20201030 18:27:42.806" endtime="20201030 18:27:42.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.801" endtime="20201030 18:27:42.808"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:42.812" endtime="20201030 18:27:42.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.810" endtime="20201030 18:27:42.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.809" endtime="20201030 18:27:42.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.457" endtime="20201030 18:27:42.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.457" endtime="20201030 18:27:42.833"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.841" endtime="20201030 18:27:42.855"></status>
</kw>
<msg timestamp="20201030 18:27:42.856" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:42.839" endtime="20201030 18:27:42.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.858" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:42.857" endtime="20201030 18:27:42.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.859" endtime="20201030 18:27:42.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.837" endtime="20201030 18:27:42.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.835" endtime="20201030 18:27:42.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.868" endtime="20201030 18:27:43.170"></status>
</kw>
<msg timestamp="20201030 18:27:43.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019492875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019610792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:42.867" endtime="20201030 18:27:43.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019492875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019610792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:43.174" endtime="20201030 18:27:43.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.182" endtime="20201030 18:27:43.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.864" endtime="20201030 18:27:43.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.862" endtime="20201030 18:27:43.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:43.188" level="INFO">${PHILIP_RES} = [{'diff': 0.00011791699999999863}, {'diff': 0.00011680599999999708}, {'diff': 0.00011680600000000055}, {'diff': 0.0001167910000000015}, {'diff': 0.00011686099999999935}, {'diff': 0.0001168060000000005...</msg>
<status status="PASS" starttime="20201030 18:27:43.185" endtime="20201030 18:27:43.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:43.192" level="INFO">${RESULT} = {'diff': [0.00011791699999999863, 0.00011680599999999708, 0.00011680600000000055, 0.0001167910000000015, 0.00011686099999999935, 0.00011680600000000055, 0.00011680600000000055, 0.00011681900000000064,...</msg>
<status status="PASS" starttime="20201030 18:27:43.189" endtime="20201030 18:27:43.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.197" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:43.196" endtime="20201030 18:27:43.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.199" level="INFO">VALUE: [0.00011791699999999863, 0.00011680599999999708, 0.00011680600000000055, 0.0001167910000000015, 0.00011686099999999935, 0.00011680600000000055, 0.00011680600000000055, 0.00011681900000000064, 0.00011679099999999804, 0.00011682000000000012, 0.00011680600000000055, 0.00011677799999999794, 0.00011681900000000064, 0.00011681900000000064, 0.00011680599999999708, 0.00011680600000000055, 0.0001167910000000015, 0.00011679099999999804, 0.00011680600000000055, 0.00011682000000000012, 0.00011680600000000055, 0.00011677699999999847, 0.00011679200000000098, 0.00011682000000000012, 0.00011680600000000055, 0.00011677700000000193, 0.0001167910000000015, 0.00011679199999999751, 0.00011677800000000141, 0.00011679200000000098, 0.0001168049999999976, 0.00011680600000000055, 0.00011686099999999935, 0.00011681899999999718, 0.00011679099999999804, 0.00011677800000000141, 0.00011677799999999794, 0.00011680600000000055, 0.00011680500000000107, 0.00011681900000000064, 0.0001167499999999988, 0.00011680600000000055, 0.00011680600000000055, 0.0001168049999999976, 0.00011680500000000107, 0.00011680600000000055, 0.00011680599999999708, 0.00011680500000000107, 0.00011681900000000064, 0.00011679199999999751]</msg>
<status status="PASS" starttime="20201030 18:27:43.198" endtime="20201030 18:27:43.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.193" endtime="20201030 18:27:43.201"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:43.205" endtime="20201030 18:27:43.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.203" endtime="20201030 18:27:43.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.202" endtime="20201030 18:27:43.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.833" endtime="20201030 18:27:43.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.833" endtime="20201030 18:27:43.225"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.234" endtime="20201030 18:27:43.248"></status>
</kw>
<msg timestamp="20201030 18:27:43.249" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.232" endtime="20201030 18:27:43.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.251" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.250" endtime="20201030 18:27:43.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.252" endtime="20201030 18:27:43.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.230" endtime="20201030 18:27:43.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.228" endtime="20201030 18:27:43.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.261" endtime="20201030 18:27:43.546"></status>
</kw>
<msg timestamp="20201030 18:27:43.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018631097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018758528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:43.259" endtime="20201030 18:27:43.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018631097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018758528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:43.550" endtime="20201030 18:27:43.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.558" endtime="20201030 18:27:43.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.257" endtime="20201030 18:27:43.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.255" endtime="20201030 18:27:43.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:43.565" level="INFO">${PHILIP_RES} = [{'diff': 0.00012743100000000077}, {'diff': 0.0001262780000000005}, {'diff': 0.00012630500000000017}, {'diff': 0.00012630500000000017}, {'diff': 0.00012630599999999964}, {'diff': 0.0001262780000000005...</msg>
<status status="PASS" starttime="20201030 18:27:43.562" endtime="20201030 18:27:43.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:43.569" level="INFO">${RESULT} = {'diff': [0.00012743100000000077, 0.0001262780000000005, 0.00012630500000000017, 0.00012630500000000017, 0.00012630599999999964, 0.0001262780000000005, 0.0001262780000000005, 0.00012629200000000007, 0...</msg>
<status status="PASS" starttime="20201030 18:27:43.566" endtime="20201030 18:27:43.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.574" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:43.573" endtime="20201030 18:27:43.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.576" level="INFO">VALUE: [0.00012743100000000077, 0.0001262780000000005, 0.00012630500000000017, 0.00012630500000000017, 0.00012630599999999964, 0.0001262780000000005, 0.0001262780000000005, 0.00012629200000000007, 0.0001262910000000006, 0.00012630500000000017, 0.00012630500000000017, 0.0001262360000000018, 0.00012629200000000007, 0.00012629200000000007, 0.00012629200000000007, 0.00012631899999999974, 0.00012627700000000103, 0.00012636099999999845, 0.00012631899999999974, 0.00012630599999999964, 0.00012629200000000007, 0.00012629200000000007, 0.00012630500000000017, 0.0001262910000000006, 0.0001262910000000006, 0.0001262910000000006, 0.0001263199999999992, 0.00012629200000000007, 0.0001262780000000005, 0.00012634699999999888, 0.00012631899999999974, 0.00012630500000000017, 0.0001262780000000005, 0.00012626400000000093, 0.00012630599999999964, 0.00012620799999999918, 0.00012629200000000007, 0.00012630500000000017, 0.00012630500000000017, 0.0001262230000000017, 0.0001262780000000005, 0.0001262780000000005, 0.0001262780000000005, 0.00012629200000000007, 0.00012632000000000268, 0.00012630500000000017, 0.00012625000000000136, 0.00012629200000000007, 0.00012629200000000007, 0.00012630599999999964]</msg>
<status status="PASS" starttime="20201030 18:27:43.575" endtime="20201030 18:27:43.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.570" endtime="20201030 18:27:43.578"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:43.581" endtime="20201030 18:27:43.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.580" endtime="20201030 18:27:43.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.578" endtime="20201030 18:27:43.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.226" endtime="20201030 18:27:43.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.226" endtime="20201030 18:27:43.602"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.610" endtime="20201030 18:27:43.625"></status>
</kw>
<msg timestamp="20201030 18:27:43.625" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.609" endtime="20201030 18:27:43.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.628" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.626" endtime="20201030 18:27:43.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.629" endtime="20201030 18:27:43.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.606" endtime="20201030 18:27:43.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.604" endtime="20201030 18:27:43.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.638" endtime="20201030 18:27:43.925"></status>
</kw>
<msg timestamp="20201030 18:27:43.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018602292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018739569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:43.637" endtime="20201030 18:27:43.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018602292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018739569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:43.929" endtime="20201030 18:27:43.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.937" endtime="20201030 18:27:43.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.634" endtime="20201030 18:27:43.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.632" endtime="20201030 18:27:43.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:43.944" level="INFO">${PHILIP_RES} = [{'diff': 0.00013727700000000162}, {'diff': 0.00013617999999999963}, {'diff': 0.00013615299999999997}, {'diff': 0.00013612500000000083}, {'diff': 0.0001361390000000004}, {'diff': 0.0001361669999999995...</msg>
<status status="PASS" starttime="20201030 18:27:43.941" endtime="20201030 18:27:43.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:43.948" level="INFO">${RESULT} = {'diff': [0.00013727700000000162, 0.00013617999999999963, 0.00013615299999999997, 0.00013612500000000083, 0.0001361390000000004, 0.00013616699999999954, 0.00013615299999999997, 0.00013615299999999997,...</msg>
<status status="PASS" starttime="20201030 18:27:43.945" endtime="20201030 18:27:43.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.953" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:43.952" endtime="20201030 18:27:43.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.956" level="INFO">VALUE: [0.00013727700000000162, 0.00013617999999999963, 0.00013615299999999997, 0.00013612500000000083, 0.0001361390000000004, 0.00013616699999999954, 0.00013615299999999997, 0.00013615299999999997, 0.00013619499999999868, 0.00013618100000000258, 0.0001360970000000017, 0.00013616699999999954, 0.00013622199999999834, 0.00013611100000000126, 0.0001361520000000005, 0.0001361809999999991, 0.00013616600000000006, 0.00013616699999999954, 0.00013616699999999954, 0.00013615299999999997, 0.00013615299999999997, 0.00013615299999999997, 0.00013612500000000083, 0.0001361939999999992, 0.0001361809999999991, 0.00013616600000000006, 0.00013616699999999954, 0.00013616600000000006, 0.00013616699999999954, 0.0001361800000000031, 0.00013616699999999954, 0.0001361939999999992, 0.00013616699999999954, 0.00013616699999999954, 0.00013617999999999963, 0.0001361390000000004, 0.00013612499999999736, 0.00013615299999999997, 0.0001361800000000031, 0.00013616699999999954, 0.00013617999999999963, 0.00013616699999999954, 0.00013615299999999997, 0.00013616699999999954, 0.00013615299999999997, 0.00013616699999999954, 0.0001361809999999991, 0.00013616600000000006, 0.00013615299999999997, 0.00013613899999999693]</msg>
<status status="PASS" starttime="20201030 18:27:43.954" endtime="20201030 18:27:43.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.949" endtime="20201030 18:27:43.957"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:43.961" endtime="20201030 18:27:43.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.959" endtime="20201030 18:27:43.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.958" endtime="20201030 18:27:43.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.603" endtime="20201030 18:27:43.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.602" endtime="20201030 18:27:43.982"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.991" endtime="20201030 18:27:44.007"></status>
</kw>
<msg timestamp="20201030 18:27:44.007" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.989" endtime="20201030 18:27:44.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.010" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.009" endtime="20201030 18:27:44.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.011" endtime="20201030 18:27:44.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.987" endtime="20201030 18:27:44.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.985" endtime="20201030 18:27:44.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.020" endtime="20201030 18:27:44.305"></status>
</kw>
<msg timestamp="20201030 18:27:44.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019620375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019767903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:44.018" endtime="20201030 18:27:44.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019620375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019767903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:44.309" endtime="20201030 18:27:44.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.317" endtime="20201030 18:27:44.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.016" endtime="20201030 18:27:44.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.014" endtime="20201030 18:27:44.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:44.324" level="INFO">${PHILIP_RES} = [{'diff': 0.00014752800000000094}, {'diff': 0.000146348000000001}, {'diff': 0.00014630599999999883}, {'diff': 0.00014636099999999763}, {'diff': 0.0001463610000000011}, {'diff': 0.00014637500000000067}...</msg>
<status status="PASS" starttime="20201030 18:27:44.321" endtime="20201030 18:27:44.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:44.328" level="INFO">${RESULT} = {'diff': [0.00014752800000000094, 0.000146348000000001, 0.00014630599999999883, 0.00014636099999999763, 0.0001463610000000011, 0.00014637500000000067, 0.0001463610000000011, 0.00014634699999999806, 0....</msg>
<status status="PASS" starttime="20201030 18:27:44.325" endtime="20201030 18:27:44.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.332" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:44.331" endtime="20201030 18:27:44.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.334" level="INFO">VALUE: [0.00014752800000000094, 0.000146348000000001, 0.00014630599999999883, 0.00014636099999999763, 0.0001463610000000011, 0.00014637500000000067, 0.0001463610000000011, 0.00014634699999999806, 0.0001463610000000011, 0.000146348000000001, 0.0001463749999999972, 0.00014634700000000153, 0.0001463060000000023, 0.0001463749999999972, 0.0001463610000000011, 0.00014634700000000153, 0.0001463749999999972, 0.0001463610000000011, 0.0001463610000000011, 0.0001464029999999998, 0.00014637500000000067, 0.0001463610000000011, 0.00014634699999999806, 0.00014638900000000024, 0.00014637500000000067, 0.0001464159999999999, 0.0001463610000000011, 0.0001463610000000011, 0.00014632000000000187, 0.00014637500000000067, 0.0001463610000000011, 0.0001463610000000011, 0.00014634699999999806, 0.0001463610000000011, 0.00014634700000000153, 0.0001463610000000011, 0.0001463610000000011, 0.00014634699999999806, 0.0001463749999999972, 0.00014637500000000067, 0.0001463610000000011, 0.00014634699999999806, 0.0001463610000000011, 0.0001463610000000011, 0.0001463749999999972, 0.00014637500000000067, 0.0001463610000000011, 0.00014634699999999806, 0.00014634700000000153, 0.000146348000000001]</msg>
<status status="PASS" starttime="20201030 18:27:44.333" endtime="20201030 18:27:44.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.329" endtime="20201030 18:27:44.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:44.340" endtime="20201030 18:27:44.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.339" endtime="20201030 18:27:44.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.338" endtime="20201030 18:27:44.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.983" endtime="20201030 18:27:44.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.982" endtime="20201030 18:27:44.361"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.369" endtime="20201030 18:27:44.385"></status>
</kw>
<msg timestamp="20201030 18:27:44.386" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.368" endtime="20201030 18:27:44.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.388" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.387" endtime="20201030 18:27:44.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.389" endtime="20201030 18:27:44.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.365" endtime="20201030 18:27:44.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.363" endtime="20201030 18:27:44.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.398" endtime="20201030 18:27:44.684"></status>
</kw>
<msg timestamp="20201030 18:27:44.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01849625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018654333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:44.397" endtime="20201030 18:27:44.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01849625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018654333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:44.688" endtime="20201030 18:27:44.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.696" endtime="20201030 18:27:44.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.394" endtime="20201030 18:27:44.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.392" endtime="20201030 18:27:44.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:44.702" level="INFO">${PHILIP_RES} = [{'diff': 0.00015808299999999983}, {'diff': 0.00015691700000000294}, {'diff': 0.00015691699999999947}, {'diff': 0.0001569449999999986}, {'diff': 0.00015694500000000208}, {'diff': 0.0001569309999999990...</msg>
<status status="PASS" starttime="20201030 18:27:44.699" endtime="20201030 18:27:44.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:44.709" level="INFO">${RESULT} = {'diff': [0.00015808299999999983, 0.00015691700000000294, 0.00015691699999999947, 0.0001569449999999986, 0.00015694500000000208, 0.00015693099999999904, 0.00015694399999999914, 0.00015692999999999957,...</msg>
<status status="PASS" starttime="20201030 18:27:44.703" endtime="20201030 18:27:44.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.714" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:44.713" endtime="20201030 18:27:44.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.716" level="INFO">VALUE: [0.00015808299999999983, 0.00015691700000000294, 0.00015691699999999947, 0.0001569449999999986, 0.00015694500000000208, 0.00015693099999999904, 0.00015694399999999914, 0.00015692999999999957, 0.00015698600000000132, 0.00015694399999999914, 0.00015692999999999957, 0.00015694399999999914, 0.000156916, 0.00015694399999999914, 0.000156916, 0.0001569440000000026, 0.00015693099999999904, 0.00015694399999999914, 0.00015693099999999904, 0.0001569310000000025, 0.00015693099999999904, 0.00015693099999999904, 0.00015693099999999904, 0.0001569449999999986, 0.0001569310000000025, 0.0001569449999999986, 0.00015691699999999947, 0.0001569310000000025, 0.00015694399999999914, 0.00015694399999999914, 0.0001569440000000026, 0.000156916, 0.0001569579999999987, 0.00015692999999999957, 0.00015694399999999914, 0.00015692999999999957, 0.00015692999999999957, 0.00015692999999999957, 0.00015691699999999947, 0.0001569310000000025, 0.00015693099999999904, 0.00015691699999999947, 0.00015691700000000294, 0.00015691699999999947, 0.00015693099999999904, 0.00015693099999999904, 0.00015693099999999904, 0.00015694500000000208, 0.0001569449999999986, 0.0001569449999999986]</msg>
<status status="PASS" starttime="20201030 18:27:44.715" endtime="20201030 18:27:44.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.710" endtime="20201030 18:27:44.718"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:44.721" endtime="20201030 18:27:44.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.720" endtime="20201030 18:27:44.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.719" endtime="20201030 18:27:44.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.362" endtime="20201030 18:27:44.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.361" endtime="20201030 18:27:44.742"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.750" endtime="20201030 18:27:44.767"></status>
</kw>
<msg timestamp="20201030 18:27:44.767" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.749" endtime="20201030 18:27:44.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.770" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.768" endtime="20201030 18:27:44.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.771" endtime="20201030 18:27:44.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.746" endtime="20201030 18:27:44.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.744" endtime="20201030 18:27:44.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.780" endtime="20201030 18:27:45.066"></status>
</kw>
<msg timestamp="20201030 18:27:45.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018599986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018768986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:44.778" endtime="20201030 18:27:45.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018599986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018768986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.070" endtime="20201030 18:27:45.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.078" endtime="20201030 18:27:45.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.776" endtime="20201030 18:27:45.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.774" endtime="20201030 18:27:45.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:45.085" level="INFO">${PHILIP_RES} = [{'diff': 0.00016900000000000248}, {'diff': 0.00016783399999999865}, {'diff': 0.00016784700000000222}, {'diff': 0.00016783300000000265}, {'diff': 0.0001678189999999996}, {'diff': 0.0001678329999999991...</msg>
<status status="PASS" starttime="20201030 18:27:45.082" endtime="20201030 18:27:45.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:45.089" level="INFO">${RESULT} = {'diff': [0.00016900000000000248, 0.00016783399999999865, 0.00016784700000000222, 0.00016783300000000265, 0.0001678189999999996, 0.00016783299999999918, 0.0001678189999999996, 0.0001678610000000018, 0...</msg>
<status status="PASS" starttime="20201030 18:27:45.086" endtime="20201030 18:27:45.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.094" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:45.093" endtime="20201030 18:27:45.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.096" level="INFO">VALUE: [0.00016900000000000248, 0.00016783399999999865, 0.00016784700000000222, 0.00016783300000000265, 0.0001678189999999996, 0.00016783299999999918, 0.0001678189999999996, 0.0001678610000000018, 0.00016783400000000212, 0.00016781999999999908, 0.00016783299999999918, 0.00016784700000000222, 0.0001678610000000018, 0.0001678189999999996, 0.00016784799999999822, 0.00016784799999999822, 0.00016781999999999908, 0.00016784700000000222, 0.00016784699999999875, 0.0001677770000000009, 0.00016781999999999908, 0.00016783399999999865, 0.00016779199999999994, 0.0001678189999999996, 0.00016783299999999918, 0.00016783299999999918, 0.0001678610000000018, 0.00016783400000000212, 0.00016783399999999865, 0.00016783299999999918, 0.00016783299999999918, 0.00016784700000000222, 0.00016783300000000265, 0.00016786099999999832, 0.00016783399999999865, 0.00016783399999999865, 0.00016783300000000265, 0.00016780500000000004, 0.00016783299999999918, 0.00016784699999999875, 0.00016783399999999865, 0.0001678480000000017, 0.00016784700000000222, 0.00016783299999999918, 0.0001678749999999979, 0.00016783299999999918, 0.00016780500000000004, 0.00016783400000000212, 0.00016783399999999865, 0.00016781999999999908]</msg>
<status status="PASS" starttime="20201030 18:27:45.095" endtime="20201030 18:27:45.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.090" endtime="20201030 18:27:45.097"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:45.101" endtime="20201030 18:27:45.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.099" endtime="20201030 18:27:45.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.098" endtime="20201030 18:27:45.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.743" endtime="20201030 18:27:45.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.742" endtime="20201030 18:27:45.122"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.130" endtime="20201030 18:27:45.148"></status>
</kw>
<msg timestamp="20201030 18:27:45.149" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.129" endtime="20201030 18:27:45.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.151" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.150" endtime="20201030 18:27:45.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.152" endtime="20201030 18:27:45.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.126" endtime="20201030 18:27:45.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.124" endtime="20201030 18:27:45.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.161" endtime="20201030 18:27:45.446"></status>
</kw>
<msg timestamp="20201030 18:27:45.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019399361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019579611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.160" endtime="20201030 18:27:45.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019399361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019579611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.450" endtime="20201030 18:27:45.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.459" endtime="20201030 18:27:45.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.157" endtime="20201030 18:27:45.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.155" endtime="20201030 18:27:45.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:45.465" level="INFO">${PHILIP_RES} = [{'diff': 0.00018024999999999985}, {'diff': 0.00017911099999999916}, {'diff': 0.0001790969999999996}, {'diff': 0.00017911099999999916}, {'diff': 0.00017911099999999916}, {'diff': 0.0001791250000000022...</msg>
<status status="PASS" starttime="20201030 18:27:45.462" endtime="20201030 18:27:45.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:45.469" level="INFO">${RESULT} = {'diff': [0.00018024999999999985, 0.00017911099999999916, 0.0001790969999999996, 0.00017911099999999916, 0.00017911099999999916, 0.0001791250000000022, 0.00017908300000000002, 0.0001791120000000021, 0...</msg>
<status status="PASS" starttime="20201030 18:27:45.466" endtime="20201030 18:27:45.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.473" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:45.472" endtime="20201030 18:27:45.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.476" level="INFO">VALUE: [0.00018024999999999985, 0.00017911099999999916, 0.0001790969999999996, 0.00017911099999999916, 0.00017911099999999916, 0.0001791250000000022, 0.00017908300000000002, 0.0001791120000000021, 0.00017911099999999916, 0.0001790969999999996, 0.00017911099999999916, 0.00017912499999999873, 0.00017911099999999916, 0.00017911099999999916, 0.00017915299999999787, 0.00017913900000000177, 0.00017911099999999916, 0.00017911099999999916, 0.0001790969999999996, 0.00017912499999999873, 0.0001791250000000022, 0.00017911099999999916, 0.00017915299999999787, 0.00017911099999999916, 0.00017912499999999873, 0.00017911099999999916, 0.00017912499999999873, 0.0001790969999999996, 0.00017915200000000187, 0.00017911099999999916, 0.0001790969999999996, 0.00017912499999999873, 0.0001790969999999996, 0.00017911100000000263, 0.0001791389999999983, 0.0001790969999999996, 0.00017902799999999774, 0.00017911099999999916, 0.0001791250000000022, 0.00017911099999999916, 0.0001790969999999996, 0.00017911099999999916, 0.0001790969999999996, 0.00017909700000000306, 0.00017904099999999784, 0.00017911099999999916, 0.00017915300000000134, 0.0001790969999999996, 0.0001791250000000022, 0.00017911099999999916]</msg>
<status status="PASS" starttime="20201030 18:27:45.474" endtime="20201030 18:27:45.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.470" endtime="20201030 18:27:45.478"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:45.481" endtime="20201030 18:27:45.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.480" endtime="20201030 18:27:45.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.479" endtime="20201030 18:27:45.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.123" endtime="20201030 18:27:45.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.122" endtime="20201030 18:27:45.502"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.510" endtime="20201030 18:27:45.528"></status>
</kw>
<msg timestamp="20201030 18:27:45.529" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.509" endtime="20201030 18:27:45.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.531" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.530" endtime="20201030 18:27:45.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.532" endtime="20201030 18:27:45.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.506" endtime="20201030 18:27:45.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.504" endtime="20201030 18:27:45.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.541" endtime="20201030 18:27:45.828"></status>
</kw>
<msg timestamp="20201030 18:27:45.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018522514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018714389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.540" endtime="20201030 18:27:45.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018522514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018714389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.838" endtime="20201030 18:27:45.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.856" endtime="20201030 18:27:45.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.537" endtime="20201030 18:27:45.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.535" endtime="20201030 18:27:45.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:45.869" level="INFO">${PHILIP_RES} = [{'diff': 0.00019187500000000107}, {'diff': 0.00019074999999999995}, {'diff': 0.00019072199999999734}, {'diff': 0.00019072300000000028}, {'diff': 0.00019072199999999734}, {'diff': 0.000190709000000000...</msg>
<status status="PASS" starttime="20201030 18:27:45.863" endtime="20201030 18:27:45.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:45.880" level="INFO">${RESULT} = {'diff': [0.00019187500000000107, 0.00019074999999999995, 0.00019072199999999734, 0.00019072300000000028, 0.00019072199999999734, 0.0001907090000000007, 0.0001907220000000008, 0.00019072300000000028, ...</msg>
<status status="PASS" starttime="20201030 18:27:45.871" endtime="20201030 18:27:45.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.889" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:45.887" endtime="20201030 18:27:45.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.894" level="INFO">VALUE: [0.00019187500000000107, 0.00019074999999999995, 0.00019072199999999734, 0.00019072300000000028, 0.00019072199999999734, 0.0001907090000000007, 0.0001907220000000008, 0.00019072300000000028, 0.0001907779999999991, 0.00019073600000000038, 0.00019070800000000124, 0.00019072300000000028, 0.0001906939999999982, 0.00019070800000000124, 0.00019070799999999777, 0.0001907090000000007, 0.00019072300000000028, 0.00019069400000000167, 0.00019070800000000124, 0.00019069499999999767, 0.00019072300000000028, 0.0001906939999999982, 0.00019066699999999853, 0.00019073600000000038, 0.00019072300000000028, 0.00019073600000000038, 0.0001907220000000008, 0.0001907220000000008, 0.00019072300000000028, 0.0001906809999999981, 0.00019065200000000296, 0.00019073600000000038, 0.00019072300000000028, 0.0001907779999999991, 0.00019073600000000038, 0.0001907220000000008, 0.00019074999999999995, 0.00019069500000000114, 0.00019072199999999734, 0.00019070800000000124, 0.0001907220000000008, 0.00019065299999999896, 0.00019069400000000167, 0.00019072199999999734, 0.00019070800000000124, 0.00019072300000000028, 0.0001907090000000007, 0.00019070800000000124, 0.0001907220000000008, 0.0001907220000000008]</msg>
<status status="PASS" starttime="20201030 18:27:45.891" endtime="20201030 18:27:45.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.881" endtime="20201030 18:27:45.897"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:45.904" endtime="20201030 18:27:45.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.901" endtime="20201030 18:27:45.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.899" endtime="20201030 18:27:45.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.503" endtime="20201030 18:27:45.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.502" endtime="20201030 18:27:45.926"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.934" endtime="20201030 18:27:45.953"></status>
</kw>
<msg timestamp="20201030 18:27:45.953" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.933" endtime="20201030 18:27:45.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.956" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.955" endtime="20201030 18:27:45.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.957" endtime="20201030 18:27:45.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.930" endtime="20201030 18:27:45.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.928" endtime="20201030 18:27:45.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.966" endtime="20201030 18:27:46.253"></status>
</kw>
<msg timestamp="20201030 18:27:46.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019179542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019383389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.964" endtime="20201030 18:27:46.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019179542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019383389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:46.257" endtime="20201030 18:27:46.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.265" endtime="20201030 18:27:46.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.962" endtime="20201030 18:27:46.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.960" endtime="20201030 18:27:46.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:46.271" level="INFO">${PHILIP_RES} = [{'diff': 0.00020384700000000006}, {'diff': 0.00020269500000000273}, {'diff': 0.00020269499999999926}, {'diff': 0.0002027220000000024}, {'diff': 0.00020268000000000022}, {'diff': 0.0002026949999999992...</msg>
<status status="PASS" starttime="20201030 18:27:46.268" endtime="20201030 18:27:46.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:46.275" level="INFO">${RESULT} = {'diff': [0.00020384700000000006, 0.00020269500000000273, 0.00020269499999999926, 0.0002027220000000024, 0.00020268000000000022, 0.00020269499999999926, 0.00020262500000000142, 0.00020268000000000022,...</msg>
<status status="PASS" starttime="20201030 18:27:46.272" endtime="20201030 18:27:46.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.279" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:46.278" endtime="20201030 18:27:46.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.282" level="INFO">VALUE: [0.00020384700000000006, 0.00020269500000000273, 0.00020269499999999926, 0.0002027220000000024, 0.00020268000000000022, 0.00020269499999999926, 0.00020262500000000142, 0.00020268000000000022, 0.00020262500000000142, 0.0002026809999999997, 0.00020270799999999936, 0.0002026939999999998, 0.00020269499999999926, 0.00020270799999999936, 0.00020270799999999936, 0.00020270799999999936, 0.00020269499999999926, 0.0002026939999999998, 0.00020268000000000022, 0.0002027359999999985, 0.0002027090000000023, 0.00020270799999999936, 0.0002026939999999998, 0.00020269499999999926, 0.00020272199999999893, 0.0002027220000000024, 0.00020269499999999926, 0.00020268100000000316, 0.00020276399999999764, 0.00020270799999999936, 0.0002026809999999997, 0.00020270799999999936, 0.0002026939999999998, 0.0002026939999999998, 0.0002027090000000023, 0.00020269499999999926, 0.0002026939999999998, 0.0002026809999999997, 0.0002027229999999984, 0.0002026939999999998, 0.00020268000000000022, 0.0002026809999999997, 0.0002026939999999998, 0.0002026939999999998, 0.00020270800000000283, 0.00020269499999999926, 0.00020270799999999936, 0.00020268000000000022, 0.00020269499999999926, 0.00020269500000000273]</msg>
<status status="PASS" starttime="20201030 18:27:46.281" endtime="20201030 18:27:46.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.276" endtime="20201030 18:27:46.283"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:46.287" endtime="20201030 18:27:46.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.285" endtime="20201030 18:27:46.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.284" endtime="20201030 18:27:46.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.927" endtime="20201030 18:27:46.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.926" endtime="20201030 18:27:46.308"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.316" endtime="20201030 18:27:46.336"></status>
</kw>
<msg timestamp="20201030 18:27:46.337" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.315" endtime="20201030 18:27:46.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.339" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.338" endtime="20201030 18:27:46.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.340" endtime="20201030 18:27:46.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.312" endtime="20201030 18:27:46.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.310" endtime="20201030 18:27:46.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.349" endtime="20201030 18:27:46.635"></status>
</kw>
<msg timestamp="20201030 18:27:46.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019387514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019603667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:46.348" endtime="20201030 18:27:46.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019387514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019603667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:46.639" endtime="20201030 18:27:46.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.647" endtime="20201030 18:27:46.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.345" endtime="20201030 18:27:46.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.344" endtime="20201030 18:27:46.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:46.653" level="INFO">${PHILIP_RES} = [{'diff': 0.00021615300000000018}, {'diff': 0.00021501399999999948}, {'diff': 0.0002150559999999982}, {'diff': 0.0002149999999999999}, {'diff': 0.00021498699999999982}, {'diff': 0.0002149999999999999}...</msg>
<status status="PASS" starttime="20201030 18:27:46.650" endtime="20201030 18:27:46.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:46.657" level="INFO">${RESULT} = {'diff': [0.00021615300000000018, 0.00021501399999999948, 0.0002150559999999982, 0.0002149999999999999, 0.00021498699999999982, 0.0002149999999999999, 0.0002149999999999999, 0.00021501399999999948, 0....</msg>
<status status="PASS" starttime="20201030 18:27:46.654" endtime="20201030 18:27:46.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.662" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:46.661" endtime="20201030 18:27:46.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.664" level="INFO">VALUE: [0.00021615300000000018, 0.00021501399999999948, 0.0002150559999999982, 0.0002149999999999999, 0.00021498699999999982, 0.0002149999999999999, 0.0002149999999999999, 0.00021501399999999948, 0.00021498600000000034, 0.00021500000000000338, 0.00021501399999999948, 0.00021498600000000034, 0.000215013, 0.00021508299999999786, 0.00021501400000000295, 0.0002149719999999973, 0.0002149999999999999, 0.00021498600000000034, 0.0002149999999999999, 0.0002150559999999982, 0.00021498600000000034, 0.00021502699999999958, 0.00021501399999999948, 0.0002149999999999999, 0.00021497200000000077, 0.0002149999999999999, 0.00021502799999999905, 0.0002149999999999999, 0.0002150840000000008, 0.000215013, 0.00021501399999999948, 0.0002149999999999999, 0.00021508300000000133, 0.00021501399999999948, 0.00021501399999999948, 0.00021502799999999905, 0.00021497200000000077, 0.00021504100000000262, 0.0002149999999999999, 0.0002149999999999999, 0.00021498600000000034, 0.00021498600000000034, 0.0002149999999999999, 0.0002149299999999986, 0.00021501400000000295, 0.000215013, 0.00021501399999999948, 0.00021501399999999948, 0.00021501399999999948, 0.00021501399999999948]</msg>
<status status="PASS" starttime="20201030 18:27:46.663" endtime="20201030 18:27:46.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.658" endtime="20201030 18:27:46.670"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:46.674" endtime="20201030 18:27:46.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.672" endtime="20201030 18:27:46.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.671" endtime="20201030 18:27:46.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.309" endtime="20201030 18:27:46.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.308" endtime="20201030 18:27:46.695"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.705" endtime="20201030 18:27:46.726"></status>
</kw>
<msg timestamp="20201030 18:27:46.727" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.703" endtime="20201030 18:27:46.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.729" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.728" endtime="20201030 18:27:46.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.730" endtime="20201030 18:27:46.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.701" endtime="20201030 18:27:46.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.698" endtime="20201030 18:27:46.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.739" endtime="20201030 18:27:47.025"></status>
</kw>
<msg timestamp="20201030 18:27:47.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020817056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021045889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:46.738" endtime="20201030 18:27:47.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020817056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021045889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.029" endtime="20201030 18:27:47.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.037" endtime="20201030 18:27:47.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.735" endtime="20201030 18:27:47.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.733" endtime="20201030 18:27:47.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:47.044" level="INFO">${PHILIP_RES} = [{'diff': 0.0002288330000000012}, {'diff': 0.00022768000000000094}, {'diff': 0.00022772199999999965}, {'diff': 0.00022770800000000008}, {'diff': 0.00022766700000000084}, {'diff': 0.0002276939999999970...</msg>
<status status="PASS" starttime="20201030 18:27:47.041" endtime="20201030 18:27:47.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:47.049" level="INFO">${RESULT} = {'diff': [0.0002288330000000012, 0.00022768000000000094, 0.00022772199999999965, 0.00022770800000000008, 0.00022766700000000084, 0.00022769399999999704, 0.0002276940000000005, 0.00022768000000000094, ...</msg>
<status status="PASS" starttime="20201030 18:27:47.045" endtime="20201030 18:27:47.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.053" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:47.052" endtime="20201030 18:27:47.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.055" level="INFO">VALUE: [0.0002288330000000012, 0.00022768000000000094, 0.00022772199999999965, 0.00022770800000000008, 0.00022766700000000084, 0.00022769399999999704, 0.0002276940000000005, 0.00022768000000000094, 0.0002276940000000005, 0.00022766600000000137, 0.00022770800000000008, 0.0002276940000000005, 0.0002276940000000005, 0.00022770800000000008, 0.00022770800000000008, 0.00022766699999999737, 0.00022767999999999747, 0.0002276940000000005, 0.0002276390000000017, 0.00022770800000000008, 0.0002276940000000005, 0.00022770800000000008, 0.00022773599999999922, 0.00022768000000000094, 0.0002276940000000005, 0.00022768000000000094, 0.0002276940000000005, 0.00022770800000000008, 0.00022762499999999866, 0.0002276109999999991, 0.00022769399999999704, 0.00022767999999999747, 0.00022768000000000094, 0.00022768000000000094, 0.00022768000000000094, 0.00022768000000000094, 0.0002276940000000005, 0.00022768000000000094, 0.00022762499999999866, 0.00022763899999999823, 0.0002276109999999991, 0.0002276940000000005, 0.0002276940000000005, 0.00022768000000000094, 0.0002276940000000005, 0.00022770800000000008, 0.0002276940000000005, 0.00022768000000000094, 0.00022766600000000137, 0.00022768000000000094]</msg>
<status status="PASS" starttime="20201030 18:27:47.054" endtime="20201030 18:27:47.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.049" endtime="20201030 18:27:47.057"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:47.060" endtime="20201030 18:27:47.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.059" endtime="20201030 18:27:47.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.058" endtime="20201030 18:27:47.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.696" endtime="20201030 18:27:47.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.695" endtime="20201030 18:27:47.081"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.089" endtime="20201030 18:27:47.110"></status>
</kw>
<msg timestamp="20201030 18:27:47.111" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.088" endtime="20201030 18:27:47.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.115" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.113" endtime="20201030 18:27:47.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.116" endtime="20201030 18:27:47.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.085" endtime="20201030 18:27:47.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.083" endtime="20201030 18:27:47.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.130" endtime="20201030 18:27:47.417"></status>
</kw>
<msg timestamp="20201030 18:27:47.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018867792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019109653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.128" endtime="20201030 18:27:47.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018867792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019109653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.421" endtime="20201030 18:27:47.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.429" endtime="20201030 18:27:47.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.124" endtime="20201030 18:27:47.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.122" endtime="20201030 18:27:47.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:47.435" level="INFO">${PHILIP_RES} = [{'diff': 0.00024186099999999947}, {'diff': 0.00024068000000000006}, {'diff': 0.00024070899999999867}, {'diff': 0.00024068099999999953}, {'diff': 0.0002407079999999992}, {'diff': 0.0002407079999999992...</msg>
<status status="PASS" starttime="20201030 18:27:47.432" endtime="20201030 18:27:47.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:47.439" level="INFO">${RESULT} = {'diff': [0.00024186099999999947, 0.00024068000000000006, 0.00024070899999999867, 0.00024068099999999953, 0.0002407079999999992, 0.0002407079999999992, 0.00024070800000000267, 0.00024068099999999953, ...</msg>
<status status="PASS" starttime="20201030 18:27:47.436" endtime="20201030 18:27:47.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.444" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:47.443" endtime="20201030 18:27:47.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.446" level="INFO">VALUE: [0.00024186099999999947, 0.00024068000000000006, 0.00024070899999999867, 0.00024068099999999953, 0.0002407079999999992, 0.0002407079999999992, 0.00024070800000000267, 0.00024068099999999953, 0.00024070800000000267, 0.0002407079999999992, 0.0002406940000000031, 0.00024070899999999867, 0.00024070899999999867, 0.00024073599999999834, 0.0002407499999999979, 0.00024068000000000006, 0.00024068099999999953, 0.00024070900000000214, 0.00024068000000000006, 0.00024076400000000095, 0.00024076400000000095, 0.00024075000000000138, 0.0002406949999999991, 0.00024063900000000082, 0.0002407079999999992, 0.0002406949999999991, 0.00024072299999999824, 0.00024068099999999953, 0.0002407360000000018, 0.00024070800000000267, 0.00024070900000000214, 0.00024068099999999953, 0.00024069399999999963, 0.00024069399999999963, 0.00024072199999999877, 0.0002406949999999991, 0.0002407079999999992, 0.00024069399999999963, 0.00024065200000000092, 0.00024072200000000224, 0.00024070900000000214, 0.0002407360000000018, 0.00024075000000000138, 0.0002407079999999992, 0.00024070899999999867, 0.0002407079999999992, 0.0002407079999999992, 0.00024072199999999877, 0.0002407079999999992, 0.0002406949999999991]</msg>
<status status="PASS" starttime="20201030 18:27:47.445" endtime="20201030 18:27:47.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.440" endtime="20201030 18:27:47.447"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:47.451" endtime="20201030 18:27:47.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.450" endtime="20201030 18:27:47.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.448" endtime="20201030 18:27:47.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.082" endtime="20201030 18:27:47.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.081" endtime="20201030 18:27:47.472"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.480" endtime="20201030 18:27:47.502"></status>
</kw>
<msg timestamp="20201030 18:27:47.502" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.479" endtime="20201030 18:27:47.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.505" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.503" endtime="20201030 18:27:47.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.506" endtime="20201030 18:27:47.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.476" endtime="20201030 18:27:47.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.474" endtime="20201030 18:27:47.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.515" endtime="20201030 18:27:47.800"></status>
</kw>
<msg timestamp="20201030 18:27:47.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019487792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019743056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.513" endtime="20201030 18:27:47.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019487792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019743056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.804" endtime="20201030 18:27:47.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.812" endtime="20201030 18:27:47.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.511" endtime="20201030 18:27:47.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.509" endtime="20201030 18:27:47.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:47.818" level="INFO">${PHILIP_RES} = [{'diff': 0.0002552639999999981}, {'diff': 0.00025408399999999817}, {'diff': 0.00025409700000000174}, {'diff': 0.0002541110000000013}, {'diff': 0.0002540829999999987}, {'diff': 0.00025413900000000045}...</msg>
<status status="PASS" starttime="20201030 18:27:47.815" endtime="20201030 18:27:47.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:47.822" level="INFO">${RESULT} = {'diff': [0.0002552639999999981, 0.00025408399999999817, 0.00025409700000000174, 0.0002541110000000013, 0.0002540829999999987, 0.00025413900000000045, 0.00025409699999999827, 0.00025409700000000174, 0...</msg>
<status status="PASS" starttime="20201030 18:27:47.819" endtime="20201030 18:27:47.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.826" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:47.825" endtime="20201030 18:27:47.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.829" level="INFO">VALUE: [0.0002552639999999981, 0.00025408399999999817, 0.00025409700000000174, 0.0002541110000000013, 0.0002540829999999987, 0.00025413900000000045, 0.00025409699999999827, 0.00025409700000000174, 0.00025408300000000217, 0.0002540829999999987, 0.00025408400000000164, 0.00025406899999999913, 0.0002541250000000009, 0.0002541110000000013, 0.000254153, 0.00025409700000000174, 0.00025408399999999817, 0.00025406899999999913, 0.0002540980000000012, 0.00025404199999999946, 0.00025407000000000207, 0.0002540829999999987, 0.00025408300000000217, 0.0002540829999999987, 0.00025406899999999913, 0.0002540140000000003, 0.000254153, 0.00025409700000000174, 0.00025409699999999827, 0.0002541120000000008, 0.00025408300000000217, 0.0002540140000000003, 0.00025405499999999956, 0.00025408399999999817, 0.00025408300000000217, 0.00025408300000000217, 0.00025409699999999827, 0.00025408300000000217, 0.00025415200000000054, 0.00025409700000000174, 0.00025404199999999946, 0.00025406899999999913, 0.00025408400000000164, 0.000254041999999996, 0.0002540839999999947, 0.00025409700000000174, 0.0002539999999999973, 0.00025411099999999437, 0.0002541250000000009, 0.00025409700000000174]</msg>
<status status="PASS" starttime="20201030 18:27:47.828" endtime="20201030 18:27:47.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.823" endtime="20201030 18:27:47.831"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:47.835" endtime="20201030 18:27:47.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.833" endtime="20201030 18:27:47.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.832" endtime="20201030 18:27:47.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.473" endtime="20201030 18:27:47.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.472" endtime="20201030 18:27:47.855"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.864" endtime="20201030 18:27:47.886"></status>
</kw>
<msg timestamp="20201030 18:27:47.886" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.862" endtime="20201030 18:27:47.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.889" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.887" endtime="20201030 18:27:47.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.890" endtime="20201030 18:27:47.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.860" endtime="20201030 18:27:47.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.858" endtime="20201030 18:27:47.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.899" endtime="20201030 18:27:48.185"></status>
</kw>
<msg timestamp="20201030 18:27:48.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018565764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018834792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.898" endtime="20201030 18:27:48.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018565764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018834792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.189" endtime="20201030 18:27:48.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.197" endtime="20201030 18:27:48.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.895" endtime="20201030 18:27:48.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.893" endtime="20201030 18:27:48.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:48.203" level="INFO">${PHILIP_RES} = [{'diff': 0.000269028000000001}, {'diff': 0.000267818999999999}, {'diff': 0.00026783299999999857}, {'diff': 0.00026782000000000195}, {'diff': 0.00026782000000000195}, {'diff': 0.0002678059999999989}, ...</msg>
<status status="PASS" starttime="20201030 18:27:48.200" endtime="20201030 18:27:48.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:48.210" level="INFO">${RESULT} = {'diff': [0.000269028000000001, 0.000267818999999999, 0.00026783299999999857, 0.00026782000000000195, 0.00026782000000000195, 0.0002678059999999989, 0.00026779199999999934, 0.0002678059999999989, 0.00...</msg>
<status status="PASS" starttime="20201030 18:27:48.204" endtime="20201030 18:27:48.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.215" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:48.214" endtime="20201030 18:27:48.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.217" level="INFO">VALUE: [0.000269028000000001, 0.000267818999999999, 0.00026783299999999857, 0.00026782000000000195, 0.00026782000000000195, 0.0002678059999999989, 0.00026779199999999934, 0.0002678059999999989, 0.0002678199999999985, 0.00026783399999999805, 0.0002678050000000029, 0.0002678050000000029, 0.000267818999999999, 0.00026780499999999943, 0.00026780499999999943, 0.00026779099999999986, 0.00026784699999999814, 0.0002678050000000029, 0.00026780499999999943, 0.0002678059999999989, 0.0002678059999999989, 0.0002677500000000006, 0.0002678199999999985, 0.00026782000000000195, 0.00026782000000000195, 0.0002678059999999989, 0.00026779199999999934, 0.0002678610000000012, 0.0002677500000000006, 0.0002678479999999976, 0.00026780499999999943, 0.0002678060000000024, 0.00026780499999999943, 0.00026780499999999943, 0.0002677770000000003, 0.00026780499999999943, 0.00026780499999999943, 0.00026781900000000247, 0.0002677920000000028, 0.00026777799999999977, 0.0002678059999999989, 0.0002678059999999989, 0.0002678059999999989, 0.0002678060000000024, 0.0002678060000000024, 0.00026782000000000195, 0.0002677920000000028, 0.00026782000000000195, 0.0002678060000000024, 0.00026781899999999553]</msg>
<status status="PASS" starttime="20201030 18:27:48.216" endtime="20201030 18:27:48.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.211" endtime="20201030 18:27:48.218"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:48.222" endtime="20201030 18:27:48.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.221" endtime="20201030 18:27:48.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.219" endtime="20201030 18:27:48.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.856" endtime="20201030 18:27:48.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.856" endtime="20201030 18:27:48.243"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.251" endtime="20201030 18:27:48.273"></status>
</kw>
<msg timestamp="20201030 18:27:48.274" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.250" endtime="20201030 18:27:48.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.276" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.275" endtime="20201030 18:27:48.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.277" endtime="20201030 18:27:48.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.247" endtime="20201030 18:27:48.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.245" endtime="20201030 18:27:48.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.286" endtime="20201030 18:27:48.574"></status>
</kw>
<msg timestamp="20201030 18:27:48.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018669278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018952333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.285" endtime="20201030 18:27:48.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018669278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018952333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.578" endtime="20201030 18:27:48.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.586" endtime="20201030 18:27:48.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.282" endtime="20201030 18:27:48.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.281" endtime="20201030 18:27:48.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:48.592" level="INFO">${PHILIP_RES} = [{'diff': 0.00028305499999999734}, {'diff': 0.0002819169999999996}, {'diff': 0.00028188900000000044}, {'diff': 0.0002818750000000009}, {'diff': 0.00028190200000000054}, {'diff': 0.000281903}, {'diff':...</msg>
<status status="PASS" starttime="20201030 18:27:48.589" endtime="20201030 18:27:48.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:48.596" level="INFO">${RESULT} = {'diff': [0.00028305499999999734, 0.0002819169999999996, 0.00028188900000000044, 0.0002818750000000009, 0.00028190200000000054, 0.000281903, 0.000281903, 0.00028188800000000097, 0.00028188900000000044...</msg>
<status status="PASS" starttime="20201030 18:27:48.593" endtime="20201030 18:27:48.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.600" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:48.599" endtime="20201030 18:27:48.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.603" level="INFO">VALUE: [0.00028305499999999734, 0.0002819169999999996, 0.00028188900000000044, 0.0002818750000000009, 0.00028190200000000054, 0.000281903, 0.000281903, 0.00028188800000000097, 0.00028188900000000044, 0.00028188900000000044, 0.00028188800000000097, 0.0002818610000000013, 0.00028188900000000044, 0.0002819160000000001, 0.00028188900000000044, 0.0002819579999999988, 0.00028190200000000054, 0.0002819169999999996, 0.000281903, 0.0002819719999999984, 0.00028191700000000305, 0.000281903, 0.00028190200000000054, 0.0002819169999999996, 0.000281903, 0.00028188900000000044, 0.0002819169999999996, 0.0002819169999999996, 0.0002818199999999986, 0.0002819450000000022, 0.00028188900000000044, 0.00028183399999999817, 0.00028188900000000044, 0.00028188900000000044, 0.0002818750000000009, 0.000281903, 0.0002819579999999988, 0.000281903, 0.000281903, 0.00028193099999999915, 0.0002819299999999997, 0.0002819169999999996, 0.000281903, 0.000281903, 0.00028188900000000044, 0.000281903, 0.00028188900000000044, 0.0002818750000000009, 0.0002819169999999996, 0.000281903]</msg>
<status status="PASS" starttime="20201030 18:27:48.601" endtime="20201030 18:27:48.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.597" endtime="20201030 18:27:48.604"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:48.608" endtime="20201030 18:27:48.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.606" endtime="20201030 18:27:48.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.605" endtime="20201030 18:27:48.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.244" endtime="20201030 18:27:48.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.243" endtime="20201030 18:27:48.628"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.637" endtime="20201030 18:27:48.660"></status>
</kw>
<msg timestamp="20201030 18:27:48.661" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.635" endtime="20201030 18:27:48.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.663" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.662" endtime="20201030 18:27:48.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.664" endtime="20201030 18:27:48.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.633" endtime="20201030 18:27:48.667"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.631" endtime="20201030 18:27:48.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.673" endtime="20201030 18:27:48.958"></status>
</kw>
<msg timestamp="20201030 18:27:48.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019425042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0197225, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:48.672" endtime="20201030 18:27:48.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019425042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0197225, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:48.962" endtime="20201030 18:27:48.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.971" endtime="20201030 18:27:48.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.669" endtime="20201030 18:27:48.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.668" endtime="20201030 18:27:48.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:48.977" level="INFO">${PHILIP_RES} = [{'diff': 0.00029745800000000044}, {'diff': 0.0002963339999999988}, {'diff': 0.0002963329999999993}, {'diff': 0.0002963190000000032}, {'diff': 0.0002963339999999988}, {'diff': 0.0002963329999999993}, ...</msg>
<status status="PASS" starttime="20201030 18:27:48.974" endtime="20201030 18:27:48.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:48.981" level="INFO">${RESULT} = {'diff': [0.00029745800000000044, 0.0002963339999999988, 0.0002963329999999993, 0.0002963190000000032, 0.0002963339999999988, 0.0002963329999999993, 0.00029630599999999965, 0.00029626400000000094, 0.0...</msg>
<status status="PASS" starttime="20201030 18:27:48.978" endtime="20201030 18:27:48.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.985" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:48.984" endtime="20201030 18:27:48.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.988" level="INFO">VALUE: [0.00029745800000000044, 0.0002963339999999988, 0.0002963329999999993, 0.0002963190000000032, 0.0002963339999999988, 0.0002963329999999993, 0.00029630599999999965, 0.00029626400000000094, 0.0002963050000000002, 0.0002963199999999992, 0.0002963199999999992, 0.00029631899999999975, 0.0002963199999999992, 0.00029636099999999846, 0.00029631899999999975, 0.0002963199999999992, 0.0002963329999999993, 0.0002963200000000027, 0.0002963199999999992, 0.00029631899999999975, 0.00029633400000000226, 0.0002963050000000002, 0.0002963050000000002, 0.0002963200000000027, 0.00029631899999999975, 0.0002962920000000001, 0.0002963200000000027, 0.0002963050000000002, 0.00029636099999999846, 0.00029631899999999975, 0.0002963329999999993, 0.0002962920000000001, 0.00029627699999999757, 0.00029630599999999965, 0.0002963330000000028, 0.00029636100000000193, 0.00029630599999999965, 0.00029633299999999585, 0.0002963190000000032, 0.00029629200000000355, 0.00029633299999999585, 0.0002963060000000031, 0.00029636100000000193, 0.0002963189999999963, 0.0002963060000000031, 0.0002963330000000028, 0.0002962639999999975, 0.00029633400000000226, 0.00029630500000000365, 0.00029633299999999585]</msg>
<status status="PASS" starttime="20201030 18:27:48.986" endtime="20201030 18:27:48.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.982" endtime="20201030 18:27:48.990"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:48.993" endtime="20201030 18:27:49.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.992" endtime="20201030 18:27:49.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.991" endtime="20201030 18:27:49.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.629" endtime="20201030 18:27:49.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.629" endtime="20201030 18:27:49.014"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.023" endtime="20201030 18:27:49.047"></status>
</kw>
<msg timestamp="20201030 18:27:49.047" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.021" endtime="20201030 18:27:49.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.050" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.049" endtime="20201030 18:27:49.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.051" endtime="20201030 18:27:49.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.019" endtime="20201030 18:27:49.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.017" endtime="20201030 18:27:49.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.060" endtime="20201030 18:27:49.345"></status>
</kw>
<msg timestamp="20201030 18:27:49.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018771278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019083542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.058" endtime="20201030 18:27:49.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018771278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019083542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.349" endtime="20201030 18:27:49.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.357" endtime="20201030 18:27:49.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.056" endtime="20201030 18:27:49.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.054" endtime="20201030 18:27:49.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:49.364" level="INFO">${PHILIP_RES} = [{'diff': 0.0003122639999999996}, {'diff': 0.0003110700000000001}, {'diff': 0.00031109699999999976}, {'diff': 0.0003111110000000028}, {'diff': 0.0003111120000000023}, {'diff': 0.00031109699999999976},...</msg>
<status status="PASS" starttime="20201030 18:27:49.361" endtime="20201030 18:27:49.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:49.369" level="INFO">${RESULT} = {'diff': [0.0003122639999999996, 0.0003110700000000001, 0.00031109699999999976, 0.0003111110000000028, 0.0003111120000000023, 0.00031109699999999976, 0.00031111099999999933, 0.00031113899999999847, 0....</msg>
<status status="PASS" starttime="20201030 18:27:49.365" endtime="20201030 18:27:49.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.373" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:49.372" endtime="20201030 18:27:49.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.375" level="INFO">VALUE: [0.0003122639999999996, 0.0003110700000000001, 0.00031109699999999976, 0.0003111110000000028, 0.0003111120000000023, 0.00031109699999999976, 0.00031111099999999933, 0.00031113899999999847, 0.00031109699999999976, 0.0003111110000000028, 0.00031111099999999933, 0.00031119400000000075, 0.00031109699999999976, 0.0003111249999999989, 0.00031112500000000237, 0.00031109699999999976, 0.00031111099999999933, 0.0003111249999999989, 0.00031113900000000194, 0.0003111110000000028, 0.0003111110000000028, 0.00031111099999999933, 0.0003110700000000001, 0.0003111249999999989, 0.0003111110000000028, 0.00031113900000000194, 0.00031109699999999976, 0.00031111099999999933, 0.00031109699999999976, 0.0003111110000000028, 0.00031109799999999924, 0.00031115299999999804, 0.00031109699999999976, 0.0003110830000000002, 0.0003111249999999989, 0.00031109699999999976, 0.00031111099999999933, 0.00031111099999999933, 0.00031112500000000237, 0.0003110829999999967, 0.00031111099999999586, 0.00031112499999999543, 0.00031119400000000075, 0.0003111800000000012, 0.0003111110000000028, 0.0003111110000000028, 0.00031113900000000194, 0.0003111110000000028, 0.00031112500000000237, 0.00031112499999999543]</msg>
<status status="PASS" starttime="20201030 18:27:49.374" endtime="20201030 18:27:49.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.369" endtime="20201030 18:27:49.377"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:49.380" endtime="20201030 18:27:49.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.379" endtime="20201030 18:27:49.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.378" endtime="20201030 18:27:49.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.015" endtime="20201030 18:27:49.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.015" endtime="20201030 18:27:49.401"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.409" endtime="20201030 18:27:49.434"></status>
</kw>
<msg timestamp="20201030 18:27:49.434" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.408" endtime="20201030 18:27:49.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.437" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.435" endtime="20201030 18:27:49.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.438" endtime="20201030 18:27:49.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.405" endtime="20201030 18:27:49.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.403" endtime="20201030 18:27:49.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.447" endtime="20201030 18:27:49.734"></status>
</kw>
<msg timestamp="20201030 18:27:49.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018549486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018876847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.446" endtime="20201030 18:27:49.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018549486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018876847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.738" endtime="20201030 18:27:49.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.746" endtime="20201030 18:27:49.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.443" endtime="20201030 18:27:49.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.441" endtime="20201030 18:27:49.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:49.752" level="INFO">${PHILIP_RES} = [{'diff': 0.00032736099999999824}, {'diff': 0.0003261389999999996}, {'diff': 0.00032623700000000005}, {'diff': 0.00032625000000000015}, {'diff': 0.0003262360000000006}, {'diff': 0.00032625000000000015...</msg>
<status status="PASS" starttime="20201030 18:27:49.749" endtime="20201030 18:27:49.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:49.756" level="INFO">${RESULT} = {'diff': [0.00032736099999999824, 0.0003261389999999996, 0.00032623700000000005, 0.00032625000000000015, 0.0003262360000000006, 0.00032625000000000015, 0.0003262360000000006, 0.00032625000000000015, 0...</msg>
<status status="PASS" starttime="20201030 18:27:49.753" endtime="20201030 18:27:49.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.761" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:49.760" endtime="20201030 18:27:49.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.763" level="INFO">VALUE: [0.00032736099999999824, 0.0003261389999999996, 0.00032623700000000005, 0.00032625000000000015, 0.0003262360000000006, 0.00032625000000000015, 0.0003262360000000006, 0.00032625000000000015, 0.0003262360000000006, 0.0003262360000000006, 0.0003262639999999997, 0.0003262360000000006, 0.000326222000000001, 0.00032625000000000015, 0.0003262629999999968, 0.0003262359999999971, 0.0003262769999999998, 0.0003262360000000006, 0.0003262359999999971, 0.00032619400000000187, 0.000326222000000001, 0.0003262360000000006, 0.0003262360000000006, 0.0003262639999999997, 0.0003262360000000006, 0.0003262360000000006, 0.00032625000000000015, 0.0003262360000000006, 0.0003262359999999971, 0.0003262360000000006, 0.0003262360000000006, 0.0003262360000000006, 0.0003262360000000006, 0.0003262360000000006, 0.000326222999999997, 0.0003262360000000006, 0.00032623700000000005, 0.0003262360000000006, 0.00032619400000000187, 0.0003262360000000006, 0.0003262360000000006, 0.00032625000000000015, 0.0003262360000000006, 0.00032620800000000144, 0.000326222000000001, 0.0003262639999999997, 0.0003262360000000006, 0.000326222000000001, 0.0003262779999999993, 0.0003262360000000006]</msg>
<status status="PASS" starttime="20201030 18:27:49.762" endtime="20201030 18:27:49.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.757" endtime="20201030 18:27:49.764"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:49.768" endtime="20201030 18:27:49.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.767" endtime="20201030 18:27:49.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.765" endtime="20201030 18:27:49.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.402" endtime="20201030 18:27:49.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.401" endtime="20201030 18:27:49.789"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.797" endtime="20201030 18:27:49.824"></status>
</kw>
<msg timestamp="20201030 18:27:49.824" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.796" endtime="20201030 18:27:49.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.827" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.825" endtime="20201030 18:27:49.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.828" endtime="20201030 18:27:49.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.793" endtime="20201030 18:27:49.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.791" endtime="20201030 18:27:49.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.837" endtime="20201030 18:27:50.128"></status>
</kw>
<msg timestamp="20201030 18:27:50.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019625833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019968694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.835" endtime="20201030 18:27:50.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019625833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019968694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.134" endtime="20201030 18:27:50.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.145" endtime="20201030 18:27:50.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.833" endtime="20201030 18:27:50.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.831" endtime="20201030 18:27:50.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:50.155" level="INFO">${PHILIP_RES} = [{'diff': 0.00034286099999999986}, {'diff': 0.00034173599999999874}, {'diff': 0.00034172199999999917}, {'diff': 0.00034173599999999874}, {'diff': 0.00034173599999999874}, {'diff': 0.000341721999999999...</msg>
<status status="PASS" starttime="20201030 18:27:50.151" endtime="20201030 18:27:50.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:50.160" level="INFO">${RESULT} = {'diff': [0.00034286099999999986, 0.00034173599999999874, 0.00034172199999999917, 0.00034173599999999874, 0.00034173599999999874, 0.00034172199999999917, 0.0003417230000000021, 0.00034173599999999874,...</msg>
<status status="PASS" starttime="20201030 18:27:50.156" endtime="20201030 18:27:50.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.165" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:50.164" endtime="20201030 18:27:50.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.168" level="INFO">VALUE: [0.00034286099999999986, 0.00034173599999999874, 0.00034172199999999917, 0.00034173599999999874, 0.00034173599999999874, 0.00034172199999999917, 0.0003417230000000021, 0.00034173599999999874, 0.00034172199999999917, 0.00034170900000000254, 0.0003417360000000022, 0.00034172199999999917, 0.00034172199999999917, 0.00034170899999999907, 0.0003417500000000018, 0.00034173599999999874, 0.00034170899999999907, 0.00034172200000000263, 0.00034173599999999874, 0.0003417369999999982, 0.00034172200000000263, 0.0003417079999999996, 0.0003417499999999983, 0.00034173599999999874, 0.0003417500000000018, 0.00034173599999999874, 0.00034173599999999874, 0.00034172199999999917, 0.00034172200000000263, 0.00034173599999999874, 0.00034172199999999917, 0.0003417499999999983, 0.0003417360000000022, 0.0003417500000000018, 0.0003417360000000022, 0.0003416800000000039, 0.00034172299999999517, 0.00034170800000000306, 0.0003416940000000035, 0.00034172299999999517, 0.0003417500000000018, 0.0003417780000000009, 0.0003417219999999957, 0.0003417360000000022, 0.0003417219999999957, 0.00034172200000000263, 0.0003417360000000022, 0.0003417219999999957, 0.00034170800000000306, 0.0003417370000000017]</msg>
<status status="PASS" starttime="20201030 18:27:50.166" endtime="20201030 18:27:50.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.161" endtime="20201030 18:27:50.171"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:50.175" endtime="20201030 18:27:50.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.173" endtime="20201030 18:27:50.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.172" endtime="20201030 18:27:50.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.790" endtime="20201030 18:27:50.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.789" endtime="20201030 18:27:50.196"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.206" endtime="20201030 18:27:50.234"></status>
</kw>
<msg timestamp="20201030 18:27:50.234" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.205" endtime="20201030 18:27:50.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.237" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.235" endtime="20201030 18:27:50.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.238" endtime="20201030 18:27:50.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.202" endtime="20201030 18:27:50.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.199" endtime="20201030 18:27:50.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.247" endtime="20201030 18:27:50.533"></status>
</kw>
<msg timestamp="20201030 18:27:50.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021296208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021654917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.245" endtime="20201030 18:27:50.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021296208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021654917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.537" endtime="20201030 18:27:50.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.545" endtime="20201030 18:27:50.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.243" endtime="20201030 18:27:50.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.241" endtime="20201030 18:27:50.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:50.552" level="INFO">${PHILIP_RES} = [{'diff': 0.0003587089999999987}, {'diff': 0.000357569000000002}, {'diff': 0.00035756899999999855}, {'diff': 0.0003575969999999977}, {'diff': 0.00035756899999999855}, {'diff': 0.000357569000000002}, {...</msg>
<status status="PASS" starttime="20201030 18:27:50.549" endtime="20201030 18:27:50.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:50.557" level="INFO">${RESULT} = {'diff': [0.0003587089999999987, 0.000357569000000002, 0.00035756899999999855, 0.0003575969999999977, 0.00035756899999999855, 0.000357569000000002, 0.000357569000000002, 0.00035756899999999855, 0.0003...</msg>
<status status="PASS" starttime="20201030 18:27:50.553" endtime="20201030 18:27:50.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.561" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:50.560" endtime="20201030 18:27:50.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.563" level="INFO">VALUE: [0.0003587089999999987, 0.000357569000000002, 0.00035756899999999855, 0.0003575969999999977, 0.00035756899999999855, 0.000357569000000002, 0.000357569000000002, 0.00035756899999999855, 0.0003575000000000002, 0.00035751399999999975, 0.0003575830000000016, 0.00035755600000000193, 0.00035755599999999846, 0.00035755599999999846, 0.0003575419999999989, 0.0003575279999999993, 0.0003575700000000015, 0.00035755599999999846, 0.00035755599999999846, 0.0003575419999999989, 0.00035755600000000193, 0.00035754200000000236, 0.00035754200000000236, 0.00035756999999999803, 0.00035755599999999846, 0.0003575700000000015, 0.00035765299999999944, 0.00035756999999999456, 0.0003575700000000015, 0.0003575969999999942, 0.0003575700000000015, 0.0003575700000000015, 0.00035759800000000064, 0.00035754200000000236, 0.00035754200000000236, 0.00035758400000000107, 0.00035758400000000107, 0.00035756999999999456, 0.00035759800000000064, 0.0003574999999999967, 0.00035755600000000193, 0.00035754200000000236, 0.00035756999999999456, 0.00035755600000000193, 0.00035755600000000193, 0.0003575700000000015, 0.0003575280000000028, 0.000357555999999995, 0.00035755600000000193, 0.00035755600000000193]</msg>
<status status="PASS" starttime="20201030 18:27:50.562" endtime="20201030 18:27:50.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.558" endtime="20201030 18:27:50.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:50.568" endtime="20201030 18:27:50.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.567" endtime="20201030 18:27:50.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.566" endtime="20201030 18:27:50.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.197" endtime="20201030 18:27:50.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.197" endtime="20201030 18:27:50.589"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.597" endtime="20201030 18:27:50.625"></status>
</kw>
<msg timestamp="20201030 18:27:50.625" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.596" endtime="20201030 18:27:50.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.628" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.626" endtime="20201030 18:27:50.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.629" endtime="20201030 18:27:50.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.593" endtime="20201030 18:27:50.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.591" endtime="20201030 18:27:50.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.638" endtime="20201030 18:27:50.935"></status>
</kw>
<msg timestamp="20201030 18:27:50.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018798792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019173694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.636" endtime="20201030 18:27:50.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018798792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019173694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.945" endtime="20201030 18:27:50.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.963" endtime="20201030 18:27:50.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.634" endtime="20201030 18:27:50.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.632" endtime="20201030 18:27:50.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:50.971" level="INFO">${PHILIP_RES} = [{'diff': 0.0003749019999999999}, {'diff': 0.00037377699999999875}, {'diff': 0.0003737499999999991}, {'diff': 0.0003737640000000021}, {'diff': 0.0003737499999999991}, {'diff': 0.0003738330000000005}, ...</msg>
<status status="PASS" starttime="20201030 18:27:50.968" endtime="20201030 18:27:50.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:50.975" level="INFO">${RESULT} = {'diff': [0.0003749019999999999, 0.00037377699999999875, 0.0003737499999999991, 0.0003737640000000021, 0.0003737499999999991, 0.0003738330000000005, 0.0003738200000000004, 0.0003737780000000017, 0.000...</msg>
<status status="PASS" starttime="20201030 18:27:50.972" endtime="20201030 18:27:50.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.979" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:50.978" endtime="20201030 18:27:50.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.982" level="INFO">VALUE: [0.0003749019999999999, 0.00037377699999999875, 0.0003737499999999991, 0.0003737640000000021, 0.0003737499999999991, 0.0003738330000000005, 0.0003738200000000004, 0.0003737780000000017, 0.0003737640000000021, 0.00037376399999999865, 0.00037376399999999865, 0.00037375000000000255, 0.0003737640000000021, 0.0003737640000000021, 0.00037376399999999865, 0.0003737909999999983, 0.00037381900000000093, 0.000373736000000003, 0.00037376399999999865, 0.00037376399999999865, 0.0003737359999999995, 0.0003737780000000017, 0.0003737640000000021, 0.00037381899999999746, 0.00037380599999999736, 0.0003737640000000021, 0.0003737780000000017, 0.00037381900000000093, 0.0003737359999999995, 0.0003737499999999991, 0.0003737499999999991, 0.0003737499999999991, 0.00037383400000000344, 0.00037376399999999865, 0.000373750000000006, 0.0003737359999999995, 0.0003737499999999991, 0.0003737499999999991, 0.0003737629999999992, 0.00037372199999999994, 0.0003737779999999982, 0.0003737499999999991, 0.00037376399999999865, 0.00037376399999999865, 0.0003737640000000056, 0.00037381899999999746, 0.00037376399999999865, 0.00037376399999999865, 0.00037377699999999875, 0.00037379100000000526]</msg>
<status status="PASS" starttime="20201030 18:27:50.981" endtime="20201030 18:27:50.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.976" endtime="20201030 18:27:50.983"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:50.987" endtime="20201030 18:27:51.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.985" endtime="20201030 18:27:51.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.984" endtime="20201030 18:27:51.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.590" endtime="20201030 18:27:51.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.589" endtime="20201030 18:27:51.008"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.016" endtime="20201030 18:27:51.045"></status>
</kw>
<msg timestamp="20201030 18:27:51.046" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.015" endtime="20201030 18:27:51.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.049" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.047" endtime="20201030 18:27:51.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.050" endtime="20201030 18:27:51.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.012" endtime="20201030 18:27:51.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.010" endtime="20201030 18:27:51.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.059" endtime="20201030 18:27:51.345"></status>
</kw>
<msg timestamp="20201030 18:27:51.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019558722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019950194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.058" endtime="20201030 18:27:51.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019558722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019950194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.349" endtime="20201030 18:27:51.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.357" endtime="20201030 18:27:51.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.055" endtime="20201030 18:27:51.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.053" endtime="20201030 18:27:51.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:51.364" level="INFO">${PHILIP_RES} = [{'diff': 0.00039147200000000035}, {'diff': 0.000390306}, {'diff': 0.00039027700000000137}, {'diff': 0.0003902500000000017}, {'diff': 0.0003902640000000013}, {'diff': 0.00039031999999999956}, {'diff':...</msg>
<status status="PASS" starttime="20201030 18:27:51.361" endtime="20201030 18:27:51.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:51.368" level="INFO">${RESULT} = {'diff': [0.00039147200000000035, 0.000390306, 0.00039027700000000137, 0.0003902500000000017, 0.0003902640000000013, 0.00039031999999999956, 0.000390306, 0.00039029100000000094, 0.0003902920000000004,...</msg>
<status status="PASS" starttime="20201030 18:27:51.365" endtime="20201030 18:27:51.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.372" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:51.371" endtime="20201030 18:27:51.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.374" level="INFO">VALUE: [0.00039147200000000035, 0.000390306, 0.00039027700000000137, 0.0003902500000000017, 0.0003902640000000013, 0.00039031999999999956, 0.000390306, 0.00039029100000000094, 0.0003902920000000004, 0.0003902920000000004, 0.0003902920000000004, 0.0003902920000000004, 0.0003902769999999979, 0.0003903339999999991, 0.000390306, 0.0003902920000000004, 0.0003903050000000005, 0.00039029100000000094, 0.0003902920000000004, 0.0003902920000000004, 0.0003902920000000004, 0.0003903050000000005, 0.00039029100000000094, 0.000390306, 0.000390306, 0.0003902920000000004, 0.00039029100000000094, 0.0003902779999999974, 0.000390306, 0.0003902920000000004, 0.0003903050000000005, 0.000390306, 0.0003903190000000001, 0.00039031999999999956, 0.000390306, 0.0003902920000000004, 0.00039027700000000137, 0.0003902920000000004, 0.000390306, 0.0003902920000000004, 0.0003903050000000005, 0.00039029100000000094, 0.000390306, 0.000390306, 0.000390306, 0.0003903469999999992, 0.00039029100000000094, 0.00039031999999999956, 0.00039027800000000085, 0.000390306]</msg>
<status status="PASS" starttime="20201030 18:27:51.373" endtime="20201030 18:27:51.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.369" endtime="20201030 18:27:51.376"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:51.380" endtime="20201030 18:27:51.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.379" endtime="20201030 18:27:51.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.377" endtime="20201030 18:27:51.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.009" endtime="20201030 18:27:51.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.008" endtime="20201030 18:27:51.401"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.409" endtime="20201030 18:27:51.439"></status>
</kw>
<msg timestamp="20201030 18:27:51.439" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.408" endtime="20201030 18:27:51.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.442" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.440" endtime="20201030 18:27:51.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.443" endtime="20201030 18:27:51.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.405" endtime="20201030 18:27:51.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.403" endtime="20201030 18:27:51.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.452" endtime="20201030 18:27:51.749"></status>
</kw>
<msg timestamp="20201030 18:27:51.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018894972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019303319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.450" endtime="20201030 18:27:51.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018894972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019303319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.758" endtime="20201030 18:27:51.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.776" endtime="20201030 18:27:51.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.448" endtime="20201030 18:27:51.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.446" endtime="20201030 18:27:51.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:51.783" level="INFO">${PHILIP_RES} = [{'diff': 0.0004083469999999999}, {'diff': 0.0004071949999999991}, {'diff': 0.0004072359999999983}, {'diff': 0.0004072499999999979}, {'diff': 0.0004072079999999992}, {'diff': 0.0004071939999999996}, {...</msg>
<status status="PASS" starttime="20201030 18:27:51.780" endtime="20201030 18:27:51.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:51.790" level="INFO">${RESULT} = {'diff': [0.0004083469999999999, 0.0004071949999999991, 0.0004072359999999983, 0.0004072499999999979, 0.0004072079999999992, 0.0004071939999999996, 0.00040722199999999875, 0.0004072079999999992, 0.000...</msg>
<status status="PASS" starttime="20201030 18:27:51.784" endtime="20201030 18:27:51.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.794" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:51.793" endtime="20201030 18:27:51.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.797" level="INFO">VALUE: [0.0004083469999999999, 0.0004071949999999991, 0.0004072359999999983, 0.0004072499999999979, 0.0004072079999999992, 0.0004071939999999996, 0.00040722199999999875, 0.0004072079999999992, 0.0004072499999999979, 0.0004072090000000021, 0.0004072230000000017, 0.0004072220000000022, 0.00040726399999999746, 0.0004071939999999996, 0.00040722199999999875, 0.00040726399999999746, 0.0004071939999999996, 0.0004071939999999996, 0.00040725000000000136, 0.0004072090000000021, 0.00040719500000000255, 0.0004071809999999995, 0.00040725000000000136, 0.00040720800000000265, 0.00040718000000000004, 0.0004072079999999992, 0.0004072079999999992, 0.0004072090000000021, 0.0004071809999999995, 0.0004071949999999991, 0.0004071949999999991, 0.0004072079999999992, 0.00040716600000000047, 0.0004072499999999979, 0.0004071939999999996, 0.0004072079999999992, 0.0004072079999999992, 0.0004071809999999995, 0.0004071809999999995, 0.0004071530000000004, 0.0004071939999999996, 0.0004072499999999979, 0.0004072079999999992, 0.0004072079999999992, 0.0004071939999999996, 0.0004072499999999979, 0.00040720899999999866, 0.0004072229999999982, 0.00040720899999999866, 0.00040722199999999875]</msg>
<status status="PASS" starttime="20201030 18:27:51.795" endtime="20201030 18:27:51.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.791" endtime="20201030 18:27:51.802"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:51.806" endtime="20201030 18:27:51.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.804" endtime="20201030 18:27:51.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.803" endtime="20201030 18:27:51.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.402" endtime="20201030 18:27:51.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.401" endtime="20201030 18:27:51.827"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.835" endtime="20201030 18:27:51.865"></status>
</kw>
<msg timestamp="20201030 18:27:51.866" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.833" endtime="20201030 18:27:51.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.868" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.867" endtime="20201030 18:27:51.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.869" endtime="20201030 18:27:51.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.831" endtime="20201030 18:27:51.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.829" endtime="20201030 18:27:51.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.878" endtime="20201030 18:27:52.165"></status>
</kw>
<msg timestamp="20201030 18:27:52.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018548889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018974486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.877" endtime="20201030 18:27:52.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018548889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018974486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.169" endtime="20201030 18:27:52.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.177" endtime="20201030 18:27:52.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.874" endtime="20201030 18:27:52.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.872" endtime="20201030 18:27:52.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:52.184" level="INFO">${PHILIP_RES} = [{'diff': 0.0004255969999999998}, {'diff': 0.00042445900000000203}, {'diff': 0.00042441699999999985}, {'diff': 0.0004244439999999995}, {'diff': 0.0004243890000000007}, {'diff': 0.0004244439999999995},...</msg>
<status status="PASS" starttime="20201030 18:27:52.181" endtime="20201030 18:27:52.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:52.188" level="INFO">${RESULT} = {'diff': [0.0004255969999999998, 0.00042445900000000203, 0.00042441699999999985, 0.0004244439999999995, 0.0004243890000000007, 0.0004244439999999995, 0.00042442999999999995, 0.00042444500000000246, 0....</msg>
<status status="PASS" starttime="20201030 18:27:52.185" endtime="20201030 18:27:52.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.192" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:52.191" endtime="20201030 18:27:52.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.194" level="INFO">VALUE: [0.0004255969999999998, 0.00042445900000000203, 0.00042441699999999985, 0.0004244439999999995, 0.0004243890000000007, 0.0004244439999999995, 0.00042442999999999995, 0.00042444500000000246, 0.0004244439999999995, 0.0004244160000000004, 0.00042437500000000114, 0.00042437500000000114, 0.0004244159999999969, 0.00042447199999999866, 0.0004244720000000021, 0.00042442999999999995, 0.000424444999999999, 0.000424444000000003, 0.0004244439999999995, 0.000424444999999999, 0.00042444500000000246, 0.0004244439999999995, 0.00042444500000000246, 0.0004244030000000003, 0.0004244030000000003, 0.00042444500000000246, 0.0004244309999999994, 0.0004244160000000004, 0.0004244579999999956, 0.00042445900000000203, 0.000424444000000003, 0.0004244720000000021, 0.00042447299999999466, 0.0004244159999999969, 0.0004244310000000029, 0.0004244860000000017, 0.000424444000000003, 0.0004244299999999965, 0.00042443099999999595, 0.00042438899999999724, 0.000424444000000003, 0.0004244170000000033, 0.00042444399999999605, 0.0004244579999999956, 0.0004244730000000016, 0.0004244300000000034, 0.0004243880000000047, 0.00042444500000000246, 0.00042443099999999595, 0.00042438899999999724]</msg>
<status status="PASS" starttime="20201030 18:27:52.193" endtime="20201030 18:27:52.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.189" endtime="20201030 18:27:52.196"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:52.200" endtime="20201030 18:27:52.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.198" endtime="20201030 18:27:52.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.197" endtime="20201030 18:27:52.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.828" endtime="20201030 18:27:52.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.827" endtime="20201030 18:27:52.220"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.229" endtime="20201030 18:27:52.261"></status>
</kw>
<msg timestamp="20201030 18:27:52.261" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.227" endtime="20201030 18:27:52.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.264" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.262" endtime="20201030 18:27:52.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.265" endtime="20201030 18:27:52.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.224" endtime="20201030 18:27:52.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.223" endtime="20201030 18:27:52.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.274" endtime="20201030 18:27:52.573"></status>
</kw>
<msg timestamp="20201030 18:27:52.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019390931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019834167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.272" endtime="20201030 18:27:52.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019390931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019834167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.582" endtime="20201030 18:27:52.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.593" endtime="20201030 18:27:52.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.270" endtime="20201030 18:27:52.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.268" endtime="20201030 18:27:52.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:52.599" level="INFO">${PHILIP_RES} = [{'diff': 0.00044323599999999963}, {'diff': 0.0004420270000000011}, {'diff': 0.00044204200000000013}, {'diff': 0.00044204200000000013}, {'diff': 0.00044202800000000056}, {'diff': 0.0004420550000000002...</msg>
<status status="PASS" starttime="20201030 18:27:52.596" endtime="20201030 18:27:52.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:52.603" level="INFO">${RESULT} = {'diff': [0.00044323599999999963, 0.0004420270000000011, 0.00044204200000000013, 0.00044204200000000013, 0.00044202800000000056, 0.0004420550000000002, 0.00044204100000000066, 0.0004420979999999984, 0...</msg>
<status status="PASS" starttime="20201030 18:27:52.600" endtime="20201030 18:27:52.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.607" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:52.606" endtime="20201030 18:27:52.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.610" level="INFO">VALUE: [0.00044323599999999963, 0.0004420270000000011, 0.00044204200000000013, 0.00044204200000000013, 0.00044202800000000056, 0.0004420550000000002, 0.00044204100000000066, 0.0004420979999999984, 0.0004420139999999975, 0.00044202800000000056, 0.0004420269999999976, 0.0004420689999999998, 0.0004420559999999997, 0.00044204200000000013, 0.00044204200000000013, 0.00044204100000000066, 0.0004420550000000002, 0.0004420559999999997, 0.00044206999999999927, 0.00044204200000000013, 0.0004420550000000002, 0.0004420279999999971, 0.00044204200000000013, 0.00044206999999999927, 0.0004420689999999998, 0.00044204100000000066, 0.0004420550000000037, 0.0004420420000000036, 0.00044204199999999666, 0.00044204199999999666, 0.00044205499999999676, 0.0004420550000000037, 0.0004420420000000036, 0.0004420420000000036, 0.0004420279999999971, 0.0004420409999999972, 0.0004420689999999963, 0.0004420420000000036, 0.00044205600000000317, 0.00044204199999999666, 0.0004420689999999963, 0.0004420689999999963, 0.0004420980000000019, 0.00044202800000000403, 0.0004420420000000036, 0.00044205499999999676, 0.0004420279999999971, 0.00044205600000000317, 0.00044205600000000317, 0.0004420410000000041]</msg>
<status status="PASS" starttime="20201030 18:27:52.608" endtime="20201030 18:27:52.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.604" endtime="20201030 18:27:52.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:52.616" endtime="20201030 18:27:52.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.614" endtime="20201030 18:27:52.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.613" endtime="20201030 18:27:52.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.221" endtime="20201030 18:27:52.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.221" endtime="20201030 18:27:52.636"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.645" endtime="20201030 18:27:52.677"></status>
</kw>
<msg timestamp="20201030 18:27:52.677" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.643" endtime="20201030 18:27:52.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.680" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.678" endtime="20201030 18:27:52.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.681" endtime="20201030 18:27:52.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.640" endtime="20201030 18:27:52.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.639" endtime="20201030 18:27:52.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.690" endtime="20201030 18:27:52.975"></status>
</kw>
<msg timestamp="20201030 18:27:52.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018467653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018928847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.688" endtime="20201030 18:27:52.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018467653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018928847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.979" endtime="20201030 18:27:52.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.987" endtime="20201030 18:27:52.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.686" endtime="20201030 18:27:52.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.684" endtime="20201030 18:27:52.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:52.993" level="INFO">${PHILIP_RES} = [{'diff': 0.0004611939999999981}, {'diff': 0.0004599999999999986}, {'diff': 0.0004599440000000003}, {'diff': 0.0004599999999999986}, {'diff': 0.00045997199999999946}, {'diff': 0.0004599860000000025}, ...</msg>
<status status="PASS" starttime="20201030 18:27:52.990" endtime="20201030 18:27:52.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:52.998" level="INFO">${RESULT} = {'diff': [0.0004611939999999981, 0.0004599999999999986, 0.0004599440000000003, 0.0004599999999999986, 0.00045997199999999946, 0.0004599860000000025, 0.0004600410000000013, 0.00046001400000000164, 0.00...</msg>
<status status="PASS" starttime="20201030 18:27:52.994" endtime="20201030 18:27:52.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.003" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:53.002" endtime="20201030 18:27:53.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.005" level="INFO">VALUE: [0.0004611939999999981, 0.0004599999999999986, 0.0004599440000000003, 0.0004599999999999986, 0.00045997199999999946, 0.0004599860000000025, 0.0004600410000000013, 0.00046001400000000164, 0.00045998599999999903, 0.0004599860000000025, 0.00046002799999999774, 0.0004599860000000025, 0.00045998599999999903, 0.00045998599999999903, 0.00045997199999999946, 0.0004599999999999986, 0.00045998599999999903, 0.0004600699999999999, 0.00045997199999999946, 0.00045998599999999903, 0.0004599860000000025, 0.0004599999999999986, 0.0004599860000000025, 0.00045998599999999903, 0.00045998599999999903, 0.0004599999999999986, 0.0004599730000000024, 0.0004600000000000021, 0.000459971999999996, 0.0004599860000000025, 0.00045991700000000413, 0.00045998599999999557, 0.00045994399999999686, 0.0004600280000000012, 0.00045998599999999557, 0.00045998599999999557, 0.0004600000000000021, 0.0004600000000000021, 0.00045999999999999514, 0.00045998599999999557, 0.0004599860000000025, 0.0004599860000000025, 0.00045998599999999557, 0.00046001400000000164, 0.0004600000000000021, 0.0004600550000000009, 0.0004599589999999959, 0.00045997200000000293, 0.00045997200000000293, 0.00045999999999999514]</msg>
<status status="PASS" starttime="20201030 18:27:53.004" endtime="20201030 18:27:53.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.999" endtime="20201030 18:27:53.007"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:53.010" endtime="20201030 18:27:53.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.009" endtime="20201030 18:27:53.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.007" endtime="20201030 18:27:53.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.637" endtime="20201030 18:27:53.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.637" endtime="20201030 18:27:53.031"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.039" endtime="20201030 18:27:53.071"></status>
</kw>
<msg timestamp="20201030 18:27:53.072" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.038" endtime="20201030 18:27:53.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.074" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.073" endtime="20201030 18:27:53.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.075" endtime="20201030 18:27:53.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.035" endtime="20201030 18:27:53.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.033" endtime="20201030 18:27:53.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.085" endtime="20201030 18:27:53.372"></status>
</kw>
<msg timestamp="20201030 18:27:53.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018584625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019064056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.083" endtime="20201030 18:27:53.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018584625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019064056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.376" endtime="20201030 18:27:53.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.384" endtime="20201030 18:27:53.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.080" endtime="20201030 18:27:53.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.079" endtime="20201030 18:27:53.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:53.390" level="INFO">${PHILIP_RES} = [{'diff': 0.0004794309999999989}, {'diff': 0.0004783050000000018}, {'diff': 0.0004782919999999982}, {'diff': 0.00047829099999999874}, {'diff': 0.0004782919999999982}, {'diff': 0.00047827799999999865},...</msg>
<status status="PASS" starttime="20201030 18:27:53.387" endtime="20201030 18:27:53.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:53.394" level="INFO">${RESULT} = {'diff': [0.0004794309999999989, 0.0004783050000000018, 0.0004782919999999982, 0.00047829099999999874, 0.0004782919999999982, 0.00047827799999999865, 0.0004783330000000009, 0.0004782920000000017, 0.00...</msg>
<status status="PASS" starttime="20201030 18:27:53.391" endtime="20201030 18:27:53.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.399" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:53.398" endtime="20201030 18:27:53.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.401" level="INFO">VALUE: [0.0004794309999999989, 0.0004783050000000018, 0.0004782919999999982, 0.00047829099999999874, 0.0004782919999999982, 0.00047827799999999865, 0.0004783330000000009, 0.0004782920000000017, 0.0004782910000000022, 0.0004782920000000017, 0.0004783049999999983, 0.0004782919999999982, 0.0004783189999999979, 0.00047830600000000126, 0.00047830600000000126, 0.00047831900000000135, 0.00047830600000000126, 0.0004782499999999995, 0.0004782919999999982, 0.0004783049999999983, 0.00047830600000000126, 0.00047831900000000135, 0.0004782920000000017, 0.00047834799999999997, 0.0004783050000000018, 0.0004782919999999982, 0.0004783049999999983, 0.0004782919999999982, 0.0004782919999999982, 0.0004783059999999978, 0.00047827799999999865, 0.0004783049999999983, 0.00047823599999999994, 0.00047830500000000525, 0.00047829200000000516, 0.0004782769999999992, 0.00047829200000000516, 0.0004782499999999995, 0.0004783059999999978, 0.0004782919999999982, 0.00047827799999999865, 0.00047831999999999736, 0.0004783189999999979, 0.000478346999999997, 0.00047829099999999874, 0.0004783330000000044, 0.0004782919999999982, 0.00047830500000000525, 0.0004783200000000043, 0.00047830500000000525]</msg>
<status status="PASS" starttime="20201030 18:27:53.400" endtime="20201030 18:27:53.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.395" endtime="20201030 18:27:53.403"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:53.406" endtime="20201030 18:27:53.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.405" endtime="20201030 18:27:53.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.404" endtime="20201030 18:27:53.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.032" endtime="20201030 18:27:53.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.031" endtime="20201030 18:27:53.427"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.435" endtime="20201030 18:27:53.471"></status>
</kw>
<msg timestamp="20201030 18:27:53.471" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.434" endtime="20201030 18:27:53.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.473" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.472" endtime="20201030 18:27:53.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.475" endtime="20201030 18:27:53.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.431" endtime="20201030 18:27:53.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.429" endtime="20201030 18:27:53.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.483" endtime="20201030 18:27:53.769"></status>
</kw>
<msg timestamp="20201030 18:27:53.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019428319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019926458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.482" endtime="20201030 18:27:53.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019428319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019926458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.774" endtime="20201030 18:27:53.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.782" endtime="20201030 18:27:53.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.479" endtime="20201030 18:27:53.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.478" endtime="20201030 18:27:53.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:53.789" level="INFO">${PHILIP_RES} = [{'diff': 0.0004981390000000016}, {'diff': 0.0004969590000000017}, {'diff': 0.0004969439999999992}, {'diff': 0.0004970000000000009}, {'diff': 0.0004969580000000022}, {'diff': 0.0004969439999999992}, {...</msg>
<status status="PASS" starttime="20201030 18:27:53.786" endtime="20201030 18:27:53.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:53.793" level="INFO">${RESULT} = {'diff': [0.0004981390000000016, 0.0004969590000000017, 0.0004969439999999992, 0.0004970000000000009, 0.0004969580000000022, 0.0004969439999999992, 0.0004969309999999991, 0.0004969300000000031, 0.0004...</msg>
<status status="PASS" starttime="20201030 18:27:53.790" endtime="20201030 18:27:53.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.797" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:53.796" endtime="20201030 18:27:53.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.799" level="INFO">VALUE: [0.0004981390000000016, 0.0004969590000000017, 0.0004969439999999992, 0.0004970000000000009, 0.0004969580000000022, 0.0004969439999999992, 0.0004969309999999991, 0.0004969300000000031, 0.0004969309999999991, 0.0004969309999999991, 0.0004969299999999996, 0.0004969589999999982, 0.0004969439999999992, 0.0004969309999999991, 0.0004969579999999987, 0.0004969440000000026, 0.0004969449999999986, 0.0004969439999999992, 0.0004969439999999992, 0.0004969449999999986, 0.000496916, 0.0004969449999999986, 0.0004969720000000018, 0.000496916, 0.0004969449999999986, 0.0004969439999999992, 0.0004969580000000057, 0.0004969449999999986, 0.0004969579999999987, 0.0004969309999999991, 0.0004969299999999996, 0.0004969579999999987, 0.0004969450000000056, 0.0004969299999999996, 0.0004969729999999978, 0.0004969580000000057, 0.0004969299999999996, 0.0004969169999999995, 0.0004968880000000009, 0.0004969439999999992, 0.0004969169999999995, 0.0004969299999999996, 0.0004969590000000051, 0.0004969299999999996, 0.0004969299999999996, 0.0004969450000000056, 0.0004969439999999992, 0.0004969169999999995, 0.0004969580000000057, 0.0004969439999999992]</msg>
<status status="PASS" starttime="20201030 18:27:53.798" endtime="20201030 18:27:53.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.794" endtime="20201030 18:27:53.802"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:53.805" endtime="20201030 18:27:53.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.804" endtime="20201030 18:27:53.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.803" endtime="20201030 18:27:53.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.428" endtime="20201030 18:27:53.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.427" endtime="20201030 18:27:53.826"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.835" endtime="20201030 18:27:53.870"></status>
</kw>
<msg timestamp="20201030 18:27:53.871" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.833" endtime="20201030 18:27:53.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.875" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.872" endtime="20201030 18:27:53.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.876" endtime="20201030 18:27:53.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.830" endtime="20201030 18:27:53.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.829" endtime="20201030 18:27:53.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.887" endtime="20201030 18:27:54.193"></status>
</kw>
<msg timestamp="20201030 18:27:54.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018849417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019366514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.885" endtime="20201030 18:27:54.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018849417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019366514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.197" endtime="20201030 18:27:54.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.206" endtime="20201030 18:27:54.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.882" endtime="20201030 18:27:54.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.880" endtime="20201030 18:27:54.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:54.212" level="INFO">${PHILIP_RES} = [{'diff': 0.0005170970000000011}, {'diff': 0.0005159580000000004}, {'diff': 0.0005159589999999999}, {'diff': 0.000515986999999999}, {'diff': 0.000515972}, {'diff': 0.0005159439999999973}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 18:27:54.209" endtime="20201030 18:27:54.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:54.217" level="INFO">${RESULT} = {'diff': [0.0005170970000000011, 0.0005159580000000004, 0.0005159589999999999, 0.000515986999999999, 0.000515972, 0.0005159439999999973, 0.0005159440000000008, 0.0005159999999999991, 0.000515958000000...</msg>
<status status="PASS" starttime="20201030 18:27:54.213" endtime="20201030 18:27:54.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.222" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:54.221" endtime="20201030 18:27:54.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.224" level="INFO">VALUE: [0.0005170970000000011, 0.0005159580000000004, 0.0005159589999999999, 0.000515986999999999, 0.000515972, 0.0005159439999999973, 0.0005159440000000008, 0.0005159999999999991, 0.0005159580000000004, 0.0005159450000000003, 0.000515972, 0.0005159439999999973, 0.0005159440000000008, 0.0005159579999999969, 0.0005159589999999999, 0.0005159169999999977, 0.0005159580000000004, 0.0005159439999999973, 0.000515972, 0.0005159439999999973, 0.0005159729999999994, 0.0005159589999999999, 0.0005159580000000004, 0.0005159720000000034, 0.0005159579999999969, 0.0005159579999999969, 0.0005159169999999977, 0.0005160280000000017, 0.0005159579999999969, 0.0005159579999999969, 0.0005159720000000034, 0.0005159720000000034, 0.0005159449999999968, 0.0005159719999999965, 0.0005160280000000017, 0.0005159580000000039, 0.0005159719999999965, 0.000515972999999996, 0.0005159590000000033, 0.0005159439999999973, 0.0005159579999999969, 0.0005159719999999965, 0.0005159590000000033, 0.0005159730000000029, 0.0005159589999999964, 0.0005159580000000039, 0.0005159580000000039, 0.0005159720000000034, 0.0005159579999999969, 0.0005159589999999964]</msg>
<status status="PASS" starttime="20201030 18:27:54.223" endtime="20201030 18:27:54.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.218" endtime="20201030 18:27:54.226"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:54.230" endtime="20201030 18:27:54.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.228" endtime="20201030 18:27:54.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.227" endtime="20201030 18:27:54.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.827" endtime="20201030 18:27:54.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.827" endtime="20201030 18:27:54.250"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.259" endtime="20201030 18:27:54.296"></status>
</kw>
<msg timestamp="20201030 18:27:54.296" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.258" endtime="20201030 18:27:54.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.299" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.297" endtime="20201030 18:27:54.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.300" endtime="20201030 18:27:54.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.255" endtime="20201030 18:27:54.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.253" endtime="20201030 18:27:54.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.310" endtime="20201030 18:27:54.597"></status>
</kw>
<msg timestamp="20201030 18:27:54.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019376069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019912556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.308" endtime="20201030 18:27:54.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019376069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019912556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.601" endtime="20201030 18:27:54.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.609" endtime="20201030 18:27:54.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.305" endtime="20201030 18:27:54.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.303" endtime="20201030 18:27:54.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:54.616" level="INFO">${PHILIP_RES} = [{'diff': 0.0005364870000000022}, {'diff': 0.0005353049999999998}, {'diff': 0.000535347000000002}, {'diff': 0.000535347000000002}, {'diff': 0.0005353049999999998}, {'diff': 0.0005353059999999993}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:54.613" endtime="20201030 18:27:54.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:54.621" level="INFO">${RESULT} = {'diff': [0.0005364870000000022, 0.0005353049999999998, 0.000535347000000002, 0.000535347000000002, 0.0005353049999999998, 0.0005353059999999993, 0.0005353049999999998, 0.0005353059999999993, 0.000535...</msg>
<status status="PASS" starttime="20201030 18:27:54.617" endtime="20201030 18:27:54.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.625" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:54.624" endtime="20201030 18:27:54.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.628" level="INFO">VALUE: [0.0005364870000000022, 0.0005353049999999998, 0.000535347000000002, 0.000535347000000002, 0.0005353049999999998, 0.0005353059999999993, 0.0005353049999999998, 0.0005353059999999993, 0.0005352780000000001, 0.0005353190000000028, 0.0005352919999999997, 0.0005353049999999998, 0.0005353049999999998, 0.0005352780000000001, 0.0005353189999999994, 0.0005353049999999998, 0.0005353340000000019, 0.0005353189999999994, 0.0005353059999999993, 0.0005353059999999993, 0.0005352910000000037, 0.0005353059999999993, 0.0005353059999999993, 0.000535332999999999, 0.0005353199999999989, 0.0005353049999999998, 0.0005353049999999998, 0.0005353199999999989, 0.0005353049999999998, 0.0005353059999999993, 0.0005353189999999994, 0.0005352910000000002, 0.0005353060000000062, 0.0005353189999999994, 0.0005353059999999993, 0.000535347999999998, 0.0005353049999999998, 0.0005352919999999997, 0.0005352919999999997, 0.0005353189999999994, 0.0005353059999999993, 0.0005353469999999985, 0.0005353189999999994, 0.0005352780000000001, 0.0005353049999999998, 0.0005352770000000007, 0.0005353059999999993, 0.0005353189999999994, 0.0005353889999999972, 0.0005352780000000001]</msg>
<status status="PASS" starttime="20201030 18:27:54.626" endtime="20201030 18:27:54.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.621" endtime="20201030 18:27:54.629"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:54.633" endtime="20201030 18:27:54.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.631" endtime="20201030 18:27:54.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.630" endtime="20201030 18:27:54.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.251" endtime="20201030 18:27:54.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.251" endtime="20201030 18:27:54.654"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.662" endtime="20201030 18:27:54.700"></status>
</kw>
<msg timestamp="20201030 18:27:54.701" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.661" endtime="20201030 18:27:54.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.703" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.702" endtime="20201030 18:27:54.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.704" endtime="20201030 18:27:54.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.658" endtime="20201030 18:27:54.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.656" endtime="20201030 18:27:54.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.714" endtime="20201030 18:27:55.000"></status>
</kw>
<msg timestamp="20201030 18:27:55.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020164931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020721125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.712" endtime="20201030 18:27:55.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020164931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020721125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.004" endtime="20201030 18:27:55.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.012" endtime="20201030 18:27:55.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.709" endtime="20201030 18:27:55.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.708" endtime="20201030 18:27:55.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:55.019" level="INFO">${PHILIP_RES} = [{'diff': 0.0005561939999999994}, {'diff': 0.0005550269999999996}, {'diff': 0.0005550269999999996}, {'diff': 0.0005550269999999996}, {'diff': 0.0005550139999999995}, {'diff': 0.0005550279999999991}, {...</msg>
<status status="PASS" starttime="20201030 18:27:55.016" endtime="20201030 18:27:55.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:55.023" level="INFO">${RESULT} = {'diff': [0.0005561939999999994, 0.0005550269999999996, 0.0005550269999999996, 0.0005550269999999996, 0.0005550139999999995, 0.0005550279999999991, 0.0005550280000000025, 0.0005550279999999991, 0.0005...</msg>
<status status="PASS" starttime="20201030 18:27:55.020" endtime="20201030 18:27:55.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.028" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:55.027" endtime="20201030 18:27:55.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.030" level="INFO">VALUE: [0.0005561939999999994, 0.0005550269999999996, 0.0005550269999999996, 0.0005550269999999996, 0.0005550139999999995, 0.0005550279999999991, 0.0005550280000000025, 0.0005550279999999991, 0.0005550139999999995, 0.0005549860000000004, 0.0005550139999999995, 0.0005549999999999999, 0.0005550139999999995, 0.0005550139999999995, 0.0005550419999999986, 0.0005550279999999991, 0.0005550280000000025, 0.0005550279999999991, 0.0005550279999999991, 0.0005550139999999995, 0.0005550139999999995, 0.0005550269999999996, 0.0005550269999999996, 0.0005550139999999995, 0.0005550269999999996, 0.0005550419999999986, 0.0005550419999999986, 0.0005550420000000056, 0.0005550139999999995, 0.0005549720000000008, 0.0005550279999999991, 0.0005550279999999991, 0.0005550419999999986, 0.000555028000000006, 0.0005550279999999991, 0.0005550279999999991, 0.0005550139999999995, 0.0005550279999999991, 0.0005549999999999999, 0.0005549869999999998, 0.0005550409999999992, 0.0005550409999999992, 0.000555013, 0.0005550409999999992, 0.0005550269999999996, 0.0005549860000000004, 0.0005550840000000043, 0.0005550139999999995, 0.0005550139999999995, 0.0005550279999999991]</msg>
<status status="PASS" starttime="20201030 18:27:55.029" endtime="20201030 18:27:55.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.024" endtime="20201030 18:27:55.033"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:55.037" endtime="20201030 18:27:55.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.035" endtime="20201030 18:27:55.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.034" endtime="20201030 18:27:55.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.655" endtime="20201030 18:27:55.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.654" endtime="20201030 18:27:55.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.584" endtime="20201030 18:27:55.057"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:55.061" endtime="20201030 18:27:55.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.060" endtime="20201030 18:27:55.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.059" endtime="20201030 18:27:55.082"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:34.226" endtime="20201030 18:27:55.082" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:27:13.970" endtime="20201030 18:27:55.091"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.165" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:27:55.174" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:27:56.393" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:27:55.164" endtime="20201030 18:27:56.394"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.396" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:27:56.395" endtime="20201030 18:27:56.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.162" endtime="20201030 18:27:56.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:56.399" endtime="20201030 18:27:56.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.398" endtime="20201030 18:27:56.584"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.597" endtime="20201030 18:27:56.611"></status>
</kw>
<msg timestamp="20201030 18:27:56.612" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.595" endtime="20201030 18:27:56.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.614" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.613" endtime="20201030 18:27:56.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.618" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:56.616" endtime="20201030 18:27:56.618"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:56.593" endtime="20201030 18:27:56.619"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:56.590" endtime="20201030 18:27:56.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.589" endtime="20201030 18:27:56.620"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:56.625" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:56.624" endtime="20201030 18:27:56.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.621" endtime="20201030 18:27:56.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.588" endtime="20201030 18:27:56.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.588" endtime="20201030 18:27:56.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.627" endtime="20201030 18:27:56.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.586" endtime="20201030 18:27:56.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.630" endtime="20201030 18:27:56.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.585" endtime="20201030 18:27:56.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.161" endtime="20201030 18:27:56.633"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:56.639" endtime="20201030 18:27:56.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.637" endtime="20201030 18:27:56.659"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.672" endtime="20201030 18:27:56.687"></status>
</kw>
<msg timestamp="20201030 18:27:56.687" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.671" endtime="20201030 18:27:56.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.690" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.688" endtime="20201030 18:27:56.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.693" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:56.691" endtime="20201030 18:27:56.693"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:56.668" endtime="20201030 18:27:56.694"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:56.665" endtime="20201030 18:27:56.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.664" endtime="20201030 18:27:56.695"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:56.699" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:56.698" endtime="20201030 18:27:56.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.696" endtime="20201030 18:27:56.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.663" endtime="20201030 18:27:56.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.663" endtime="20201030 18:27:56.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.700" endtime="20201030 18:27:56.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.661" endtime="20201030 18:27:56.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.659" endtime="20201030 18:27:56.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.636" endtime="20201030 18:27:56.703"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.715" endtime="20201030 18:27:56.728"></status>
</kw>
<msg timestamp="20201030 18:27:56.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.713" endtime="20201030 18:27:56.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.730" endtime="20201030 18:27:56.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.732" endtime="20201030 18:27:56.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.709" endtime="20201030 18:27:56.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.707" endtime="20201030 18:27:56.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.743" endtime="20201030 18:27:57.029"></status>
</kw>
<msg timestamp="20201030 18:27:57.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068233556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068236403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.741" endtime="20201030 18:27:57.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068233556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068236403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.033" endtime="20201030 18:27:57.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.042" endtime="20201030 18:27:57.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.738" endtime="20201030 18:27:57.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.736" endtime="20201030 18:27:57.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:57.049" level="INFO">${RESULT} = [{'diff': 2.847000000000266e-06}, {'diff': 1.6250000000050946e-06}, {'diff': 2.110999999999086e-06}, {'diff': 2.819000000001126e-06}, {'diff': 1.6659999999973918e-06}, {'diff': 2.0839999999994197e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:57.045" endtime="20201030 18:27:57.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:57.053" level="INFO">${ACCURACY} = {'diff': [2.847000000000266e-06, 1.6250000000050946e-06, 2.110999999999086e-06, 2.819000000001126e-06, 1.6659999999973918e-06, 2.0839999999994197e-06, 2.8200000000006e-06, 1.6659999999973918e-06, 2.08...</msg>
<status status="PASS" starttime="20201030 18:27:57.050" endtime="20201030 18:27:57.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.059" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 18:27:57.058" endtime="20201030 18:27:57.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.061" level="INFO">VALUE: [2.847000000000266e-06, 1.6250000000050946e-06, 2.110999999999086e-06, 2.819000000001126e-06, 1.6659999999973918e-06, 2.0839999999994197e-06, 2.8200000000006e-06, 1.6659999999973918e-06, 2.082999999999946e-06, 2.082999999999946e-06, 2.9029999999985456e-06, 1.6530000000042344e-06, 2.082999999999946e-06, 2.082999999999946e-06, 1.6109999999985858e-06, 2.096999999992577e-06, 2.0839999999994197e-06, 1.6119999999980594e-06, 2.097000000006455e-06, 2.096999999992577e-06, 1.6109999999985858e-06, 2.082999999999946e-06, 2.082999999999946e-06, 2.847000000000266e-06, 2.1250000000055946e-06, 2.110999999999086e-06, 2.096999999992577e-06, 2.082999999999946e-06, 2.110999999999086e-06, 2.110999999999086e-06, 2.096999999992577e-06, 2.110999999999086e-06, 2.1530000000047345e-06, 2.082999999999946e-06, 2.05600000000028e-06, 2.082999999999946e-06, 2.1119999999985595e-06, 2.0980000000059285e-06, 2.110999999999086e-06, 2.4300000000115896e-06, 2.097000000006455e-06, 2.0979999999920507e-06, 2.4299999999977118e-06, 2.110999999999086e-06, 2.1250000000055946e-06, 2.4170000000045544e-06, 2.1250000000055946e-06, 2.097000000006455e-06, 2.110999999999086e-06, 2.082999999999946e-06]</msg>
<status status="PASS" starttime="20201030 18:27:57.060" endtime="20201030 18:27:57.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.054" endtime="20201030 18:27:57.062"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:57.066" endtime="20201030 18:27:57.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.064" endtime="20201030 18:27:57.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.063" endtime="20201030 18:27:57.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.705" endtime="20201030 18:27:57.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.704" endtime="20201030 18:27:57.087"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.096" endtime="20201030 18:27:57.110"></status>
</kw>
<msg timestamp="20201030 18:27:57.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.094" endtime="20201030 18:27:57.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.112" endtime="20201030 18:27:57.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.123" endtime="20201030 18:27:57.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.091" endtime="20201030 18:27:57.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.089" endtime="20201030 18:27:57.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.132" endtime="20201030 18:27:57.420"></status>
</kw>
<msg timestamp="20201030 18:27:57.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022106958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022110694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.131" endtime="20201030 18:27:57.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022106958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022110694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.424" endtime="20201030 18:27:57.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.434" endtime="20201030 18:27:57.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.128" endtime="20201030 18:27:57.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.126" endtime="20201030 18:27:57.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:57.443" level="INFO">${RESULT} = [{'diff': 3.736000000000711e-06}, {'diff': 2.722000000000141e-06}, {'diff': 2.985999999999961e-06}, {'diff': 3.3200000000011e-06}, {'diff': 3.026999999999197e-06}, {'diff': 3.3200000000011e-06}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:27:57.439" endtime="20201030 18:27:57.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:57.451" level="INFO">${ACCURACY} = {'diff': [3.736000000000711e-06, 2.722000000000141e-06, 2.985999999999961e-06, 3.3200000000011e-06, 3.026999999999197e-06, 3.3200000000011e-06, 3.054999999998337e-06, 3.3200000000011e-06, 2.9999999999...</msg>
<status status="PASS" starttime="20201030 18:27:57.445" endtime="20201030 18:27:57.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.457" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 18:27:57.456" endtime="20201030 18:27:57.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.461" level="INFO">VALUE: [3.736000000000711e-06, 2.722000000000141e-06, 2.985999999999961e-06, 3.3200000000011e-06, 3.026999999999197e-06, 3.3200000000011e-06, 3.054999999998337e-06, 3.3200000000011e-06, 2.999999999999531e-06, 3.04200000000171e-06, 3.3340000000006698e-06, 2.999999999999531e-06, 3.0139999999991007e-06, 3.27800000000239e-06, 3.3200000000011e-06, 3.0139999999991007e-06, 3.319000000001626e-06, 2.999999999999531e-06, 3.0139999999991007e-06, 3.0279999999986706e-06, 3.3340000000006698e-06, 3.0139999999991007e-06, 3.3329999999977267e-06, 3.3199999999976304e-06, 3.333000000001196e-06, 3.01400000000257e-06, 3.3339999999972003e-06, 3.0279999999986706e-06, 3.333000000001196e-06, 3.361000000000336e-06, 3.0139999999991007e-06, 3.026999999999197e-06, 3.0279999999986706e-06, 3.0839999999969503e-06, 3.30600000000153e-06, 3.347000000000766e-06, 3.0550000000018063e-06, 3.361000000000336e-06, 3.333000000001196e-06, 3.0279999999986706e-06, 3.333000000001196e-06, 3.012999999999627e-06, 3.0410000000022364e-06, 3.0279999999986706e-06, 3.0139999999991007e-06, 3.026999999999197e-06, 3.3189999999981568e-06, 3.29200000000196e-06, 3.0840000000004197e-06, 3.3329999999977267e-06]</msg>
<status status="PASS" starttime="20201030 18:27:57.459" endtime="20201030 18:27:57.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.452" endtime="20201030 18:27:57.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:57.467" endtime="20201030 18:27:57.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.465" endtime="20201030 18:27:57.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.464" endtime="20201030 18:27:57.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.088" endtime="20201030 18:27:57.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.087" endtime="20201030 18:27:57.487"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.496" endtime="20201030 18:27:57.510"></status>
</kw>
<msg timestamp="20201030 18:27:57.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.494" endtime="20201030 18:27:57.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.512" endtime="20201030 18:27:57.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.514" endtime="20201030 18:27:57.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.492" endtime="20201030 18:27:57.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.490" endtime="20201030 18:27:57.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.523" endtime="20201030 18:27:57.827"></status>
</kw>
<msg timestamp="20201030 18:27:57.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021988181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021992847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.522" endtime="20201030 18:27:57.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021988181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021992847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.836" endtime="20201030 18:27:57.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.855" endtime="20201030 18:27:57.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.519" endtime="20201030 18:27:57.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.517" endtime="20201030 18:27:57.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:57.862" level="INFO">${RESULT} = [{'diff': 4.666000000000392e-06}, {'diff': 3.625000000000156e-06}, {'diff': 4.2359999999977416e-06}, {'diff': 4.221999999998172e-06}, {'diff': 3.959000000001295e-06}, {'diff': 4.555999999999311e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:57.859" endtime="20201030 18:27:57.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:57.866" level="INFO">${ACCURACY} = {'diff': [4.666000000000392e-06, 3.625000000000156e-06, 4.2359999999977416e-06, 4.221999999998172e-06, 3.959000000001295e-06, 4.555999999999311e-06, 4.250000000000781e-06, 3.943999999998782e-06, 4.250...</msg>
<status status="PASS" starttime="20201030 18:27:57.863" endtime="20201030 18:27:57.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.871" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 18:27:57.870" endtime="20201030 18:27:57.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.873" level="INFO">VALUE: [4.666000000000392e-06, 3.625000000000156e-06, 4.2359999999977416e-06, 4.221999999998172e-06, 3.959000000001295e-06, 4.555999999999311e-06, 4.250000000000781e-06, 3.943999999998782e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.2499999999973115e-06, 3.931000000002155e-06, 4.264000000000351e-06, 3.958000000001821e-06, 3.944000000002251e-06, 4.236000000001211e-06, 4.291000000000017e-06, 4.250000000000781e-06, 4.250000000000781e-06, 3.9449999999982555e-06, 3.930000000002681e-06, 4.250000000000781e-06, 4.221999999998172e-06, 4.236000000001211e-06, 3.9309999999986855e-06, 4.236000000001211e-06, 3.903000000003015e-06, 4.250000000000781e-06, 3.915999999999642e-06, 4.33400000000167e-06, 3.972000000001391e-06, 4.250000000000781e-06, 3.916999999999116e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.250000000000781e-06, 3.929999999999212e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 3.944000000002251e-06, 3.9449999999982555e-06, 4.221999999998172e-06, 4.264000000000351e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 3.9449999999982555e-06, 3.9309999999986855e-06, 4.237000000000685e-06, 4.2359999999977416e-06, 4.250000000000781e-06]</msg>
<status status="PASS" starttime="20201030 18:27:57.872" endtime="20201030 18:27:57.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.867" endtime="20201030 18:27:57.874"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:57.878" endtime="20201030 18:27:57.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.876" endtime="20201030 18:27:57.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.875" endtime="20201030 18:27:57.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.488" endtime="20201030 18:27:57.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.488" endtime="20201030 18:27:57.898"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.908" endtime="20201030 18:27:57.922"></status>
</kw>
<msg timestamp="20201030 18:27:57.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.906" endtime="20201030 18:27:57.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.924" endtime="20201030 18:27:57.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.927" endtime="20201030 18:27:57.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.903" endtime="20201030 18:27:57.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.901" endtime="20201030 18:27:57.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.936" endtime="20201030 18:27:58.221"></status>
</kw>
<msg timestamp="20201030 18:27:58.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022917875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022923153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.934" endtime="20201030 18:27:58.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022917875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022923153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.225" endtime="20201030 18:27:58.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.233" endtime="20201030 18:27:58.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.931" endtime="20201030 18:27:58.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.930" endtime="20201030 18:27:58.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:58.240" level="INFO">${RESULT} = [{'diff': 5.278000000000921e-06}, {'diff': 5.471999999999422e-06}, {'diff': 5.471999999999422e-06}, {'diff': 5.167000000000366e-06}, {'diff': 4.861000000001836e-06}, {'diff': 5.151999999997853e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:58.237" endtime="20201030 18:27:58.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:58.244" level="INFO">${ACCURACY} = {'diff': [5.278000000000921e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.167000000000366e-06, 4.861000000001836e-06, 5.151999999997853e-06, 5.153000000000796e-06, 5.1949999999995056e-06, 5.167...</msg>
<status status="PASS" starttime="20201030 18:27:58.241" endtime="20201030 18:27:58.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.248" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 18:27:58.247" endtime="20201030 18:27:58.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.251" level="INFO">VALUE: [5.278000000000921e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.167000000000366e-06, 4.861000000001836e-06, 5.151999999997853e-06, 5.153000000000796e-06, 5.1949999999995056e-06, 5.167000000000366e-06, 5.194000000000032e-06, 5.194000000000032e-06, 5.167000000000366e-06, 5.167000000000366e-06, 5.151999999997853e-06, 5.180000000000462e-06, 5.110999999998617e-06, 5.194000000000032e-06, 5.110999999998617e-06, 5.153000000000796e-06, 5.167000000000366e-06, 5.472000000002891e-06, 5.180999999999936e-06, 5.165999999997423e-06, 4.84799999999827e-06, 5.151999999997853e-06, 4.930999999999686e-06, 5.152000000001322e-06, 5.194000000000032e-06, 5.153000000000796e-06, 5.167000000000366e-06, 5.152000000001322e-06, 5.166000000000892e-06, 4.86200000000131e-06, 5.180999999999936e-06, 5.457999999999852e-06, 5.110999999998617e-06, 5.153000000000796e-06, 4.875000000001406e-06, 5.139000000001226e-06, 5.471999999999422e-06, 5.1949999999995056e-06, 5.166000000000892e-06, 5.167000000000366e-06, 5.152999999997326e-06, 5.4589999999993255e-06, 4.846999999998797e-06, 5.153000000000796e-06, 5.139000000001226e-06, 5.09800000000199e-06, 4.86200000000131e-06]</msg>
<status status="PASS" starttime="20201030 18:27:58.249" endtime="20201030 18:27:58.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.245" endtime="20201030 18:27:58.253"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:58.256" endtime="20201030 18:27:58.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.255" endtime="20201030 18:27:58.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.253" endtime="20201030 18:27:58.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.899" endtime="20201030 18:27:58.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.899" endtime="20201030 18:27:58.277"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.286" endtime="20201030 18:27:58.300"></status>
</kw>
<msg timestamp="20201030 18:27:58.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.284" endtime="20201030 18:27:58.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.301" endtime="20201030 18:27:58.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.304" endtime="20201030 18:27:58.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.282" endtime="20201030 18:27:58.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.280" endtime="20201030 18:27:58.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.313" endtime="20201030 18:27:58.594"></status>
</kw>
<msg timestamp="20201030 18:27:58.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021841069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021847889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.311" endtime="20201030 18:27:58.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021841069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021847889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.599" endtime="20201030 18:27:58.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.607" endtime="20201030 18:27:58.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.309" endtime="20201030 18:27:58.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.307" endtime="20201030 18:27:58.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:58.614" level="INFO">${RESULT} = [{'diff': 6.819999999997661e-06}, {'diff': 6.6669999999983964e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.375000000002906e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.0839999999999506e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:58.610" endtime="20201030 18:27:58.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:58.619" level="INFO">${ACCURACY} = {'diff': [6.819999999997661e-06, 6.6669999999983964e-06, 6.070000000000381e-06, 6.375000000002906e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6....</msg>
<status status="PASS" starttime="20201030 18:27:58.615" endtime="20201030 18:27:58.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.623" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 18:27:58.622" endtime="20201030 18:27:58.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.626" level="INFO">VALUE: [6.819999999997661e-06, 6.6669999999983964e-06, 6.070000000000381e-06, 6.375000000002906e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.388999999999007e-06, 6.388999999999007e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.040999999998298e-06, 6.389000000002476e-06, 6.055000000001337e-06, 6.0689999999974376e-06, 6.083000000000477e-06, 6.403000000002046e-06, 6.0839999999999506e-06, 6.014000000002101e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.374999999999437e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.0979999999995205e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.1389999999987566e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.401999999999103e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.374999999999437e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.055000000001337e-06, 6.0839999999999506e-06, 6.389000000002476e-06, 6.055000000001337e-06, 6.056000000000811e-06]</msg>
<status status="PASS" starttime="20201030 18:27:58.624" endtime="20201030 18:27:58.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.619" endtime="20201030 18:27:58.626"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:58.630" endtime="20201030 18:27:58.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.629" endtime="20201030 18:27:58.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.628" endtime="20201030 18:27:58.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.278" endtime="20201030 18:27:58.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.278" endtime="20201030 18:27:58.652"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.663" endtime="20201030 18:27:58.678"></status>
</kw>
<msg timestamp="20201030 18:27:58.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.661" endtime="20201030 18:27:58.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.679" endtime="20201030 18:27:58.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.682" endtime="20201030 18:27:58.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.658" endtime="20201030 18:27:58.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.655" endtime="20201030 18:27:58.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.691" endtime="20201030 18:27:58.976"></status>
</kw>
<msg timestamp="20201030 18:27:58.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025577458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025584861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.689" endtime="20201030 18:27:58.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025577458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025584861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.980" endtime="20201030 18:27:58.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.988" endtime="20201030 18:27:58.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.687" endtime="20201030 18:27:58.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.685" endtime="20201030 18:27:58.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:58.994" level="INFO">${RESULT} = [{'diff': 7.402999999999577e-06}, {'diff': 6.694000000001532e-06}, {'diff': 7.000000000000062e-06}, {'diff': 7.000000000000062e-06}, {'diff': 7.332999999998258e-06}, {'diff': 7.000000000000062e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:58.991" endtime="20201030 18:27:58.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:58.999" level="INFO">${ACCURACY} = {'diff': [7.402999999999577e-06, 6.694000000001532e-06, 7.000000000000062e-06, 7.000000000000062e-06, 7.332999999998258e-06, 7.000000000000062e-06, 7.2919999999990215e-06, 7.000000000000062e-06, 7.000...</msg>
<status status="PASS" starttime="20201030 18:27:58.995" endtime="20201030 18:27:58.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.003" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 18:27:59.002" endtime="20201030 18:27:59.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.005" level="INFO">VALUE: [7.402999999999577e-06, 6.694000000001532e-06, 7.000000000000062e-06, 7.000000000000062e-06, 7.332999999998258e-06, 7.000000000000062e-06, 7.2919999999990215e-06, 7.000000000000062e-06, 7.000000000000062e-06, 7.013999999999632e-06, 7.2230000000006456e-06, 7.306000000002061e-06, 7.305999999998591e-06, 7.013000000000158e-06, 6.986000000000492e-06, 7.013999999999632e-06, 7.2919999999990215e-06, 7.250000000000312e-06, 6.985999999997022e-06, 7.2919999999990215e-06, 6.958000000001352e-06, 7.306000000002061e-06, 6.972000000000922e-06, 7.263999999999882e-06, 6.986000000000492e-06, 7.013999999999632e-06, 7.000000000000062e-06, 7.305000000002587e-06, 7.2919999999990215e-06, 7.236000000000742e-06, 7.292000000002491e-06, 6.958000000001352e-06, 7.333999999997731e-06, 7.000000000000062e-06, 7.069000000001907e-06, 7.304999999999118e-06, 7.318999999998688e-06, 6.986000000000492e-06, 7.304999999999118e-06, 7.305000000002587e-06, 7.292000000002491e-06, 7.000000000000062e-06, 7.2919999999990215e-06, 6.999999999996592e-06, 7.291000000003017e-06, 7.013999999999632e-06, 7.305000000002587e-06, 7.000000000000062e-06, 7.290999999999548e-06, 7.347000000001297e-06]</msg>
<status status="PASS" starttime="20201030 18:27:59.004" endtime="20201030 18:27:59.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.999" endtime="20201030 18:27:59.007"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:59.010" endtime="20201030 18:27:59.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.009" endtime="20201030 18:27:59.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.008" endtime="20201030 18:27:59.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.653" endtime="20201030 18:27:59.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.652" endtime="20201030 18:27:59.031"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.040" endtime="20201030 18:27:59.056"></status>
</kw>
<msg timestamp="20201030 18:27:59.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.038" endtime="20201030 18:27:59.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.057" endtime="20201030 18:27:59.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.060" endtime="20201030 18:27:59.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.036" endtime="20201030 18:27:59.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.034" endtime="20201030 18:27:59.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.069" endtime="20201030 18:27:59.353"></status>
</kw>
<msg timestamp="20201030 18:27:59.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022683236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022692181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.067" endtime="20201030 18:27:59.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022683236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022692181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.357" endtime="20201030 18:27:59.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.365" endtime="20201030 18:27:59.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.065" endtime="20201030 18:27:59.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.063" endtime="20201030 18:27:59.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:59.372" level="INFO">${RESULT} = [{'diff': 8.944999999999786e-06}, {'diff': 7.597000000001547e-06}, {'diff': 8.208999999998606e-06}, {'diff': 8.236000000001742e-06}, {'diff': 8.222000000002172e-06}, {'diff': 8.221999999998703e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:59.369" endtime="20201030 18:27:59.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:59.376" level="INFO">${ACCURACY} = {'diff': [8.944999999999786e-06, 7.597000000001547e-06, 8.208999999998606e-06, 8.236000000001742e-06, 8.222000000002172e-06, 8.221999999998703e-06, 7.916999999999647e-06, 8.193999999999563e-06, 8.5140...</msg>
<status status="PASS" starttime="20201030 18:27:59.373" endtime="20201030 18:27:59.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.381" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 18:27:59.380" endtime="20201030 18:27:59.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.383" level="INFO">VALUE: [8.944999999999786e-06, 7.597000000001547e-06, 8.208999999998606e-06, 8.236000000001742e-06, 8.222000000002172e-06, 8.221999999998703e-06, 7.916999999999647e-06, 8.193999999999563e-06, 8.514000000001132e-06, 7.916999999999647e-06, 8.263000000001408e-06, 8.221999999998703e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.221999999998703e-06, 8.222999999998176e-06, 8.221999999998703e-06, 8.208999999998606e-06, 7.903000000000077e-06, 8.222000000002172e-06, 8.235999999998272e-06, 8.221999999998703e-06, 8.292000000000022e-06, 8.193999999999563e-06, 7.903000000000077e-06, 8.221999999998703e-06, 7.916999999999647e-06, 8.193999999999563e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.235999999998272e-06, 8.222999999998176e-06, 8.221999999998703e-06, 8.222999999998176e-06, 8.208000000002602e-06, 8.222000000002172e-06, 7.916000000000173e-06, 8.207999999999133e-06, 8.180999999999466e-06, 8.221999999998703e-06, 8.236000000001742e-06, 8.207999999999133e-06, 7.929999999999743e-06, 8.236999999997746e-06, 8.207999999999133e-06, 8.221999999998703e-06, 8.528000000000702e-06, 7.916000000000173e-06, 8.235999999998272e-06, 8.221999999998703e-06]</msg>
<status status="PASS" starttime="20201030 18:27:59.382" endtime="20201030 18:27:59.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.377" endtime="20201030 18:27:59.387"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:59.391" endtime="20201030 18:27:59.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.390" endtime="20201030 18:27:59.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.388" endtime="20201030 18:27:59.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.032" endtime="20201030 18:27:59.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.031" endtime="20201030 18:27:59.412"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.421" endtime="20201030 18:27:59.435"></status>
</kw>
<msg timestamp="20201030 18:27:59.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.419" endtime="20201030 18:27:59.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.436" endtime="20201030 18:27:59.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.439" endtime="20201030 18:27:59.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.416" endtime="20201030 18:27:59.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.414" endtime="20201030 18:27:59.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.448" endtime="20201030 18:27:59.730"></status>
</kw>
<msg timestamp="20201030 18:27:59.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021683486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021693028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.446" endtime="20201030 18:27:59.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021683486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021693028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.735" endtime="20201030 18:27:59.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.743" endtime="20201030 18:27:59.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.443" endtime="20201030 18:27:59.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.442" endtime="20201030 18:27:59.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:59.749" level="INFO">${RESULT} = [{'diff': 9.542000000001272e-06}, {'diff': 8.860999999998898e-06}, {'diff': 9.138999999998287e-06}, {'diff': 8.832999999999758e-06}, {'diff': 9.444000000000813e-06}, {'diff': 9.125000000002187e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:59.746" endtime="20201030 18:27:59.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:59.755" level="INFO">${ACCURACY} = {'diff': [9.542000000001272e-06, 8.860999999998898e-06, 9.138999999998287e-06, 8.832999999999758e-06, 9.444000000000813e-06, 9.125000000002187e-06, 9.137999999998814e-06, 9.139000000001757e-06, 9.1109...</msg>
<status status="PASS" starttime="20201030 18:27:59.750" endtime="20201030 18:27:59.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.759" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 18:27:59.758" endtime="20201030 18:27:59.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.762" level="INFO">VALUE: [9.542000000001272e-06, 8.860999999998898e-06, 9.138999999998287e-06, 8.832999999999758e-06, 9.444000000000813e-06, 9.125000000002187e-06, 9.137999999998814e-06, 9.139000000001757e-06, 9.110999999999148e-06, 9.194000000000563e-06, 9.138000000002283e-06, 9.125000000002187e-06, 9.124999999998717e-06, 9.138999999998287e-06, 9.445000000000286e-06, 9.125000000002187e-06, 9.139000000001757e-06, 9.137999999998814e-06, 9.139000000001757e-06, 9.402999999998107e-06, 9.124999999998717e-06, 9.416000000001673e-06, 8.861000000002367e-06, 9.110999999999148e-06, 9.138999999998287e-06, 9.443999999997343e-06, 8.832999999999758e-06, 9.444000000000813e-06, 9.139000000001757e-06, 9.124999999998717e-06, 9.152999999997857e-06, 9.431000000000717e-06, 9.139000000001757e-06, 9.139000000001757e-06, 9.124999999998717e-06, 9.125000000002187e-06, 9.124999999998717e-06, 9.181000000000467e-06, 9.166000000001423e-06, 8.846999999999328e-06, 9.430000000001243e-06, 9.125000000002187e-06, 9.195000000000036e-06, 9.139000000001757e-06, 9.125000000002187e-06, 9.138999999998287e-06, 9.138999999998287e-06, 9.429999999997773e-06, 9.124999999998717e-06, 9.152999999997857e-06]</msg>
<status status="PASS" starttime="20201030 18:27:59.760" endtime="20201030 18:27:59.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.755" endtime="20201030 18:27:59.763"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:59.767" endtime="20201030 18:27:59.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.765" endtime="20201030 18:27:59.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.764" endtime="20201030 18:27:59.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.413" endtime="20201030 18:27:59.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.412" endtime="20201030 18:27:59.787"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.796" endtime="20201030 18:27:59.811"></status>
</kw>
<msg timestamp="20201030 18:27:59.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.794" endtime="20201030 18:27:59.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.812" endtime="20201030 18:27:59.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.815" endtime="20201030 18:27:59.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.792" endtime="20201030 18:27:59.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.790" endtime="20201030 18:27:59.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.824" endtime="20201030 18:28:00.110"></status>
</kw>
<msg timestamp="20201030 18:28:00.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022006, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022017139, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:59.822" endtime="20201030 18:28:00.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022006, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022017139, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:00.114" endtime="20201030 18:28:00.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.122" endtime="20201030 18:28:00.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.820" endtime="20201030 18:28:00.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.818" endtime="20201030 18:28:00.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:00.129" level="INFO">${RESULT} = [{'diff': 1.1139000000000288e-05}, {'diff': 9.764000000002382e-06}, {'diff': 1.0070000000000912e-05}, {'diff': 1.0041000000002298e-05}, {'diff': 1.0361000000000398e-05}, {'diff': 1.0041999999998302e-0...</msg>
<status status="PASS" starttime="20201030 18:28:00.126" endtime="20201030 18:28:00.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:00.133" level="INFO">${ACCURACY} = {'diff': [1.1139000000000288e-05, 9.764000000002382e-06, 1.0070000000000912e-05, 1.0041000000002298e-05, 1.0361000000000398e-05, 1.0041999999998302e-05, 1.0040999999998829e-05, 1.0361000000000398e-05,...</msg>
<status status="PASS" starttime="20201030 18:28:00.130" endtime="20201030 18:28:00.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.138" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 18:28:00.137" endtime="20201030 18:28:00.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.140" level="INFO">VALUE: [1.1139000000000288e-05, 9.764000000002382e-06, 1.0070000000000912e-05, 1.0041000000002298e-05, 1.0361000000000398e-05, 1.0041999999998302e-05, 1.0040999999998829e-05, 1.0361000000000398e-05, 1.0028000000002202e-05, 1.0361999999999871e-05, 1.0054999999998399e-05, 1.0347000000000828e-05, 9.735999999999773e-06, 1.0361000000000398e-05, 1.0361000000000398e-05, 1.0096999999997108e-05, 1.0069000000001438e-05, 1.0361000000000398e-05, 1.0111000000000148e-05, 1.0056000000001342e-05, 1.0347000000000828e-05, 1.0056000000001342e-05, 1.0056000000001342e-05, 9.986000000000023e-06, 1.0374999999999968e-05, 1.0027999999998732e-05, 1.0069000000001438e-05, 1.0111000000000148e-05, 1.0361000000000398e-05, 9.694000000001063e-06, 1.0346999999997358e-05, 1.0040999999998829e-05, 1.0056000000001342e-05, 1.0348000000000301e-05, 1.0305000000002118e-05, 1.0042000000001772e-05, 1.0013999999999162e-05, 1.0042000000001772e-05, 1.0027999999998732e-05, 1.0070000000000912e-05, 1.0138999999999287e-05, 1.0056000000001342e-05, 1.0361000000000398e-05, 1.0333000000001258e-05, 1.0027999999998732e-05, 1.0041999999998302e-05, 1.0070000000000912e-05, 1.0055000000001868e-05, 1.0361000000000398e-05, 1.0055000000001868e-05]</msg>
<status status="PASS" starttime="20201030 18:28:00.139" endtime="20201030 18:28:00.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.134" endtime="20201030 18:28:00.142"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:00.145" endtime="20201030 18:28:00.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.144" endtime="20201030 18:28:00.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.143" endtime="20201030 18:28:00.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.788" endtime="20201030 18:28:00.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.788" endtime="20201030 18:28:00.166"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.175" endtime="20201030 18:28:00.191"></status>
</kw>
<msg timestamp="20201030 18:28:00.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.173" endtime="20201030 18:28:00.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.192" endtime="20201030 18:28:00.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.196" endtime="20201030 18:28:00.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.171" endtime="20201030 18:28:00.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.169" endtime="20201030 18:28:00.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.206" endtime="20201030 18:28:00.491"></status>
</kw>
<msg timestamp="20201030 18:28:00.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022788, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022799681, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:00.204" endtime="20201030 18:28:00.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022788, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022799681, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:00.495" endtime="20201030 18:28:00.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.503" endtime="20201030 18:28:00.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.202" endtime="20201030 18:28:00.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.200" endtime="20201030 18:28:00.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:00.510" level="INFO">${RESULT} = [{'diff': 1.1680999999999497e-05}, {'diff': 1.0959000000001357e-05}, {'diff': 1.0971999999997983e-05}, {'diff': 1.1277000000000509e-05}, {'diff': 1.1277999999999982e-05}, {'diff': 1.0957999999998413e-...</msg>
<status status="PASS" starttime="20201030 18:28:00.506" endtime="20201030 18:28:00.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:00.514" level="INFO">${ACCURACY} = {'diff': [1.1680999999999497e-05, 1.0959000000001357e-05, 1.0971999999997983e-05, 1.1277000000000509e-05, 1.1277999999999982e-05, 1.0957999999998413e-05, 1.1263999999996943e-05, 1.1277999999999982e-05...</msg>
<status status="PASS" starttime="20201030 18:28:00.511" endtime="20201030 18:28:00.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.518" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 18:28:00.517" endtime="20201030 18:28:00.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.521" level="INFO">VALUE: [1.1680999999999497e-05, 1.0959000000001357e-05, 1.0971999999997983e-05, 1.1277000000000509e-05, 1.1277999999999982e-05, 1.0957999999998413e-05, 1.1263999999996943e-05, 1.1277999999999982e-05, 1.1264000000000413e-05, 1.1277000000000509e-05, 1.0971999999997983e-05, 1.1263000000000939e-05, 1.0972999999997457e-05, 1.1277999999999982e-05, 1.1264000000000413e-05, 1.0973000000000926e-05, 1.1222999999997707e-05, 1.0959000000001357e-05, 1.1291999999999552e-05, 1.1277000000000509e-05, 1.1277999999999982e-05, 1.0972000000001453e-05, 1.0973000000000926e-05, 1.0971999999997983e-05, 1.1277999999999982e-05, 1.1291000000000079e-05, 1.1277999999999982e-05, 1.0958999999997887e-05, 1.1263999999996943e-05, 1.1277999999999982e-05, 1.0958000000001883e-05, 1.1277999999999982e-05, 1.0972999999997457e-05, 1.1264000000000413e-05, 1.0973000000000926e-05, 1.0944000000002313e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1304999999999649e-05, 1.0972000000001453e-05, 1.1277999999999982e-05, 1.0972000000001453e-05, 1.1277000000000509e-05, 1.127699999999704e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1292000000003022e-05, 1.0971999999997983e-05, 1.0957999999998413e-05, 1.1277000000000509e-05]</msg>
<status status="PASS" starttime="20201030 18:28:00.519" endtime="20201030 18:28:00.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.515" endtime="20201030 18:28:00.523"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:00.527" endtime="20201030 18:28:00.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.525" endtime="20201030 18:28:00.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.524" endtime="20201030 18:28:00.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.167" endtime="20201030 18:28:00.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.166" endtime="20201030 18:28:00.547"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.557" endtime="20201030 18:28:00.571"></status>
</kw>
<msg timestamp="20201030 18:28:00.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.555" endtime="20201030 18:28:00.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.573" endtime="20201030 18:28:00.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.576" endtime="20201030 18:28:00.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.553" endtime="20201030 18:28:00.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.551" endtime="20201030 18:28:00.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.584" endtime="20201030 18:28:00.877"></status>
</kw>
<msg timestamp="20201030 18:28:00.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022746389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022759389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.583" endtime="20201030 18:28:00.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022746389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022759389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.881" endtime="20201030 18:28:00.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.890" endtime="20201030 18:28:00.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.580" endtime="20201030 18:28:00.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.579" endtime="20201030 18:28:00.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:00.896" level="INFO">${RESULT} = [{'diff': 1.3000000000002593e-05}, {'diff': 1.1598000000001552e-05}, {'diff': 1.2208000000003133e-05}, {'diff': 1.2194999999999567e-05}, {'diff': 1.2180000000000524e-05}, {'diff': 1.2167000000000427e-...</msg>
<status status="PASS" starttime="20201030 18:28:00.893" endtime="20201030 18:28:00.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:00.901" level="INFO">${ACCURACY} = {'diff': [1.3000000000002593e-05, 1.1598000000001552e-05, 1.2208000000003133e-05, 1.2194999999999567e-05, 1.2180000000000524e-05, 1.2167000000000427e-05, 1.2208999999999137e-05, 1.1846999999998858e-05...</msg>
<status status="PASS" starttime="20201030 18:28:00.897" endtime="20201030 18:28:00.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.906" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 18:28:00.905" endtime="20201030 18:28:00.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.908" level="INFO">VALUE: [1.3000000000002593e-05, 1.1598000000001552e-05, 1.2208000000003133e-05, 1.2194999999999567e-05, 1.2180000000000524e-05, 1.2167000000000427e-05, 1.2208999999999137e-05, 1.1846999999998858e-05, 1.1846999999998858e-05, 1.2513999999998193e-05, 1.1917000000000177e-05, 1.2194999999999567e-05, 1.2194999999999567e-05, 1.1903000000000608e-05, 1.2499999999998623e-05, 1.1860999999998428e-05, 1.2207999999999664e-05, 1.2180999999999997e-05, 1.2165999999997484e-05, 1.2207999999999664e-05, 1.1887999999998095e-05, 1.2180999999999997e-05, 1.2180999999999997e-05, 1.2194999999999567e-05, 1.1889000000001038e-05, 1.2194999999999567e-05, 1.2194999999999567e-05, 1.2236000000002273e-05, 1.2208999999999137e-05, 1.2194000000000094e-05, 1.1832999999999289e-05, 1.2194999999999567e-05, 1.2180000000000524e-05, 1.1888000000001564e-05, 1.2180999999999997e-05, 1.2180000000000524e-05, 1.1943999999999844e-05, 1.2485999999999053e-05, 1.2124999999998248e-05, 1.2221999999999233e-05, 1.2180999999999997e-05, 1.1847000000002328e-05, 1.2194000000000094e-05, 1.2194999999999567e-05, 1.2167000000000427e-05, 1.1902000000001134e-05, 1.2485999999999053e-05, 1.1888999999997568e-05, 1.2179999999997054e-05, 1.2179999999997054e-05]</msg>
<status status="PASS" starttime="20201030 18:28:00.907" endtime="20201030 18:28:00.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.902" endtime="20201030 18:28:00.909"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:00.913" endtime="20201030 18:28:00.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.912" endtime="20201030 18:28:00.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.910" endtime="20201030 18:28:00.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.548" endtime="20201030 18:28:00.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.548" endtime="20201030 18:28:00.934"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.942" endtime="20201030 18:28:00.957"></status>
</kw>
<msg timestamp="20201030 18:28:00.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.941" endtime="20201030 18:28:00.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.958" endtime="20201030 18:28:00.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.961" endtime="20201030 18:28:00.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.938" endtime="20201030 18:28:00.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.936" endtime="20201030 18:28:00.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.970" endtime="20201030 18:28:01.256"></status>
</kw>
<msg timestamp="20201030 18:28:01.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021512597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021525833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.968" endtime="20201030 18:28:01.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021512597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021525833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.260" endtime="20201030 18:28:01.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.268" endtime="20201030 18:28:01.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.965" endtime="20201030 18:28:01.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.964" endtime="20201030 18:28:01.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:01.275" level="INFO">${RESULT} = [{'diff': 1.3235999999999803e-05}, {'diff': 1.2792000000001053e-05}, {'diff': 1.3416000000002204e-05}, {'diff': 1.3098000000003052e-05}, {'diff': 1.3083000000000539e-05}, {'diff': 1.308299999999707e-0...</msg>
<status status="PASS" starttime="20201030 18:28:01.272" endtime="20201030 18:28:01.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:01.279" level="INFO">${ACCURACY} = {'diff': [1.3235999999999803e-05, 1.2792000000001053e-05, 1.3416000000002204e-05, 1.3098000000003052e-05, 1.3083000000000539e-05, 1.308299999999707e-05, 1.3056000000000872e-05, 1.3415999999998734e-05,...</msg>
<status status="PASS" starttime="20201030 18:28:01.276" endtime="20201030 18:28:01.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.283" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 18:28:01.282" endtime="20201030 18:28:01.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.286" level="INFO">VALUE: [1.3235999999999803e-05, 1.2792000000001053e-05, 1.3416000000002204e-05, 1.3098000000003052e-05, 1.3083000000000539e-05, 1.308299999999707e-05, 1.3056000000000872e-05, 1.3415999999998734e-05, 1.3097999999999582e-05, 1.3110999999999678e-05, 1.3097000000000109e-05, 1.3374999999999498e-05, 1.3097999999999582e-05, 1.2792000000001053e-05, 1.3402999999998638e-05, 1.3110999999999678e-05, 1.3111999999999152e-05, 1.3111999999999152e-05, 1.3124999999999248e-05, 1.3402999999998638e-05, 1.3110999999999678e-05, 1.3374999999999498e-05, 1.2805000000001149e-05, 1.3110999999999678e-05, 1.3042000000001303e-05, 1.3333000000000789e-05, 1.3110999999999678e-05, 1.3401999999999165e-05, 1.3112000000002622e-05, 1.3138999999998818e-05, 1.3417000000001678e-05, 1.3110999999999678e-05, 1.3097000000000109e-05, 1.3416999999998208e-05, 1.3027000000002259e-05, 1.3055000000001399e-05, 1.3110999999999678e-05, 1.3069000000000969e-05, 1.3111999999999152e-05, 1.3430999999997778e-05, 1.3112000000002622e-05, 1.2806000000000622e-05, 1.3472000000000484e-05, 1.3152999999998388e-05, 1.3415999999998734e-05, 1.3070000000000442e-05, 1.3194000000001094e-05, 1.3097000000000109e-05, 1.3097000000000109e-05, 1.3429999999998304e-05]</msg>
<status status="PASS" starttime="20201030 18:28:01.284" endtime="20201030 18:28:01.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.280" endtime="20201030 18:28:01.287"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:01.291" endtime="20201030 18:28:01.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.289" endtime="20201030 18:28:01.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.288" endtime="20201030 18:28:01.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.935" endtime="20201030 18:28:01.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.934" endtime="20201030 18:28:01.311"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.320" endtime="20201030 18:28:01.336"></status>
</kw>
<msg timestamp="20201030 18:28:01.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.319" endtime="20201030 18:28:01.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.338" endtime="20201030 18:28:01.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.340" endtime="20201030 18:28:01.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.316" endtime="20201030 18:28:01.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.314" endtime="20201030 18:28:01.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.349" endtime="20201030 18:28:01.657"></status>
</kw>
<msg timestamp="20201030 18:28:01.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022826708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022841764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.348" endtime="20201030 18:28:01.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022826708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022841764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.662" endtime="20201030 18:28:01.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.670" endtime="20201030 18:28:01.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.345" endtime="20201030 18:28:01.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.343" endtime="20201030 18:28:01.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:01.677" level="INFO">${RESULT} = [{'diff': 1.5055999999999403e-05}, {'diff': 1.3763999999999443e-05}, {'diff': 1.405499999999893e-05}, {'diff': 1.433299999999832e-05}, {'diff': 1.4000000000000123e-05}, {'diff': 1.434699999999789e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:01.673" endtime="20201030 18:28:01.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:01.681" level="INFO">${ACCURACY} = {'diff': [1.5055999999999403e-05, 1.3763999999999443e-05, 1.405499999999893e-05, 1.433299999999832e-05, 1.4000000000000123e-05, 1.434699999999789e-05, 1.4347000000001359e-05, 1.4027999999999263e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:28:01.678" endtime="20201030 18:28:01.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.685" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 18:28:01.684" endtime="20201030 18:28:01.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.688" level="INFO">VALUE: [1.5055999999999403e-05, 1.3763999999999443e-05, 1.405499999999893e-05, 1.433299999999832e-05, 1.4000000000000123e-05, 1.434699999999789e-05, 1.4347000000001359e-05, 1.4027999999999263e-05, 1.4333999999997793e-05, 1.434699999999789e-05, 1.4013999999999693e-05, 1.433299999999832e-05, 1.4027999999999263e-05, 1.4027999999999263e-05, 1.4013999999999693e-05, 1.4333000000001789e-05, 1.4013999999999693e-05, 1.429099999999961e-05, 1.4305999999998653e-05, 1.4000000000000123e-05, 1.4402999999999638e-05, 1.4014000000003163e-05, 1.4320000000001692e-05, 1.4000000000000123e-05, 1.4361000000000929e-05, 1.4027999999999263e-05, 1.4333000000001789e-05, 1.4028000000002733e-05, 1.427700000000004e-05, 1.4013999999999693e-05, 1.433299999999832e-05, 1.4027999999999263e-05, 1.4292000000002553e-05, 1.4013999999999693e-05, 1.4028000000002733e-05, 1.4027999999999263e-05, 1.4013999999999693e-05, 1.431899999999875e-05, 1.404099999999936e-05, 1.4347000000001359e-05, 1.4056000000001873e-05, 1.433299999999832e-05, 1.4041999999998833e-05, 1.434699999999789e-05, 1.4250000000000373e-05, 1.4055999999998403e-05, 1.4320000000001692e-05, 1.3972999999996988e-05, 1.3958000000001414e-05, 1.4389000000000068e-05]</msg>
<status status="PASS" starttime="20201030 18:28:01.686" endtime="20201030 18:28:01.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.682" endtime="20201030 18:28:01.690"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:01.694" endtime="20201030 18:28:01.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.692" endtime="20201030 18:28:01.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.691" endtime="20201030 18:28:01.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.312" endtime="20201030 18:28:01.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.312" endtime="20201030 18:28:01.714"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.723" endtime="20201030 18:28:01.739"></status>
</kw>
<msg timestamp="20201030 18:28:01.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.721" endtime="20201030 18:28:01.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.740" endtime="20201030 18:28:01.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.743" endtime="20201030 18:28:01.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.719" endtime="20201030 18:28:01.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.717" endtime="20201030 18:28:01.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.753" endtime="20201030 18:28:02.038"></status>
</kw>
<msg timestamp="20201030 18:28:02.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022863694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022879083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.751" endtime="20201030 18:28:02.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022863694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022879083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.042" endtime="20201030 18:28:02.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.050" endtime="20201030 18:28:02.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.748" endtime="20201030 18:28:02.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.746" endtime="20201030 18:28:02.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:02.057" level="INFO">${RESULT} = [{'diff': 1.538900000000107e-05}, {'diff': 1.4555000000002899e-05}, {'diff': 1.5249999999997904e-05}, {'diff': 1.4930999999999278e-05}, {'diff': 1.5250000000001374e-05}, {'diff': 1.5264000000000943e-0...</msg>
<status status="PASS" starttime="20201030 18:28:02.054" endtime="20201030 18:28:02.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:02.062" level="INFO">${ACCURACY} = {'diff': [1.538900000000107e-05, 1.4555000000002899e-05, 1.5249999999997904e-05, 1.4930999999999278e-05, 1.5250000000001374e-05, 1.5264000000000943e-05, 1.4972000000001984e-05, 1.5278000000000513e-05,...</msg>
<status status="PASS" starttime="20201030 18:28:02.058" endtime="20201030 18:28:02.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.066" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 18:28:02.065" endtime="20201030 18:28:02.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.069" level="INFO">VALUE: [1.538900000000107e-05, 1.4555000000002899e-05, 1.5249999999997904e-05, 1.4930999999999278e-05, 1.5250000000001374e-05, 1.5264000000000943e-05, 1.4972000000001984e-05, 1.5278000000000513e-05, 1.5264000000000943e-05, 1.5193999999999624e-05, 1.4916999999999708e-05, 1.5570000000002943e-05, 1.4943999999999374e-05, 1.5292000000000083e-05, 1.5249999999997904e-05, 1.4959000000001887e-05, 1.5222000000002234e-05, 1.5250000000001374e-05, 1.4930999999999278e-05, 1.5193999999999624e-05, 1.5250000000001374e-05, 1.5250000000001374e-05, 1.4931000000002748e-05, 1.5236000000001804e-05, 1.5221999999998764e-05, 1.4930999999999278e-05, 1.5264000000000943e-05, 1.5250000000001374e-05, 1.4958000000002414e-05, 1.5222000000002234e-05, 1.5235999999998334e-05, 1.4903000000000138e-05, 1.5236000000001804e-05, 1.5221999999998764e-05, 1.5249999999997904e-05, 1.5208000000002664e-05, 1.4943999999999374e-05, 1.5277999999997044e-05, 1.5235999999998334e-05, 1.5236999999997808e-05, 1.4943999999999374e-05, 1.4931000000002748e-05, 1.5221999999998764e-05, 1.4916999999999708e-05, 1.5250000000001374e-05, 1.5236000000001804e-05, 1.4943999999999374e-05, 1.5236000000001804e-05, 1.5235999999998334e-05, 1.529100000000061e-05]</msg>
<status status="PASS" starttime="20201030 18:28:02.067" endtime="20201030 18:28:02.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.063" endtime="20201030 18:28:02.070"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:02.074" endtime="20201030 18:28:02.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.072" endtime="20201030 18:28:02.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.071" endtime="20201030 18:28:02.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.715" endtime="20201030 18:28:02.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.715" endtime="20201030 18:28:02.094"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.103" endtime="20201030 18:28:02.117"></status>
</kw>
<msg timestamp="20201030 18:28:02.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.101" endtime="20201030 18:28:02.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.119" endtime="20201030 18:28:02.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.122" endtime="20201030 18:28:02.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.099" endtime="20201030 18:28:02.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.097" endtime="20201030 18:28:02.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.130" endtime="20201030 18:28:02.431"></status>
</kw>
<msg timestamp="20201030 18:28:02.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021515292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021531556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.129" endtime="20201030 18:28:02.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021515292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021531556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.436" endtime="20201030 18:28:02.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.444" endtime="20201030 18:28:02.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.126" endtime="20201030 18:28:02.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.125" endtime="20201030 18:28:02.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:02.450" level="INFO">${RESULT} = [{'diff': 1.6264000000001944e-05}, {'diff': 1.58889999999981e-05}, {'diff': 1.6166000000001485e-05}, {'diff': 1.6165999999998015e-05}, {'diff': 1.6151999999998445e-05}, {'diff': 1.616699999999749e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:02.447" endtime="20201030 18:28:02.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:02.455" level="INFO">${ACCURACY} = {'diff': [1.6264000000001944e-05, 1.58889999999981e-05, 1.6166000000001485e-05, 1.6165999999998015e-05, 1.6151999999998445e-05, 1.616699999999749e-05, 1.616700000000096e-05, 1.584699999999939e-05, 1.6...</msg>
<status status="PASS" starttime="20201030 18:28:02.451" endtime="20201030 18:28:02.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.459" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 18:28:02.458" endtime="20201030 18:28:02.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.461" level="INFO">VALUE: [1.6264000000001944e-05, 1.58889999999981e-05, 1.6166000000001485e-05, 1.6165999999998015e-05, 1.6151999999998445e-05, 1.616699999999749e-05, 1.616700000000096e-05, 1.584699999999939e-05, 1.6165999999998015e-05, 1.6165999999998015e-05, 1.6208999999999668e-05, 1.583299999999982e-05, 1.612499999999878e-05, 1.6152000000001915e-05, 1.5861999999998433e-05, 1.6208000000000194e-05, 1.615299999999792e-05, 1.615299999999792e-05, 1.616700000000096e-05, 1.6165999999998015e-05, 1.613899999999835e-05, 1.586099999999896e-05, 1.616699999999749e-05, 1.5888000000002095e-05, 1.618099999999706e-05, 1.615299999999792e-05, 1.613900000000182e-05, 1.618099999999706e-05, 1.616700000000096e-05, 1.615299999999792e-05, 1.612499999999878e-05, 1.613900000000182e-05, 1.584699999999939e-05, 1.6235999999999334e-05, 1.6472000000000014e-05, 1.615300000000139e-05, 1.616700000000096e-05, 1.612500000000225e-05, 1.6166000000001485e-05, 1.616700000000096e-05, 1.616700000000096e-05, 1.591700000000071e-05, 1.6472000000000014e-05, 1.616700000000096e-05, 1.616700000000096e-05, 1.616700000000096e-05, 1.616700000000096e-05, 1.6180000000001055e-05, 1.6166000000001485e-05, 1.6138000000002345e-05]</msg>
<status status="PASS" starttime="20201030 18:28:02.460" endtime="20201030 18:28:02.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.455" endtime="20201030 18:28:02.469"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:02.473" endtime="20201030 18:28:02.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.472" endtime="20201030 18:28:02.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.470" endtime="20201030 18:28:02.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.095" endtime="20201030 18:28:02.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.095" endtime="20201030 18:28:02.494"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.502" endtime="20201030 18:28:02.517"></status>
</kw>
<msg timestamp="20201030 18:28:02.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.501" endtime="20201030 18:28:02.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.519" endtime="20201030 18:28:02.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.522" endtime="20201030 18:28:02.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.498" endtime="20201030 18:28:02.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.496" endtime="20201030 18:28:02.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.530" endtime="20201030 18:28:02.817"></status>
</kw>
<msg timestamp="20201030 18:28:02.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022898347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.529" endtime="20201030 18:28:02.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022898347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.821" endtime="20201030 18:28:02.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.829" endtime="20201030 18:28:02.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.526" endtime="20201030 18:28:02.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.525" endtime="20201030 18:28:02.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:02.836" level="INFO">${RESULT} = [{'diff': 1.7500000000000154e-05}, {'diff': 1.677700000000254e-05}, {'diff': 1.709700000000064e-05}, {'diff': 1.737500000000003e-05}, {'diff': 1.7084000000000543e-05}, {'diff': 1.70690000000015e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:02.833" endtime="20201030 18:28:02.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:02.840" level="INFO">${ACCURACY} = {'diff': [1.7500000000000154e-05, 1.677700000000254e-05, 1.709700000000064e-05, 1.737500000000003e-05, 1.7084000000000543e-05, 1.70690000000015e-05, 1.7028000000002264e-05, 1.7083999999997074e-05, 1.7...</msg>
<status status="PASS" starttime="20201030 18:28:02.837" endtime="20201030 18:28:02.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.844" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 18:28:02.843" endtime="20201030 18:28:02.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.850" level="INFO">VALUE: [1.7500000000000154e-05, 1.677700000000254e-05, 1.709700000000064e-05, 1.737500000000003e-05, 1.7084000000000543e-05, 1.70690000000015e-05, 1.7028000000002264e-05, 1.7083999999997074e-05, 1.70829999999976e-05, 1.737500000000003e-05, 1.70690000000015e-05, 1.7070000000000973e-05, 1.7084000000000543e-05, 1.702699999999932e-05, 1.7084000000000543e-05, 1.70690000000015e-05, 1.709700000000064e-05, 1.7041999999998364e-05, 1.70829999999976e-05, 1.7055999999997934e-05, 1.6999999999999654e-05, 1.740300000000264e-05, 1.7069999999997504e-05, 1.7041999999998364e-05, 1.7083999999997074e-05, 1.6778000000002014e-05, 1.7069999999997504e-05, 1.73889999999996e-05, 1.7013999999999224e-05, 1.709700000000064e-05, 1.711100000000021e-05, 1.7042000000001833e-05, 1.738900000000307e-05, 1.711100000000021e-05, 1.7098000000000113e-05, 1.706899999999803e-05, 1.73889999999996e-05, 1.711100000000021e-05, 1.7084000000000543e-05, 1.708300000000107e-05, 1.7042000000001833e-05, 1.708300000000107e-05, 1.7069999999997504e-05, 1.736100000000046e-05, 1.7070000000000973e-05, 1.705500000000193e-05, 1.73889999999996e-05, 1.738900000000307e-05, 1.7028000000002264e-05, 1.70690000000015e-05]</msg>
<status status="PASS" starttime="20201030 18:28:02.846" endtime="20201030 18:28:02.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.841" endtime="20201030 18:28:02.852"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:02.855" endtime="20201030 18:28:02.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.854" endtime="20201030 18:28:02.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.852" endtime="20201030 18:28:02.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.495" endtime="20201030 18:28:02.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.494" endtime="20201030 18:28:02.876"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.884" endtime="20201030 18:28:02.899"></status>
</kw>
<msg timestamp="20201030 18:28:02.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.883" endtime="20201030 18:28:02.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.900" endtime="20201030 18:28:02.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.903" endtime="20201030 18:28:02.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.880" endtime="20201030 18:28:02.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.878" endtime="20201030 18:28:02.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.912" endtime="20201030 18:28:03.212"></status>
</kw>
<msg timestamp="20201030 18:28:03.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021568375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021586736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.910" endtime="20201030 18:28:03.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021568375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021586736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.217" endtime="20201030 18:28:03.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.225" endtime="20201030 18:28:03.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.908" endtime="20201030 18:28:03.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.906" endtime="20201030 18:28:03.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:03.231" level="INFO">${RESULT} = [{'diff': 1.836099999999799e-05}, {'diff': 1.8000000000000654e-05}, {'diff': 1.7986000000001084e-05}, {'diff': 1.7986000000001084e-05}, {'diff': 1.836100000000146e-05}, {'diff': 1.7944000000002375e-05...</msg>
<status status="PASS" starttime="20201030 18:28:03.228" endtime="20201030 18:28:03.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:03.236" level="INFO">${ACCURACY} = {'diff': [1.836099999999799e-05, 1.8000000000000654e-05, 1.7986000000001084e-05, 1.7986000000001084e-05, 1.836100000000146e-05, 1.7944000000002375e-05, 1.829100000000014e-05, 1.8319999999998754e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:28:03.232" endtime="20201030 18:28:03.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.241" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 18:28:03.240" endtime="20201030 18:28:03.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.244" level="INFO">VALUE: [1.836099999999799e-05, 1.8000000000000654e-05, 1.7986000000001084e-05, 1.7986000000001084e-05, 1.836100000000146e-05, 1.7944000000002375e-05, 1.829100000000014e-05, 1.8319999999998754e-05, 1.7986000000001084e-05, 1.7972000000001515e-05, 1.830499999999971e-05, 1.8000000000000654e-05, 1.830499999999971e-05, 1.7943999999998905e-05, 1.836099999999799e-05, 1.8000000000000654e-05, 1.831899999999928e-05, 1.8000000000000654e-05, 1.7986000000001084e-05, 1.829100000000014e-05, 1.8070000000001973e-05, 1.8291999999999614e-05, 1.830499999999971e-05, 1.8000000000000654e-05, 1.8306000000002653e-05, 1.8000000000000654e-05, 1.8305999999999184e-05, 1.7999999999997185e-05, 1.8000000000000654e-05, 1.8250000000000904e-05, 1.7986000000001084e-05, 1.8222000000001765e-05, 1.8014000000000224e-05, 1.8292000000003084e-05, 1.8000000000000654e-05, 1.8278000000000044e-05, 1.8333999999998324e-05, 1.8291999999999614e-05, 1.8000000000000654e-05, 1.830499999999971e-05, 1.836100000000146e-05, 1.7986000000001084e-05, 1.831899999999928e-05, 1.7986000000001084e-05, 1.8291999999999614e-05, 1.8291999999999614e-05, 1.8041999999999364e-05, 1.8305999999999184e-05, 1.8291999999999614e-05, 1.7987000000000558e-05]</msg>
<status status="PASS" starttime="20201030 18:28:03.242" endtime="20201030 18:28:03.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.237" endtime="20201030 18:28:03.245"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:03.249" endtime="20201030 18:28:03.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.248" endtime="20201030 18:28:03.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.246" endtime="20201030 18:28:03.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.877" endtime="20201030 18:28:03.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.876" endtime="20201030 18:28:03.270"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.279" endtime="20201030 18:28:03.294"></status>
</kw>
<msg timestamp="20201030 18:28:03.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.277" endtime="20201030 18:28:03.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.295" endtime="20201030 18:28:03.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.298" endtime="20201030 18:28:03.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.275" endtime="20201030 18:28:03.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.273" endtime="20201030 18:28:03.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.307" endtime="20201030 18:28:03.593"></status>
</kw>
<msg timestamp="20201030 18:28:03.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022050278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.305" endtime="20201030 18:28:03.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022050278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.597" endtime="20201030 18:28:03.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.606" endtime="20201030 18:28:03.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.302" endtime="20201030 18:28:03.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.301" endtime="20201030 18:28:03.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:03.612" level="INFO">${RESULT} = [{'diff': 1.9985999999999615e-05}, {'diff': 1.859700000000214e-05}, {'diff': 1.9221999999999295e-05}, {'diff': 1.9222000000002765e-05}, {'diff': 1.893099999999981e-05}, {'diff': 1.9235999999998865e-05...</msg>
<status status="PASS" starttime="20201030 18:28:03.609" endtime="20201030 18:28:03.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:03.617" level="INFO">${ACCURACY} = {'diff': [1.9985999999999615e-05, 1.859700000000214e-05, 1.9221999999999295e-05, 1.9222000000002765e-05, 1.893099999999981e-05, 1.9235999999998865e-05, 1.9222000000002765e-05, 1.919499999999963e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:28:03.613" endtime="20201030 18:28:03.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.621" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 18:28:03.620" endtime="20201030 18:28:03.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.624" level="INFO">VALUE: [1.9985999999999615e-05, 1.859700000000214e-05, 1.9221999999999295e-05, 1.9222000000002765e-05, 1.893099999999981e-05, 1.9235999999998865e-05, 1.9222000000002765e-05, 1.919499999999963e-05, 1.9235999999998865e-05, 1.9221999999999295e-05, 1.91950000000031e-05, 1.890300000000067e-05, 1.920900000000267e-05, 1.9292000000000614e-05, 1.893099999999981e-05, 1.9180000000000585e-05, 1.9207999999999725e-05, 1.9207999999999725e-05, 1.9222000000002765e-05, 1.922299999999877e-05, 1.9250000000001904e-05, 1.88890000000011e-05, 1.9249999999998435e-05, 1.9514000000001724e-05, 1.8943999999999905e-05, 1.9221999999999295e-05, 1.92089999999992e-05, 1.8847999999998394e-05, 1.890300000000067e-05, 1.9207999999999725e-05, 1.919499999999963e-05, 1.9235999999998865e-05, 1.9235999999998865e-05, 1.9222000000002765e-05, 1.9235999999998865e-05, 1.88890000000011e-05, 1.9221999999999295e-05, 1.891700000000024e-05, 1.9221999999999295e-05, 1.9250000000001904e-05, 1.891700000000024e-05, 1.9235999999998865e-05, 1.9222000000002765e-05, 1.893099999999981e-05, 1.9222000000002765e-05, 1.891700000000024e-05, 1.919499999999963e-05, 1.9221999999999295e-05, 1.92089999999992e-05, 1.9221999999999295e-05]</msg>
<status status="PASS" starttime="20201030 18:28:03.623" endtime="20201030 18:28:03.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.618" endtime="20201030 18:28:03.625"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:03.629" endtime="20201030 18:28:03.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.628" endtime="20201030 18:28:03.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.626" endtime="20201030 18:28:03.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.271" endtime="20201030 18:28:03.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.270" endtime="20201030 18:28:03.650"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.659" endtime="20201030 18:28:03.675"></status>
</kw>
<msg timestamp="20201030 18:28:03.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.657" endtime="20201030 18:28:03.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.677" endtime="20201030 18:28:03.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.679" endtime="20201030 18:28:03.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.655" endtime="20201030 18:28:03.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.652" endtime="20201030 18:28:03.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.689" endtime="20201030 18:28:03.998"></status>
</kw>
<msg timestamp="20201030 18:28:04.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023071458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023092611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.687" endtime="20201030 18:28:04.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023071458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023092611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:04.007" endtime="20201030 18:28:04.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.016" endtime="20201030 18:28:04.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.684" endtime="20201030 18:28:04.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.682" endtime="20201030 18:28:04.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:04.023" level="INFO">${RESULT} = [{'diff': 2.115299999999945e-05}, {'diff': 1.981900000000078e-05}, {'diff': 2.0179999999998116e-05}, {'diff': 2.0151999999998976e-05}, {'diff': 2.013899999999888e-05}, {'diff': 2.0137999999999406e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:04.019" endtime="20201030 18:28:04.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:04.027" level="INFO">${ACCURACY} = {'diff': [2.115299999999945e-05, 1.981900000000078e-05, 2.0179999999998116e-05, 2.0151999999998976e-05, 2.013899999999888e-05, 2.0137999999999406e-05, 2.044499999999741e-05, 1.9777999999998075e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:28:04.024" endtime="20201030 18:28:04.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.031" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 18:28:04.030" endtime="20201030 18:28:04.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.034" level="INFO">VALUE: [2.115299999999945e-05, 1.981900000000078e-05, 2.0179999999998116e-05, 2.0151999999998976e-05, 2.013899999999888e-05, 2.0137999999999406e-05, 2.044499999999741e-05, 1.9777999999998075e-05, 2.011099999999974e-05, 2.00830000000006e-05, 2.041699999999827e-05, 2.011099999999974e-05, 2.013899999999888e-05, 1.9806000000000684e-05, 2.013900000000235e-05, 2.012499999999931e-05, 2.013899999999888e-05, 2.012499999999931e-05, 2.00830000000006e-05, 2.012499999999931e-05, 2.013899999999888e-05, 2.013899999999888e-05, 2.0179999999998116e-05, 2.0429999999998366e-05, 2.012499999999931e-05, 2.044499999999741e-05, 2.0180000000001586e-05, 2.0166000000002016e-05, 2.018100000000106e-05, 2.0222000000000295e-05, 2.015300000000192e-05, 2.043099999999784e-05, 2.015299999999845e-05, 2.013900000000235e-05, 2.015300000000192e-05, 2.013899999999888e-05, 1.98890000000021e-05, 2.013899999999888e-05, 2.044500000000088e-05, 2.015299999999845e-05, 2.012499999999931e-05, 2.013899999999888e-05, 2.011099999999974e-05, 2.0443999999997936e-05, 2.015300000000192e-05, 1.980500000000121e-05, 2.037499999999956e-05, 2.009700000000017e-05, 2.009700000000017e-05, 2.0165999999998546e-05]</msg>
<status status="PASS" starttime="20201030 18:28:04.033" endtime="20201030 18:28:04.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.028" endtime="20201030 18:28:04.036"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:04.040" endtime="20201030 18:28:04.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.039" endtime="20201030 18:28:04.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.037" endtime="20201030 18:28:04.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.651" endtime="20201030 18:28:04.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.650" endtime="20201030 18:28:04.061"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.075" endtime="20201030 18:28:04.090"></status>
</kw>
<msg timestamp="20201030 18:28:04.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.073" endtime="20201030 18:28:04.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.092" endtime="20201030 18:28:04.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.095" endtime="20201030 18:28:04.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.069" endtime="20201030 18:28:04.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.063" endtime="20201030 18:28:04.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.105" endtime="20201030 18:28:04.391"></status>
</kw>
<msg timestamp="20201030 18:28:04.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027175875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027197347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:04.104" endtime="20201030 18:28:04.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027175875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027197347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:04.395" endtime="20201030 18:28:04.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.403" endtime="20201030 18:28:04.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.101" endtime="20201030 18:28:04.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.099" endtime="20201030 18:28:04.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:04.409" level="INFO">${RESULT} = [{'diff': 2.1472000000001545e-05}, {'diff': 2.0736000000000365e-05}, {'diff': 2.102699999999985e-05}, {'diff': 2.1000000000000185e-05}, {'diff': 2.134700000000142e-05}, {'diff': 2.1055999999998465e-05...</msg>
<status status="PASS" starttime="20201030 18:28:04.406" endtime="20201030 18:28:04.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:04.414" level="INFO">${ACCURACY} = {'diff': [2.1472000000001545e-05, 2.0736000000000365e-05, 2.102699999999985e-05, 2.1000000000000185e-05, 2.134700000000142e-05, 2.1055999999998465e-05, 2.1056000000001934e-05, 2.1042000000002364e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:04.410" endtime="20201030 18:28:04.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.419" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 18:28:04.418" endtime="20201030 18:28:04.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.421" level="INFO">VALUE: [2.1472000000001545e-05, 2.0736000000000365e-05, 2.102699999999985e-05, 2.1000000000000185e-05, 2.134700000000142e-05, 2.1055999999998465e-05, 2.1056000000001934e-05, 2.1042000000002364e-05, 2.1055999999998465e-05, 2.106900000000203e-05, 2.1013999999999755e-05, 2.105499999999899e-05, 2.1362000000000464e-05, 2.137500000000056e-05, 2.1041999999998895e-05, 2.1055999999998465e-05, 2.136100000000099e-05, 2.1348000000000894e-05, 2.1041999999998895e-05, 2.1027999999999325e-05, 2.1070000000001504e-05, 2.136100000000099e-05, 2.1041999999998895e-05, 2.137500000000056e-05, 2.104099999999942e-05, 2.1042000000002364e-05, 2.136100000000099e-05, 2.1348000000000894e-05, 2.1069999999998035e-05, 2.133300000000185e-05, 2.1056000000001934e-05, 2.1055999999998465e-05, 2.104099999999942e-05, 2.136099999999752e-05, 2.0749999999999935e-05, 2.138900000000013e-05, 2.1041999999998895e-05, 2.134699999999795e-05, 2.1042000000002364e-05, 2.0985999999997146e-05, 2.143099999999884e-05, 2.0971999999997576e-05, 2.10830000000016e-05, 2.134700000000142e-05, 2.105499999999899e-05, 2.104099999999942e-05, 2.1348000000000894e-05, 2.1055999999998465e-05, 2.1041999999998895e-05, 2.111100000000074e-05]</msg>
<status status="PASS" starttime="20201030 18:28:04.420" endtime="20201030 18:28:04.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.415" endtime="20201030 18:28:04.423"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:04.426" endtime="20201030 18:28:04.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.425" endtime="20201030 18:28:04.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.424" endtime="20201030 18:28:04.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.062" endtime="20201030 18:28:04.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.061" endtime="20201030 18:28:04.447"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.456" endtime="20201030 18:28:04.471"></status>
</kw>
<msg timestamp="20201030 18:28:04.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.454" endtime="20201030 18:28:04.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.472" endtime="20201030 18:28:04.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.475" endtime="20201030 18:28:04.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.451" endtime="20201030 18:28:04.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.449" endtime="20201030 18:28:04.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.484" endtime="20201030 18:28:04.783"></status>
</kw>
<msg timestamp="20201030 18:28:04.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022038875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022061278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:04.482" endtime="20201030 18:28:04.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022038875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022061278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:04.792" endtime="20201030 18:28:04.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.811" endtime="20201030 18:28:04.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.480" endtime="20201030 18:28:04.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.478" endtime="20201030 18:28:04.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:04.820" level="INFO">${RESULT} = [{'diff': 2.24030000000007e-05}, {'diff': 2.1637999999997437e-05}, {'diff': 2.1985999999998146e-05}, {'diff': 2.2276999999997632e-05}, {'diff': 2.223700000000134e-05}, {'diff': 2.2264000000001005e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:04.817" endtime="20201030 18:28:04.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:04.824" level="INFO">${ACCURACY} = {'diff': [2.24030000000007e-05, 2.1637999999997437e-05, 2.1985999999998146e-05, 2.2276999999997632e-05, 2.223700000000134e-05, 2.2264000000001005e-05, 2.194500000000238e-05, 2.2278000000000575e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:28:04.821" endtime="20201030 18:28:04.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.829" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 18:28:04.828" endtime="20201030 18:28:04.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.831" level="INFO">VALUE: [2.24030000000007e-05, 2.1637999999997437e-05, 2.1985999999998146e-05, 2.2276999999997632e-05, 2.223700000000134e-05, 2.2264000000001005e-05, 2.194500000000238e-05, 2.2278000000000575e-05, 2.229100000000067e-05, 2.197300000000152e-05, 2.2278000000000575e-05, 2.2292000000000145e-05, 2.1957999999999006e-05, 2.2278000000000575e-05, 2.2276999999997632e-05, 2.1972000000002045e-05, 2.2278000000000575e-05, 2.2264000000001005e-05, 2.198700000000109e-05, 2.2278000000000575e-05, 2.1957999999999006e-05, 2.1972000000002045e-05, 2.2292000000000145e-05, 2.2014000000000755e-05, 2.2236000000001865e-05, 2.2278000000000575e-05, 2.2319999999999285e-05, 2.2278000000000575e-05, 2.2264000000001005e-05, 2.195900000000195e-05, 2.2263999999997536e-05, 2.194500000000238e-05, 2.2264000000001005e-05, 2.194500000000238e-05, 2.2263999999997536e-05, 2.2292000000000145e-05, 2.1985999999998146e-05, 2.1971999999998576e-05, 2.2264000000001005e-05, 2.1972000000002045e-05, 2.1986000000001615e-05, 2.2277999999997106e-05, 2.2249999999997966e-05, 2.2264000000001005e-05, 2.22770000000011e-05, 2.2014000000000755e-05, 2.2292000000000145e-05, 2.2014000000000755e-05, 2.197299999999805e-05, 2.229100000000067e-05]</msg>
<status status="PASS" starttime="20201030 18:28:04.830" endtime="20201030 18:28:04.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.825" endtime="20201030 18:28:04.832"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:04.836" endtime="20201030 18:28:04.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.835" endtime="20201030 18:28:04.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.833" endtime="20201030 18:28:04.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.448" endtime="20201030 18:28:04.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.447" endtime="20201030 18:28:04.857"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.865" endtime="20201030 18:28:04.881"></status>
</kw>
<msg timestamp="20201030 18:28:04.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.864" endtime="20201030 18:28:04.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.882" endtime="20201030 18:28:04.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.885" endtime="20201030 18:28:04.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.861" endtime="20201030 18:28:04.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.859" endtime="20201030 18:28:04.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.894" endtime="20201030 18:28:05.179"></status>
</kw>
<msg timestamp="20201030 18:28:05.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022522153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022546083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:04.892" endtime="20201030 18:28:05.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022522153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022546083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.184" endtime="20201030 18:28:05.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.192" endtime="20201030 18:28:05.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.890" endtime="20201030 18:28:05.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.888" endtime="20201030 18:28:05.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:05.199" level="INFO">${RESULT} = [{'diff': 2.3930000000001866e-05}, {'diff': 2.3485999999999646e-05}, {'diff': 2.3485999999999646e-05}, {'diff': 2.288899999999816e-05}, {'diff': 2.3180000000001116e-05}, {'diff': 2.3485999999999646e-0...</msg>
<status status="PASS" starttime="20201030 18:28:05.196" endtime="20201030 18:28:05.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:05.203" level="INFO">${ACCURACY} = {'diff': [2.3930000000001866e-05, 2.3485999999999646e-05, 2.3485999999999646e-05, 2.288899999999816e-05, 2.3180000000001116e-05, 2.3485999999999646e-05, 2.287499999999859e-05, 2.312499999999884e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:28:05.200" endtime="20201030 18:28:05.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.208" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 18:28:05.207" endtime="20201030 18:28:05.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.211" level="INFO">VALUE: [2.3930000000001866e-05, 2.3485999999999646e-05, 2.3485999999999646e-05, 2.288899999999816e-05, 2.3180000000001116e-05, 2.3485999999999646e-05, 2.287499999999859e-05, 2.312499999999884e-05, 2.319500000000016e-05, 2.3235999999999396e-05, 2.320899999999973e-05, 2.319500000000016e-05, 2.316700000000102e-05, 2.288899999999816e-05, 2.318100000000059e-05, 2.3193999999997217e-05, 2.286099999999902e-05, 2.3194000000000686e-05, 2.3513999999998786e-05, 2.288900000000163e-05, 2.318100000000059e-05, 2.288900000000163e-05, 2.3208000000000256e-05, 2.3472000000000076e-05, 2.2958000000000006e-05, 2.319500000000016e-05, 2.318100000000059e-05, 2.319500000000016e-05, 2.319500000000016e-05, 2.288899999999816e-05, 2.3179999999997647e-05, 2.3194000000000686e-05, 2.2888000000002157e-05, 2.319500000000016e-05, 2.3151999999998507e-05, 2.320899999999973e-05, 2.288899999999816e-05, 2.316700000000102e-05, 2.3235999999999396e-05, 2.3235999999999396e-05, 2.287499999999859e-05, 2.3458000000000506e-05, 2.286100000000249e-05, 2.3165999999998077e-05, 2.3180000000001116e-05, 2.3180000000001116e-05, 2.3194000000000686e-05, 2.319500000000016e-05, 2.3208000000000256e-05, 2.3194000000000686e-05]</msg>
<status status="PASS" starttime="20201030 18:28:05.209" endtime="20201030 18:28:05.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.204" endtime="20201030 18:28:05.213"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:05.217" endtime="20201030 18:28:05.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.215" endtime="20201030 18:28:05.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.214" endtime="20201030 18:28:05.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.858" endtime="20201030 18:28:05.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.857" endtime="20201030 18:28:05.238"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.247" endtime="20201030 18:28:05.261"></status>
</kw>
<msg timestamp="20201030 18:28:05.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.245" endtime="20201030 18:28:05.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.263" endtime="20201030 18:28:05.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.265" endtime="20201030 18:28:05.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.242" endtime="20201030 18:28:05.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.240" endtime="20201030 18:28:05.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.276" endtime="20201030 18:28:05.576"></status>
</kw>
<msg timestamp="20201030 18:28:05.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022215583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022240125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.274" endtime="20201030 18:28:05.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022215583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022240125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.586" endtime="20201030 18:28:05.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.605" endtime="20201030 18:28:05.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.271" endtime="20201030 18:28:05.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.269" endtime="20201030 18:28:05.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:05.620" level="INFO">${RESULT} = [{'diff': 2.4541999999998926e-05}, {'diff': 2.3514000000002255e-05}, {'diff': 2.412499999999984e-05}, {'diff': 2.40970000000007e-05}, {'diff': 2.44169999999988e-05}, {'diff': 2.3806000000001215e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:05.613" endtime="20201030 18:28:05.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:05.629" level="INFO">${ACCURACY} = {'diff': [2.4541999999998926e-05, 2.3514000000002255e-05, 2.412499999999984e-05, 2.40970000000007e-05, 2.44169999999988e-05, 2.3806000000001215e-05, 2.411100000000027e-05, 2.4027999999998856e-05, 2.40...</msg>
<status status="PASS" starttime="20201030 18:28:05.622" endtime="20201030 18:28:05.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.633" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 18:28:05.632" endtime="20201030 18:28:05.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.636" level="INFO">VALUE: [2.4541999999998926e-05, 2.3514000000002255e-05, 2.412499999999984e-05, 2.40970000000007e-05, 2.44169999999988e-05, 2.3806000000001215e-05, 2.411100000000027e-05, 2.4027999999998856e-05, 2.40970000000007e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2.40970000000007e-05, 2.40970000000007e-05, 2.412499999999984e-05, 2.415300000000245e-05, 2.411100000000027e-05, 2.412499999999984e-05, 2.44169999999988e-05, 2.4054999999998522e-05, 2.4111999999999745e-05, 2.4098000000000175e-05, 2.411100000000027e-05, 2.40970000000007e-05, 2.443099999999837e-05, 2.412499999999984e-05, 2.4098000000000175e-05, 2.412499999999984e-05, 2.437500000000009e-05, 2.4056000000001465e-05, 2.411100000000027e-05, 2.40970000000007e-05, 2.4096999999997232e-05, 2.4055999999997996e-05, 2.4096999999997232e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2.411100000000027e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2.44169999999988e-05, 2.4098000000000175e-05, 2.40970000000007e-05, 2.4070000000001035e-05, 2.4055999999997996e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.440299999999923e-05, 2.412499999999984e-05, 2.3777999999998606e-05, 2.412499999999984e-05]</msg>
<status status="PASS" starttime="20201030 18:28:05.635" endtime="20201030 18:28:05.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.630" endtime="20201030 18:28:05.638"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:05.641" endtime="20201030 18:28:05.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.640" endtime="20201030 18:28:05.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.639" endtime="20201030 18:28:05.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.239" endtime="20201030 18:28:05.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.238" endtime="20201030 18:28:05.663"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.679" endtime="20201030 18:28:05.695"></status>
</kw>
<msg timestamp="20201030 18:28:05.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.676" endtime="20201030 18:28:05.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.697" endtime="20201030 18:28:05.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.700" endtime="20201030 18:28:05.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.672" endtime="20201030 18:28:05.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.668" endtime="20201030 18:28:05.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.709" endtime="20201030 18:28:05.997"></status>
</kw>
<msg timestamp="20201030 18:28:06.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032149014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032174167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.707" endtime="20201030 18:28:06.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032149014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032174167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:06.001" endtime="20201030 18:28:06.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.010" endtime="20201030 18:28:06.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.705" endtime="20201030 18:28:06.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.703" endtime="20201030 18:28:06.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:06.017" level="INFO">${RESULT} = [{'diff': 2.515299999999998e-05}, {'diff': 2.47090000000047e-05}, {'diff': 2.5027999999996386e-05}, {'diff': 2.5348000000001425e-05}, {'diff': 2.5263999999997067e-05}, {'diff': 2.5027999999996386e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:06.013" endtime="20201030 18:28:06.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:06.021" level="INFO">${ACCURACY} = {'diff': [2.515299999999998e-05, 2.47090000000047e-05, 2.5027999999996386e-05, 2.5348000000001425e-05, 2.5263999999997067e-05, 2.5027999999996386e-05, 2.5334000000001855e-05, 2.5026999999996913e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:28:06.018" endtime="20201030 18:28:06.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.026" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 18:28:06.025" endtime="20201030 18:28:06.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.028" level="INFO">VALUE: [2.515299999999998e-05, 2.47090000000047e-05, 2.5027999999996386e-05, 2.5348000000001425e-05, 2.5263999999997067e-05, 2.5027999999996386e-05, 2.5334000000001855e-05, 2.5026999999996913e-05, 2.5042000000002895e-05, 2.533300000000238e-05, 2.5028000000003325e-05, 2.536100000000152e-05, 2.5027000000003852e-05, 2.4999999999997247e-05, 2.5305999999995776e-05, 2.5027999999996386e-05, 2.533300000000238e-05, 2.5014000000003755e-05, 2.5320000000002285e-05, 2.533300000000238e-05, 2.4985999999997677e-05, 2.4985999999997677e-05, 2.5027999999996386e-05, 2.533300000000238e-05, 2.5028000000003325e-05, 2.5332999999995442e-05, 2.5027999999996386e-05, 2.533300000000238e-05, 2.5027999999996386e-05, 2.5026999999996913e-05, 2.5042000000002895e-05, 2.4985999999997677e-05, 2.5319999999995346e-05, 2.5320000000002285e-05, 2.5041999999995956e-05, 2.533300000000238e-05, 2.5042000000002895e-05, 2.5027999999996386e-05, 2.5334000000001855e-05, 2.5013999999996817e-05, 2.5013999999996817e-05, 2.5250000000004436e-05, 2.5027000000003852e-05, 2.54169999999998e-05, 2.533300000000238e-05, 2.5027999999996386e-05, 2.5028000000003325e-05, 2.5332999999995442e-05, 2.5305999999995776e-05, 2.5042000000002895e-05]</msg>
<status status="PASS" starttime="20201030 18:28:06.027" endtime="20201030 18:28:06.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.022" endtime="20201030 18:28:06.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:06.034" endtime="20201030 18:28:06.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.032" endtime="20201030 18:28:06.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.031" endtime="20201030 18:28:06.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.664" endtime="20201030 18:28:06.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.664" endtime="20201030 18:28:06.055"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.064" endtime="20201030 18:28:06.080"></status>
</kw>
<msg timestamp="20201030 18:28:06.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.062" endtime="20201030 18:28:06.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.081" endtime="20201030 18:28:06.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.084" endtime="20201030 18:28:06.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.059" endtime="20201030 18:28:06.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.057" endtime="20201030 18:28:06.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.093" endtime="20201030 18:28:06.381"></status>
</kw>
<msg timestamp="20201030 18:28:06.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023190472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023216833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:06.092" endtime="20201030 18:28:06.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023190472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023216833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:06.385" endtime="20201030 18:28:06.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.394" endtime="20201030 18:28:06.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.089" endtime="20201030 18:28:06.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.087" endtime="20201030 18:28:06.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:06.401" level="INFO">${RESULT} = [{'diff': 2.6360999999999052e-05}, {'diff': 2.6499999999998747e-05}, {'diff': 2.593099999999987e-05}, {'diff': 2.6235999999998927e-05}, {'diff': 2.620900000000273e-05}, {'diff': 2.6221999999999357e-05...</msg>
<status status="PASS" starttime="20201030 18:28:06.397" endtime="20201030 18:28:06.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:06.405" level="INFO">${ACCURACY} = {'diff': [2.6360999999999052e-05, 2.6499999999998747e-05, 2.593099999999987e-05, 2.6235999999998927e-05, 2.620900000000273e-05, 2.6221999999999357e-05, 2.622299999999883e-05, 2.6249999999998497e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:28:06.402" endtime="20201030 18:28:06.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.410" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 18:28:06.409" endtime="20201030 18:28:06.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.415" level="INFO">VALUE: [2.6360999999999052e-05, 2.6499999999998747e-05, 2.593099999999987e-05, 2.6235999999998927e-05, 2.620900000000273e-05, 2.6221999999999357e-05, 2.622299999999883e-05, 2.6249999999998497e-05, 2.588899999999769e-05, 2.6235999999998927e-05, 2.6249999999998497e-05, 2.6250000000001966e-05, 2.6249999999998497e-05, 2.594499999999944e-05, 2.6277000000001632e-05, 2.6249999999998497e-05, 2.5957999999999537e-05, 2.6249999999998497e-05, 2.5930000000000397e-05, 2.6277999999997637e-05, 2.5957999999999537e-05, 2.6249999999998497e-05, 2.6249999999998497e-05, 2.6250000000001966e-05, 2.6235999999998927e-05, 2.5943999999999967e-05, 2.6249999999998497e-05, 2.6278000000001106e-05, 2.594499999999944e-05, 2.6249999999998497e-05, 2.6292000000000676e-05, 2.591699999999683e-05, 2.6221999999999357e-05, 2.6235999999998927e-05, 2.590300000000073e-05, 2.6236000000002396e-05, 2.593099999999987e-05, 2.6278000000001106e-05, 2.6249999999998497e-05, 2.5957999999999537e-05, 2.6221999999999357e-05, 2.5985999999998677e-05, 2.6306000000000246e-05, 2.59170000000003e-05, 2.6250000000001966e-05, 2.6556000000000496e-05, 2.593099999999987e-05, 2.6264000000001536e-05, 2.5957999999999537e-05, 2.6249999999998497e-05]</msg>
<status status="PASS" starttime="20201030 18:28:06.411" endtime="20201030 18:28:06.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.406" endtime="20201030 18:28:06.417"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:06.421" endtime="20201030 18:28:06.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.419" endtime="20201030 18:28:06.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.418" endtime="20201030 18:28:06.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.056" endtime="20201030 18:28:06.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.055" endtime="20201030 18:28:06.442"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.451" endtime="20201030 18:28:06.466"></status>
</kw>
<msg timestamp="20201030 18:28:06.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.449" endtime="20201030 18:28:06.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.468" endtime="20201030 18:28:06.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.471" endtime="20201030 18:28:06.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.447" endtime="20201030 18:28:06.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.444" endtime="20201030 18:28:06.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.480" endtime="20201030 18:28:06.766"></status>
</kw>
<msg timestamp="20201030 18:28:06.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022350403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022377986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:06.478" endtime="20201030 18:28:06.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022350403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022377986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:06.771" endtime="20201030 18:28:06.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.779" endtime="20201030 18:28:06.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.476" endtime="20201030 18:28:06.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.474" endtime="20201030 18:28:06.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:06.786" level="INFO">${RESULT} = [{'diff': 2.7582999999997693e-05}, {'diff': 2.7472000000000607e-05}, {'diff': 2.7458000000001037e-05}, {'diff': 2.6860999999999552e-05}, {'diff': 2.7486000000000177e-05}, {'diff': 2.7194000000001217e-...</msg>
<status status="PASS" starttime="20201030 18:28:06.783" endtime="20201030 18:28:06.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:06.791" level="INFO">${ACCURACY} = {'diff': [2.7582999999997693e-05, 2.7472000000000607e-05, 2.7458000000001037e-05, 2.6860999999999552e-05, 2.7486000000000177e-05, 2.7194000000001217e-05, 2.7124999999999372e-05, 2.715300000000198e-05,...</msg>
<status status="PASS" starttime="20201030 18:28:06.787" endtime="20201030 18:28:06.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.796" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 18:28:06.795" endtime="20201030 18:28:06.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.798" level="INFO">VALUE: [2.7582999999997693e-05, 2.7472000000000607e-05, 2.7458000000001037e-05, 2.6860999999999552e-05, 2.7486000000000177e-05, 2.7194000000001217e-05, 2.7124999999999372e-05, 2.715300000000198e-05, 2.716699999999808e-05, 2.7180000000001647e-05, 2.7110999999999802e-05, 2.7124999999999372e-05, 2.7541999999998457e-05, 2.7165999999998608e-05, 2.7152000000002507e-05, 2.6804999999997803e-05, 2.747300000000008e-05, 2.7138999999998942e-05, 2.720900000000026e-05, 2.716700000000155e-05, 2.7110999999999802e-05, 2.6846999999999982e-05, 2.7166000000002077e-05, 2.7222000000000357e-05, 2.6833000000000412e-05, 2.7513999999999317e-05, 2.715300000000198e-05, 2.715300000000198e-05, 2.7166000000002077e-05, 2.715299999999851e-05, 2.741699999999833e-05, 2.718100000000112e-05, 2.7151999999999038e-05, 2.713900000000241e-05, 2.716699999999808e-05, 2.6860999999999552e-05, 2.719499999999722e-05, 2.687500000000259e-05, 2.716700000000155e-05, 2.718099999999765e-05, 2.6888999999998692e-05, 2.716700000000155e-05, 2.7166000000002077e-05, 2.6874999999999122e-05, 2.744499999999747e-05, 2.716699999999808e-05, 2.715300000000198e-05, 2.7110999999999802e-05, 2.7138999999998942e-05, 2.715300000000198e-05]</msg>
<status status="PASS" starttime="20201030 18:28:06.797" endtime="20201030 18:28:06.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.792" endtime="20201030 18:28:06.800"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:06.804" endtime="20201030 18:28:06.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.802" endtime="20201030 18:28:06.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.801" endtime="20201030 18:28:06.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.443" endtime="20201030 18:28:06.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.442" endtime="20201030 18:28:06.824"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.834" endtime="20201030 18:28:06.849"></status>
</kw>
<msg timestamp="20201030 18:28:06.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.832" endtime="20201030 18:28:06.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.850" endtime="20201030 18:28:06.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.853" endtime="20201030 18:28:06.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.829" endtime="20201030 18:28:06.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.827" endtime="20201030 18:28:06.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.862" endtime="20201030 18:28:07.150"></status>
</kw>
<msg timestamp="20201030 18:28:07.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022313403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022342222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:06.861" endtime="20201030 18:28:07.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022313403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022342222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.154" endtime="20201030 18:28:07.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.163" endtime="20201030 18:28:07.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.858" endtime="20201030 18:28:07.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.856" endtime="20201030 18:28:07.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:07.170" level="INFO">${RESULT} = [{'diff': 2.8818999999999373e-05}, {'diff': 2.7777999999999137e-05}, {'diff': 2.8083000000001662e-05}, {'diff': 2.8069999999998096e-05}, {'diff': 2.8375000000000622e-05}, {'diff': 2.8082999999998193e-...</msg>
<status status="PASS" starttime="20201030 18:28:07.166" endtime="20201030 18:28:07.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:07.174" level="INFO">${ACCURACY} = {'diff': [2.8818999999999373e-05, 2.7777999999999137e-05, 2.8083000000001662e-05, 2.8069999999998096e-05, 2.8375000000000622e-05, 2.8082999999998193e-05, 2.7777000000003133e-05, 2.8389000000000192e-05...</msg>
<status status="PASS" starttime="20201030 18:28:07.171" endtime="20201030 18:28:07.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.179" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 18:28:07.178" endtime="20201030 18:28:07.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.181" level="INFO">VALUE: [2.8818999999999373e-05, 2.7777999999999137e-05, 2.8083000000001662e-05, 2.8069999999998096e-05, 2.8375000000000622e-05, 2.8082999999998193e-05, 2.7777000000003133e-05, 2.8389000000000192e-05, 2.8069999999998096e-05, 2.8097000000001232e-05, 2.8084000000001136e-05, 2.8402999999999762e-05, 2.8054999999999053e-05, 2.8041999999998957e-05, 2.8069999999998096e-05, 2.8402999999999762e-05, 2.8098000000000706e-05, 2.8069999999998096e-05, 2.8083999999997666e-05, 2.8068999999998623e-05, 2.8374999999997152e-05, 2.8069999999998096e-05, 2.8402999999999762e-05, 2.8069999999998096e-05, 2.8388000000000718e-05, 2.8082999999998193e-05, 2.8083999999997666e-05, 2.8402999999999762e-05, 2.8068999999998623e-05, 2.8096999999997763e-05, 2.8375000000000622e-05, 2.8096999999997763e-05, 2.841699999999933e-05, 2.8082999999998193e-05, 2.8125000000000372e-05, 2.8097000000001232e-05, 2.8389000000000192e-05, 2.8096999999997763e-05, 2.8097000000001232e-05, 2.8026999999999913e-05, 2.8084000000001136e-05, 2.8083000000001662e-05, 2.8084000000001136e-05, 2.8389000000000192e-05, 2.8054999999999053e-05, 2.8097000000001232e-05, 2.84309999999989e-05, 2.8068999999998623e-05, 2.8388999999996722e-05, 2.8070000000001566e-05]</msg>
<status status="PASS" starttime="20201030 18:28:07.180" endtime="20201030 18:28:07.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.175" endtime="20201030 18:28:07.183"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:07.186" endtime="20201030 18:28:07.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.185" endtime="20201030 18:28:07.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.184" endtime="20201030 18:28:07.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.825" endtime="20201030 18:28:07.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.825" endtime="20201030 18:28:07.207"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.216" endtime="20201030 18:28:07.233"></status>
</kw>
<msg timestamp="20201030 18:28:07.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.215" endtime="20201030 18:28:07.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.234" endtime="20201030 18:28:07.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.237" endtime="20201030 18:28:07.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.212" endtime="20201030 18:28:07.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.210" endtime="20201030 18:28:07.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.246" endtime="20201030 18:28:07.533"></status>
</kw>
<msg timestamp="20201030 18:28:07.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023089944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023119361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.245" endtime="20201030 18:28:07.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023089944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023119361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.537" endtime="20201030 18:28:07.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.547" endtime="20201030 18:28:07.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.242" endtime="20201030 18:28:07.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.240" endtime="20201030 18:28:07.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:07.554" level="INFO">${RESULT} = [{'diff': 2.9417000000000332e-05}, {'diff': 2.8693999999999248e-05}, {'diff': 2.9292000000000207e-05}, {'diff': 2.8999999999997778e-05}, {'diff': 2.9278000000000637e-05}, {'diff': 2.9304999999996834e-...</msg>
<status status="PASS" starttime="20201030 18:28:07.551" endtime="20201030 18:28:07.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:07.559" level="INFO">${ACCURACY} = {'diff': [2.9417000000000332e-05, 2.8693999999999248e-05, 2.9292000000000207e-05, 2.8999999999997778e-05, 2.9278000000000637e-05, 2.9304999999996834e-05, 2.8985999999998208e-05, 2.9278000000000637e-05...</msg>
<status status="PASS" starttime="20201030 18:28:07.555" endtime="20201030 18:28:07.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.566" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 18:28:07.565" endtime="20201030 18:28:07.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.568" level="INFO">VALUE: [2.9417000000000332e-05, 2.8693999999999248e-05, 2.9292000000000207e-05, 2.8999999999997778e-05, 2.9278000000000637e-05, 2.9304999999996834e-05, 2.8985999999998208e-05, 2.9278000000000637e-05, 2.8999999999997778e-05, 2.9292000000000207e-05, 2.8986000000001677e-05, 2.9305999999999777e-05, 2.9014000000000817e-05, 2.9291000000000733e-05, 2.9305999999999777e-05, 2.8972000000002107e-05, 2.9305000000000303e-05, 2.8957999999999068e-05, 2.9000000000001247e-05, 2.9291000000000733e-05, 2.9318999999999873e-05, 2.9000000000001247e-05, 2.9278000000000637e-05, 2.9000000000001247e-05, 2.8986000000001677e-05, 2.9305000000000303e-05, 2.9292000000000207e-05, 2.9305000000000303e-05, 2.8985999999998208e-05, 2.8985999999998208e-05, 2.9305999999999777e-05, 2.9305000000000303e-05, 2.897299999999811e-05, 2.9292000000000207e-05, 2.9290999999997264e-05, 2.898699999999768e-05, 2.8985999999998208e-05, 2.9305000000000303e-05, 2.9305000000000303e-05, 2.9305999999999777e-05, 2.8985999999998208e-05, 2.9014000000000817e-05, 2.9360999999998583e-05, 2.8999999999997778e-05, 2.9348000000001956e-05, 2.9000000000001247e-05, 2.9291000000000733e-05, 2.9318999999999873e-05, 2.9041999999999957e-05, 2.9290999999997264e-05]</msg>
<status status="PASS" starttime="20201030 18:28:07.567" endtime="20201030 18:28:07.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.562" endtime="20201030 18:28:07.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:07.579" endtime="20201030 18:28:07.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.578" endtime="20201030 18:28:07.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.576" endtime="20201030 18:28:07.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.208" endtime="20201030 18:28:07.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.208" endtime="20201030 18:28:07.609"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.624" endtime="20201030 18:28:07.640"></status>
</kw>
<msg timestamp="20201030 18:28:07.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.621" endtime="20201030 18:28:07.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.642" endtime="20201030 18:28:07.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.644" endtime="20201030 18:28:07.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.617" endtime="20201030 18:28:07.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.614" endtime="20201030 18:28:07.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.654" endtime="20201030 18:28:07.966"></status>
</kw>
<msg timestamp="20201030 18:28:07.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037854972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037885931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.652" endtime="20201030 18:28:07.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037854972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037885931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.970" endtime="20201030 18:28:07.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.978" endtime="20201030 18:28:07.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.650" endtime="20201030 18:28:07.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.648" endtime="20201030 18:28:07.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:07.984" level="INFO">${RESULT} = [{'diff': 3.095899999999707e-05}, {'diff': 3.052799999999495e-05}, {'diff': 3.022199999999642e-05}, {'diff': 3.022199999999642e-05}, {'diff': 3.022199999999642e-05}, {'diff': 3.0250000000002497e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:07.981" endtime="20201030 18:28:07.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:07.989" level="INFO">${ACCURACY} = {'diff': [3.095899999999707e-05, 3.052799999999495e-05, 3.022199999999642e-05, 3.022199999999642e-05, 3.022199999999642e-05, 3.0250000000002497e-05, 2.990199999999832e-05, 3.0222999999995892e-05, 3.02...</msg>
<status status="PASS" starttime="20201030 18:28:07.985" endtime="20201030 18:28:07.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.994" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 18:28:07.993" endtime="20201030 18:28:07.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.996" level="INFO">VALUE: [3.095899999999707e-05, 3.052799999999495e-05, 3.022199999999642e-05, 3.022199999999642e-05, 3.022199999999642e-05, 3.0250000000002497e-05, 2.990199999999832e-05, 3.0222999999995892e-05, 3.022199999999642e-05, 3.020799999999685e-05, 3.020900000000326e-05, 3.020900000000326e-05, 3.023599999999599e-05, 2.9916999999997362e-05, 3.0208000000003787e-05, 3.020900000000326e-05, 2.990199999999832e-05, 2.9888999999998223e-05, 3.048700000000265e-05, 2.9916000000004828e-05, 2.9930000000004398e-05, 3.0208999999996322e-05, 3.0264000000002067e-05, 3.019399999999728e-05, 3.022199999999642e-05, 2.9930000000004398e-05, 3.0236999999995462e-05, 3.017999999999771e-05, 2.9902999999997792e-05, 3.022199999999642e-05, 3.019500000000369e-05, 3.0208000000003787e-05, 2.992999999999746e-05, 3.0208000000003787e-05, 3.0194999999996752e-05, 3.022199999999642e-05, 3.023599999999599e-05, 3.022300000000283e-05, 3.0208000000003787e-05, 3.0249999999995558e-05, 3.0222000000003357e-05, 3.0236000000002927e-05, 3.022199999999642e-05, 2.9916999999997362e-05, 3.022199999999642e-05, 3.016700000000455e-05, 3.0236000000002927e-05, 2.987500000000559e-05, 3.022199999999642e-05, 2.9930999999996932e-05]</msg>
<status status="PASS" starttime="20201030 18:28:07.995" endtime="20201030 18:28:07.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.990" endtime="20201030 18:28:07.998"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:08.001" endtime="20201030 18:28:08.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.000" endtime="20201030 18:28:08.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.999" endtime="20201030 18:28:08.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.611" endtime="20201030 18:28:08.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.610" endtime="20201030 18:28:08.022"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.031" endtime="20201030 18:28:08.046"></status>
</kw>
<msg timestamp="20201030 18:28:08.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.029" endtime="20201030 18:28:08.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.048" endtime="20201030 18:28:08.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.050" endtime="20201030 18:28:08.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.027" endtime="20201030 18:28:08.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.024" endtime="20201030 18:28:08.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.059" endtime="20201030 18:28:08.346"></status>
</kw>
<msg timestamp="20201030 18:28:08.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021724292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021757458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.058" endtime="20201030 18:28:08.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021724292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021757458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.350" endtime="20201030 18:28:08.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.359" endtime="20201030 18:28:08.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.055" endtime="20201030 18:28:08.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.053" endtime="20201030 18:28:08.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:08.365" level="INFO">${RESULT} = [{'diff': 3.316600000000114e-05}, {'diff': 3.302799999999745e-05}, {'diff': 3.341700000000086e-05}, {'diff': 3.318100000000018e-05}, {'diff': 3.322199999999942e-05}, {'diff': 3.322199999999942e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:08.362" endtime="20201030 18:28:08.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:08.369" level="INFO">${ACCURACY} = {'diff': [3.316600000000114e-05, 3.302799999999745e-05, 3.341700000000086e-05, 3.318100000000018e-05, 3.322199999999942e-05, 3.322199999999942e-05, 3.3332999999999974e-05, 3.322199999999942e-05, 3.323...</msg>
<status status="PASS" starttime="20201030 18:28:08.366" endtime="20201030 18:28:08.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.374" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 18:28:08.373" endtime="20201030 18:28:08.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.376" level="INFO">VALUE: [3.316600000000114e-05, 3.302799999999745e-05, 3.341700000000086e-05, 3.318100000000018e-05, 3.322199999999942e-05, 3.322199999999942e-05, 3.3332999999999974e-05, 3.322199999999942e-05, 3.323600000000246e-05, 3.320799999999985e-05, 3.3319000000000404e-05, 3.3332999999999974e-05, 3.341600000000139e-05, 3.323599999999899e-05, 3.3319000000000404e-05, 3.323599999999899e-05, 3.322200000000289e-05, 3.344400000000053e-05, 3.3332999999999974e-05, 3.320799999999985e-05, 3.341700000000086e-05, 3.3332999999999974e-05, 3.329200000000074e-05, 3.320799999999985e-05, 3.337500000000215e-05, 3.327800000000117e-05, 3.319400000000028e-05, 3.319400000000028e-05, 3.327800000000117e-05, 3.3262999999998655e-05, 3.316700000000061e-05, 3.340300000000129e-05, 3.3346999999999544e-05, 3.3388999999998253e-05, 3.330600000000031e-05, 3.341700000000086e-05, 3.322300000000236e-05, 3.340300000000129e-05, 3.334800000000249e-05, 3.3388999999998253e-05, 3.320900000000279e-05, 3.331999999999988e-05, 3.3445e-05, 3.319499999999975e-05, 3.315300000000104e-05, 3.3262999999998655e-05, 3.3346999999999544e-05, 3.325000000000203e-05, 3.320799999999985e-05, 3.322199999999942e-05]</msg>
<status status="PASS" starttime="20201030 18:28:08.375" endtime="20201030 18:28:08.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.370" endtime="20201030 18:28:08.377"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:08.381" endtime="20201030 18:28:08.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.380" endtime="20201030 18:28:08.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.378" endtime="20201030 18:28:08.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.023" endtime="20201030 18:28:08.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.022" endtime="20201030 18:28:08.402"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.410" endtime="20201030 18:28:08.426"></status>
</kw>
<msg timestamp="20201030 18:28:08.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.409" endtime="20201030 18:28:08.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.428" endtime="20201030 18:28:08.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.430" endtime="20201030 18:28:08.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.406" endtime="20201030 18:28:08.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.404" endtime="20201030 18:28:08.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.439" endtime="20201030 18:28:08.725"></status>
</kw>
<msg timestamp="20201030 18:28:08.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225845, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022618931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:08.438" endtime="20201030 18:28:08.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225845, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022618931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:08.729" endtime="20201030 18:28:08.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.737" endtime="20201030 18:28:08.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.435" endtime="20201030 18:28:08.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.433" endtime="20201030 18:28:08.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:08.744" level="INFO">${RESULT} = [{'diff': 3.443099999999796e-05}, {'diff': 3.390300000000179e-05}, {'diff': 3.4290999999998795e-05}, {'diff': 3.4318999999997934e-05}, {'diff': 3.4374999999999684e-05}, {'diff': 3.4361000000000114e-05...</msg>
<status status="PASS" starttime="20201030 18:28:08.740" endtime="20201030 18:28:08.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:08.748" level="INFO">${ACCURACY} = {'diff': [3.443099999999796e-05, 3.390300000000179e-05, 3.4290999999998795e-05, 3.4318999999997934e-05, 3.4374999999999684e-05, 3.4361000000000114e-05, 3.430600000000131e-05, 3.4361000000000114e-05, 3...</msg>
<status status="PASS" starttime="20201030 18:28:08.745" endtime="20201030 18:28:08.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.752" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 18:28:08.751" endtime="20201030 18:28:08.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.755" level="INFO">VALUE: [3.443099999999796e-05, 3.390300000000179e-05, 3.4290999999998795e-05, 3.4318999999997934e-05, 3.4374999999999684e-05, 3.4361000000000114e-05, 3.430600000000131e-05, 3.4361000000000114e-05, 3.423599999999999e-05, 3.418100000000118e-05, 3.429200000000174e-05, 3.4374999999999684e-05, 3.430599999999784e-05, 3.424999999999956e-05, 3.420900000000032e-05, 3.4138999999999003e-05, 3.4388999999999253e-05, 3.4388999999999253e-05, 3.438900000000272e-05, 3.433400000000045e-05, 3.416700000000161e-05, 3.4402999999998823e-05, 3.441699999999839e-05, 3.4333000000000974e-05, 3.436199999999959e-05, 3.4445000000001e-05, 3.424999999999956e-05, 3.426399999999913e-05, 3.443100000000143e-05, 3.444400000000153e-05, 3.422299999999989e-05, 3.441699999999839e-05, 3.4318999999997934e-05, 3.442999999999849e-05, 3.4333000000000974e-05, 3.426399999999913e-05, 3.4374999999999684e-05, 3.420799999999738e-05, 3.4346999999997074e-05, 3.44580000000011e-05, 3.431999999999741e-05, 3.4319000000001404e-05, 3.42779999999987e-05, 3.443000000000196e-05, 3.4333000000000974e-05, 3.419400000000128e-05, 3.4402999999998823e-05, 3.430600000000131e-05, 3.4333000000000974e-05, 3.424999999999956e-05]</msg>
<status status="PASS" starttime="20201030 18:28:08.753" endtime="20201030 18:28:08.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.749" endtime="20201030 18:28:08.757"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:08.760" endtime="20201030 18:28:08.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.759" endtime="20201030 18:28:08.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.758" endtime="20201030 18:28:08.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.403" endtime="20201030 18:28:08.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.402" endtime="20201030 18:28:08.781"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.790" endtime="20201030 18:28:08.806"></status>
</kw>
<msg timestamp="20201030 18:28:08.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.788" endtime="20201030 18:28:08.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.808" endtime="20201030 18:28:08.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.810" endtime="20201030 18:28:08.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.786" endtime="20201030 18:28:08.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.784" endtime="20201030 18:28:08.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.819" endtime="20201030 18:28:09.105"></status>
</kw>
<msg timestamp="20201030 18:28:09.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021649042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021684167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.818" endtime="20201030 18:28:09.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021649042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021684167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.109" endtime="20201030 18:28:09.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.117" endtime="20201030 18:28:09.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.815" endtime="20201030 18:28:09.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.813" endtime="20201030 18:28:09.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:09.124" level="INFO">${RESULT} = [{'diff': 3.5125000000000434e-05}, {'diff': 3.5111000000000864e-05}, {'diff': 3.5347000000001544e-05}, {'diff': 3.522200000000142e-05}, {'diff': 3.544399999999906e-05}, {'diff': 3.522200000000142e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:09.121" endtime="20201030 18:28:09.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:09.129" level="INFO">${ACCURACY} = {'diff': [3.5125000000000434e-05, 3.5111000000000864e-05, 3.5347000000001544e-05, 3.522200000000142e-05, 3.544399999999906e-05, 3.522200000000142e-05, 3.5305000000002834e-05, 3.516700000000261e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:28:09.125" endtime="20201030 18:28:09.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.133" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 18:28:09.132" endtime="20201030 18:28:09.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.136" level="INFO">VALUE: [3.5125000000000434e-05, 3.5111000000000864e-05, 3.5347000000001544e-05, 3.522200000000142e-05, 3.544399999999906e-05, 3.522200000000142e-05, 3.5305000000002834e-05, 3.516700000000261e-05, 3.5346999999998074e-05, 3.5304999999999365e-05, 3.542999999999949e-05, 3.525000000000056e-05, 3.5402999999999823e-05, 3.543099999999896e-05, 3.5139000000000004e-05, 3.544399999999906e-05, 3.5166999999999143e-05, 3.52779999999997e-05, 3.519500000000175e-05, 3.519500000000175e-05, 3.5388999999996784e-05, 3.5346999999998074e-05, 3.534799999999755e-05, 3.5402999999999823e-05, 3.544499999999853e-05, 3.518099999999871e-05, 3.519500000000175e-05, 3.519500000000175e-05, 3.5139000000000004e-05, 3.543100000000243e-05, 3.5152999999999573e-05, 3.525000000000056e-05, 3.526400000000013e-05, 3.5332999999998504e-05, 3.5290999999999795e-05, 3.523700000000046e-05, 3.520799999999838e-05, 3.541599999999992e-05, 3.5332999999998504e-05, 3.5111000000000864e-05, 3.542999999999949e-05, 3.5333000000001974e-05, 3.522200000000142e-05, 3.541599999999992e-05, 3.5318999999998935e-05, 3.542999999999949e-05, 3.52779999999997e-05, 3.544399999999906e-05, 3.5111000000000864e-05, 3.5416999999999393e-05]</msg>
<status status="PASS" starttime="20201030 18:28:09.134" endtime="20201030 18:28:09.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.130" endtime="20201030 18:28:09.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:09.141" endtime="20201030 18:28:09.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.139" endtime="20201030 18:28:09.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.138" endtime="20201030 18:28:09.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.782" endtime="20201030 18:28:09.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.781" endtime="20201030 18:28:09.161"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.170" endtime="20201030 18:28:09.186"></status>
</kw>
<msg timestamp="20201030 18:28:09.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.169" endtime="20201030 18:28:09.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.188" endtime="20201030 18:28:09.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.190" endtime="20201030 18:28:09.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.166" endtime="20201030 18:28:09.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.164" endtime="20201030 18:28:09.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.199" endtime="20201030 18:28:09.486"></status>
</kw>
<msg timestamp="20201030 18:28:09.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0218, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021836819, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201030 18:28:09.198" endtime="20201030 18:28:09.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0218, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021836819, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201030 18:28:09.490" endtime="20201030 18:28:09.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.498" endtime="20201030 18:28:09.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.195" endtime="20201030 18:28:09.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.193" endtime="20201030 18:28:09.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:09.504" level="INFO">${RESULT} = [{'diff': 3.6819000000000435e-05}, {'diff': 3.594399999999956e-05}, {'diff': 3.625000000000156e-05}, {'diff': 3.6417000000000394e-05}, {'diff': 3.623599999999852e-05}, {'diff': 3.6403000000000824e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:09.501" endtime="20201030 18:28:09.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:09.509" level="INFO">${ACCURACY} = {'diff': [3.6819000000000435e-05, 3.594399999999956e-05, 3.625000000000156e-05, 3.6417000000000394e-05, 3.623599999999852e-05, 3.6403000000000824e-05, 3.6360999999998644e-05, 3.619399999999981e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:28:09.505" endtime="20201030 18:28:09.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.513" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 18:28:09.512" endtime="20201030 18:28:09.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.515" level="INFO">VALUE: [3.6819000000000435e-05, 3.594399999999956e-05, 3.625000000000156e-05, 3.6417000000000394e-05, 3.623599999999852e-05, 3.6403000000000824e-05, 3.6360999999998644e-05, 3.619399999999981e-05, 3.631999999999941e-05, 3.641599999999745e-05, 3.6167000000000143e-05, 3.631999999999941e-05, 3.6346999999999074e-05, 3.632000000000288e-05, 3.624999999999809e-05, 3.6167000000000143e-05, 3.62780000000007e-05, 3.6388999999997784e-05, 3.6375000000001684e-05, 3.630599999999984e-05, 3.6417000000000394e-05, 3.623700000000146e-05, 3.641599999999745e-05, 3.6305000000000365e-05, 3.6290999999997325e-05, 3.620799999999938e-05, 3.6332999999999505e-05, 3.6305000000000365e-05, 3.644400000000006e-05, 3.644400000000006e-05, 3.615199999999763e-05, 3.6305000000000365e-05, 3.6375000000001684e-05, 3.623599999999852e-05, 3.6403000000000824e-05, 3.618000000000024e-05, 3.643000000000049e-05, 3.620800000000285e-05, 3.6346999999999074e-05, 3.619399999999981e-05, 3.6430999999999963e-05, 3.624999999999809e-05, 3.6305000000000365e-05, 3.619399999999981e-05, 3.623599999999852e-05, 3.6180999999999713e-05, 3.6430999999999963e-05, 3.62780000000007e-05, 3.6333000000002974e-05, 3.6360999999998644e-05]</msg>
<status status="PASS" starttime="20201030 18:28:09.514" endtime="20201030 18:28:09.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.509" endtime="20201030 18:28:09.517"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:09.520" endtime="20201030 18:28:09.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.519" endtime="20201030 18:28:09.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.518" endtime="20201030 18:28:09.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.162" endtime="20201030 18:28:09.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.162" endtime="20201030 18:28:09.541"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.550" endtime="20201030 18:28:09.567"></status>
</kw>
<msg timestamp="20201030 18:28:09.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.548" endtime="20201030 18:28:09.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.568" endtime="20201030 18:28:09.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.571" endtime="20201030 18:28:09.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.546" endtime="20201030 18:28:09.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.543" endtime="20201030 18:28:09.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.579" endtime="20201030 18:28:09.865"></status>
</kw>
<msg timestamp="20201030 18:28:09.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022751875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022789028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.578" endtime="20201030 18:28:09.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022751875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022789028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.869" endtime="20201030 18:28:09.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.880" endtime="20201030 18:28:09.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.575" endtime="20201030 18:28:09.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.574" endtime="20201030 18:28:09.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:09.889" level="INFO">${RESULT} = [{'diff': 3.7152999999998104e-05}, {'diff': 3.704200000000102e-05}, {'diff': 3.7347000000000075e-05}, {'diff': 3.7318999999997465e-05}, {'diff': 3.7360999999999644e-05}, {'diff': 3.7333000000000505e-0...</msg>
<status status="PASS" starttime="20201030 18:28:09.885" endtime="20201030 18:28:09.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:09.893" level="INFO">${ACCURACY} = {'diff': [3.7152999999998104e-05, 3.704200000000102e-05, 3.7347000000000075e-05, 3.7318999999997465e-05, 3.7360999999999644e-05, 3.7333000000000505e-05, 3.7304999999997895e-05, 3.740200000000235e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:09.890" endtime="20201030 18:28:09.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.898" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 18:28:09.897" endtime="20201030 18:28:09.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.903" level="INFO">VALUE: [3.7152999999998104e-05, 3.704200000000102e-05, 3.7347000000000075e-05, 3.7318999999997465e-05, 3.7360999999999644e-05, 3.7333000000000505e-05, 3.7304999999997895e-05, 3.740200000000235e-05, 3.743000000000149e-05, 3.7318999999997465e-05, 3.7139000000002004e-05, 3.7333000000000505e-05, 3.7318999999997465e-05, 3.7347000000000075e-05, 3.7360999999999644e-05, 3.726399999999866e-05, 3.7319000000000935e-05, 3.7374999999999214e-05, 3.722199999999995e-05, 3.7333000000000505e-05, 3.7333000000000505e-05, 3.726400000000213e-05, 3.732000000000041e-05, 3.730599999999737e-05, 3.720800000000038e-05, 3.7374999999999214e-05, 3.7402999999998354e-05, 3.7403000000001824e-05, 3.724999999999909e-05, 3.7181000000000713e-05, 3.729200000000127e-05, 3.7431000000000964e-05, 3.724999999999909e-05, 3.729200000000127e-05, 3.7402999999998354e-05, 3.730599999999737e-05, 3.722299999999942e-05, 3.7290999999998325e-05, 3.723599999999952e-05, 3.7277000000002225e-05, 3.74590000000001e-05, 3.71659999999982e-05, 3.720800000000038e-05, 3.7374999999999214e-05, 3.723599999999952e-05, 3.738800000000278e-05, 3.7388999999998784e-05, 3.723599999999952e-05, 3.726399999999866e-05, 3.740199999999888e-05]</msg>
<status status="PASS" starttime="20201030 18:28:09.899" endtime="20201030 18:28:09.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.894" endtime="20201030 18:28:09.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:09.909" endtime="20201030 18:28:09.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.907" endtime="20201030 18:28:09.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.906" endtime="20201030 18:28:09.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.542" endtime="20201030 18:28:09.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.541" endtime="20201030 18:28:09.929"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.938" endtime="20201030 18:28:09.954"></status>
</kw>
<msg timestamp="20201030 18:28:09.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.936" endtime="20201030 18:28:09.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.956" endtime="20201030 18:28:09.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.958" endtime="20201030 18:28:09.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.934" endtime="20201030 18:28:09.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.932" endtime="20201030 18:28:09.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.967" endtime="20201030 18:28:10.253"></status>
</kw>
<msg timestamp="20201030 18:28:10.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021940486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021978556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.966" endtime="20201030 18:28:10.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021940486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021978556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.257" endtime="20201030 18:28:10.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.265" endtime="20201030 18:28:10.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.963" endtime="20201030 18:28:10.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.962" endtime="20201030 18:28:10.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:10.272" level="INFO">${RESULT} = [{'diff': 3.807000000000116e-05}, {'diff': 3.7888999999999284e-05}, {'diff': 3.8361000000000645e-05}, {'diff': 3.8347000000001075e-05}, {'diff': 3.8403000000002824e-05}, {'diff': 3.8333000000001505e-0...</msg>
<status status="PASS" starttime="20201030 18:28:10.269" endtime="20201030 18:28:10.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:10.277" level="INFO">${ACCURACY} = {'diff': [3.807000000000116e-05, 3.7888999999999284e-05, 3.8361000000000645e-05, 3.8347000000001075e-05, 3.8403000000002824e-05, 3.8333000000001505e-05, 3.823600000000052e-05, 3.829200000000227e-05, 3...</msg>
<status status="PASS" starttime="20201030 18:28:10.273" endtime="20201030 18:28:10.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.281" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 18:28:10.280" endtime="20201030 18:28:10.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.284" level="INFO">VALUE: [3.807000000000116e-05, 3.7888999999999284e-05, 3.8361000000000645e-05, 3.8347000000001075e-05, 3.8403000000002824e-05, 3.8333000000001505e-05, 3.823600000000052e-05, 3.829200000000227e-05, 3.8416999999998924e-05, 3.825000000000009e-05, 3.822200000000095e-05, 3.8194999999997814e-05, 3.82919999999988e-05, 3.8180999999998244e-05, 3.827799999999923e-05, 3.82919999999988e-05, 3.8222999999996954e-05, 3.8166999999998674e-05, 3.8388999999999784e-05, 3.818000000000224e-05, 3.822300000000042e-05, 3.8402999999999354e-05, 3.8167000000002144e-05, 3.829200000000227e-05, 3.8431000000001964e-05, 3.845800000000163e-05, 3.827799999999923e-05, 3.8181000000001714e-05, 3.8276999999999756e-05, 3.8304999999998895e-05, 3.820800000000138e-05, 3.8375000000000214e-05, 3.822199999999748e-05, 3.822199999999748e-05, 3.81659999999992e-05, 3.8290999999999326e-05, 3.8402999999999354e-05, 3.8304999999998895e-05, 3.8346999999997605e-05, 3.8417000000002394e-05, 3.822200000000095e-05, 3.829200000000227e-05, 3.8347000000001075e-05, 3.8347000000001075e-05, 3.822200000000095e-05, 3.823600000000052e-05, 3.826399999999966e-05, 3.850000000000034e-05, 3.833399999999751e-05, 3.823600000000052e-05]</msg>
<status status="PASS" starttime="20201030 18:28:10.282" endtime="20201030 18:28:10.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.278" endtime="20201030 18:28:10.285"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:10.289" endtime="20201030 18:28:10.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.287" endtime="20201030 18:28:10.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.286" endtime="20201030 18:28:10.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.930" endtime="20201030 18:28:10.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.930" endtime="20201030 18:28:10.310"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.318" endtime="20201030 18:28:10.333"></status>
</kw>
<msg timestamp="20201030 18:28:10.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.317" endtime="20201030 18:28:10.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.335" endtime="20201030 18:28:10.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.338" endtime="20201030 18:28:10.339"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.314" endtime="20201030 18:28:10.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.312" endtime="20201030 18:28:10.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.349" endtime="20201030 18:28:10.657"></status>
</kw>
<msg timestamp="20201030 18:28:10.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021818083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.347" endtime="20201030 18:28:10.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021818083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.666" endtime="20201030 18:28:10.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.681" endtime="20201030 18:28:10.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.344" endtime="20201030 18:28:10.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.341" endtime="20201030 18:28:10.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:10.688" level="INFO">${RESULT} = [{'diff': 3.965199999999766e-05}, {'diff': 3.904199999999955e-05}, {'diff': 3.919399999999934e-05}, {'diff': 3.9430999999999494e-05}, {'diff': 3.923599999999805e-05}, {'diff': 3.9375000000001215e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:10.684" endtime="20201030 18:28:10.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:10.692" level="INFO">${ACCURACY} = {'diff': [3.965199999999766e-05, 3.904199999999955e-05, 3.919399999999934e-05, 3.9430999999999494e-05, 3.923599999999805e-05, 3.9375000000001215e-05, 3.936200000000112e-05, 3.9153000000000104e-05, 3.9...</msg>
<status status="PASS" starttime="20201030 18:28:10.689" endtime="20201030 18:28:10.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.697" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 18:28:10.696" endtime="20201030 18:28:10.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.699" level="INFO">VALUE: [3.965199999999766e-05, 3.904199999999955e-05, 3.919399999999934e-05, 3.9430999999999494e-05, 3.923599999999805e-05, 3.9375000000001215e-05, 3.936200000000112e-05, 3.9153000000000104e-05, 3.9389000000000784e-05, 3.9430999999999494e-05, 3.9403000000000354e-05, 3.933399999999851e-05, 3.9222999999997954e-05, 3.9180999999999244e-05, 3.9403000000000354e-05, 3.9403000000000354e-05, 3.923700000000099e-05, 3.9458999999998634e-05, 3.941600000000045e-05, 3.933399999999851e-05, 3.9166999999999674e-05, 3.941600000000045e-05, 3.9333000000002505e-05, 3.91660000000002e-05, 3.917999999999977e-05, 3.930599999999937e-05, 3.9304999999999896e-05, 3.9346999999998605e-05, 3.919399999999934e-05, 3.926400000000066e-05, 3.9375000000001215e-05, 3.947199999999873e-05, 3.9153000000000104e-05, 3.920799999999891e-05, 3.9375000000001215e-05, 3.943000000000002e-05, 3.920800000000238e-05, 3.9166999999999674e-05, 3.9194999999998814e-05, 3.9347000000002075e-05, 3.920799999999891e-05, 3.9402999999996885e-05, 3.9430999999999494e-05, 3.926400000000066e-05, 3.9139000000000534e-05, 3.941600000000045e-05, 3.9430999999999494e-05, 3.923600000000152e-05, 3.922200000000195e-05, 3.9416999999999924e-05]</msg>
<status status="PASS" starttime="20201030 18:28:10.698" endtime="20201030 18:28:10.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.693" endtime="20201030 18:28:10.701"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:10.705" endtime="20201030 18:28:10.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.703" endtime="20201030 18:28:10.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.702" endtime="20201030 18:28:10.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.310" endtime="20201030 18:28:10.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.310" endtime="20201030 18:28:10.725"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.734" endtime="20201030 18:28:10.752"></status>
</kw>
<msg timestamp="20201030 18:28:10.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.733" endtime="20201030 18:28:10.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.754" endtime="20201030 18:28:10.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.756" endtime="20201030 18:28:10.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.730" endtime="20201030 18:28:10.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.728" endtime="20201030 18:28:10.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.766" endtime="20201030 18:28:11.052"></status>
</kw>
<msg timestamp="20201030 18:28:11.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023375028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023415847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.764" endtime="20201030 18:28:11.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023375028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023415847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.056" endtime="20201030 18:28:11.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.065" endtime="20201030 18:28:11.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.762" endtime="20201030 18:28:11.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.760" endtime="20201030 18:28:11.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:11.071" level="INFO">${RESULT} = [{'diff': 4.0819000000000966e-05}, {'diff': 4.0181000000000244e-05}, {'diff': 4.024999999999862e-05}, {'diff': 4.0445000000000064e-05}, {'diff': 4.023599999999905e-05}, {'diff': 4.0167000000000674e-05...</msg>
<status status="PASS" starttime="20201030 18:28:11.068" endtime="20201030 18:28:11.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:11.076" level="INFO">${ACCURACY} = {'diff': [4.0819000000000966e-05, 4.0181000000000244e-05, 4.024999999999862e-05, 4.0445000000000064e-05, 4.023599999999905e-05, 4.0167000000000674e-05, 4.0138999999998065e-05, 4.027800000000123e-05, 4...</msg>
<status status="PASS" starttime="20201030 18:28:11.072" endtime="20201030 18:28:11.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.080" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 18:28:11.079" endtime="20201030 18:28:11.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.083" level="INFO">VALUE: [4.0819000000000966e-05, 4.0181000000000244e-05, 4.024999999999862e-05, 4.0445000000000064e-05, 4.023599999999905e-05, 4.0167000000000674e-05, 4.0138999999998065e-05, 4.027800000000123e-05, 4.0445000000000064e-05, 4.033400000000298e-05, 4.026399999999819e-05, 4.023600000000252e-05, 4.0208999999999384e-05, 4.0445000000000064e-05, 4.0374999999998745e-05, 4.0375000000002215e-05, 4.0403000000001354e-05, 4.038799999999884e-05, 4.020799999999991e-05, 4.022199999999948e-05, 4.0333000000000035e-05, 4.051399999999844e-05, 4.0360999999999175e-05, 4.019400000000034e-05, 4.020799999999991e-05, 4.0417000000000924e-05, 4.0346999999999605e-05, 4.045800000000016e-05, 4.031999999999994e-05, 4.044400000000059e-05, 4.026400000000166e-05, 4.02920000000008e-05, 4.0403000000001354e-05, 4.0360999999999175e-05, 4.026400000000166e-05, 4.019400000000034e-05, 4.026400000000166e-05, 4.023599999999905e-05, 4.0445000000000064e-05, 4.0153000000001104e-05, 4.0417000000000924e-05, 4.023599999999905e-05, 4.033400000000298e-05, 4.0290999999997856e-05, 4.0152999999997635e-05, 4.030600000000037e-05, 4.031999999999994e-05, 4.0374999999998745e-05, 4.0152999999997635e-05, 4.030600000000037e-05]</msg>
<status status="PASS" starttime="20201030 18:28:11.082" endtime="20201030 18:28:11.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.077" endtime="20201030 18:28:11.087"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:11.090" endtime="20201030 18:28:11.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.089" endtime="20201030 18:28:11.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.088" endtime="20201030 18:28:11.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.726" endtime="20201030 18:28:11.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.726" endtime="20201030 18:28:11.112"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.121" endtime="20201030 18:28:11.137"></status>
</kw>
<msg timestamp="20201030 18:28:11.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.119" endtime="20201030 18:28:11.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.139" endtime="20201030 18:28:11.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.141" endtime="20201030 18:28:11.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.116" endtime="20201030 18:28:11.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.114" endtime="20201030 18:28:11.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.151" endtime="20201030 18:28:11.436"></status>
</kw>
<msg timestamp="20201030 18:28:11.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022668986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022710319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.149" endtime="20201030 18:28:11.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022668986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022710319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.440" endtime="20201030 18:28:11.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.448" endtime="20201030 18:28:11.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.147" endtime="20201030 18:28:11.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.145" endtime="20201030 18:28:11.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:11.455" level="INFO">${RESULT} = [{'diff': 4.1333000000001036e-05}, {'diff': 4.094400000000109e-05}, {'diff': 4.118000000000177e-05}, {'diff': 4.11799999999983e-05}, {'diff': 4.1416999999998455e-05}, {'diff': 4.127799999999876e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:11.452" endtime="20201030 18:28:11.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:11.461" level="INFO">${ACCURACY} = {'diff': [4.1333000000001036e-05, 4.094400000000109e-05, 4.118000000000177e-05, 4.11799999999983e-05, 4.1416999999998455e-05, 4.127799999999876e-05, 4.1361000000000175e-05, 4.120800000000091e-05, 4.13...</msg>
<status status="PASS" starttime="20201030 18:28:11.456" endtime="20201030 18:28:11.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.465" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 18:28:11.464" endtime="20201030 18:28:11.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.468" level="INFO">VALUE: [4.1333000000001036e-05, 4.094400000000109e-05, 4.118000000000177e-05, 4.11799999999983e-05, 4.1416999999998455e-05, 4.127799999999876e-05, 4.1361000000000175e-05, 4.120800000000091e-05, 4.1347000000000605e-05, 4.123600000000005e-05, 4.122199999999701e-05, 4.127799999999876e-05, 4.120800000000091e-05, 4.1445000000001064e-05, 4.1388999999999315e-05, 4.1347000000000605e-05, 4.124999999999962e-05, 4.134800000000008e-05, 4.1431000000001494e-05, 4.134800000000008e-05, 4.1125000000002965e-05, 4.1417000000001924e-05, 4.1389000000002785e-05, 4.124999999999962e-05, 4.1319000000001466e-05, 4.1402999999998885e-05, 4.11119999999994e-05, 4.141600000000245e-05, 4.1431000000001494e-05, 4.1319000000001466e-05, 4.1333000000001036e-05, 4.124999999999962e-05, 4.118000000000177e-05, 4.11660000000022e-05, 4.1388999999999315e-05, 4.1276999999999286e-05, 4.1388999999999315e-05, 4.1305000000001896e-05, 4.1374999999999745e-05, 4.123600000000005e-05, 4.1416999999998455e-05, 4.1374999999999745e-05, 4.1304999999998426e-05, 4.1389000000002785e-05, 4.1374999999999745e-05, 4.1181000000001244e-05, 4.131999999999747e-05, 4.122200000000048e-05, 4.1403000000002355e-05, 4.1402999999998885e-05]</msg>
<status status="PASS" starttime="20201030 18:28:11.466" endtime="20201030 18:28:11.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.461" endtime="20201030 18:28:11.469"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:11.473" endtime="20201030 18:28:11.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.471" endtime="20201030 18:28:11.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.470" endtime="20201030 18:28:11.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.112" endtime="20201030 18:28:11.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.112" endtime="20201030 18:28:11.494"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.503" endtime="20201030 18:28:11.519"></status>
</kw>
<msg timestamp="20201030 18:28:11.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.501" endtime="20201030 18:28:11.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.521" endtime="20201030 18:28:11.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.523" endtime="20201030 18:28:11.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.499" endtime="20201030 18:28:11.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.496" endtime="20201030 18:28:11.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.533" endtime="20201030 18:28:11.820"></status>
</kw>
<msg timestamp="20201030 18:28:11.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022311528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022354542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.531" endtime="20201030 18:28:11.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022311528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022354542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.825" endtime="20201030 18:28:11.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.833" endtime="20201030 18:28:11.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.528" endtime="20201030 18:28:11.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.527" endtime="20201030 18:28:11.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:11.840" level="INFO">${RESULT} = [{'diff': 4.301400000000094e-05}, {'diff': 4.197200000000123e-05}, {'diff': 4.2361000000001175e-05}, {'diff': 4.2318999999998996e-05}, {'diff': 4.222199999999801e-05}, {'diff': 4.242999999999955e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:11.837" endtime="20201030 18:28:11.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:11.844" level="INFO">${ACCURACY} = {'diff': [4.301400000000094e-05, 4.197200000000123e-05, 4.2361000000001175e-05, 4.2318999999998996e-05, 4.222199999999801e-05, 4.242999999999955e-05, 4.24860000000013e-05, 4.2346999999998136e-05, 4.22...</msg>
<status status="PASS" starttime="20201030 18:28:11.841" endtime="20201030 18:28:11.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.849" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 18:28:11.848" endtime="20201030 18:28:11.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.852" level="INFO">VALUE: [4.301400000000094e-05, 4.197200000000123e-05, 4.2361000000001175e-05, 4.2318999999998996e-05, 4.222199999999801e-05, 4.242999999999955e-05, 4.24860000000013e-05, 4.2346999999998136e-05, 4.222199999999801e-05, 4.225000000000062e-05, 4.2416999999999455e-05, 4.2430999999999025e-05, 4.222200000000148e-05, 4.222200000000148e-05, 4.2346999999998136e-05, 4.220799999999844e-05, 4.225000000000062e-05, 4.225000000000062e-05, 4.2375000000000745e-05, 4.226400000000019e-05, 4.2347000000001606e-05, 4.233399999999804e-05, 4.2416999999999455e-05, 4.232000000000194e-05, 4.2402999999999885e-05, 4.227799999999976e-05, 4.2374999999997276e-05, 4.2180999999998775e-05, 4.2458999999998165e-05, 4.231999999999847e-05, 4.2209000000001384e-05, 4.223599999999758e-05, 4.229199999999933e-05, 4.241599999999998e-05, 4.24860000000013e-05, 4.223599999999758e-05, 4.2375000000000745e-05, 4.2431000000002494e-05, 4.2389000000000315e-05, 4.2416999999999455e-05, 4.2332999999998566e-05, 4.242999999999955e-05, 4.222200000000148e-05, 4.2361000000001175e-05, 4.225000000000062e-05, 4.224999999999715e-05, 4.242999999999955e-05, 4.2389000000000315e-05, 4.2416999999999455e-05, 4.2472999999997735e-05]</msg>
<status status="PASS" starttime="20201030 18:28:11.850" endtime="20201030 18:28:11.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.845" endtime="20201030 18:28:11.853"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:11.857" endtime="20201030 18:28:11.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.855" endtime="20201030 18:28:11.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.854" endtime="20201030 18:28:11.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.495" endtime="20201030 18:28:11.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.494" endtime="20201030 18:28:11.878"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.887" endtime="20201030 18:28:11.904"></status>
</kw>
<msg timestamp="20201030 18:28:11.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.885" endtime="20201030 18:28:11.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.906" endtime="20201030 18:28:11.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.908" endtime="20201030 18:28:11.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.882" endtime="20201030 18:28:11.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.880" endtime="20201030 18:28:11.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.918" endtime="20201030 18:28:12.203"></status>
</kw>
<msg timestamp="20201030 18:28:12.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023618764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023662236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.916" endtime="20201030 18:28:12.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023618764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023662236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.207" endtime="20201030 18:28:12.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.216" endtime="20201030 18:28:12.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.913" endtime="20201030 18:28:12.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.911" endtime="20201030 18:28:12.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:12.223" level="INFO">${RESULT} = [{'diff': 4.347199999999926e-05}, {'diff': 4.3124999999998026e-05}, {'diff': 4.325000000000162e-05}, {'diff': 4.3374999999998276e-05}, {'diff': 4.3374999999998276e-05}, {'diff': 4.333400000000251e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:12.219" endtime="20201030 18:28:12.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:12.227" level="INFO">${ACCURACY} = {'diff': [4.347199999999926e-05, 4.3124999999998026e-05, 4.325000000000162e-05, 4.3374999999998276e-05, 4.3374999999998276e-05, 4.333400000000251e-05, 4.3194999999999345e-05, 4.329200000000033e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:28:12.224" endtime="20201030 18:28:12.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.232" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 18:28:12.231" endtime="20201030 18:28:12.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.234" level="INFO">VALUE: [4.347199999999926e-05, 4.3124999999998026e-05, 4.325000000000162e-05, 4.3374999999998276e-05, 4.3374999999998276e-05, 4.333400000000251e-05, 4.3194999999999345e-05, 4.329200000000033e-05, 4.3444999999999595e-05, 4.326399999999772e-05, 4.323600000000205e-05, 4.326299999999825e-05, 4.3332999999999566e-05, 4.327699999999782e-05, 4.3346999999999136e-05, 4.343000000000055e-05, 4.329099999999739e-05, 4.323599999999858e-05, 4.322200000000248e-05, 4.341600000000098e-05, 4.3332999999999566e-05, 4.3402999999997416e-05, 4.3360999999998706e-05, 4.329200000000033e-05, 4.3417000000000455e-05, 4.33059999999999e-05, 4.3389000000001315e-05, 4.3153000000000635e-05, 4.3375000000001745e-05, 4.323599999999858e-05, 4.331999999999947e-05, 4.3375000000001745e-05, 4.3167000000000205e-05, 4.3346999999999136e-05, 4.3389000000001315e-05, 4.3374999999998276e-05, 4.3403000000000885e-05, 4.3180999999999775e-05, 4.33059999999999e-05, 4.3333000000003036e-05, 4.3374999999998276e-05, 4.3167000000000205e-05, 4.327699999999782e-05, 4.325000000000162e-05, 4.3223000000001954e-05, 4.344400000000012e-05, 4.331999999999947e-05, 4.323599999999858e-05, 4.3346999999999136e-05, 4.344399999999665e-05]</msg>
<status status="PASS" starttime="20201030 18:28:12.233" endtime="20201030 18:28:12.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.228" endtime="20201030 18:28:12.237"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:12.241" endtime="20201030 18:28:12.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.239" endtime="20201030 18:28:12.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.238" endtime="20201030 18:28:12.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.879" endtime="20201030 18:28:12.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.878" endtime="20201030 18:28:12.261"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.270" endtime="20201030 18:28:12.287"></status>
</kw>
<msg timestamp="20201030 18:28:12.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.269" endtime="20201030 18:28:12.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.289" endtime="20201030 18:28:12.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.291" endtime="20201030 18:28:12.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.266" endtime="20201030 18:28:12.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.264" endtime="20201030 18:28:12.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.301" endtime="20201030 18:28:12.587"></status>
</kw>
<msg timestamp="20201030 18:28:12.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022565847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.299" endtime="20201030 18:28:12.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022565847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.591" endtime="20201030 18:28:12.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.599" endtime="20201030 18:28:12.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.296" endtime="20201030 18:28:12.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.294" endtime="20201030 18:28:12.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:12.606" level="INFO">${RESULT} = [{'diff': 4.457000000000072e-05}, {'diff': 4.405499999999771e-05}, {'diff': 4.426400000000219e-05}, {'diff': 4.4305000000001427e-05}, {'diff': 4.420799999999697e-05}, {'diff': 4.420800000000044e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:12.603" endtime="20201030 18:28:12.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:12.612" level="INFO">${ACCURACY} = {'diff': [4.457000000000072e-05, 4.405499999999771e-05, 4.426400000000219e-05, 4.4305000000001427e-05, 4.420799999999697e-05, 4.420800000000044e-05, 4.422200000000001e-05, 4.420800000000044e-05, 4.436...</msg>
<status status="PASS" starttime="20201030 18:28:12.608" endtime="20201030 18:28:12.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.616" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 18:28:12.615" endtime="20201030 18:28:12.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.619" level="INFO">VALUE: [4.457000000000072e-05, 4.405499999999771e-05, 4.426400000000219e-05, 4.4305000000001427e-05, 4.420799999999697e-05, 4.420800000000044e-05, 4.422200000000001e-05, 4.420800000000044e-05, 4.4360999999999706e-05, 4.4333000000000566e-05, 4.4374999999999276e-05, 4.4360999999999706e-05, 4.4402999999998416e-05, 4.4430999999997556e-05, 4.4347000000000136e-05, 4.419400000000087e-05, 4.4444999999997126e-05, 4.43060000000009e-05, 4.4360999999999706e-05, 4.4195000000000345e-05, 4.426399999999872e-05, 4.4445000000000595e-05, 4.4374999999999276e-05, 4.4195000000000345e-05, 4.4222999999999485e-05, 4.429099999999839e-05, 4.4195000000000345e-05, 4.4402999999998416e-05, 4.427799999999829e-05, 4.436200000000265e-05, 4.433400000000004e-05, 4.426299999999925e-05, 4.4402999999998416e-05, 4.416600000000173e-05, 4.424999999999915e-05, 4.4431000000001025e-05, 4.443000000000155e-05, 4.4388999999998846e-05, 4.444400000000112e-05, 4.4374999999999276e-05, 4.4402999999998416e-05, 4.444399999999765e-05, 4.41800000000013e-05, 4.44860000000033e-05, 4.431899999999753e-05, 4.4403000000001885e-05, 4.4402999999998416e-05, 4.420799999999697e-05, 4.429200000000133e-05, 4.43060000000009e-05]</msg>
<status status="PASS" starttime="20201030 18:28:12.618" endtime="20201030 18:28:12.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.613" endtime="20201030 18:28:12.625"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:12.629" endtime="20201030 18:28:12.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.627" endtime="20201030 18:28:12.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.626" endtime="20201030 18:28:12.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.262" endtime="20201030 18:28:12.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.262" endtime="20201030 18:28:12.650"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.659" endtime="20201030 18:28:12.674"></status>
</kw>
<msg timestamp="20201030 18:28:12.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.657" endtime="20201030 18:28:12.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.676" endtime="20201030 18:28:12.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.678" endtime="20201030 18:28:12.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.654" endtime="20201030 18:28:12.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.652" endtime="20201030 18:28:12.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.688" endtime="20201030 18:28:12.980"></status>
</kw>
<msg timestamp="20201030 18:28:12.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022317681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022363042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.686" endtime="20201030 18:28:12.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022317681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022363042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.984" endtime="20201030 18:28:12.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.993" endtime="20201030 18:28:12.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.684" endtime="20201030 18:28:12.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.682" endtime="20201030 18:28:12.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:13.000" level="INFO">${RESULT} = [{'diff': 4.5361000000000706e-05}, {'diff': 4.5097000000000886e-05}, {'diff': 4.527799999999929e-05}, {'diff': 4.5416999999998986e-05}, {'diff': 4.534699999999767e-05}, {'diff': 4.527799999999929e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:12.997" endtime="20201030 18:28:13.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:13.004" level="INFO">${ACCURACY} = {'diff': [4.5361000000000706e-05, 4.5097000000000886e-05, 4.527799999999929e-05, 4.5416999999998986e-05, 4.534699999999767e-05, 4.527799999999929e-05, 4.5416999999998986e-05, 4.525000000000015e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:28:13.001" endtime="20201030 18:28:13.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.009" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 18:28:13.008" endtime="20201030 18:28:13.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.012" level="INFO">VALUE: [4.5361000000000706e-05, 4.5097000000000886e-05, 4.527799999999929e-05, 4.5416999999998986e-05, 4.534699999999767e-05, 4.527799999999929e-05, 4.5416999999998986e-05, 4.525000000000015e-05, 4.542999999999908e-05, 4.545800000000169e-05, 4.5388999999999846e-05, 4.522199999999754e-05, 4.530599999999843e-05, 4.525000000000015e-05, 4.543000000000255e-05, 4.5361000000000706e-05, 4.544400000000212e-05, 4.526399999999972e-05, 4.5361000000000706e-05, 4.529099999999939e-05, 4.519400000000187e-05, 4.523600000000058e-05, 4.5430999999998556e-05, 4.523600000000058e-05, 4.5333000000001566e-05, 4.523600000000058e-05, 4.529199999999886e-05, 4.526399999999972e-05, 4.522200000000101e-05, 4.5333000000001566e-05, 4.5416999999998986e-05, 4.547199999999779e-05, 4.5444999999998126e-05, 4.536099999999724e-05, 4.536099999999724e-05, 4.534800000000061e-05, 4.5389000000003316e-05, 4.519400000000187e-05, 4.53060000000019e-05, 4.529200000000233e-05, 4.5361000000000706e-05, 4.529100000000286e-05, 4.5402999999999416e-05, 4.532000000000147e-05, 4.530500000000243e-05, 4.522200000000101e-05, 4.530499999999896e-05, 4.529099999999939e-05, 4.545800000000169e-05, 4.526399999999972e-05]</msg>
<status status="PASS" starttime="20201030 18:28:13.010" endtime="20201030 18:28:13.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.005" endtime="20201030 18:28:13.013"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:13.017" endtime="20201030 18:28:13.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.015" endtime="20201030 18:28:13.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.014" endtime="20201030 18:28:13.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.651" endtime="20201030 18:28:13.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.650" endtime="20201030 18:28:13.038"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.047" endtime="20201030 18:28:13.065"></status>
</kw>
<msg timestamp="20201030 18:28:13.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.045" endtime="20201030 18:28:13.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.066" endtime="20201030 18:28:13.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.069" endtime="20201030 18:28:13.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.043" endtime="20201030 18:28:13.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.041" endtime="20201030 18:28:13.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.078" endtime="20201030 18:28:13.365"></status>
</kw>
<msg timestamp="20201030 18:28:13.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023408819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023455278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.076" endtime="20201030 18:28:13.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023408819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023455278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.369" endtime="20201030 18:28:13.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.377" endtime="20201030 18:28:13.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.074" endtime="20201030 18:28:13.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.072" endtime="20201030 18:28:13.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:13.384" level="INFO">${RESULT} = [{'diff': 4.6458999999998696e-05}, {'diff': 4.597200000000176e-05}, {'diff': 4.6347000000002136e-05}, {'diff': 4.6458999999998696e-05}, {'diff': 4.622199999999854e-05}, {'diff': 4.6403000000000416e-05...</msg>
<status status="PASS" starttime="20201030 18:28:13.381" endtime="20201030 18:28:13.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:13.389" level="INFO">${ACCURACY} = {'diff': [4.6458999999998696e-05, 4.597200000000176e-05, 4.6347000000002136e-05, 4.6458999999998696e-05, 4.622199999999854e-05, 4.6403000000000416e-05, 4.6347000000002136e-05, 4.6403000000000416e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:13.385" endtime="20201030 18:28:13.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.394" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 18:28:13.393" endtime="20201030 18:28:13.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.401" level="INFO">VALUE: [4.6458999999998696e-05, 4.597200000000176e-05, 4.6347000000002136e-05, 4.6458999999998696e-05, 4.622199999999854e-05, 4.6403000000000416e-05, 4.6347000000002136e-05, 4.6403000000000416e-05, 4.629199999999986e-05, 4.630599999999943e-05, 4.6195000000002345e-05, 4.6430999999999556e-05, 4.6430999999999556e-05, 4.6445000000002595e-05, 4.6237000000001055e-05, 4.624999999999768e-05, 4.640200000000094e-05, 4.643000000000008e-05, 4.61939999999994e-05, 4.645799999999922e-05, 4.641600000000051e-05, 4.630499999999996e-05, 4.629099999999692e-05, 4.629199999999986e-05, 4.6403000000000416e-05, 4.626400000000072e-05, 4.636099999999824e-05, 4.622199999999854e-05, 4.6375000000001276e-05, 4.649999999999793e-05, 4.634699999999867e-05, 4.644399999999965e-05, 4.6389000000000846e-05, 4.6194999999998876e-05, 4.622199999999854e-05, 4.6194999999998876e-05, 4.6194999999998876e-05, 4.629199999999986e-05, 4.6459000000002165e-05, 4.630599999999943e-05, 4.6403000000000416e-05, 4.6403000000000416e-05, 4.6403000000000416e-05, 4.624999999999768e-05, 4.633399999999857e-05, 4.6430999999999556e-05, 4.6347000000002136e-05, 4.626399999999725e-05, 4.641600000000051e-05, 4.645799999999922e-05]</msg>
<status status="PASS" starttime="20201030 18:28:13.395" endtime="20201030 18:28:13.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.390" endtime="20201030 18:28:13.402"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:13.406" endtime="20201030 18:28:13.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.405" endtime="20201030 18:28:13.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.403" endtime="20201030 18:28:13.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.039" endtime="20201030 18:28:13.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.038" endtime="20201030 18:28:13.427"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.436" endtime="20201030 18:28:13.452"></status>
</kw>
<msg timestamp="20201030 18:28:13.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.434" endtime="20201030 18:28:13.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.454" endtime="20201030 18:28:13.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.456" endtime="20201030 18:28:13.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.432" endtime="20201030 18:28:13.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.430" endtime="20201030 18:28:13.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.466" endtime="20201030 18:28:13.754"></status>
</kw>
<msg timestamp="20201030 18:28:13.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022312833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022360931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.464" endtime="20201030 18:28:13.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022312833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022360931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.758" endtime="20201030 18:28:13.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.767" endtime="20201030 18:28:13.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.461" endtime="20201030 18:28:13.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.460" endtime="20201030 18:28:13.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:13.774" level="INFO">${RESULT} = [{'diff': 4.809799999999989e-05}, {'diff': 4.690199999999797e-05}, {'diff': 4.737499999999881e-05}, {'diff': 4.727799999999782e-05}, {'diff': 4.71940000000004e-05}, {'diff': 4.741599999999804e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:13.770" endtime="20201030 18:28:13.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:13.779" level="INFO">${ACCURACY} = {'diff': [4.809799999999989e-05, 4.690199999999797e-05, 4.737499999999881e-05, 4.727799999999782e-05, 4.71940000000004e-05, 4.741599999999804e-05, 4.722199999999954e-05, 4.740299999999795e-05, 4.73890...</msg>
<status status="PASS" starttime="20201030 18:28:13.775" endtime="20201030 18:28:13.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.784" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 18:28:13.782" endtime="20201030 18:28:13.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.786" level="INFO">VALUE: [4.809799999999989e-05, 4.690199999999797e-05, 4.737499999999881e-05, 4.727799999999782e-05, 4.71940000000004e-05, 4.741599999999804e-05, 4.722199999999954e-05, 4.740299999999795e-05, 4.7389000000001846e-05, 4.720799999999997e-05, 4.730600000000043e-05, 4.724999999999868e-05, 4.7389000000001846e-05, 4.7139000000001596e-05, 4.7389000000001846e-05, 4.738899999999838e-05, 4.725000000000215e-05, 4.740299999999795e-05, 4.738899999999838e-05, 4.7431000000000556e-05, 4.732e-05, 4.7403000000001416e-05, 4.747200000000326e-05, 4.723599999999911e-05, 4.73879999999989e-05, 4.733399999999957e-05, 4.729099999999792e-05, 4.720799999999997e-05, 4.741599999999804e-05, 4.715200000000169e-05, 4.741600000000151e-05, 4.737499999999881e-05, 4.744400000000065e-05, 4.734699999999967e-05, 4.725000000000215e-05, 4.729199999999739e-05, 4.744400000000065e-05, 4.730499999999749e-05, 4.726400000000172e-05, 4.744400000000065e-05, 4.726400000000172e-05, 4.71940000000004e-05, 4.7417000000000986e-05, 4.727800000000129e-05, 4.716699999999727e-05, 4.7194999999999876e-05, 4.730500000000096e-05, 4.7445000000000126e-05, 4.7445000000000126e-05, 4.7222999999999016e-05]</msg>
<status status="PASS" starttime="20201030 18:28:13.785" endtime="20201030 18:28:13.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.780" endtime="20201030 18:28:13.788"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:13.792" endtime="20201030 18:28:13.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.790" endtime="20201030 18:28:13.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.789" endtime="20201030 18:28:13.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.428" endtime="20201030 18:28:13.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.427" endtime="20201030 18:28:13.812"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.821" endtime="20201030 18:28:13.838"></status>
</kw>
<msg timestamp="20201030 18:28:13.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.820" endtime="20201030 18:28:13.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.839" endtime="20201030 18:28:13.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.842" endtime="20201030 18:28:13.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.817" endtime="20201030 18:28:13.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.815" endtime="20201030 18:28:13.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.851" endtime="20201030 18:28:14.139"></status>
</kw>
<msg timestamp="20201030 18:28:14.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021926542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021975222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.850" endtime="20201030 18:28:14.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021926542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021975222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.144" endtime="20201030 18:28:14.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.152" endtime="20201030 18:28:14.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.847" endtime="20201030 18:28:14.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.845" endtime="20201030 18:28:14.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:14.158" level="INFO">${RESULT} = [{'diff': 4.867999999999886e-05}, {'diff': 4.7931000000001056e-05}, {'diff': 4.843099999999809e-05}, {'diff': 4.829199999999839e-05}, {'diff': 4.827799999999882e-05}, {'diff': 4.8445000000001126e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:14.155" endtime="20201030 18:28:14.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:14.163" level="INFO">${ACCURACY} = {'diff': [4.867999999999886e-05, 4.7931000000001056e-05, 4.843099999999809e-05, 4.829199999999839e-05, 4.827799999999882e-05, 4.8445000000001126e-05, 4.8181000000001306e-05, 4.824999999999968e-05, 4.8...</msg>
<status status="PASS" starttime="20201030 18:28:14.159" endtime="20201030 18:28:14.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.167" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 18:28:14.166" endtime="20201030 18:28:14.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.169" level="INFO">VALUE: [4.867999999999886e-05, 4.7931000000001056e-05, 4.843099999999809e-05, 4.829199999999839e-05, 4.827799999999882e-05, 4.8445000000001126e-05, 4.8181000000001306e-05, 4.824999999999968e-05, 4.840299999999895e-05, 4.834700000000067e-05, 4.833400000000057e-05, 4.827700000000282e-05, 4.836199999999971e-05, 4.81529999999987e-05, 4.819399999999793e-05, 4.836100000000024e-05, 4.825000000000315e-05, 4.8375000000003276e-05, 4.829099999999892e-05, 4.827799999999882e-05, 4.831899999999806e-05, 4.838899999999938e-05, 4.8375000000003276e-05, 4.834700000000067e-05, 4.834700000000067e-05, 4.8403000000002416e-05, 4.841699999999852e-05, 4.837499999999981e-05, 4.8195000000000876e-05, 4.8195000000000876e-05, 4.831900000000153e-05, 4.840299999999895e-05, 4.829199999999839e-05, 4.823599999999664e-05, 4.8181000000001306e-05, 4.81529999999987e-05, 4.8431000000001556e-05, 4.833400000000057e-05, 4.8223000000000016e-05, 4.833400000000057e-05, 4.8195000000000876e-05, 4.836199999999971e-05, 4.834800000000014e-05, 4.836100000000024e-05, 4.8389000000002846e-05, 4.823600000000011e-05, 4.845800000000122e-05, 4.836100000000024e-05, 4.831899999999806e-05, 4.837499999999981e-05]</msg>
<status status="PASS" starttime="20201030 18:28:14.168" endtime="20201030 18:28:14.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.163" endtime="20201030 18:28:14.171"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:14.174" endtime="20201030 18:28:14.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.173" endtime="20201030 18:28:14.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.172" endtime="20201030 18:28:14.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.813" endtime="20201030 18:28:14.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.813" endtime="20201030 18:28:14.195"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.204" endtime="20201030 18:28:14.224"></status>
</kw>
<msg timestamp="20201030 18:28:14.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.202" endtime="20201030 18:28:14.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.227" endtime="20201030 18:28:14.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.232" endtime="20201030 18:28:14.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.200" endtime="20201030 18:28:14.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.198" endtime="20201030 18:28:14.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.251" endtime="20201030 18:28:14.545"></status>
</kw>
<msg timestamp="20201030 18:28:14.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023547847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023597028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.248" endtime="20201030 18:28:14.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023547847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023597028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.549" endtime="20201030 18:28:14.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.557" endtime="20201030 18:28:14.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.243" endtime="20201030 18:28:14.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.239" endtime="20201030 18:28:14.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:14.563" level="INFO">${RESULT} = [{'diff': 4.918099999999884e-05}, {'diff': 4.9137999999997184e-05}, {'diff': 4.931899999999906e-05}, {'diff': 4.942999999999961e-05}, {'diff': 4.925000000000068e-05}, {'diff': 4.93469999999982e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:14.560" endtime="20201030 18:28:14.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:14.568" level="INFO">${ACCURACY} = {'diff': [4.918099999999884e-05, 4.9137999999997184e-05, 4.931899999999906e-05, 4.942999999999961e-05, 4.925000000000068e-05, 4.93469999999982e-05, 4.929099999999992e-05, 4.944399999999918e-05, 4.9165...</msg>
<status status="PASS" starttime="20201030 18:28:14.564" endtime="20201030 18:28:14.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.572" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 18:28:14.571" endtime="20201030 18:28:14.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.574" level="INFO">VALUE: [4.918099999999884e-05, 4.9137999999997184e-05, 4.931899999999906e-05, 4.942999999999961e-05, 4.925000000000068e-05, 4.93469999999982e-05, 4.929099999999992e-05, 4.944399999999918e-05, 4.916599999999979e-05, 4.930600000000243e-05, 4.931900000000253e-05, 4.924999999999721e-05, 4.923599999999764e-05, 4.927799999999982e-05, 4.912500000000056e-05, 4.926400000000025e-05, 4.916699999999927e-05, 4.926400000000025e-05, 4.929199999999939e-05, 4.936100000000124e-05, 4.9473000000001266e-05, 4.938900000000038e-05, 4.929199999999939e-05, 4.934800000000114e-05, 4.937500000000081e-05, 4.91529999999997e-05, 4.937500000000081e-05, 4.941699999999952e-05, 4.9209000000001446e-05, 4.923599999999764e-05, 4.941600000000004e-05, 4.942999999999961e-05, 4.933299999999863e-05, 4.947199999999832e-05, 4.917999999999936e-05, 4.922200000000154e-05, 4.931900000000253e-05, 4.943000000000308e-05, 4.912499999999709e-05, 4.942999999999961e-05, 4.925000000000068e-05, 4.936100000000124e-05, 4.937500000000081e-05, 4.9222999999997546e-05, 4.934700000000167e-05, 4.91529999999997e-05, 4.930599999999896e-05, 4.927799999999982e-05, 4.938900000000038e-05, 4.93339999999981e-05]</msg>
<status status="PASS" starttime="20201030 18:28:14.573" endtime="20201030 18:28:14.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.568" endtime="20201030 18:28:14.577"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:14.580" endtime="20201030 18:28:14.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.579" endtime="20201030 18:28:14.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.578" endtime="20201030 18:28:14.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.196" endtime="20201030 18:28:14.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.196" endtime="20201030 18:28:14.601"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.610" endtime="20201030 18:28:14.626"></status>
</kw>
<msg timestamp="20201030 18:28:14.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.608" endtime="20201030 18:28:14.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.628" endtime="20201030 18:28:14.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.630" endtime="20201030 18:28:14.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.605" endtime="20201030 18:28:14.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.603" endtime="20201030 18:28:14.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.639" endtime="20201030 18:28:14.925"></status>
</kw>
<msg timestamp="20201030 18:28:14.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021803278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021853875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.638" endtime="20201030 18:28:14.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021803278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021853875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.929" endtime="20201030 18:28:14.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.937" endtime="20201030 18:28:14.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.635" endtime="20201030 18:28:14.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.633" endtime="20201030 18:28:14.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:14.943" level="INFO">${RESULT} = [{'diff': 5.059699999999945e-05}, {'diff': 4.9973000000001766e-05}, {'diff': 5.019499999999941e-05}, {'diff': 5.026400000000125e-05}, {'diff': 5.0401999999998004e-05}, {'diff': 5.031999999999953e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:14.940" endtime="20201030 18:28:14.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:14.948" level="INFO">${ACCURACY} = {'diff': [5.059699999999945e-05, 4.9973000000001766e-05, 5.019499999999941e-05, 5.026400000000125e-05, 5.0401999999998004e-05, 5.031999999999953e-05, 5.031900000000006e-05, 5.0402000000001473e-05, 5.0...</msg>
<status status="PASS" starttime="20201030 18:28:14.944" endtime="20201030 18:28:14.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.953" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 18:28:14.952" endtime="20201030 18:28:14.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.955" level="INFO">VALUE: [5.059699999999945e-05, 4.9973000000001766e-05, 5.019499999999941e-05, 5.026400000000125e-05, 5.0401999999998004e-05, 5.031999999999953e-05, 5.031900000000006e-05, 5.0402000000001473e-05, 5.0402000000001473e-05, 5.0401999999998004e-05, 5.038900000000138e-05, 5.026399999999778e-05, 5.031900000000006e-05, 5.026400000000125e-05, 5.045899999999923e-05, 5.037499999999834e-05, 5.030499999999702e-05, 5.019399999999993e-05, 5.027800000000082e-05, 5.036099999999877e-05, 5.023599999999864e-05, 5.033299999999963e-05, 5.031999999999953e-05, 5.031999999999953e-05, 5.03469999999992e-05, 5.013900000000113e-05, 5.038899999999791e-05, 5.023599999999864e-05, 5.016700000000027e-05, 5.0222999999998547e-05, 5.040300000000095e-05, 5.023600000000211e-05, 5.037499999999834e-05, 5.030599999999996e-05, 5.0165999999997324e-05, 5.018099999999984e-05, 5.036200000000171e-05, 5.036099999999877e-05, 5.033299999999963e-05, 5.024999999999821e-05, 5.03469999999992e-05, 5.029099999999745e-05, 5.031900000000006e-05, 5.027800000000082e-05, 5.041699999999705e-05, 5.043000000000061e-05, 5.023600000000211e-05, 5.043000000000061e-05, 5.044499999999966e-05, 5.041700000000052e-05]</msg>
<status status="PASS" starttime="20201030 18:28:14.954" endtime="20201030 18:28:14.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.949" endtime="20201030 18:28:14.957"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:14.960" endtime="20201030 18:28:14.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.959" endtime="20201030 18:28:14.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.958" endtime="20201030 18:28:14.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.602" endtime="20201030 18:28:14.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.601" endtime="20201030 18:28:14.981"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.990" endtime="20201030 18:28:15.006"></status>
</kw>
<msg timestamp="20201030 18:28:15.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.988" endtime="20201030 18:28:15.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.008" endtime="20201030 18:28:15.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.010" endtime="20201030 18:28:15.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.986" endtime="20201030 18:28:15.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.983" endtime="20201030 18:28:15.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.019" endtime="20201030 18:28:15.306"></status>
</kw>
<msg timestamp="20201030 18:28:15.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021612361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021664208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.018" endtime="20201030 18:28:15.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021612361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021664208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.310" endtime="20201030 18:28:15.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.318" endtime="20201030 18:28:15.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.015" endtime="20201030 18:28:15.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.013" endtime="20201030 18:28:15.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:15.325" level="INFO">${RESULT} = [{'diff': 5.18470000000007e-05}, {'diff': 5.094400000000068e-05}, {'diff': 5.118100000000084e-05}, {'diff': 5.118100000000084e-05}, {'diff': 5.140300000000195e-05}, {'diff': 5.122200000000007e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:15.321" endtime="20201030 18:28:15.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:15.329" level="INFO">${ACCURACY} = {'diff': [5.18470000000007e-05, 5.094400000000068e-05, 5.118100000000084e-05, 5.118100000000084e-05, 5.140300000000195e-05, 5.122200000000007e-05, 5.145900000000023e-05, 5.140300000000195e-05, 5.12640...</msg>
<status status="PASS" starttime="20201030 18:28:15.326" endtime="20201030 18:28:15.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.333" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 18:28:15.332" endtime="20201030 18:28:15.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.336" level="INFO">VALUE: [5.18470000000007e-05, 5.094400000000068e-05, 5.118100000000084e-05, 5.118100000000084e-05, 5.140300000000195e-05, 5.122200000000007e-05, 5.145900000000023e-05, 5.140300000000195e-05, 5.126400000000225e-05, 5.129199999999792e-05, 5.129200000000139e-05, 5.124999999999921e-05, 5.136199999999924e-05, 5.138899999999891e-05, 5.136099999999977e-05, 5.131900000000106e-05, 5.123599999999964e-05, 5.129100000000192e-05, 5.136099999999977e-05, 5.12080000000005e-05, 5.118000000000136e-05, 5.13470000000002e-05, 5.138899999999891e-05, 5.1193999999997464e-05, 5.136099999999977e-05, 5.119400000000093e-05, 5.127799999999835e-05, 5.140300000000195e-05, 5.126399999999878e-05, 5.1457999999997284e-05, 5.127800000000182e-05, 5.137499999999934e-05, 5.133300000000063e-05, 5.119500000000041e-05, 5.132000000000053e-05, 5.137499999999934e-05, 5.137499999999934e-05, 5.136099999999977e-05, 5.144500000000066e-05, 5.127799999999835e-05, 5.141700000000152e-05, 5.132000000000053e-05, 5.133300000000063e-05, 5.127800000000182e-05, 5.126399999999878e-05, 5.132000000000053e-05, 5.122200000000007e-05, 5.133300000000063e-05, 5.130499999999802e-05, 5.123599999999964e-05]</msg>
<status status="PASS" starttime="20201030 18:28:15.334" endtime="20201030 18:28:15.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.330" endtime="20201030 18:28:15.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:15.341" endtime="20201030 18:28:15.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.339" endtime="20201030 18:28:15.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.338" endtime="20201030 18:28:15.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.982" endtime="20201030 18:28:15.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.981" endtime="20201030 18:28:15.361"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.370" endtime="20201030 18:28:15.386"></status>
</kw>
<msg timestamp="20201030 18:28:15.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.368" endtime="20201030 18:28:15.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.388" endtime="20201030 18:28:15.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.390" endtime="20201030 18:28:15.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.366" endtime="20201030 18:28:15.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.364" endtime="20201030 18:28:15.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.399" endtime="20201030 18:28:15.686"></status>
</kw>
<msg timestamp="20201030 18:28:15.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022569944, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:15.398" endtime="20201030 18:28:15.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022569944, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:15.690" endtime="20201030 18:28:15.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.698" endtime="20201030 18:28:15.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.395" endtime="20201030 18:28:15.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.394" endtime="20201030 18:28:15.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:15.704" level="INFO">${RESULT} = [{'diff': 5.244400000000218e-05}, {'diff': 5.199999999999996e-05}, {'diff': 5.233300000000163e-05}, {'diff': 5.2457999999998284e-05}, {'diff': 5.222299999999708e-05}, {'diff': 5.2430000000002613e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:15.701" endtime="20201030 18:28:15.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:15.709" level="INFO">${ACCURACY} = {'diff': [5.244400000000218e-05, 5.199999999999996e-05, 5.233300000000163e-05, 5.2457999999998284e-05, 5.222299999999708e-05, 5.2430000000002613e-05, 5.234699999999773e-05, 5.237500000000034e-05, 5.23...</msg>
<status status="PASS" starttime="20201030 18:28:15.705" endtime="20201030 18:28:15.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.713" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 18:28:15.712" endtime="20201030 18:28:15.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.715" level="INFO">VALUE: [5.244400000000218e-05, 5.199999999999996e-05, 5.233300000000163e-05, 5.2457999999998284e-05, 5.222299999999708e-05, 5.2430000000002613e-05, 5.234699999999773e-05, 5.237500000000034e-05, 5.233299999999816e-05, 5.238899999999991e-05, 5.245899999999776e-05, 5.229199999999892e-05, 5.240299999999948e-05, 5.2416000000003043e-05, 5.238899999999991e-05, 5.229200000000239e-05, 5.237499999999687e-05, 5.234800000000067e-05, 5.231900000000206e-05, 5.219400000000193e-05, 5.230499999999902e-05, 5.226399999999978e-05, 5.2138000000000184e-05, 5.237500000000034e-05, 5.236100000000077e-05, 5.248600000000089e-05, 5.244400000000218e-05, 5.247200000000132e-05, 5.223600000000064e-05, 5.222200000000107e-05, 5.219400000000193e-05, 5.240299999999948e-05, 5.227799999999935e-05, 5.237500000000034e-05, 5.222200000000107e-05, 5.243100000000209e-05, 5.233300000000163e-05, 5.225000000000021e-05, 5.225000000000021e-05, 5.238899999999991e-05, 5.231999999999806e-05, 5.237500000000034e-05, 5.236100000000077e-05, 5.243099999999862e-05, 5.219499999999794e-05, 5.227799999999935e-05, 5.229199999999892e-05, 5.2471999999997854e-05, 5.241699999999905e-05, 5.2179999999998894e-05]</msg>
<status status="PASS" starttime="20201030 18:28:15.714" endtime="20201030 18:28:15.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.709" endtime="20201030 18:28:15.718"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:15.721" endtime="20201030 18:28:15.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.720" endtime="20201030 18:28:15.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.719" endtime="20201030 18:28:15.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.362" endtime="20201030 18:28:15.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.361" endtime="20201030 18:28:15.742"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.750" endtime="20201030 18:28:15.767"></status>
</kw>
<msg timestamp="20201030 18:28:15.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.749" endtime="20201030 18:28:15.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.768" endtime="20201030 18:28:15.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.771" endtime="20201030 18:28:15.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.746" endtime="20201030 18:28:15.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.744" endtime="20201030 18:28:15.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.780" endtime="20201030 18:28:16.066"></status>
</kw>
<msg timestamp="20201030 18:28:16.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021868583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021922319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.778" endtime="20201030 18:28:16.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021868583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021922319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.070" endtime="20201030 18:28:16.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.078" endtime="20201030 18:28:16.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.776" endtime="20201030 18:28:16.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.774" endtime="20201030 18:28:16.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:16.084" level="INFO">${RESULT} = [{'diff': 5.3735999999998674e-05}, {'diff': 5.3193999999999464e-05}, {'diff': 5.331899999999959e-05}, {'diff': 5.325000000000121e-05}, {'diff': 5.338900000000091e-05}, {'diff': 5.333299999999916e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:16.081" endtime="20201030 18:28:16.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:16.090" level="INFO">${ACCURACY} = {'diff': [5.3735999999998674e-05, 5.3193999999999464e-05, 5.331899999999959e-05, 5.325000000000121e-05, 5.338900000000091e-05, 5.333299999999916e-05, 5.319499999999894e-05, 5.3471999999998854e-05, 5.3...</msg>
<status status="PASS" starttime="20201030 18:28:16.085" endtime="20201030 18:28:16.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.094" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 18:28:16.093" endtime="20201030 18:28:16.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.097" level="INFO">VALUE: [5.3735999999998674e-05, 5.3193999999999464e-05, 5.331899999999959e-05, 5.325000000000121e-05, 5.338900000000091e-05, 5.333299999999916e-05, 5.319499999999894e-05, 5.3471999999998854e-05, 5.33470000000022e-05, 5.343099999999962e-05, 5.3221999999998604e-05, 5.344499999999919e-05, 5.319500000000241e-05, 5.344499999999919e-05, 5.31669999999998e-05, 5.318099999999937e-05, 5.319499999999894e-05, 5.3249999999997744e-05, 5.318099999999937e-05, 5.3471999999998854e-05, 5.3277999999996883e-05, 5.33609999999983e-05, 5.337500000000134e-05, 5.333299999999916e-05, 5.348600000000189e-05, 5.334699999999873e-05, 5.327700000000088e-05, 5.338900000000091e-05, 5.329100000000045e-05, 5.329199999999992e-05, 5.336100000000177e-05, 5.333300000000263e-05, 5.318099999999937e-05, 5.315300000000023e-05, 5.33470000000022e-05, 5.318100000000284e-05, 5.3249999999997744e-05, 5.325000000000121e-05, 5.322200000000207e-05, 5.337500000000134e-05, 5.3235999999998174e-05, 5.334699999999873e-05, 5.341700000000005e-05, 5.33340000000021e-05, 5.318099999999937e-05, 5.31669999999998e-05, 5.329100000000045e-05, 5.320899999999851e-05, 5.331899999999959e-05, 5.3457999999999284e-05]</msg>
<status status="PASS" starttime="20201030 18:28:16.095" endtime="20201030 18:28:16.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.090" endtime="20201030 18:28:16.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:16.102" endtime="20201030 18:28:16.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.100" endtime="20201030 18:28:16.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.099" endtime="20201030 18:28:16.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.743" endtime="20201030 18:28:16.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.742" endtime="20201030 18:28:16.122"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.132" endtime="20201030 18:28:16.149"></status>
</kw>
<msg timestamp="20201030 18:28:16.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.130" endtime="20201030 18:28:16.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.151" endtime="20201030 18:28:16.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.153" endtime="20201030 18:28:16.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.127" endtime="20201030 18:28:16.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.125" endtime="20201030 18:28:16.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.163" endtime="20201030 18:28:16.457"></status>
</kw>
<msg timestamp="20201030 18:28:16.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022484375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.161" endtime="20201030 18:28:16.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022484375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.467" endtime="20201030 18:28:16.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.485" endtime="20201030 18:28:16.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.159" endtime="20201030 18:28:16.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.157" endtime="20201030 18:28:16.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:16.499" level="INFO">${RESULT} = [{'diff': 5.4972000000000354e-05}, {'diff': 5.40280000000011e-05}, {'diff': 5.4221999999999604e-05}, {'diff': 5.433300000000016e-05}, {'diff': 5.43609999999993e-05}, {'diff': 5.4458000000000284e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:16.492" endtime="20201030 18:28:16.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:16.508" level="INFO">${ACCURACY} = {'diff': [5.4972000000000354e-05, 5.40280000000011e-05, 5.4221999999999604e-05, 5.433300000000016e-05, 5.43609999999993e-05, 5.4458000000000284e-05, 5.4416000000001574e-05, 5.4263999999998314e-05, 5.4...</msg>
<status status="PASS" starttime="20201030 18:28:16.501" endtime="20201030 18:28:16.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.517" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 18:28:16.515" endtime="20201030 18:28:16.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.523" level="INFO">VALUE: [5.4972000000000354e-05, 5.40280000000011e-05, 5.4221999999999604e-05, 5.433300000000016e-05, 5.43609999999993e-05, 5.4458000000000284e-05, 5.4416000000001574e-05, 5.4263999999998314e-05, 5.4416000000001574e-05, 5.4415999999998105e-05, 5.423600000000264e-05, 5.4249999999998744e-05, 5.4194000000000464e-05, 5.4180000000000894e-05, 5.434699999999973e-05, 5.438899999999844e-05, 5.430599999999702e-05, 5.425000000000221e-05, 5.4444000000000714e-05, 5.438899999999844e-05, 5.418100000000037e-05, 5.413900000000166e-05, 5.437499999999887e-05, 5.429200000000092e-05, 5.419499999999994e-05, 5.43609999999993e-05, 5.440299999999801e-05, 5.4249999999998744e-05, 5.4208000000000034e-05, 5.4249999999998744e-05, 5.430600000000049e-05, 5.440299999999801e-05, 5.4430000000001144e-05, 5.4416000000001574e-05, 5.4429999999997675e-05, 5.4471999999999854e-05, 5.433300000000016e-05, 5.433300000000016e-05, 5.43609999999993e-05, 5.4180000000000894e-05, 5.416699999999733e-05, 5.43470000000032e-05, 5.4430000000001144e-05, 5.420899999999951e-05, 5.434699999999973e-05, 5.4277999999997883e-05, 5.445899999999976e-05, 5.438899999999844e-05, 5.4444000000000714e-05, 5.43609999999993e-05]</msg>
<status status="PASS" starttime="20201030 18:28:16.520" endtime="20201030 18:28:16.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.510" endtime="20201030 18:28:16.525"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:16.533" endtime="20201030 18:28:16.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.530" endtime="20201030 18:28:16.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.527" endtime="20201030 18:28:16.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.123" endtime="20201030 18:28:16.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.123" endtime="20201030 18:28:16.554"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.563" endtime="20201030 18:28:16.581"></status>
</kw>
<msg timestamp="20201030 18:28:16.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.561" endtime="20201030 18:28:16.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.582" endtime="20201030 18:28:16.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.585" endtime="20201030 18:28:16.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.559" endtime="20201030 18:28:16.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.557" endtime="20201030 18:28:16.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.593" endtime="20201030 18:28:16.878"></status>
</kw>
<msg timestamp="20201030 18:28:16.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022754153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022809222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.592" endtime="20201030 18:28:16.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022754153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022809222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.882" endtime="20201030 18:28:16.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.891" endtime="20201030 18:28:16.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.589" endtime="20201030 18:28:16.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.588" endtime="20201030 18:28:16.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:16.897" level="INFO">${RESULT} = [{'diff': 5.506900000000134e-05}, {'diff': 5.4971999999996884e-05}, {'diff': 5.53610000000003e-05}, {'diff': 5.534700000000073e-05}, {'diff': 5.543100000000162e-05}, {'diff': 5.519500000000094e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:16.894" endtime="20201030 18:28:16.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:16.901" level="INFO">${ACCURACY} = {'diff': [5.506900000000134e-05, 5.4971999999996884e-05, 5.53610000000003e-05, 5.534700000000073e-05, 5.543100000000162e-05, 5.519500000000094e-05, 5.5291999999998453e-05, 5.545899999999729e-05, 5.522...</msg>
<status status="PASS" starttime="20201030 18:28:16.898" endtime="20201030 18:28:16.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.906" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 18:28:16.905" endtime="20201030 18:28:16.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.911" level="INFO">VALUE: [5.506900000000134e-05, 5.4971999999996884e-05, 5.53610000000003e-05, 5.534700000000073e-05, 5.543100000000162e-05, 5.519500000000094e-05, 5.5291999999998453e-05, 5.545899999999729e-05, 5.5222000000000604e-05, 5.53610000000003e-05, 5.544500000000119e-05, 5.518100000000137e-05, 5.526299999999984e-05, 5.5387999999999965e-05, 5.5179999999998425e-05, 5.5236000000000174e-05, 5.529099999999898e-05, 5.5401999999999535e-05, 5.537499999999987e-05, 5.515299999999876e-05, 5.533300000000116e-05, 5.5180000000001894e-05, 5.538899999999944e-05, 5.5263999999999314e-05, 5.5179999999998425e-05, 5.533400000000063e-05, 5.531899999999812e-05, 5.529200000000192e-05, 5.518100000000137e-05, 5.545899999999729e-05, 5.532000000000106e-05, 5.5458000000001284e-05, 5.534699999999726e-05, 5.541700000000205e-05, 5.529200000000192e-05, 5.541699999999858e-05, 5.537499999999987e-05, 5.5429999999998675e-05, 5.529200000000192e-05, 5.538899999999944e-05, 5.540300000000248e-05, 5.53610000000003e-05, 5.53610000000003e-05, 5.5277999999998884e-05, 5.5207999999997565e-05, 5.5415999999999105e-05, 5.5222000000000604e-05, 5.538899999999944e-05, 5.5444000000001714e-05, 5.5179999999998425e-05]</msg>
<status status="PASS" starttime="20201030 18:28:16.907" endtime="20201030 18:28:16.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.902" endtime="20201030 18:28:16.913"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:16.917" endtime="20201030 18:28:16.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.915" endtime="20201030 18:28:16.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.914" endtime="20201030 18:28:16.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.555" endtime="20201030 18:28:16.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.555" endtime="20201030 18:28:16.937"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.946" endtime="20201030 18:28:16.963"></status>
</kw>
<msg timestamp="20201030 18:28:16.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.944" endtime="20201030 18:28:16.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.965" endtime="20201030 18:28:16.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.967" endtime="20201030 18:28:16.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.942" endtime="20201030 18:28:16.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.940" endtime="20201030 18:28:16.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.976" endtime="20201030 18:28:17.261"></status>
</kw>
<msg timestamp="20201030 18:28:17.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021566389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021622861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.974" endtime="20201030 18:28:17.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021566389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021622861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.265" endtime="20201030 18:28:17.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.274" endtime="20201030 18:28:17.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.972" endtime="20201030 18:28:17.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.970" endtime="20201030 18:28:17.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:17.280" level="INFO">${RESULT} = [{'diff': 5.6472000000001854e-05}, {'diff': 5.6014000000000064e-05}, {'diff': 5.644499999999872e-05}, {'diff': 5.63610000000013e-05}, {'diff': 5.6250000000000744e-05}, {'diff': 5.6222000000001604e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:17.277" endtime="20201030 18:28:17.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:17.285" level="INFO">${ACCURACY} = {'diff': [5.6472000000001854e-05, 5.6014000000000064e-05, 5.644499999999872e-05, 5.63610000000013e-05, 5.6250000000000744e-05, 5.6222000000001604e-05, 5.644499999999872e-05, 5.6305999999999023e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:28:17.281" endtime="20201030 18:28:17.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.290" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 18:28:17.289" endtime="20201030 18:28:17.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.292" level="INFO">VALUE: [5.6472000000001854e-05, 5.6014000000000064e-05, 5.644499999999872e-05, 5.63610000000013e-05, 5.6250000000000744e-05, 5.6222000000001604e-05, 5.644499999999872e-05, 5.6305999999999023e-05, 5.622299999999761e-05, 5.619499999999847e-05, 5.629099999999998e-05, 5.6305999999999023e-05, 5.6416000000000105e-05, 5.637500000000087e-05, 5.627700000000041e-05, 5.629099999999998e-05, 5.6165999999999855e-05, 5.6443999999999245e-05, 5.633299999999869e-05, 5.6514000000000564e-05, 5.631900000000259e-05, 5.638900000000044e-05, 5.6305999999999023e-05, 5.641699999999958e-05, 5.633299999999869e-05, 5.638900000000044e-05, 5.63610000000013e-05, 5.6222000000001604e-05, 5.6194000000002464e-05, 5.6277999999999884e-05, 5.63749999999974e-05, 5.61809999999989e-05, 5.640300000000001e-05, 5.63610000000013e-05, 5.6250000000000744e-05, 5.620900000000151e-05, 5.632000000000206e-05, 5.644500000000219e-05, 5.6401999999997066e-05, 5.6305999999999023e-05, 5.6179999999999425e-05, 5.630499999999955e-05, 5.637500000000087e-05, 5.6416000000000105e-05, 5.629099999999998e-05, 5.6277999999999884e-05, 5.6165999999999855e-05, 5.6264000000000314e-05, 5.6221999999998135e-05, 5.638900000000044e-05]</msg>
<status status="PASS" starttime="20201030 18:28:17.291" endtime="20201030 18:28:17.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.286" endtime="20201030 18:28:17.293"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:17.297" endtime="20201030 18:28:17.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.295" endtime="20201030 18:28:17.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.294" endtime="20201030 18:28:17.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.938" endtime="20201030 18:28:17.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.938" endtime="20201030 18:28:17.318"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.326" endtime="20201030 18:28:17.344"></status>
</kw>
<msg timestamp="20201030 18:28:17.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.325" endtime="20201030 18:28:17.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.345" endtime="20201030 18:28:17.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.348" endtime="20201030 18:28:17.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.322" endtime="20201030 18:28:17.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.320" endtime="20201030 18:28:17.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.357" endtime="20201030 18:28:17.638"></status>
</kw>
<msg timestamp="20201030 18:28:17.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021976611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022034486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.355" endtime="20201030 18:28:17.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021976611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022034486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.642" endtime="20201030 18:28:17.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.650" endtime="20201030 18:28:17.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.352" endtime="20201030 18:28:17.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.351" endtime="20201030 18:28:17.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:17.657" level="INFO">${RESULT} = [{'diff': 5.78749999999989e-05}, {'diff': 5.683300000000266e-05}, {'diff': 5.7444000000000245e-05}, {'diff': 5.733299999999969e-05}, {'diff': 5.736099999999883e-05}, {'diff': 5.741700000000058e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:17.653" endtime="20201030 18:28:17.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:17.661" level="INFO">${ACCURACY} = {'diff': [5.78749999999989e-05, 5.683300000000266e-05, 5.7444000000000245e-05, 5.733299999999969e-05, 5.736099999999883e-05, 5.741700000000058e-05, 5.7221999999999135e-05, 5.740299999999754e-05, 5.734...</msg>
<status status="PASS" starttime="20201030 18:28:17.658" endtime="20201030 18:28:17.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.665" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 18:28:17.664" endtime="20201030 18:28:17.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.668" level="INFO">VALUE: [5.78749999999989e-05, 5.683300000000266e-05, 5.7444000000000245e-05, 5.733299999999969e-05, 5.736099999999883e-05, 5.741700000000058e-05, 5.7221999999999135e-05, 5.740299999999754e-05, 5.734699999999926e-05, 5.7416000000001105e-05, 5.745899999999929e-05, 5.745899999999929e-05, 5.734700000000273e-05, 5.734699999999926e-05, 5.743099999999668e-05, 5.743100000000015e-05, 5.7278000000000884e-05, 5.744499999999972e-05, 5.7236000000002174e-05, 5.7333999999999163e-05, 5.734699999999926e-05, 5.7430000000000675e-05, 5.729100000000098e-05, 5.731900000000012e-05, 5.73749999999984e-05, 5.7402000000001535e-05, 5.7292000000000454e-05, 5.7471999999999385e-05, 5.7430000000000675e-05, 5.736099999999883e-05, 5.7250000000001744e-05, 5.7443999999996775e-05, 5.733299999999969e-05, 5.7430000000000675e-05, 5.7263999999997844e-05, 5.733299999999969e-05, 5.7277999999997414e-05, 5.7250000000001744e-05, 5.719499999999947e-05, 5.7306000000000024e-05, 5.740300000000101e-05, 5.7306000000000024e-05, 5.731900000000012e-05, 5.745900000000276e-05, 5.719499999999947e-05, 5.737500000000187e-05, 5.741700000000058e-05, 5.731900000000012e-05, 5.7306000000000024e-05, 5.726300000000184e-05]</msg>
<status status="PASS" starttime="20201030 18:28:17.666" endtime="20201030 18:28:17.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.662" endtime="20201030 18:28:17.669"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:17.673" endtime="20201030 18:28:17.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.671" endtime="20201030 18:28:17.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.670" endtime="20201030 18:28:17.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.318" endtime="20201030 18:28:17.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.318" endtime="20201030 18:28:17.694"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.702" endtime="20201030 18:28:17.720"></status>
</kw>
<msg timestamp="20201030 18:28:17.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.701" endtime="20201030 18:28:17.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.722" endtime="20201030 18:28:17.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.724" endtime="20201030 18:28:17.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.698" endtime="20201030 18:28:17.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.696" endtime="20201030 18:28:17.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.733" endtime="20201030 18:28:18.018"></status>
</kw>
<msg timestamp="20201030 18:28:18.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022655472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022714556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.732" endtime="20201030 18:28:18.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022655472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022714556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.022" endtime="20201030 18:28:18.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.030" endtime="20201030 18:28:18.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.729" endtime="20201030 18:28:18.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.728" endtime="20201030 18:28:18.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:18.037" level="INFO">${RESULT} = [{'diff': 5.9084000000000914e-05}, {'diff': 5.808300000000044e-05}, {'diff': 5.8250000000002744e-05}, {'diff': 5.833300000000069e-05}, {'diff': 5.8179999999997956e-05}, {'diff': 5.8194000000000995e-05...</msg>
<status status="PASS" starttime="20201030 18:28:18.034" endtime="20201030 18:28:18.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:18.041" level="INFO">${ACCURACY} = {'diff': [5.9084000000000914e-05, 5.808300000000044e-05, 5.8250000000002744e-05, 5.833300000000069e-05, 5.8179999999997956e-05, 5.8194000000000995e-05, 5.8222000000000135e-05, 5.8458000000000815e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:18.038" endtime="20201030 18:28:18.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.045" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 18:28:18.044" endtime="20201030 18:28:18.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.048" level="INFO">VALUE: [5.9084000000000914e-05, 5.808300000000044e-05, 5.8250000000002744e-05, 5.833300000000069e-05, 5.8179999999997956e-05, 5.8194000000000995e-05, 5.8222000000000135e-05, 5.8458000000000815e-05, 5.841700000000158e-05, 5.8320000000000594e-05, 5.8194000000000995e-05, 5.8277999999998414e-05, 5.8320000000000594e-05, 5.847299999999986e-05, 5.836099999999983e-05, 5.8334000000000163e-05, 5.8235999999999705e-05, 5.8277999999998414e-05, 5.838900000000244e-05, 5.819500000000047e-05, 5.838899999999897e-05, 5.8194999999997e-05, 5.815300000000176e-05, 5.8194000000000995e-05, 5.8387999999999496e-05, 5.8249999999999275e-05, 5.8472000000000385e-05, 5.8193999999997525e-05, 5.838900000000244e-05, 5.8235999999999705e-05, 5.836099999999983e-05, 5.833299999999722e-05, 5.8278000000001884e-05, 5.8263999999998844e-05, 5.8443999999997776e-05, 5.8222000000000135e-05, 5.8263999999998844e-05, 5.8249999999999275e-05, 5.813900000000219e-05, 5.841699999999811e-05, 5.8235999999999705e-05, 5.820900000000004e-05, 5.834700000000026e-05, 5.840299999999854e-05, 5.838900000000244e-05, 5.8320000000000594e-05, 5.841700000000158e-05, 5.83619999999993e-05, 5.8236000000003174e-05, 5.834700000000026e-05]</msg>
<status status="PASS" starttime="20201030 18:28:18.047" endtime="20201030 18:28:18.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.042" endtime="20201030 18:28:18.050"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:18.054" endtime="20201030 18:28:18.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.052" endtime="20201030 18:28:18.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.051" endtime="20201030 18:28:18.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.695" endtime="20201030 18:28:18.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.694" endtime="20201030 18:28:18.074"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.083" endtime="20201030 18:28:18.100"></status>
</kw>
<msg timestamp="20201030 18:28:18.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.081" endtime="20201030 18:28:18.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.102" endtime="20201030 18:28:18.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.104" endtime="20201030 18:28:18.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.079" endtime="20201030 18:28:18.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.077" endtime="20201030 18:28:18.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.113" endtime="20201030 18:28:18.398"></status>
</kw>
<msg timestamp="20201030 18:28:18.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021533806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021593486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.112" endtime="20201030 18:28:18.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021533806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021593486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.402" endtime="20201030 18:28:18.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.410" endtime="20201030 18:28:18.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.109" endtime="20201030 18:28:18.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.107" endtime="20201030 18:28:18.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:18.417" level="INFO">${RESULT} = [{'diff': 5.9679999999999456e-05}, {'diff': 5.916699999999886e-05}, {'diff': 5.9250000000000275e-05}, {'diff': 5.941699999999911e-05}, {'diff': 5.9291999999998984e-05}, {'diff': 5.9471999999997915e-05...</msg>
<status status="PASS" starttime="20201030 18:28:18.414" endtime="20201030 18:28:18.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:18.422" level="INFO">${ACCURACY} = {'diff': [5.9679999999999456e-05, 5.916699999999886e-05, 5.9250000000000275e-05, 5.941699999999911e-05, 5.9291999999998984e-05, 5.9471999999997915e-05, 5.9236000000000705e-05, 5.9443999999998776e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:18.418" endtime="20201030 18:28:18.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.426" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 18:28:18.425" endtime="20201030 18:28:18.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.429" level="INFO">VALUE: [5.9679999999999456e-05, 5.916699999999886e-05, 5.9250000000000275e-05, 5.941699999999911e-05, 5.9291999999998984e-05, 5.9471999999997915e-05, 5.9236000000000705e-05, 5.9443999999998776e-05, 5.931899999999865e-05, 5.9429999999999206e-05, 5.9415999999999636e-05, 5.936100000000083e-05, 5.938899999999997e-05, 5.9250000000000275e-05, 5.940299999999954e-05, 5.916699999999886e-05, 5.930499999999908e-05, 5.9236000000000705e-05, 5.9500000000000525e-05, 5.9207999999998095e-05, 5.941699999999911e-05, 5.938899999999997e-05, 5.9207999999998095e-05, 5.940299999999954e-05, 5.93750000000004e-05, 5.9207999999998095e-05, 5.9263999999999845e-05, 5.9263999999999845e-05, 5.9472000000001385e-05, 5.938899999999997e-05, 5.943099999999868e-05, 5.944499999999825e-05, 5.9443999999998776e-05, 5.936100000000083e-05, 5.938899999999997e-05, 5.9457999999998346e-05, 5.9443999999998776e-05, 5.93750000000004e-05, 5.934699999999779e-05, 5.9193999999998526e-05, 5.9457999999998346e-05, 5.940299999999954e-05, 5.9250000000000275e-05, 5.9457999999998346e-05, 5.933299999999822e-05, 5.9263999999999845e-05, 5.9250000000000275e-05, 5.9291999999998984e-05, 5.9334000000001164e-05, 5.916699999999886e-05]</msg>
<status status="PASS" starttime="20201030 18:28:18.427" endtime="20201030 18:28:18.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.423" endtime="20201030 18:28:18.430"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:18.434" endtime="20201030 18:28:18.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.432" endtime="20201030 18:28:18.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.431" endtime="20201030 18:28:18.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.075" endtime="20201030 18:28:18.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.075" endtime="20201030 18:28:18.454"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.463" endtime="20201030 18:28:18.481"></status>
</kw>
<msg timestamp="20201030 18:28:18.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.461" endtime="20201030 18:28:18.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.482" endtime="20201030 18:28:18.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.485" endtime="20201030 18:28:18.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.459" endtime="20201030 18:28:18.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.457" endtime="20201030 18:28:18.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.495" endtime="20201030 18:28:18.782"></status>
</kw>
<msg timestamp="20201030 18:28:18.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02192875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:18.493" endtime="20201030 18:28:18.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02192875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:18.786" endtime="20201030 18:28:18.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.794" endtime="20201030 18:28:18.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.490" endtime="20201030 18:28:18.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.488" endtime="20201030 18:28:18.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:18.801" level="INFO">${RESULT} = [{'diff': 6.062499999999818e-05}, {'diff': 5.9971999999998415e-05}, {'diff': 6.037499999999793e-05}, {'diff': 6.016699999999986e-05}, {'diff': 6.018099999999943e-05}, {'diff': 6.0291999999999984e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:18.797" endtime="20201030 18:28:18.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:18.805" level="INFO">${ACCURACY} = {'diff': [6.062499999999818e-05, 5.9971999999998415e-05, 6.037499999999793e-05, 6.016699999999986e-05, 6.018099999999943e-05, 6.0291999999999984e-05, 6.016699999999986e-05, 6.0305999999999554e-05, 6.0...</msg>
<status status="PASS" starttime="20201030 18:28:18.802" endtime="20201030 18:28:18.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.809" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 18:28:18.808" endtime="20201030 18:28:18.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.812" level="INFO">VALUE: [6.062499999999818e-05, 5.9971999999998415e-05, 6.037499999999793e-05, 6.016699999999986e-05, 6.018099999999943e-05, 6.0291999999999984e-05, 6.016699999999986e-05, 6.0305999999999554e-05, 6.0249999999997805e-05, 6.0179999999999956e-05, 6.03750000000014e-05, 6.0250000000001275e-05, 6.0179999999999956e-05, 6.0471999999998916e-05, 6.0166000000000386e-05, 6.038900000000097e-05, 6.0457999999999346e-05, 6.0179999999999956e-05, 6.0278000000000415e-05, 6.034700000000226e-05, 6.016699999999986e-05, 6.040300000000054e-05, 6.0264000000000845e-05, 6.018099999999943e-05, 6.011099999999811e-05, 6.0291999999999984e-05, 6.0305999999999554e-05, 6.0277999999996945e-05, 6.043099999999968e-05, 6.020900000000204e-05, 6.037499999999793e-05, 6.0194999999999e-05, 6.0402000000001066e-05, 6.0179999999999956e-05, 6.0194999999999e-05, 6.0193999999999526e-05, 6.0443999999999776e-05, 6.031899999999965e-05, 6.0443999999999776e-05, 6.0416000000000636e-05, 6.030500000000008e-05, 6.030500000000008e-05, 6.036099999999836e-05, 6.0207999999999096e-05, 6.031900000000312e-05, 6.0291999999999984e-05, 6.031899999999965e-05, 6.0236000000001705e-05, 6.037499999999793e-05, 6.041700000000011e-05]</msg>
<status status="PASS" starttime="20201030 18:28:18.810" endtime="20201030 18:28:18.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.806" endtime="20201030 18:28:18.813"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:18.817" endtime="20201030 18:28:18.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.815" endtime="20201030 18:28:18.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.814" endtime="20201030 18:28:18.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.455" endtime="20201030 18:28:18.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.455" endtime="20201030 18:28:18.837"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.846" endtime="20201030 18:28:18.863"></status>
</kw>
<msg timestamp="20201030 18:28:18.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.844" endtime="20201030 18:28:18.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.865" endtime="20201030 18:28:18.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.867" endtime="20201030 18:28:18.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.842" endtime="20201030 18:28:18.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.840" endtime="20201030 18:28:18.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.876" endtime="20201030 18:28:19.161"></status>
</kw>
<msg timestamp="20201030 18:28:19.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022674875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022736069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.875" endtime="20201030 18:28:19.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022674875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022736069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.165" endtime="20201030 18:28:19.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.174" endtime="20201030 18:28:19.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.872" endtime="20201030 18:28:19.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.870" endtime="20201030 18:28:19.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:19.180" level="INFO">${RESULT} = [{'diff': 6.119400000000053e-05}, {'diff': 6.10690000000004e-05}, {'diff': 6.141600000000164e-05}, {'diff': 6.133300000000022e-05}, {'diff': 6.142999999999774e-05}, {'diff': 6.12499999999988e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:19.177" endtime="20201030 18:28:19.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:19.184" level="INFO">${ACCURACY} = {'diff': [6.119400000000053e-05, 6.10690000000004e-05, 6.141600000000164e-05, 6.133300000000022e-05, 6.142999999999774e-05, 6.12499999999988e-05, 6.130499999999761e-05, 6.119400000000053e-05, 6.142999...</msg>
<status status="PASS" starttime="20201030 18:28:19.181" endtime="20201030 18:28:19.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.189" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 18:28:19.188" endtime="20201030 18:28:19.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.191" level="INFO">VALUE: [6.119400000000053e-05, 6.10690000000004e-05, 6.141600000000164e-05, 6.133300000000022e-05, 6.142999999999774e-05, 6.12499999999988e-05, 6.130499999999761e-05, 6.119400000000053e-05, 6.142999999999774e-05, 6.141600000000164e-05, 6.136099999999936e-05, 6.138900000000197e-05, 6.116700000000086e-05, 6.143099999999721e-05, 6.140300000000154e-05, 6.132000000000012e-05, 6.12080000000001e-05, 6.134699999999979e-05, 6.144500000000025e-05, 6.143100000000068e-05, 6.137499999999893e-05, 6.132000000000012e-05, 6.144400000000078e-05, 6.13339999999997e-05, 6.126399999999838e-05, 6.140300000000154e-05, 6.14019999999986e-05, 6.12080000000001e-05, 6.12080000000001e-05, 6.130499999999761e-05, 6.143100000000068e-05, 6.141700000000111e-05, 6.141600000000164e-05, 6.127799999999795e-05, 6.138900000000197e-05, 6.140300000000154e-05, 6.125000000000227e-05, 6.141700000000111e-05, 6.12080000000001e-05, 6.127800000000141e-05, 6.127799999999795e-05, 6.122199999999967e-05, 6.137499999999893e-05, 6.120900000000304e-05, 6.134799999999926e-05, 6.140300000000154e-05, 6.13339999999997e-05, 6.145800000000035e-05, 6.140300000000154e-05, 6.127799999999795e-05]</msg>
<status status="PASS" starttime="20201030 18:28:19.190" endtime="20201030 18:28:19.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.185" endtime="20201030 18:28:19.193"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:19.197" endtime="20201030 18:28:19.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.195" endtime="20201030 18:28:19.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.194" endtime="20201030 18:28:19.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.838" endtime="20201030 18:28:19.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.838" endtime="20201030 18:28:19.217"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.226" endtime="20201030 18:28:19.244"></status>
</kw>
<msg timestamp="20201030 18:28:19.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.225" endtime="20201030 18:28:19.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.245" endtime="20201030 18:28:19.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.248" endtime="20201030 18:28:19.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.222" endtime="20201030 18:28:19.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.220" endtime="20201030 18:28:19.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.257" endtime="20201030 18:28:19.542"></status>
</kw>
<msg timestamp="20201030 18:28:19.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022080667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022143736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.255" endtime="20201030 18:28:19.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022080667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022143736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.547" endtime="20201030 18:28:19.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.555" endtime="20201030 18:28:19.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.252" endtime="20201030 18:28:19.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.251" endtime="20201030 18:28:19.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:19.561" level="INFO">${RESULT} = [{'diff': 6.30690000000024e-05}, {'diff': 6.208300000000097e-05}, {'diff': 6.234700000000079e-05}, {'diff': 6.227699999999947e-05}, {'diff': 6.231899999999818e-05}, {'diff': 6.23889999999995e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:19.558" endtime="20201030 18:28:19.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:19.566" level="INFO">${ACCURACY} = {'diff': [6.30690000000024e-05, 6.208300000000097e-05, 6.234700000000079e-05, 6.227699999999947e-05, 6.231899999999818e-05, 6.23889999999995e-05, 6.229200000000198e-05, 6.236100000000036e-05, 6.222200...</msg>
<status status="PASS" starttime="20201030 18:28:19.562" endtime="20201030 18:28:19.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.571" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 18:28:19.570" endtime="20201030 18:28:19.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.573" level="INFO">VALUE: [6.30690000000024e-05, 6.208300000000097e-05, 6.234700000000079e-05, 6.227699999999947e-05, 6.231899999999818e-05, 6.23889999999995e-05, 6.229200000000198e-05, 6.236100000000036e-05, 6.222200000000067e-05, 6.236100000000036e-05, 6.241699999999864e-05, 6.229199999999852e-05, 6.216700000000186e-05, 6.234800000000026e-05, 6.222200000000067e-05, 6.250000000000006e-05, 6.241699999999864e-05, 6.244499999999778e-05, 6.233399999999722e-05, 6.23340000000007e-05, 6.237499999999993e-05, 6.23340000000007e-05, 6.22080000000011e-05, 6.213899999999925e-05, 6.233300000000122e-05, 6.233299999999775e-05, 6.220799999999763e-05, 6.222200000000067e-05, 6.242999999999874e-05, 6.227799999999895e-05, 6.217999999999849e-05, 6.236100000000036e-05, 6.220799999999763e-05, 6.230600000000155e-05, 6.219400000000153e-05, 6.227799999999895e-05, 6.232000000000112e-05, 6.218099999999796e-05, 6.244400000000178e-05, 6.218100000000143e-05, 6.229200000000198e-05, 6.236100000000036e-05, 6.234800000000026e-05, 6.236100000000036e-05, 6.22629999999999e-05, 6.229199999999852e-05, 6.216700000000186e-05, 6.231900000000165e-05, 6.22080000000011e-05, 6.231900000000165e-05]</msg>
<status status="PASS" starttime="20201030 18:28:19.572" endtime="20201030 18:28:19.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.567" endtime="20201030 18:28:19.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:19.578" endtime="20201030 18:28:19.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.577" endtime="20201030 18:28:19.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.576" endtime="20201030 18:28:19.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.218" endtime="20201030 18:28:19.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.218" endtime="20201030 18:28:19.599"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.608" endtime="20201030 18:28:19.625"></status>
</kw>
<msg timestamp="20201030 18:28:19.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.606" endtime="20201030 18:28:19.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.627" endtime="20201030 18:28:19.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.629" endtime="20201030 18:28:19.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.604" endtime="20201030 18:28:19.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.602" endtime="20201030 18:28:19.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.638" endtime="20201030 18:28:19.926"></status>
</kw>
<msg timestamp="20201030 18:28:19.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022067639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022131569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.637" endtime="20201030 18:28:19.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022067639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022131569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.930" endtime="20201030 18:28:19.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.938" endtime="20201030 18:28:19.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.634" endtime="20201030 18:28:19.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.632" endtime="20201030 18:28:19.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:19.945" level="INFO">${RESULT} = [{'diff': 6.393000000000024e-05}, {'diff': 6.300000000000056e-05}, {'diff': 6.323600000000124e-05}, {'diff': 6.34439999999993e-05}, {'diff': 6.341699999999964e-05}, {'diff': 6.327799999999995e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:19.942" endtime="20201030 18:28:19.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:19.949" level="INFO">${ACCURACY} = {'diff': [6.393000000000024e-05, 6.300000000000056e-05, 6.323600000000124e-05, 6.34439999999993e-05, 6.341699999999964e-05, 6.327799999999995e-05, 6.343099999999921e-05, 6.32500000000008e-05, 6.331999...</msg>
<status status="PASS" starttime="20201030 18:28:19.946" endtime="20201030 18:28:19.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.954" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 18:28:19.953" endtime="20201030 18:28:19.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.956" level="INFO">VALUE: [6.393000000000024e-05, 6.300000000000056e-05, 6.323600000000124e-05, 6.34439999999993e-05, 6.341699999999964e-05, 6.327799999999995e-05, 6.343099999999921e-05, 6.32500000000008e-05, 6.331999999999866e-05, 6.340300000000007e-05, 6.32080000000021e-05, 6.330599999999909e-05, 6.332000000000212e-05, 6.336100000000136e-05, 6.343100000000268e-05, 6.327799999999995e-05, 6.326400000000038e-05, 6.338800000000103e-05, 6.337500000000093e-05, 6.331900000000265e-05, 6.336099999999789e-05, 6.337500000000093e-05, 6.326400000000038e-05, 6.330499999999961e-05, 6.320799999999863e-05, 6.333299999999875e-05, 6.32500000000008e-05, 6.323600000000124e-05, 6.336099999999789e-05, 6.323599999999777e-05, 6.337499999999746e-05, 6.322200000000167e-05, 6.352799999999673e-05, 6.329199999999952e-05, 6.318100000000243e-05, 6.324999999999734e-05, 6.345899999999835e-05, 6.333399999999823e-05, 6.344499999999878e-05, 6.327799999999995e-05, 6.337500000000093e-05, 6.32500000000008e-05, 6.319399999999906e-05, 6.32219999999982e-05, 6.323599999999777e-05, 6.341600000000017e-05, 6.334700000000179e-05, 6.341600000000017e-05, 6.331900000000265e-05, 6.323599999999777e-05]</msg>
<status status="PASS" starttime="20201030 18:28:19.955" endtime="20201030 18:28:19.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.950" endtime="20201030 18:28:19.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:19.961" endtime="20201030 18:28:19.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.960" endtime="20201030 18:28:19.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.959" endtime="20201030 18:28:19.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.600" endtime="20201030 18:28:19.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.599" endtime="20201030 18:28:19.982"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.991" endtime="20201030 18:28:20.008"></status>
</kw>
<msg timestamp="20201030 18:28:20.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.989" endtime="20201030 18:28:20.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.010" endtime="20201030 18:28:20.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.012" endtime="20201030 18:28:20.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.987" endtime="20201030 18:28:20.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.984" endtime="20201030 18:28:20.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.021" endtime="20201030 18:28:20.323"></status>
</kw>
<msg timestamp="20201030 18:28:20.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022661958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022726819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.020" endtime="20201030 18:28:20.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022661958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022726819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.327" endtime="20201030 18:28:20.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.335" endtime="20201030 18:28:20.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.017" endtime="20201030 18:28:20.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.016" endtime="20201030 18:28:20.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:20.342" level="INFO">${RESULT} = [{'diff': 6.486099999999939e-05}, {'diff': 6.411099999999864e-05}, {'diff': 6.437500000000193e-05}, {'diff': 6.430499999999714e-05}, {'diff': 6.44440000000003e-05}, {'diff': 6.427800000000095e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:20.339" endtime="20201030 18:28:20.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:20.346" level="INFO">${ACCURACY} = {'diff': [6.486099999999939e-05, 6.411099999999864e-05, 6.437500000000193e-05, 6.430499999999714e-05, 6.44440000000003e-05, 6.427800000000095e-05, 6.416700000000039e-05, 6.443100000000021e-05, 6.44310...</msg>
<status status="PASS" starttime="20201030 18:28:20.343" endtime="20201030 18:28:20.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.351" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 18:28:20.350" endtime="20201030 18:28:20.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.357" level="INFO">VALUE: [6.486099999999939e-05, 6.411099999999864e-05, 6.437500000000193e-05, 6.430499999999714e-05, 6.44440000000003e-05, 6.427800000000095e-05, 6.416700000000039e-05, 6.443100000000021e-05, 6.443100000000021e-05, 6.427800000000095e-05, 6.444499999999978e-05, 6.416700000000039e-05, 6.42500000000018e-05, 6.43479999999988e-05, 6.433299999999975e-05, 6.424999999999834e-05, 6.440300000000107e-05, 6.430500000000061e-05, 6.420799999999963e-05, 6.436100000000236e-05, 6.431900000000018e-05, 6.434699999999932e-05, 6.443000000000074e-05, 6.426400000000138e-05, 6.418000000000049e-05, 6.431900000000018e-05, 6.416700000000039e-05, 6.419400000000006e-05, 6.418099999999996e-05, 6.436099999999889e-05, 6.427800000000095e-05, 6.426400000000138e-05, 6.433399999999923e-05, 6.418099999999996e-05, 6.443100000000021e-05, 6.42500000000018e-05, 6.430600000000009e-05, 6.419499999999953e-05, 6.441700000000064e-05, 6.423599999999877e-05, 6.419400000000006e-05, 6.434699999999932e-05, 6.436100000000236e-05, 6.44440000000003e-05, 6.43890000000015e-05, 6.436100000000236e-05, 6.430500000000061e-05, 6.423600000000224e-05, 6.418000000000049e-05, 6.433299999999975e-05]</msg>
<status status="PASS" starttime="20201030 18:28:20.352" endtime="20201030 18:28:20.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.347" endtime="20201030 18:28:20.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:20.362" endtime="20201030 18:28:20.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.360" endtime="20201030 18:28:20.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.359" endtime="20201030 18:28:20.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.983" endtime="20201030 18:28:20.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.982" endtime="20201030 18:28:20.383"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.391" endtime="20201030 18:28:20.409"></status>
</kw>
<msg timestamp="20201030 18:28:20.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.390" endtime="20201030 18:28:20.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.411" endtime="20201030 18:28:20.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.413" endtime="20201030 18:28:20.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.387" endtime="20201030 18:28:20.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.385" endtime="20201030 18:28:20.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.422" endtime="20201030 18:28:20.708"></status>
</kw>
<msg timestamp="20201030 18:28:20.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021645333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02171125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:20.421" endtime="20201030 18:28:20.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021645333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02171125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:20.712" endtime="20201030 18:28:20.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.720" endtime="20201030 18:28:20.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.418" endtime="20201030 18:28:20.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.416" endtime="20201030 18:28:20.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:20.726" level="INFO">${RESULT} = [{'diff': 6.591700000000214e-05}, {'diff': 6.505599999999737e-05}, {'diff': 6.536200000000283e-05}, {'diff': 6.536099999999989e-05}, {'diff': 6.537499999999946e-05}, {'diff': 6.519399999999759e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:20.723" endtime="20201030 18:28:20.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:20.731" level="INFO">${ACCURACY} = {'diff': [6.591700000000214e-05, 6.505599999999737e-05, 6.536200000000283e-05, 6.536099999999989e-05, 6.537499999999946e-05, 6.519399999999759e-05, 6.52220000000002e-05, 6.515199999999888e-05, 6.51659...</msg>
<status status="PASS" starttime="20201030 18:28:20.727" endtime="20201030 18:28:20.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.736" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 18:28:20.735" endtime="20201030 18:28:20.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.738" level="INFO">VALUE: [6.591700000000214e-05, 6.505599999999737e-05, 6.536200000000283e-05, 6.536099999999989e-05, 6.537499999999946e-05, 6.519399999999759e-05, 6.52220000000002e-05, 6.515199999999888e-05, 6.516599999999845e-05, 6.531899999999771e-05, 6.531900000000118e-05, 6.5276999999999e-05, 6.530600000000109e-05, 6.519400000000106e-05, 6.518000000000149e-05, 6.527799999999848e-05, 6.524999999999934e-05, 6.518100000000096e-05, 6.524999999999934e-05, 6.541699999999817e-05, 6.533400000000023e-05, 6.519500000000053e-05, 6.544499999999731e-05, 6.529200000000152e-05, 6.54029999999986e-05, 6.543100000000121e-05, 6.53479999999998e-05, 6.545900000000035e-05, 6.52090000000001e-05, 6.54029999999986e-05, 6.517999999999802e-05, 6.545799999999741e-05, 6.5276999999999e-05, 6.538899999999903e-05, 6.523599999999977e-05, 6.538899999999903e-05, 6.526400000000238e-05, 6.524999999999934e-05, 6.54029999999986e-05, 6.524999999999934e-05, 6.537499999999946e-05, 6.527800000000195e-05, 6.523599999999977e-05, 6.523700000000271e-05, 6.541600000000217e-05, 6.52639999999989e-05, 6.523599999999977e-05, 6.543099999999774e-05, 6.532000000000066e-05, 6.538899999999903e-05]</msg>
<status status="PASS" starttime="20201030 18:28:20.737" endtime="20201030 18:28:20.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.732" endtime="20201030 18:28:20.739"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:20.743" endtime="20201030 18:28:20.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.742" endtime="20201030 18:28:20.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.740" endtime="20201030 18:28:20.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.383" endtime="20201030 18:28:20.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.383" endtime="20201030 18:28:20.764"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.772" endtime="20201030 18:28:20.790"></status>
</kw>
<msg timestamp="20201030 18:28:20.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.771" endtime="20201030 18:28:20.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.791" endtime="20201030 18:28:20.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.794" endtime="20201030 18:28:20.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.768" endtime="20201030 18:28:20.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.766" endtime="20201030 18:28:20.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.803" endtime="20201030 18:28:21.105"></status>
</kw>
<msg timestamp="20201030 18:28:21.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022007653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022074389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.801" endtime="20201030 18:28:21.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022007653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022074389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.109" endtime="20201030 18:28:21.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.117" endtime="20201030 18:28:21.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.799" endtime="20201030 18:28:21.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.797" endtime="20201030 18:28:21.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:21.123" level="INFO">${RESULT} = [{'diff': 6.673600000000127e-05}, {'diff': 6.615199999999988e-05}, {'diff': 6.638900000000003e-05}, {'diff': 6.62229999999972e-05}, {'diff': 6.634700000000132e-05}, {'diff': 6.629099999999957e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:21.120" endtime="20201030 18:28:21.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:21.128" level="INFO">${ACCURACY} = {'diff': [6.673600000000127e-05, 6.615199999999988e-05, 6.638900000000003e-05, 6.62229999999972e-05, 6.634700000000132e-05, 6.629099999999957e-05, 6.645799999999841e-05, 6.636099999999742e-05, 6.63750...</msg>
<status status="PASS" starttime="20201030 18:28:21.124" endtime="20201030 18:28:21.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.132" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 18:28:21.131" endtime="20201030 18:28:21.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.134" level="INFO">VALUE: [6.673600000000127e-05, 6.615199999999988e-05, 6.638900000000003e-05, 6.62229999999972e-05, 6.634700000000132e-05, 6.629099999999957e-05, 6.645799999999841e-05, 6.636099999999742e-05, 6.637500000000046e-05, 6.630499999999914e-05, 6.642999999999927e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.625000000000034e-05, 6.620799999999816e-05, 6.644399999999884e-05, 6.637500000000046e-05, 6.62639999999999e-05, 6.650000000000059e-05, 6.622199999999773e-05, 6.634699999999785e-05, 6.637500000000046e-05, 6.622300000000067e-05, 6.633399999999776e-05, 6.627799999999948e-05, 6.636200000000037e-05, 6.634799999999733e-05, 6.631899999999871e-05, 6.636100000000089e-05, 6.62359999999973e-05, 6.630600000000209e-05, 6.637500000000046e-05, 6.633299999999828e-05, 6.616699999999892e-05, 6.637500000000046e-05, 6.637499999999699e-05, 6.617999999999902e-05, 6.630599999999862e-05, 6.627799999999948e-05, 6.64029999999996e-05, 6.616699999999892e-05, 6.636099999999742e-05, 6.643099999999874e-05, 6.629199999999905e-05, 6.647200000000145e-05, 6.645900000000135e-05, 6.623699999999677e-05, 6.643099999999874e-05, 6.645799999999841e-05, 6.637500000000046e-05]</msg>
<status status="PASS" starttime="20201030 18:28:21.133" endtime="20201030 18:28:21.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.128" endtime="20201030 18:28:21.136"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:21.139" endtime="20201030 18:28:21.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.138" endtime="20201030 18:28:21.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.137" endtime="20201030 18:28:21.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.765" endtime="20201030 18:28:21.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.764" endtime="20201030 18:28:21.160"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.169" endtime="20201030 18:28:21.186"></status>
</kw>
<msg timestamp="20201030 18:28:21.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.167" endtime="20201030 18:28:21.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.188" endtime="20201030 18:28:21.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.190" endtime="20201030 18:28:21.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.165" endtime="20201030 18:28:21.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.162" endtime="20201030 18:28:21.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.199" endtime="20201030 18:28:21.485"></status>
</kw>
<msg timestamp="20201030 18:28:21.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022607222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022674861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.198" endtime="20201030 18:28:21.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022607222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022674861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.489" endtime="20201030 18:28:21.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.497" endtime="20201030 18:28:21.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.195" endtime="20201030 18:28:21.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.193" endtime="20201030 18:28:21.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:21.503" level="INFO">${RESULT} = [{'diff': 6.763900000000128e-05}, {'diff': 6.712500000000121e-05}, {'diff': 6.727800000000048e-05}, {'diff': 6.731999999999919e-05}, {'diff': 6.737500000000146e-05}, {'diff': 6.730599999999962e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:21.500" endtime="20201030 18:28:21.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:21.507" level="INFO">${ACCURACY} = {'diff': [6.763900000000128e-05, 6.712500000000121e-05, 6.727800000000048e-05, 6.731999999999919e-05, 6.737500000000146e-05, 6.730599999999962e-05, 6.723699999999777e-05, 6.743000000000027e-05, 6.7361...</msg>
<status status="PASS" starttime="20201030 18:28:21.504" endtime="20201030 18:28:21.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.512" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 18:28:21.511" endtime="20201030 18:28:21.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.514" level="INFO">VALUE: [6.763900000000128e-05, 6.712500000000121e-05, 6.727800000000048e-05, 6.731999999999919e-05, 6.737500000000146e-05, 6.730599999999962e-05, 6.723699999999777e-05, 6.743000000000027e-05, 6.736100000000189e-05, 6.720799999999916e-05, 6.722199999999873e-05, 6.72640000000009e-05, 6.731899999999971e-05, 6.725000000000134e-05, 6.737499999999799e-05, 6.745799999999941e-05, 6.723600000000177e-05, 6.733299999999928e-05, 6.723600000000177e-05, 6.736100000000189e-05, 6.731899999999971e-05, 6.730599999999962e-05, 6.737500000000146e-05, 6.725000000000134e-05, 6.720899999999863e-05, 6.741700000000017e-05, 6.72090000000021e-05, 6.734799999999833e-05, 6.725000000000134e-05, 6.73480000000018e-05, 6.747200000000245e-05, 6.74160000000007e-05, 6.74160000000007e-05, 6.723600000000177e-05, 6.724999999999787e-05, 6.737500000000146e-05, 6.743000000000027e-05, 6.730499999999667e-05, 6.729200000000005e-05, 6.716699999999992e-05, 6.737499999999799e-05, 6.720799999999916e-05, 6.743099999999974e-05, 6.745899999999888e-05, 6.72640000000009e-05, 6.729200000000005e-05, 6.736100000000189e-05, 6.745900000000235e-05, 6.730599999999962e-05, 6.731999999999919e-05]</msg>
<status status="PASS" starttime="20201030 18:28:21.513" endtime="20201030 18:28:21.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.508" endtime="20201030 18:28:21.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:21.520" endtime="20201030 18:28:21.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.519" endtime="20201030 18:28:21.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.517" endtime="20201030 18:28:21.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.161" endtime="20201030 18:28:21.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.160" endtime="20201030 18:28:21.541"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.550" endtime="20201030 18:28:21.567"></status>
</kw>
<msg timestamp="20201030 18:28:21.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.548" endtime="20201030 18:28:21.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.568" endtime="20201030 18:28:21.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.571" endtime="20201030 18:28:21.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.545" endtime="20201030 18:28:21.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.543" endtime="20201030 18:28:21.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.580" endtime="20201030 18:28:21.865"></status>
</kw>
<msg timestamp="20201030 18:28:21.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021836861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.578" endtime="20201030 18:28:21.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021836861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.869" endtime="20201030 18:28:21.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.877" endtime="20201030 18:28:21.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.576" endtime="20201030 18:28:21.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.574" endtime="20201030 18:28:21.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:21.884" level="INFO">${RESULT} = [{'diff': 6.851400000000216e-05}, {'diff': 6.811099999999917e-05}, {'diff': 6.816700000000092e-05}, {'diff': 6.824999999999887e-05}, {'diff': 6.84030000000016e-05}, {'diff': 6.82229999999992e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:21.881" endtime="20201030 18:28:21.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:21.889" level="INFO">${ACCURACY} = {'diff': [6.851400000000216e-05, 6.811099999999917e-05, 6.816700000000092e-05, 6.824999999999887e-05, 6.84030000000016e-05, 6.82229999999992e-05, 6.836100000000289e-05, 6.82229999999992e-05, 6.8318999...</msg>
<status status="PASS" starttime="20201030 18:28:21.885" endtime="20201030 18:28:21.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.893" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 18:28:21.892" endtime="20201030 18:28:21.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.896" level="INFO">VALUE: [6.851400000000216e-05, 6.811099999999917e-05, 6.816700000000092e-05, 6.824999999999887e-05, 6.84030000000016e-05, 6.82229999999992e-05, 6.836100000000289e-05, 6.82229999999992e-05, 6.831899999999724e-05, 6.825000000000234e-05, 6.822199999999973e-05, 6.836099999999942e-05, 6.824999999999887e-05, 6.819399999999712e-05, 6.820800000000016e-05, 6.84299999999978e-05, 6.838900000000203e-05, 6.843100000000074e-05, 6.829200000000105e-05, 6.841700000000117e-05, 6.845799999999694e-05, 6.838900000000203e-05, 6.82359999999993e-05, 6.832000000000019e-05, 6.82359999999993e-05, 6.825000000000234e-05, 6.844500000000031e-05, 6.838899999999856e-05, 6.819400000000059e-05, 6.831899999999724e-05, 6.816700000000092e-05, 6.838799999999909e-05, 6.826399999999844e-05, 6.837499999999899e-05, 6.82909999999981e-05, 6.822199999999973e-05, 6.836099999999942e-05, 6.831900000000071e-05, 6.827800000000148e-05, 6.832000000000019e-05, 6.833300000000028e-05, 6.845800000000041e-05, 6.837500000000246e-05, 6.840299999999813e-05, 6.843100000000074e-05, 6.841700000000117e-05, 6.844500000000031e-05, 6.820899999999963e-05, 6.834799999999933e-05, 6.843000000000127e-05]</msg>
<status status="PASS" starttime="20201030 18:28:21.894" endtime="20201030 18:28:21.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.890" endtime="20201030 18:28:21.897"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:21.900" endtime="20201030 18:28:21.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.899" endtime="20201030 18:28:21.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.898" endtime="20201030 18:28:21.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.542" endtime="20201030 18:28:21.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.541" endtime="20201030 18:28:21.921"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.930" endtime="20201030 18:28:21.947"></status>
</kw>
<msg timestamp="20201030 18:28:21.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.928" endtime="20201030 18:28:21.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.949" endtime="20201030 18:28:21.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.951" endtime="20201030 18:28:21.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.926" endtime="20201030 18:28:21.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.924" endtime="20201030 18:28:21.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.960" endtime="20201030 18:28:22.248"></status>
</kw>
<msg timestamp="20201030 18:28:22.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021674667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021743833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.959" endtime="20201030 18:28:22.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021674667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021743833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.252" endtime="20201030 18:28:22.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.260" endtime="20201030 18:28:22.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.956" endtime="20201030 18:28:22.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.954" endtime="20201030 18:28:22.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:22.267" level="INFO">${RESULT} = [{'diff': 6.916599999999898e-05}, {'diff': 6.916699999999845e-05}, {'diff': 6.924999999999987e-05}, {'diff': 6.937499999999999e-05}, {'diff': 6.916700000000192e-05}, {'diff': 6.940299999999913e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:22.263" endtime="20201030 18:28:22.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:22.271" level="INFO">${ACCURACY} = {'diff': [6.916599999999898e-05, 6.916699999999845e-05, 6.924999999999987e-05, 6.937499999999999e-05, 6.916700000000192e-05, 6.940299999999913e-05, 6.938899999999956e-05, 6.924999999999987e-05, 6.9416...</msg>
<status status="PASS" starttime="20201030 18:28:22.268" endtime="20201030 18:28:22.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.275" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 18:28:22.274" endtime="20201030 18:28:22.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.278" level="INFO">VALUE: [6.916599999999898e-05, 6.916699999999845e-05, 6.924999999999987e-05, 6.937499999999999e-05, 6.916700000000192e-05, 6.940299999999913e-05, 6.938899999999956e-05, 6.924999999999987e-05, 6.94169999999987e-05, 6.927799999999901e-05, 6.941700000000217e-05, 6.941700000000217e-05, 6.93619999999999e-05, 6.913799999999984e-05, 6.941599999999923e-05, 6.920800000000116e-05, 6.911100000000017e-05, 6.919399999999812e-05, 6.927800000000248e-05, 6.938899999999956e-05, 6.919400000000159e-05, 6.929199999999858e-05, 6.938899999999956e-05, 6.936100000000042e-05, 6.919500000000106e-05, 6.944500000000131e-05, 6.916700000000192e-05, 6.92360000000003e-05, 6.945900000000088e-05, 6.922200000000073e-05, 6.936100000000042e-05, 6.933399999999729e-05, 6.930600000000162e-05, 6.919500000000106e-05, 6.923699999999977e-05, 6.937499999999999e-05, 6.924999999999987e-05, 6.919399999999812e-05, 6.938899999999956e-05, 6.920799999999769e-05, 6.92640000000029e-05, 6.929100000000257e-05, 6.945800000000141e-05, 6.917999999999855e-05, 6.919399999999812e-05, 6.926399999999944e-05, 6.930599999999815e-05, 6.930600000000162e-05, 6.922200000000073e-05, 6.941599999999923e-05]</msg>
<status status="PASS" starttime="20201030 18:28:22.276" endtime="20201030 18:28:22.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.271" endtime="20201030 18:28:22.279"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:22.282" endtime="20201030 18:28:22.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.281" endtime="20201030 18:28:22.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.280" endtime="20201030 18:28:22.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.922" endtime="20201030 18:28:22.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.921" endtime="20201030 18:28:22.303"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.312" endtime="20201030 18:28:22.329"></status>
</kw>
<msg timestamp="20201030 18:28:22.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.310" endtime="20201030 18:28:22.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.331" endtime="20201030 18:28:22.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.333" endtime="20201030 18:28:22.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.308" endtime="20201030 18:28:22.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.306" endtime="20201030 18:28:22.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.342" endtime="20201030 18:28:22.628"></status>
</kw>
<msg timestamp="20201030 18:28:22.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022591042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022661222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.341" endtime="20201030 18:28:22.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022591042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022661222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.632" endtime="20201030 18:28:22.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.640" endtime="20201030 18:28:22.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.338" endtime="20201030 18:28:22.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.337" endtime="20201030 18:28:22.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:22.647" level="INFO">${RESULT} = [{'diff': 7.018000000000302e-05}, {'diff': 6.990299999999963e-05}, {'diff': 7.016699999999945e-05}, {'diff': 7.018099999999902e-05}, {'diff': 7.03620000000009e-05}, {'diff': 7.029199999999958e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:22.643" endtime="20201030 18:28:22.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:22.651" level="INFO">${ACCURACY} = {'diff': [7.018000000000302e-05, 6.990299999999963e-05, 7.016699999999945e-05, 7.018099999999902e-05, 7.03620000000009e-05, 7.029199999999958e-05, 7.044499999999884e-05, 7.025000000000087e-05, 7.03750...</msg>
<status status="PASS" starttime="20201030 18:28:22.648" endtime="20201030 18:28:22.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.655" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 18:28:22.654" endtime="20201030 18:28:22.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.658" level="INFO">VALUE: [7.018000000000302e-05, 6.990299999999963e-05, 7.016699999999945e-05, 7.018099999999902e-05, 7.03620000000009e-05, 7.029199999999958e-05, 7.044499999999884e-05, 7.025000000000087e-05, 7.037500000000099e-05, 7.026400000000044e-05, 7.031899999999924e-05, 7.027700000000053e-05, 7.022199999999826e-05, 7.015200000000041e-05, 7.034700000000185e-05, 7.043099999999927e-05, 7.029200000000305e-05, 7.016699999999945e-05, 7.023599999999783e-05, 7.033299999999881e-05, 7.02499999999974e-05, 7.018099999999902e-05, 7.04169999999997e-05, 7.030599999999915e-05, 7.026400000000044e-05, 7.031999999999872e-05, 7.027700000000053e-05, 7.04169999999997e-05, 7.043099999999927e-05, 7.026400000000044e-05, 7.02499999999974e-05, 7.023599999999783e-05, 7.015200000000041e-05, 7.020800000000216e-05, 7.036100000000142e-05, 7.033300000000228e-05, 7.020799999999869e-05, 7.041600000000023e-05, 7.016599999999998e-05, 7.026400000000044e-05, 7.04299999999998e-05, 7.018099999999902e-05, 7.037500000000099e-05, 7.034699999999838e-05, 7.040300000000013e-05, 7.019499999999859e-05, 7.033399999999829e-05, 7.02360000000013e-05, 7.025000000000087e-05, 7.030600000000262e-05]</msg>
<status status="PASS" starttime="20201030 18:28:22.656" endtime="20201030 18:28:22.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.652" endtime="20201030 18:28:22.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:22.663" endtime="20201030 18:28:22.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.662" endtime="20201030 18:28:22.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.661" endtime="20201030 18:28:22.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.304" endtime="20201030 18:28:22.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.303" endtime="20201030 18:28:22.684"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.693" endtime="20201030 18:28:22.710"></status>
</kw>
<msg timestamp="20201030 18:28:22.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.691" endtime="20201030 18:28:22.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.711" endtime="20201030 18:28:22.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.714" endtime="20201030 18:28:22.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.689" endtime="20201030 18:28:22.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.686" endtime="20201030 18:28:22.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.723" endtime="20201030 18:28:23.009"></status>
</kw>
<msg timestamp="20201030 18:28:23.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021507, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0215785, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201030 18:28:22.721" endtime="20201030 18:28:23.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021507, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0215785, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201030 18:28:23.013" endtime="20201030 18:28:23.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.021" endtime="20201030 18:28:23.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.719" endtime="20201030 18:28:23.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.717" endtime="20201030 18:28:23.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:23.028" level="INFO">${RESULT} = [{'diff': 7.150000000000212e-05}, {'diff': 7.118000000000055e-05}, {'diff': 7.122299999999873e-05}, {'diff': 7.133299999999981e-05}, {'diff': 7.137499999999852e-05}, {'diff': 7.138799999999862e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:23.025" endtime="20201030 18:28:23.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:23.033" level="INFO">${ACCURACY} = {'diff': [7.150000000000212e-05, 7.118000000000055e-05, 7.122299999999873e-05, 7.133299999999981e-05, 7.137499999999852e-05, 7.138799999999862e-05, 7.127700000000153e-05, 7.127700000000153e-05, 7.1361...</msg>
<status status="PASS" starttime="20201030 18:28:23.029" endtime="20201030 18:28:23.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.037" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 18:28:23.036" endtime="20201030 18:28:23.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.040" level="INFO">VALUE: [7.150000000000212e-05, 7.118000000000055e-05, 7.122299999999873e-05, 7.133299999999981e-05, 7.137499999999852e-05, 7.138799999999862e-05, 7.127700000000153e-05, 7.127700000000153e-05, 7.136100000000242e-05, 7.14300000000008e-05, 7.130600000000015e-05, 7.140299999999766e-05, 7.14300000000008e-05, 7.131899999999677e-05, 7.138900000000156e-05, 7.140300000000113e-05, 7.140300000000113e-05, 7.119400000000012e-05, 7.136099999999895e-05, 7.143100000000027e-05, 7.126400000000144e-05, 7.140300000000113e-05, 7.138900000000156e-05, 7.137499999999852e-05, 7.120899999999916e-05, 7.12499999999984e-05, 7.123700000000177e-05, 7.142999999999733e-05, 7.130500000000067e-05, 7.122199999999926e-05, 7.130500000000067e-05, 7.138899999999809e-05, 7.138899999999809e-05, 7.136100000000242e-05, 7.12910000000011e-05, 7.126400000000144e-05, 7.116700000000045e-05, 7.14170000000007e-05, 7.118100000000002e-05, 7.130600000000015e-05, 7.145799999999994e-05, 7.118100000000002e-05, 7.125000000000187e-05, 7.144499999999984e-05, 7.145899999999941e-05, 7.144400000000037e-05, 7.123599999999883e-05, 7.12230000000022e-05, 7.131999999999972e-05, 7.125000000000187e-05]</msg>
<status status="PASS" starttime="20201030 18:28:23.038" endtime="20201030 18:28:23.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.034" endtime="20201030 18:28:23.041"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:23.045" endtime="20201030 18:28:23.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.043" endtime="20201030 18:28:23.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.042" endtime="20201030 18:28:23.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.685" endtime="20201030 18:28:23.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.684" endtime="20201030 18:28:23.065"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.074" endtime="20201030 18:28:23.092"></status>
</kw>
<msg timestamp="20201030 18:28:23.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.072" endtime="20201030 18:28:23.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.093" endtime="20201030 18:28:23.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.096" endtime="20201030 18:28:23.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.070" endtime="20201030 18:28:23.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.068" endtime="20201030 18:28:23.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.105" endtime="20201030 18:28:23.390"></status>
</kw>
<msg timestamp="20201030 18:28:23.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021819583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.103" endtime="20201030 18:28:23.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021819583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.395" endtime="20201030 18:28:23.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.403" endtime="20201030 18:28:23.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.101" endtime="20201030 18:28:23.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.099" endtime="20201030 18:28:23.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:23.409" level="INFO">${RESULT} = [{'diff': 7.255499999999845e-05}, {'diff': 7.212499999999927e-05}, {'diff': 7.245900000000041e-05}, {'diff': 7.237499999999952e-05}, {'diff': 7.233300000000081e-05}, {'diff': 7.226400000000244e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:23.406" endtime="20201030 18:28:23.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:23.413" level="INFO">${ACCURACY} = {'diff': [7.255499999999845e-05, 7.212499999999927e-05, 7.245900000000041e-05, 7.237499999999952e-05, 7.233300000000081e-05, 7.226400000000244e-05, 7.226399999999897e-05, 7.244499999999737e-05, 7.2360...</msg>
<status status="PASS" starttime="20201030 18:28:23.410" endtime="20201030 18:28:23.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.418" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 18:28:23.417" endtime="20201030 18:28:23.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.420" level="INFO">VALUE: [7.255499999999845e-05, 7.212499999999927e-05, 7.245900000000041e-05, 7.237499999999952e-05, 7.233300000000081e-05, 7.226400000000244e-05, 7.226399999999897e-05, 7.244499999999737e-05, 7.236099999999995e-05, 7.220900000000016e-05, 7.236099999999995e-05, 7.237499999999952e-05, 7.227799999999854e-05, 7.22910000000021e-05, 7.213799999999937e-05, 7.219399999999765e-05, 7.225000000000287e-05, 7.227699999999906e-05, 7.23049999999982e-05, 7.231899999999777e-05, 7.231900000000124e-05, 7.219399999999765e-05, 7.238899999999909e-05, 7.243100000000127e-05, 7.240300000000213e-05, 7.237499999999952e-05, 7.230599999999768e-05, 7.22499999999994e-05, 7.22499999999994e-05, 7.241699999999823e-05, 7.24300000000018e-05, 7.213900000000231e-05, 7.219500000000059e-05, 7.216699999999798e-05, 7.240300000000213e-05, 7.244400000000137e-05, 7.237499999999952e-05, 7.240300000000213e-05, 7.240200000000266e-05, 7.243100000000127e-05, 7.220800000000069e-05, 7.234700000000038e-05, 7.230500000000167e-05, 7.240299999999866e-05, 7.24439999999979e-05, 7.229200000000158e-05, 7.237499999999952e-05, 7.220800000000069e-05, 7.216699999999798e-05, 7.227800000000201e-05]</msg>
<status status="PASS" starttime="20201030 18:28:23.419" endtime="20201030 18:28:23.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.414" endtime="20201030 18:28:23.422"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:23.425" endtime="20201030 18:28:23.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.424" endtime="20201030 18:28:23.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.423" endtime="20201030 18:28:23.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.066" endtime="20201030 18:28:23.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.066" endtime="20201030 18:28:23.446"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.455" endtime="20201030 18:28:23.473"></status>
</kw>
<msg timestamp="20201030 18:28:23.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.453" endtime="20201030 18:28:23.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.475" endtime="20201030 18:28:23.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.477" endtime="20201030 18:28:23.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.451" endtime="20201030 18:28:23.480"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.449" endtime="20201030 18:28:23.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.486" endtime="20201030 18:28:23.771"></status>
</kw>
<msg timestamp="20201030 18:28:23.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022566472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022639597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.485" endtime="20201030 18:28:23.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022566472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022639597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.776" endtime="20201030 18:28:23.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.784" endtime="20201030 18:28:23.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.482" endtime="20201030 18:28:23.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.481" endtime="20201030 18:28:23.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:23.790" level="INFO">${RESULT} = [{'diff': 7.312500000000027e-05}, {'diff': 7.298600000000058e-05}, {'diff': 7.330599999999868e-05}, {'diff': 7.333299999999834e-05}, {'diff': 7.337500000000052e-05}, {'diff': 7.336100000000095e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:23.787" endtime="20201030 18:28:23.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:23.794" level="INFO">${ACCURACY} = {'diff': [7.312500000000027e-05, 7.298600000000058e-05, 7.330599999999868e-05, 7.333299999999834e-05, 7.337500000000052e-05, 7.336100000000095e-05, 7.329199999999911e-05, 7.32370000000003e-05, 7.32500...</msg>
<status status="PASS" starttime="20201030 18:28:23.791" endtime="20201030 18:28:23.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.799" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 18:28:23.798" endtime="20201030 18:28:23.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.804" level="INFO">VALUE: [7.312500000000027e-05, 7.298600000000058e-05, 7.330599999999868e-05, 7.333299999999834e-05, 7.337500000000052e-05, 7.336100000000095e-05, 7.329199999999911e-05, 7.32370000000003e-05, 7.32500000000004e-05, 7.315299999999941e-05, 7.338900000000009e-05, 7.331899999999877e-05, 7.32630000000005e-05, 7.323600000000083e-05, 7.327700000000006e-05, 7.342999999999933e-05, 7.323600000000083e-05, 7.316599999999951e-05, 7.333300000000181e-05, 7.326399999999997e-05, 7.323600000000083e-05, 7.338900000000009e-05, 7.316700000000245e-05, 7.330600000000215e-05, 7.319500000000159e-05, 7.327799999999954e-05, 7.337500000000052e-05, 7.327799999999954e-05, 7.319500000000159e-05, 7.337500000000052e-05, 7.337500000000052e-05, 7.336200000000043e-05, 7.34300000000028e-05, 7.338800000000062e-05, 7.319399999999865e-05, 7.322200000000126e-05, 7.336099999999748e-05, 7.320800000000169e-05, 7.322300000000073e-05, 7.336100000000095e-05, 7.347200000000151e-05, 7.336099999999748e-05, 7.334699999999791e-05, 7.338900000000009e-05, 7.333299999999834e-05, 7.337499999999705e-05, 7.34300000000028e-05, 7.341699999999923e-05, 7.338900000000009e-05, 7.318099999999855e-05]</msg>
<status status="PASS" starttime="20201030 18:28:23.800" endtime="20201030 18:28:23.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.795" endtime="20201030 18:28:23.806"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:23.809" endtime="20201030 18:28:23.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.808" endtime="20201030 18:28:23.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.807" endtime="20201030 18:28:23.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.447" endtime="20201030 18:28:23.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.447" endtime="20201030 18:28:23.830"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.839" endtime="20201030 18:28:23.857"></status>
</kw>
<msg timestamp="20201030 18:28:23.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.837" endtime="20201030 18:28:23.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.859" endtime="20201030 18:28:23.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.861" endtime="20201030 18:28:23.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.835" endtime="20201030 18:28:23.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.833" endtime="20201030 18:28:23.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.870" endtime="20201030 18:28:24.156"></status>
</kw>
<msg timestamp="20201030 18:28:24.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021910042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021984514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.869" endtime="20201030 18:28:24.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021910042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021984514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.160" endtime="20201030 18:28:24.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.168" endtime="20201030 18:28:24.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.866" endtime="20201030 18:28:24.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.865" endtime="20201030 18:28:24.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:24.174" level="INFO">${RESULT} = [{'diff': 7.447199999999904e-05}, {'diff': 7.391699999999973e-05}, {'diff': 7.419500000000259e-05}, {'diff': 7.441700000000023e-05}, {'diff': 7.427700000000106e-05}, {'diff': 7.427700000000106e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:24.171" endtime="20201030 18:28:24.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:24.179" level="INFO">${ACCURACY} = {'diff': [7.447199999999904e-05, 7.391699999999973e-05, 7.419500000000259e-05, 7.441700000000023e-05, 7.427700000000106e-05, 7.427700000000106e-05, 7.429100000000063e-05, 7.420799999999922e-05, 7.4291...</msg>
<status status="PASS" starttime="20201030 18:28:24.175" endtime="20201030 18:28:24.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.184" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 18:28:24.183" endtime="20201030 18:28:24.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.186" level="INFO">VALUE: [7.447199999999904e-05, 7.391699999999973e-05, 7.419500000000259e-05, 7.441700000000023e-05, 7.427700000000106e-05, 7.427700000000106e-05, 7.429100000000063e-05, 7.420799999999922e-05, 7.429100000000063e-05, 7.44029999999972e-05, 7.418000000000008e-05, 7.441600000000076e-05, 7.426400000000097e-05, 7.427800000000054e-05, 7.444499999999937e-05, 7.441700000000023e-05, 7.418099999999955e-05, 7.436099999999848e-05, 7.430599999999968e-05, 7.430599999999968e-05, 7.423599999999836e-05, 7.427800000000054e-05, 7.434800000000186e-05, 7.440300000000066e-05, 7.438900000000109e-05, 7.438900000000109e-05, 7.443000000000033e-05, 7.43050000000002e-05, 7.434700000000238e-05, 7.438899999999762e-05, 7.43050000000002e-05, 7.426400000000097e-05, 7.44439999999999e-05, 7.431899999999977e-05, 7.419399999999965e-05, 7.436100000000195e-05, 7.420799999999922e-05, 7.438900000000109e-05, 7.413900000000084e-05, 7.415300000000041e-05, 7.445899999999894e-05, 7.42639999999975e-05, 7.426400000000097e-05, 7.422199999999879e-05, 7.441700000000023e-05, 7.44309999999998e-05, 7.437499999999805e-05, 7.436099999999848e-05, 7.42500000000014e-05, 7.419399999999965e-05]</msg>
<status status="PASS" starttime="20201030 18:28:24.185" endtime="20201030 18:28:24.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.180" endtime="20201030 18:28:24.188"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:24.191" endtime="20201030 18:28:24.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.190" endtime="20201030 18:28:24.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.189" endtime="20201030 18:28:24.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.831" endtime="20201030 18:28:24.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.830" endtime="20201030 18:28:24.212"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.220" endtime="20201030 18:28:24.238"></status>
</kw>
<msg timestamp="20201030 18:28:24.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.219" endtime="20201030 18:28:24.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.239" endtime="20201030 18:28:24.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.242" endtime="20201030 18:28:24.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.216" endtime="20201030 18:28:24.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.214" endtime="20201030 18:28:24.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.251" endtime="20201030 18:28:24.538"></status>
</kw>
<msg timestamp="20201030 18:28:24.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021996083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.249" endtime="20201030 18:28:24.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021996083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.542" endtime="20201030 18:28:24.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.550" endtime="20201030 18:28:24.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.247" endtime="20201030 18:28:24.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.245" endtime="20201030 18:28:24.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:24.557" level="INFO">${RESULT} = [{'diff': 7.579200000000161e-05}, {'diff': 7.49310000000003e-05}, {'diff': 7.518100000000055e-05}, {'diff': 7.540199999999872e-05}, {'diff': 7.526400000000197e-05}, {'diff': 7.520800000000022e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:24.554" endtime="20201030 18:28:24.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:24.561" level="INFO">${ACCURACY} = {'diff': [7.579200000000161e-05, 7.49310000000003e-05, 7.518100000000055e-05, 7.540199999999872e-05, 7.526400000000197e-05, 7.520800000000022e-05, 7.52500000000024e-05, 7.509699999999966e-05, 7.523599...</msg>
<status status="PASS" starttime="20201030 18:28:24.558" endtime="20201030 18:28:24.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.565" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 18:28:24.564" endtime="20201030 18:28:24.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.568" level="INFO">VALUE: [7.579200000000161e-05, 7.49310000000003e-05, 7.518100000000055e-05, 7.540199999999872e-05, 7.526400000000197e-05, 7.520800000000022e-05, 7.52500000000024e-05, 7.509699999999966e-05, 7.523599999999936e-05, 7.512500000000227e-05, 7.520800000000022e-05, 7.522199999999979e-05, 7.548599999999961e-05, 7.541700000000123e-05, 7.519400000000065e-05, 7.541699999999776e-05, 7.54310000000008e-05, 7.538899999999862e-05, 7.54029999999982e-05, 7.544500000000037e-05, 7.519500000000012e-05, 7.540300000000166e-05, 7.516700000000098e-05, 7.526400000000197e-05, 7.516700000000098e-05, 7.522299999999926e-05, 7.524999999999893e-05, 7.53050000000012e-05, 7.524999999999893e-05, 7.529100000000163e-05, 7.531900000000077e-05, 7.518000000000108e-05, 7.518000000000108e-05, 7.527800000000154e-05, 7.536099999999948e-05, 7.520899999999969e-05, 7.541700000000123e-05, 7.529199999999764e-05, 7.522199999999979e-05, 7.536099999999948e-05, 7.536099999999948e-05, 7.526400000000197e-05, 7.518099999999708e-05, 7.520899999999969e-05, 7.519500000000012e-05, 7.52500000000024e-05, 7.518100000000055e-05, 7.537499999999905e-05, 7.531900000000077e-05, 7.5457999999997e-05]</msg>
<status status="PASS" starttime="20201030 18:28:24.566" endtime="20201030 18:28:24.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.562" endtime="20201030 18:28:24.569"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:24.573" endtime="20201030 18:28:24.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.571" endtime="20201030 18:28:24.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.570" endtime="20201030 18:28:24.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.213" endtime="20201030 18:28:24.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.212" endtime="20201030 18:28:24.596"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.609" endtime="20201030 18:28:24.631"></status>
</kw>
<msg timestamp="20201030 18:28:24.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.607" endtime="20201030 18:28:24.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.632" endtime="20201030 18:28:24.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.635" endtime="20201030 18:28:24.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.602" endtime="20201030 18:28:24.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.599" endtime="20201030 18:28:24.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.644" endtime="20201030 18:28:24.929"></status>
</kw>
<msg timestamp="20201030 18:28:24.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032038389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032114764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.643" endtime="20201030 18:28:24.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032038389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032114764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.933" endtime="20201030 18:28:24.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.941" endtime="20201030 18:28:24.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.640" endtime="20201030 18:28:24.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.638" endtime="20201030 18:28:24.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:24.948" level="INFO">${RESULT} = [{'diff': 7.637499999999658e-05}, {'diff': 7.593000000000183e-05}, {'diff': 7.63890000000031e-05}, {'diff': 7.622300000000026e-05}, {'diff': 7.63189999999983e-05}, {'diff': 7.63189999999983e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:28:24.945" endtime="20201030 18:28:24.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:24.952" level="INFO">${ACCURACY} = {'diff': [7.637499999999658e-05, 7.593000000000183e-05, 7.63890000000031e-05, 7.622300000000026e-05, 7.63189999999983e-05, 7.63189999999983e-05, 7.630499999999873e-05, 7.618000000000208e-05, 7.6360999...</msg>
<status status="PASS" starttime="20201030 18:28:24.949" endtime="20201030 18:28:24.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.956" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 18:28:24.955" endtime="20201030 18:28:24.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.959" level="INFO">VALUE: [7.637499999999658e-05, 7.593000000000183e-05, 7.63890000000031e-05, 7.622300000000026e-05, 7.63189999999983e-05, 7.63189999999983e-05, 7.630499999999873e-05, 7.618000000000208e-05, 7.636099999999701e-05, 7.623600000000036e-05, 7.633299999999787e-05, 7.630499999999873e-05, 7.640299999999572e-05, 7.622200000000079e-05, 7.629199999999864e-05, 7.63890000000031e-05, 7.618100000000155e-05, 7.629200000000558e-05, 7.630600000000515e-05, 7.636100000000395e-05, 7.629199999999864e-05, 7.637499999999658e-05, 7.630599999999821e-05, 7.623699999999983e-05, 7.624999999999993e-05, 7.63189999999983e-05, 7.630499999999873e-05, 7.62639999999995e-05, 7.64440000000019e-05, 7.636099999999701e-05, 7.629199999999864e-05, 7.64169999999953e-05, 7.616699999999504e-05, 7.630600000000515e-05, 7.637500000000352e-05, 7.622200000000079e-05, 7.620800000000122e-05, 7.630599999999821e-05, 7.640300000000266e-05, 7.618100000000155e-05, 7.62639999999995e-05, 7.638899999999615e-05, 7.620900000000069e-05, 7.629199999999864e-05, 7.638899999999615e-05, 7.638799999999668e-05, 7.638899999999615e-05, 7.617999999999514e-05, 7.624999999999993e-05, 7.640300000000266e-05]</msg>
<status status="PASS" starttime="20201030 18:28:24.957" endtime="20201030 18:28:24.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.953" endtime="20201030 18:28:24.961"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:24.965" endtime="20201030 18:28:24.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.963" endtime="20201030 18:28:24.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.962" endtime="20201030 18:28:24.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.597" endtime="20201030 18:28:24.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.597" endtime="20201030 18:28:24.986"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.994" endtime="20201030 18:28:25.013"></status>
</kw>
<msg timestamp="20201030 18:28:25.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.993" endtime="20201030 18:28:25.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.014" endtime="20201030 18:28:25.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.017" endtime="20201030 18:28:25.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.990" endtime="20201030 18:28:25.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.988" endtime="20201030 18:28:25.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.026" endtime="20201030 18:28:25.328"></status>
</kw>
<msg timestamp="20201030 18:28:25.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021856958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.024" endtime="20201030 18:28:25.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021856958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.332" endtime="20201030 18:28:25.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.340" endtime="20201030 18:28:25.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.022" endtime="20201030 18:28:25.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.020" endtime="20201030 18:28:25.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:25.347" level="INFO">${RESULT} = [{'diff': 7.742999999999986e-05}, {'diff': 7.712499999999733e-05}, {'diff': 7.741699999999976e-05}, {'diff': 7.72640000000005e-05}, {'diff': 7.727800000000007e-05}, {'diff': 7.737500000000105e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:25.344" endtime="20201030 18:28:25.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:25.352" level="INFO">${ACCURACY} = {'diff': [7.742999999999986e-05, 7.712499999999733e-05, 7.741699999999976e-05, 7.72640000000005e-05, 7.727800000000007e-05, 7.737500000000105e-05, 7.727800000000007e-05, 7.74310000000028e-05, 7.717999...</msg>
<status status="PASS" starttime="20201030 18:28:25.348" endtime="20201030 18:28:25.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.357" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 18:28:25.356" endtime="20201030 18:28:25.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.359" level="INFO">VALUE: [7.742999999999986e-05, 7.712499999999733e-05, 7.741699999999976e-05, 7.72640000000005e-05, 7.727800000000007e-05, 7.737500000000105e-05, 7.727800000000007e-05, 7.74310000000028e-05, 7.717999999999961e-05, 7.736099999999801e-05, 7.733399999999835e-05, 7.720800000000222e-05, 7.729100000000017e-05, 7.734700000000191e-05, 7.719399999999918e-05, 7.727800000000007e-05, 7.734699999999844e-05, 7.723600000000136e-05, 7.742999999999986e-05, 7.743099999999933e-05, 7.738900000000062e-05, 7.733299999999887e-05, 7.729199999999964e-05, 7.720800000000222e-05, 7.740200000000072e-05, 7.730600000000268e-05, 7.723599999999789e-05, 7.74449999999989e-05, 7.738900000000062e-05, 7.740200000000072e-05, 7.732000000000225e-05, 7.73189999999993e-05, 7.736099999999801e-05, 7.7457999999999e-05, 7.715200000000047e-05, 7.736100000000148e-05, 7.72640000000005e-05, 7.729199999999964e-05, 7.73189999999993e-05, 7.730499999999974e-05, 7.743099999999933e-05, 7.731999999999878e-05, 7.745900000000194e-05, 7.734700000000191e-05, 7.743099999999933e-05, 7.72640000000005e-05, 7.736100000000148e-05, 7.731999999999878e-05, 7.716699999999951e-05, 7.725000000000093e-05]</msg>
<status status="PASS" starttime="20201030 18:28:25.358" endtime="20201030 18:28:25.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.353" endtime="20201030 18:28:25.360"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:25.364" endtime="20201030 18:28:25.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.363" endtime="20201030 18:28:25.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.361" endtime="20201030 18:28:25.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.987" endtime="20201030 18:28:25.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.986" endtime="20201030 18:28:25.385"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.394" endtime="20201030 18:28:25.412"></status>
</kw>
<msg timestamp="20201030 18:28:25.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.392" endtime="20201030 18:28:25.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.414" endtime="20201030 18:28:25.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.416" endtime="20201030 18:28:25.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.390" endtime="20201030 18:28:25.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.388" endtime="20201030 18:28:25.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.425" endtime="20201030 18:28:25.711"></status>
</kw>
<msg timestamp="20201030 18:28:25.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021862347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.424" endtime="20201030 18:28:25.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021862347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.716" endtime="20201030 18:28:25.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.724" endtime="20201030 18:28:25.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.421" endtime="20201030 18:28:25.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.419" endtime="20201030 18:28:25.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:25.731" level="INFO">${RESULT} = [{'diff': 7.883399999999985e-05}, {'diff': 7.804200000000039e-05}, {'diff': 7.836100000000248e-05}, {'diff': 7.833399999999935e-05}, {'diff': 7.818100000000008e-05}, {'diff': 7.843100000000033e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:25.728" endtime="20201030 18:28:25.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:25.735" level="INFO">${ACCURACY} = {'diff': [7.883399999999985e-05, 7.804200000000039e-05, 7.836100000000248e-05, 7.833399999999935e-05, 7.818100000000008e-05, 7.843100000000033e-05, 7.823599999999889e-05, 7.822199999999932e-05, 7.8249...</msg>
<status status="PASS" starttime="20201030 18:28:25.732" endtime="20201030 18:28:25.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.740" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 18:28:25.739" endtime="20201030 18:28:25.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.743" level="INFO">VALUE: [7.883399999999985e-05, 7.804200000000039e-05, 7.836100000000248e-05, 7.833399999999935e-05, 7.818100000000008e-05, 7.843100000000033e-05, 7.823599999999889e-05, 7.822199999999932e-05, 7.824999999999846e-05, 7.82909999999977e-05, 7.841600000000129e-05, 7.841599999999782e-05, 7.834799999999892e-05, 7.83190000000003e-05, 7.844400000000043e-05, 7.838900000000162e-05, 7.824999999999846e-05, 7.82779999999976e-05, 7.843100000000033e-05, 7.829200000000064e-05, 7.830599999999674e-05, 7.824999999999846e-05, 7.816700000000051e-05, 7.84449999999999e-05, 7.837500000000205e-05, 7.840199999999825e-05, 7.826300000000203e-05, 7.827800000000107e-05, 7.836099999999901e-05, 7.83190000000003e-05, 7.833299999999987e-05, 7.838899999999815e-05, 7.84030000000012e-05, 7.82640000000015e-05, 7.823600000000236e-05, 7.819400000000018e-05, 7.818100000000008e-05, 7.834699999999944e-05, 7.83190000000003e-05, 7.838900000000162e-05, 7.826399999999803e-05, 7.816700000000051e-05, 7.819500000000312e-05, 7.847299999999904e-05, 7.825000000000193e-05, 7.833399999999935e-05, 7.825000000000193e-05, 7.830600000000021e-05, 7.825000000000193e-05, 7.833299999999987e-05]</msg>
<status status="PASS" starttime="20201030 18:28:25.741" endtime="20201030 18:28:25.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.736" endtime="20201030 18:28:25.744"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:25.748" endtime="20201030 18:28:25.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.746" endtime="20201030 18:28:25.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.745" endtime="20201030 18:28:25.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.386" endtime="20201030 18:28:25.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.385" endtime="20201030 18:28:25.769"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.780" endtime="20201030 18:28:25.799"></status>
</kw>
<msg timestamp="20201030 18:28:25.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.779" endtime="20201030 18:28:25.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.801" endtime="20201030 18:28:25.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.804" endtime="20201030 18:28:25.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.776" endtime="20201030 18:28:25.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.773" endtime="20201030 18:28:25.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.813" endtime="20201030 18:28:26.122"></status>
</kw>
<msg timestamp="20201030 18:28:26.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025780708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025860208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.811" endtime="20201030 18:28:26.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025780708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025860208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.126" endtime="20201030 18:28:26.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.134" endtime="20201030 18:28:26.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.809" endtime="20201030 18:28:26.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.807" endtime="20201030 18:28:26.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:26.141" level="INFO">${RESULT} = [{'diff': 7.949999999999971e-05}, {'diff': 7.905599999999749e-05}, {'diff': 7.919400000000118e-05}, {'diff': 7.922199999999685e-05}, {'diff': 7.923599999999989e-05}, {'diff': 7.932000000000078e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:26.138" endtime="20201030 18:28:26.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:26.146" level="INFO">${ACCURACY} = {'diff': [7.949999999999971e-05, 7.905599999999749e-05, 7.919400000000118e-05, 7.922199999999685e-05, 7.923599999999989e-05, 7.932000000000078e-05, 7.920800000000075e-05, 7.941700000000176e-05, 7.9361...</msg>
<status status="PASS" starttime="20201030 18:28:26.142" endtime="20201030 18:28:26.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.150" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 18:28:26.149" endtime="20201030 18:28:26.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.153" level="INFO">VALUE: [7.949999999999971e-05, 7.905599999999749e-05, 7.919400000000118e-05, 7.922199999999685e-05, 7.923599999999989e-05, 7.932000000000078e-05, 7.920800000000075e-05, 7.941700000000176e-05, 7.936100000000001e-05, 7.920900000000022e-05, 7.930599999999774e-05, 7.93190000000013e-05, 7.93190000000013e-05, 7.948600000000014e-05, 7.92640000000025e-05, 7.923599999999989e-05, 7.936100000000001e-05, 7.922200000000032e-05, 7.916599999999857e-05, 7.920800000000075e-05, 7.918000000000161e-05, 7.918100000000108e-05, 7.918099999999761e-05, 7.929199999999817e-05, 7.948600000000014e-05, 7.926399999999903e-05, 7.924999999999946e-05, 7.920900000000022e-05, 7.945900000000047e-05, 7.937499999999958e-05, 7.944499999999743e-05, 7.923599999999989e-05, 7.940199999999925e-05, 7.93190000000013e-05, 7.927699999999913e-05, 7.936100000000001e-05, 7.940199999999925e-05, 7.917999999999814e-05, 7.938899999999915e-05, 7.912499999999933e-05, 7.937499999999958e-05, 7.929199999999817e-05, 7.919399999999771e-05, 7.929200000000164e-05, 7.934700000000044e-05, 7.92779999999986e-05, 7.945900000000047e-05, 7.932000000000078e-05, 7.92229999999998e-05, 7.92779999999986e-05]</msg>
<status status="PASS" starttime="20201030 18:28:26.151" endtime="20201030 18:28:26.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.146" endtime="20201030 18:28:26.155"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:26.159" endtime="20201030 18:28:26.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.157" endtime="20201030 18:28:26.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.156" endtime="20201030 18:28:26.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.770" endtime="20201030 18:28:26.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.769" endtime="20201030 18:28:26.180"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.189" endtime="20201030 18:28:26.207"></status>
</kw>
<msg timestamp="20201030 18:28:26.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.187" endtime="20201030 18:28:26.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.209" endtime="20201030 18:28:26.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.212" endtime="20201030 18:28:26.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.184" endtime="20201030 18:28:26.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.182" endtime="20201030 18:28:26.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.221" endtime="20201030 18:28:26.507"></status>
</kw>
<msg timestamp="20201030 18:28:26.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022456889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022537389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.220" endtime="20201030 18:28:26.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022456889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022537389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.511" endtime="20201030 18:28:26.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.520" endtime="20201030 18:28:26.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.217" endtime="20201030 18:28:26.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.215" endtime="20201030 18:28:26.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:26.527" level="INFO">${RESULT} = [{'diff': 8.050000000000071e-05}, {'diff': 8.007000000000153e-05}, {'diff': 8.019500000000165e-05}, {'diff': 8.013800000000043e-05}, {'diff': 8.038800000000068e-05}, {'diff': 8.042999999999939e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:26.523" endtime="20201030 18:28:26.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:26.532" level="INFO">${ACCURACY} = {'diff': [8.050000000000071e-05, 8.007000000000153e-05, 8.019500000000165e-05, 8.013800000000043e-05, 8.038800000000068e-05, 8.042999999999939e-05, 8.02909999999997e-05, 8.037500000000058e-05, 8.02220...</msg>
<status status="PASS" starttime="20201030 18:28:26.528" endtime="20201030 18:28:26.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.536" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 18:28:26.535" endtime="20201030 18:28:26.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.539" level="INFO">VALUE: [8.050000000000071e-05, 8.007000000000153e-05, 8.019500000000165e-05, 8.013800000000043e-05, 8.038800000000068e-05, 8.042999999999939e-05, 8.02909999999997e-05, 8.037500000000058e-05, 8.022200000000132e-05, 8.025000000000046e-05, 8.036100000000101e-05, 8.027800000000307e-05, 8.037500000000058e-05, 8.012499999999687e-05, 8.036100000000101e-05, 8.026400000000003e-05, 8.036100000000101e-05, 8.01109999999973e-05, 8.048600000000114e-05, 8.04169999999993e-05, 8.022200000000132e-05, 8.020899999999775e-05, 8.036200000000049e-05, 8.027700000000013e-05, 8.016599999999957e-05, 8.036100000000101e-05, 8.026400000000003e-05, 8.044399999999896e-05, 8.042999999999939e-05, 8.03329999999984e-05, 8.031899999999884e-05, 8.038900000000015e-05, 8.04169999999993e-05, 8.037500000000058e-05, 8.032000000000178e-05, 8.019500000000165e-05, 8.045900000000147e-05, 8.015299999999947e-05, 8.02779999999996e-05, 8.034800000000092e-05, 8.04450000000019e-05, 8.048599999999767e-05, 8.03190000000023e-05, 8.022200000000132e-05, 8.022200000000132e-05, 8.026400000000003e-05, 8.029100000000317e-05, 8.030599999999874e-05, 8.034699999999798e-05, 8.04169999999993e-05]</msg>
<status status="PASS" starttime="20201030 18:28:26.538" endtime="20201030 18:28:26.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.533" endtime="20201030 18:28:26.540"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:26.544" endtime="20201030 18:28:26.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.543" endtime="20201030 18:28:26.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.541" endtime="20201030 18:28:26.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.181" endtime="20201030 18:28:26.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.180" endtime="20201030 18:28:26.565"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.574" endtime="20201030 18:28:26.592"></status>
</kw>
<msg timestamp="20201030 18:28:26.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.573" endtime="20201030 18:28:26.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.594" endtime="20201030 18:28:26.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.597" endtime="20201030 18:28:26.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.570" endtime="20201030 18:28:26.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.568" endtime="20201030 18:28:26.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.607" endtime="20201030 18:28:26.894"></status>
</kw>
<msg timestamp="20201030 18:28:26.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022442333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.605" endtime="20201030 18:28:26.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022442333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.899" endtime="20201030 18:28:26.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.907" endtime="20201030 18:28:26.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.602" endtime="20201030 18:28:26.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.600" endtime="20201030 18:28:26.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:26.914" level="INFO">${RESULT} = [{'diff': 8.125000000000146e-05}, {'diff': 8.10970000000022e-05}, {'diff': 8.130599999999974e-05}, {'diff': 8.141600000000082e-05}, {'diff': 8.120800000000275e-05}, {'diff': 8.140299999999726e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:26.911" endtime="20201030 18:28:26.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:26.918" level="INFO">${ACCURACY} = {'diff': [8.125000000000146e-05, 8.10970000000022e-05, 8.130599999999974e-05, 8.141600000000082e-05, 8.120800000000275e-05, 8.140299999999726e-05, 8.134700000000245e-05, 8.143000000000039e-05, 8.13469...</msg>
<status status="PASS" starttime="20201030 18:28:26.915" endtime="20201030 18:28:26.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.923" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 18:28:26.922" endtime="20201030 18:28:26.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.926" level="INFO">VALUE: [8.125000000000146e-05, 8.10970000000022e-05, 8.130599999999974e-05, 8.141600000000082e-05, 8.120800000000275e-05, 8.140299999999726e-05, 8.134700000000245e-05, 8.143000000000039e-05, 8.134699999999898e-05, 8.137499999999812e-05, 8.134700000000245e-05, 8.130599999999974e-05, 8.14170000000003e-05, 8.14170000000003e-05, 8.134699999999898e-05, 8.140300000000072e-05, 8.131899999999984e-05, 8.133400000000235e-05, 8.130599999999974e-05, 8.118099999999961e-05, 8.140300000000072e-05, 8.126399999999756e-05, 8.119399999999971e-05, 8.120800000000275e-05, 8.148599999999867e-05, 8.12910000000007e-05, 8.137500000000158e-05, 8.119399999999971e-05, 8.120799999999928e-05, 8.133399999999888e-05, 8.140299999999726e-05, 8.124999999999799e-05, 8.129200000000017e-05, 8.118099999999961e-05, 8.120799999999928e-05, 8.138900000000115e-05, 8.120900000000222e-05, 8.145799999999953e-05, 8.120799999999928e-05, 8.113800000000143e-05, 8.143000000000039e-05, 8.136200000000149e-05, 8.125000000000146e-05, 8.136099999999855e-05, 8.143000000000039e-05, 8.13329999999994e-05, 8.120799999999928e-05, 8.123599999999842e-05, 8.13329999999994e-05, 8.136099999999855e-05]</msg>
<status status="PASS" starttime="20201030 18:28:26.924" endtime="20201030 18:28:26.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.919" endtime="20201030 18:28:26.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:26.931" endtime="20201030 18:28:26.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.929" endtime="20201030 18:28:26.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.928" endtime="20201030 18:28:26.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.566" endtime="20201030 18:28:26.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.565" endtime="20201030 18:28:26.951"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.960" endtime="20201030 18:28:26.980"></status>
</kw>
<msg timestamp="20201030 18:28:26.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.959" endtime="20201030 18:28:26.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.982" endtime="20201030 18:28:26.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.984" endtime="20201030 18:28:26.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.956" endtime="20201030 18:28:26.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.954" endtime="20201030 18:28:26.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.994" endtime="20201030 18:28:27.281"></status>
</kw>
<msg timestamp="20201030 18:28:27.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023119292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023201736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.992" endtime="20201030 18:28:27.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023119292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023201736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.286" endtime="20201030 18:28:27.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.294" endtime="20201030 18:28:27.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.989" endtime="20201030 18:28:27.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.988" endtime="20201030 18:28:27.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:27.301" level="INFO">${RESULT} = [{'diff': 8.244400000000096e-05}, {'diff': 8.188900000000165e-05}, {'diff': 8.224999999999899e-05}, {'diff': 8.234799999999945e-05}, {'diff': 8.215300000000147e-05}, {'diff': 8.24720000000001e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:27.298" endtime="20201030 18:28:27.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:27.305" level="INFO">${ACCURACY} = {'diff': [8.244400000000096e-05, 8.188900000000165e-05, 8.224999999999899e-05, 8.234799999999945e-05, 8.215300000000147e-05, 8.24720000000001e-05, 8.230500000000127e-05, 8.23330000000004e-05, 8.220800...</msg>
<status status="PASS" starttime="20201030 18:28:27.302" endtime="20201030 18:28:27.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.310" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 18:28:27.309" endtime="20201030 18:28:27.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.316" level="INFO">VALUE: [8.244400000000096e-05, 8.188900000000165e-05, 8.224999999999899e-05, 8.234799999999945e-05, 8.215300000000147e-05, 8.24720000000001e-05, 8.230500000000127e-05, 8.23330000000004e-05, 8.220800000000028e-05, 8.244400000000096e-05, 8.229099999999823e-05, 8.231899999999737e-05, 8.236099999999955e-05, 8.232000000000031e-05, 8.234699999999998e-05, 8.24309999999974e-05, 8.232000000000031e-05, 8.230600000000074e-05, 8.24309999999974e-05, 8.236199999999902e-05, 8.238899999999869e-05, 8.226399999999856e-05, 8.24170000000013e-05, 8.233399999999988e-05, 8.236200000000249e-05, 8.233299999999694e-05, 8.229099999999823e-05, 8.226399999999856e-05, 8.245800000000053e-05, 8.225000000000246e-05, 8.245800000000053e-05, 8.24170000000013e-05, 8.24170000000013e-05, 8.223599999999942e-05, 8.23330000000004e-05, 8.237499999999912e-05, 8.241699999999783e-05, 8.240300000000172e-05, 8.233399999999988e-05, 8.223599999999942e-05, 8.226399999999856e-05, 8.2459e-05, 8.230600000000074e-05, 8.240299999999826e-05, 8.24170000000013e-05, 8.234699999999998e-05, 8.229099999999823e-05, 8.222199999999985e-05, 8.224999999999899e-05, 8.244399999999749e-05]</msg>
<status status="PASS" starttime="20201030 18:28:27.311" endtime="20201030 18:28:27.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.306" endtime="20201030 18:28:27.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:27.321" endtime="20201030 18:28:27.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.320" endtime="20201030 18:28:27.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.319" endtime="20201030 18:28:27.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.952" endtime="20201030 18:28:27.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.952" endtime="20201030 18:28:27.342"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.351" endtime="20201030 18:28:27.369"></status>
</kw>
<msg timestamp="20201030 18:28:27.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.350" endtime="20201030 18:28:27.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.371" endtime="20201030 18:28:27.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.374" endtime="20201030 18:28:27.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.347" endtime="20201030 18:28:27.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.345" endtime="20201030 18:28:27.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.383" endtime="20201030 18:28:27.669"></status>
</kw>
<msg timestamp="20201030 18:28:27.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022416458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.381" endtime="20201030 18:28:27.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022416458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.674" endtime="20201030 18:28:27.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.682" endtime="20201030 18:28:27.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.379" endtime="20201030 18:28:27.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.377" endtime="20201030 18:28:27.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:27.689" level="INFO">${RESULT} = [{'diff': 8.362500000000037e-05}, {'diff': 8.291699999999833e-05}, {'diff': 8.322200000000085e-05}, {'diff': 8.320800000000128e-05}, {'diff': 8.323600000000042e-05}, {'diff': 8.347300000000057e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:27.686" endtime="20201030 18:28:27.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:27.694" level="INFO">${ACCURACY} = {'diff': [8.362500000000037e-05, 8.291699999999833e-05, 8.322200000000085e-05, 8.320800000000128e-05, 8.323600000000042e-05, 8.347300000000057e-05, 8.32919999999987e-05, 8.347199999999763e-05, 8.34589...</msg>
<status status="PASS" starttime="20201030 18:28:27.690" endtime="20201030 18:28:27.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.699" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 18:28:27.698" endtime="20201030 18:28:27.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.701" level="INFO">VALUE: [8.362500000000037e-05, 8.291699999999833e-05, 8.322200000000085e-05, 8.320800000000128e-05, 8.323600000000042e-05, 8.347300000000057e-05, 8.32919999999987e-05, 8.347199999999763e-05, 8.345899999999754e-05, 8.345899999999754e-05, 8.341699999999883e-05, 8.329200000000217e-05, 8.323600000000042e-05, 8.33330000000014e-05, 8.343000000000239e-05, 8.336100000000055e-05, 8.329099999999923e-05, 8.340299999999926e-05, 8.322200000000085e-05, 8.33049999999988e-05, 8.342999999999892e-05, 8.340300000000272e-05, 8.336100000000055e-05, 8.32919999999987e-05, 8.333400000000088e-05, 8.337500000000012e-05, 8.34309999999984e-05, 8.337500000000012e-05, 8.333399999999741e-05, 8.338899999999969e-05, 8.329200000000217e-05, 8.323600000000042e-05, 8.336100000000055e-05, 8.318000000000214e-05, 8.329099999999923e-05, 8.337500000000012e-05, 8.31659999999991e-05, 8.336100000000055e-05, 8.338899999999969e-05, 8.326399999999956e-05, 8.320800000000128e-05, 8.327699999999966e-05, 8.337500000000012e-05, 8.33330000000014e-05, 8.327799999999913e-05, 8.337500000000012e-05, 8.337500000000012e-05, 8.333399999999741e-05, 8.315300000000247e-05, 8.337500000000012e-05]</msg>
<status status="PASS" starttime="20201030 18:28:27.700" endtime="20201030 18:28:27.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.695" endtime="20201030 18:28:27.703"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:27.707" endtime="20201030 18:28:27.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.705" endtime="20201030 18:28:27.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.704" endtime="20201030 18:28:27.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.343" endtime="20201030 18:28:27.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.342" endtime="20201030 18:28:27.727"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.736" endtime="20201030 18:28:27.754"></status>
</kw>
<msg timestamp="20201030 18:28:27.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.735" endtime="20201030 18:28:27.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.756" endtime="20201030 18:28:27.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.758" endtime="20201030 18:28:27.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.732" endtime="20201030 18:28:27.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.730" endtime="20201030 18:28:27.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.768" endtime="20201030 18:28:28.055"></status>
</kw>
<msg timestamp="20201030 18:28:28.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022166278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.766" endtime="20201030 18:28:28.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022166278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.059" endtime="20201030 18:28:28.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.068" endtime="20201030 18:28:28.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.763" endtime="20201030 18:28:28.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.762" endtime="20201030 18:28:28.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:28.075" level="INFO">${RESULT} = [{'diff': 8.48050000000003e-05}, {'diff': 8.409700000000173e-05}, {'diff': 8.425000000000099e-05}, {'diff': 8.43469999999985e-05}, {'diff': 8.420899999999829e-05}, {'diff': 8.427800000000013e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:28.071" endtime="20201030 18:28:28.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:28.079" level="INFO">${ACCURACY} = {'diff': [8.48050000000003e-05, 8.409700000000173e-05, 8.425000000000099e-05, 8.43469999999985e-05, 8.420899999999829e-05, 8.427800000000013e-05, 8.420899999999829e-05, 8.432000000000231e-05, 8.438900...</msg>
<status status="PASS" starttime="20201030 18:28:28.076" endtime="20201030 18:28:28.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.084" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 18:28:28.083" endtime="20201030 18:28:28.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.086" level="INFO">VALUE: [8.48050000000003e-05, 8.409700000000173e-05, 8.425000000000099e-05, 8.43469999999985e-05, 8.420899999999829e-05, 8.427800000000013e-05, 8.420899999999829e-05, 8.432000000000231e-05, 8.438900000000069e-05, 8.418099999999915e-05, 8.419399999999924e-05, 8.433299999999894e-05, 8.425000000000099e-05, 8.419400000000271e-05, 8.4153e-05, 8.433299999999894e-05, 8.417999999999967e-05, 8.441699999999983e-05, 8.418099999999915e-05, 8.420800000000228e-05, 8.438900000000069e-05, 8.418099999999915e-05, 8.423599999999795e-05, 8.436100000000155e-05, 8.420900000000175e-05, 8.42370000000009e-05, 8.433399999999841e-05, 8.431899999999937e-05, 8.422300000000132e-05, 8.436100000000155e-05, 8.429100000000023e-05, 8.441699999999983e-05, 8.427700000000066e-05, 8.422199999999838e-05, 8.441699999999983e-05, 8.419399999999924e-05, 8.430500000000327e-05, 8.436099999999808e-05, 8.445799999999906e-05, 8.43469999999985e-05, 8.444499999999897e-05, 8.419500000000218e-05, 8.422300000000132e-05, 8.437499999999765e-05, 8.425000000000099e-05, 8.418099999999915e-05, 8.420900000000175e-05, 8.425000000000099e-05, 8.420799999999881e-05, 8.436099999999808e-05]</msg>
<status status="PASS" starttime="20201030 18:28:28.085" endtime="20201030 18:28:28.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.080" endtime="20201030 18:28:28.092"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:28.096" endtime="20201030 18:28:28.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.095" endtime="20201030 18:28:28.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.093" endtime="20201030 18:28:28.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.728" endtime="20201030 18:28:28.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.728" endtime="20201030 18:28:28.117"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.126" endtime="20201030 18:28:28.145"></status>
</kw>
<msg timestamp="20201030 18:28:28.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.125" endtime="20201030 18:28:28.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.147" endtime="20201030 18:28:28.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.150" endtime="20201030 18:28:28.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.122" endtime="20201030 18:28:28.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.120" endtime="20201030 18:28:28.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.159" endtime="20201030 18:28:28.445"></status>
</kw>
<msg timestamp="20201030 18:28:28.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023361194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023446556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.157" endtime="20201030 18:28:28.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023361194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023446556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.449" endtime="20201030 18:28:28.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.458" endtime="20201030 18:28:28.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.155" endtime="20201030 18:28:28.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.153" endtime="20201030 18:28:28.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:28.464" level="INFO">${RESULT} = [{'diff': 8.536200000000202e-05}, {'diff': 8.518100000000015e-05}, {'diff': 8.540299999999779e-05}, {'diff': 8.540300000000126e-05}, {'diff': 8.520799999999981e-05}, {'diff': 8.519400000000024e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:28.461" endtime="20201030 18:28:28.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:28.469" level="INFO">${ACCURACY} = {'diff': [8.536200000000202e-05, 8.518100000000015e-05, 8.540299999999779e-05, 8.540300000000126e-05, 8.520799999999981e-05, 8.519400000000024e-05, 8.524999999999852e-05, 8.523599999999895e-05, 8.5181...</msg>
<status status="PASS" starttime="20201030 18:28:28.465" endtime="20201030 18:28:28.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.473" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 18:28:28.472" endtime="20201030 18:28:28.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.476" level="INFO">VALUE: [8.536200000000202e-05, 8.518100000000015e-05, 8.540299999999779e-05, 8.540300000000126e-05, 8.520799999999981e-05, 8.519400000000024e-05, 8.524999999999852e-05, 8.523599999999895e-05, 8.518100000000015e-05, 8.541700000000083e-05, 8.544499999999997e-05, 8.520899999999929e-05, 8.533400000000288e-05, 8.531900000000037e-05, 8.527800000000113e-05, 8.538899999999822e-05, 8.533299999999994e-05, 8.538899999999822e-05, 8.527700000000166e-05, 8.537499999999865e-05, 8.538899999999822e-05, 8.536099999999908e-05, 8.537500000000212e-05, 8.529199999999723e-05, 8.522199999999938e-05, 8.522199999999938e-05, 8.518100000000015e-05, 8.520800000000328e-05, 8.54310000000004e-05, 8.545800000000006e-05, 8.537499999999865e-05, 8.540300000000126e-05, 8.538899999999822e-05, 8.526399999999809e-05, 8.520799999999981e-05, 8.544400000000049e-05, 8.520799999999981e-05, 8.522199999999938e-05, 8.542999999999745e-05, 8.540300000000126e-05, 8.529199999999723e-05, 8.543000000000092e-05, 8.525000000000199e-05, 8.52920000000007e-05, 8.537500000000212e-05, 8.545800000000006e-05, 8.534799999999898e-05, 8.526399999999809e-05, 8.545899999999954e-05, 8.541699999999736e-05]</msg>
<status status="PASS" starttime="20201030 18:28:28.475" endtime="20201030 18:28:28.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.470" endtime="20201030 18:28:28.478"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:28.482" endtime="20201030 18:28:28.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.481" endtime="20201030 18:28:28.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.479" endtime="20201030 18:28:28.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.118" endtime="20201030 18:28:28.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.118" endtime="20201030 18:28:28.503"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.512" endtime="20201030 18:28:28.531"></status>
</kw>
<msg timestamp="20201030 18:28:28.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.510" endtime="20201030 18:28:28.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.532" endtime="20201030 18:28:28.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.535" endtime="20201030 18:28:28.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.508" endtime="20201030 18:28:28.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.506" endtime="20201030 18:28:28.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.544" endtime="20201030 18:28:28.831"></status>
</kw>
<msg timestamp="20201030 18:28:28.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022204514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022290944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.543" endtime="20201030 18:28:28.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022204514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022290944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.835" endtime="20201030 18:28:28.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.843" endtime="20201030 18:28:28.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.540" endtime="20201030 18:28:28.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.538" endtime="20201030 18:28:28.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:28.850" level="INFO">${RESULT} = [{'diff': 8.642999999999845e-05}, {'diff': 8.604200000000145e-05}, {'diff': 8.633300000000094e-05}, {'diff': 8.624999999999952e-05}, {'diff': 8.623599999999995e-05}, {'diff': 8.633400000000041e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:28.847" endtime="20201030 18:28:28.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:28.855" level="INFO">${ACCURACY} = {'diff': [8.642999999999845e-05, 8.604200000000145e-05, 8.633300000000094e-05, 8.624999999999952e-05, 8.623599999999995e-05, 8.633400000000041e-05, 8.637499999999965e-05, 8.624999999999952e-05, 8.6277...</msg>
<status status="PASS" starttime="20201030 18:28:28.851" endtime="20201030 18:28:28.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.860" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 18:28:28.859" endtime="20201030 18:28:28.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.863" level="INFO">VALUE: [8.642999999999845e-05, 8.604200000000145e-05, 8.633300000000094e-05, 8.624999999999952e-05, 8.623599999999995e-05, 8.633400000000041e-05, 8.637499999999965e-05, 8.624999999999952e-05, 8.627799999999866e-05, 8.638899999999922e-05, 8.626399999999909e-05, 8.619400000000124e-05, 8.644399999999802e-05, 8.623599999999995e-05, 8.640199999999931e-05, 8.623599999999995e-05, 8.634699999999704e-05, 8.623599999999995e-05, 8.627799999999866e-05, 8.63470000000005e-05, 8.644399999999802e-05, 8.631900000000137e-05, 8.623599999999995e-05, 8.624999999999952e-05, 8.620900000000029e-05, 8.640300000000226e-05, 8.620900000000029e-05, 8.637499999999965e-05, 8.634699999999704e-05, 8.622299999999986e-05, 8.63470000000005e-05, 8.638899999999922e-05, 8.63189999999979e-05, 8.638899999999922e-05, 8.637499999999965e-05, 8.626399999999909e-05, 8.627800000000213e-05, 8.640299999999879e-05, 8.619400000000124e-05, 8.64310000000014e-05, 8.629199999999823e-05, 8.634699999999704e-05, 8.622200000000038e-05, 8.620900000000029e-05, 8.640299999999879e-05, 8.613900000000244e-05, 8.616700000000158e-05, 8.632000000000084e-05, 8.641599999999888e-05, 8.640199999999931e-05]</msg>
<status status="PASS" starttime="20201030 18:28:28.861" endtime="20201030 18:28:28.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.856" endtime="20201030 18:28:28.864"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:28.868" endtime="20201030 18:28:28.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.866" endtime="20201030 18:28:28.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.865" endtime="20201030 18:28:28.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.504" endtime="20201030 18:28:28.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.503" endtime="20201030 18:28:28.889"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.898" endtime="20201030 18:28:28.916"></status>
</kw>
<msg timestamp="20201030 18:28:28.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.896" endtime="20201030 18:28:28.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.918" endtime="20201030 18:28:28.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.920" endtime="20201030 18:28:28.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.893" endtime="20201030 18:28:28.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.891" endtime="20201030 18:28:28.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.930" endtime="20201030 18:28:29.217"></status>
</kw>
<msg timestamp="20201030 18:28:29.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022213319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022300972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.928" endtime="20201030 18:28:29.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022213319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022300972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.221" endtime="20201030 18:28:29.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.230" endtime="20201030 18:28:29.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.926" endtime="20201030 18:28:29.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.924" endtime="20201030 18:28:29.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:29.237" level="INFO">${RESULT} = [{'diff': 8.765300000000004e-05}, {'diff': 8.707000000000159e-05}, {'diff': 8.719500000000172e-05}, {'diff': 8.733400000000141e-05}, {'diff': 8.725000000000052e-05}, {'diff': 8.722300000000086e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:29.233" endtime="20201030 18:28:29.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:29.241" level="INFO">${ACCURACY} = {'diff': [8.765300000000004e-05, 8.707000000000159e-05, 8.719500000000172e-05, 8.733400000000141e-05, 8.725000000000052e-05, 8.722300000000086e-05, 8.718000000000267e-05, 8.751400000000034e-05, 8.7165...</msg>
<status status="PASS" starttime="20201030 18:28:29.238" endtime="20201030 18:28:29.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.246" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 18:28:29.245" endtime="20201030 18:28:29.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.248" level="INFO">VALUE: [8.765300000000004e-05, 8.707000000000159e-05, 8.719500000000172e-05, 8.733400000000141e-05, 8.725000000000052e-05, 8.722300000000086e-05, 8.718000000000267e-05, 8.751400000000034e-05, 8.716599999999963e-05, 8.73189999999989e-05, 8.730499999999933e-05, 8.734699999999804e-05, 8.742999999999945e-05, 8.729199999999923e-05, 8.733299999999847e-05, 8.73059999999988e-05, 8.743099999999893e-05, 8.744399999999902e-05, 8.733300000000194e-05, 8.718099999999868e-05, 8.729199999999923e-05, 8.733400000000141e-05, 8.743099999999893e-05, 8.723600000000095e-05, 8.741699999999936e-05, 8.720800000000181e-05, 8.722200000000138e-05, 8.719400000000224e-05, 8.73059999999988e-05, 8.731900000000237e-05, 8.738900000000022e-05, 8.733299999999847e-05, 8.722200000000138e-05, 8.719399999999877e-05, 8.736099999999761e-05, 8.727799999999966e-05, 8.741699999999936e-05, 8.740299999999979e-05, 8.736099999999761e-05, 8.737500000000065e-05, 8.720899999999782e-05, 8.729199999999923e-05, 8.730499999999933e-05, 8.73470000000015e-05, 8.723600000000095e-05, 8.719400000000224e-05, 8.744399999999902e-05, 8.722200000000138e-05, 8.719400000000224e-05, 8.740299999999979e-05]</msg>
<status status="PASS" starttime="20201030 18:28:29.247" endtime="20201030 18:28:29.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.242" endtime="20201030 18:28:29.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:29.254" endtime="20201030 18:28:29.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.252" endtime="20201030 18:28:29.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.251" endtime="20201030 18:28:29.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.890" endtime="20201030 18:28:29.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.889" endtime="20201030 18:28:29.275"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.284" endtime="20201030 18:28:29.304"></status>
</kw>
<msg timestamp="20201030 18:28:29.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.282" endtime="20201030 18:28:29.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.306" endtime="20201030 18:28:29.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.309" endtime="20201030 18:28:29.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.279" endtime="20201030 18:28:29.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.277" endtime="20201030 18:28:29.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.318" endtime="20201030 18:28:29.604"></status>
</kw>
<msg timestamp="20201030 18:28:29.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023371139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023459639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.316" endtime="20201030 18:28:29.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023371139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023459639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.608" endtime="20201030 18:28:29.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.617" endtime="20201030 18:28:29.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.314" endtime="20201030 18:28:29.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.312" endtime="20201030 18:28:29.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:29.624" level="INFO">${RESULT} = [{'diff': 8.850000000000177e-05}, {'diff': 8.81250000000014e-05}, {'diff': 8.823699999999796e-05}, {'diff': 8.826400000000109e-05}, {'diff': 8.838900000000122e-05}, {'diff': 8.822199999999891e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:29.620" endtime="20201030 18:28:29.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:29.628" level="INFO">${ACCURACY} = {'diff': [8.850000000000177e-05, 8.81250000000014e-05, 8.823699999999796e-05, 8.826400000000109e-05, 8.838900000000122e-05, 8.822199999999891e-05, 8.843000000000045e-05, 8.827800000000066e-05, 8.83609...</msg>
<status status="PASS" starttime="20201030 18:28:29.625" endtime="20201030 18:28:29.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.633" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 18:28:29.631" endtime="20201030 18:28:29.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.635" level="INFO">VALUE: [8.850000000000177e-05, 8.81250000000014e-05, 8.823699999999796e-05, 8.826400000000109e-05, 8.838900000000122e-05, 8.822199999999891e-05, 8.843000000000045e-05, 8.827800000000066e-05, 8.836099999999861e-05, 8.823599999999848e-05, 8.819399999999977e-05, 8.83059999999998e-05, 8.822199999999891e-05, 8.848599999999873e-05, 8.833400000000241e-05, 8.838900000000122e-05, 8.825000000000152e-05, 8.836200000000155e-05, 8.815300000000054e-05, 8.820799999999934e-05, 8.827800000000066e-05, 8.841600000000088e-05, 8.825000000000152e-05, 8.83189999999999e-05, 8.826400000000109e-05, 8.836100000000208e-05, 8.833299999999947e-05, 8.827800000000066e-05, 8.823600000000195e-05, 8.834699999999904e-05, 8.826399999999762e-05, 8.841700000000036e-05, 8.819500000000272e-05, 8.820899999999882e-05, 8.834800000000198e-05, 8.84449999999995e-05, 8.823599999999848e-05, 8.823599999999848e-05, 8.837500000000165e-05, 8.825000000000152e-05, 8.833299999999947e-05, 8.845800000000306e-05, 8.836099999999861e-05, 8.825000000000152e-05, 8.822199999999891e-05, 8.826400000000109e-05, 8.826400000000109e-05, 8.845800000000306e-05, 8.823700000000143e-05, 8.84449999999995e-05]</msg>
<status status="PASS" starttime="20201030 18:28:29.634" endtime="20201030 18:28:29.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.629" endtime="20201030 18:28:29.637"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:29.641" endtime="20201030 18:28:29.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.640" endtime="20201030 18:28:29.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.638" endtime="20201030 18:28:29.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.275" endtime="20201030 18:28:29.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.275" endtime="20201030 18:28:29.662"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.671" endtime="20201030 18:28:29.690"></status>
</kw>
<msg timestamp="20201030 18:28:29.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.670" endtime="20201030 18:28:29.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.692" endtime="20201030 18:28:29.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.694" endtime="20201030 18:28:29.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.667" endtime="20201030 18:28:29.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.665" endtime="20201030 18:28:29.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.704" endtime="20201030 18:28:29.986"></status>
</kw>
<msg timestamp="20201030 18:28:29.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022446681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022536056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.702" endtime="20201030 18:28:29.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022446681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022536056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.990" endtime="20201030 18:28:29.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.998" endtime="20201030 18:28:30.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.700" endtime="20201030 18:28:30.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.698" endtime="20201030 18:28:30.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:30.005" level="INFO">${RESULT} = [{'diff': 8.937499999999918e-05}, {'diff': 8.898599999999923e-05}, {'diff': 8.924999999999905e-05}, {'diff': 8.925000000000252e-05}, {'diff': 8.941700000000136e-05}, {'diff': 8.938899999999875e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:30.002" endtime="20201030 18:28:30.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:30.011" level="INFO">${ACCURACY} = {'diff': [8.937499999999918e-05, 8.898599999999923e-05, 8.924999999999905e-05, 8.925000000000252e-05, 8.941700000000136e-05, 8.938899999999875e-05, 8.937499999999918e-05, 8.929199999999776e-05, 8.9195...</msg>
<status status="PASS" starttime="20201030 18:28:30.006" endtime="20201030 18:28:30.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.015" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 18:28:30.014" endtime="20201030 18:28:30.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.018" level="INFO">VALUE: [8.937499999999918e-05, 8.898599999999923e-05, 8.924999999999905e-05, 8.925000000000252e-05, 8.941700000000136e-05, 8.938899999999875e-05, 8.937499999999918e-05, 8.929199999999776e-05, 8.919500000000025e-05, 8.918100000000068e-05, 8.919500000000025e-05, 8.929200000000123e-05, 8.938899999999875e-05, 8.936200000000255e-05, 8.930500000000133e-05, 8.923599999999948e-05, 8.926400000000209e-05, 8.926299999999915e-05, 8.917999999999773e-05, 8.920800000000034e-05, 8.926399999999862e-05, 8.945800000000059e-05, 8.943000000000145e-05, 8.922199999999991e-05, 8.925000000000252e-05, 8.934700000000004e-05, 8.936099999999961e-05, 8.941700000000136e-05, 8.927799999999819e-05, 8.943100000000093e-05, 8.941700000000136e-05, 8.94730000000031e-05, 8.934700000000004e-05, 8.91800000000012e-05, 8.941599999999841e-05, 8.91800000000012e-05, 8.936099999999961e-05, 8.923599999999948e-05, 8.944400000000102e-05, 8.938899999999875e-05, 8.918100000000068e-05, 8.938899999999875e-05, 8.934799999999951e-05, 8.923599999999948e-05, 8.930599999999733e-05, 8.924999999999905e-05, 8.918100000000068e-05, 8.920899999999982e-05, 8.920899999999982e-05, 8.932000000000037e-05]</msg>
<status status="PASS" starttime="20201030 18:28:30.017" endtime="20201030 18:28:30.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.012" endtime="20201030 18:28:30.019"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:30.023" endtime="20201030 18:28:30.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.022" endtime="20201030 18:28:30.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.020" endtime="20201030 18:28:30.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.663" endtime="20201030 18:28:30.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.662" endtime="20201030 18:28:30.044"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.053" endtime="20201030 18:28:30.071"></status>
</kw>
<msg timestamp="20201030 18:28:30.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.051" endtime="20201030 18:28:30.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.073" endtime="20201030 18:28:30.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.076" endtime="20201030 18:28:30.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.049" endtime="20201030 18:28:30.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.047" endtime="20201030 18:28:30.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.085" endtime="20201030 18:28:30.372"></status>
</kw>
<msg timestamp="20201030 18:28:30.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022669208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02276025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:30.084" endtime="20201030 18:28:30.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022669208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02276025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:30.377" endtime="20201030 18:28:30.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.385" endtime="20201030 18:28:30.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.081" endtime="20201030 18:28:30.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.079" endtime="20201030 18:28:30.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:30.392" level="INFO">${RESULT} = [{'diff': 9.104199999999951e-05}, {'diff': 9.015299999999907e-05}, {'diff': 9.036100000000061e-05}, {'diff': 9.030499999999886e-05}, {'diff': 9.025000000000005e-05}, {'diff': 9.047200000000116e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:30.389" endtime="20201030 18:28:30.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:30.396" level="INFO">${ACCURACY} = {'diff': [9.104199999999951e-05, 9.015299999999907e-05, 9.036100000000061e-05, 9.030499999999886e-05, 9.025000000000005e-05, 9.047200000000116e-05, 9.036100000000061e-05, 9.031899999999843e-05, 9.0388...</msg>
<status status="PASS" starttime="20201030 18:28:30.393" endtime="20201030 18:28:30.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.401" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 18:28:30.400" endtime="20201030 18:28:30.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.404" level="INFO">VALUE: [9.104199999999951e-05, 9.015299999999907e-05, 9.036100000000061e-05, 9.030499999999886e-05, 9.025000000000005e-05, 9.047200000000116e-05, 9.036100000000061e-05, 9.031899999999843e-05, 9.038899999999975e-05, 9.01670000000021e-05, 9.040300000000279e-05, 9.015300000000254e-05, 9.034700000000104e-05, 9.032000000000137e-05, 9.032000000000137e-05, 9.023600000000048e-05, 9.029199999999876e-05, 9.038899999999975e-05, 9.027799999999919e-05, 9.034699999999757e-05, 9.03060000000018e-05, 9.015200000000306e-05, 9.029100000000276e-05, 9.022200000000091e-05, 9.041599999999941e-05, 9.037500000000018e-05, 9.026399999999962e-05, 9.034700000000104e-05, 9.041699999999889e-05, 9.020799999999787e-05, 9.029200000000223e-05, 9.018100000000168e-05, 9.05000000000003e-05, 9.029199999999876e-05, 9.026399999999962e-05, 9.041699999999889e-05, 9.020900000000082e-05, 9.030499999999886e-05, 9.038800000000027e-05, 9.027699999999972e-05, 9.025000000000005e-05, 9.01519999999996e-05, 9.029100000000276e-05, 9.045800000000159e-05, 9.044400000000202e-05, 9.033300000000147e-05, 9.036100000000061e-05, 9.023600000000048e-05, 9.0332999999998e-05, 9.05000000000003e-05]</msg>
<status status="PASS" starttime="20201030 18:28:30.402" endtime="20201030 18:28:30.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.397" endtime="20201030 18:28:30.405"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:30.409" endtime="20201030 18:28:30.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.407" endtime="20201030 18:28:30.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.406" endtime="20201030 18:28:30.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.045" endtime="20201030 18:28:30.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.044" endtime="20201030 18:28:30.430"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.439" endtime="20201030 18:28:30.458"></status>
</kw>
<msg timestamp="20201030 18:28:30.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.437" endtime="20201030 18:28:30.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.460" endtime="20201030 18:28:30.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.462" endtime="20201030 18:28:30.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.434" endtime="20201030 18:28:30.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.432" endtime="20201030 18:28:30.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.472" endtime="20201030 18:28:30.758"></status>
</kw>
<msg timestamp="20201030 18:28:30.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023234375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023326361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.470" endtime="20201030 18:28:30.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023234375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023326361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.762" endtime="20201030 18:28:30.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.771" endtime="20201030 18:28:30.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.468" endtime="20201030 18:28:30.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.466" endtime="20201030 18:28:30.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:30.778" level="INFO">${RESULT} = [{'diff': 9.198599999999876e-05}, {'diff': 9.102799999999994e-05}, {'diff': 9.14719999999987e-05}, {'diff': 9.119500000000225e-05}, {'diff': 9.129199999999976e-05}, {'diff': 9.136199999999761e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:30.774" endtime="20201030 18:28:30.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:30.782" level="INFO">${ACCURACY} = {'diff': [9.198599999999876e-05, 9.102799999999994e-05, 9.14719999999987e-05, 9.119500000000225e-05, 9.129199999999976e-05, 9.136199999999761e-05, 9.143099999999946e-05, 9.1332999999999e-05, 9.1388000...</msg>
<status status="PASS" starttime="20201030 18:28:30.779" endtime="20201030 18:28:30.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.787" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 18:28:30.786" endtime="20201030 18:28:30.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.792" level="INFO">VALUE: [9.198599999999876e-05, 9.102799999999994e-05, 9.14719999999987e-05, 9.119500000000225e-05, 9.129199999999976e-05, 9.136199999999761e-05, 9.143099999999946e-05, 9.1332999999999e-05, 9.138800000000127e-05, 9.144400000000302e-05, 9.11939999999993e-05, 9.141699999999989e-05, 9.117999999999973e-05, 9.144399999999955e-05, 9.117999999999973e-05, 9.119499999999878e-05, 9.144399999999955e-05, 9.134699999999857e-05, 9.119500000000225e-05, 9.14450000000025e-05, 9.124999999999758e-05, 9.134799999999804e-05, 9.137500000000118e-05, 9.147300000000164e-05, 9.126400000000062e-05, 9.124999999999758e-05, 9.131899999999943e-05, 9.136100000000161e-05, 9.120799999999887e-05, 9.117999999999973e-05, 9.140299999999685e-05, 9.126399999999715e-05, 9.127800000000019e-05, 9.130599999999933e-05, 9.127800000000019e-05, 9.143099999999946e-05, 9.130500000000333e-05, 9.133399999999847e-05, 9.125000000000105e-05, 9.130599999999933e-05, 9.137500000000118e-05, 9.126400000000062e-05, 9.142999999999998e-05, 9.144399999999955e-05, 9.130499999999986e-05, 9.134699999999857e-05, 9.11939999999993e-05, 9.129199999999976e-05, 9.142999999999998e-05, 9.141699999999989e-05]</msg>
<status status="PASS" starttime="20201030 18:28:30.788" endtime="20201030 18:28:30.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.783" endtime="20201030 18:28:30.794"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:30.798" endtime="20201030 18:28:30.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.797" endtime="20201030 18:28:30.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.795" endtime="20201030 18:28:30.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.431" endtime="20201030 18:28:30.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.430" endtime="20201030 18:28:30.819"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.828" endtime="20201030 18:28:30.846"></status>
</kw>
<msg timestamp="20201030 18:28:30.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.826" endtime="20201030 18:28:30.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.848" endtime="20201030 18:28:30.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.850" endtime="20201030 18:28:30.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.824" endtime="20201030 18:28:30.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.821" endtime="20201030 18:28:30.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.860" endtime="20201030 18:28:31.145"></status>
</kw>
<msg timestamp="20201030 18:28:31.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022351264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022443833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.858" endtime="20201030 18:28:31.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022351264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022443833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.149" endtime="20201030 18:28:31.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.158" endtime="20201030 18:28:31.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.855" endtime="20201030 18:28:31.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.854" endtime="20201030 18:28:31.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:31.165" level="INFO">${RESULT} = [{'diff': 9.256900000000068e-05}, {'diff': 9.209699999999932e-05}, {'diff': 9.233399999999947e-05}, {'diff': 9.237499999999871e-05}, {'diff': 9.216700000000064e-05}, {'diff': 9.222199999999944e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:31.161" endtime="20201030 18:28:31.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:31.170" level="INFO">${ACCURACY} = {'diff': [9.256900000000068e-05, 9.209699999999932e-05, 9.233399999999947e-05, 9.237499999999871e-05, 9.216700000000064e-05, 9.222199999999944e-05, 9.230600000000033e-05, 9.234799999999904e-05, 9.2375...</msg>
<status status="PASS" starttime="20201030 18:28:31.166" endtime="20201030 18:28:31.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.175" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 18:28:31.173" endtime="20201030 18:28:31.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.177" level="INFO">VALUE: [9.256900000000068e-05, 9.209699999999932e-05, 9.233399999999947e-05, 9.237499999999871e-05, 9.216700000000064e-05, 9.222199999999944e-05, 9.230600000000033e-05, 9.234799999999904e-05, 9.237500000000218e-05, 9.2333e-05, 9.226300000000215e-05, 9.227699999999825e-05, 9.229100000000129e-05, 9.241699999999742e-05, 9.222199999999944e-05, 9.224999999999858e-05, 9.236100000000261e-05, 9.230600000000033e-05, 9.245800000000012e-05, 9.219499999999978e-05, 9.219499999999978e-05, 9.244500000000003e-05, 9.222299999999892e-05, 9.23199999999999e-05, 9.244500000000003e-05, 9.215300000000107e-05, 9.223599999999901e-05, 9.225000000000205e-05, 9.220799999999987e-05, 9.227699999999825e-05, 9.236099999999914e-05, 9.240300000000132e-05, 9.243000000000098e-05, 9.236099999999914e-05, 9.229200000000076e-05, 9.238900000000175e-05, 9.230600000000033e-05, 9.234699999999957e-05, 9.226399999999815e-05, 9.226400000000162e-05, 9.240299999999785e-05, 9.225000000000205e-05, 9.244500000000003e-05, 9.222300000000239e-05, 9.227699999999825e-05, 9.212500000000193e-05, 9.23199999999999e-05, 9.245800000000012e-05, 9.223599999999901e-05, 9.236099999999914e-05]</msg>
<status status="PASS" starttime="20201030 18:28:31.176" endtime="20201030 18:28:31.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.171" endtime="20201030 18:28:31.179"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:31.182" endtime="20201030 18:28:31.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.181" endtime="20201030 18:28:31.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.180" endtime="20201030 18:28:31.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.820" endtime="20201030 18:28:31.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.819" endtime="20201030 18:28:31.203"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.212" endtime="20201030 18:28:31.231"></status>
</kw>
<msg timestamp="20201030 18:28:31.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.210" endtime="20201030 18:28:31.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.233" endtime="20201030 18:28:31.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.235" endtime="20201030 18:28:31.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.208" endtime="20201030 18:28:31.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.206" endtime="20201030 18:28:31.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.245" endtime="20201030 18:28:31.532"></status>
</kw>
<msg timestamp="20201030 18:28:31.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022157903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.243" endtime="20201030 18:28:31.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022157903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.537" endtime="20201030 18:28:31.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.545" endtime="20201030 18:28:31.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.241" endtime="20201030 18:28:31.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.239" endtime="20201030 18:28:31.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:31.552" level="INFO">${RESULT} = [{'diff': 9.331900000000143e-05}, {'diff': 9.293100000000096e-05}, {'diff': 9.341700000000189e-05}, {'diff': 9.330600000000133e-05}, {'diff': 9.33200000000009e-05}, {'diff': 9.324999999999958e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:31.549" endtime="20201030 18:28:31.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:31.556" level="INFO">${ACCURACY} = {'diff': [9.331900000000143e-05, 9.293100000000096e-05, 9.341700000000189e-05, 9.330600000000133e-05, 9.33200000000009e-05, 9.324999999999958e-05, 9.319499999999731e-05, 9.319500000000078e-05, 9.33190...</msg>
<status status="PASS" starttime="20201030 18:28:31.553" endtime="20201030 18:28:31.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.561" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 18:28:31.560" endtime="20201030 18:28:31.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.563" level="INFO">VALUE: [9.331900000000143e-05, 9.293100000000096e-05, 9.341700000000189e-05, 9.330600000000133e-05, 9.33200000000009e-05, 9.324999999999958e-05, 9.319499999999731e-05, 9.319500000000078e-05, 9.331900000000143e-05, 9.326399999999915e-05, 9.333299999999753e-05, 9.327800000000219e-05, 9.326400000000262e-05, 9.343000000000198e-05, 9.31659999999987e-05, 9.323600000000001e-05, 9.318000000000173e-05, 9.329199999999829e-05, 9.318099999999774e-05, 9.33469999999971e-05, 9.340300000000232e-05, 9.33200000000009e-05, 9.322299999999992e-05, 9.326399999999915e-05, 9.337499999999971e-05, 9.329200000000176e-05, 9.316700000000164e-05, 9.344399999999808e-05, 9.337499999999971e-05, 9.31940000000013e-05, 9.336100000000014e-05, 9.342999999999851e-05, 9.322200000000044e-05, 9.323600000000001e-05, 9.34859999999968e-05, 9.341699999999842e-05, 9.323600000000001e-05, 9.319500000000078e-05, 9.326399999999915e-05, 9.324999999999958e-05, 9.343099999999799e-05, 9.319499999999731e-05, 9.322299999999992e-05, 9.343100000000146e-05, 9.322200000000044e-05, 9.333299999999753e-05, 9.31940000000013e-05, 9.345800000000112e-05, 9.342999999999851e-05, 9.331899999999796e-05]</msg>
<status status="PASS" starttime="20201030 18:28:31.562" endtime="20201030 18:28:31.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.557" endtime="20201030 18:28:31.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:31.569" endtime="20201030 18:28:31.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.567" endtime="20201030 18:28:31.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.566" endtime="20201030 18:28:31.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.204" endtime="20201030 18:28:31.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.203" endtime="20201030 18:28:31.589"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.598" endtime="20201030 18:28:31.619"></status>
</kw>
<msg timestamp="20201030 18:28:31.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.597" endtime="20201030 18:28:31.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.620" endtime="20201030 18:28:31.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.623" endtime="20201030 18:28:31.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.594" endtime="20201030 18:28:31.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.592" endtime="20201030 18:28:31.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.632" endtime="20201030 18:28:31.918"></status>
</kw>
<msg timestamp="20201030 18:28:31.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023520569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023615583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.631" endtime="20201030 18:28:31.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023520569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023615583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.923" endtime="20201030 18:28:31.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.931" endtime="20201030 18:28:31.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.628" endtime="20201030 18:28:31.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.626" endtime="20201030 18:28:31.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:31.938" level="INFO">${RESULT} = [{'diff': 9.501399999999743e-05}, {'diff': 9.40139999999999e-05}, {'diff': 9.433400000000147e-05}, {'diff': 9.4333000000002e-05}, {'diff': 9.43200000000019e-05}, {'diff': 9.43469999999981e-05}, {'diff...</msg>
<status status="PASS" starttime="20201030 18:28:31.935" endtime="20201030 18:28:31.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:31.942" level="INFO">${ACCURACY} = {'diff': [9.501399999999743e-05, 9.40139999999999e-05, 9.433400000000147e-05, 9.4333000000002e-05, 9.43200000000019e-05, 9.43469999999981e-05, 9.436100000000114e-05, 9.436199999999714e-05, 9.423700000...</msg>
<status status="PASS" starttime="20201030 18:28:31.939" endtime="20201030 18:28:31.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.947" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 18:28:31.946" endtime="20201030 18:28:31.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.950" level="INFO">VALUE: [9.501399999999743e-05, 9.40139999999999e-05, 9.433400000000147e-05, 9.4333000000002e-05, 9.43200000000019e-05, 9.43469999999981e-05, 9.436100000000114e-05, 9.436199999999714e-05, 9.423700000000049e-05, 9.441599999999994e-05, 9.431899999999896e-05, 9.426300000000068e-05, 9.423600000000101e-05, 9.442999999999951e-05, 9.434700000000157e-05, 9.423600000000101e-05, 9.423600000000101e-05, 9.443100000000246e-05, 9.438900000000028e-05, 9.426400000000015e-05, 9.425000000000058e-05, 9.425000000000058e-05, 9.445899999999813e-05, 9.429200000000276e-05, 9.420899999999788e-05, 9.426299999999721e-05, 9.431899999999896e-05, 9.420800000000187e-05, 9.431899999999896e-05, 9.444399999999908e-05, 9.433299999999853e-05, 9.431899999999896e-05, 9.417999999999926e-05, 9.434700000000157e-05, 9.443099999999899e-05, 9.430599999999886e-05, 9.437500000000071e-05, 9.413900000000003e-05, 9.44590000000016e-05, 9.418100000000221e-05, 9.431999999999843e-05, 9.438900000000028e-05, 9.418099999999874e-05, 9.423599999999754e-05, 9.41659999999997e-05, 9.441599999999994e-05, 9.445799999999865e-05, 9.441599999999994e-05, 9.438900000000028e-05, 9.440299999999985e-05]</msg>
<status status="PASS" starttime="20201030 18:28:31.948" endtime="20201030 18:28:31.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.943" endtime="20201030 18:28:31.952"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:31.956" endtime="20201030 18:28:31.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.954" endtime="20201030 18:28:31.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.953" endtime="20201030 18:28:31.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.590" endtime="20201030 18:28:31.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.590" endtime="20201030 18:28:31.977"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.986" endtime="20201030 18:28:32.005"></status>
</kw>
<msg timestamp="20201030 18:28:32.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.984" endtime="20201030 18:28:32.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.006" endtime="20201030 18:28:32.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.009" endtime="20201030 18:28:32.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.981" endtime="20201030 18:28:32.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.979" endtime="20201030 18:28:32.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.018" endtime="20201030 18:28:32.305"></status>
</kw>
<msg timestamp="20201030 18:28:32.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022116403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022211597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.017" endtime="20201030 18:28:32.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022116403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022211597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.309" endtime="20201030 18:28:32.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.317" endtime="20201030 18:28:32.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.014" endtime="20201030 18:28:32.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.012" endtime="20201030 18:28:32.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:32.324" level="INFO">${RESULT} = [{'diff': 9.519399999999983e-05}, {'diff': 9.511099999999842e-05}, {'diff': 9.543099999999999e-05}, {'diff': 9.541699999999695e-05}, {'diff': 9.526400000000115e-05}, {'diff': 9.536100000000214e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:32.321" endtime="20201030 18:28:32.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:32.330" level="INFO">${ACCURACY} = {'diff': [9.519399999999983e-05, 9.511099999999842e-05, 9.543099999999999e-05, 9.541699999999695e-05, 9.526400000000115e-05, 9.536100000000214e-05, 9.527800000000072e-05, 9.53469999999991e-05, 9.53050...</msg>
<status status="PASS" starttime="20201030 18:28:32.325" endtime="20201030 18:28:32.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.334" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 18:28:32.333" endtime="20201030 18:28:32.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.337" level="INFO">VALUE: [9.519399999999983e-05, 9.511099999999842e-05, 9.543099999999999e-05, 9.541699999999695e-05, 9.526400000000115e-05, 9.536100000000214e-05, 9.527800000000072e-05, 9.53469999999991e-05, 9.530500000000039e-05, 9.533299999999953e-05, 9.538899999999781e-05, 9.538900000000128e-05, 9.541599999999748e-05, 9.538900000000128e-05, 9.533299999999953e-05, 9.529200000000029e-05, 9.52079999999994e-05, 9.519500000000278e-05, 9.51530000000006e-05, 9.536099999999867e-05, 9.522300000000192e-05, 9.544400000000008e-05, 9.529100000000082e-05, 9.536200000000161e-05, 9.54019999999979e-05, 9.525000000000158e-05, 9.53469999999991e-05, 9.519399999999983e-05, 9.523600000000201e-05, 9.544400000000008e-05, 9.523599999999854e-05, 9.549999999999836e-05, 9.533299999999953e-05, 9.541700000000042e-05, 9.527800000000072e-05, 9.52079999999994e-05, 9.544499999999956e-05, 9.523600000000201e-05, 9.541699999999695e-05, 9.527800000000072e-05, 9.545799999999965e-05, 9.533299999999953e-05, 9.519399999999983e-05, 9.529100000000082e-05, 9.524999999999811e-05, 9.541600000000094e-05, 9.519399999999983e-05, 9.547199999999922e-05, 9.53469999999991e-05, 9.541700000000042e-05]</msg>
<status status="PASS" starttime="20201030 18:28:32.335" endtime="20201030 18:28:32.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.330" endtime="20201030 18:28:32.338"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:32.342" endtime="20201030 18:28:32.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.340" endtime="20201030 18:28:32.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.339" endtime="20201030 18:28:32.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.977" endtime="20201030 18:28:32.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.977" endtime="20201030 18:28:32.363"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.372" endtime="20201030 18:28:32.391"></status>
</kw>
<msg timestamp="20201030 18:28:32.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.370" endtime="20201030 18:28:32.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.393" endtime="20201030 18:28:32.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.396" endtime="20201030 18:28:32.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.368" endtime="20201030 18:28:32.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.365" endtime="20201030 18:28:32.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.405" endtime="20201030 18:28:32.699"></status>
</kw>
<msg timestamp="20201030 18:28:32.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022413458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022509861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.403" endtime="20201030 18:28:32.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022413458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022509861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.703" endtime="20201030 18:28:32.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.712" endtime="20201030 18:28:32.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.401" endtime="20201030 18:28:32.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.399" endtime="20201030 18:28:32.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:32.719" level="INFO">${RESULT} = [{'diff': 9.640299999999838e-05}, {'diff': 9.597199999999972e-05}, {'diff': 9.641699999999795e-05}, {'diff': 9.643100000000099e-05}, {'diff': 9.647200000000022e-05}, {'diff': 9.644399999999761e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:32.715" endtime="20201030 18:28:32.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:32.723" level="INFO">${ACCURACY} = {'diff': [9.640299999999838e-05, 9.597199999999972e-05, 9.641699999999795e-05, 9.643100000000099e-05, 9.647200000000022e-05, 9.644399999999761e-05, 9.62080000000004e-05, 9.627699999999878e-05, 9.64160...</msg>
<status status="PASS" starttime="20201030 18:28:32.720" endtime="20201030 18:28:32.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.728" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 18:28:32.727" endtime="20201030 18:28:32.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.730" level="INFO">VALUE: [9.640299999999838e-05, 9.597199999999972e-05, 9.641699999999795e-05, 9.643100000000099e-05, 9.647200000000022e-05, 9.644399999999761e-05, 9.62080000000004e-05, 9.627699999999878e-05, 9.641600000000194e-05, 9.624999999999911e-05, 9.626399999999868e-05, 9.636100000000314e-05, 9.624999999999911e-05, 9.640299999999838e-05, 9.632000000000043e-05, 9.63059999999974e-05, 9.631900000000096e-05, 9.630600000000086e-05, 9.619500000000031e-05, 9.622299999999945e-05, 9.634799999999957e-05, 9.636199999999914e-05, 9.641700000000142e-05, 9.624999999999911e-05, 9.622199999999997e-05, 9.638900000000228e-05, 9.63470000000001e-05, 9.630500000000139e-05, 9.631900000000096e-05, 9.622199999999997e-05, 9.643100000000099e-05, 9.626400000000215e-05, 9.619499999999684e-05, 9.620899999999988e-05, 9.638899999999881e-05, 9.634699999999663e-05, 9.637499999999924e-05, 9.619500000000031e-05, 9.647200000000022e-05, 9.636099999999967e-05, 9.627699999999878e-05, 9.623599999999954e-05, 9.622199999999997e-05, 9.625000000000258e-05, 9.644400000000108e-05, 9.640299999999838e-05, 9.630499999999792e-05, 9.62920000000013e-05, 9.636099999999967e-05, 9.632000000000043e-05]</msg>
<status status="PASS" starttime="20201030 18:28:32.729" endtime="20201030 18:28:32.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.724" endtime="20201030 18:28:32.732"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:32.736" endtime="20201030 18:28:32.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.734" endtime="20201030 18:28:32.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.733" endtime="20201030 18:28:32.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.364" endtime="20201030 18:28:32.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.363" endtime="20201030 18:28:32.756"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.765" endtime="20201030 18:28:32.785"></status>
</kw>
<msg timestamp="20201030 18:28:32.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.764" endtime="20201030 18:28:32.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.786" endtime="20201030 18:28:32.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.789" endtime="20201030 18:28:32.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.761" endtime="20201030 18:28:32.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.759" endtime="20201030 18:28:32.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.798" endtime="20201030 18:28:33.085"></status>
</kw>
<msg timestamp="20201030 18:28:33.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023172681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023270444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.797" endtime="20201030 18:28:33.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023172681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023270444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.089" endtime="20201030 18:28:33.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.097" endtime="20201030 18:28:33.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.794" endtime="20201030 18:28:33.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.792" endtime="20201030 18:28:33.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:33.104" level="INFO">${RESULT} = [{'diff': 9.776300000000071e-05}, {'diff': 9.695799999999768e-05}, {'diff': 9.744400000000208e-05}, {'diff': 9.73470000000011e-05}, {'diff': 9.731999999999796e-05}, {'diff': 9.743100000000199e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:33.101" endtime="20201030 18:28:33.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:33.108" level="INFO">${ACCURACY} = {'diff': [9.776300000000071e-05, 9.695799999999768e-05, 9.744400000000208e-05, 9.73470000000011e-05, 9.731999999999796e-05, 9.743100000000199e-05, 9.738899999999981e-05, 9.720900000000088e-05, 9.74439...</msg>
<status status="PASS" starttime="20201030 18:28:33.105" endtime="20201030 18:28:33.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.113" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 18:28:33.112" endtime="20201030 18:28:33.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.116" level="INFO">VALUE: [9.776300000000071e-05, 9.695799999999768e-05, 9.744400000000208e-05, 9.73470000000011e-05, 9.731999999999796e-05, 9.743100000000199e-05, 9.738899999999981e-05, 9.720900000000088e-05, 9.744399999999862e-05, 9.745800000000165e-05, 9.738800000000034e-05, 9.733299999999806e-05, 9.737500000000024e-05, 9.74730000000007e-05, 9.733299999999806e-05, 9.731899999999849e-05, 9.741699999999895e-05, 9.745800000000165e-05, 9.726399999999968e-05, 9.736100000000067e-05, 9.725000000000011e-05, 9.723600000000054e-05, 9.737500000000024e-05, 9.74730000000007e-05, 9.741699999999895e-05, 9.740299999999938e-05, 9.719499999999784e-05, 9.745800000000165e-05, 9.727699999999978e-05, 9.74019999999999e-05, 9.730500000000239e-05, 9.727800000000272e-05, 9.730500000000239e-05, 9.719400000000183e-05, 9.729199999999882e-05, 9.718100000000174e-05, 9.743099999999852e-05, 9.740299999999938e-05, 9.737500000000024e-05, 9.727799999999925e-05, 9.744499999999809e-05, 9.730500000000239e-05, 9.732000000000143e-05, 9.741600000000294e-05, 9.718000000000226e-05, 9.727799999999925e-05, 9.729099999999935e-05, 9.73470000000011e-05, 9.744400000000208e-05, 9.722200000000097e-05]</msg>
<status status="PASS" starttime="20201030 18:28:33.114" endtime="20201030 18:28:33.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.109" endtime="20201030 18:28:33.122"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:33.126" endtime="20201030 18:28:33.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.124" endtime="20201030 18:28:33.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.123" endtime="20201030 18:28:33.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.757" endtime="20201030 18:28:33.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.757" endtime="20201030 18:28:33.146"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.155" endtime="20201030 18:28:33.174"></status>
</kw>
<msg timestamp="20201030 18:28:33.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.154" endtime="20201030 18:28:33.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.176" endtime="20201030 18:28:33.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.178" endtime="20201030 18:28:33.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.151" endtime="20201030 18:28:33.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.149" endtime="20201030 18:28:33.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.188" endtime="20201030 18:28:33.474"></status>
</kw>
<msg timestamp="20201030 18:28:33.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022432764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022531431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.186" endtime="20201030 18:28:33.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022432764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022531431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.478" endtime="20201030 18:28:33.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.487" endtime="20201030 18:28:33.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.183" endtime="20201030 18:28:33.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.182" endtime="20201030 18:28:33.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:33.494" level="INFO">${RESULT} = [{'diff': 9.86670000000002e-05}, {'diff': 9.794399999999912e-05}, {'diff': 9.838900000000081e-05}, {'diff': 9.815300000000013e-05}, {'diff': 9.841699999999995e-05}, {'diff': 9.83059999999994e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:33.490" endtime="20201030 18:28:33.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:33.499" level="INFO">${ACCURACY} = {'diff': [9.86670000000002e-05, 9.794399999999912e-05, 9.838900000000081e-05, 9.815300000000013e-05, 9.841699999999995e-05, 9.83059999999994e-05, 9.818099999999927e-05, 9.841699999999995e-05, 9.818099...</msg>
<status status="PASS" starttime="20201030 18:28:33.495" endtime="20201030 18:28:33.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.503" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 18:28:33.502" endtime="20201030 18:28:33.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.506" level="INFO">VALUE: [9.86670000000002e-05, 9.794399999999912e-05, 9.838900000000081e-05, 9.815300000000013e-05, 9.841699999999995e-05, 9.83059999999994e-05, 9.818099999999927e-05, 9.841699999999995e-05, 9.818099999999927e-05, 9.824999999999764e-05, 9.822300000000145e-05, 9.844499999999909e-05, 9.822300000000145e-05, 9.84020000000009e-05, 9.838800000000134e-05, 9.845799999999919e-05, 9.83059999999994e-05, 9.847199999999875e-05, 9.837499999999777e-05, 9.845799999999919e-05, 9.827800000000025e-05, 9.81669999999997e-05, 9.836100000000167e-05, 9.818099999999927e-05, 9.83059999999994e-05, 9.8334000000002e-05, 9.827800000000025e-05, 9.819499999999884e-05, 9.837499999999777e-05, 9.836200000000114e-05, 9.826300000000121e-05, 9.820799999999894e-05, 9.840300000000038e-05, 9.820799999999894e-05, 9.829100000000035e-05, 9.820799999999894e-05, 9.819399999999937e-05, 9.831999999999896e-05, 9.81669999999997e-05, 9.818099999999927e-05, 9.829199999999982e-05, 9.819500000000231e-05, 9.829199999999982e-05, 9.843099999999952e-05, 9.840300000000038e-05, 9.826400000000068e-05, 9.845799999999919e-05, 9.834699999999863e-05, 9.81799999999998e-05, 9.822200000000197e-05]</msg>
<status status="PASS" starttime="20201030 18:28:33.505" endtime="20201030 18:28:33.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.500" endtime="20201030 18:28:33.507"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:33.511" endtime="20201030 18:28:33.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.510" endtime="20201030 18:28:33.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.508" endtime="20201030 18:28:33.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.147" endtime="20201030 18:28:33.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.147" endtime="20201030 18:28:33.532"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.541" endtime="20201030 18:28:33.560"></status>
</kw>
<msg timestamp="20201030 18:28:33.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.539" endtime="20201030 18:28:33.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.561" endtime="20201030 18:28:33.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.564" endtime="20201030 18:28:33.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.537" endtime="20201030 18:28:33.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.535" endtime="20201030 18:28:33.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.573" endtime="20201030 18:28:33.862"></status>
</kw>
<msg timestamp="20201030 18:28:33.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022303931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022403514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.572" endtime="20201030 18:28:33.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022303931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022403514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.866" endtime="20201030 18:28:33.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.874" endtime="20201030 18:28:33.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.569" endtime="20201030 18:28:33.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.567" endtime="20201030 18:28:33.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:33.881" level="INFO">${RESULT} = [{'diff': 9.958300000000031e-05}, {'diff': 9.9028000000001e-05}, {'diff': 9.934699999999963e-05}, {'diff': 9.91939999999969e-05}, {'diff': 9.922200000000297e-05}, {'diff': 9.93060000000004e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:28:33.878" endtime="20201030 18:28:33.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:33.886" level="INFO">${ACCURACY} = {'diff': [9.958300000000031e-05, 9.9028000000001e-05, 9.934699999999963e-05, 9.91939999999969e-05, 9.922200000000297e-05, 9.93060000000004e-05, 9.93470000000031e-05, 9.933300000000006e-05, 9.920799999...</msg>
<status status="PASS" starttime="20201030 18:28:33.882" endtime="20201030 18:28:33.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.891" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 18:28:33.889" endtime="20201030 18:28:33.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.893" level="INFO">VALUE: [9.958300000000031e-05, 9.9028000000001e-05, 9.934699999999963e-05, 9.91939999999969e-05, 9.922200000000297e-05, 9.93060000000004e-05, 9.93470000000031e-05, 9.933300000000006e-05, 9.920799999999994e-05, 9.930500000000092e-05, 9.93470000000031e-05, 9.937499999999877e-05, 9.943100000000052e-05, 9.920899999999941e-05, 9.929200000000082e-05, 9.93060000000004e-05, 9.938900000000181e-05, 9.944500000000009e-05, 9.936100000000267e-05, 9.93609999999992e-05, 9.936100000000267e-05, 9.941600000000148e-05, 9.938900000000181e-05, 9.944400000000062e-05, 9.937499999999877e-05, 9.919400000000037e-05, 9.937500000000224e-05, 9.937499999999877e-05, 9.944500000000009e-05, 9.937499999999877e-05, 9.933399999999953e-05, 9.943100000000052e-05, 9.926400000000168e-05, 9.941699999999748e-05, 9.934699999999963e-05, 9.945799999999672e-05, 9.938900000000181e-05, 9.926399999999821e-05, 9.947199999999976e-05, 9.940299999999791e-05, 9.933300000000006e-05, 9.9334000000003e-05, 9.92219999999995e-05, 9.929199999999735e-05, 9.944500000000009e-05, 9.920899999999941e-05, 9.945899999999966e-05, 9.938899999999834e-05, 9.922299999999898e-05, 9.93609999999992e-05]</msg>
<status status="PASS" starttime="20201030 18:28:33.892" endtime="20201030 18:28:33.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.886" endtime="20201030 18:28:33.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:33.899" endtime="20201030 18:28:33.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.897" endtime="20201030 18:28:33.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.896" endtime="20201030 18:28:33.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.533" endtime="20201030 18:28:33.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.532" endtime="20201030 18:28:33.920"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.929" endtime="20201030 18:28:33.949"></status>
</kw>
<msg timestamp="20201030 18:28:33.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.927" endtime="20201030 18:28:33.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.951" endtime="20201030 18:28:33.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.953" endtime="20201030 18:28:33.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.925" endtime="20201030 18:28:33.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.922" endtime="20201030 18:28:33.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.963" endtime="20201030 18:28:34.249"></status>
</kw>
<msg timestamp="20201030 18:28:34.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023723569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0238245, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:33.961" endtime="20201030 18:28:34.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023723569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0238245, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:34.253" endtime="20201030 18:28:34.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.261" endtime="20201030 18:28:34.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.959" endtime="20201030 18:28:34.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.957" endtime="20201030 18:28:34.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:34.268" level="INFO">${RESULT} = [{'diff': 0.00010093099999999855}, {'diff': 0.00010016699999999823}, {'diff': 0.00010038899999999934}, {'diff': 0.00010043099999999805}, {'diff': 0.0001002220000000005}, {'diff': 0.0001004309999999980...</msg>
<status status="PASS" starttime="20201030 18:28:34.265" endtime="20201030 18:28:34.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:34.272" level="INFO">${ACCURACY} = {'diff': [0.00010093099999999855, 0.00010016699999999823, 0.00010038899999999934, 0.00010043099999999805, 0.0001002220000000005, 0.00010043099999999805, 0.00010038799999999987, 0.00010016599999999876,...</msg>
<status status="PASS" starttime="20201030 18:28:34.269" endtime="20201030 18:28:34.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.277" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 18:28:34.276" endtime="20201030 18:28:34.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.282" level="INFO">VALUE: [0.00010093099999999855, 0.00010016699999999823, 0.00010038899999999934, 0.00010043099999999805, 0.0001002220000000005, 0.00010043099999999805, 0.00010038799999999987, 0.00010016599999999876, 0.00010017999999999833, 0.0001002220000000005, 0.00010044400000000162, 0.00010029199999999835, 0.00010044399999999815, 0.0001001670000000017, 0.0001001670000000017, 0.00010040299999999891, 0.00010024999999999964, 0.00010024999999999964, 0.00010027800000000225, 0.0001002220000000005, 0.00010023600000000008, 0.00010033300000000106, 0.00010020799999999747, 0.00010015200000000266, 0.0001003610000000002, 0.0001001939999999979, 0.00010024999999999964, 0.0001003060000000014, 0.00010041700000000195, 0.00010040299999999891, 0.00010022199999999704, 0.00010037500000000324, 0.00010023600000000008, 0.00010032000000000096, 0.00010033400000000053, 0.00010043099999999805, 0.00010026300000000321, 0.00010034700000000063, 0.00010024999999999964, 0.00010040199999999944, 0.00010022199999999704, 0.00010040299999999891, 0.00010045800000000119, 0.00010023600000000008, 0.00010037499999999977, 0.00010037499999999977, 0.00010030499999999845, 0.00010032000000000096, 0.0001003610000000002, 0.00010026399999999921]</msg>
<status status="PASS" starttime="20201030 18:28:34.278" endtime="20201030 18:28:34.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.273" endtime="20201030 18:28:34.284"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:34.288" endtime="20201030 18:28:34.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.286" endtime="20201030 18:28:34.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.285" endtime="20201030 18:28:34.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.921" endtime="20201030 18:28:34.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.920" endtime="20201030 18:28:34.309"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.318" endtime="20201030 18:28:34.338"></status>
</kw>
<msg timestamp="20201030 18:28:34.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.316" endtime="20201030 18:28:34.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.340" endtime="20201030 18:28:34.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.342" endtime="20201030 18:28:34.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.314" endtime="20201030 18:28:34.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.311" endtime="20201030 18:28:34.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.352" endtime="20201030 18:28:34.638"></status>
</kw>
<msg timestamp="20201030 18:28:34.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022559639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022661347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.350" endtime="20201030 18:28:34.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022559639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022661347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.642" endtime="20201030 18:28:34.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.650" endtime="20201030 18:28:34.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.347" endtime="20201030 18:28:34.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.346" endtime="20201030 18:28:34.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:34.657" level="INFO">${RESULT} = [{'diff': 0.00010170799999999897}, {'diff': 0.00010101399999999996}, {'diff': 0.0001011809999999988}, {'diff': 0.00010134700000000163}, {'diff': 0.00010123600000000108}, {'diff': 0.0001011390000000000...</msg>
<status status="PASS" starttime="20201030 18:28:34.653" endtime="20201030 18:28:34.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:34.662" level="INFO">${ACCURACY} = {'diff': [0.00010170799999999897, 0.00010101399999999996, 0.0001011809999999988, 0.00010134700000000163, 0.00010123600000000108, 0.00010113900000000009, 0.00010129099999999988, 0.00010120799999999847,...</msg>
<status status="PASS" starttime="20201030 18:28:34.658" endtime="20201030 18:28:34.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.666" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 18:28:34.665" endtime="20201030 18:28:34.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.669" level="INFO">VALUE: [0.00010170799999999897, 0.00010101399999999996, 0.0001011809999999988, 0.00010134700000000163, 0.00010123600000000108, 0.00010113900000000009, 0.00010129099999999988, 0.00010120799999999847, 0.00010126400000000021, 0.000101416, 0.00010133300000000206, 0.00010130499999999945, 0.00010129199999999935, 0.00010129199999999935, 0.00010126400000000021, 0.00010134699999999816, 0.0001013060000000024, 0.00010140299999999991, 0.00010127799999999978, 0.00010147300000000123, 0.0001012359999999976, 0.0001012220000000015, 0.0001013610000000012, 0.00010125000000000065, 0.00010129199999999935, 0.00010120799999999847, 0.00010129099999999988, 0.00010117999999999933, 0.0001011939999999989, 0.00010123600000000108, 0.00010120800000000194, 0.00010140299999999991, 0.00010118100000000227, 0.00010120900000000141, 0.00010119499999999837, 0.00010136099999999773, 0.00010144499999999862, 0.00010148599999999786, 0.00010123600000000108, 0.00010142999999999958, 0.00010134699999999816, 0.00010123600000000108, 0.0001013610000000012, 0.00010123600000000108, 0.00010144399999999915, 0.00010125000000000065, 0.00010132000000000196, 0.00010123600000000108, 0.00010127799999999978, 0.00010122300000000098]</msg>
<status status="PASS" starttime="20201030 18:28:34.668" endtime="20201030 18:28:34.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.663" endtime="20201030 18:28:34.670"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:34.674" endtime="20201030 18:28:34.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.673" endtime="20201030 18:28:34.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.671" endtime="20201030 18:28:34.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.310" endtime="20201030 18:28:34.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.309" endtime="20201030 18:28:34.695"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.704" endtime="20201030 18:28:34.723"></status>
</kw>
<msg timestamp="20201030 18:28:34.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.702" endtime="20201030 18:28:34.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.725" endtime="20201030 18:28:34.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.728" endtime="20201030 18:28:34.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.700" endtime="20201030 18:28:34.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.698" endtime="20201030 18:28:34.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.738" endtime="20201030 18:28:35.026"></status>
</kw>
<msg timestamp="20201030 18:28:35.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022292861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022395694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.737" endtime="20201030 18:28:35.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022292861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022395694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.030" endtime="20201030 18:28:35.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.038" endtime="20201030 18:28:35.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.734" endtime="20201030 18:28:35.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.732" endtime="20201030 18:28:35.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:35.045" level="INFO">${RESULT} = [{'diff': 0.00010283300000000009}, {'diff': 0.00010194399999999965}, {'diff': 0.0001021939999999999}, {'diff': 0.00010245799999999972}, {'diff': 0.00010230599999999992}, {'diff': 0.0001022079999999994...</msg>
<status status="PASS" starttime="20201030 18:28:35.042" endtime="20201030 18:28:35.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:35.049" level="INFO">${ACCURACY} = {'diff': [0.00010283300000000009, 0.00010194399999999965, 0.0001021939999999999, 0.00010245799999999972, 0.00010230599999999992, 0.00010220799999999947, 0.0001021809999999998, 0.00010243100000000005, ...</msg>
<status status="PASS" starttime="20201030 18:28:35.046" endtime="20201030 18:28:35.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.054" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 18:28:35.053" endtime="20201030 18:28:35.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.056" level="INFO">VALUE: [0.00010283300000000009, 0.00010194399999999965, 0.0001021939999999999, 0.00010245799999999972, 0.00010230599999999992, 0.00010220799999999947, 0.0001021809999999998, 0.00010243100000000005, 0.00010238899999999787, 0.00010240300000000091, 0.00010222300000000198, 0.00010233299999999959, 0.00010227800000000078, 0.00010244400000000015, 0.00010236099999999873, 0.000102416000000001, 0.00010222199999999904, 0.00010229100000000088, 0.00010230599999999992, 0.00010218000000000033, 0.00010244499999999962, 0.0001023060000000034, 0.0001021809999999998, 0.00010229200000000035, 0.0001021939999999999, 0.00010224999999999818, 0.00010219499999999937, 0.00010237500000000177, 0.00010236099999999873, 0.00010218000000000033, 0.00010241599999999754, 0.00010220799999999947, 0.0001023610000000022, 0.000102416000000001, 0.00010234699999999916, 0.00010224999999999818, 0.00010236099999999873, 0.00010241700000000048, 0.00010237500000000177, 0.00010240300000000091, 0.00010237500000000177, 0.00010236099999999873, 0.00010229099999999741, 0.00010227700000000131, 0.00010230500000000045, 0.00010230500000000045, 0.0001023610000000022, 0.00010229200000000035, 0.00010238899999999787, 0.00010245800000000319]</msg>
<status status="PASS" starttime="20201030 18:28:35.055" endtime="20201030 18:28:35.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.050" endtime="20201030 18:28:35.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:35.062" endtime="20201030 18:28:35.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.060" endtime="20201030 18:28:35.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.059" endtime="20201030 18:28:35.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.696" endtime="20201030 18:28:35.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.696" endtime="20201030 18:28:35.082"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.092" endtime="20201030 18:28:35.112"></status>
</kw>
<msg timestamp="20201030 18:28:35.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.090" endtime="20201030 18:28:35.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.114" endtime="20201030 18:28:35.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.116" endtime="20201030 18:28:35.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.087" endtime="20201030 18:28:35.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.085" endtime="20201030 18:28:35.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.126" endtime="20201030 18:28:35.412"></status>
</kw>
<msg timestamp="20201030 18:28:35.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023221361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023325236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.124" endtime="20201030 18:28:35.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023221361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023325236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.416" endtime="20201030 18:28:35.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.424" endtime="20201030 18:28:35.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.122" endtime="20201030 18:28:35.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.120" endtime="20201030 18:28:35.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:35.431" level="INFO">${RESULT} = [{'diff': 0.0001038749999999998}, {'diff': 0.00010309699999999991}, {'diff': 0.00010329199999999789}, {'diff': 0.00010343100000000105}, {'diff': 0.00010345900000000019}, {'diff': 0.0001033889999999988...</msg>
<status status="PASS" starttime="20201030 18:28:35.428" endtime="20201030 18:28:35.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:35.435" level="INFO">${ACCURACY} = {'diff': [0.0001038749999999998, 0.00010309699999999991, 0.00010329199999999789, 0.00010343100000000105, 0.00010345900000000019, 0.00010338899999999887, 0.00010323700000000255, 0.0001032359999999996, ...</msg>
<status status="PASS" starttime="20201030 18:28:35.432" endtime="20201030 18:28:35.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.440" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 18:28:35.439" endtime="20201030 18:28:35.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.443" level="INFO">VALUE: [0.0001038749999999998, 0.00010309699999999991, 0.00010329199999999789, 0.00010343100000000105, 0.00010345900000000019, 0.00010338899999999887, 0.00010323700000000255, 0.0001032359999999996, 0.00010336099999999973, 0.00010336099999999973, 0.00010343000000000158, 0.00010330499999999798, 0.0001032359999999996, 0.00010320800000000047, 0.00010345900000000019, 0.00010316700000000123, 0.00010341699999999801, 0.00010334799999999963, 0.00010326399999999875, 0.00010327799999999832, 0.00010327800000000179, 0.00010327799999999832, 0.00010340299999999844, 0.00010329100000000188, 0.0001031940000000009, 0.00010338899999999887, 0.00010337500000000277, 0.00010320800000000047, 0.00010325000000000265, 0.00010336099999999973, 0.00010345800000000072, 0.00010338900000000234, 0.00010338900000000234, 0.00010327799999999832, 0.00010329200000000135, 0.00010316700000000123, 0.00010327799999999832, 0.00010336200000000267, 0.00010340199999999897, 0.00010344399999999768, 0.0001031940000000009, 0.0001031940000000009, 0.00010324999999999918, 0.00010345800000000072, 0.00010329199999999789, 0.00010325000000000265, 0.00010311099999999948, 0.00010324999999999918, 0.00010344499999999715, 0.00010344500000000062]</msg>
<status status="PASS" starttime="20201030 18:28:35.441" endtime="20201030 18:28:35.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.436" endtime="20201030 18:28:35.445"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:35.449" endtime="20201030 18:28:35.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.447" endtime="20201030 18:28:35.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.446" endtime="20201030 18:28:35.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.083" endtime="20201030 18:28:35.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.083" endtime="20201030 18:28:35.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.704" endtime="20201030 18:28:35.470"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:35.474" endtime="20201030 18:28:35.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.472" endtime="20201030 18:28:35.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.471" endtime="20201030 18:28:35.494"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:56.633" endtime="20201030 18:28:35.494" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:35.501" endtime="20201030 18:28:35.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.500" endtime="20201030 18:28:35.521"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.535" endtime="20201030 18:28:35.549"></status>
</kw>
<msg timestamp="20201030 18:28:35.549" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.533" endtime="20201030 18:28:35.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.552" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.550" endtime="20201030 18:28:35.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.555" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:35.553" endtime="20201030 18:28:35.555"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:35.530" endtime="20201030 18:28:35.556"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:35.528" endtime="20201030 18:28:35.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.527" endtime="20201030 18:28:35.557"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:35.561" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:35.560" endtime="20201030 18:28:35.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.558" endtime="20201030 18:28:35.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.526" endtime="20201030 18:28:35.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.525" endtime="20201030 18:28:35.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.563" endtime="20201030 18:28:35.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.524" endtime="20201030 18:28:35.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.522" endtime="20201030 18:28:35.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.498" endtime="20201030 18:28:35.566"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.577" endtime="20201030 18:28:35.590"></status>
</kw>
<msg timestamp="20201030 18:28:35.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.575" endtime="20201030 18:28:35.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.592" endtime="20201030 18:28:35.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.595" endtime="20201030 18:28:35.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.572" endtime="20201030 18:28:35.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.569" endtime="20201030 18:28:35.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.604" endtime="20201030 18:28:35.890"></status>
</kw>
<msg timestamp="20201030 18:28:35.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068507639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068512083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.602" endtime="20201030 18:28:35.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068507639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068512083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.894" endtime="20201030 18:28:35.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.902" endtime="20201030 18:28:35.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.600" endtime="20201030 18:28:35.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.598" endtime="20201030 18:28:35.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:35.909" level="INFO">${RESULT} = [{'diff': 4.444000000006221e-06}, {'diff': 3.2359999999898026e-06}, {'diff': 3.2219999999971716e-06}, {'diff': 3.1669999999983656e-06}, {'diff': 3.7219999999976716e-06}, {'diff': 4.333999999994731e-06...</msg>
<status status="PASS" starttime="20201030 18:28:35.905" endtime="20201030 18:28:35.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:35.914" level="INFO">${ACCURACY} = {'diff': [4.444000000006221e-06, 3.2359999999898026e-06, 3.2219999999971716e-06, 3.1669999999983656e-06, 3.7219999999976716e-06, 4.333999999994731e-06, 4.000000000004e-06, 3.2360000000036804e-06, 3.23...</msg>
<status status="PASS" starttime="20201030 18:28:35.910" endtime="20201030 18:28:35.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.918" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 18:28:35.917" endtime="20201030 18:28:35.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.920" level="INFO">VALUE: [4.444000000006221e-06, 3.2359999999898026e-06, 3.2219999999971716e-06, 3.1669999999983656e-06, 3.7219999999976716e-06, 4.333999999994731e-06, 4.000000000004e-06, 3.2360000000036804e-06, 3.2359999999898026e-06, 3.2360000000036804e-06, 3.237000000003154e-06, 3.707999999991163e-06, 3.7090000000045142e-06, 3.2359999999898026e-06, 3.2360000000036804e-06, 3.2080000000045406e-06, 3.2080000000045406e-06, 3.2499999999963114e-06, 3.707999999991163e-06, 4.333999999994731e-06, 3.986000000011369e-06, 3.2499999999963114e-06, 3.237000000003154e-06, 3.2220000000110494e-06, 3.250000000010189e-06, 3.2499999999963114e-06, 3.7080000000050406e-06, 4.333000000009135e-06, 4.000000000004e-06, 3.2360000000036804e-06, 3.2219999999971716e-06, 3.2359999999898026e-06, 3.2360000000036804e-06, 3.707999999991163e-06, 3.7359999999903026e-06, 3.2360000000036804e-06, 3.2499999999963114e-06, 3.2360000000036804e-06, 4.347000000001766e-06, 3.987000000010843e-06, 3.652999999992357e-06, 3.9720000000048605e-06, 3.2360000000036804e-06, 3.2229999999966452e-06, 3.2360000000036804e-06, 3.1939999999980317e-06, 3.7220000000115494e-06, 3.2499999999963114e-06, 3.2360000000036804e-06, 3.2219999999971716e-06]</msg>
<status status="PASS" starttime="20201030 18:28:35.919" endtime="20201030 18:28:35.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.914" endtime="20201030 18:28:35.921"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:35.925" endtime="20201030 18:28:35.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.923" endtime="20201030 18:28:35.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.922" endtime="20201030 18:28:35.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.567" endtime="20201030 18:28:35.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.567" endtime="20201030 18:28:35.946"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.955" endtime="20201030 18:28:35.969"></status>
</kw>
<msg timestamp="20201030 18:28:35.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.953" endtime="20201030 18:28:35.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.970" endtime="20201030 18:28:35.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.973" endtime="20201030 18:28:35.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.951" endtime="20201030 18:28:35.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.948" endtime="20201030 18:28:35.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.982" endtime="20201030 18:28:36.287"></status>
</kw>
<msg timestamp="20201030 18:28:36.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022298236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022303444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.980" endtime="20201030 18:28:36.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022298236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022303444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.291" endtime="20201030 18:28:36.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.299" endtime="20201030 18:28:36.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.977" endtime="20201030 18:28:36.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.976" endtime="20201030 18:28:36.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:36.306" level="INFO">${RESULT} = [{'diff': 5.207999999999602e-06}, {'diff': 4.5699999999988805e-06}, {'diff': 4.291999999999491e-06}, {'diff': 5.207999999999602e-06}, {'diff': 4.277999999999921e-06}, {'diff': 5.2499999999983116e-06},...</msg>
<status status="PASS" starttime="20201030 18:28:36.303" endtime="20201030 18:28:36.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:36.311" level="INFO">${ACCURACY} = {'diff': [5.207999999999602e-06, 4.5699999999988805e-06, 4.291999999999491e-06, 5.207999999999602e-06, 4.277999999999921e-06, 5.2499999999983116e-06, 4.277999999999921e-06, 4.318999999999157e-06, 4.91...</msg>
<status status="PASS" starttime="20201030 18:28:36.307" endtime="20201030 18:28:36.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.316" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 18:28:36.315" endtime="20201030 18:28:36.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.318" level="INFO">VALUE: [5.207999999999602e-06, 4.5699999999988805e-06, 4.291999999999491e-06, 5.207999999999602e-06, 4.277999999999921e-06, 5.2499999999983116e-06, 4.277999999999921e-06, 4.318999999999157e-06, 4.917000000000116e-06, 4.29200000000296e-06, 4.305999999999061e-06, 4.291999999999491e-06, 4.332999999998727e-06, 4.29200000000296e-06, 4.291000000000017e-06, 4.305000000003056e-06, 4.291000000000017e-06, 4.332999999998727e-06, 5.207999999999602e-06, 5.235999999998742e-06, 4.889000000000976e-06, 4.291999999999491e-06, 4.291000000000017e-06, 4.291999999999491e-06, 4.277999999999921e-06, 4.291999999999491e-06, 5.165999999997423e-06, 4.304999999999587e-06, 5.209000000002545e-06, 4.291000000000017e-06, 5.207999999999602e-06, 4.8889999999975065e-06, 4.277000000000447e-06, 4.291999999999491e-06, 4.291000000000017e-06, 4.277999999999921e-06, 4.277000000000447e-06, 4.277000000000447e-06, 5.208000000003071e-06, 5.194000000000032e-06, 4.889000000000976e-06, 4.291000000000017e-06, 4.30600000000253e-06, 4.30600000000253e-06, 5.207999999999602e-06, 4.222000000001641e-06, 4.277999999999921e-06, 4.250000000000781e-06, 4.291999999999491e-06, 5.180000000000462e-06]</msg>
<status status="PASS" starttime="20201030 18:28:36.317" endtime="20201030 18:28:36.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.312" endtime="20201030 18:28:36.319"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:36.323" endtime="20201030 18:28:36.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.321" endtime="20201030 18:28:36.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.320" endtime="20201030 18:28:36.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.947" endtime="20201030 18:28:36.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.946" endtime="20201030 18:28:36.344"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.352" endtime="20201030 18:28:36.366"></status>
</kw>
<msg timestamp="20201030 18:28:36.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.351" endtime="20201030 18:28:36.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.368" endtime="20201030 18:28:36.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.370" endtime="20201030 18:28:36.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.348" endtime="20201030 18:28:36.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.346" endtime="20201030 18:28:36.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.379" endtime="20201030 18:28:36.667"></status>
</kw>
<msg timestamp="20201030 18:28:36.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022110319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.378" endtime="20201030 18:28:36.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022110319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.671" endtime="20201030 18:28:36.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.679" endtime="20201030 18:28:36.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.375" endtime="20201030 18:28:36.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.373" endtime="20201030 18:28:36.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:36.686" level="INFO">${RESULT} = [{'diff': 6.749999999999812e-06}, {'diff': 5.528000000001171e-06}, {'diff': 5.430000000000712e-06}, {'diff': 6.153000000001796e-06}, {'diff': 5.209000000002545e-06}, {'diff': 5.2089999999990755e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:28:36.683" endtime="20201030 18:28:36.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:36.690" level="INFO">${ACCURACY} = {'diff': [6.749999999999812e-06, 5.528000000001171e-06, 5.430000000000712e-06, 6.153000000001796e-06, 5.209000000002545e-06, 5.2089999999990755e-06, 5.514000000001601e-06, 5.2089999999990755e-06, 5.19...</msg>
<status status="PASS" starttime="20201030 18:28:36.687" endtime="20201030 18:28:36.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.694" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 18:28:36.693" endtime="20201030 18:28:36.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.697" level="INFO">VALUE: [6.749999999999812e-06, 5.528000000001171e-06, 5.430000000000712e-06, 6.153000000001796e-06, 5.209000000002545e-06, 5.2089999999990755e-06, 5.514000000001601e-06, 5.2089999999990755e-06, 5.1949999999995056e-06, 5.527000000001697e-06, 6.124999999999187e-06, 5.207999999999602e-06, 5.5139999999981315e-06, 6.083000000000477e-06, 5.209000000002545e-06, 5.194000000000032e-06, 6.110999999999617e-06, 5.207999999999602e-06, 5.500000000002031e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.1529999999983265e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.194000000000032e-06, 5.2089999999990755e-06, 5.194000000000032e-06, 5.207999999999602e-06, 5.207999999999602e-06, 5.194000000000032e-06, 5.1949999999995056e-06, 5.207999999999602e-06, 5.5139999999981315e-06, 5.152999999997326e-06, 5.207999999999602e-06, 5.499999999998562e-06, 6.11199999999909e-06, 6.124999999999187e-06, 5.180000000000462e-06, 5.5139999999981315e-06, 5.221999999999172e-06, 5.222000000002641e-06, 5.4589999999993255e-06, 5.207999999999602e-06, 5.527999999997701e-06, 6.11199999999909e-06, 6.124999999999187e-06, 5.207999999999602e-06, 6.110999999999617e-06]</msg>
<status status="PASS" starttime="20201030 18:28:36.696" endtime="20201030 18:28:36.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.691" endtime="20201030 18:28:36.698"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:36.702" endtime="20201030 18:28:36.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.700" endtime="20201030 18:28:36.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.699" endtime="20201030 18:28:36.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.345" endtime="20201030 18:28:36.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.344" endtime="20201030 18:28:36.722"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.732" endtime="20201030 18:28:36.746"></status>
</kw>
<msg timestamp="20201030 18:28:36.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.730" endtime="20201030 18:28:36.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.748" endtime="20201030 18:28:36.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.750" endtime="20201030 18:28:36.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.727" endtime="20201030 18:28:36.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.725" endtime="20201030 18:28:36.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.761" endtime="20201030 18:28:37.044"></status>
</kw>
<msg timestamp="20201030 18:28:37.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022613986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.759" endtime="20201030 18:28:37.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022613986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.048" endtime="20201030 18:28:37.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.057" endtime="20201030 18:28:37.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.756" endtime="20201030 18:28:37.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.754" endtime="20201030 18:28:37.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:37.063" level="INFO">${RESULT} = [{'diff': 7.347000000001297e-06}, {'diff': 6.749999999999812e-06}, {'diff': 7.026999999999728e-06}, {'diff': 6.444999999997286e-06}, {'diff': 7.014000000003101e-06}, {'diff': 6.125000000002656e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:37.060" endtime="20201030 18:28:37.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:37.067" level="INFO">${ACCURACY} = {'diff': [7.347000000001297e-06, 6.749999999999812e-06, 7.026999999999728e-06, 6.444999999997286e-06, 7.014000000003101e-06, 6.125000000002656e-06, 6.415999999998673e-06, 6.458000000000852e-06, 6.4300...</msg>
<status status="PASS" starttime="20201030 18:28:37.064" endtime="20201030 18:28:37.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.072" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 18:28:37.071" endtime="20201030 18:28:37.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.076" level="INFO">VALUE: [7.347000000001297e-06, 6.749999999999812e-06, 7.026999999999728e-06, 6.444999999997286e-06, 7.014000000003101e-06, 6.125000000002656e-06, 6.415999999998673e-06, 6.458000000000852e-06, 6.430000000001712e-06, 7.013999999999632e-06, 6.416000000002142e-06, 6.151999999998853e-06, 6.124999999999187e-06, 6.416999999998146e-06, 6.139000000002226e-06, 6.431000000001186e-06, 6.124999999999187e-06, 6.388000000003002e-06, 6.417000000001616e-06, 7.0279999999992016e-06, 6.417000000001616e-06, 7.042000000002241e-06, 6.124999999999187e-06, 6.459000000000326e-06, 6.958999999997356e-06, 6.417000000001616e-06, 7.028000000002671e-06, 6.417000000001616e-06, 6.986000000000492e-06, 6.431000000001186e-06, 7.0419999999987715e-06, 6.431000000001186e-06, 6.1389999999987566e-06, 6.417000000001616e-06, 7.042000000002241e-06, 6.110999999999617e-06, 6.430000000001712e-06, 6.445000000000756e-06, 6.11199999999909e-06, 6.110999999999617e-06, 6.4579999999973825e-06, 6.124999999999187e-06, 6.208000000000602e-06, 6.417000000001616e-06, 7.040999999999298e-06, 6.124999999999187e-06, 6.431000000001186e-06, 6.070000000000381e-06, 6.429999999998243e-06, 6.125000000002656e-06]</msg>
<status status="PASS" starttime="20201030 18:28:37.074" endtime="20201030 18:28:37.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.068" endtime="20201030 18:28:37.078"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:37.086" endtime="20201030 18:28:37.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.084" endtime="20201030 18:28:37.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.082" endtime="20201030 18:28:37.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.723" endtime="20201030 18:28:37.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.723" endtime="20201030 18:28:37.107"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.118" endtime="20201030 18:28:37.133"></status>
</kw>
<msg timestamp="20201030 18:28:37.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.116" endtime="20201030 18:28:37.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.134" endtime="20201030 18:28:37.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.137" endtime="20201030 18:28:37.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.113" endtime="20201030 18:28:37.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.110" endtime="20201030 18:28:37.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.146" endtime="20201030 18:28:37.436"></status>
</kw>
<msg timestamp="20201030 18:28:37.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024948583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024957722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.144" endtime="20201030 18:28:37.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024948583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024957722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.440" endtime="20201030 18:28:37.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.449" endtime="20201030 18:28:37.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.142" endtime="20201030 18:28:37.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.140" endtime="20201030 18:28:37.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:37.455" level="INFO">${RESULT} = [{'diff': 9.139000000001757e-06}, {'diff': 7.305999999998591e-06}, {'diff': 7.305999999998591e-06}, {'diff': 7.3469999999978275e-06}, {'diff': 7.334000000001201e-06}, {'diff': 8.264000000000882e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:28:37.452" endtime="20201030 18:28:37.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:37.460" level="INFO">${ACCURACY} = {'diff': [9.139000000001757e-06, 7.305999999998591e-06, 7.305999999998591e-06, 7.3469999999978275e-06, 7.334000000001201e-06, 8.264000000000882e-06, 7.026999999999728e-06, 7.402999999999577e-06, 7.041...</msg>
<status status="PASS" starttime="20201030 18:28:37.456" endtime="20201030 18:28:37.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.465" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 18:28:37.464" endtime="20201030 18:28:37.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.467" level="INFO">VALUE: [9.139000000001757e-06, 7.305999999998591e-06, 7.305999999998591e-06, 7.3469999999978275e-06, 7.334000000001201e-06, 8.264000000000882e-06, 7.026999999999728e-06, 7.402999999999577e-06, 7.0419999999987715e-06, 7.375000000000437e-06, 7.332999999998258e-06, 7.943999999999313e-06, 7.347000000001297e-06, 7.0279999999992016e-06, 7.3469999999978275e-06, 8.207999999999133e-06, 7.348000000000771e-06, 7.0419999999987715e-06, 7.639000000000257e-06, 8.277000000000978e-06, 7.361000000000867e-06, 7.361000000000867e-06, 7.347000000001297e-06, 7.041000000002767e-06, 7.347000000001297e-06, 7.333000000001727e-06, 7.347000000001297e-06, 8.278000000000452e-06, 7.943999999999313e-06, 7.305999999998591e-06, 7.333999999997731e-06, 7.957999999998883e-06, 7.3620000000003405e-06, 7.026999999999728e-06, 7.3620000000003405e-06, 7.347999999997301e-06, 7.333000000001727e-06, 7.931000000002686e-06, 7.347000000001297e-06, 8.305999999999591e-06, 8.305999999999591e-06, 7.987000000000966e-06, 7.332999999998258e-06, 7.958999999998356e-06, 7.347999999997301e-06, 7.361000000000867e-06, 7.347000000001297e-06, 7.348000000000771e-06, 7.042000000002241e-06, 7.306000000002061e-06]</msg>
<status status="PASS" starttime="20201030 18:28:37.466" endtime="20201030 18:28:37.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.461" endtime="20201030 18:28:37.469"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:37.472" endtime="20201030 18:28:37.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.471" endtime="20201030 18:28:37.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.470" endtime="20201030 18:28:37.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.108" endtime="20201030 18:28:37.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.108" endtime="20201030 18:28:37.493"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.502" endtime="20201030 18:28:37.517"></status>
</kw>
<msg timestamp="20201030 18:28:37.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.500" endtime="20201030 18:28:37.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.518" endtime="20201030 18:28:37.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.521" endtime="20201030 18:28:37.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.498" endtime="20201030 18:28:37.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.495" endtime="20201030 18:28:37.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.536" endtime="20201030 18:28:37.835"></status>
</kw>
<msg timestamp="20201030 18:28:37.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021911125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021920875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.532" endtime="20201030 18:28:37.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021911125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021920875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.839" endtime="20201030 18:28:37.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.848" endtime="20201030 18:28:37.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.527" endtime="20201030 18:28:37.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.524" endtime="20201030 18:28:37.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:37.854" level="INFO">${RESULT} = [{'diff': 9.749999999999343e-06}, {'diff': 8.875000000001937e-06}, {'diff': 9.180000000000993e-06}, {'diff': 9.166999999997427e-06}, {'diff': 8.249999999997842e-06}, {'diff': 9.179999999997523e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:37.851" endtime="20201030 18:28:37.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:37.858" level="INFO">${ACCURACY} = {'diff': [9.749999999999343e-06, 8.875000000001937e-06, 9.180000000000993e-06, 9.166999999997427e-06, 8.249999999997842e-06, 9.179999999997523e-06, 8.249999999997842e-06, 8.264000000000882e-06, 8.2910...</msg>
<status status="PASS" starttime="20201030 18:28:37.855" endtime="20201030 18:28:37.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.863" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 18:28:37.862" endtime="20201030 18:28:37.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.865" level="INFO">VALUE: [9.749999999999343e-06, 8.875000000001937e-06, 9.180000000000993e-06, 9.166999999997427e-06, 8.249999999997842e-06, 9.179999999997523e-06, 8.249999999997842e-06, 8.264000000000882e-06, 8.291000000000548e-06, 8.278000000000452e-06, 9.166999999997427e-06, 8.236000000001742e-06, 8.278000000000452e-06, 8.541000000000798e-06, 9.221999999999703e-06, 9.166999999997427e-06, 8.292000000000022e-06, 9.208000000000133e-06, 8.236000000001742e-06, 8.263999999997412e-06, 9.194000000000563e-06, 8.263999999997412e-06, 9.195000000000036e-06, 9.166999999997427e-06, 9.153000000001327e-06, 9.180000000000993e-06, 9.167000000000897e-06, 8.861000000002367e-06, 8.305999999999591e-06, 8.249999999997842e-06, 8.555000000000368e-06, 9.166000000001423e-06, 8.861000000002367e-06, 8.263999999997412e-06, 8.277000000000978e-06, 8.570000000002881e-06, 9.180000000000993e-06, 9.180999999996997e-06, 8.264000000000882e-06, 8.568999999999938e-06, 9.194000000000563e-06, 8.236000000001742e-06, 9.195000000000036e-06, 8.250000000001312e-06, 8.264000000000882e-06, 8.291000000000548e-06, 8.264000000000882e-06, 8.249999999997842e-06, 8.278000000000452e-06, 9.181000000000467e-06]</msg>
<status status="PASS" starttime="20201030 18:28:37.864" endtime="20201030 18:28:37.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.859" endtime="20201030 18:28:37.866"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:37.870" endtime="20201030 18:28:37.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.868" endtime="20201030 18:28:37.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.867" endtime="20201030 18:28:37.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.494" endtime="20201030 18:28:37.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.493" endtime="20201030 18:28:37.891"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.899" endtime="20201030 18:28:37.915"></status>
</kw>
<msg timestamp="20201030 18:28:37.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.898" endtime="20201030 18:28:37.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.916" endtime="20201030 18:28:37.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.919" endtime="20201030 18:28:37.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.895" endtime="20201030 18:28:37.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.893" endtime="20201030 18:28:37.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.928" endtime="20201030 18:28:38.214"></status>
</kw>
<msg timestamp="20201030 18:28:38.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022827486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022838208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.926" endtime="20201030 18:28:38.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022827486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022838208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.218" endtime="20201030 18:28:38.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.226" endtime="20201030 18:28:38.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.924" endtime="20201030 18:28:38.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.922" endtime="20201030 18:28:38.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:38.233" level="INFO">${RESULT} = [{'diff': 1.0721999999997733e-05}, {'diff': 9.499999999999093e-06}, {'diff': 1.0098000000000051e-05}, {'diff': 9.181000000000467e-06}, {'diff': 9.167000000000897e-06}, {'diff': 9.499999999999093e-06},...</msg>
<status status="PASS" starttime="20201030 18:28:38.230" endtime="20201030 18:28:38.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:38.238" level="INFO">${ACCURACY} = {'diff': [1.0721999999997733e-05, 9.499999999999093e-06, 1.0098000000000051e-05, 9.181000000000467e-06, 9.167000000000897e-06, 9.499999999999093e-06, 9.167000000000897e-06, 9.180999999996997e-06, 9.15...</msg>
<status status="PASS" starttime="20201030 18:28:38.234" endtime="20201030 18:28:38.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.242" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 18:28:38.241" endtime="20201030 18:28:38.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.245" level="INFO">VALUE: [1.0721999999997733e-05, 9.499999999999093e-06, 1.0098000000000051e-05, 9.181000000000467e-06, 9.167000000000897e-06, 9.499999999999093e-06, 9.167000000000897e-06, 9.180999999996997e-06, 9.153000000001327e-06, 9.166999999997427e-06, 9.153000000001327e-06, 9.124999999998717e-06, 9.486000000002992e-06, 1.0070000000000912e-05, 9.167000000000897e-06, 9.485999999999523e-06, 9.181000000000467e-06, 9.471999999999953e-06, 9.166999999997427e-06, 9.513999999998662e-06, 1.0096999999997108e-05, 9.180000000000993e-06, 9.181000000000467e-06, 1.0097000000000578e-05, 9.194000000000563e-06, 9.152999999997857e-06, 9.458000000000383e-06, 1.0097000000000578e-05, 1.0096999999997108e-05, 9.181000000000467e-06, 1.0083000000001008e-05, 9.471999999999953e-06, 1.0097000000000578e-05, 9.249999999998842e-06, 9.165999999997954e-06, 9.471999999999953e-06, 9.153000000001327e-06, 9.181000000000467e-06, 9.180000000000993e-06, 9.195000000000036e-06, 9.180000000000993e-06, 9.458999999999856e-06, 1.0098000000000051e-05, 9.181000000000467e-06, 9.181000000000467e-06, 9.166999999997427e-06, 9.181000000000467e-06, 9.486000000002992e-06, 9.096999999999578e-06, 9.167000000000897e-06]</msg>
<status status="PASS" starttime="20201030 18:28:38.243" endtime="20201030 18:28:38.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.238" endtime="20201030 18:28:38.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:38.256" endtime="20201030 18:28:38.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.254" endtime="20201030 18:28:38.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.253" endtime="20201030 18:28:38.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.892" endtime="20201030 18:28:38.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.891" endtime="20201030 18:28:38.277"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.286" endtime="20201030 18:28:38.300"></status>
</kw>
<msg timestamp="20201030 18:28:38.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.284" endtime="20201030 18:28:38.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.302" endtime="20201030 18:28:38.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.304" endtime="20201030 18:28:38.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.281" endtime="20201030 18:28:38.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.279" endtime="20201030 18:28:38.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.314" endtime="20201030 18:28:38.618"></status>
</kw>
<msg timestamp="20201030 18:28:38.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022363139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022374444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.312" endtime="20201030 18:28:38.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022363139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022374444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.622" endtime="20201030 18:28:38.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.631" endtime="20201030 18:28:38.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.309" endtime="20201030 18:28:38.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.308" endtime="20201030 18:28:38.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:38.638" level="INFO">${RESULT} = [{'diff': 1.1304999999999649e-05}, {'diff': 1.0708000000001633e-05}, {'diff': 1.0097000000000578e-05}, {'diff': 1.0333000000001258e-05}, {'diff': 1.0068999999997968e-05}, {'diff': 1.0403000000002577e-...</msg>
<status status="PASS" starttime="20201030 18:28:38.634" endtime="20201030 18:28:38.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:38.643" level="INFO">${ACCURACY} = {'diff': [1.1304999999999649e-05, 1.0708000000001633e-05, 1.0097000000000578e-05, 1.0333000000001258e-05, 1.0068999999997968e-05, 1.0403000000002577e-05, 1.0430999999998247e-05, 1.0457999999997913e-05...</msg>
<status status="PASS" starttime="20201030 18:28:38.639" endtime="20201030 18:28:38.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.648" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 18:28:38.647" endtime="20201030 18:28:38.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.650" level="INFO">VALUE: [1.1304999999999649e-05, 1.0708000000001633e-05, 1.0097000000000578e-05, 1.0333000000001258e-05, 1.0068999999997968e-05, 1.0403000000002577e-05, 1.0430999999998247e-05, 1.0457999999997913e-05, 1.0098000000000051e-05, 1.0097000000000578e-05, 1.0374999999999968e-05, 1.0097000000000578e-05, 1.0416999999998677e-05, 1.0374999999999968e-05, 1.0055999999997872e-05, 1.0402999999999107e-05, 1.0026999999999259e-05, 1.0388999999999537e-05, 1.0097000000000578e-05, 1.0472000000000953e-05, 1.1027999999999732e-05, 1.0166999999998427e-05, 1.0111000000000148e-05, 1.0389000000003007e-05, 1.0417000000002147e-05, 1.0361000000000398e-05, 1.1013000000000689e-05, 1.0402999999999107e-05, 1.0069000000001438e-05, 1.0388999999999537e-05, 1.0388999999999537e-05, 1.0111000000000148e-05, 1.0374999999999968e-05, 1.0403000000002577e-05, 1.0111000000000148e-05, 1.0402999999999107e-05, 1.0430999999998247e-05, 1.0402999999999107e-05, 1.0999999999997123e-05, 1.0374999999999968e-05, 1.0097000000000578e-05, 1.0402999999999107e-05, 1.1000000000000593e-05, 1.0374999999999968e-05, 1.0402999999999107e-05, 1.1027999999999732e-05, 1.0374999999999968e-05, 1.0388999999999537e-05, 1.0374999999999968e-05, 1.0986000000001023e-05]</msg>
<status status="PASS" starttime="20201030 18:28:38.649" endtime="20201030 18:28:38.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.644" endtime="20201030 18:28:38.652"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:38.655" endtime="20201030 18:28:38.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.654" endtime="20201030 18:28:38.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.653" endtime="20201030 18:28:38.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.278" endtime="20201030 18:28:38.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.277" endtime="20201030 18:28:38.676"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.685" endtime="20201030 18:28:38.700"></status>
</kw>
<msg timestamp="20201030 18:28:38.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.684" endtime="20201030 18:28:38.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.702" endtime="20201030 18:28:38.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.704" endtime="20201030 18:28:38.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.681" endtime="20201030 18:28:38.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.679" endtime="20201030 18:28:38.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.714" endtime="20201030 18:28:39.001"></status>
</kw>
<msg timestamp="20201030 18:28:39.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022293264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022305806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.712" endtime="20201030 18:28:39.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022293264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022305806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.006" endtime="20201030 18:28:39.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.014" endtime="20201030 18:28:39.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.710" endtime="20201030 18:28:39.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.708" endtime="20201030 18:28:39.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:39.021" level="INFO">${RESULT} = [{'diff': 1.2542000000000803e-05}, {'diff': 1.1639000000000788e-05}, {'diff': 1.1000000000000593e-05}, {'diff': 1.1304999999999649e-05}, {'diff': 1.2179999999997054e-05}, {'diff': 1.1305999999999122e-...</msg>
<status status="PASS" starttime="20201030 18:28:39.018" endtime="20201030 18:28:39.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:39.025" level="INFO">${ACCURACY} = {'diff': [1.2542000000000803e-05, 1.1639000000000788e-05, 1.1000000000000593e-05, 1.1304999999999649e-05, 1.2179999999997054e-05, 1.1305999999999122e-05, 1.1304999999999649e-05, 1.2235999999998803e-05...</msg>
<status status="PASS" starttime="20201030 18:28:39.022" endtime="20201030 18:28:39.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.030" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 18:28:39.029" endtime="20201030 18:28:39.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.033" level="INFO">VALUE: [1.2542000000000803e-05, 1.1639000000000788e-05, 1.1000000000000593e-05, 1.1304999999999649e-05, 1.2179999999997054e-05, 1.1305999999999122e-05, 1.1304999999999649e-05, 1.2235999999998803e-05, 1.1304999999999649e-05, 1.2236000000002273e-05, 1.1361000000001398e-05, 1.1930999999999747e-05, 1.1291999999999552e-05, 1.2207999999999664e-05, 1.1917000000000177e-05, 1.1318999999999219e-05, 1.1264000000000413e-05, 1.1319999999998692e-05, 1.1291000000000079e-05, 1.1889000000001038e-05, 1.1320000000002162e-05, 1.1291000000000079e-05, 1.2221999999999233e-05, 1.1304999999999649e-05, 1.1305999999999122e-05, 1.1916000000000704e-05, 1.1027999999999732e-05, 1.1320000000002162e-05, 1.1318999999999219e-05, 1.1320000000002162e-05, 1.1319000000002688e-05, 1.1320000000002162e-05, 1.1318999999999219e-05, 1.2235999999998803e-05, 1.1014000000000163e-05, 1.1320000000002162e-05, 1.1319999999998692e-05, 1.1318999999999219e-05, 1.2194000000000094e-05, 1.1277999999999982e-05, 1.1916000000000704e-05, 1.126299999999747e-05, 1.1263000000000939e-05, 1.1305999999999122e-05, 1.1304999999999649e-05, 1.1319999999998692e-05, 1.1319999999998692e-05, 1.1320000000002162e-05, 1.1304999999999649e-05, 1.1305999999999122e-05]</msg>
<status status="PASS" starttime="20201030 18:28:39.031" endtime="20201030 18:28:39.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.026" endtime="20201030 18:28:39.034"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:39.038" endtime="20201030 18:28:39.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.036" endtime="20201030 18:28:39.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.035" endtime="20201030 18:28:39.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.677" endtime="20201030 18:28:39.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.677" endtime="20201030 18:28:39.059"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.068" endtime="20201030 18:28:39.084"></status>
</kw>
<msg timestamp="20201030 18:28:39.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.066" endtime="20201030 18:28:39.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.085" endtime="20201030 18:28:39.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.088" endtime="20201030 18:28:39.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.063" endtime="20201030 18:28:39.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.061" endtime="20201030 18:28:39.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.097" endtime="20201030 18:28:39.383"></status>
</kw>
<msg timestamp="20201030 18:28:39.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023568403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023582167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.096" endtime="20201030 18:28:39.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023568403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023582167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.387" endtime="20201030 18:28:39.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.396" endtime="20201030 18:28:39.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.093" endtime="20201030 18:28:39.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.091" endtime="20201030 18:28:39.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:39.402" level="INFO">${RESULT} = [{'diff': 1.3763999999999443e-05}, {'diff': 1.2250000000001843e-05}, {'diff': 1.2208999999999137e-05}, {'diff': 1.2207999999999664e-05}, {'diff': 1.2528000000001233e-05}, {'diff': 1.2249999999998373e-...</msg>
<status status="PASS" starttime="20201030 18:28:39.399" endtime="20201030 18:28:39.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:39.407" level="INFO">${ACCURACY} = {'diff': [1.3763999999999443e-05, 1.2250000000001843e-05, 1.2208999999999137e-05, 1.2207999999999664e-05, 1.2528000000001233e-05, 1.2249999999998373e-05, 1.2264000000001413e-05, 1.2250000000001843e-05...</msg>
<status status="PASS" starttime="20201030 18:28:39.403" endtime="20201030 18:28:39.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.411" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 18:28:39.410" endtime="20201030 18:28:39.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.414" level="INFO">VALUE: [1.3763999999999443e-05, 1.2250000000001843e-05, 1.2208999999999137e-05, 1.2207999999999664e-05, 1.2528000000001233e-05, 1.2249999999998373e-05, 1.2264000000001413e-05, 1.2250000000001843e-05, 1.2221999999999233e-05, 1.2528000000001233e-05, 1.3167000000001428e-05, 1.2235999999998803e-05, 1.3139000000002288e-05, 1.3152999999998388e-05, 1.3222000000000234e-05, 1.2236000000002273e-05, 1.2235999999998803e-05, 1.2250000000001843e-05, 1.2527999999997763e-05, 1.2236000000002273e-05, 1.2223000000002177e-05, 1.2583999999999512e-05, 1.3138999999998818e-05, 1.2221999999999233e-05, 1.2542000000000803e-05, 1.3153000000001858e-05, 1.3152999999998388e-05, 1.3165999999998484e-05, 1.2236000000002273e-05, 1.2179999999997054e-05, 1.2221999999999233e-05, 1.2221999999999233e-05, 1.3153000000001858e-05, 1.2222999999998707e-05, 1.2235999999998803e-05, 1.2569000000000469e-05, 1.2236000000002273e-05, 1.2235999999998803e-05, 1.3138999999998818e-05, 1.2264000000001413e-05, 1.3151999999998915e-05, 1.3138999999998818e-05, 1.2235999999998803e-05, 1.2180000000000524e-05, 1.2222000000002703e-05, 1.2167000000000427e-05, 1.2235999999998803e-05, 1.3124999999999248e-05, 1.3139000000002288e-05, 1.2221999999999233e-05]</msg>
<status status="PASS" starttime="20201030 18:28:39.413" endtime="20201030 18:28:39.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.408" endtime="20201030 18:28:39.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:39.420" endtime="20201030 18:28:39.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.419" endtime="20201030 18:28:39.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.417" endtime="20201030 18:28:39.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.060" endtime="20201030 18:28:39.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.059" endtime="20201030 18:28:39.441"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.450" endtime="20201030 18:28:39.465"></status>
</kw>
<msg timestamp="20201030 18:28:39.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.448" endtime="20201030 18:28:39.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.467" endtime="20201030 18:28:39.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.469" endtime="20201030 18:28:39.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.446" endtime="20201030 18:28:39.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.444" endtime="20201030 18:28:39.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.479" endtime="20201030 18:28:39.764"></status>
</kw>
<msg timestamp="20201030 18:28:39.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022489014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022503944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.477" endtime="20201030 18:28:39.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022489014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022503944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.768" endtime="20201030 18:28:39.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.779" endtime="20201030 18:28:39.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.474" endtime="20201030 18:28:39.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.473" endtime="20201030 18:28:39.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:39.791" level="INFO">${RESULT} = [{'diff': 1.4929999999999805e-05}, {'diff': 1.3499999999999623e-05}, {'diff': 1.3152999999998388e-05}, {'diff': 1.3487000000002997e-05}, {'diff': 1.3457999999997444e-05}, {'diff': 1.4083999999997543e-...</msg>
<status status="PASS" starttime="20201030 18:28:39.786" endtime="20201030 18:28:39.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:39.800" level="INFO">${ACCURACY} = {'diff': [1.4929999999999805e-05, 1.3499999999999623e-05, 1.3152999999998388e-05, 1.3487000000002997e-05, 1.3457999999997444e-05, 1.4083999999997543e-05, 1.3472000000000484e-05, 1.3124999999999248e-05...</msg>
<status status="PASS" starttime="20201030 18:28:39.793" endtime="20201030 18:28:39.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.807" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 18:28:39.805" endtime="20201030 18:28:39.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.809" level="INFO">VALUE: [1.4929999999999805e-05, 1.3499999999999623e-05, 1.3152999999998388e-05, 1.3487000000002997e-05, 1.3457999999997444e-05, 1.4083999999997543e-05, 1.3472000000000484e-05, 1.3124999999999248e-05, 1.3458000000000914e-05, 1.3139000000002288e-05, 1.3138999999998818e-05, 1.3458000000000914e-05, 1.4097000000001109e-05, 1.3444999999997348e-05, 1.405499999999893e-05, 1.4069999999997973e-05, 1.3111000000003148e-05, 1.3459000000000387e-05, 1.3138000000002814e-05, 1.3124999999999248e-05, 1.3139000000002288e-05, 1.3472999999999957e-05, 1.401300000000022e-05, 1.3152999999998388e-05, 1.3458000000000914e-05, 1.4083000000001539e-05, 1.3459000000000387e-05, 1.3139000000002288e-05, 1.3388999999999068e-05, 1.3124999999999248e-05, 1.3138999999998818e-05, 1.3458000000000914e-05, 1.40689999999985e-05, 1.3125000000002718e-05, 1.3166999999997958e-05, 1.3472999999999957e-05, 1.3431000000001247e-05, 1.4056000000001873e-05, 1.3153000000001858e-05, 1.3458000000000914e-05, 1.4070000000001442e-05, 1.3153000000001858e-05, 1.3445000000000817e-05, 1.3401999999999165e-05, 1.3152999999998388e-05, 1.3124999999999248e-05, 1.3431000000001247e-05, 1.3472000000000484e-05, 1.4041999999998833e-05, 1.3472000000000484e-05]</msg>
<status status="PASS" starttime="20201030 18:28:39.808" endtime="20201030 18:28:39.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.802" endtime="20201030 18:28:39.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:39.815" endtime="20201030 18:28:39.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.813" endtime="20201030 18:28:39.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.812" endtime="20201030 18:28:39.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.442" endtime="20201030 18:28:39.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.441" endtime="20201030 18:28:39.836"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.845" endtime="20201030 18:28:39.860"></status>
</kw>
<msg timestamp="20201030 18:28:39.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.843" endtime="20201030 18:28:39.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.862" endtime="20201030 18:28:39.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.864" endtime="20201030 18:28:39.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.840" endtime="20201030 18:28:39.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.838" endtime="20201030 18:28:39.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.874" endtime="20201030 18:28:40.160"></status>
</kw>
<msg timestamp="20201030 18:28:40.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022765556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.872" endtime="20201030 18:28:40.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022765556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.164" endtime="20201030 18:28:40.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.173" endtime="20201030 18:28:40.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.869" endtime="20201030 18:28:40.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.868" endtime="20201030 18:28:40.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:40.180" level="INFO">${RESULT} = [{'diff': 1.6235999999999334e-05}, {'diff': 1.4707999999998694e-05}, {'diff': 1.4374999999997029e-05}, {'diff': 1.4402000000000165e-05}, {'diff': 1.5000000000001124e-05}, {'diff': 1.434699999999789e-0...</msg>
<status status="PASS" starttime="20201030 18:28:40.176" endtime="20201030 18:28:40.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:40.184" level="INFO">${ACCURACY} = {'diff': [1.6235999999999334e-05, 1.4707999999998694e-05, 1.4374999999997029e-05, 1.4402000000000165e-05, 1.5000000000001124e-05, 1.434699999999789e-05, 1.4333000000001789e-05, 1.4070000000001442e-05,...</msg>
<status status="PASS" starttime="20201030 18:28:40.181" endtime="20201030 18:28:40.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.189" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 18:28:40.188" endtime="20201030 18:28:40.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.191" level="INFO">VALUE: [1.6235999999999334e-05, 1.4707999999998694e-05, 1.4374999999997029e-05, 1.4402000000000165e-05, 1.5000000000001124e-05, 1.434699999999789e-05, 1.4333000000001789e-05, 1.4070000000001442e-05, 1.4361000000000929e-05, 1.4986000000001554e-05, 1.4070000000001442e-05, 1.4375000000000498e-05, 1.4987000000001027e-05, 1.4361000000000929e-05, 1.4070000000001442e-05, 1.4389000000000068e-05, 1.4360999999997459e-05, 1.4985999999998084e-05, 1.4375000000000498e-05, 1.4375000000000498e-05, 1.4389000000000068e-05, 1.4985999999998084e-05, 1.4333999999997793e-05, 1.408299999999807e-05, 1.4347000000001359e-05, 1.4375000000000498e-05, 1.4389000000000068e-05, 1.4958000000002414e-05, 1.4375000000000498e-05, 1.4389000000000068e-05, 1.5000000000001124e-05, 1.4360999999997459e-05, 1.4958000000002414e-05, 1.4389000000000068e-05, 1.4375000000000498e-05, 1.5000000000001124e-05, 1.4375000000000498e-05, 1.4986000000001554e-05, 1.4319000000002219e-05, 1.4986000000001554e-05, 1.4361000000000929e-05, 1.4320000000001692e-05, 1.5000000000001124e-05, 1.4389000000000068e-05, 1.4347000000001359e-05, 1.4152000000003384e-05, 1.4361000000000929e-05, 1.4083000000001539e-05, 1.4375000000000498e-05, 1.4375000000000498e-05]</msg>
<status status="PASS" starttime="20201030 18:28:40.190" endtime="20201030 18:28:40.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.185" endtime="20201030 18:28:40.193"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:40.197" endtime="20201030 18:28:40.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.195" endtime="20201030 18:28:40.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.194" endtime="20201030 18:28:40.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.837" endtime="20201030 18:28:40.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.836" endtime="20201030 18:28:40.217"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.226" endtime="20201030 18:28:40.242"></status>
</kw>
<msg timestamp="20201030 18:28:40.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.225" endtime="20201030 18:28:40.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.243" endtime="20201030 18:28:40.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.246" endtime="20201030 18:28:40.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.222" endtime="20201030 18:28:40.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.220" endtime="20201030 18:28:40.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.255" endtime="20201030 18:28:40.541"></status>
</kw>
<msg timestamp="20201030 18:28:40.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023392639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023409472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.254" endtime="20201030 18:28:40.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023392639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023409472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.545" endtime="20201030 18:28:40.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.555" endtime="20201030 18:28:40.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.251" endtime="20201030 18:28:40.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.249" endtime="20201030 18:28:40.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:40.570" level="INFO">${RESULT} = [{'diff': 1.683300000000082e-05}, {'diff': 1.559700000000261e-05}, {'diff': 1.5278000000000513e-05}, {'diff': 1.5278000000000513e-05}, {'diff': 1.5292000000000083e-05}, {'diff': 1.530500000000018e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:40.566" endtime="20201030 18:28:40.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:40.577" level="INFO">${ACCURACY} = {'diff': [1.683300000000082e-05, 1.559700000000261e-05, 1.5278000000000513e-05, 1.5278000000000513e-05, 1.5292000000000083e-05, 1.530500000000018e-05, 1.6194000000000625e-05, 1.6195000000000098e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:28:40.572" endtime="20201030 18:28:40.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.584" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 18:28:40.582" endtime="20201030 18:28:40.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.588" level="INFO">VALUE: [1.683300000000082e-05, 1.559700000000261e-05, 1.5278000000000513e-05, 1.5278000000000513e-05, 1.5292000000000083e-05, 1.530500000000018e-05, 1.6194000000000625e-05, 1.6195000000000098e-05, 1.6208999999999668e-05, 1.6194000000000625e-05, 1.5278000000000513e-05, 1.6208000000000194e-05, 1.5305999999999653e-05, 1.5292000000000083e-05, 1.6222999999999238e-05, 1.6208999999999668e-05, 1.581900000000025e-05, 1.5278000000000513e-05, 1.5250000000001374e-05, 1.6194000000000625e-05, 1.529100000000061e-05, 1.5292000000000083e-05, 1.531899999999975e-05, 1.5292000000000083e-05, 1.530500000000018e-05, 1.591699999999724e-05, 1.5292000000000083e-05, 1.527699999999757e-05, 1.561100000000218e-05, 1.6208000000000194e-05, 1.6194000000000625e-05, 1.5278000000000513e-05, 1.6208999999999668e-05, 1.588900000000157e-05, 1.529100000000061e-05, 1.5292000000000083e-05, 1.5278000000000513e-05, 1.5916000000001235e-05, 1.5278000000000513e-05, 1.5292000000000083e-05, 1.5292000000000083e-05, 1.5235999999998334e-05, 1.6195000000000098e-05, 1.5208000000002664e-05, 1.6221999999999764e-05, 1.5277999999997044e-05, 1.6195000000000098e-05, 1.588900000000157e-05, 1.5277999999997044e-05, 1.530500000000018e-05]</msg>
<status status="PASS" starttime="20201030 18:28:40.586" endtime="20201030 18:28:40.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.578" endtime="20201030 18:28:40.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:40.597" endtime="20201030 18:28:40.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.595" endtime="20201030 18:28:40.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.593" endtime="20201030 18:28:40.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.218" endtime="20201030 18:28:40.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.218" endtime="20201030 18:28:40.625"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.654" endtime="20201030 18:28:40.674"></status>
</kw>
<msg timestamp="20201030 18:28:40.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.649" endtime="20201030 18:28:40.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.679" endtime="20201030 18:28:40.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.682" endtime="20201030 18:28:40.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.641" endtime="20201030 18:28:40.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.634" endtime="20201030 18:28:40.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.692" endtime="20201030 18:28:40.979"></status>
</kw>
<msg timestamp="20201030 18:28:40.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052703431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052721194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.690" endtime="20201030 18:28:40.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052703431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052721194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.983" endtime="20201030 18:28:40.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.991" endtime="20201030 18:28:40.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.687" endtime="20201030 18:28:40.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.686" endtime="20201030 18:28:40.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:40.998" level="INFO">${RESULT} = [{'diff': 1.776299999999703e-05}, {'diff': 1.6528000000001764e-05}, {'diff': 1.6500000000002624e-05}, {'diff': 1.622299999999577e-05}, {'diff': 1.6236000000002804e-05}, {'diff': 1.712499999999978e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:40.995" endtime="20201030 18:28:40.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:41.003" level="INFO">${ACCURACY} = {'diff': [1.776299999999703e-05, 1.6528000000001764e-05, 1.6500000000002624e-05, 1.622299999999577e-05, 1.6236000000002804e-05, 1.712499999999978e-05, 1.6514000000002194e-05, 1.7098000000000113e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:28:40.999" endtime="20201030 18:28:41.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.007" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 18:28:41.006" endtime="20201030 18:28:41.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.010" level="INFO">VALUE: [1.776299999999703e-05, 1.6528000000001764e-05, 1.6500000000002624e-05, 1.622299999999577e-05, 1.6236000000002804e-05, 1.712499999999978e-05, 1.6514000000002194e-05, 1.7098000000000113e-05, 1.6236000000002804e-05, 1.6207999999996725e-05, 1.619499999999663e-05, 1.6263999999995005e-05, 1.6222000000003234e-05, 1.6194000000004094e-05, 1.6207999999996725e-05, 1.7098000000000113e-05, 1.6153000000004858e-05, 1.6444000000004344e-05, 1.711100000000021e-05, 1.709700000000064e-05, 1.6528000000001764e-05, 1.6208000000003664e-05, 1.6500000000002624e-05, 1.712499999999978e-05, 1.6499999999995685e-05, 1.6207999999996725e-05, 1.6221999999996295e-05, 1.619499999999663e-05, 1.6222000000003234e-05, 1.6207999999996725e-05, 1.6207999999996725e-05, 1.6513999999995255e-05, 1.70969999999937e-05, 1.6207999999996725e-05, 1.6222000000003234e-05, 1.6207999999996725e-05, 1.6207999999996725e-05, 1.6193999999997155e-05, 1.6207999999996725e-05, 1.6208000000003664e-05, 1.6528000000001764e-05, 1.709700000000064e-05, 1.6264000000001944e-05, 1.651300000000272e-05, 1.6208000000003664e-05, 1.618099999999706e-05, 1.6499999999995685e-05, 1.7137999999999876e-05, 1.713899999999935e-05, 1.7070000000000973e-05]</msg>
<status status="PASS" starttime="20201030 18:28:41.009" endtime="20201030 18:28:41.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.004" endtime="20201030 18:28:41.011"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:41.015" endtime="20201030 18:28:41.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.013" endtime="20201030 18:28:41.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.012" endtime="20201030 18:28:41.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.628" endtime="20201030 18:28:41.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.626" endtime="20201030 18:28:41.036"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.044" endtime="20201030 18:28:41.059"></status>
</kw>
<msg timestamp="20201030 18:28:41.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.043" endtime="20201030 18:28:41.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.060" endtime="20201030 18:28:41.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.063" endtime="20201030 18:28:41.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.040" endtime="20201030 18:28:41.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.038" endtime="20201030 18:28:41.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.072" endtime="20201030 18:28:41.379"></status>
</kw>
<msg timestamp="20201030 18:28:41.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021859014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.070" endtime="20201030 18:28:41.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021859014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.383" endtime="20201030 18:28:41.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.392" endtime="20201030 18:28:41.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.068" endtime="20201030 18:28:41.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.066" endtime="20201030 18:28:41.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:41.398" level="INFO">${RESULT} = [{'diff': 1.887500000000153e-05}, {'diff': 1.743100000000178e-05}, {'diff': 1.7429999999998835e-05}, {'diff': 1.741700000000221e-05}, {'diff': 1.711100000000021e-05}, {'diff': 1.712499999999978e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:41.395" endtime="20201030 18:28:41.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:41.402" level="INFO">${ACCURACY} = {'diff': [1.887500000000153e-05, 1.743100000000178e-05, 1.7429999999998835e-05, 1.741700000000221e-05, 1.711100000000021e-05, 1.712499999999978e-05, 1.711100000000021e-05, 1.715299999999892e-05, 1.743...</msg>
<status status="PASS" starttime="20201030 18:28:41.399" endtime="20201030 18:28:41.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.407" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 18:28:41.406" endtime="20201030 18:28:41.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.409" level="INFO">VALUE: [1.887500000000153e-05, 1.743100000000178e-05, 1.7429999999998835e-05, 1.741700000000221e-05, 1.711100000000021e-05, 1.712499999999978e-05, 1.711100000000021e-05, 1.715299999999892e-05, 1.743099999999831e-05, 1.741699999999874e-05, 1.802700000000032e-05, 1.8014000000000224e-05, 1.7416000000002735e-05, 1.712499999999978e-05, 1.708300000000107e-05, 1.744499999999788e-05, 1.712500000000325e-05, 1.716700000000196e-05, 1.741700000000221e-05, 1.709700000000064e-05, 1.741700000000221e-05, 1.7430000000002305e-05, 1.8041999999999364e-05, 1.711100000000021e-05, 1.743100000000178e-05, 1.7486000000000584e-05, 1.711100000000021e-05, 1.734699999999742e-05, 1.741700000000221e-05, 1.712499999999978e-05, 1.7513999999999724e-05, 1.713899999999935e-05, 1.7429999999998835e-05, 1.805499999999946e-05, 1.741699999999874e-05, 1.711100000000021e-05, 1.709700000000064e-05, 1.713899999999935e-05, 1.7444000000001875e-05, 1.712499999999978e-05, 1.743099999999831e-05, 1.7472000000001014e-05, 1.8041999999999364e-05, 1.737500000000003e-05, 1.7444000000001875e-05, 1.8041999999999364e-05, 1.7415999999999265e-05, 1.802700000000032e-05, 1.736100000000046e-05, 1.8041999999999364e-05]</msg>
<status status="PASS" starttime="20201030 18:28:41.408" endtime="20201030 18:28:41.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.403" endtime="20201030 18:28:41.410"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:41.414" endtime="20201030 18:28:41.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.412" endtime="20201030 18:28:41.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.411" endtime="20201030 18:28:41.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.036" endtime="20201030 18:28:41.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.036" endtime="20201030 18:28:41.435"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.443" endtime="20201030 18:28:41.459"></status>
</kw>
<msg timestamp="20201030 18:28:41.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.442" endtime="20201030 18:28:41.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.461" endtime="20201030 18:28:41.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.463" endtime="20201030 18:28:41.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.439" endtime="20201030 18:28:41.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.437" endtime="20201030 18:28:41.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.472" endtime="20201030 18:28:41.758"></status>
</kw>
<msg timestamp="20201030 18:28:41.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022718986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022738542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.470" endtime="20201030 18:28:41.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022718986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022738542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.762" endtime="20201030 18:28:41.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.770" endtime="20201030 18:28:41.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.468" endtime="20201030 18:28:41.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.466" endtime="20201030 18:28:41.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:41.777" level="INFO">${RESULT} = [{'diff': 1.9556000000000434e-05}, {'diff': 1.8680000000000085e-05}, {'diff': 1.8319999999998754e-05}, {'diff': 1.834700000000189e-05}, {'diff': 1.833299999999885e-05}, {'diff': 1.895900000000242e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:41.773" endtime="20201030 18:28:41.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:41.781" level="INFO">${ACCURACY} = {'diff': [1.9556000000000434e-05, 1.8680000000000085e-05, 1.8319999999998754e-05, 1.834700000000189e-05, 1.833299999999885e-05, 1.895900000000242e-05, 1.8278000000000044e-05, 1.836099999999799e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:28:41.778" endtime="20201030 18:28:41.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.785" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 18:28:41.784" endtime="20201030 18:28:41.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.788" level="INFO">VALUE: [1.9556000000000434e-05, 1.8680000000000085e-05, 1.8319999999998754e-05, 1.834700000000189e-05, 1.833299999999885e-05, 1.895900000000242e-05, 1.8278000000000044e-05, 1.836099999999799e-05, 1.834700000000189e-05, 1.894499999999938e-05, 1.837499999999756e-05, 1.837500000000103e-05, 1.8973000000001988e-05, 1.8334000000001793e-05, 1.8973000000001988e-05, 1.836099999999799e-05, 1.8264000000000474e-05, 1.8291999999999614e-05, 1.895900000000242e-05, 1.833299999999885e-05, 1.833299999999885e-05, 1.8333999999998324e-05, 1.931900000000028e-05, 1.89029999999972e-05, 1.834700000000189e-05, 1.841699999999974e-05, 1.8334000000001793e-05, 1.8041999999999364e-05, 1.834700000000189e-05, 1.894499999999938e-05, 1.8333999999998324e-05, 1.8306000000002653e-05, 1.840300000000017e-05, 1.8347999999997894e-05, 1.833300000000232e-05, 1.8402000000000696e-05, 1.836100000000146e-05, 1.833299999999885e-05, 1.895899999999895e-05, 1.834700000000189e-05, 1.830500000000318e-05, 1.7972000000001515e-05, 1.834699999999842e-05, 1.8319999999998754e-05, 1.8348000000001363e-05, 1.833300000000232e-05, 1.7972000000001515e-05, 1.837500000000103e-05, 1.831899999999928e-05, 1.83890000000006e-05]</msg>
<status status="PASS" starttime="20201030 18:28:41.786" endtime="20201030 18:28:41.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.781" endtime="20201030 18:28:41.790"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:41.794" endtime="20201030 18:28:41.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.792" endtime="20201030 18:28:41.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.791" endtime="20201030 18:28:41.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.436" endtime="20201030 18:28:41.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.435" endtime="20201030 18:28:41.814"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.824" endtime="20201030 18:28:41.840"></status>
</kw>
<msg timestamp="20201030 18:28:41.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.822" endtime="20201030 18:28:41.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.841" endtime="20201030 18:28:41.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.844" endtime="20201030 18:28:41.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.819" endtime="20201030 18:28:41.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.817" endtime="20201030 18:28:41.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.853" endtime="20201030 18:28:42.155"></status>
</kw>
<msg timestamp="20201030 18:28:42.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023609931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023630639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.851" endtime="20201030 18:28:42.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023609931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023630639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.165" endtime="20201030 18:28:42.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.173" endtime="20201030 18:28:42.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.849" endtime="20201030 18:28:42.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.847" endtime="20201030 18:28:42.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:42.180" level="INFO">${RESULT} = [{'diff': 2.0707999999997756e-05}, {'diff': 1.9570000000000004e-05}, {'diff': 1.956900000000053e-05}, {'diff': 2.016700000000149e-05}, {'diff': 1.9250000000001904e-05}, {'diff': 1.9249999999998435e-05...</msg>
<status status="PASS" starttime="20201030 18:28:42.176" endtime="20201030 18:28:42.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:42.185" level="INFO">${ACCURACY} = {'diff': [2.0707999999997756e-05, 1.9570000000000004e-05, 1.956900000000053e-05, 2.016700000000149e-05, 1.9250000000001904e-05, 1.9249999999998435e-05, 1.9263999999998005e-05, 1.9264000000001474e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:42.181" endtime="20201030 18:28:42.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.189" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 18:28:42.188" endtime="20201030 18:28:42.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.192" level="INFO">VALUE: [2.0707999999997756e-05, 1.9570000000000004e-05, 1.956900000000053e-05, 2.016700000000149e-05, 1.9250000000001904e-05, 1.9249999999998435e-05, 1.9263999999998005e-05, 1.9264000000001474e-05, 1.9264000000001474e-05, 2.0222000000000295e-05, 2.0180000000001586e-05, 2.0180000000001586e-05, 2.018100000000106e-05, 1.929100000000114e-05, 1.9264000000001474e-05, 1.9250000000001904e-05, 2.018100000000106e-05, 2.0180000000001586e-05, 2.016699999999802e-05, 1.9277999999997575e-05, 1.919499999999963e-05, 2.0193999999997686e-05, 1.927700000000157e-05, 1.9278000000001044e-05, 2.0180000000001586e-05, 1.9249999999998435e-05, 1.918100000000006e-05, 1.9264000000001474e-05, 1.9249999999998435e-05, 1.9263999999998005e-05, 1.9264000000001474e-05, 1.92769999999981e-05, 2.018100000000106e-05, 2.0165999999998546e-05, 2.016699999999802e-05, 2.016699999999802e-05, 1.9207999999999725e-05, 1.9249999999998435e-05, 1.9249999999998435e-05, 1.927700000000157e-05, 1.988899999999863e-05, 1.9249999999998435e-05, 1.9236000000002335e-05, 1.956900000000053e-05, 1.9221999999999295e-05, 1.9250000000001904e-05, 1.9250000000001904e-05, 1.927700000000157e-05, 1.9250000000001904e-05, 1.9264000000001474e-05]</msg>
<status status="PASS" starttime="20201030 18:28:42.190" endtime="20201030 18:28:42.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.185" endtime="20201030 18:28:42.193"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:42.197" endtime="20201030 18:28:42.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.195" endtime="20201030 18:28:42.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.194" endtime="20201030 18:28:42.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.815" endtime="20201030 18:28:42.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.815" endtime="20201030 18:28:42.217"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.226" endtime="20201030 18:28:42.241"></status>
</kw>
<msg timestamp="20201030 18:28:42.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.224" endtime="20201030 18:28:42.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.243" endtime="20201030 18:28:42.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.245" endtime="20201030 18:28:42.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.222" endtime="20201030 18:28:42.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.220" endtime="20201030 18:28:42.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.254" endtime="20201030 18:28:42.540"></status>
</kw>
<msg timestamp="20201030 18:28:42.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021773806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.253" endtime="20201030 18:28:42.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021773806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.544" endtime="20201030 18:28:42.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.552" endtime="20201030 18:28:42.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.250" endtime="20201030 18:28:42.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.248" endtime="20201030 18:28:42.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:42.559" level="INFO">${RESULT} = [{'diff': 2.2000000000001185e-05}, {'diff': 2.0472000000000545e-05}, {'diff': 2.1098000000000644e-05}, {'diff': 2.015299999999845e-05}, {'diff': 2.018100000000106e-05}, {'diff': 2.045899999999698e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:42.555" endtime="20201030 18:28:42.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:42.563" level="INFO">${ACCURACY} = {'diff': [2.2000000000001185e-05, 2.0472000000000545e-05, 2.1098000000000644e-05, 2.015299999999845e-05, 2.018100000000106e-05, 2.045899999999698e-05, 2.1098000000000644e-05, 2.105500000000246e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:28:42.560" endtime="20201030 18:28:42.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.567" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 18:28:42.566" endtime="20201030 18:28:42.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.570" level="INFO">VALUE: [2.2000000000001185e-05, 2.0472000000000545e-05, 2.1098000000000644e-05, 2.015299999999845e-05, 2.018100000000106e-05, 2.045899999999698e-05, 2.1098000000000644e-05, 2.105500000000246e-05, 2.0415999999998796e-05, 2.1083999999997605e-05, 2.016700000000149e-05, 2.018100000000106e-05, 2.015300000000192e-05, 2.018100000000106e-05, 2.0486000000000115e-05, 2.0235999999999865e-05, 2.0179999999998116e-05, 2.012499999999931e-05, 2.0486000000000115e-05, 2.0180000000001586e-05, 2.0166000000002016e-05, 2.047300000000002e-05, 2.109700000000117e-05, 2.0165999999998546e-05, 2.015300000000192e-05, 2.0486000000000115e-05, 2.0166000000002016e-05, 2.112500000000031e-05, 2.10830000000016e-05, 2.0472000000000545e-05, 2.019500000000063e-05, 2.0486000000000115e-05, 2.109700000000117e-05, 2.016699999999802e-05, 2.04029999999987e-05, 2.109700000000117e-05, 2.0179999999998116e-05, 2.016700000000149e-05, 2.018100000000106e-05, 2.0165999999998546e-05, 2.0472000000000545e-05, 2.109700000000117e-05, 2.011099999999974e-05, 2.047300000000002e-05, 2.10969999999977e-05, 2.1112000000000214e-05, 2.109700000000117e-05, 2.0486000000000115e-05, 2.1056000000001934e-05, 2.016699999999802e-05]</msg>
<status status="PASS" starttime="20201030 18:28:42.568" endtime="20201030 18:28:42.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.564" endtime="20201030 18:28:42.571"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:42.575" endtime="20201030 18:28:42.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.573" endtime="20201030 18:28:42.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.572" endtime="20201030 18:28:42.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.218" endtime="20201030 18:28:42.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.218" endtime="20201030 18:28:42.596"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.607" endtime="20201030 18:28:42.625"></status>
</kw>
<msg timestamp="20201030 18:28:42.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.603" endtime="20201030 18:28:42.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.627" endtime="20201030 18:28:42.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.630" endtime="20201030 18:28:42.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.600" endtime="20201030 18:28:42.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.598" endtime="20201030 18:28:42.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.642" endtime="20201030 18:28:42.941"></status>
</kw>
<msg timestamp="20201030 18:28:42.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026938153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026961083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.641" endtime="20201030 18:28:42.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026938153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026961083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.950" endtime="20201030 18:28:42.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.969" endtime="20201030 18:28:42.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.638" endtime="20201030 18:28:42.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.636" endtime="20201030 18:28:42.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:42.979" level="INFO">${RESULT} = [{'diff': 2.2930000000000866e-05}, {'diff': 2.138900000000013e-05}, {'diff': 2.138900000000013e-05}, {'diff': 2.143099999999884e-05}, {'diff': 2.1055999999998465e-05}, {'diff': 2.109700000000117e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:42.976" endtime="20201030 18:28:42.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:42.983" level="INFO">${ACCURACY} = {'diff': [2.2930000000000866e-05, 2.138900000000013e-05, 2.138900000000013e-05, 2.143099999999884e-05, 2.1055999999998465e-05, 2.109700000000117e-05, 2.1415999999999796e-05, 2.1041999999998895e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:28:42.980" endtime="20201030 18:28:42.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.988" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 18:28:42.987" endtime="20201030 18:28:42.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.990" level="INFO">VALUE: [2.2930000000000866e-05, 2.138900000000013e-05, 2.138900000000013e-05, 2.143099999999884e-05, 2.1055999999998465e-05, 2.109700000000117e-05, 2.1415999999999796e-05, 2.1041999999998895e-05, 2.138900000000013e-05, 2.14029999999997e-05, 2.14029999999997e-05, 2.2000000000001185e-05, 2.2013999999997286e-05, 2.1056000000001934e-05, 2.14029999999997e-05, 2.138899999999666e-05, 2.2013999999997286e-05, 2.1415999999999796e-05, 2.2014000000000755e-05, 2.14029999999997e-05, 2.201300000000128e-05, 2.2013999999997286e-05, 2.138900000000013e-05, 2.2014000000000755e-05, 2.140300000000317e-05, 2.109700000000117e-05, 2.137499999999709e-05, 2.136100000000099e-05, 2.14029999999997e-05, 2.1972000000002045e-05, 2.141699999999927e-05, 2.1084000000001074e-05, 2.138900000000013e-05, 2.2055999999999465e-05, 2.1402000000000226e-05, 2.109700000000117e-05, 2.1402000000000226e-05, 2.202700000000085e-05, 2.14029999999997e-05, 2.14029999999997e-05, 2.1999999999997716e-05, 2.109700000000117e-05, 2.141699999999927e-05, 2.111100000000074e-05, 2.14029999999997e-05, 2.1402000000000226e-05, 2.2014000000000755e-05, 2.138900000000013e-05, 2.109700000000117e-05, 2.1402000000000226e-05]</msg>
<status status="PASS" starttime="20201030 18:28:42.989" endtime="20201030 18:28:42.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.984" endtime="20201030 18:28:42.992"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:42.996" endtime="20201030 18:28:43.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.995" endtime="20201030 18:28:43.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.993" endtime="20201030 18:28:43.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.596" endtime="20201030 18:28:43.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.596" endtime="20201030 18:28:43.017"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.026" endtime="20201030 18:28:43.041"></status>
</kw>
<msg timestamp="20201030 18:28:43.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.024" endtime="20201030 18:28:43.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.042" endtime="20201030 18:28:43.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.045" endtime="20201030 18:28:43.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.021" endtime="20201030 18:28:43.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.019" endtime="20201030 18:28:43.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.054" endtime="20201030 18:28:43.340"></status>
</kw>
<msg timestamp="20201030 18:28:43.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022142653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022166486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.052" endtime="20201030 18:28:43.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022142653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022166486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.344" endtime="20201030 18:28:43.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.352" endtime="20201030 18:28:43.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.050" endtime="20201030 18:28:43.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.048" endtime="20201030 18:28:43.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:43.359" level="INFO">${RESULT} = [{'diff': 2.3832999999997412e-05}, {'diff': 2.2278000000000575e-05}, {'diff': 2.231899999999981e-05}, {'diff': 2.2277999999997106e-05}, {'diff': 2.229100000000067e-05}, {'diff': 2.32229999999993e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:43.355" endtime="20201030 18:28:43.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:43.364" level="INFO">${ACCURACY} = {'diff': [2.3832999999997412e-05, 2.2278000000000575e-05, 2.231899999999981e-05, 2.2277999999997106e-05, 2.229100000000067e-05, 2.32229999999993e-05, 2.294499999999991e-05, 2.2292000000000145e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 18:28:43.360" endtime="20201030 18:28:43.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.368" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 18:28:43.367" endtime="20201030 18:28:43.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.371" level="INFO">VALUE: [2.3832999999997412e-05, 2.2278000000000575e-05, 2.231899999999981e-05, 2.2277999999997106e-05, 2.229100000000067e-05, 2.32229999999993e-05, 2.294499999999991e-05, 2.2292000000000145e-05, 2.230500000000024e-05, 2.234699999999895e-05, 2.3235999999999396e-05, 2.237500000000156e-05, 2.231899999999981e-05, 2.230500000000024e-05, 2.2319999999999285e-05, 2.234700000000242e-05, 2.1999999999997716e-05, 2.2333999999998855e-05, 2.2305999999999715e-05, 2.233299999999938e-05, 2.2971999999999576e-05, 2.231899999999981e-05, 2.2292000000000145e-05, 2.3264000000002005e-05, 2.3194000000000686e-05, 2.231900000000328e-05, 2.230500000000024e-05, 2.293099999999687e-05, 2.2304999999996772e-05, 2.233300000000285e-05, 2.231899999999981e-05, 2.3221999999999826e-05, 2.233300000000285e-05, 2.236100000000199e-05, 2.2999999999998716e-05, 2.231899999999981e-05, 2.2319999999999285e-05, 2.229100000000067e-05, 2.2319999999999285e-05, 2.2305999999999715e-05, 2.2929999999997397e-05, 2.2333999999998855e-05, 2.3236000000002865e-05, 2.293100000000034e-05, 2.2306000000003184e-05, 2.229100000000067e-05, 2.293100000000034e-05, 2.259700000000267e-05, 2.318100000000059e-05, 2.3235999999999396e-05]</msg>
<status status="PASS" starttime="20201030 18:28:43.369" endtime="20201030 18:28:43.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.365" endtime="20201030 18:28:43.372"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:43.376" endtime="20201030 18:28:43.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.374" endtime="20201030 18:28:43.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.373" endtime="20201030 18:28:43.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.018" endtime="20201030 18:28:43.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.017" endtime="20201030 18:28:43.396"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.405" endtime="20201030 18:28:43.421"></status>
</kw>
<msg timestamp="20201030 18:28:43.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.403" endtime="20201030 18:28:43.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.423" endtime="20201030 18:28:43.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.425" endtime="20201030 18:28:43.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.401" endtime="20201030 18:28:43.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.399" endtime="20201030 18:28:43.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.434" endtime="20201030 18:28:43.721"></status>
</kw>
<msg timestamp="20201030 18:28:43.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022272861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022297611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.433" endtime="20201030 18:28:43.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022272861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022297611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.725" endtime="20201030 18:28:43.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.733" endtime="20201030 18:28:43.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.430" endtime="20201030 18:28:43.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.428" endtime="20201030 18:28:43.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:43.740" level="INFO">${RESULT} = [{'diff': 2.4749999999996997e-05}, {'diff': 2.3806000000001215e-05}, {'diff': 2.384700000000045e-05}, {'diff': 2.361099999999977e-05}, {'diff': 2.3221999999999826e-05}, {'diff': 2.3235999999999396e-05...</msg>
<status status="PASS" starttime="20201030 18:28:43.737" endtime="20201030 18:28:43.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:43.744" level="INFO">${ACCURACY} = {'diff': [2.4749999999996997e-05, 2.3806000000001215e-05, 2.384700000000045e-05, 2.361099999999977e-05, 2.3221999999999826e-05, 2.3235999999999396e-05, 2.3249999999998966e-05, 2.3249999999998966e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:43.741" endtime="20201030 18:28:43.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.749" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 18:28:43.748" endtime="20201030 18:28:43.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.751" level="INFO">VALUE: [2.4749999999996997e-05, 2.3806000000001215e-05, 2.384700000000045e-05, 2.361099999999977e-05, 2.3221999999999826e-05, 2.3235999999999396e-05, 2.3249999999998966e-05, 2.3249999999998966e-05, 2.415299999999898e-05, 2.3221999999999826e-05, 2.3208000000000256e-05, 2.3235999999999396e-05, 2.318099999999712e-05, 2.3235999999999396e-05, 2.3194000000000686e-05, 2.411100000000027e-05, 2.415300000000245e-05, 2.3278000000001575e-05, 2.4151999999999507e-05, 2.3235999999999396e-05, 2.3235999999999396e-05, 2.416699999999855e-05, 2.416699999999855e-05, 2.3236000000002865e-05, 2.3236000000002865e-05, 2.3235999999999396e-05, 2.3235999999999396e-05, 2.3263999999998536e-05, 2.3235999999999396e-05, 2.3221999999999826e-05, 2.3249999999998966e-05, 2.415300000000245e-05, 2.3221999999999826e-05, 2.3221999999999826e-05, 2.3249999999998966e-05, 2.416700000000202e-05, 2.3249999999998966e-05, 2.3208000000000256e-05, 2.316699999999755e-05, 2.3262999999999062e-05, 2.3554999999998022e-05, 2.32229999999993e-05, 2.3263999999998536e-05, 2.3235999999999396e-05, 2.3249999999998966e-05, 2.4236000000000396e-05, 2.415300000000245e-05, 2.3222000000003296e-05, 2.323699999999887e-05, 2.3555999999997496e-05]</msg>
<status status="PASS" starttime="20201030 18:28:43.750" endtime="20201030 18:28:43.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.745" endtime="20201030 18:28:43.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:43.756" endtime="20201030 18:28:43.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.755" endtime="20201030 18:28:43.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.754" endtime="20201030 18:28:43.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.397" endtime="20201030 18:28:43.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.397" endtime="20201030 18:28:43.777"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.786" endtime="20201030 18:28:43.802"></status>
</kw>
<msg timestamp="20201030 18:28:43.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.784" endtime="20201030 18:28:43.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.804" endtime="20201030 18:28:43.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.808" endtime="20201030 18:28:43.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.781" endtime="20201030 18:28:43.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.779" endtime="20201030 18:28:43.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.817" endtime="20201030 18:28:44.107"></status>
</kw>
<msg timestamp="20201030 18:28:44.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023092694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023118653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.815" endtime="20201030 18:28:44.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023092694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023118653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.111" endtime="20201030 18:28:44.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.120" endtime="20201030 18:28:44.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.813" endtime="20201030 18:28:44.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.811" endtime="20201030 18:28:44.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:44.127" level="INFO">${RESULT} = [{'diff': 2.595899999999901e-05}, {'diff': 2.4457999999998037e-05}, {'diff': 2.4458000000001506e-05}, {'diff': 2.5069999999998566e-05}, {'diff': 2.4457999999998037e-05}, {'diff': 2.5082999999998662e-0...</msg>
<status status="PASS" starttime="20201030 18:28:44.123" endtime="20201030 18:28:44.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:44.131" level="INFO">${ACCURACY} = {'diff': [2.595899999999901e-05, 2.4457999999998037e-05, 2.4458000000001506e-05, 2.5069999999998566e-05, 2.4457999999998037e-05, 2.5082999999998662e-05, 2.416700000000202e-05, 2.444500000000141e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:28:44.128" endtime="20201030 18:28:44.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.136" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 18:28:44.134" endtime="20201030 18:28:44.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.138" level="INFO">VALUE: [2.595899999999901e-05, 2.4457999999998037e-05, 2.4458000000001506e-05, 2.5069999999998566e-05, 2.4457999999998037e-05, 2.5082999999998662e-05, 2.416700000000202e-05, 2.444500000000141e-05, 2.4151999999999507e-05, 2.5096999999998232e-05, 2.4472000000001076e-05, 2.416700000000202e-05, 2.413899999999941e-05, 2.415300000000245e-05, 2.4165999999999077e-05, 2.418100000000159e-05, 2.4458000000001506e-05, 2.5054999999999522e-05, 2.443099999999837e-05, 2.5041999999999426e-05, 2.413900000000288e-05, 2.4486000000000646e-05, 2.444500000000141e-05, 2.4152000000002977e-05, 2.4458000000001506e-05, 2.5069999999998566e-05, 2.42230000000003e-05, 2.415299999999898e-05, 2.4457999999998037e-05, 2.443100000000184e-05, 2.413899999999941e-05, 2.4457999999998037e-05, 2.415299999999898e-05, 2.4443999999998467e-05, 2.447300000000055e-05, 2.5096999999998232e-05, 2.4444000000001936e-05, 2.415299999999898e-05, 2.415299999999898e-05, 2.4236000000000396e-05, 2.416699999999855e-05, 2.4471999999997607e-05, 2.416699999999855e-05, 2.415299999999898e-05, 2.4500000000000216e-05, 2.413899999999941e-05, 2.440299999999923e-05, 2.5027999999999856e-05, 2.4193999999998217e-05, 2.415300000000245e-05]</msg>
<status status="PASS" starttime="20201030 18:28:44.137" endtime="20201030 18:28:44.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.132" endtime="20201030 18:28:44.140"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:44.144" endtime="20201030 18:28:44.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.143" endtime="20201030 18:28:44.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.141" endtime="20201030 18:28:44.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.778" endtime="20201030 18:28:44.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.777" endtime="20201030 18:28:44.165"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.174" endtime="20201030 18:28:44.189"></status>
</kw>
<msg timestamp="20201030 18:28:44.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.172" endtime="20201030 18:28:44.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.191" endtime="20201030 18:28:44.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.194" endtime="20201030 18:28:44.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.170" endtime="20201030 18:28:44.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.168" endtime="20201030 18:28:44.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.203" endtime="20201030 18:28:44.508"></status>
</kw>
<msg timestamp="20201030 18:28:44.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022395444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022422347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.202" endtime="20201030 18:28:44.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022395444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022422347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.513" endtime="20201030 18:28:44.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.521" endtime="20201030 18:28:44.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.199" endtime="20201030 18:28:44.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.197" endtime="20201030 18:28:44.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:44.528" level="INFO">${RESULT} = [{'diff': 2.690299999999826e-05}, {'diff': 2.565300000000048e-05}, {'diff': 2.6277999999997637e-05}, {'diff': 2.5068999999999092e-05}, {'diff': 2.5735999999998427e-05}, {'diff': 2.543099999999937e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:44.525" endtime="20201030 18:28:44.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:44.533" level="INFO">${ACCURACY} = {'diff': [2.690299999999826e-05, 2.565300000000048e-05, 2.6277999999997637e-05, 2.5068999999999092e-05, 2.5735999999998427e-05, 2.543099999999937e-05, 2.5971999999999107e-05, 2.537500000000109e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:28:44.529" endtime="20201030 18:28:44.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.538" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 18:28:44.537" endtime="20201030 18:28:44.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.540" level="INFO">VALUE: [2.690299999999826e-05, 2.565300000000048e-05, 2.6277999999997637e-05, 2.5068999999999092e-05, 2.5735999999998427e-05, 2.543099999999937e-05, 2.5971999999999107e-05, 2.537500000000109e-05, 2.5068999999999092e-05, 2.536100000000152e-05, 2.5068999999999092e-05, 2.538900000000066e-05, 2.538900000000066e-05, 2.5346999999998482e-05, 2.5985999999998677e-05, 2.537500000000109e-05, 2.536100000000152e-05, 2.5985999999998677e-05, 2.537500000000109e-05, 2.5985999999998677e-05, 2.50970000000017e-05, 2.538900000000066e-05, 2.538900000000066e-05, 2.594499999999944e-05, 2.540300000000023e-05, 2.5985999999998677e-05, 2.54169999999998e-05, 2.5985999999998677e-05, 2.540300000000023e-05, 2.540300000000023e-05, 2.5362000000000995e-05, 2.5985999999998677e-05, 2.534700000000195e-05, 2.5069999999998566e-05, 2.536100000000152e-05, 2.536100000000152e-05, 2.536100000000152e-05, 2.5972000000002576e-05, 2.5346999999998482e-05, 2.5957999999999537e-05, 2.537500000000109e-05, 2.6291999999997206e-05, 2.598699999999815e-05, 2.5069999999998566e-05, 2.537500000000109e-05, 2.6291000000001202e-05, 2.6292000000000676e-05, 2.5971999999999107e-05, 2.5360999999998052e-05, 2.5054999999999522e-05]</msg>
<status status="PASS" starttime="20201030 18:28:44.539" endtime="20201030 18:28:44.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.534" endtime="20201030 18:28:44.542"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:44.546" endtime="20201030 18:28:44.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.544" endtime="20201030 18:28:44.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.543" endtime="20201030 18:28:44.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.166" endtime="20201030 18:28:44.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.165" endtime="20201030 18:28:44.567"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.576" endtime="20201030 18:28:44.590"></status>
</kw>
<msg timestamp="20201030 18:28:44.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.574" endtime="20201030 18:28:44.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.592" endtime="20201030 18:28:44.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.594" endtime="20201030 18:28:44.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.571" endtime="20201030 18:28:44.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.569" endtime="20201030 18:28:44.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.604" endtime="20201030 18:28:44.893"></status>
</kw>
<msg timestamp="20201030 18:28:44.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.602" endtime="20201030 18:28:44.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.897" endtime="20201030 18:28:44.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.906" endtime="20201030 18:28:44.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.600" endtime="20201030 18:28:44.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.598" endtime="20201030 18:28:44.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:44.913" level="INFO">${RESULT} = [{'diff': 2.7820000000001316e-05}, {'diff': 2.6542000000000926e-05}, {'diff': 2.7207999999997318e-05}, {'diff': 2.6277999999997637e-05}, {'diff': 2.713900000000241e-05}, {'diff': 2.688900000000216e-05...</msg>
<status status="PASS" starttime="20201030 18:28:44.909" endtime="20201030 18:28:44.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:44.917" level="INFO">${ACCURACY} = {'diff': [2.7820000000001316e-05, 2.6542000000000926e-05, 2.7207999999997318e-05, 2.6277999999997637e-05, 2.713900000000241e-05, 2.688900000000216e-05, 2.6292000000000676e-05, 2.6278000000001106e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:44.914" endtime="20201030 18:28:44.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.922" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 18:28:44.921" endtime="20201030 18:28:44.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.924" level="INFO">VALUE: [2.7820000000001316e-05, 2.6542000000000926e-05, 2.7207999999997318e-05, 2.6277999999997637e-05, 2.713900000000241e-05, 2.688900000000216e-05, 2.6292000000000676e-05, 2.6278000000001106e-05, 2.6292000000000676e-05, 2.6292000000000676e-05, 2.6277999999997637e-05, 2.6346999999999482e-05, 2.6291000000001202e-05, 2.6305000000000772e-05, 2.690300000000173e-05, 2.6292000000000676e-05, 2.6264000000001536e-05, 2.7208000000000787e-05, 2.622299999999883e-05, 2.6262999999998593e-05, 2.6292000000000676e-05, 2.6348000000002425e-05, 2.6292000000000676e-05, 2.6319000000000342e-05, 2.6305000000000772e-05, 2.7193999999997748e-05, 2.6292000000000676e-05, 2.7222000000000357e-05, 2.7208000000000787e-05, 2.7208000000000787e-05, 2.6291999999997206e-05, 2.6263999999998067e-05, 2.7277999999998637e-05, 2.690300000000173e-05, 2.6278000000001106e-05, 2.6292000000000676e-05, 2.7208000000000787e-05, 2.6263999999998067e-05, 2.6249999999998497e-05, 2.6277999999997637e-05, 2.7208000000000787e-05, 2.7151999999999038e-05, 2.6291000000001202e-05, 2.7222000000000357e-05, 2.6292000000000676e-05, 2.6305000000000772e-05, 2.7194000000001217e-05, 2.7208000000000787e-05, 2.6290999999997733e-05, 2.7263999999999067e-05]</msg>
<status status="PASS" starttime="20201030 18:28:44.923" endtime="20201030 18:28:44.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.918" endtime="20201030 18:28:44.926"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:44.929" endtime="20201030 18:28:44.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.928" endtime="20201030 18:28:44.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.927" endtime="20201030 18:28:44.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.567" endtime="20201030 18:28:44.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.567" endtime="20201030 18:28:44.950"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.959" endtime="20201030 18:28:44.976"></status>
</kw>
<msg timestamp="20201030 18:28:44.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.958" endtime="20201030 18:28:44.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.977" endtime="20201030 18:28:44.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.980" endtime="20201030 18:28:44.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.955" endtime="20201030 18:28:44.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.953" endtime="20201030 18:28:44.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.989" endtime="20201030 18:28:45.275"></status>
</kw>
<msg timestamp="20201030 18:28:45.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023735097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023763514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.988" endtime="20201030 18:28:45.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023735097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023763514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.279" endtime="20201030 18:28:45.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.288" endtime="20201030 18:28:45.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.985" endtime="20201030 18:28:45.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.983" endtime="20201030 18:28:45.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:45.295" level="INFO">${RESULT} = [{'diff': 2.841699999999933e-05}, {'diff': 2.7513999999999317e-05}, {'diff': 2.8082999999998193e-05}, {'diff': 2.719500000000069e-05}, {'diff': 2.720899999999679e-05}, {'diff': 2.7222000000000357e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:45.291" endtime="20201030 18:28:45.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:45.299" level="INFO">${ACCURACY} = {'diff': [2.841699999999933e-05, 2.7513999999999317e-05, 2.8082999999998193e-05, 2.719500000000069e-05, 2.720899999999679e-05, 2.7222000000000357e-05, 2.8083000000001662e-05, 2.715299999999851e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:28:45.296" endtime="20201030 18:28:45.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.304" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 18:28:45.303" endtime="20201030 18:28:45.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.306" level="INFO">VALUE: [2.841699999999933e-05, 2.7513999999999317e-05, 2.8082999999998193e-05, 2.719500000000069e-05, 2.720899999999679e-05, 2.7222000000000357e-05, 2.8083000000001662e-05, 2.715299999999851e-05, 2.7193999999997748e-05, 2.7208000000000787e-05, 2.745900000000051e-05, 2.7208000000000787e-05, 2.716699999999808e-05, 2.8111000000000802e-05, 2.7208000000000787e-05, 2.719500000000069e-05, 2.720900000000026e-05, 2.716700000000155e-05, 2.8125000000000372e-05, 2.7194000000001217e-05, 2.7486000000000177e-05, 2.7208000000000787e-05, 2.7527999999998887e-05, 2.8138999999999942e-05, 2.720900000000026e-05, 2.720900000000026e-05, 2.7514000000002786e-05, 2.7222000000000357e-05, 2.7208000000000787e-05, 2.7208000000000787e-05, 2.7193999999997748e-05, 2.7222000000000357e-05, 2.7222000000000357e-05, 2.715299999999851e-05, 2.720900000000026e-05, 2.7499999999999747e-05, 2.722299999999983e-05, 2.720900000000026e-05, 2.7208000000000787e-05, 2.8138999999999942e-05, 2.7222000000000357e-05, 2.7208000000000787e-05, 2.7194000000001217e-05, 2.7512999999999843e-05, 2.8138999999999942e-05, 2.7222000000000357e-05, 2.8125000000000372e-05, 2.8111000000000802e-05, 2.7208000000000787e-05, 2.8111000000000802e-05]</msg>
<status status="PASS" starttime="20201030 18:28:45.305" endtime="20201030 18:28:45.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.300" endtime="20201030 18:28:45.309"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:45.312" endtime="20201030 18:28:45.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.311" endtime="20201030 18:28:45.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.310" endtime="20201030 18:28:45.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.951" endtime="20201030 18:28:45.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.951" endtime="20201030 18:28:45.333"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.342" endtime="20201030 18:28:45.358"></status>
</kw>
<msg timestamp="20201030 18:28:45.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.341" endtime="20201030 18:28:45.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.359" endtime="20201030 18:28:45.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.362" endtime="20201030 18:28:45.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.338" endtime="20201030 18:28:45.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.336" endtime="20201030 18:28:45.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.371" endtime="20201030 18:28:45.657"></status>
</kw>
<msg timestamp="20201030 18:28:45.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022417889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022447278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.370" endtime="20201030 18:28:45.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022417889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022447278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.661" endtime="20201030 18:28:45.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.670" endtime="20201030 18:28:45.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.367" endtime="20201030 18:28:45.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.365" endtime="20201030 18:28:45.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:45.677" level="INFO">${RESULT} = [{'diff': 2.9389000000001192e-05}, {'diff': 2.84309999999989e-05}, {'diff': 2.8985999999998208e-05}, {'diff': 2.84309999999989e-05}, {'diff': 2.84170000000028e-05}, {'diff': 2.9028000000000387e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:45.673" endtime="20201030 18:28:45.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:45.682" level="INFO">${ACCURACY} = {'diff': [2.9389000000001192e-05, 2.84309999999989e-05, 2.8985999999998208e-05, 2.84309999999989e-05, 2.84170000000028e-05, 2.9028000000000387e-05, 2.8165999999999608e-05, 2.84309999999989e-05, 2.9041...</msg>
<status status="PASS" starttime="20201030 18:28:45.678" endtime="20201030 18:28:45.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.687" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 18:28:45.686" endtime="20201030 18:28:45.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.689" level="INFO">VALUE: [2.9389000000001192e-05, 2.84309999999989e-05, 2.8985999999998208e-05, 2.84309999999989e-05, 2.84170000000028e-05, 2.9028000000000387e-05, 2.8165999999999608e-05, 2.84309999999989e-05, 2.9041000000000483e-05, 2.8402999999999762e-05, 2.9041999999999957e-05, 2.84309999999989e-05, 2.9027000000000913e-05, 2.8429999999999428e-05, 2.8389000000000192e-05, 2.9028000000000387e-05, 2.84309999999989e-05, 2.9041999999999957e-05, 2.84309999999989e-05, 2.9028000000000387e-05, 2.9026999999997444e-05, 2.84170000000028e-05, 2.9028000000000387e-05, 2.8096999999997763e-05, 2.844499999999847e-05, 2.9014000000000817e-05, 2.8068999999998623e-05, 2.8444000000002467e-05, 2.9040999999997014e-05, 2.8402000000000288e-05, 2.8415999999999858e-05, 2.8111000000000802e-05, 2.8444000000002467e-05, 2.9055999999999527e-05, 2.9028000000000387e-05, 2.844499999999847e-05, 2.8429999999999428e-05, 2.9028000000000387e-05, 2.8125000000000372e-05, 2.8070000000001566e-05, 2.844499999999847e-05, 2.9041000000000483e-05, 2.8125000000000372e-05, 2.8138999999999942e-05, 2.8430000000002897e-05, 2.9041999999999957e-05, 2.9041999999999957e-05, 2.8138999999999942e-05, 2.841699999999933e-05, 2.8125000000000372e-05]</msg>
<status status="PASS" starttime="20201030 18:28:45.688" endtime="20201030 18:28:45.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.683" endtime="20201030 18:28:45.691"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:45.695" endtime="20201030 18:28:45.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.693" endtime="20201030 18:28:45.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.692" endtime="20201030 18:28:45.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.334" endtime="20201030 18:28:45.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.333" endtime="20201030 18:28:45.715"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.724" endtime="20201030 18:28:45.741"></status>
</kw>
<msg timestamp="20201030 18:28:45.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.723" endtime="20201030 18:28:45.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.742" endtime="20201030 18:28:45.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.745" endtime="20201030 18:28:45.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.720" endtime="20201030 18:28:45.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.718" endtime="20201030 18:28:45.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.754" endtime="20201030 18:28:46.042"></status>
</kw>
<msg timestamp="20201030 18:28:46.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022830042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022860319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.753" endtime="20201030 18:28:46.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022830042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022860319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.046" endtime="20201030 18:28:46.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.054" endtime="20201030 18:28:46.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.750" endtime="20201030 18:28:46.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.748" endtime="20201030 18:28:46.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:46.061" level="INFO">${RESULT} = [{'diff': 3.0277000000002163e-05}, {'diff': 2.9625000000001872e-05}, {'diff': 2.9346999999999013e-05}, {'diff': 2.9332999999999443e-05}, {'diff': 2.9041999999999957e-05}, {'diff': 2.9347999999998486e-...</msg>
<status status="PASS" starttime="20201030 18:28:46.058" endtime="20201030 18:28:46.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:46.065" level="INFO">${ACCURACY} = {'diff': [3.0277000000002163e-05, 2.9625000000001872e-05, 2.9346999999999013e-05, 2.9332999999999443e-05, 2.9041999999999957e-05, 2.9347999999998486e-05, 3.0249999999999028e-05, 2.9931000000000402e-05...</msg>
<status status="PASS" starttime="20201030 18:28:46.062" endtime="20201030 18:28:46.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.070" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 18:28:46.069" endtime="20201030 18:28:46.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.073" level="INFO">VALUE: [3.0277000000002163e-05, 2.9625000000001872e-05, 2.9346999999999013e-05, 2.9332999999999443e-05, 2.9041999999999957e-05, 2.9347999999998486e-05, 3.0249999999999028e-05, 2.9931000000000402e-05, 2.9346999999999013e-05, 2.9319999999999347e-05, 2.9958000000000068e-05, 2.9374999999998153e-05, 2.9306000000003246e-05, 2.9360999999998583e-05, 3.0263999999998598e-05, 2.995899999999954e-05, 2.9276999999997694e-05, 2.9346999999999013e-05, 2.9958000000000068e-05, 2.9430000000000428e-05, 2.995899999999954e-05, 2.9332999999999443e-05, 2.9332999999999443e-05, 2.9958000000000068e-05, 2.9346999999999013e-05, 2.9291000000000733e-05, 2.9346999999999013e-05, 2.9360999999998583e-05, 2.9971999999999638e-05, 2.9305000000000303e-05, 2.9346999999999013e-05, 2.9985999999999208e-05, 2.9361000000002052e-05, 2.9346999999999013e-05, 2.9360999999998583e-05, 2.9375000000001622e-05, 2.9347000000002482e-05, 2.9346999999999013e-05, 2.9347000000002482e-05, 2.9026999999997444e-05, 2.9417000000000332e-05, 2.9347000000002482e-05, 3.0263999999998598e-05, 2.9347999999998486e-05, 2.9347999999998486e-05, 2.9388999999997723e-05, 2.9347000000002482e-05, 2.994499999999997e-05, 2.9347000000002482e-05, 2.9041999999999957e-05]</msg>
<status status="PASS" starttime="20201030 18:28:46.071" endtime="20201030 18:28:46.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.066" endtime="20201030 18:28:46.074"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:46.078" endtime="20201030 18:28:46.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.076" endtime="20201030 18:28:46.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.075" endtime="20201030 18:28:46.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.716" endtime="20201030 18:28:46.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.716" endtime="20201030 18:28:46.099"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.108" endtime="20201030 18:28:46.126"></status>
</kw>
<msg timestamp="20201030 18:28:46.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.106" endtime="20201030 18:28:46.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.127" endtime="20201030 18:28:46.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.130" endtime="20201030 18:28:46.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.103" endtime="20201030 18:28:46.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.101" endtime="20201030 18:28:46.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.139" endtime="20201030 18:28:46.424"></status>
</kw>
<msg timestamp="20201030 18:28:46.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023711931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023743722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.138" endtime="20201030 18:28:46.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023711931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023743722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.428" endtime="20201030 18:28:46.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.437" endtime="20201030 18:28:46.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.135" endtime="20201030 18:28:46.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.133" endtime="20201030 18:28:46.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:46.444" level="INFO">${RESULT} = [{'diff': 3.1790999999999764e-05}, {'diff': 3.081900000000137e-05}, {'diff': 3.0250000000002497e-05}, {'diff': 3.0264000000002067e-05}, {'diff': 3.0584000000000167e-05}, {'diff': 3.116700000000208e-05...</msg>
<status status="PASS" starttime="20201030 18:28:46.440" endtime="20201030 18:28:46.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:46.448" level="INFO">${ACCURACY} = {'diff': [3.1790999999999764e-05, 3.081900000000137e-05, 3.0250000000002497e-05, 3.0264000000002067e-05, 3.0584000000000167e-05, 3.116700000000208e-05, 3.0264000000002067e-05, 3.0249999999999028e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:46.445" endtime="20201030 18:28:46.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.453" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 18:28:46.452" endtime="20201030 18:28:46.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.455" level="INFO">VALUE: [3.1790999999999764e-05, 3.081900000000137e-05, 3.0250000000002497e-05, 3.0264000000002067e-05, 3.0584000000000167e-05, 3.116700000000208e-05, 3.0264000000002067e-05, 3.0249999999999028e-05, 3.086100000000008e-05, 3.0221999999999888e-05, 3.0568999999997654e-05, 3.118000000000218e-05, 3.119500000000122e-05, 3.117999999999871e-05, 3.0249999999999028e-05, 3.116599999999914e-05, 3.0249999999999028e-05, 3.0250000000002497e-05, 3.117999999999871e-05, 3.120800000000132e-05, 3.118100000000165e-05, 3.115299999999904e-05, 3.087499999999965e-05, 3.0250000000002497e-05, 3.055599999999756e-05, 3.111100000000033e-05, 3.0235999999999458e-05, 3.116599999999914e-05, 3.119400000000175e-05, 3.0306000000000777e-05, 3.0306000000000777e-05, 3.0264000000002067e-05, 3.0262999999999124e-05, 3.0263999999998598e-05, 3.0250000000002497e-05, 3.0263999999998598e-05, 3.0249999999999028e-05, 3.0235999999999458e-05, 3.0250000000002497e-05, 3.0249999999999028e-05, 3.0235999999999458e-05, 3.05700000000006e-05, 3.118099999999818e-05, 3.023699999999893e-05, 3.0249999999999028e-05, 3.118100000000165e-05, 3.0262999999999124e-05, 3.0250000000002497e-05, 3.0235999999999458e-05, 3.0264000000002067e-05]</msg>
<status status="PASS" starttime="20201030 18:28:46.454" endtime="20201030 18:28:46.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.449" endtime="20201030 18:28:46.458"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:46.461" endtime="20201030 18:28:46.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.460" endtime="20201030 18:28:46.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.459" endtime="20201030 18:28:46.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.100" endtime="20201030 18:28:46.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.099" endtime="20201030 18:28:46.482"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.491" endtime="20201030 18:28:46.507"></status>
</kw>
<msg timestamp="20201030 18:28:46.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.490" endtime="20201030 18:28:46.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.508" endtime="20201030 18:28:46.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.511" endtime="20201030 18:28:46.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.487" endtime="20201030 18:28:46.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.485" endtime="20201030 18:28:46.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.520" endtime="20201030 18:28:46.805"></status>
</kw>
<msg timestamp="20201030 18:28:46.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022356833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022389833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.519" endtime="20201030 18:28:46.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022356833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022389833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.811" endtime="20201030 18:28:46.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.820" endtime="20201030 18:28:46.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.516" endtime="20201030 18:28:46.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.514" endtime="20201030 18:28:46.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:46.827" level="INFO">${RESULT} = [{'diff': 3.300000000000178e-05}, {'diff': 3.177799999999967e-05}, {'diff': 3.1444999999998e-05}, {'diff': 3.115299999999904e-05}, {'diff': 3.116699999999861e-05}, {'diff': 3.147300000000061e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:46.823" endtime="20201030 18:28:46.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:46.832" level="INFO">${ACCURACY} = {'diff': [3.300000000000178e-05, 3.177799999999967e-05, 3.1444999999998e-05, 3.115299999999904e-05, 3.116699999999861e-05, 3.147300000000061e-05, 3.21250000000009e-05, 3.116700000000208e-05, 3.1167000...</msg>
<status status="PASS" starttime="20201030 18:28:46.828" endtime="20201030 18:28:46.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.837" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 18:28:46.836" endtime="20201030 18:28:46.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.839" level="INFO">VALUE: [3.300000000000178e-05, 3.177799999999967e-05, 3.1444999999998e-05, 3.115299999999904e-05, 3.116699999999861e-05, 3.147300000000061e-05, 3.21250000000009e-05, 3.116700000000208e-05, 3.116700000000208e-05, 3.118000000000218e-05, 3.118100000000165e-05, 3.1513000000000374e-05, 3.209700000000176e-05, 3.208300000000219e-05, 3.209800000000124e-05, 3.118100000000165e-05, 3.116699999999861e-05, 3.151399999999985e-05, 3.208400000000167e-05, 3.208400000000167e-05, 3.119400000000175e-05, 3.117999999999871e-05, 3.142999999999896e-05, 3.118099999999818e-05, 3.115300000000251e-05, 3.118100000000165e-05, 3.115299999999904e-05, 3.148700000000018e-05, 3.209800000000124e-05, 3.148600000000071e-05, 3.211100000000133e-05, 3.116699999999861e-05, 3.115200000000304e-05, 3.148700000000018e-05, 3.209799999999777e-05, 3.148600000000071e-05, 3.204200000000296e-05, 3.11249999999999e-05, 3.150000000000028e-05, 3.116699999999861e-05, 3.116699999999861e-05, 3.150000000000028e-05, 3.2082999999998724e-05, 3.116699999999861e-05, 3.116699999999861e-05, 3.147199999999767e-05, 3.116699999999861e-05, 3.150000000000028e-05, 3.1444999999998e-05, 3.117999999999871e-05]</msg>
<status status="PASS" starttime="20201030 18:28:46.838" endtime="20201030 18:28:46.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.833" endtime="20201030 18:28:46.841"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:46.844" endtime="20201030 18:28:46.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.843" endtime="20201030 18:28:46.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.842" endtime="20201030 18:28:46.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.483" endtime="20201030 18:28:46.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.483" endtime="20201030 18:28:46.865"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.874" endtime="20201030 18:28:46.891"></status>
</kw>
<msg timestamp="20201030 18:28:46.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.873" endtime="20201030 18:28:46.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.893" endtime="20201030 18:28:46.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.895" endtime="20201030 18:28:46.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.870" endtime="20201030 18:28:46.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.868" endtime="20201030 18:28:46.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.906" endtime="20201030 18:28:47.193"></status>
</kw>
<msg timestamp="20201030 18:28:47.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022919597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022962, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:46.904" endtime="20201030 18:28:47.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022919597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022962, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:47.197" endtime="20201030 18:28:47.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.205" endtime="20201030 18:28:47.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.901" endtime="20201030 18:28:47.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.899" endtime="20201030 18:28:47.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:47.212" level="INFO">${RESULT} = [{'diff': 4.2402999999999885e-05}, {'diff': 4.2639000000000565e-05}, {'diff': 4.252800000000001e-05}, {'diff': 4.250000000000087e-05}, {'diff': 4.2666999999999705e-05}, {'diff': 4.252800000000001e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:47.209" endtime="20201030 18:28:47.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:47.217" level="INFO">${ACCURACY} = {'diff': [4.2402999999999885e-05, 4.2639000000000565e-05, 4.252800000000001e-05, 4.250000000000087e-05, 4.2666999999999705e-05, 4.252800000000001e-05, 4.2666999999999705e-05, 4.24860000000013e-05, 4.2...</msg>
<status status="PASS" starttime="20201030 18:28:47.213" endtime="20201030 18:28:47.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.221" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 18:28:47.220" endtime="20201030 18:28:47.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.224" level="INFO">VALUE: [4.2402999999999885e-05, 4.2639000000000565e-05, 4.252800000000001e-05, 4.250000000000087e-05, 4.2666999999999705e-05, 4.252800000000001e-05, 4.2666999999999705e-05, 4.24860000000013e-05, 4.2625000000000995e-05, 4.250000000000087e-05, 4.247200000000173e-05, 4.252800000000001e-05, 4.258400000000176e-05, 4.244399999999912e-05, 4.247199999999826e-05, 4.241599999999998e-05, 4.240200000000041e-05, 4.242999999999955e-05, 4.269399999999937e-05, 4.251400000000044e-05, 4.242999999999955e-05, 4.244399999999912e-05, 4.241599999999998e-05, 4.2554999999999676e-05, 4.2625000000000995e-05, 4.2596999999998386e-05, 4.26799999999998e-05, 4.2625000000000995e-05, 4.2653000000000135e-05, 4.2639000000000565e-05, 4.250000000000087e-05, 4.2680999999999275e-05, 4.273599999999808e-05, 4.250000000000087e-05, 4.2472999999997735e-05, 4.2639000000000565e-05, 4.2610999999997956e-05, 4.2402999999999885e-05, 4.2666999999999705e-05, 4.2596999999998386e-05, 4.256999999999872e-05, 4.2416999999999455e-05, 4.2624999999997526e-05, 4.2666999999999705e-05, 4.254199999999958e-05, 4.2611000000001426e-05, 4.2680999999999275e-05, 4.254199999999958e-05, 4.252800000000001e-05, 4.259800000000133e-05]</msg>
<status status="PASS" starttime="20201030 18:28:47.222" endtime="20201030 18:28:47.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.217" endtime="20201030 18:28:47.225"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:47.229" endtime="20201030 18:28:47.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.228" endtime="20201030 18:28:47.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.226" endtime="20201030 18:28:47.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.866" endtime="20201030 18:28:47.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.866" endtime="20201030 18:28:47.250"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.259" endtime="20201030 18:28:47.277"></status>
</kw>
<msg timestamp="20201030 18:28:47.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.257" endtime="20201030 18:28:47.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.278" endtime="20201030 18:28:47.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.281" endtime="20201030 18:28:47.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.255" endtime="20201030 18:28:47.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.252" endtime="20201030 18:28:47.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.290" endtime="20201030 18:28:47.579"></status>
</kw>
<msg timestamp="20201030 18:28:47.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023828875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023872778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.289" endtime="20201030 18:28:47.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023828875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023872778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.583" endtime="20201030 18:28:47.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.591" endtime="20201030 18:28:47.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.286" endtime="20201030 18:28:47.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.284" endtime="20201030 18:28:47.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:47.598" level="INFO">${RESULT} = [{'diff': 4.3903000000001385e-05}, {'diff': 4.370799999999994e-05}, {'diff': 4.348599999999883e-05}, {'diff': 4.352800000000101e-05}, {'diff': 4.356999999999972e-05}, {'diff': 4.366600000000123e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:47.595" endtime="20201030 18:28:47.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:47.603" level="INFO">${ACCURACY} = {'diff': [4.3903000000001385e-05, 4.370799999999994e-05, 4.348599999999883e-05, 4.352800000000101e-05, 4.356999999999972e-05, 4.366600000000123e-05, 4.3582999999999816e-05, 4.3625000000001996e-05, 4.3...</msg>
<status status="PASS" starttime="20201030 18:28:47.599" endtime="20201030 18:28:47.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.607" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 18:28:47.606" endtime="20201030 18:28:47.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.610" level="INFO">VALUE: [4.3903000000001385e-05, 4.370799999999994e-05, 4.348599999999883e-05, 4.352800000000101e-05, 4.356999999999972e-05, 4.366600000000123e-05, 4.3582999999999816e-05, 4.3625000000001996e-05, 4.356999999999972e-05, 4.3652999999997666e-05, 4.355600000000015e-05, 4.355600000000015e-05, 4.3639000000001565e-05, 4.351399999999797e-05, 4.3653000000001135e-05, 4.3681000000000275e-05, 4.3431000000000025e-05, 4.3709000000002884e-05, 4.3431000000000025e-05, 4.355600000000015e-05, 4.3639000000001565e-05, 4.36120000000019e-05, 4.3472999999998735e-05, 4.3694999999999845e-05, 4.365200000000166e-05, 4.3597000000002856e-05, 4.369400000000037e-05, 4.3569000000000246e-05, 4.369400000000037e-05, 4.369400000000037e-05, 4.3639000000001565e-05, 4.3596999999999386e-05, 4.36800000000008e-05, 4.352800000000101e-05, 4.347200000000273e-05, 4.3555000000000677e-05, 4.351399999999797e-05, 4.344400000000012e-05, 4.3555000000000677e-05, 4.351400000000144e-05, 4.3403000000000885e-05, 4.3610999999998956e-05, 4.3582999999999816e-05, 4.352799999999754e-05, 4.348599999999883e-05, 4.3596999999999386e-05, 4.3444999999999595e-05, 4.351399999999797e-05, 4.348599999999883e-05, 4.3596999999999386e-05]</msg>
<status status="PASS" starttime="20201030 18:28:47.608" endtime="20201030 18:28:47.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.603" endtime="20201030 18:28:47.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:47.616" endtime="20201030 18:28:47.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.614" endtime="20201030 18:28:47.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.613" endtime="20201030 18:28:47.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.251" endtime="20201030 18:28:47.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.250" endtime="20201030 18:28:47.637"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.646" endtime="20201030 18:28:47.662"></status>
</kw>
<msg timestamp="20201030 18:28:47.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.644" endtime="20201030 18:28:47.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.663" endtime="20201030 18:28:47.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.666" endtime="20201030 18:28:47.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.642" endtime="20201030 18:28:47.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.639" endtime="20201030 18:28:47.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.675" endtime="20201030 18:28:47.961"></status>
</kw>
<msg timestamp="20201030 18:28:47.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022418319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022462958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.674" endtime="20201030 18:28:47.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022418319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022462958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.966" endtime="20201030 18:28:47.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.974" endtime="20201030 18:28:47.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.671" endtime="20201030 18:28:47.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.669" endtime="20201030 18:28:47.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:47.981" level="INFO">${RESULT} = [{'diff': 4.4639000000002566e-05}, {'diff': 4.4597000000000386e-05}, {'diff': 4.4610999999999956e-05}, {'diff': 4.445800000000069e-05}, {'diff': 4.445799999999722e-05}, {'diff': 4.4610999999999956e-05...</msg>
<status status="PASS" starttime="20201030 18:28:47.978" endtime="20201030 18:28:47.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:47.986" level="INFO">${ACCURACY} = {'diff': [4.4639000000002566e-05, 4.4597000000000386e-05, 4.4610999999999956e-05, 4.445800000000069e-05, 4.445799999999722e-05, 4.4610999999999956e-05, 4.4402999999998416e-05, 4.447200000000026e-05, 4...</msg>
<status status="PASS" starttime="20201030 18:28:47.982" endtime="20201030 18:28:47.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.991" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 18:28:47.990" endtime="20201030 18:28:47.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.994" level="INFO">VALUE: [4.4639000000002566e-05, 4.4597000000000386e-05, 4.4610999999999956e-05, 4.445800000000069e-05, 4.445799999999722e-05, 4.4610999999999956e-05, 4.4402999999998416e-05, 4.447200000000026e-05, 4.456899999999778e-05, 4.447200000000026e-05, 4.458299999999735e-05, 4.455600000000115e-05, 4.4694999999997376e-05, 4.4667000000001705e-05, 4.469400000000137e-05, 4.4667000000001705e-05, 4.457000000000072e-05, 4.452800000000201e-05, 4.455599999999768e-05, 4.454200000000158e-05, 4.451399999999897e-05, 4.4667000000001705e-05, 4.448599999999983e-05, 4.4653000000002135e-05, 4.448599999999983e-05, 4.455600000000115e-05, 4.4402999999998416e-05, 4.4459000000000165e-05, 4.4610999999999956e-05, 4.447199999999679e-05, 4.4667000000001705e-05, 4.455499999999821e-05, 4.4569000000001247e-05, 4.447200000000026e-05, 4.4610999999999956e-05, 4.447200000000026e-05, 4.46800000000018e-05, 4.445800000000069e-05, 4.466600000000223e-05, 4.4652999999998666e-05, 4.452800000000201e-05, 4.4681000000001275e-05, 4.4653000000002135e-05, 4.470799999999747e-05, 4.4569000000001247e-05, 4.4680999999997806e-05, 4.452800000000201e-05, 4.44999999999994e-05, 4.448599999999983e-05, 4.4680999999997806e-05]</msg>
<status status="PASS" starttime="20201030 18:28:47.992" endtime="20201030 18:28:47.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.987" endtime="20201030 18:28:47.995"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:47.999" endtime="20201030 18:28:48.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.997" endtime="20201030 18:28:48.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.996" endtime="20201030 18:28:48.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.638" endtime="20201030 18:28:48.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.637" endtime="20201030 18:28:48.020"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.029" endtime="20201030 18:28:48.044"></status>
</kw>
<msg timestamp="20201030 18:28:48.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.027" endtime="20201030 18:28:48.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.046" endtime="20201030 18:28:48.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.049" endtime="20201030 18:28:48.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.024" endtime="20201030 18:28:48.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.022" endtime="20201030 18:28:48.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.058" endtime="20201030 18:28:48.348"></status>
</kw>
<msg timestamp="20201030 18:28:48.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022510708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022556278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.056" endtime="20201030 18:28:48.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022510708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022556278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.352" endtime="20201030 18:28:48.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.361" endtime="20201030 18:28:48.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.054" endtime="20201030 18:28:48.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.052" endtime="20201030 18:28:48.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:48.368" level="INFO">${RESULT} = [{'diff': 4.556999999999825e-05}, {'diff': 4.5445000000001595e-05}, {'diff': 4.5652999999999666e-05}, {'diff': 4.551399999999997e-05}, {'diff': 4.545799999999822e-05}, {'diff': 4.561200000000043e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:48.364" endtime="20201030 18:28:48.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:48.372" level="INFO">${ACCURACY} = {'diff': [4.556999999999825e-05, 4.5445000000001595e-05, 4.5652999999999666e-05, 4.551399999999997e-05, 4.545799999999822e-05, 4.561200000000043e-05, 4.5487000000000305e-05, 4.547200000000126e-05, 4.5...</msg>
<status status="PASS" starttime="20201030 18:28:48.369" endtime="20201030 18:28:48.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.377" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 18:28:48.376" endtime="20201030 18:28:48.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.379" level="INFO">VALUE: [4.556999999999825e-05, 4.5445000000001595e-05, 4.5652999999999666e-05, 4.551399999999997e-05, 4.545799999999822e-05, 4.561200000000043e-05, 4.5487000000000305e-05, 4.547200000000126e-05, 4.5445000000001595e-05, 4.545800000000169e-05, 4.541599999999951e-05, 4.55000000000004e-05, 4.544400000000212e-05, 4.542999999999908e-05, 4.554199999999911e-05, 4.551399999999997e-05, 4.55000000000004e-05, 4.56800000000028e-05, 4.56800000000028e-05, 4.55000000000004e-05, 4.556899999999878e-05, 4.551399999999997e-05, 4.55000000000004e-05, 4.543000000000255e-05, 4.5694999999998376e-05, 4.5666999999999236e-05, 4.548599999999736e-05, 4.5375000000000276e-05, 4.5625000000000526e-05, 4.55000000000004e-05, 4.5611000000000956e-05, 4.554199999999911e-05, 4.551399999999997e-05, 4.5611000000000956e-05, 4.5388999999999846e-05, 4.5430999999998556e-05, 4.5680999999998806e-05, 4.555500000000268e-05, 4.547200000000126e-05, 4.5695000000001845e-05, 4.551399999999997e-05, 4.5652999999999666e-05, 4.5472999999997266e-05, 4.556899999999878e-05, 4.5639000000000096e-05, 4.555499999999921e-05, 4.5611000000000956e-05, 4.551399999999997e-05, 4.55000000000004e-05, 4.551399999999997e-05]</msg>
<status status="PASS" starttime="20201030 18:28:48.378" endtime="20201030 18:28:48.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.373" endtime="20201030 18:28:48.384"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:48.388" endtime="20201030 18:28:48.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.387" endtime="20201030 18:28:48.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.386" endtime="20201030 18:28:48.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.021" endtime="20201030 18:28:48.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.020" endtime="20201030 18:28:48.409"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.418" endtime="20201030 18:28:48.436"></status>
</kw>
<msg timestamp="20201030 18:28:48.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.417" endtime="20201030 18:28:48.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.437" endtime="20201030 18:28:48.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.440" endtime="20201030 18:28:48.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.414" endtime="20201030 18:28:48.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.412" endtime="20201030 18:28:48.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.449" endtime="20201030 18:28:48.735"></status>
</kw>
<msg timestamp="20201030 18:28:48.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023294208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023340139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.448" endtime="20201030 18:28:48.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023294208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023340139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.739" endtime="20201030 18:28:48.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.748" endtime="20201030 18:28:48.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.445" endtime="20201030 18:28:48.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.443" endtime="20201030 18:28:48.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:48.754" level="INFO">${RESULT} = [{'diff': 4.5930999999999056e-05}, {'diff': 4.6430999999999556e-05}, {'diff': 4.655599999999968e-05}, {'diff': 4.658399999999882e-05}, {'diff': 4.659799999999839e-05}, {'diff': 4.666600000000076e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:48.751" endtime="20201030 18:28:48.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:48.759" level="INFO">${ACCURACY} = {'diff': [4.5930999999999056e-05, 4.6430999999999556e-05, 4.655599999999968e-05, 4.658399999999882e-05, 4.659799999999839e-05, 4.666600000000076e-05, 4.6625000000001526e-05, 4.644399999999965e-05, 4.6...</msg>
<status status="PASS" starttime="20201030 18:28:48.756" endtime="20201030 18:28:48.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.763" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 18:28:48.762" endtime="20201030 18:28:48.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.766" level="INFO">VALUE: [4.5930999999999056e-05, 4.6430999999999556e-05, 4.655599999999968e-05, 4.658399999999882e-05, 4.659799999999839e-05, 4.666600000000076e-05, 4.6625000000001526e-05, 4.644399999999965e-05, 4.655500000000021e-05, 4.644400000000312e-05, 4.662499999999806e-05, 4.6611000000001956e-05, 4.649999999999793e-05, 4.65139999999975e-05, 4.6625000000001526e-05, 4.648600000000183e-05, 4.659699999999892e-05, 4.645800000000269e-05, 4.654100000000064e-05, 4.647199999999879e-05, 4.656899999999978e-05, 4.655500000000021e-05, 4.6653000000000666e-05, 4.658299999999935e-05, 4.670799999999947e-05, 4.652800000000054e-05, 4.6694999999999376e-05, 4.654200000000011e-05, 4.6430999999999556e-05, 4.6597000000002387e-05, 4.651400000000097e-05, 4.658399999999882e-05, 4.658399999999882e-05, 4.663899999999763e-05, 4.658399999999882e-05, 4.655599999999968e-05, 4.654200000000011e-05, 4.6625000000001526e-05, 4.670799999999947e-05, 4.649999999999793e-05, 4.659800000000186e-05, 4.663899999999763e-05, 4.649999999999793e-05, 4.652799999999707e-05, 4.659699999999892e-05, 4.6583000000002817e-05, 4.659699999999892e-05, 4.66939999999999e-05, 4.651400000000097e-05, 4.6597000000002387e-05]</msg>
<status status="PASS" starttime="20201030 18:28:48.765" endtime="20201030 18:28:48.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.760" endtime="20201030 18:28:48.768"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:48.772" endtime="20201030 18:28:48.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.771" endtime="20201030 18:28:48.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.769" endtime="20201030 18:28:48.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.410" endtime="20201030 18:28:48.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.410" endtime="20201030 18:28:48.793"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.802" endtime="20201030 18:28:48.818"></status>
</kw>
<msg timestamp="20201030 18:28:48.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.800" endtime="20201030 18:28:48.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.820" endtime="20201030 18:28:48.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.822" endtime="20201030 18:28:48.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.798" endtime="20201030 18:28:48.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.795" endtime="20201030 18:28:48.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.832" endtime="20201030 18:28:49.118"></status>
</kw>
<msg timestamp="20201030 18:28:49.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022310292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022358139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.830" endtime="20201030 18:28:49.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022310292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022358139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.122" endtime="20201030 18:28:49.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.131" endtime="20201030 18:28:49.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.827" endtime="20201030 18:28:49.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.826" endtime="20201030 18:28:49.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:49.138" level="INFO">${RESULT} = [{'diff': 4.784700000000017e-05}, {'diff': 4.748599999999936e-05}, {'diff': 4.7445000000000126e-05}, {'diff': 4.742999999999761e-05}, {'diff': 4.7472999999999266e-05}, {'diff': 4.7473000000002735e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:49.134" endtime="20201030 18:28:49.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:49.143" level="INFO">${ACCURACY} = {'diff': [4.784700000000017e-05, 4.748599999999936e-05, 4.7445000000000126e-05, 4.742999999999761e-05, 4.7472999999999266e-05, 4.7473000000002735e-05, 4.752799999999807e-05, 4.749999999999893e-05, 4.7...</msg>
<status status="PASS" starttime="20201030 18:28:49.139" endtime="20201030 18:28:49.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.147" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 18:28:49.146" endtime="20201030 18:28:49.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.150" level="INFO">VALUE: [4.784700000000017e-05, 4.748599999999936e-05, 4.7445000000000126e-05, 4.742999999999761e-05, 4.7472999999999266e-05, 4.7473000000002735e-05, 4.752799999999807e-05, 4.749999999999893e-05, 4.73879999999989e-05, 4.747199999999979e-05, 4.756900000000078e-05, 4.749999999999893e-05, 4.7403000000001416e-05, 4.765199999999872e-05, 4.756900000000078e-05, 4.744400000000065e-05, 4.752799999999807e-05, 4.745800000000022e-05, 4.759699999999992e-05, 4.7417000000000986e-05, 4.7653000000001666e-05, 4.756899999999731e-05, 4.762499999999906e-05, 4.7667000000001236e-05, 4.75139999999985e-05, 4.762499999999906e-05, 4.748600000000283e-05, 4.757000000000025e-05, 4.762499999999906e-05, 4.7681000000000806e-05, 4.7681000000000806e-05, 4.751400000000197e-05, 4.7681000000000806e-05, 4.7653000000001666e-05, 4.7472999999999266e-05, 4.749999999999893e-05, 4.757000000000025e-05, 4.75000000000024e-05, 4.736199999999871e-05, 4.749999999999893e-05, 4.7445000000000126e-05, 4.751400000000197e-05, 4.76529999999982e-05, 4.758300000000035e-05, 4.7639000000002096e-05, 4.770800000000047e-05, 4.759699999999992e-05, 4.75139999999985e-05, 4.758300000000035e-05, 4.7653000000001666e-05]</msg>
<status status="PASS" starttime="20201030 18:28:49.149" endtime="20201030 18:28:49.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.144" endtime="20201030 18:28:49.151"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:49.155" endtime="20201030 18:28:49.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.154" endtime="20201030 18:28:49.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.152" endtime="20201030 18:28:49.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.794" endtime="20201030 18:28:49.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.793" endtime="20201030 18:28:49.176"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.185" endtime="20201030 18:28:49.202"></status>
</kw>
<msg timestamp="20201030 18:28:49.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.183" endtime="20201030 18:28:49.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.203" endtime="20201030 18:28:49.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.206" endtime="20201030 18:28:49.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.181" endtime="20201030 18:28:49.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.179" endtime="20201030 18:28:49.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.215" endtime="20201030 18:28:49.503"></status>
</kw>
<msg timestamp="20201030 18:28:49.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022751264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022799806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.214" endtime="20201030 18:28:49.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022751264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022799806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.507" endtime="20201030 18:28:49.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.516" endtime="20201030 18:28:49.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.211" endtime="20201030 18:28:49.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.209" endtime="20201030 18:28:49.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:49.523" level="INFO">${RESULT} = [{'diff': 4.854199999999864e-05}, {'diff': 4.863899999999963e-05}, {'diff': 4.845799999999775e-05}, {'diff': 4.847199999999732e-05}, {'diff': 4.847200000000079e-05}, {'diff': 4.858299999999788e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:49.519" endtime="20201030 18:28:49.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:49.527" level="INFO">${ACCURACY} = {'diff': [4.854199999999864e-05, 4.863899999999963e-05, 4.845799999999775e-05, 4.847199999999732e-05, 4.847200000000079e-05, 4.858299999999788e-05, 4.841599999999904e-05, 4.848600000000036e-05, 4.8458...</msg>
<status status="PASS" starttime="20201030 18:28:49.524" endtime="20201030 18:28:49.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.531" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 18:28:49.530" endtime="20201030 18:28:49.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.534" level="INFO">VALUE: [4.854199999999864e-05, 4.863899999999963e-05, 4.845799999999775e-05, 4.847199999999732e-05, 4.847200000000079e-05, 4.858299999999788e-05, 4.841599999999904e-05, 4.848600000000036e-05, 4.845800000000122e-05, 4.863899999999963e-05, 4.849999999999993e-05, 4.868099999999834e-05, 4.843099999999809e-05, 4.858300000000135e-05, 4.855499999999874e-05, 4.866699999999877e-05, 4.857000000000125e-05, 4.8459000000000696e-05, 4.868099999999834e-05, 4.8459000000000696e-05, 4.85139999999995e-05, 4.856999999999778e-05, 4.863899999999963e-05, 4.852799999999907e-05, 4.855599999999821e-05, 4.854200000000211e-05, 4.85139999999995e-05, 4.8473000000000266e-05, 4.863899999999963e-05, 4.858300000000135e-05, 4.847199999999732e-05, 4.856900000000178e-05, 4.847200000000079e-05, 4.856899999999831e-05, 4.861100000000049e-05, 4.863899999999963e-05, 4.849999999999993e-05, 4.861100000000049e-05, 4.841599999999904e-05, 4.85139999999995e-05, 4.848599999999689e-05, 4.852799999999907e-05, 4.848600000000036e-05, 4.842999999999861e-05, 4.861100000000049e-05, 4.85269999999996e-05, 4.8431000000001556e-05, 4.861100000000049e-05, 4.858299999999788e-05, 4.854200000000211e-05]</msg>
<status status="PASS" starttime="20201030 18:28:49.533" endtime="20201030 18:28:49.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.528" endtime="20201030 18:28:49.536"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:49.539" endtime="20201030 18:28:49.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.538" endtime="20201030 18:28:49.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.537" endtime="20201030 18:28:49.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.177" endtime="20201030 18:28:49.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.176" endtime="20201030 18:28:49.560"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.569" endtime="20201030 18:28:49.587"></status>
</kw>
<msg timestamp="20201030 18:28:49.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.568" endtime="20201030 18:28:49.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.588" endtime="20201030 18:28:49.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.591" endtime="20201030 18:28:49.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.565" endtime="20201030 18:28:49.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.563" endtime="20201030 18:28:49.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.600" endtime="20201030 18:28:49.887"></status>
</kw>
<msg timestamp="20201030 18:28:49.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023494819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023544458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.599" endtime="20201030 18:28:49.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023494819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023544458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.891" endtime="20201030 18:28:49.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.900" endtime="20201030 18:28:49.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.596" endtime="20201030 18:28:49.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.594" endtime="20201030 18:28:49.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:49.907" level="INFO">${RESULT} = [{'diff': 4.963900000000063e-05}, {'diff': 4.966600000000029e-05}, {'diff': 4.945799999999875e-05}, {'diff': 4.963900000000063e-05}, {'diff': 4.950000000000093e-05}, {'diff': 4.956899999999931e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:49.903" endtime="20201030 18:28:49.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:49.911" level="INFO">${ACCURACY} = {'diff': [4.963900000000063e-05, 4.966600000000029e-05, 4.945799999999875e-05, 4.963900000000063e-05, 4.950000000000093e-05, 4.956899999999931e-05, 4.948599999999789e-05, 4.944399999999918e-05, 4.9473...</msg>
<status status="PASS" starttime="20201030 18:28:49.908" endtime="20201030 18:28:49.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.916" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 18:28:49.915" endtime="20201030 18:28:49.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.918" level="INFO">VALUE: [4.963900000000063e-05, 4.966600000000029e-05, 4.945799999999875e-05, 4.963900000000063e-05, 4.950000000000093e-05, 4.956899999999931e-05, 4.948599999999789e-05, 4.944399999999918e-05, 4.9473000000001266e-05, 4.958299999999888e-05, 4.941699999999952e-05, 4.944499999999866e-05, 4.976400000000075e-05, 4.9459000000001696e-05, 4.963900000000063e-05, 4.9431000000002556e-05, 4.9473000000001266e-05, 4.957000000000225e-05, 4.95140000000005e-05, 4.955599999999921e-05, 4.962500000000106e-05, 4.968099999999934e-05, 4.950000000000093e-05, 4.961100000000149e-05, 4.951399999999703e-05, 4.945799999999875e-05, 4.954100000000017e-05, 4.956899999999931e-05, 4.954100000000017e-05, 4.947199999999832e-05, 4.969399999999943e-05, 4.96530000000002e-05, 4.952800000000007e-05, 4.95140000000005e-05, 4.96530000000002e-05, 4.949999999999746e-05, 4.95140000000005e-05, 4.950000000000093e-05, 4.954200000000311e-05, 4.9445000000002126e-05, 4.9417000000002986e-05, 4.9431000000002556e-05, 4.950000000000093e-05, 4.934700000000167e-05, 4.954199999999964e-05, 4.963900000000063e-05, 4.944499999999866e-05, 4.968099999999934e-05, 4.963900000000063e-05, 4.969499999999891e-05]</msg>
<status status="PASS" starttime="20201030 18:28:49.917" endtime="20201030 18:28:49.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.912" endtime="20201030 18:28:49.921"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:49.925" endtime="20201030 18:28:49.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.923" endtime="20201030 18:28:49.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.922" endtime="20201030 18:28:49.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.561" endtime="20201030 18:28:49.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.560" endtime="20201030 18:28:49.946"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.956" endtime="20201030 18:28:49.973"></status>
</kw>
<msg timestamp="20201030 18:28:49.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.954" endtime="20201030 18:28:49.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.975" endtime="20201030 18:28:49.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.977" endtime="20201030 18:28:49.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.951" endtime="20201030 18:28:49.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.948" endtime="20201030 18:28:49.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.987" endtime="20201030 18:28:50.273"></status>
</kw>
<msg timestamp="20201030 18:28:50.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024135389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024186222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.985" endtime="20201030 18:28:50.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024135389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024186222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.277" endtime="20201030 18:28:50.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.285" endtime="20201030 18:28:50.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.982" endtime="20201030 18:28:50.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.981" endtime="20201030 18:28:50.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:50.292" level="INFO">${RESULT} = [{'diff': 5.083300000000013e-05}, {'diff': 5.050000000000193e-05}, {'diff': 5.074999999999871e-05}, {'diff': 5.043100000000009e-05}, {'diff': 5.068099999999687e-05}, {'diff': 5.061199999999849e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:50.289" endtime="20201030 18:28:50.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:50.297" level="INFO">${ACCURACY} = {'diff': [5.083300000000013e-05, 5.050000000000193e-05, 5.074999999999871e-05, 5.043100000000009e-05, 5.068099999999687e-05, 5.061199999999849e-05, 5.069400000000043e-05, 5.056999999999978e-05, 5.0472...</msg>
<status status="PASS" starttime="20201030 18:28:50.293" endtime="20201030 18:28:50.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.302" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 18:28:50.301" endtime="20201030 18:28:50.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.305" level="INFO">VALUE: [5.083300000000013e-05, 5.050000000000193e-05, 5.074999999999871e-05, 5.043100000000009e-05, 5.068099999999687e-05, 5.061199999999849e-05, 5.069400000000043e-05, 5.056999999999978e-05, 5.0472999999998797e-05, 5.052699999999813e-05, 5.0652000000001723e-05, 5.066600000000129e-05, 5.0679999999997394e-05, 5.047199999999932e-05, 5.072199999999957e-05, 5.05140000000015e-05, 5.062500000000206e-05, 5.054200000000064e-05, 5.058299999999988e-05, 5.044400000000018e-05, 5.0708e-05, 5.051399999999803e-05, 5.05140000000015e-05, 5.062500000000206e-05, 5.063900000000163e-05, 5.055599999999674e-05, 5.068100000000034e-05, 5.056900000000031e-05, 5.045800000000322e-05, 5.049999999999846e-05, 5.066700000000077e-05, 5.073599999999914e-05, 5.041700000000052e-05, 5.05279999999976e-05, 5.040300000000095e-05, 5.056999999999978e-05, 5.054200000000064e-05, 5.065299999999773e-05, 5.055600000000021e-05, 5.069499999999991e-05, 5.043100000000009e-05, 5.055499999999727e-05, 5.056900000000031e-05, 5.055500000000074e-05, 5.0652000000001723e-05, 5.059699999999945e-05, 5.047199999999932e-05, 5.061100000000249e-05, 5.056900000000031e-05, 5.043000000000061e-05]</msg>
<status status="PASS" starttime="20201030 18:28:50.303" endtime="20201030 18:28:50.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.298" endtime="20201030 18:28:50.306"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:50.310" endtime="20201030 18:28:50.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.308" endtime="20201030 18:28:50.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.307" endtime="20201030 18:28:50.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.947" endtime="20201030 18:28:50.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.946" endtime="20201030 18:28:50.331"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.340" endtime="20201030 18:28:50.356"></status>
</kw>
<msg timestamp="20201030 18:28:50.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.338" endtime="20201030 18:28:50.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.358" endtime="20201030 18:28:50.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.360" endtime="20201030 18:28:50.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.336" endtime="20201030 18:28:50.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.333" endtime="20201030 18:28:50.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.370" endtime="20201030 18:28:50.657"></status>
</kw>
<msg timestamp="20201030 18:28:50.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022699361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022750306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.368" endtime="20201030 18:28:50.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022699361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022750306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.661" endtime="20201030 18:28:50.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.670" endtime="20201030 18:28:50.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.366" endtime="20201030 18:28:50.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.364" endtime="20201030 18:28:50.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:50.677" level="INFO">${RESULT} = [{'diff': 5.094500000000016e-05}, {'diff': 5.147200000000032e-05}, {'diff': 5.1415999999998574e-05}, {'diff': 5.156900000000131e-05}, {'diff': 5.1471999999996854e-05}, {'diff': 5.1401999999999004e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:50.673" endtime="20201030 18:28:50.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:50.681" level="INFO">${ACCURACY} = {'diff': [5.094500000000016e-05, 5.147200000000032e-05, 5.1415999999998574e-05, 5.156900000000131e-05, 5.1471999999996854e-05, 5.1401999999999004e-05, 5.162499999999959e-05, 5.156900000000131e-05, 5.1...</msg>
<status status="PASS" starttime="20201030 18:28:50.678" endtime="20201030 18:28:50.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.686" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 18:28:50.684" endtime="20201030 18:28:50.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.688" level="INFO">VALUE: [5.094500000000016e-05, 5.147200000000032e-05, 5.1415999999998574e-05, 5.156900000000131e-05, 5.1471999999996854e-05, 5.1401999999999004e-05, 5.162499999999959e-05, 5.156900000000131e-05, 5.1665999999998824e-05, 5.161100000000002e-05, 5.1693999999997964e-05, 5.1708000000001e-05, 5.154199999999817e-05, 5.148599999999989e-05, 5.144400000000118e-05, 5.148599999999989e-05, 5.155600000000121e-05, 5.155599999999774e-05, 5.141700000000152e-05, 5.143100000000109e-05, 5.15279999999986e-05, 5.156999999999731e-05, 5.1651999999999254e-05, 5.149999999999946e-05, 5.154200000000164e-05, 5.161100000000002e-05, 5.144500000000066e-05, 5.145900000000023e-05, 5.143100000000109e-05, 5.156899999999784e-05, 5.154100000000217e-05, 5.15409999999987e-05, 5.154199999999817e-05, 5.1416000000002043e-05, 5.151299999999956e-05, 5.1708000000001e-05, 5.158299999999741e-05, 5.15270000000026e-05, 5.148599999999989e-05, 5.159700000000045e-05, 5.159700000000045e-05, 5.154200000000164e-05, 5.151399999999903e-05, 5.152800000000207e-05, 5.155600000000121e-05, 5.155600000000121e-05, 5.161199999999949e-05, 5.1708000000001e-05, 5.155600000000121e-05, 5.158400000000035e-05]</msg>
<status status="PASS" starttime="20201030 18:28:50.687" endtime="20201030 18:28:50.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.682" endtime="20201030 18:28:50.689"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:50.693" endtime="20201030 18:28:50.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.692" endtime="20201030 18:28:50.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.691" endtime="20201030 18:28:50.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.332" endtime="20201030 18:28:50.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.331" endtime="20201030 18:28:50.714"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.723" endtime="20201030 18:28:50.741"></status>
</kw>
<msg timestamp="20201030 18:28:50.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.721" endtime="20201030 18:28:50.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.742" endtime="20201030 18:28:50.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.745" endtime="20201030 18:28:50.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.719" endtime="20201030 18:28:50.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.717" endtime="20201030 18:28:50.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.754" endtime="20201030 18:28:51.040"></status>
</kw>
<msg timestamp="20201030 18:28:51.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023763722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023815903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.753" endtime="20201030 18:28:51.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023763722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023815903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.045" endtime="20201030 18:28:51.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.053" endtime="20201030 18:28:51.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.750" endtime="20201030 18:28:51.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.748" endtime="20201030 18:28:51.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:51.060" level="INFO">${RESULT} = [{'diff': 5.218099999999837e-05}, {'diff': 5.257000000000178e-05}, {'diff': 5.240300000000295e-05}, {'diff': 5.270900000000148e-05}, {'diff': 5.2707999999998534e-05}, {'diff': 5.26669999999993e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:51.057" endtime="20201030 18:28:51.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:51.064" level="INFO">${ACCURACY} = {'diff': [5.218099999999837e-05, 5.257000000000178e-05, 5.240300000000295e-05, 5.270900000000148e-05, 5.2707999999998534e-05, 5.26669999999993e-05, 5.2429999999999144e-05, 5.247299999999733e-05, 5.251...</msg>
<status status="PASS" starttime="20201030 18:28:51.061" endtime="20201030 18:28:51.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.069" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 18:28:51.068" endtime="20201030 18:28:51.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.071" level="INFO">VALUE: [5.218099999999837e-05, 5.257000000000178e-05, 5.240300000000295e-05, 5.270900000000148e-05, 5.2707999999998534e-05, 5.26669999999993e-05, 5.2429999999999144e-05, 5.247299999999733e-05, 5.251300000000056e-05, 5.248600000000089e-05, 5.2652000000000254e-05, 5.262500000000059e-05, 5.252700000000013e-05, 5.261099999999755e-05, 5.2652000000000254e-05, 5.247200000000132e-05, 5.2415999999999574e-05, 5.263900000000016e-05, 5.261099999999755e-05, 5.248600000000089e-05, 5.262500000000059e-05, 5.2443999999998714e-05, 5.25279999999996e-05, 5.259699999999798e-05, 5.2457999999998284e-05, 5.25279999999996e-05, 5.245800000000175e-05, 5.269499999999844e-05, 5.256999999999831e-05, 5.2485999999997424e-05, 5.243100000000209e-05, 5.257000000000178e-05, 5.243099999999862e-05, 5.25279999999996e-05, 5.250000000000046e-05, 5.268099999999887e-05, 5.2638000000000684e-05, 5.25279999999996e-05, 5.261099999999755e-05, 5.2693999999998964e-05, 5.272200000000157e-05, 5.252700000000013e-05, 5.262499999999712e-05, 5.256899999999884e-05, 5.259700000000145e-05, 5.263900000000016e-05, 5.273600000000114e-05, 5.255500000000274e-05, 5.25279999999996e-05, 5.247200000000132e-05]</msg>
<status status="PASS" starttime="20201030 18:28:51.070" endtime="20201030 18:28:51.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.065" endtime="20201030 18:28:51.074"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:51.078" endtime="20201030 18:28:51.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.076" endtime="20201030 18:28:51.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.075" endtime="20201030 18:28:51.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.715" endtime="20201030 18:28:51.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.714" endtime="20201030 18:28:51.098"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.107" endtime="20201030 18:28:51.123"></status>
</kw>
<msg timestamp="20201030 18:28:51.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.106" endtime="20201030 18:28:51.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.125" endtime="20201030 18:28:51.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.128" endtime="20201030 18:28:51.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.103" endtime="20201030 18:28:51.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.101" endtime="20201030 18:28:51.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.137" endtime="20201030 18:28:51.425"></status>
</kw>
<msg timestamp="20201030 18:28:51.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022420597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022473583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.135" endtime="20201030 18:28:51.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022420597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022473583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.429" endtime="20201030 18:28:51.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.438" endtime="20201030 18:28:51.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.133" endtime="20201030 18:28:51.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.131" endtime="20201030 18:28:51.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:51.445" level="INFO">${RESULT} = [{'diff': 5.2985999999997924e-05}, {'diff': 5.350000000000146e-05}, {'diff': 5.3707999999999534e-05}, {'diff': 5.3471999999998854e-05}, {'diff': 5.358299999999941e-05}, {'diff': 5.355599999999974e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:51.442" endtime="20201030 18:28:51.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:51.450" level="INFO">${ACCURACY} = {'diff': [5.2985999999997924e-05, 5.350000000000146e-05, 5.3707999999999534e-05, 5.3471999999998854e-05, 5.358299999999941e-05, 5.355599999999974e-05, 5.356899999999984e-05, 5.36670000000003e-05, 5.36...</msg>
<status status="PASS" starttime="20201030 18:28:51.446" endtime="20201030 18:28:51.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.455" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 18:28:51.454" endtime="20201030 18:28:51.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.458" level="INFO">VALUE: [5.2985999999997924e-05, 5.350000000000146e-05, 5.3707999999999534e-05, 5.3471999999998854e-05, 5.358299999999941e-05, 5.355599999999974e-05, 5.356899999999984e-05, 5.36670000000003e-05, 5.368099999999987e-05, 5.354200000000017e-05, 5.361100000000202e-05, 5.347200000000232e-05, 5.354200000000017e-05, 5.3471999999998854e-05, 5.343099999999962e-05, 5.3471999999998854e-05, 5.368099999999987e-05, 5.35280000000006e-05, 5.3680000000000394e-05, 5.35280000000006e-05, 5.355500000000027e-05, 5.3485999999998424e-05, 5.359699999999898e-05, 5.35410000000007e-05, 5.35410000000007e-05, 5.350000000000146e-05, 5.352700000000113e-05, 5.358300000000288e-05, 5.355500000000027e-05, 5.363900000000116e-05, 5.340300000000048e-05, 5.341700000000005e-05, 5.355599999999974e-05, 5.347299999999833e-05, 5.351400000000103e-05, 5.358299999999941e-05, 5.369499999999944e-05, 5.351400000000103e-05, 5.358300000000288e-05, 5.3527999999997133e-05, 5.3471999999998854e-05, 5.365300000000073e-05, 5.3485999999998424e-05, 5.354200000000017e-05, 5.348700000000137e-05, 5.362500000000159e-05, 5.348600000000189e-05, 5.345900000000223e-05, 5.3457999999999284e-05, 5.355599999999974e-05]</msg>
<status status="PASS" starttime="20201030 18:28:51.456" endtime="20201030 18:28:51.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.451" endtime="20201030 18:28:51.459"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:51.463" endtime="20201030 18:28:51.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.461" endtime="20201030 18:28:51.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.460" endtime="20201030 18:28:51.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.099" endtime="20201030 18:28:51.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.099" endtime="20201030 18:28:51.484"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.493" endtime="20201030 18:28:51.510"></status>
</kw>
<msg timestamp="20201030 18:28:51.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.491" endtime="20201030 18:28:51.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.511" endtime="20201030 18:28:51.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.514" endtime="20201030 18:28:51.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.488" endtime="20201030 18:28:51.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.486" endtime="20201030 18:28:51.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.523" endtime="20201030 18:28:51.812"></status>
</kw>
<msg timestamp="20201030 18:28:51.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022446222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022500389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.522" endtime="20201030 18:28:51.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022446222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022500389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.817" endtime="20201030 18:28:51.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.825" endtime="20201030 18:28:51.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.519" endtime="20201030 18:28:51.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.517" endtime="20201030 18:28:51.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:51.832" level="INFO">${RESULT} = [{'diff': 5.41670000000008e-05}, {'diff': 5.4694000000000964e-05}, {'diff': 5.44730000000028e-05}, {'diff': 5.466699999999783e-05}, {'diff': 5.450000000000246e-05}, {'diff': 5.458399999999988e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:51.829" endtime="20201030 18:28:51.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:51.836" level="INFO">${ACCURACY} = {'diff': [5.41670000000008e-05, 5.4694000000000964e-05, 5.44730000000028e-05, 5.466699999999783e-05, 5.450000000000246e-05, 5.458399999999988e-05, 5.469500000000044e-05, 5.45280000000016e-05, 5.463799...</msg>
<status status="PASS" starttime="20201030 18:28:51.833" endtime="20201030 18:28:51.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.841" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 18:28:51.840" endtime="20201030 18:28:51.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.843" level="INFO">VALUE: [5.41670000000008e-05, 5.4694000000000964e-05, 5.44730000000028e-05, 5.466699999999783e-05, 5.450000000000246e-05, 5.458399999999988e-05, 5.469500000000044e-05, 5.45280000000016e-05, 5.4637999999999215e-05, 5.4416000000001574e-05, 5.4749999999999244e-05, 5.455500000000127e-05, 5.4416000000001574e-05, 5.4430000000001144e-05, 5.450000000000246e-05, 5.459699999999998e-05, 5.4722000000000104e-05, 5.4680000000001394e-05, 5.4694000000000964e-05, 5.461099999999955e-05, 5.4499999999998994e-05, 5.4485999999999424e-05, 5.441700000000105e-05, 5.441699999999758e-05, 5.458300000000041e-05, 5.4485999999999424e-05, 5.441700000000105e-05, 5.469500000000044e-05, 5.4513999999998564e-05, 5.445899999999976e-05, 5.465300000000173e-05, 5.4499999999998994e-05, 5.46670000000013e-05, 5.4541999999997703e-05, 5.4458000000000284e-05, 5.450000000000246e-05, 5.443100000000062e-05, 5.448700000000237e-05, 5.450000000000246e-05, 5.4666000000001824e-05, 5.4499999999998994e-05, 5.459699999999998e-05, 5.4499999999998994e-05, 5.4693999999997495e-05, 5.4471999999999854e-05, 5.4680000000001394e-05, 5.459800000000292e-05, 5.448600000000289e-05, 5.4471999999999854e-05, 5.463899999999869e-05]</msg>
<status status="PASS" starttime="20201030 18:28:51.842" endtime="20201030 18:28:51.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.837" endtime="20201030 18:28:51.845"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:51.849" endtime="20201030 18:28:51.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.847" endtime="20201030 18:28:51.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.846" endtime="20201030 18:28:51.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.485" endtime="20201030 18:28:51.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.484" endtime="20201030 18:28:51.869"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.879" endtime="20201030 18:28:51.896"></status>
</kw>
<msg timestamp="20201030 18:28:51.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.877" endtime="20201030 18:28:51.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.898" endtime="20201030 18:28:51.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.900" endtime="20201030 18:28:51.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.874" endtime="20201030 18:28:51.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.872" endtime="20201030 18:28:51.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.910" endtime="20201030 18:28:52.196"></status>
</kw>
<msg timestamp="20201030 18:28:52.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023382417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0234375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:51.908" endtime="20201030 18:28:52.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023382417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0234375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:52.200" endtime="20201030 18:28:52.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.209" endtime="20201030 18:28:52.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.906" endtime="20201030 18:28:52.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.904" endtime="20201030 18:28:52.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:52.216" level="INFO">${RESULT} = [{'diff': 5.508300000000091e-05}, {'diff': 5.570900000000101e-05}, {'diff': 5.555600000000174e-05}, {'diff': 5.545900000000076e-05}, {'diff': 5.543099999999815e-05}, {'diff': 5.561100000000055e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:52.212" endtime="20201030 18:28:52.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:52.220" level="INFO">${ACCURACY} = {'diff': [5.508300000000091e-05, 5.570900000000101e-05, 5.555600000000174e-05, 5.545900000000076e-05, 5.543099999999815e-05, 5.561100000000055e-05, 5.543099999999815e-05, 5.5486000000000424e-05, 5.555...</msg>
<status status="PASS" starttime="20201030 18:28:52.217" endtime="20201030 18:28:52.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.225" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 18:28:52.223" endtime="20201030 18:28:52.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.227" level="INFO">VALUE: [5.508300000000091e-05, 5.570900000000101e-05, 5.555600000000174e-05, 5.545900000000076e-05, 5.543099999999815e-05, 5.561100000000055e-05, 5.543099999999815e-05, 5.5486000000000424e-05, 5.555600000000174e-05, 5.5472000000000854e-05, 5.5638000000000215e-05, 5.568100000000187e-05, 5.5651999999999785e-05, 5.5415999999999105e-05, 5.562500000000012e-05, 5.5750000000000244e-05, 5.5750000000000244e-05, 5.558299999999794e-05, 5.556900000000184e-05, 5.5527999999999134e-05, 5.5513999999999564e-05, 5.555500000000227e-05, 5.5443999999998245e-05, 5.5443999999998245e-05, 5.556900000000184e-05, 5.561100000000055e-05, 5.5541999999998704e-05, 5.558300000000141e-05, 5.5499999999999994e-05, 5.556999999999784e-05, 5.555600000000174e-05, 5.5472000000000854e-05, 5.5472000000000854e-05, 5.544500000000119e-05, 5.5750000000000244e-05, 5.543099999999815e-05, 5.561099999999708e-05, 5.5651999999999785e-05, 5.5735999999997204e-05, 5.5499999999999994e-05, 5.558400000000088e-05, 5.538899999999944e-05, 5.5429999999998675e-05, 5.5708000000001534e-05, 5.5472000000000854e-05, 5.561100000000055e-05, 5.559699999999751e-05, 5.5472000000000854e-05, 5.5457999999997815e-05, 5.557000000000131e-05]</msg>
<status status="PASS" starttime="20201030 18:28:52.226" endtime="20201030 18:28:52.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.221" endtime="20201030 18:28:52.229"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:52.233" endtime="20201030 18:28:52.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.232" endtime="20201030 18:28:52.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.230" endtime="20201030 18:28:52.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.870" endtime="20201030 18:28:52.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.870" endtime="20201030 18:28:52.254"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.263" endtime="20201030 18:28:52.279"></status>
</kw>
<msg timestamp="20201030 18:28:52.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.261" endtime="20201030 18:28:52.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.281" endtime="20201030 18:28:52.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.283" endtime="20201030 18:28:52.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.259" endtime="20201030 18:28:52.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.256" endtime="20201030 18:28:52.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.293" endtime="20201030 18:28:52.579"></status>
</kw>
<msg timestamp="20201030 18:28:52.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022541611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.291" endtime="20201030 18:28:52.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022541611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.583" endtime="20201030 18:28:52.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.591" endtime="20201030 18:28:52.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.288" endtime="20201030 18:28:52.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.287" endtime="20201030 18:28:52.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:52.598" level="INFO">${RESULT} = [{'diff': 5.6500000000000994e-05}, {'diff': 5.6500000000000994e-05}, {'diff': 5.658399999999841e-05}, {'diff': 5.662499999999765e-05}, {'diff': 5.6528000000000134e-05}, {'diff': 5.66809999999994e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:52.595" endtime="20201030 18:28:52.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:52.603" level="INFO">${ACCURACY} = {'diff': [5.6500000000000994e-05, 5.6500000000000994e-05, 5.658399999999841e-05, 5.662499999999765e-05, 5.6528000000000134e-05, 5.66809999999994e-05, 5.644499999999872e-05, 5.6528000000000134e-05, 5.6...</msg>
<status status="PASS" starttime="20201030 18:28:52.599" endtime="20201030 18:28:52.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.608" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 18:28:52.607" endtime="20201030 18:28:52.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.611" level="INFO">VALUE: [5.6500000000000994e-05, 5.6500000000000994e-05, 5.658399999999841e-05, 5.662499999999765e-05, 5.6528000000000134e-05, 5.66809999999994e-05, 5.644499999999872e-05, 5.6528000000000134e-05, 5.647299999999786e-05, 5.661099999999808e-05, 5.661100000000155e-05, 5.648699999999743e-05, 5.648699999999743e-05, 5.6693999999999495e-05, 5.6679999999999925e-05, 5.661099999999808e-05, 5.6665999999996886e-05, 5.6514000000000564e-05, 5.661099999999808e-05, 5.6416000000000105e-05, 5.656900000000284e-05, 5.662500000000112e-05, 5.6694000000002964e-05, 5.6458000000002284e-05, 5.643099999999915e-05, 5.6472000000001854e-05, 5.6457999999998815e-05, 5.654100000000023e-05, 5.66809999999994e-05, 5.66809999999994e-05, 5.641699999999958e-05, 5.6555999999999274e-05, 5.6555999999999274e-05, 5.643099999999915e-05, 5.638900000000044e-05, 5.6514000000000564e-05, 5.661100000000155e-05, 5.6514000000000564e-05, 5.658299999999894e-05, 5.6541999999999704e-05, 5.6541999999999704e-05, 5.6666000000000355e-05, 5.658299999999894e-05, 5.6416000000000105e-05, 5.6486000000001424e-05, 5.6416000000000105e-05, 5.662500000000112e-05, 5.6666000000000355e-05, 5.6471999999998385e-05, 5.663900000000069e-05]</msg>
<status status="PASS" starttime="20201030 18:28:52.609" endtime="20201030 18:28:52.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.604" endtime="20201030 18:28:52.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:52.616" endtime="20201030 18:28:52.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.614" endtime="20201030 18:28:52.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.613" endtime="20201030 18:28:52.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.255" endtime="20201030 18:28:52.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.254" endtime="20201030 18:28:52.637"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.654" endtime="20201030 18:28:52.672"></status>
</kw>
<msg timestamp="20201030 18:28:52.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.651" endtime="20201030 18:28:52.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.674" endtime="20201030 18:28:52.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.677" endtime="20201030 18:28:52.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.645" endtime="20201030 18:28:52.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.639" endtime="20201030 18:28:52.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.686" endtime="20201030 18:28:52.973"></status>
</kw>
<msg timestamp="20201030 18:28:52.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032757194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032814181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.684" endtime="20201030 18:28:52.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032757194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032814181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.978" endtime="20201030 18:28:52.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.986" endtime="20201030 18:28:52.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.682" endtime="20201030 18:28:52.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.680" endtime="20201030 18:28:52.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:52.994" level="INFO">${RESULT} = [{'diff': 5.698699999999446e-05}, {'diff': 5.765299999999779e-05}, {'diff': 5.761099999999908e-05}, {'diff': 5.7583999999999413e-05}, {'diff': 5.743100000000362e-05}, {'diff': 5.7542000000000704e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:52.990" endtime="20201030 18:28:52.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:52.999" level="INFO">${ACCURACY} = {'diff': [5.698699999999446e-05, 5.765299999999779e-05, 5.761099999999908e-05, 5.7583999999999413e-05, 5.743100000000362e-05, 5.7542000000000704e-05, 5.7499999999995055e-05, 5.7514000000001564e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:28:52.995" endtime="20201030 18:28:52.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.004" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 18:28:53.003" endtime="20201030 18:28:53.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.006" level="INFO">VALUE: [5.698699999999446e-05, 5.765299999999779e-05, 5.761099999999908e-05, 5.7583999999999413e-05, 5.743100000000362e-05, 5.7542000000000704e-05, 5.7499999999995055e-05, 5.7514000000001564e-05, 5.747300000000233e-05, 5.744499999999625e-05, 5.751300000000209e-05, 5.7471999999995915e-05, 5.7444000000003714e-05, 5.762499999999865e-05, 5.7457999999996345e-05, 5.7500000000001994e-05, 5.7500000000001994e-05, 5.7429999999997206e-05, 5.7528000000001134e-05, 5.7665999999997886e-05, 5.7471999999995915e-05, 5.759699999999951e-05, 5.766699999999736e-05, 5.761100000000602e-05, 5.758299999999994e-05, 5.7513999999994625e-05, 5.759699999999951e-05, 5.7457999999996345e-05, 5.7471999999995915e-05, 5.75550000000008e-05, 5.744499999999625e-05, 5.76670000000043e-05, 5.762499999999865e-05, 5.7485999999995485e-05, 5.76670000000043e-05, 5.741699999999711e-05, 5.7485999999995485e-05, 5.74870000000019e-05, 5.76949999999965e-05, 5.758299999999994e-05, 5.7679999999997456e-05, 5.7457999999996345e-05, 5.761099999999908e-05, 5.7665999999997886e-05, 5.7665999999997886e-05, 5.7430000000004144e-05, 5.754100000000123e-05, 5.762500000000559e-05, 5.7430000000004144e-05, 5.7569999999999844e-05]</msg>
<status status="PASS" starttime="20201030 18:28:53.005" endtime="20201030 18:28:53.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.000" endtime="20201030 18:28:53.008"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:53.012" endtime="20201030 18:28:53.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.010" endtime="20201030 18:28:53.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.009" endtime="20201030 18:28:53.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.638" endtime="20201030 18:28:53.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.637" endtime="20201030 18:28:53.032"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.041" endtime="20201030 18:28:53.060"></status>
</kw>
<msg timestamp="20201030 18:28:53.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.040" endtime="20201030 18:28:53.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.062" endtime="20201030 18:28:53.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.064" endtime="20201030 18:28:53.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.037" endtime="20201030 18:28:53.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.035" endtime="20201030 18:28:53.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.074" endtime="20201030 18:28:53.359"></status>
</kw>
<msg timestamp="20201030 18:28:53.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023783375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023841278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:53.072" endtime="20201030 18:28:53.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023783375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023841278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:53.364" endtime="20201030 18:28:53.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.372" endtime="20201030 18:28:53.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.070" endtime="20201030 18:28:53.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.068" endtime="20201030 18:28:53.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:53.379" level="INFO">${RESULT} = [{'diff': 5.790300000000151e-05}, {'diff': 5.854100000000223e-05}, {'diff': 5.848699999999943e-05}, {'diff': 5.8665999999998886e-05}, {'diff': 5.8430000000001675e-05}, {'diff': 5.8485999999999955e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:53.376" endtime="20201030 18:28:53.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:53.383" level="INFO">${ACCURACY} = {'diff': [5.790300000000151e-05, 5.854100000000223e-05, 5.848699999999943e-05, 5.8665999999998886e-05, 5.8430000000001675e-05, 5.8485999999999955e-05, 5.8680000000001925e-05, 5.863899999999922e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:28:53.380" endtime="20201030 18:28:53.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.388" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 18:28:53.387" endtime="20201030 18:28:53.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.391" level="INFO">VALUE: [5.790300000000151e-05, 5.854100000000223e-05, 5.848699999999943e-05, 5.8665999999998886e-05, 5.8430000000001675e-05, 5.8485999999999955e-05, 5.8680000000001925e-05, 5.863899999999922e-05, 5.8485999999999955e-05, 5.8665999999998886e-05, 5.8485999999999955e-05, 5.861100000000008e-05, 5.859700000000051e-05, 5.858300000000094e-05, 5.8485999999999955e-05, 5.8444000000001245e-05, 5.8707999999997595e-05, 5.858300000000094e-05, 5.843100000000115e-05, 5.865300000000226e-05, 5.8485999999999955e-05, 5.8457999999997345e-05, 5.8485999999999955e-05, 5.845900000000029e-05, 5.841700000000158e-05, 5.8569999999997374e-05, 5.843100000000115e-05, 5.862499999999965e-05, 5.8584000000000414e-05, 5.855499999999833e-05, 5.838900000000244e-05, 5.8679999999998456e-05, 5.8637999999999746e-05, 5.858299999999747e-05, 5.8443999999997776e-05, 5.8416000000002105e-05, 5.8679999999998456e-05, 5.856900000000137e-05, 5.861100000000008e-05, 5.8416000000002105e-05, 5.841699999999811e-05, 5.8472000000000385e-05, 5.841700000000158e-05, 5.8457999999997345e-05, 5.865299999999879e-05, 5.8457999999997345e-05, 5.8542000000001704e-05, 5.859699999999704e-05, 5.870900000000054e-05, 5.844500000000072e-05]</msg>
<status status="PASS" starttime="20201030 18:28:53.389" endtime="20201030 18:28:53.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.384" endtime="20201030 18:28:53.400"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:53.403" endtime="20201030 18:28:53.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.402" endtime="20201030 18:28:53.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.401" endtime="20201030 18:28:53.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.033" endtime="20201030 18:28:53.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.033" endtime="20201030 18:28:53.424"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.433" endtime="20201030 18:28:53.452"></status>
</kw>
<msg timestamp="20201030 18:28:53.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.432" endtime="20201030 18:28:53.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.453" endtime="20201030 18:28:53.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.456" endtime="20201030 18:28:53.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.429" endtime="20201030 18:28:53.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.427" endtime="20201030 18:28:53.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.465" endtime="20201030 18:28:53.753"></status>
</kw>
<msg timestamp="20201030 18:28:53.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022430361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022489611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:53.464" endtime="20201030 18:28:53.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022430361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022489611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:53.757" endtime="20201030 18:28:53.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.765" endtime="20201030 18:28:53.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.461" endtime="20201030 18:28:53.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.459" endtime="20201030 18:28:53.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:53.773" level="INFO">${RESULT} = [{'diff': 5.9250000000000275e-05}, {'diff': 5.951300000000062e-05}, {'diff': 5.96810000000024e-05}, {'diff': 5.961100000000108e-05}, {'diff': 5.9514000000000095e-05}, {'diff': 5.9486000000000955e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:53.769" endtime="20201030 18:28:53.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:53.778" level="INFO">${ACCURACY} = {'diff': [5.9250000000000275e-05, 5.951300000000062e-05, 5.96810000000024e-05, 5.961100000000108e-05, 5.9514000000000095e-05, 5.9486000000000955e-05, 5.963900000000022e-05, 5.968099999999893e-05, 5.96...</msg>
<status status="PASS" starttime="20201030 18:28:53.774" endtime="20201030 18:28:53.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.783" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 18:28:53.782" endtime="20201030 18:28:53.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.786" level="INFO">VALUE: [5.9250000000000275e-05, 5.951300000000062e-05, 5.96810000000024e-05, 5.961100000000108e-05, 5.9514000000000095e-05, 5.9486000000000955e-05, 5.963900000000022e-05, 5.968099999999893e-05, 5.966699999999936e-05, 5.9584000000001414e-05, 5.936100000000083e-05, 5.9707999999998596e-05, 5.944499999999825e-05, 5.962499999999718e-05, 5.9499999999997055e-05, 5.9665999999999886e-05, 5.955499999999933e-05, 5.9652000000000316e-05, 5.9415999999999636e-05, 5.9499999999997055e-05, 5.9708000000002065e-05, 5.9486000000000955e-05, 5.9679999999999456e-05, 5.962500000000065e-05, 5.965300000000326e-05, 5.95689999999989e-05, 5.9527999999999665e-05, 5.9707999999998596e-05, 5.969500000000197e-05, 5.961099999999761e-05, 5.966699999999936e-05, 5.958299999999847e-05, 5.963900000000022e-05, 5.945900000000129e-05, 5.9486000000000955e-05, 5.9486000000000955e-05, 5.9598000000000984e-05, 5.9569999999998374e-05, 5.9444000000002245e-05, 5.961100000000108e-05, 5.951300000000062e-05, 5.959700000000151e-05, 5.9402000000000066e-05, 5.9415999999999636e-05, 5.9429999999999206e-05, 5.9472000000001385e-05, 5.9486000000000955e-05, 5.970899999999807e-05, 5.958299999999847e-05, 5.966699999999936e-05]</msg>
<status status="PASS" starttime="20201030 18:28:53.784" endtime="20201030 18:28:53.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.779" endtime="20201030 18:28:53.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:53.791" endtime="20201030 18:28:53.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.789" endtime="20201030 18:28:53.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.788" endtime="20201030 18:28:53.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.425" endtime="20201030 18:28:53.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.425" endtime="20201030 18:28:53.812"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.821" endtime="20201030 18:28:53.837"></status>
</kw>
<msg timestamp="20201030 18:28:53.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.819" endtime="20201030 18:28:53.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.839" endtime="20201030 18:28:53.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.842" endtime="20201030 18:28:53.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.817" endtime="20201030 18:28:53.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.814" endtime="20201030 18:28:53.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.851" endtime="20201030 18:28:54.140"></status>
</kw>
<msg timestamp="20201030 18:28:54.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022937014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022997333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:53.849" endtime="20201030 18:28:54.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022937014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022997333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:54.144" endtime="20201030 18:28:54.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.153" endtime="20201030 18:28:54.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.847" endtime="20201030 18:28:54.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.845" endtime="20201030 18:28:54.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:54.160" level="INFO">${RESULT} = [{'diff': 6.031899999999965e-05}, {'diff': 6.0694000000000026e-05}, {'diff': 6.058299999999947e-05}, {'diff': 6.0500000000001525e-05}, {'diff': 6.059699999999904e-05}, {'diff': 6.0499999999998055e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:54.156" endtime="20201030 18:28:54.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:54.164" level="INFO">${ACCURACY} = {'diff': [6.031899999999965e-05, 6.0694000000000026e-05, 6.058299999999947e-05, 6.0500000000001525e-05, 6.059699999999904e-05, 6.0499999999998055e-05, 6.0694000000000026e-05, 6.0471999999998916e-05, 6...</msg>
<status status="PASS" starttime="20201030 18:28:54.161" endtime="20201030 18:28:54.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.169" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 18:28:54.168" endtime="20201030 18:28:54.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.171" level="INFO">VALUE: [6.031899999999965e-05, 6.0694000000000026e-05, 6.058299999999947e-05, 6.0500000000001525e-05, 6.059699999999904e-05, 6.0499999999998055e-05, 6.0694000000000026e-05, 6.0471999999998916e-05, 6.061100000000208e-05, 6.0542000000000235e-05, 6.0584000000002414e-05, 6.0499999999998055e-05, 6.066700000000036e-05, 6.0583999999998944e-05, 6.0555999999999804e-05, 6.063899999999775e-05, 6.048700000000143e-05, 6.063900000000122e-05, 6.0541999999996765e-05, 6.058299999999947e-05, 6.055500000000033e-05, 6.0416000000000636e-05, 6.052700000000119e-05, 6.0680000000000456e-05, 6.0652000000001316e-05, 6.0500000000001525e-05, 6.0680000000000456e-05, 6.063899999999775e-05, 6.0513999999997625e-05, 6.0528000000000665e-05, 6.0430000000000206e-05, 6.0542000000000235e-05, 6.043099999999968e-05, 6.063900000000122e-05, 6.0500000000001525e-05, 6.0541999999996765e-05, 6.0499999999998055e-05, 6.0694000000000026e-05, 6.063900000000122e-05, 6.0500000000001525e-05, 6.043099999999968e-05, 6.0514000000001095e-05, 6.047299999999839e-05, 6.0611999999998084e-05, 6.0597999999998514e-05, 6.044499999999925e-05, 6.045899999999882e-05, 6.0457999999999346e-05, 6.0416000000000636e-05, 6.058299999999947e-05]</msg>
<status status="PASS" starttime="20201030 18:28:54.170" endtime="20201030 18:28:54.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.165" endtime="20201030 18:28:54.173"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:54.177" endtime="20201030 18:28:54.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.175" endtime="20201030 18:28:54.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.174" endtime="20201030 18:28:54.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.813" endtime="20201030 18:28:54.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.812" endtime="20201030 18:28:54.198"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.207" endtime="20201030 18:28:54.225"></status>
</kw>
<msg timestamp="20201030 18:28:54.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.205" endtime="20201030 18:28:54.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.227" endtime="20201030 18:28:54.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.229" endtime="20201030 18:28:54.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.202" endtime="20201030 18:28:54.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.200" endtime="20201030 18:28:54.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.239" endtime="20201030 18:28:54.521"></status>
</kw>
<msg timestamp="20201030 18:28:54.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023576819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023638208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:54.237" endtime="20201030 18:28:54.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023576819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023638208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:54.526" endtime="20201030 18:28:54.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.534" endtime="20201030 18:28:54.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.234" endtime="20201030 18:28:54.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.232" endtime="20201030 18:28:54.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:54.541" level="INFO">${RESULT} = [{'diff': 6.138900000000197e-05}, {'diff': 6.161099999999961e-05}, {'diff': 6.147199999999992e-05}, {'diff': 6.163900000000222e-05}, {'diff': 6.148599999999949e-05}, {'diff': 6.15560000000008e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:54.538" endtime="20201030 18:28:54.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:54.546" level="INFO">${ACCURACY} = {'diff': [6.138900000000197e-05, 6.161099999999961e-05, 6.147199999999992e-05, 6.163900000000222e-05, 6.148599999999949e-05, 6.15560000000008e-05, 6.154199999999777e-05, 6.161099999999961e-05, 6.14859...</msg>
<status status="PASS" starttime="20201030 18:28:54.542" endtime="20201030 18:28:54.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.550" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 18:28:54.549" endtime="20201030 18:28:54.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.553" level="INFO">VALUE: [6.138900000000197e-05, 6.161099999999961e-05, 6.147199999999992e-05, 6.163900000000222e-05, 6.148599999999949e-05, 6.15560000000008e-05, 6.154199999999777e-05, 6.161099999999961e-05, 6.148599999999949e-05, 6.158300000000047e-05, 6.154200000000123e-05, 6.161100000000308e-05, 6.15560000000008e-05, 6.145899999999982e-05, 6.162499999999918e-05, 6.165300000000179e-05, 6.155599999999734e-05, 6.144500000000025e-05, 6.15560000000008e-05, 6.147199999999992e-05, 6.150000000000252e-05, 6.14019999999986e-05, 6.15690000000009e-05, 6.161099999999961e-05, 6.137499999999893e-05, 6.155500000000133e-05, 6.149999999999906e-05, 6.154100000000176e-05, 6.148599999999949e-05, 6.158300000000047e-05, 6.145800000000035e-05, 6.145800000000035e-05, 6.168100000000093e-05, 6.147199999999992e-05, 6.161099999999961e-05, 6.154200000000123e-05, 6.149999999999906e-05, 6.170900000000007e-05, 6.149999999999906e-05, 6.163899999999875e-05, 6.158399999999994e-05, 6.16950000000005e-05, 6.15690000000009e-05, 6.148599999999949e-05, 6.16950000000005e-05, 6.173599999999974e-05, 6.154099999999829e-05, 6.155499999999786e-05, 6.147199999999992e-05, 6.155500000000133e-05]</msg>
<status status="PASS" starttime="20201030 18:28:54.551" endtime="20201030 18:28:54.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.546" endtime="20201030 18:28:54.555"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:54.559" endtime="20201030 18:28:54.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.557" endtime="20201030 18:28:54.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.556" endtime="20201030 18:28:54.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.199" endtime="20201030 18:28:54.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.198" endtime="20201030 18:28:54.580"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.589" endtime="20201030 18:28:54.606"></status>
</kw>
<msg timestamp="20201030 18:28:54.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.587" endtime="20201030 18:28:54.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.608" endtime="20201030 18:28:54.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.610" endtime="20201030 18:28:54.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.585" endtime="20201030 18:28:54.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.582" endtime="20201030 18:28:54.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.620" endtime="20201030 18:28:54.904"></status>
</kw>
<msg timestamp="20201030 18:28:54.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022710972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022773681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:54.618" endtime="20201030 18:28:54.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022710972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022773681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:54.909" endtime="20201030 18:28:54.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.917" endtime="20201030 18:28:54.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.616" endtime="20201030 18:28:54.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.614" endtime="20201030 18:28:54.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:54.924" level="INFO">${RESULT} = [{'diff': 6.270900000000107e-05}, {'diff': 6.267999999999899e-05}, {'diff': 6.265300000000279e-05}, {'diff': 6.262500000000018e-05}, {'diff': 6.24439999999983e-05}, {'diff': 6.238900000000297e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:54.920" endtime="20201030 18:28:54.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:54.929" level="INFO">${ACCURACY} = {'diff': [6.270900000000107e-05, 6.267999999999899e-05, 6.265300000000279e-05, 6.262500000000018e-05, 6.24439999999983e-05, 6.238900000000297e-05, 6.27080000000016e-05, 6.251399999999963e-05, 6.250000...</msg>
<status status="PASS" starttime="20201030 18:28:54.925" endtime="20201030 18:28:54.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.934" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 18:28:54.933" endtime="20201030 18:28:54.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.936" level="INFO">VALUE: [6.270900000000107e-05, 6.267999999999899e-05, 6.265300000000279e-05, 6.262500000000018e-05, 6.24439999999983e-05, 6.238900000000297e-05, 6.27080000000016e-05, 6.251399999999963e-05, 6.250000000000006e-05, 6.244400000000178e-05, 6.25699999999979e-05, 6.269399999999856e-05, 6.259699999999757e-05, 6.265199999999985e-05, 6.244499999999778e-05, 6.2582999999998e-05, 6.243100000000168e-05, 6.245900000000082e-05, 6.245899999999735e-05, 6.240300000000254e-05, 6.25279999999992e-05, 6.269499999999803e-05, 6.254100000000276e-05, 6.245900000000082e-05, 6.243099999999821e-05, 6.247200000000092e-05, 6.25690000000019e-05, 6.263899999999975e-05, 6.259699999999757e-05, 6.262500000000018e-05, 6.261100000000061e-05, 6.254099999999929e-05, 6.261100000000061e-05, 6.250000000000006e-05, 6.269399999999856e-05, 6.269399999999856e-05, 6.248600000000049e-05, 6.262500000000018e-05, 6.254199999999877e-05, 6.243100000000168e-05, 6.240299999999907e-05, 6.27080000000016e-05, 6.259800000000051e-05, 6.263899999999975e-05, 6.25279999999992e-05, 6.248600000000049e-05, 6.243100000000168e-05, 6.245900000000082e-05, 6.261200000000008e-05, 6.259800000000051e-05]</msg>
<status status="PASS" starttime="20201030 18:28:54.935" endtime="20201030 18:28:54.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.930" endtime="20201030 18:28:54.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:54.942" endtime="20201030 18:28:54.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.940" endtime="20201030 18:28:54.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.939" endtime="20201030 18:28:54.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.581" endtime="20201030 18:28:54.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.580" endtime="20201030 18:28:54.962"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.972" endtime="20201030 18:28:54.989"></status>
</kw>
<msg timestamp="20201030 18:28:54.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.970" endtime="20201030 18:28:54.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.991" endtime="20201030 18:28:54.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.993" endtime="20201030 18:28:54.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.967" endtime="20201030 18:28:54.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.965" endtime="20201030 18:28:54.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.003" endtime="20201030 18:28:55.292"></status>
</kw>
<msg timestamp="20201030 18:28:55.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022576431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.001" endtime="20201030 18:28:55.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022576431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.296" endtime="20201030 18:28:55.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.305" endtime="20201030 18:28:55.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.998" endtime="20201030 18:28:55.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.997" endtime="20201030 18:28:55.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:55.312" level="INFO">${RESULT} = [{'diff': 6.290299999999957e-05}, {'diff': 6.358400000000194e-05}, {'diff': 6.361100000000161e-05}, {'diff': 6.348600000000149e-05}, {'diff': 6.352700000000072e-05}, {'diff': 6.352700000000072e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:55.308" endtime="20201030 18:28:55.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:55.316" level="INFO">${ACCURACY} = {'diff': [6.290299999999957e-05, 6.358400000000194e-05, 6.361100000000161e-05, 6.348600000000149e-05, 6.352700000000072e-05, 6.352700000000072e-05, 6.369399999999956e-05, 6.366600000000042e-05, 6.3568...</msg>
<status status="PASS" starttime="20201030 18:28:55.313" endtime="20201030 18:28:55.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.321" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 18:28:55.319" endtime="20201030 18:28:55.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.323" level="INFO">VALUE: [6.290299999999957e-05, 6.358400000000194e-05, 6.361100000000161e-05, 6.348600000000149e-05, 6.352700000000072e-05, 6.352700000000072e-05, 6.369399999999956e-05, 6.366600000000042e-05, 6.356899999999943e-05, 6.345800000000235e-05, 6.354100000000029e-05, 6.359699999999857e-05, 6.363900000000075e-05, 6.347200000000192e-05, 6.348600000000149e-05, 6.355599999999934e-05, 6.363900000000075e-05, 6.37219999999987e-05, 6.365300000000032e-05, 6.343099999999921e-05, 6.362500000000118e-05, 6.341699999999964e-05, 6.369499999999903e-05, 6.370799999999913e-05, 6.35699999999989e-05, 6.35699999999989e-05, 6.347199999999845e-05, 6.354199999999977e-05, 6.3582999999999e-05, 6.345799999999888e-05, 6.342999999999974e-05, 6.342999999999974e-05, 6.349999999999759e-05, 6.363900000000075e-05, 6.345799999999888e-05, 6.3582999999999e-05, 6.361099999999814e-05, 6.361099999999814e-05, 6.340300000000007e-05, 6.35280000000002e-05, 6.347199999999845e-05, 6.350000000000106e-05, 6.348599999999802e-05, 6.349999999999759e-05, 6.359699999999857e-05, 6.349999999999759e-05, 6.35280000000002e-05, 6.37089999999986e-05, 6.35699999999989e-05, 6.362499999999771e-05]</msg>
<status status="PASS" starttime="20201030 18:28:55.322" endtime="20201030 18:28:55.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.317" endtime="20201030 18:28:55.325"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:55.328" endtime="20201030 18:28:55.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.327" endtime="20201030 18:28:55.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.326" endtime="20201030 18:28:55.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.963" endtime="20201030 18:28:55.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.963" endtime="20201030 18:28:55.349"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.358" endtime="20201030 18:28:55.377"></status>
</kw>
<msg timestamp="20201030 18:28:55.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:55.357" endtime="20201030 18:28:55.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:55.378" endtime="20201030 18:28:55.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.381" endtime="20201030 18:28:55.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.354" endtime="20201030 18:28:55.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.352" endtime="20201030 18:28:55.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.390" endtime="20201030 18:28:55.676"></status>
</kw>
<msg timestamp="20201030 18:28:55.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023318236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023382403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.389" endtime="20201030 18:28:55.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023318236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023382403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.681" endtime="20201030 18:28:55.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.689" endtime="20201030 18:28:55.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.386" endtime="20201030 18:28:55.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.384" endtime="20201030 18:28:55.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:55.696" level="INFO">${RESULT} = [{'diff': 6.416700000000039e-05}, {'diff': 6.463899999999828e-05}, {'diff': 6.459700000000304e-05}, {'diff': 6.443100000000021e-05}, {'diff': 6.462499999999871e-05}, {'diff': 6.463800000000228e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:55.693" endtime="20201030 18:28:55.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:55.700" level="INFO">${ACCURACY} = {'diff': [6.416700000000039e-05, 6.463899999999828e-05, 6.459700000000304e-05, 6.443100000000021e-05, 6.462499999999871e-05, 6.463800000000228e-05, 6.455499999999739e-05, 6.451299999999868e-05, 6.4541...</msg>
<status status="PASS" starttime="20201030 18:28:55.697" endtime="20201030 18:28:55.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.705" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 18:28:55.704" endtime="20201030 18:28:55.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.707" level="INFO">VALUE: [6.416700000000039e-05, 6.463899999999828e-05, 6.459700000000304e-05, 6.443100000000021e-05, 6.462499999999871e-05, 6.463800000000228e-05, 6.455499999999739e-05, 6.451299999999868e-05, 6.454100000000129e-05, 6.450000000000206e-05, 6.445799999999988e-05, 6.468000000000099e-05, 6.466600000000142e-05, 6.4583e-05, 6.455499999999739e-05, 6.468000000000099e-05, 6.470800000000013e-05, 6.438899999999803e-05, 6.443000000000074e-05, 6.450000000000206e-05, 6.469400000000056e-05, 6.451399999999816e-05, 6.447299999999892e-05, 6.455600000000034e-05, 6.444499999999978e-05, 6.444499999999978e-05, 6.459699999999957e-05, 6.448600000000249e-05, 6.468099999999699e-05, 6.451399999999816e-05, 6.463900000000175e-05, 6.450000000000206e-05, 6.470800000000013e-05, 6.451299999999868e-05, 6.455500000000086e-05, 6.4583e-05, 6.450000000000206e-05, 6.465200000000185e-05, 6.459699999999957e-05, 6.462499999999871e-05, 6.451399999999816e-05, 6.4583e-05, 6.459700000000304e-05, 6.462500000000218e-05, 6.470800000000013e-05, 6.466700000000089e-05, 6.441699999999717e-05, 6.45280000000012e-05, 6.466700000000089e-05, 6.440300000000107e-05]</msg>
<status status="PASS" starttime="20201030 18:28:55.706" endtime="20201030 18:28:55.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.701" endtime="20201030 18:28:55.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:55.714" endtime="20201030 18:28:55.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.712" endtime="20201030 18:28:55.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.711" endtime="20201030 18:28:55.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.350" endtime="20201030 18:28:55.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.350" endtime="20201030 18:28:55.734"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.743" endtime="20201030 18:28:55.761"></status>
</kw>
<msg timestamp="20201030 18:28:55.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:55.742" endtime="20201030 18:28:55.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:55.762" endtime="20201030 18:28:55.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.765" endtime="20201030 18:28:55.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.739" endtime="20201030 18:28:55.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.737" endtime="20201030 18:28:55.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.775" endtime="20201030 18:28:56.060"></status>
</kw>
<msg timestamp="20201030 18:28:56.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022559681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022624736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.773" endtime="20201030 18:28:56.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022559681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022624736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:56.064" endtime="20201030 18:28:56.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.073" endtime="20201030 18:28:56.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.770" endtime="20201030 18:28:56.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.768" endtime="20201030 18:28:56.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:56.079" level="INFO">${RESULT} = [{'diff': 6.505499999999789e-05}, {'diff': 6.543100000000121e-05}, {'diff': 6.544500000000078e-05}, {'diff': 6.554200000000177e-05}, {'diff': 6.552799999999873e-05}, {'diff': 6.568100000000146e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:56.076" endtime="20201030 18:28:56.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:56.084" level="INFO">${ACCURACY} = {'diff': [6.505499999999789e-05, 6.543100000000121e-05, 6.544500000000078e-05, 6.554200000000177e-05, 6.552799999999873e-05, 6.568100000000146e-05, 6.55700000000009e-05, 6.568099999999799e-05, 6.56110...</msg>
<status status="PASS" starttime="20201030 18:28:56.080" endtime="20201030 18:28:56.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.089" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 18:28:56.088" endtime="20201030 18:28:56.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.091" level="INFO">VALUE: [6.505499999999789e-05, 6.543100000000121e-05, 6.544500000000078e-05, 6.554200000000177e-05, 6.552799999999873e-05, 6.568100000000146e-05, 6.55700000000009e-05, 6.568099999999799e-05, 6.561100000000014e-05, 6.566699999999842e-05, 6.547200000000045e-05, 6.55700000000009e-05, 6.565300000000232e-05, 6.543000000000174e-05, 6.561100000000014e-05, 6.554099999999882e-05, 6.574999999999984e-05, 6.537499999999946e-05, 6.559700000000057e-05, 6.540300000000207e-05, 6.562499999999971e-05, 6.547200000000045e-05, 6.55419999999983e-05, 6.565300000000232e-05, 6.563899999999928e-05, 6.549999999999959e-05, 6.541700000000164e-05, 6.541699999999817e-05, 6.543100000000121e-05, 6.549999999999959e-05, 6.566699999999842e-05, 6.548600000000002e-05, 6.543099999999774e-05, 6.55700000000009e-05, 6.555499999999839e-05, 6.570800000000113e-05, 6.542999999999827e-05, 6.556900000000143e-05, 6.563899999999928e-05, 6.552699999999925e-05, 6.547200000000045e-05, 6.552699999999925e-05, 6.555600000000134e-05, 6.568099999999799e-05, 6.563899999999928e-05, 6.566699999999842e-05, 6.566699999999842e-05, 6.54440000000013e-05, 6.542999999999827e-05, 6.570800000000113e-05]</msg>
<status status="PASS" starttime="20201030 18:28:56.090" endtime="20201030 18:28:56.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.085" endtime="20201030 18:28:56.092"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:56.096" endtime="20201030 18:28:56.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.095" endtime="20201030 18:28:56.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.093" endtime="20201030 18:28:56.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.735" endtime="20201030 18:28:56.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.735" endtime="20201030 18:28:56.117"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.125" endtime="20201030 18:28:56.142"></status>
</kw>
<msg timestamp="20201030 18:28:56.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:56.124" endtime="20201030 18:28:56.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:56.144" endtime="20201030 18:28:56.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.146" endtime="20201030 18:28:56.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.121" endtime="20201030 18:28:56.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.119" endtime="20201030 18:28:56.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.155" endtime="20201030 18:28:56.441"></status>
</kw>
<msg timestamp="20201030 18:28:56.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:56.154" endtime="20201030 18:28:56.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:56.445" endtime="20201030 18:28:56.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.454" endtime="20201030 18:28:56.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.151" endtime="20201030 18:28:56.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.149" endtime="20201030 18:28:56.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:56.460" level="INFO">${RESULT} = [{'diff': 6.641600000000317e-05}, {'diff': 6.661100000000114e-05}, {'diff': 6.655499999999939e-05}, {'diff': 6.65419999999993e-05}, {'diff': 6.643099999999874e-05}, {'diff': 6.666699999999942e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:56.457" endtime="20201030 18:28:56.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:56.464" level="INFO">${ACCURACY} = {'diff': [6.641600000000317e-05, 6.661100000000114e-05, 6.655499999999939e-05, 6.65419999999993e-05, 6.643099999999874e-05, 6.666699999999942e-05, 6.662500000000071e-05, 6.659700000000157e-05, 6.65700...</msg>
<status status="PASS" starttime="20201030 18:28:56.461" endtime="20201030 18:28:56.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.469" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 18:28:56.468" endtime="20201030 18:28:56.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.471" level="INFO">VALUE: [6.641600000000317e-05, 6.661100000000114e-05, 6.655499999999939e-05, 6.65419999999993e-05, 6.643099999999874e-05, 6.666699999999942e-05, 6.662500000000071e-05, 6.659700000000157e-05, 6.65700000000019e-05, 6.659700000000157e-05, 6.643099999999874e-05, 6.668099999999899e-05, 6.641699999999917e-05, 6.654200000000277e-05, 6.655600000000234e-05, 6.650000000000059e-05, 6.650000000000059e-05, 6.642999999999927e-05, 6.666599999999995e-05, 6.654099999999982e-05, 6.645800000000188e-05, 6.667999999999952e-05, 6.64159999999997e-05, 6.659700000000157e-05, 6.645799999999841e-05, 6.645799999999841e-05, 6.663900000000028e-05, 6.647200000000145e-05, 6.643099999999874e-05, 6.665299999999985e-05, 6.650000000000059e-05, 6.65969999999981e-05, 6.652799999999973e-05, 6.645900000000135e-05, 6.669500000000203e-05, 6.644500000000178e-05, 6.65419999999993e-05, 6.656999999999844e-05, 6.643099999999874e-05, 6.654099999999982e-05, 6.661200000000062e-05, 6.647300000000092e-05, 6.645800000000188e-05, 6.669399999999909e-05, 6.647200000000145e-05, 6.637500000000046e-05, 6.638900000000003e-05, 6.648600000000102e-05, 6.667999999999952e-05, 6.659700000000157e-05]</msg>
<status status="PASS" starttime="20201030 18:28:56.470" endtime="20201030 18:28:56.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.465" endtime="20201030 18:28:56.472"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:56.476" endtime="20201030 18:28:56.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.475" endtime="20201030 18:28:56.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.473" endtime="20201030 18:28:56.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.118" endtime="20201030 18:28:56.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.117" endtime="20201030 18:28:56.499"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.517" endtime="20201030 18:28:56.540"></status>
</kw>
<msg timestamp="20201030 18:28:56.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:56.514" endtime="20201030 18:28:56.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:56.543" endtime="20201030 18:28:56.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.548" endtime="20201030 18:28:56.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.509" endtime="20201030 18:28:56.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.505" endtime="20201030 18:28:56.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.567" endtime="20201030 18:28:56.856"></status>
</kw>
<msg timestamp="20201030 18:28:56.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036825639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036892486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:56.564" endtime="20201030 18:28:56.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036825639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036892486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:56.860" endtime="20201030 18:28:56.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.869" endtime="20201030 18:28:56.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.558" endtime="20201030 18:28:56.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.555" endtime="20201030 18:28:56.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:56.875" level="INFO">${RESULT} = [{'diff': 6.684700000000182e-05}, {'diff': 6.754200000000377e-05}, {'diff': 6.7583000000003e-05}, {'diff': 6.76950000000065e-05}, {'diff': 6.748600000000549e-05}, {'diff': 6.749999999999812e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:28:56.872" endtime="20201030 18:28:56.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:56.879" level="INFO">${ACCURACY} = {'diff': [6.684700000000182e-05, 6.754200000000377e-05, 6.7583000000003e-05, 6.76950000000065e-05, 6.748600000000549e-05, 6.749999999999812e-05, 6.762499999999477e-05, 6.770899999999913e-05, 6.7486999...</msg>
<status status="PASS" starttime="20201030 18:28:56.876" endtime="20201030 18:28:56.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.884" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 18:28:56.883" endtime="20201030 18:28:56.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.886" level="INFO">VALUE: [6.684700000000182e-05, 6.754200000000377e-05, 6.7583000000003e-05, 6.76950000000065e-05, 6.748600000000549e-05, 6.749999999999812e-05, 6.762499999999477e-05, 6.770899999999913e-05, 6.748699999999802e-05, 6.744499999999931e-05, 6.741700000000017e-05, 6.747199999999898e-05, 6.761100000000214e-05, 6.772199999999923e-05, 6.745799999999941e-05, 6.744399999999984e-05, 6.748600000000549e-05, 6.747199999999898e-05, 6.7583000000003e-05, 6.756899999999649e-05, 6.76109999999952e-05, 6.765300000000085e-05, 6.763900000000128e-05, 6.751399999999769e-05, 6.749999999999812e-05, 6.759699999999563e-05, 6.761100000000214e-05, 6.752799999999726e-05, 6.765300000000085e-05, 6.737500000000146e-05, 6.75280000000042e-05, 6.770799999999966e-05, 6.75700000000029e-05, 6.751399999999769e-05, 6.766699999999348e-05, 6.752799999999726e-05, 6.766700000000042e-05, 6.744399999999984e-05, 6.763800000000181e-05, 6.758299999999606e-05, 6.752699999999778e-05, 6.7583000000003e-05, 6.763900000000128e-05, 6.770799999999966e-05, 6.769499999999956e-05, 6.75280000000042e-05, 6.762500000000171e-05, 6.763900000000128e-05, 6.751399999999769e-05, 6.741700000000017e-05]</msg>
<status status="PASS" starttime="20201030 18:28:56.885" endtime="20201030 18:28:56.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.880" endtime="20201030 18:28:56.888"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:56.892" endtime="20201030 18:28:56.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.890" endtime="20201030 18:28:56.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.889" endtime="20201030 18:28:56.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.501" endtime="20201030 18:28:56.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.500" endtime="20201030 18:28:56.913"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.921" endtime="20201030 18:28:56.938"></status>
</kw>
<msg timestamp="20201030 18:28:56.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:56.920" endtime="20201030 18:28:56.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:56.940" endtime="20201030 18:28:56.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.942" endtime="20201030 18:28:56.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.917" endtime="20201030 18:28:56.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.915" endtime="20201030 18:28:56.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.951" endtime="20201030 18:28:57.237"></status>
</kw>
<msg timestamp="20201030 18:28:57.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0223895, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:28:56.950" endtime="20201030 18:28:57.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0223895, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:28:57.241" endtime="20201030 18:28:57.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.250" endtime="20201030 18:28:57.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.947" endtime="20201030 18:28:57.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.945" endtime="20201030 18:28:57.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:57.256" level="INFO">${RESULT} = [{'diff': 6.799999999999862e-05}, {'diff': 6.85970000000001e-05}, {'diff': 6.849999999999912e-05}, {'diff': 6.863899999999881e-05}, {'diff': 6.843099999999727e-05}, {'diff': 6.855600000000087e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:57.253" endtime="20201030 18:28:57.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:57.261" level="INFO">${ACCURACY} = {'diff': [6.799999999999862e-05, 6.85970000000001e-05, 6.849999999999912e-05, 6.863899999999881e-05, 6.843099999999727e-05, 6.855600000000087e-05, 6.865300000000185e-05, 6.855499999999792e-05, 6.86109...</msg>
<status status="PASS" starttime="20201030 18:28:57.257" endtime="20201030 18:28:57.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.266" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 18:28:57.265" endtime="20201030 18:28:57.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.268" level="INFO">VALUE: [6.799999999999862e-05, 6.85970000000001e-05, 6.849999999999912e-05, 6.863899999999881e-05, 6.843099999999727e-05, 6.855600000000087e-05, 6.865300000000185e-05, 6.855499999999792e-05, 6.861099999999967e-05, 6.852699999999878e-05, 6.84160000000017e-05, 6.84299999999978e-05, 6.862499999999924e-05, 6.863900000000228e-05, 6.862499999999924e-05, 6.855500000000139e-05, 6.867999999999805e-05, 6.855500000000139e-05, 6.865300000000185e-05, 6.856900000000096e-05, 6.848599999999955e-05, 6.851399999999869e-05, 6.841700000000117e-05, 6.843099999999727e-05, 6.866700000000142e-05, 6.857000000000044e-05, 6.857000000000044e-05, 6.848599999999955e-05, 6.856900000000096e-05, 6.866700000000142e-05, 6.845899999999988e-05, 6.866699999999795e-05, 6.859799999999958e-05, 6.869500000000056e-05, 6.866700000000142e-05, 6.845800000000041e-05, 6.854100000000182e-05, 6.851399999999869e-05, 6.85970000000001e-05, 6.848599999999955e-05, 6.865299999999838e-05, 6.852800000000173e-05, 6.866699999999795e-05, 6.85420000000013e-05, 6.866700000000142e-05, 6.85420000000013e-05, 6.848599999999955e-05, 6.854199999999783e-05, 6.851400000000216e-05, 6.866600000000195e-05]</msg>
<status status="PASS" starttime="20201030 18:28:57.267" endtime="20201030 18:28:57.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.262" endtime="20201030 18:28:57.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:57.273" endtime="20201030 18:28:57.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.271" endtime="20201030 18:28:57.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.270" endtime="20201030 18:28:57.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.914" endtime="20201030 18:28:57.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.913" endtime="20201030 18:28:57.294"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.302" endtime="20201030 18:28:57.320"></status>
</kw>
<msg timestamp="20201030 18:28:57.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:57.301" endtime="20201030 18:28:57.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:57.321" endtime="20201030 18:28:57.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.324" endtime="20201030 18:28:57.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.298" endtime="20201030 18:28:57.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.296" endtime="20201030 18:28:57.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.333" endtime="20201030 18:28:57.619"></status>
</kw>
<msg timestamp="20201030 18:28:57.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021809056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021878597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:57.331" endtime="20201030 18:28:57.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021809056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021878597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:57.623" endtime="20201030 18:28:57.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.631" endtime="20201030 18:28:57.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.329" endtime="20201030 18:28:57.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.327" endtime="20201030 18:28:57.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:57.638" level="INFO">${RESULT} = [{'diff': 6.954099999999935e-05}, {'diff': 6.954099999999935e-05}, {'diff': 6.947200000000098e-05}, {'diff': 6.962500000000024e-05}, {'diff': 6.956899999999849e-05}, {'diff': 6.95970000000011e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:57.635" endtime="20201030 18:28:57.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:57.642" level="INFO">${ACCURACY} = {'diff': [6.954099999999935e-05, 6.954099999999935e-05, 6.947200000000098e-05, 6.962500000000024e-05, 6.956899999999849e-05, 6.95970000000011e-05, 6.963899999999981e-05, 6.951399999999969e-05, 6.96389...</msg>
<status status="PASS" starttime="20201030 18:28:57.639" endtime="20201030 18:28:57.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.647" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 18:28:57.645" endtime="20201030 18:28:57.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.649" level="INFO">VALUE: [6.954099999999935e-05, 6.954099999999935e-05, 6.947200000000098e-05, 6.962500000000024e-05, 6.956899999999849e-05, 6.95970000000011e-05, 6.963899999999981e-05, 6.951399999999969e-05, 6.963899999999981e-05, 6.969500000000156e-05, 6.966699999999895e-05, 6.962500000000024e-05, 6.965300000000285e-05, 6.954199999999883e-05, 6.956999999999797e-05, 6.965299999999938e-05, 6.968000000000252e-05, 6.967999999999905e-05, 6.949999999999665e-05, 6.959699999999763e-05, 6.966599999999948e-05, 6.955499999999892e-05, 6.956899999999849e-05, 6.952699999999978e-05, 6.948600000000055e-05, 6.94299999999988e-05, 6.961100000000067e-05, 6.962500000000024e-05, 6.948600000000055e-05, 6.956899999999849e-05, 6.948600000000055e-05, 6.961100000000067e-05, 6.952799999999926e-05, 6.947200000000098e-05, 6.961100000000067e-05, 6.943099999999827e-05, 6.961100000000067e-05, 6.962500000000024e-05, 6.968099999999852e-05, 6.968099999999852e-05, 6.963899999999981e-05, 6.965299999999938e-05, 6.94299999999988e-05, 6.965199999999991e-05, 6.94160000000027e-05, 6.966599999999948e-05, 6.947199999999751e-05, 6.965300000000285e-05, 6.972200000000123e-05, 6.947200000000098e-05]</msg>
<status status="PASS" starttime="20201030 18:28:57.648" endtime="20201030 18:28:57.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.643" endtime="20201030 18:28:57.650"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:57.654" endtime="20201030 18:28:57.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.652" endtime="20201030 18:28:57.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.651" endtime="20201030 18:28:57.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.295" endtime="20201030 18:28:57.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.294" endtime="20201030 18:28:57.675"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.683" endtime="20201030 18:28:57.703"></status>
</kw>
<msg timestamp="20201030 18:28:57.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:57.682" endtime="20201030 18:28:57.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:57.704" endtime="20201030 18:28:57.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.707" endtime="20201030 18:28:57.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.679" endtime="20201030 18:28:57.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.677" endtime="20201030 18:28:57.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.716" endtime="20201030 18:28:58.001"></status>
</kw>
<msg timestamp="20201030 18:28:58.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023351181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023421986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:57.714" endtime="20201030 18:28:58.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023351181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023421986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:58.006" endtime="20201030 18:28:58.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.014" endtime="20201030 18:28:58.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.712" endtime="20201030 18:28:58.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.710" endtime="20201030 18:28:58.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:58.020" level="INFO">${RESULT} = [{'diff': 7.080500000000017e-05}, {'diff': 7.063900000000081e-05}, {'diff': 7.043100000000274e-05}, {'diff': 7.069500000000256e-05}, {'diff': 7.052800000000026e-05}, {'diff': 7.058300000000253e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:58.017" endtime="20201030 18:28:58.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:58.024" level="INFO">${ACCURACY} = {'diff': [7.080500000000017e-05, 7.063900000000081e-05, 7.043100000000274e-05, 7.069500000000256e-05, 7.052800000000026e-05, 7.058300000000253e-05, 7.065300000000038e-05, 7.066699999999995e-05, 7.0431...</msg>
<status status="PASS" starttime="20201030 18:28:58.021" endtime="20201030 18:28:58.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.029" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 18:28:58.028" endtime="20201030 18:28:58.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.031" level="INFO">VALUE: [7.080500000000017e-05, 7.063900000000081e-05, 7.043100000000274e-05, 7.069500000000256e-05, 7.052800000000026e-05, 7.058300000000253e-05, 7.065300000000038e-05, 7.066699999999995e-05, 7.043100000000274e-05, 7.054199999999983e-05, 7.05420000000033e-05, 7.054099999999688e-05, 7.063900000000081e-05, 7.069400000000309e-05, 7.045800000000241e-05, 7.06109999999982e-05, 7.065300000000038e-05, 7.056999999999897e-05, 7.062500000000124e-05, 7.047200000000198e-05, 7.041700000000317e-05, 7.061100000000167e-05, 7.043099999999927e-05, 7.054199999999983e-05, 7.066699999999995e-05, 7.069500000000256e-05, 7.066699999999995e-05, 7.057000000000244e-05, 7.058399999999854e-05, 7.0584000000002e-05, 7.050000000000112e-05, 7.044500000000231e-05, 7.054199999999983e-05, 7.066699999999995e-05, 7.069399999999962e-05, 7.045800000000241e-05, 7.054100000000035e-05, 7.048600000000155e-05, 7.068000000000005e-05, 7.068000000000005e-05, 7.066599999999701e-05, 7.037500000000099e-05, 7.048599999999808e-05, 7.051400000000069e-05, 7.043100000000274e-05, 7.072199999999876e-05, 7.05689999999995e-05, 7.051400000000069e-05, 7.06109999999982e-05, 7.066699999999995e-05]</msg>
<status status="PASS" starttime="20201030 18:28:58.030" endtime="20201030 18:28:58.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.025" endtime="20201030 18:28:58.033"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:58.037" endtime="20201030 18:28:58.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.036" endtime="20201030 18:28:58.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.035" endtime="20201030 18:28:58.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.676" endtime="20201030 18:28:58.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.675" endtime="20201030 18:28:58.058"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.067" endtime="20201030 18:28:58.086"></status>
</kw>
<msg timestamp="20201030 18:28:58.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.066" endtime="20201030 18:28:58.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.087" endtime="20201030 18:28:58.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.089" endtime="20201030 18:28:58.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.063" endtime="20201030 18:28:58.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.061" endtime="20201030 18:28:58.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.099" endtime="20201030 18:28:58.384"></status>
</kw>
<msg timestamp="20201030 18:28:58.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023238403, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:58.097" endtime="20201030 18:28:58.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023238403, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:58.388" endtime="20201030 18:28:58.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.396" endtime="20201030 18:28:58.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.094" endtime="20201030 18:28:58.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.093" endtime="20201030 18:28:58.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:58.403" level="INFO">${RESULT} = [{'diff': 7.140300000000113e-05}, {'diff': 7.147299999999898e-05}, {'diff': 7.149999999999865e-05}, {'diff': 7.151400000000169e-05}, {'diff': 7.151400000000169e-05}, {'diff': 7.163799999999887e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:58.400" endtime="20201030 18:28:58.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:58.408" level="INFO">${ACCURACY} = {'diff': [7.140300000000113e-05, 7.147299999999898e-05, 7.149999999999865e-05, 7.151400000000169e-05, 7.151400000000169e-05, 7.163799999999887e-05, 7.148599999999908e-05, 7.144400000000037e-05, 7.1680...</msg>
<status status="PASS" starttime="20201030 18:28:58.404" endtime="20201030 18:28:58.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.412" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 18:28:58.411" endtime="20201030 18:28:58.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.415" level="INFO">VALUE: [7.140300000000113e-05, 7.147299999999898e-05, 7.149999999999865e-05, 7.151400000000169e-05, 7.151400000000169e-05, 7.163799999999887e-05, 7.148599999999908e-05, 7.144400000000037e-05, 7.168000000000105e-05, 7.166599999999801e-05, 7.145799999999994e-05, 7.142999999999733e-05, 7.152799999999779e-05, 7.155500000000092e-05, 7.147200000000298e-05, 7.168100000000052e-05, 7.169400000000062e-05, 7.147199999999951e-05, 7.150000000000212e-05, 7.152799999999779e-05, 7.148599999999908e-05, 7.156999999999997e-05, 7.175000000000237e-05, 7.15560000000004e-05, 7.15560000000004e-05, 7.149999999999865e-05, 7.159699999999963e-05, 7.148699999999855e-05, 7.15690000000005e-05, 7.144400000000037e-05, 7.141600000000123e-05, 7.145799999999994e-05, 7.147199999999951e-05, 7.154099999999788e-05, 7.147199999999951e-05, 7.151399999999822e-05, 7.145799999999994e-05, 7.148599999999908e-05, 7.154200000000083e-05, 7.162500000000224e-05, 7.14170000000007e-05, 7.147199999999951e-05, 7.144499999999984e-05, 7.166699999999748e-05, 7.159799999999911e-05, 7.151400000000169e-05, 7.137499999999852e-05, 7.169500000000009e-05, 7.161199999999868e-05, 7.152800000000126e-05]</msg>
<status status="PASS" starttime="20201030 18:28:58.413" endtime="20201030 18:28:58.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.409" endtime="20201030 18:28:58.420"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:58.424" endtime="20201030 18:28:58.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.423" endtime="20201030 18:28:58.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.421" endtime="20201030 18:28:58.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.059" endtime="20201030 18:28:58.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.058" endtime="20201030 18:28:58.445"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.453" endtime="20201030 18:28:58.471"></status>
</kw>
<msg timestamp="20201030 18:28:58.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.452" endtime="20201030 18:28:58.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.472" endtime="20201030 18:28:58.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.475" endtime="20201030 18:28:58.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.449" endtime="20201030 18:28:58.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.447" endtime="20201030 18:28:58.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.484" endtime="20201030 18:28:58.772"></status>
</kw>
<msg timestamp="20201030 18:28:58.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021795042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021867139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:58.482" endtime="20201030 18:28:58.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021795042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021867139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:58.776" endtime="20201030 18:28:58.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.785" endtime="20201030 18:28:58.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.480" endtime="20201030 18:28:58.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.478" endtime="20201030 18:28:58.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:58.791" level="INFO">${RESULT} = [{'diff': 7.209700000000013e-05}, {'diff': 7.259700000000063e-05}, {'diff': 7.247299999999998e-05}, {'diff': 7.265299999999891e-05}, {'diff': 7.251299999999974e-05}, {'diff': 7.241699999999823e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:58.788" endtime="20201030 18:28:58.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:58.795" level="INFO">${ACCURACY} = {'diff': [7.209700000000013e-05, 7.259700000000063e-05, 7.247299999999998e-05, 7.265299999999891e-05, 7.251299999999974e-05, 7.241699999999823e-05, 7.263899999999934e-05, 7.269399999999815e-05, 7.2625...</msg>
<status status="PASS" starttime="20201030 18:28:58.792" endtime="20201030 18:28:58.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.800" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 18:28:58.799" endtime="20201030 18:28:58.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.802" level="INFO">VALUE: [7.209700000000013e-05, 7.259700000000063e-05, 7.247299999999998e-05, 7.265299999999891e-05, 7.251299999999974e-05, 7.241699999999823e-05, 7.263899999999934e-05, 7.269399999999815e-05, 7.262500000000324e-05, 7.263900000000281e-05, 7.258300000000106e-05, 7.250000000000312e-05, 7.266699999999848e-05, 7.25829999999976e-05, 7.240299999999866e-05, 7.259800000000011e-05, 7.248600000000008e-05, 7.26110000000002e-05, 7.249999999999965e-05, 7.26110000000002e-05, 7.245799999999747e-05, 7.268100000000152e-05, 7.266699999999848e-05, 7.244500000000084e-05, 7.263899999999934e-05, 7.251400000000269e-05, 7.252799999999879e-05, 7.261199999999968e-05, 7.262499999999977e-05, 7.255499999999845e-05, 7.24300000000018e-05, 7.272200000000076e-05, 7.251400000000269e-05, 7.237499999999952e-05, 7.248600000000008e-05, 7.236099999999995e-05, 7.262499999999977e-05, 7.25560000000014e-05, 7.258300000000106e-05, 7.256899999999802e-05, 7.25560000000014e-05, 7.254199999999836e-05, 7.243100000000127e-05, 7.263899999999934e-05, 7.247199999999704e-05, 7.257000000000097e-05, 7.247299999999998e-05, 7.273600000000033e-05, 7.249999999999965e-05, 7.25560000000014e-05]</msg>
<status status="PASS" starttime="20201030 18:28:58.801" endtime="20201030 18:28:58.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.796" endtime="20201030 18:28:58.803"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:58.807" endtime="20201030 18:28:58.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.805" endtime="20201030 18:28:58.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.804" endtime="20201030 18:28:58.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.446" endtime="20201030 18:28:58.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.445" endtime="20201030 18:28:58.828"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.839" endtime="20201030 18:28:58.903"></status>
</kw>
<msg timestamp="20201030 18:28:58.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.837" endtime="20201030 18:28:58.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.904" endtime="20201030 18:28:58.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.907" endtime="20201030 18:28:58.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.834" endtime="20201030 18:28:58.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.832" endtime="20201030 18:28:58.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.916" endtime="20201030 18:28:59.202"></status>
</kw>
<msg timestamp="20201030 18:28:59.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070663542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070736542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:58.914" endtime="20201030 18:28:59.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070663542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070736542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:59.206" endtime="20201030 18:28:59.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.214" endtime="20201030 18:28:59.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.912" endtime="20201030 18:28:59.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.910" endtime="20201030 18:28:59.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:59.220" level="INFO">${RESULT} = [{'diff': 7.300000000000362e-05}, {'diff': 7.347200000000498e-05}, {'diff': 7.369399999999915e-05}, {'diff': 7.34309999999988e-05}, {'diff': 7.372299999999776e-05}, {'diff': 7.363900000000034e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:59.217" endtime="20201030 18:28:59.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:59.225" level="INFO">${ACCURACY} = {'diff': [7.300000000000362e-05, 7.347200000000498e-05, 7.369399999999915e-05, 7.34309999999988e-05, 7.372299999999776e-05, 7.363900000000034e-05, 7.350000000000412e-05, 7.348599999999761e-05, 7.36669...</msg>
<status status="PASS" starttime="20201030 18:28:59.221" endtime="20201030 18:28:59.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.229" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 18:28:59.228" endtime="20201030 18:28:59.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.232" level="INFO">VALUE: [7.300000000000362e-05, 7.347200000000498e-05, 7.369399999999915e-05, 7.34309999999988e-05, 7.372299999999776e-05, 7.363900000000034e-05, 7.350000000000412e-05, 7.348599999999761e-05, 7.366699999999948e-05, 7.359799999999417e-05, 7.359799999999417e-05, 7.369499999999862e-05, 7.341700000000617e-05, 7.356899999999555e-05, 7.344399999999196e-05, 7.342999999999933e-05, 7.368000000000652e-05, 7.363899999998647e-05, 7.359700000000857e-05, 7.344400000000584e-05, 7.366699999999948e-05, 7.358300000000206e-05, 7.35969999999947e-05, 7.359700000000857e-05, 7.35560000000024e-05, 7.354200000000977e-05, 7.354199999999589e-05, 7.355599999998852e-05, 7.362500000000771e-05, 7.365299999999297e-05, 7.356899999999555e-05, 7.349999999999024e-05, 7.35700000000089e-05, 7.366699999999948e-05, 7.37360000000048e-05, 7.369499999999862e-05, 7.365200000000738e-05, 7.358300000000206e-05, 7.355500000000292e-05, 7.349999999999024e-05, 7.352800000000326e-05, 7.349999999999024e-05, 7.351399999999675e-05, 7.342999999999933e-05, 7.348599999999761e-05, 7.351399999999675e-05, 7.351400000001063e-05, 7.347200000000498e-05, 7.343100000001268e-05, 7.354199999999589e-05]</msg>
<status status="PASS" starttime="20201030 18:28:59.230" endtime="20201030 18:28:59.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.226" endtime="20201030 18:28:59.233"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:59.237" endtime="20201030 18:28:59.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.235" endtime="20201030 18:28:59.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.234" endtime="20201030 18:28:59.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.829" endtime="20201030 18:28:59.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.828" endtime="20201030 18:28:59.257"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.266" endtime="20201030 18:28:59.284"></status>
</kw>
<msg timestamp="20201030 18:28:59.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:59.264" endtime="20201030 18:28:59.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:59.285" endtime="20201030 18:28:59.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.288" endtime="20201030 18:28:59.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.262" endtime="20201030 18:28:59.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.260" endtime="20201030 18:28:59.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.297" endtime="20201030 18:28:59.582"></status>
</kw>
<msg timestamp="20201030 18:28:59.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021943139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022017778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:59.295" endtime="20201030 18:28:59.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021943139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022017778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:59.587" endtime="20201030 18:28:59.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.595" endtime="20201030 18:28:59.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.292" endtime="20201030 18:28:59.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.291" endtime="20201030 18:28:59.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:59.601" level="INFO">${RESULT} = [{'diff': 7.463899999999787e-05}, {'diff': 7.465200000000144e-05}, {'diff': 7.455599999999993e-05}, {'diff': 7.44439999999999e-05}, {'diff': 7.46249999999983e-05}, {'diff': 7.463800000000187e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:59.598" endtime="20201030 18:28:59.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:59.606" level="INFO">${ACCURACY} = {'diff': [7.463899999999787e-05, 7.465200000000144e-05, 7.455599999999993e-05, 7.44439999999999e-05, 7.46249999999983e-05, 7.463800000000187e-05, 7.46110000000022e-05, 7.452699999999784e-05, 7.4624999...</msg>
<status status="PASS" starttime="20201030 18:28:59.602" endtime="20201030 18:28:59.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.611" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 18:28:59.610" endtime="20201030 18:28:59.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.613" level="INFO">VALUE: [7.463899999999787e-05, 7.465200000000144e-05, 7.455599999999993e-05, 7.44439999999999e-05, 7.46249999999983e-05, 7.463800000000187e-05, 7.46110000000022e-05, 7.452699999999784e-05, 7.46249999999983e-05, 7.469500000000309e-05, 7.448599999999861e-05, 7.459699999999916e-05, 7.441700000000023e-05, 7.466700000000048e-05, 7.44309999999998e-05, 7.450000000000165e-05, 7.458400000000254e-05, 7.445799999999947e-05, 7.454200000000036e-05, 7.470899999999919e-05, 7.458400000000254e-05, 7.468000000000058e-05, 7.468100000000005e-05, 7.452699999999784e-05, 7.469499999999962e-05, 7.443000000000033e-05, 7.469400000000015e-05, 7.463900000000134e-05, 7.448599999999861e-05, 7.459699999999916e-05, 7.466700000000048e-05, 7.462500000000177e-05, 7.459700000000263e-05, 7.472299999999876e-05, 7.466700000000048e-05, 7.461099999999873e-05, 7.466699999999701e-05, 7.455599999999993e-05, 7.465300000000091e-05, 7.440300000000066e-05, 7.450000000000165e-05, 7.461099999999873e-05, 7.458399999999907e-05, 7.445899999999894e-05, 7.465300000000091e-05, 7.463800000000187e-05, 7.443000000000033e-05, 7.454099999999741e-05, 7.463899999999787e-05, 7.468000000000058e-05]</msg>
<status status="PASS" starttime="20201030 18:28:59.612" endtime="20201030 18:28:59.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.607" endtime="20201030 18:28:59.614"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:59.618" endtime="20201030 18:28:59.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.616" endtime="20201030 18:28:59.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.615" endtime="20201030 18:28:59.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.258" endtime="20201030 18:28:59.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.258" endtime="20201030 18:28:59.639"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.647" endtime="20201030 18:28:59.664"></status>
</kw>
<msg timestamp="20201030 18:28:59.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:59.646" endtime="20201030 18:28:59.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:59.666" endtime="20201030 18:28:59.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.668" endtime="20201030 18:28:59.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.643" endtime="20201030 18:28:59.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.641" endtime="20201030 18:28:59.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.678" endtime="20201030 18:28:59.963"></status>
</kw>
<msg timestamp="20201030 18:28:59.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021976292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:59.676" endtime="20201030 18:28:59.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021901319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021976292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:59.968" endtime="20201030 18:28:59.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.976" endtime="20201030 18:28:59.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.673" endtime="20201030 18:28:59.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.671" endtime="20201030 18:28:59.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:59.982" level="INFO">${RESULT} = [{'diff': 7.497300000000248e-05}, {'diff': 7.555600000000093e-05}, {'diff': 7.559799999999964e-05}, {'diff': 7.559799999999964e-05}, {'diff': 7.56379999999994e-05}, {'diff': 7.555500000000145e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:59.979" endtime="20201030 18:28:59.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:59.987" level="INFO">${ACCURACY} = {'diff': [7.497300000000248e-05, 7.555600000000093e-05, 7.559799999999964e-05, 7.559799999999964e-05, 7.56379999999994e-05, 7.555500000000145e-05, 7.559700000000016e-05, 7.554100000000188e-05, 7.54160...</msg>
<status status="PASS" starttime="20201030 18:28:59.983" endtime="20201030 18:28:59.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.991" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 18:28:59.990" endtime="20201030 18:28:59.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.993" level="INFO">VALUE: [7.497300000000248e-05, 7.555600000000093e-05, 7.559799999999964e-05, 7.559799999999964e-05, 7.56379999999994e-05, 7.555500000000145e-05, 7.559700000000016e-05, 7.554100000000188e-05, 7.541600000000176e-05, 7.556900000000102e-05, 7.548599999999961e-05, 7.54440000000009e-05, 7.552799999999832e-05, 7.555600000000093e-05, 7.544500000000037e-05, 7.555600000000093e-05, 7.550000000000265e-05, 7.566699999999801e-05, 7.568100000000105e-05, 7.565299999999844e-05, 7.547200000000004e-05, 7.559799999999964e-05, 7.566700000000148e-05, 7.569500000000062e-05, 7.551399999999875e-05, 7.548600000000308e-05, 7.549999999999918e-05, 7.569400000000115e-05, 7.570800000000072e-05, 7.556900000000102e-05, 7.541599999999829e-05, 7.565300000000191e-05, 7.559700000000016e-05, 7.555500000000145e-05, 7.569400000000115e-05, 7.565299999999844e-05, 7.555600000000093e-05, 7.549999999999918e-05, 7.55830000000006e-05, 7.569500000000062e-05, 7.547200000000004e-05, 7.569400000000115e-05, 7.549999999999918e-05, 7.544500000000037e-05, 7.56249999999993e-05, 7.540300000000166e-05, 7.543099999999733e-05, 7.549999999999918e-05, 7.569400000000115e-05, 7.561099999999973e-05]</msg>
<status status="PASS" starttime="20201030 18:28:59.992" endtime="20201030 18:28:59.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.987" endtime="20201030 18:28:59.995"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:59.998" endtime="20201030 18:29:00.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.997" endtime="20201030 18:29:00.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.996" endtime="20201030 18:29:00.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.640" endtime="20201030 18:29:00.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.639" endtime="20201030 18:29:00.019"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.029" endtime="20201030 18:29:00.047"></status>
</kw>
<msg timestamp="20201030 18:29:00.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.027" endtime="20201030 18:29:00.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.048" endtime="20201030 18:29:00.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.051" endtime="20201030 18:29:00.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.024" endtime="20201030 18:29:00.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.022" endtime="20201030 18:29:00.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.060" endtime="20201030 18:29:00.345"></status>
</kw>
<msg timestamp="20201030 18:29:00.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022775236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022851514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:00.058" endtime="20201030 18:29:00.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022775236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022851514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:00.349" endtime="20201030 18:29:00.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.357" endtime="20201030 18:29:00.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.056" endtime="20201030 18:29:00.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.054" endtime="20201030 18:29:00.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:00.364" level="INFO">${RESULT} = [{'diff': 7.627799999999907e-05}, {'diff': 7.641699999999876e-05}, {'diff': 7.647200000000104e-05}, {'diff': 7.645900000000094e-05}, {'diff': 7.648600000000061e-05}, {'diff': 7.659799999999717e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:00.361" endtime="20201030 18:29:00.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:00.368" level="INFO">${ACCURACY} = {'diff': [7.627799999999907e-05, 7.641699999999876e-05, 7.647200000000104e-05, 7.645900000000094e-05, 7.648600000000061e-05, 7.659799999999717e-05, 7.652799999999932e-05, 7.65830000000016e-05, 7.65829...</msg>
<status status="PASS" starttime="20201030 18:29:00.365" endtime="20201030 18:29:00.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.373" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 18:29:00.372" endtime="20201030 18:29:00.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.376" level="INFO">VALUE: [7.627799999999907e-05, 7.641699999999876e-05, 7.647200000000104e-05, 7.645900000000094e-05, 7.648600000000061e-05, 7.659799999999717e-05, 7.652799999999932e-05, 7.65830000000016e-05, 7.658299999999812e-05, 7.6457999999998e-05, 7.661100000000073e-05, 7.656899999999855e-05, 7.652799999999932e-05, 7.654099999999942e-05, 7.64440000000019e-05, 7.655499999999898e-05, 7.648599999999714e-05, 7.655500000000245e-05, 7.65830000000016e-05, 7.650000000000018e-05, 7.65700000000015e-05, 7.66250000000003e-05, 7.668099999999858e-05, 7.641699999999876e-05, 7.654200000000236e-05, 7.668099999999858e-05, 7.661100000000073e-05, 7.648599999999714e-05, 7.658400000000107e-05, 7.665299999999944e-05, 7.65839999999976e-05, 7.641599999999929e-05, 7.655499999999898e-05, 7.665199999999997e-05, 7.652699999999985e-05, 7.670800000000172e-05, 7.643000000000233e-05, 7.654099999999942e-05, 7.641699999999876e-05, 7.650000000000018e-05, 7.641699999999876e-05, 7.65969999999977e-05, 7.644500000000137e-05, 7.65700000000015e-05, 7.641699999999876e-05, 7.670899999999772e-05, 7.647200000000104e-05, 7.648600000000061e-05, 7.64029999999992e-05, 7.661099999999726e-05]</msg>
<status status="PASS" starttime="20201030 18:29:00.374" endtime="20201030 18:29:00.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.369" endtime="20201030 18:29:00.377"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:00.381" endtime="20201030 18:29:00.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.379" endtime="20201030 18:29:00.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.378" endtime="20201030 18:29:00.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.020" endtime="20201030 18:29:00.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.019" endtime="20201030 18:29:00.401"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.410" endtime="20201030 18:29:00.428"></status>
</kw>
<msg timestamp="20201030 18:29:00.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.408" endtime="20201030 18:29:00.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.429" endtime="20201030 18:29:00.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.432" endtime="20201030 18:29:00.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.406" endtime="20201030 18:29:00.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.404" endtime="20201030 18:29:00.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.440" endtime="20201030 18:29:00.728"></status>
</kw>
<msg timestamp="20201030 18:29:00.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022108125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:00.439" endtime="20201030 18:29:00.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022108125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:00.732" endtime="20201030 18:29:00.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.740" endtime="20201030 18:29:00.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.436" endtime="20201030 18:29:00.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.435" endtime="20201030 18:29:00.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:00.746" level="INFO">${RESULT} = [{'diff': 7.722199999999832e-05}, {'diff': 7.768099999999958e-05}, {'diff': 7.743099999999933e-05}, {'diff': 7.749999999999771e-05}, {'diff': 7.745899999999847e-05}, {'diff': 7.770899999999872e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:00.743" endtime="20201030 18:29:00.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:00.752" level="INFO">${ACCURACY} = {'diff': [7.722199999999832e-05, 7.768099999999958e-05, 7.743099999999933e-05, 7.749999999999771e-05, 7.745899999999847e-05, 7.770899999999872e-05, 7.768099999999958e-05, 7.755599999999946e-05, 7.7611...</msg>
<status status="PASS" starttime="20201030 18:29:00.747" endtime="20201030 18:29:00.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.756" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 18:29:00.755" endtime="20201030 18:29:00.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.759" level="INFO">VALUE: [7.722199999999832e-05, 7.768099999999958e-05, 7.743099999999933e-05, 7.749999999999771e-05, 7.745899999999847e-05, 7.770899999999872e-05, 7.768099999999958e-05, 7.755599999999946e-05, 7.761199999999774e-05, 7.751400000000075e-05, 7.75969999999987e-05, 7.748599999999814e-05, 7.761099999999826e-05, 7.770800000000272e-05, 7.737500000000105e-05, 7.758299999999912e-05, 7.768000000000011e-05, 7.741699999999976e-05, 7.742999999999986e-05, 7.748600000000161e-05, 7.754199999999989e-05, 7.76389999999974e-05, 7.763900000000087e-05, 7.756999999999903e-05, 7.76250000000013e-05, 7.743099999999933e-05, 7.752800000000032e-05, 7.761099999999826e-05, 7.745899999999847e-05, 7.743099999999933e-05, 7.76380000000014e-05, 7.755499999999999e-05, 7.742999999999986e-05, 7.750000000000118e-05, 7.752700000000085e-05, 7.741600000000029e-05, 7.75830000000026e-05, 7.755499999999999e-05, 7.766600000000054e-05, 7.756899999999955e-05, 7.750000000000118e-05, 7.743099999999933e-05, 7.759700000000216e-05, 7.75700000000025e-05, 7.768100000000305e-05, 7.752800000000032e-05, 7.768099999999958e-05, 7.744500000000237e-05, 7.759800000000164e-05, 7.758400000000207e-05]</msg>
<status status="PASS" starttime="20201030 18:29:00.757" endtime="20201030 18:29:00.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.752" endtime="20201030 18:29:00.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:00.763" endtime="20201030 18:29:00.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.762" endtime="20201030 18:29:00.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.761" endtime="20201030 18:29:00.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.402" endtime="20201030 18:29:00.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.401" endtime="20201030 18:29:00.784"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.793" endtime="20201030 18:29:00.811"></status>
</kw>
<msg timestamp="20201030 18:29:00.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.791" endtime="20201030 18:29:00.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.813" endtime="20201030 18:29:00.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.815" endtime="20201030 18:29:00.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.789" endtime="20201030 18:29:00.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.787" endtime="20201030 18:29:00.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.824" endtime="20201030 18:29:01.111"></status>
</kw>
<msg timestamp="20201030 18:29:01.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02174975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02182825, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:00.823" endtime="20201030 18:29:01.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02174975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02182825, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:01.115" endtime="20201030 18:29:01.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.124" endtime="20201030 18:29:01.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.820" endtime="20201030 18:29:01.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.818" endtime="20201030 18:29:01.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:01.130" level="INFO">${RESULT} = [{'diff': 7.849999999999871e-05}, {'diff': 7.870899999999972e-05}, {'diff': 7.851399999999828e-05}, {'diff': 7.865300000000144e-05}, {'diff': 7.861099999999926e-05}, {'diff': 7.856900000000056e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:01.127" endtime="20201030 18:29:01.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:01.134" level="INFO">${ACCURACY} = {'diff': [7.849999999999871e-05, 7.870899999999972e-05, 7.851399999999828e-05, 7.865300000000144e-05, 7.861099999999926e-05, 7.856900000000056e-05, 7.861099999999926e-05, 7.859799999999917e-05, 7.8695...</msg>
<status status="PASS" starttime="20201030 18:29:01.131" endtime="20201030 18:29:01.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.139" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 18:29:01.138" endtime="20201030 18:29:01.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.141" level="INFO">VALUE: [7.849999999999871e-05, 7.870899999999972e-05, 7.851399999999828e-05, 7.865300000000144e-05, 7.861099999999926e-05, 7.856900000000056e-05, 7.861099999999926e-05, 7.859799999999917e-05, 7.869500000000015e-05, 7.865299999999797e-05, 7.848599999999914e-05, 7.850000000000218e-05, 7.848599999999914e-05, 7.847199999999957e-05, 7.841600000000129e-05, 7.838899999999815e-05, 7.838900000000162e-05, 7.849999999999871e-05, 7.843100000000033e-05, 7.862499999999883e-05, 7.848599999999914e-05, 7.852800000000132e-05, 7.84169999999973e-05, 7.862499999999883e-05, 7.845899999999947e-05, 7.857000000000003e-05, 7.851399999999828e-05, 7.848599999999914e-05, 7.859799999999917e-05, 7.85839999999996e-05, 7.851400000000175e-05, 7.852699999999838e-05, 7.841599999999782e-05, 7.847199999999957e-05, 7.851400000000175e-05, 7.856899999999709e-05, 7.866600000000154e-05, 7.856900000000056e-05, 7.86250000000023e-05, 7.866700000000101e-05, 7.866700000000101e-05, 7.861100000000273e-05, 7.843100000000033e-05, 7.868100000000058e-05, 7.848699999999861e-05, 7.868100000000058e-05, 7.851399999999828e-05, 7.861199999999874e-05, 7.845900000000294e-05, 7.866700000000101e-05]</msg>
<status status="PASS" starttime="20201030 18:29:01.140" endtime="20201030 18:29:01.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.135" endtime="20201030 18:29:01.143"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:01.146" endtime="20201030 18:29:01.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.145" endtime="20201030 18:29:01.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.143" endtime="20201030 18:29:01.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.785" endtime="20201030 18:29:01.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.784" endtime="20201030 18:29:01.167"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.176" endtime="20201030 18:29:01.195"></status>
</kw>
<msg timestamp="20201030 18:29:01.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.174" endtime="20201030 18:29:01.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.197" endtime="20201030 18:29:01.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.199" endtime="20201030 18:29:01.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.171" endtime="20201030 18:29:01.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.169" endtime="20201030 18:29:01.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.208" endtime="20201030 18:29:01.493"></status>
</kw>
<msg timestamp="20201030 18:29:01.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022808042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022886958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:01.206" endtime="20201030 18:29:01.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022808042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022886958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:01.497" endtime="20201030 18:29:01.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.505" endtime="20201030 18:29:01.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.204" endtime="20201030 18:29:01.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.202" endtime="20201030 18:29:01.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:01.512" level="INFO">${RESULT} = [{'diff': 7.891599999999832e-05}, {'diff': 7.972200000000082e-05}, {'diff': 7.952800000000232e-05}, {'diff': 7.961100000000026e-05}, {'diff': 7.95970000000007e-05}, {'diff': 7.963900000000287e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:01.509" endtime="20201030 18:29:01.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:01.516" level="INFO">${ACCURACY} = {'diff': [7.891599999999832e-05, 7.972200000000082e-05, 7.952800000000232e-05, 7.961100000000026e-05, 7.95970000000007e-05, 7.963900000000287e-05, 7.952799999999885e-05, 7.970899999999725e-05, 7.96810...</msg>
<status status="PASS" starttime="20201030 18:29:01.513" endtime="20201030 18:29:01.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.521" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 18:29:01.519" endtime="20201030 18:29:01.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.524" level="INFO">VALUE: [7.891599999999832e-05, 7.972200000000082e-05, 7.952800000000232e-05, 7.961100000000026e-05, 7.95970000000007e-05, 7.963900000000287e-05, 7.952799999999885e-05, 7.970899999999725e-05, 7.968100000000158e-05, 7.952799999999885e-05, 7.96389999999994e-05, 7.955499999999852e-05, 7.957000000000103e-05, 7.961199999999974e-05, 7.96389999999994e-05, 7.966600000000254e-05, 7.949999999999971e-05, 7.959699999999723e-05, 7.968000000000211e-05, 7.966699999999854e-05, 7.966600000000254e-05, 7.969399999999821e-05, 7.9458000000001e-05, 7.947200000000057e-05, 7.969399999999821e-05, 7.972200000000082e-05, 7.954199999999842e-05, 7.94450000000009e-05, 7.955600000000146e-05, 7.949999999999971e-05, 7.955600000000146e-05, 7.94169999999983e-05, 7.955600000000146e-05, 7.941599999999882e-05, 7.956900000000156e-05, 7.941600000000229e-05, 7.961100000000026e-05, 7.952799999999885e-05, 7.96389999999994e-05, 7.956900000000156e-05, 7.966699999999854e-05, 7.949999999999971e-05, 7.951399999999928e-05, 7.962499999999983e-05, 7.944400000000143e-05, 7.9458000000001e-05, 7.958299999999766e-05, 7.955600000000146e-05, 7.968099999999811e-05, 7.963900000000287e-05]</msg>
<status status="PASS" starttime="20201030 18:29:01.522" endtime="20201030 18:29:01.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.517" endtime="20201030 18:29:01.525"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:01.529" endtime="20201030 18:29:01.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.527" endtime="20201030 18:29:01.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.526" endtime="20201030 18:29:01.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.168" endtime="20201030 18:29:01.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.167" endtime="20201030 18:29:01.549"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.558" endtime="20201030 18:29:01.576"></status>
</kw>
<msg timestamp="20201030 18:29:01.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.556" endtime="20201030 18:29:01.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.577" endtime="20201030 18:29:01.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.580" endtime="20201030 18:29:01.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.554" endtime="20201030 18:29:01.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.552" endtime="20201030 18:29:01.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.589" endtime="20201030 18:29:01.875"></status>
</kw>
<msg timestamp="20201030 18:29:01.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022070556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022151306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:01.587" endtime="20201030 18:29:01.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022070556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022151306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:01.881" endtime="20201030 18:29:01.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.889" endtime="20201030 18:29:01.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.585" endtime="20201030 18:29:01.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.583" endtime="20201030 18:29:01.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:01.895" level="INFO">${RESULT} = [{'diff': 8.074999999999749e-05}, {'diff': 8.042999999999939e-05}, {'diff': 8.069399999999921e-05}, {'diff': 8.051400000000028e-05}, {'diff': 8.05970000000017e-05}, {'diff': 8.061100000000126e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:01.892" endtime="20201030 18:29:01.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:01.900" level="INFO">${ACCURACY} = {'diff': [8.074999999999749e-05, 8.042999999999939e-05, 8.069399999999921e-05, 8.051400000000028e-05, 8.05970000000017e-05, 8.061100000000126e-05, 8.06390000000004e-05, 8.050000000000071e-05, 8.052700...</msg>
<status status="PASS" starttime="20201030 18:29:01.896" endtime="20201030 18:29:01.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.905" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 18:29:01.904" endtime="20201030 18:29:01.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.907" level="INFO">VALUE: [8.074999999999749e-05, 8.042999999999939e-05, 8.069399999999921e-05, 8.051400000000028e-05, 8.05970000000017e-05, 8.061100000000126e-05, 8.06390000000004e-05, 8.050000000000071e-05, 8.052700000000038e-05, 8.044399999999896e-05, 8.047200000000157e-05, 8.04450000000019e-05, 8.050000000000071e-05, 8.054199999999942e-05, 8.050000000000071e-05, 8.041599999999982e-05, 8.058399999999813e-05, 8.052799999999985e-05, 8.05840000000016e-05, 8.045900000000147e-05, 8.044400000000243e-05, 8.070799999999878e-05, 8.056899999999909e-05, 8.047200000000157e-05, 8.04719999999981e-05, 8.055499999999952e-05, 8.058299999999866e-05, 8.070800000000225e-05, 8.056899999999909e-05, 8.052799999999985e-05, 8.051400000000028e-05, 8.068099999999911e-05, 8.04719999999981e-05, 8.051400000000028e-05, 8.04719999999981e-05, 8.065299999999997e-05, 8.068099999999911e-05, 8.056899999999909e-05, 8.066699999999954e-05, 8.06390000000004e-05, 8.070799999999878e-05, 8.041599999999982e-05, 8.056899999999909e-05, 8.056900000000256e-05, 8.054099999999995e-05, 8.073599999999792e-05, 8.0458000000002e-05, 8.070799999999878e-05, 8.038900000000015e-05, 8.057000000000203e-05]</msg>
<status status="PASS" starttime="20201030 18:29:01.906" endtime="20201030 18:29:01.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.901" endtime="20201030 18:29:01.909"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:01.912" endtime="20201030 18:29:01.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.911" endtime="20201030 18:29:01.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.910" endtime="20201030 18:29:01.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.550" endtime="20201030 18:29:01.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.550" endtime="20201030 18:29:01.933"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.942" endtime="20201030 18:29:01.959"></status>
</kw>
<msg timestamp="20201030 18:29:01.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.940" endtime="20201030 18:29:01.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.961" endtime="20201030 18:29:01.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.963" endtime="20201030 18:29:01.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.938" endtime="20201030 18:29:01.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.936" endtime="20201030 18:29:01.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.972" endtime="20201030 18:29:02.263"></status>
</kw>
<msg timestamp="20201030 18:29:02.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021871333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021952917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:01.971" endtime="20201030 18:29:02.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021871333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021952917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:02.272" endtime="20201030 18:29:02.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.291" endtime="20201030 18:29:02.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.968" endtime="20201030 18:29:02.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.967" endtime="20201030 18:29:02.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:02.305" level="INFO">${RESULT} = [{'diff': 8.158399999999913e-05}, {'diff': 8.145799999999953e-05}, {'diff': 8.169400000000021e-05}, {'diff': 8.156900000000009e-05}, {'diff': 8.169499999999968e-05}, {'diff': 8.143000000000039e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:02.298" endtime="20201030 18:29:02.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:02.314" level="INFO">${ACCURACY} = {'diff': [8.158399999999913e-05, 8.145799999999953e-05, 8.169400000000021e-05, 8.156900000000009e-05, 8.169499999999968e-05, 8.143000000000039e-05, 8.167999999999717e-05, 8.166700000000054e-05, 8.1542...</msg>
<status status="PASS" starttime="20201030 18:29:02.307" endtime="20201030 18:29:02.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.323" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 18:29:02.321" endtime="20201030 18:29:02.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.328" level="INFO">VALUE: [8.158399999999913e-05, 8.145799999999953e-05, 8.169400000000021e-05, 8.156900000000009e-05, 8.169499999999968e-05, 8.143000000000039e-05, 8.167999999999717e-05, 8.166700000000054e-05, 8.154200000000042e-05, 8.137500000000158e-05, 8.169400000000021e-05, 8.151400000000128e-05, 8.15840000000026e-05, 8.151400000000128e-05, 8.149999999999824e-05, 8.168100000000011e-05, 8.154200000000042e-05, 8.155599999999999e-05, 8.147300000000204e-05, 8.16659999999976e-05, 8.165199999999803e-05, 8.155599999999999e-05, 8.144399999999996e-05, 8.150000000000171e-05, 8.161100000000227e-05, 8.16109999999988e-05, 8.151399999999781e-05, 8.154200000000042e-05, 8.148600000000214e-05, 8.158299999999966e-05, 8.168100000000011e-05, 8.14719999999991e-05, 8.15840000000026e-05, 8.156999999999956e-05, 8.158399999999913e-05, 8.16390000000014e-05, 8.159800000000217e-05, 8.155599999999999e-05, 8.156900000000009e-05, 8.152800000000085e-05, 8.163800000000193e-05, 8.15970000000027e-05, 8.15970000000027e-05, 8.155500000000052e-05, 8.159699999999923e-05, 8.156900000000009e-05, 8.140300000000072e-05, 8.166700000000054e-05, 8.159699999999923e-05, 8.155500000000052e-05]</msg>
<status status="PASS" starttime="20201030 18:29:02.325" endtime="20201030 18:29:02.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.316" endtime="20201030 18:29:02.331"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:02.338" endtime="20201030 18:29:02.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.335" endtime="20201030 18:29:02.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.333" endtime="20201030 18:29:02.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.934" endtime="20201030 18:29:02.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.933" endtime="20201030 18:29:02.360"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.368" endtime="20201030 18:29:02.389"></status>
</kw>
<msg timestamp="20201030 18:29:02.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:02.367" endtime="20201030 18:29:02.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:02.390" endtime="20201030 18:29:02.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.393" endtime="20201030 18:29:02.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.364" endtime="20201030 18:29:02.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.362" endtime="20201030 18:29:02.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.402" endtime="20201030 18:29:02.686"></status>
</kw>
<msg timestamp="20201030 18:29:02.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024514375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024596875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:02.400" endtime="20201030 18:29:02.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024514375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024596875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:02.691" endtime="20201030 18:29:02.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.699" endtime="20201030 18:29:02.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.398" endtime="20201030 18:29:02.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.396" endtime="20201030 18:29:02.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:02.705" level="INFO">${RESULT} = [{'diff': 8.249999999999924e-05}, {'diff': 8.256999999999709e-05}, {'diff': 8.258400000000013e-05}, {'diff': 8.258400000000013e-05}, {'diff': 8.252799999999838e-05}, {'diff': 8.266700000000154e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:02.702" endtime="20201030 18:29:02.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:02.710" level="INFO">${ACCURACY} = {'diff': [8.249999999999924e-05, 8.256999999999709e-05, 8.258400000000013e-05, 8.258400000000013e-05, 8.252799999999838e-05, 8.266700000000154e-05, 8.252699999999891e-05, 8.244500000000043e-05, 8.2485...</msg>
<status status="PASS" starttime="20201030 18:29:02.706" endtime="20201030 18:29:02.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.714" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 18:29:02.713" endtime="20201030 18:29:02.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.716" level="INFO">VALUE: [8.249999999999924e-05, 8.256999999999709e-05, 8.258400000000013e-05, 8.258400000000013e-05, 8.252799999999838e-05, 8.266700000000154e-05, 8.252699999999891e-05, 8.244500000000043e-05, 8.248599999999967e-05, 8.249999999999924e-05, 8.265199999999903e-05, 8.26529999999985e-05, 8.248599999999967e-05, 8.268000000000164e-05, 8.268000000000164e-05, 8.266699999999808e-05, 8.248599999999967e-05, 8.254100000000195e-05, 8.236099999999955e-05, 8.26109999999998e-05, 8.243100000000086e-05, 8.244499999999697e-05, 8.258400000000013e-05, 8.248599999999967e-05, 8.269500000000068e-05, 8.25979999999997e-05, 8.267999999999817e-05, 8.270800000000078e-05, 8.244400000000096e-05, 8.256900000000109e-05, 8.248599999999967e-05, 8.254100000000195e-05, 8.26529999999985e-05, 8.256900000000109e-05, 8.251400000000228e-05, 8.245800000000053e-05, 8.274999999999949e-05, 8.262499999999937e-05, 8.243100000000086e-05, 8.262499999999937e-05, 8.268100000000111e-05, 8.24720000000001e-05, 8.255600000000099e-05, 8.24170000000013e-05, 8.266700000000154e-05, 8.268100000000111e-05, 8.266699999999808e-05, 8.254200000000142e-05, 8.248599999999967e-05, 8.244400000000096e-05]</msg>
<status status="PASS" starttime="20201030 18:29:02.715" endtime="20201030 18:29:02.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.710" endtime="20201030 18:29:02.719"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:02.722" endtime="20201030 18:29:02.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.721" endtime="20201030 18:29:02.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.720" endtime="20201030 18:29:02.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.361" endtime="20201030 18:29:02.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.360" endtime="20201030 18:29:02.743"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.751" endtime="20201030 18:29:02.770"></status>
</kw>
<msg timestamp="20201030 18:29:02.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:02.750" endtime="20201030 18:29:02.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:02.771" endtime="20201030 18:29:02.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.774" endtime="20201030 18:29:02.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.747" endtime="20201030 18:29:02.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.745" endtime="20201030 18:29:02.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.783" endtime="20201030 18:29:03.071"></status>
</kw>
<msg timestamp="20201030 18:29:03.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022047736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022130722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:02.781" endtime="20201030 18:29:03.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022047736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022130722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:03.080" endtime="20201030 18:29:03.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.098" endtime="20201030 18:29:03.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.779" endtime="20201030 18:29:03.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.777" endtime="20201030 18:29:03.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:03.112" level="INFO">${RESULT} = [{'diff': 8.298600000000017e-05}, {'diff': 8.358300000000166e-05}, {'diff': 8.356999999999809e-05}, {'diff': 8.355599999999852e-05}, {'diff': 8.351399999999981e-05}, {'diff': 8.368099999999865e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:03.105" endtime="20201030 18:29:03.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:03.123" level="INFO">${ACCURACY} = {'diff': [8.298600000000017e-05, 8.358300000000166e-05, 8.356999999999809e-05, 8.355599999999852e-05, 8.351399999999981e-05, 8.368099999999865e-05, 8.348600000000067e-05, 8.357000000000156e-05, 8.3417...</msg>
<status status="PASS" starttime="20201030 18:29:03.114" endtime="20201030 18:29:03.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.132" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 18:29:03.130" endtime="20201030 18:29:03.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.137" level="INFO">VALUE: [8.298600000000017e-05, 8.358300000000166e-05, 8.356999999999809e-05, 8.355599999999852e-05, 8.351399999999981e-05, 8.368099999999865e-05, 8.348600000000067e-05, 8.357000000000156e-05, 8.34170000000023e-05, 8.345800000000153e-05, 8.359699999999776e-05, 8.351299999999687e-05, 8.36110000000008e-05, 8.365200000000003e-05, 8.352799999999938e-05, 8.365200000000003e-05, 8.350000000000024e-05, 8.357000000000156e-05, 8.359699999999776e-05, 8.359700000000123e-05, 8.355600000000199e-05, 8.362500000000037e-05, 8.351400000000328e-05, 8.343100000000186e-05, 8.36110000000008e-05, 8.352799999999938e-05, 8.362500000000037e-05, 8.367999999999917e-05, 8.36529999999995e-05, 8.352799999999938e-05, 8.351299999999687e-05, 8.363800000000046e-05, 8.356900000000209e-05, 8.345799999999806e-05, 8.352699999999991e-05, 8.352699999999991e-05, 8.358300000000166e-05, 8.354099999999948e-05, 8.356900000000209e-05, 8.34720000000011e-05, 8.369399999999874e-05, 8.361099999999733e-05, 8.366700000000254e-05, 8.362500000000037e-05, 8.356999999999809e-05, 8.354199999999895e-05, 8.358400000000113e-05, 8.347300000000057e-05, 8.341699999999883e-05, 8.344399999999849e-05]</msg>
<status status="PASS" starttime="20201030 18:29:03.134" endtime="20201030 18:29:03.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.124" endtime="20201030 18:29:03.140"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:03.148" endtime="20201030 18:29:03.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.145" endtime="20201030 18:29:03.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.142" endtime="20201030 18:29:03.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.744" endtime="20201030 18:29:03.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.743" endtime="20201030 18:29:03.170"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.178" endtime="20201030 18:29:03.197"></status>
</kw>
<msg timestamp="20201030 18:29:03.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.177" endtime="20201030 18:29:03.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.199" endtime="20201030 18:29:03.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.201" endtime="20201030 18:29:03.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.174" endtime="20201030 18:29:03.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.172" endtime="20201030 18:29:03.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.210" endtime="20201030 18:29:03.497"></status>
</kw>
<msg timestamp="20201030 18:29:03.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022347194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022432042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:03.209" endtime="20201030 18:29:03.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022347194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022432042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:03.501" endtime="20201030 18:29:03.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.509" endtime="20201030 18:29:03.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.206" endtime="20201030 18:29:03.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.204" endtime="20201030 18:29:03.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:03.516" level="INFO">${RESULT} = [{'diff': 8.484799999999848e-05}, {'diff': 8.455599999999952e-05}, {'diff': 8.466700000000008e-05}, {'diff': 8.455599999999952e-05}, {'diff': 8.450000000000124e-05}, {'diff': 8.46660000000006e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:03.512" endtime="20201030 18:29:03.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:03.520" level="INFO">${ACCURACY} = {'diff': [8.484799999999848e-05, 8.455599999999952e-05, 8.466700000000008e-05, 8.455599999999952e-05, 8.450000000000124e-05, 8.46660000000006e-05, 8.463900000000094e-05, 8.459699999999876e-05, 8.47219...</msg>
<status status="PASS" starttime="20201030 18:29:03.517" endtime="20201030 18:29:03.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.524" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 18:29:03.523" endtime="20201030 18:29:03.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.527" level="INFO">VALUE: [8.484799999999848e-05, 8.455599999999952e-05, 8.466700000000008e-05, 8.455599999999952e-05, 8.450000000000124e-05, 8.46660000000006e-05, 8.463900000000094e-05, 8.459699999999876e-05, 8.472199999999888e-05, 8.468099999999965e-05, 8.462500000000137e-05, 8.455599999999952e-05, 8.463900000000094e-05, 8.469499999999922e-05, 8.455599999999952e-05, 8.469499999999922e-05, 8.450000000000124e-05, 8.466700000000008e-05, 8.441699999999983e-05, 8.450000000000124e-05, 8.4459000000002e-05, 8.465200000000103e-05, 8.441699999999983e-05, 8.459700000000223e-05, 8.444399999999949e-05, 8.470799999999931e-05, 8.46249999999979e-05, 8.469399999999974e-05, 8.452800000000038e-05, 8.465299999999704e-05, 8.465299999999704e-05, 8.454199999999995e-05, 8.469399999999974e-05, 8.452800000000038e-05, 8.451400000000081e-05, 8.46249999999979e-05, 8.452800000000038e-05, 8.455599999999952e-05, 8.444499999999897e-05, 8.445799999999906e-05, 8.458399999999866e-05, 8.459699999999876e-05, 8.454199999999995e-05, 8.44720000000021e-05, 8.450000000000124e-05, 8.445799999999906e-05, 8.468000000000017e-05, 8.447199999999863e-05, 8.469399999999974e-05, 8.448600000000167e-05]</msg>
<status status="PASS" starttime="20201030 18:29:03.525" endtime="20201030 18:29:03.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.521" endtime="20201030 18:29:03.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:03.537" endtime="20201030 18:29:03.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.536" endtime="20201030 18:29:03.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.535" endtime="20201030 18:29:03.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.171" endtime="20201030 18:29:03.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.170" endtime="20201030 18:29:03.558"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.567" endtime="20201030 18:29:03.586"></status>
</kw>
<msg timestamp="20201030 18:29:03.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.565" endtime="20201030 18:29:03.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.588" endtime="20201030 18:29:03.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.590" endtime="20201030 18:29:03.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.563" endtime="20201030 18:29:03.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.561" endtime="20201030 18:29:03.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.599" endtime="20201030 18:29:03.886"></status>
</kw>
<msg timestamp="20201030 18:29:03.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022972542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023057472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:03.598" endtime="20201030 18:29:03.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022972542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023057472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:03.890" endtime="20201030 18:29:03.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.898" endtime="20201030 18:29:03.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.595" endtime="20201030 18:29:03.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.593" endtime="20201030 18:29:03.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:03.905" level="INFO">${RESULT} = [{'diff': 8.493000000000042e-05}, {'diff': 8.545800000000006e-05}, {'diff': 8.555600000000052e-05}, {'diff': 8.56530000000015e-05}, {'diff': 8.561099999999933e-05}, {'diff': 8.557000000000009e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:03.901" endtime="20201030 18:29:03.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:03.909" level="INFO">${ACCURACY} = {'diff': [8.493000000000042e-05, 8.545800000000006e-05, 8.555600000000052e-05, 8.56530000000015e-05, 8.561099999999933e-05, 8.557000000000009e-05, 8.545800000000006e-05, 8.544499999999997e-05, 8.55560...</msg>
<status status="PASS" starttime="20201030 18:29:03.906" endtime="20201030 18:29:03.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.913" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 18:29:03.912" endtime="20201030 18:29:03.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.916" level="INFO">VALUE: [8.493000000000042e-05, 8.545800000000006e-05, 8.555600000000052e-05, 8.56530000000015e-05, 8.561099999999933e-05, 8.557000000000009e-05, 8.545800000000006e-05, 8.544499999999997e-05, 8.555600000000052e-05, 8.549999999999877e-05, 8.54859999999992e-05, 8.56110000000028e-05, 8.537500000000212e-05, 8.566700000000108e-05, 8.547199999999963e-05, 8.555500000000105e-05, 8.554099999999801e-05, 8.563899999999847e-05, 8.554200000000095e-05, 8.563900000000194e-05, 8.566700000000108e-05, 8.572299999999936e-05, 8.555600000000052e-05, 8.565299999999804e-05, 8.541700000000083e-05, 8.558400000000313e-05, 8.554199999999748e-05, 8.54859999999992e-05, 8.562500000000237e-05, 8.545899999999954e-05, 8.56119999999988e-05, 8.56110000000028e-05, 8.558300000000019e-05, 8.544400000000049e-05, 8.544400000000049e-05, 8.551400000000181e-05, 8.551399999999834e-05, 8.549999999999877e-05, 8.545800000000006e-05, 8.552799999999791e-05, 8.556900000000062e-05, 8.568100000000065e-05, 8.541700000000083e-05, 8.566700000000108e-05, 8.562500000000237e-05, 8.559799999999923e-05, 8.558300000000019e-05, 8.536100000000255e-05, 8.54310000000004e-05, 8.56249999999989e-05]</msg>
<status status="PASS" starttime="20201030 18:29:03.914" endtime="20201030 18:29:03.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.909" endtime="20201030 18:29:03.918"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:03.921" endtime="20201030 18:29:03.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.920" endtime="20201030 18:29:03.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.919" endtime="20201030 18:29:03.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.559" endtime="20201030 18:29:03.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.558" endtime="20201030 18:29:03.942"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.951" endtime="20201030 18:29:03.969"></status>
</kw>
<msg timestamp="20201030 18:29:03.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.949" endtime="20201030 18:29:03.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.970" endtime="20201030 18:29:03.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.973" endtime="20201030 18:29:03.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.947" endtime="20201030 18:29:03.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.944" endtime="20201030 18:29:03.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.981" endtime="20201030 18:29:04.267"></status>
</kw>
<msg timestamp="20201030 18:29:04.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021836056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021922014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:03.980" endtime="20201030 18:29:04.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021836056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021922014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:04.272" endtime="20201030 18:29:04.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.280" endtime="20201030 18:29:04.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.977" endtime="20201030 18:29:04.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.976" endtime="20201030 18:29:04.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:04.287" level="INFO">${RESULT} = [{'diff': 8.595800000000056e-05}, {'diff': 8.669500000000122e-05}, {'diff': 8.648699999999968e-05}, {'diff': 8.658400000000066e-05}, {'diff': 8.659800000000023e-05}, {'diff': 8.654199999999848e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:04.283" endtime="20201030 18:29:04.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:04.292" level="INFO">${ACCURACY} = {'diff': [8.595800000000056e-05, 8.669500000000122e-05, 8.648699999999968e-05, 8.658400000000066e-05, 8.659800000000023e-05, 8.654199999999848e-05, 8.650000000000324e-05, 8.661100000000033e-05, 8.6665...</msg>
<status status="PASS" starttime="20201030 18:29:04.288" endtime="20201030 18:29:04.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.296" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 18:29:04.295" endtime="20201030 18:29:04.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.299" level="INFO">VALUE: [8.595800000000056e-05, 8.669500000000122e-05, 8.648699999999968e-05, 8.658400000000066e-05, 8.659800000000023e-05, 8.654199999999848e-05, 8.650000000000324e-05, 8.661100000000033e-05, 8.666599999999913e-05, 8.640200000000278e-05, 8.666599999999913e-05, 8.666599999999913e-05, 8.644400000000149e-05, 8.66249999999999e-05, 8.652800000000238e-05, 8.644400000000149e-05, 8.665299999999904e-05, 8.657000000000109e-05, 8.655599999999805e-05, 8.645900000000054e-05, 8.66249999999999e-05, 8.655599999999805e-05, 8.654200000000195e-05, 8.665299999999904e-05, 8.651400000000281e-05, 8.669400000000174e-05, 8.66530000000025e-05, 8.661100000000033e-05, 8.66249999999999e-05, 8.643000000000192e-05, 8.655500000000205e-05, 8.663899999999947e-05, 8.669400000000174e-05, 8.663899999999947e-05, 8.662500000000337e-05, 8.666700000000208e-05, 8.647199999999716e-05, 8.64860000000002e-05, 8.66249999999999e-05, 8.658399999999719e-05, 8.663899999999947e-05, 8.66669999999986e-05, 8.666700000000208e-05, 8.645900000000054e-05, 8.66119999999998e-05, 8.666599999999913e-05, 8.663799999999999e-05, 8.651399999999934e-05, 8.66249999999999e-05, 8.645799999999759e-05]</msg>
<status status="PASS" starttime="20201030 18:29:04.297" endtime="20201030 18:29:04.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.292" endtime="20201030 18:29:04.300"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:04.303" endtime="20201030 18:29:04.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.302" endtime="20201030 18:29:04.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.301" endtime="20201030 18:29:04.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.943" endtime="20201030 18:29:04.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.942" endtime="20201030 18:29:04.324"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.333" endtime="20201030 18:29:04.351"></status>
</kw>
<msg timestamp="20201030 18:29:04.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:04.331" endtime="20201030 18:29:04.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:04.353" endtime="20201030 18:29:04.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.355" endtime="20201030 18:29:04.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.329" endtime="20201030 18:29:04.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.327" endtime="20201030 18:29:04.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.364" endtime="20201030 18:29:04.651"></status>
</kw>
<msg timestamp="20201030 18:29:04.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021945167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022032125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:04.363" endtime="20201030 18:29:04.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021945167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022032125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:04.656" endtime="20201030 18:29:04.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.664" endtime="20201030 18:29:04.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.360" endtime="20201030 18:29:04.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.358" endtime="20201030 18:29:04.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:04.670" level="INFO">${RESULT} = [{'diff': 8.695799999999809e-05}, {'diff': 8.751400000000034e-05}, {'diff': 8.765300000000004e-05}, {'diff': 8.762499999999743e-05}, {'diff': 8.752799999999991e-05}, {'diff': 8.752799999999991e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:04.667" endtime="20201030 18:29:04.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:04.674" level="INFO">${ACCURACY} = {'diff': [8.695799999999809e-05, 8.751400000000034e-05, 8.765300000000004e-05, 8.762499999999743e-05, 8.752799999999991e-05, 8.752799999999991e-05, 8.750000000000077e-05, 8.741699999999936e-05, 8.7444...</msg>
<status status="PASS" starttime="20201030 18:29:04.671" endtime="20201030 18:29:04.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.679" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 18:29:04.678" endtime="20201030 18:29:04.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.681" level="INFO">VALUE: [8.695799999999809e-05, 8.751400000000034e-05, 8.765300000000004e-05, 8.762499999999743e-05, 8.752799999999991e-05, 8.752799999999991e-05, 8.750000000000077e-05, 8.741699999999936e-05, 8.74449999999985e-05, 8.750000000000077e-05, 8.744399999999902e-05, 8.742999999999945e-05, 8.752699999999697e-05, 8.765300000000004e-05, 8.761100000000133e-05, 8.76799999999997e-05, 8.744399999999902e-05, 8.745799999999859e-05, 8.751399999999687e-05, 8.769500000000222e-05, 8.747199999999816e-05, 8.755499999999958e-05, 8.74310000000024e-05, 8.76669999999996e-05, 8.745900000000154e-05, 8.770900000000179e-05, 8.769399999999927e-05, 8.769499999999875e-05, 8.74730000000011e-05, 8.76799999999997e-05, 8.763799999999752e-05, 8.748599999999773e-05, 8.750000000000077e-05, 8.750000000000077e-05, 8.756999999999862e-05, 8.763900000000047e-05, 8.758299999999872e-05, 8.759699999999829e-05, 8.752799999999991e-05, 8.761099999999786e-05, 8.74860000000012e-05, 8.758299999999872e-05, 8.758400000000166e-05, 8.76250000000009e-05, 8.765300000000004e-05, 8.76669999999996e-05, 8.74860000000012e-05, 8.765300000000004e-05, 8.755499999999958e-05, 8.756900000000262e-05]</msg>
<status status="PASS" starttime="20201030 18:29:04.680" endtime="20201030 18:29:04.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.675" endtime="20201030 18:29:04.683"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:04.686" endtime="20201030 18:29:04.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.685" endtime="20201030 18:29:04.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.684" endtime="20201030 18:29:04.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.325" endtime="20201030 18:29:04.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.324" endtime="20201030 18:29:04.707"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.716" endtime="20201030 18:29:04.734"></status>
</kw>
<msg timestamp="20201030 18:29:04.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:04.714" endtime="20201030 18:29:04.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:04.736" endtime="20201030 18:29:04.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.738" endtime="20201030 18:29:04.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.712" endtime="20201030 18:29:04.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.709" endtime="20201030 18:29:04.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.747" endtime="20201030 18:29:05.034"></status>
</kw>
<msg timestamp="20201030 18:29:05.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022751514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022839847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:04.746" endtime="20201030 18:29:05.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022751514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022839847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.038" endtime="20201030 18:29:05.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.047" endtime="20201030 18:29:05.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.743" endtime="20201030 18:29:05.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.741" endtime="20201030 18:29:05.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:05.053" level="INFO">${RESULT} = [{'diff': 8.833299999999947e-05}, {'diff': 8.855500000000058e-05}, {'diff': 8.850000000000177e-05}, {'diff': 8.840300000000079e-05}, {'diff': 8.869499999999975e-05}, {'diff': 8.845899999999907e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:05.050" endtime="20201030 18:29:05.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:05.057" level="INFO">${ACCURACY} = {'diff': [8.833299999999947e-05, 8.855500000000058e-05, 8.850000000000177e-05, 8.840300000000079e-05, 8.869499999999975e-05, 8.845899999999907e-05, 8.859699999999929e-05, 8.869499999999975e-05, 8.8555...</msg>
<status status="PASS" starttime="20201030 18:29:05.054" endtime="20201030 18:29:05.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.062" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 18:29:05.061" endtime="20201030 18:29:05.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.065" level="INFO">VALUE: [8.833299999999947e-05, 8.855500000000058e-05, 8.850000000000177e-05, 8.840300000000079e-05, 8.869499999999975e-05, 8.845899999999907e-05, 8.859699999999929e-05, 8.869499999999975e-05, 8.855500000000058e-05, 8.845900000000254e-05, 8.859799999999876e-05, 8.844400000000002e-05, 8.858299999999972e-05, 8.852700000000144e-05, 8.842999999999698e-05, 8.870799999999984e-05, 8.8638999999998e-05, 8.848599999999873e-05, 8.858299999999972e-05, 8.84860000000022e-05, 8.858299999999972e-05, 8.8638999999998e-05, 8.844400000000002e-05, 8.856999999999962e-05, 8.854200000000048e-05, 8.844500000000297e-05, 8.84730000000021e-05, 8.858399999999919e-05, 8.858399999999919e-05, 8.86670000000006e-05, 8.856900000000015e-05, 8.844400000000002e-05, 8.873599999999898e-05, 8.862499999999843e-05, 8.844400000000002e-05, 8.861099999999886e-05, 8.861100000000233e-05, 8.858299999999972e-05, 8.850000000000177e-05, 8.86800000000007e-05, 8.861099999999886e-05, 8.84860000000022e-05, 8.863900000000147e-05, 8.854199999999701e-05, 8.869499999999975e-05, 8.859699999999929e-05, 8.845899999999907e-05, 8.859800000000223e-05, 8.855500000000058e-05, 8.854200000000048e-05]</msg>
<status status="PASS" starttime="20201030 18:29:05.063" endtime="20201030 18:29:05.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.058" endtime="20201030 18:29:05.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:05.070" endtime="20201030 18:29:05.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.068" endtime="20201030 18:29:05.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.067" endtime="20201030 18:29:05.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.708" endtime="20201030 18:29:05.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.707" endtime="20201030 18:29:05.091"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.099" endtime="20201030 18:29:05.119"></status>
</kw>
<msg timestamp="20201030 18:29:05.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.098" endtime="20201030 18:29:05.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.120" endtime="20201030 18:29:05.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.122" endtime="20201030 18:29:05.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.095" endtime="20201030 18:29:05.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.093" endtime="20201030 18:29:05.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.132" endtime="20201030 18:29:05.416"></status>
</kw>
<msg timestamp="20201030 18:29:05.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021760472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021850222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.130" endtime="20201030 18:29:05.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021760472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021850222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.420" endtime="20201030 18:29:05.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.429" endtime="20201030 18:29:05.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.128" endtime="20201030 18:29:05.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.126" endtime="20201030 18:29:05.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:05.435" level="INFO">${RESULT} = [{'diff': 8.974999999999955e-05}, {'diff': 8.961099999999986e-05}, {'diff': 8.955600000000105e-05}, {'diff': 8.959700000000029e-05}, {'diff': 8.943100000000093e-05}, {'diff': 8.952799999999844e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:05.432" endtime="20201030 18:29:05.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:05.440" level="INFO">${ACCURACY} = {'diff': [8.974999999999955e-05, 8.961099999999986e-05, 8.955600000000105e-05, 8.959700000000029e-05, 8.943100000000093e-05, 8.952799999999844e-05, 8.968100000000118e-05, 8.969500000000075e-05, 8.9639...</msg>
<status status="PASS" starttime="20201030 18:29:05.436" endtime="20201030 18:29:05.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.445" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 18:29:05.443" endtime="20201030 18:29:05.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.447" level="INFO">VALUE: [8.974999999999955e-05, 8.961099999999986e-05, 8.955600000000105e-05, 8.959700000000029e-05, 8.943100000000093e-05, 8.952799999999844e-05, 8.968100000000118e-05, 8.969500000000075e-05, 8.963900000000247e-05, 8.961099999999986e-05, 8.956900000000115e-05, 8.954100000000201e-05, 8.959700000000029e-05, 8.947200000000016e-05, 8.96800000000017e-05, 8.94999999999993e-05, 8.961099999999986e-05, 8.958400000000019e-05, 8.96670000000016e-05, 8.947200000000016e-05, 8.951399999999887e-05, 8.948599999999973e-05, 8.9638999999999e-05, 8.972200000000041e-05, 8.9638999999999e-05, 8.94450000000005e-05, 8.947299999999964e-05, 8.94450000000005e-05, 8.96939999999978e-05, 8.94999999999993e-05, 8.952699999999897e-05, 8.967999999999823e-05, 8.947199999999669e-05, 8.969400000000127e-05, 8.968099999999771e-05, 8.961099999999986e-05, 8.968100000000118e-05, 8.952799999999844e-05, 8.941700000000136e-05, 8.965299999999857e-05, 8.970800000000084e-05, 8.943099999999746e-05, 8.94450000000005e-05, 8.951300000000287e-05, 8.959700000000029e-05, 8.954199999999801e-05, 8.961099999999986e-05, 8.952800000000191e-05, 8.943100000000093e-05, 8.947200000000016e-05]</msg>
<status status="PASS" starttime="20201030 18:29:05.446" endtime="20201030 18:29:05.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.441" endtime="20201030 18:29:05.448"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:05.452" endtime="20201030 18:29:05.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.451" endtime="20201030 18:29:05.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.449" endtime="20201030 18:29:05.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.091" endtime="20201030 18:29:05.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.091" endtime="20201030 18:29:05.473"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.481" endtime="20201030 18:29:05.500"></status>
</kw>
<msg timestamp="20201030 18:29:05.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.480" endtime="20201030 18:29:05.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.502" endtime="20201030 18:29:05.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.504" endtime="20201030 18:29:05.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.477" endtime="20201030 18:29:05.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.475" endtime="20201030 18:29:05.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.513" endtime="20201030 18:29:05.799"></status>
</kw>
<msg timestamp="20201030 18:29:05.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022363847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.512" endtime="20201030 18:29:05.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022363847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.804" endtime="20201030 18:29:05.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.812" endtime="20201030 18:29:05.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.509" endtime="20201030 18:29:05.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.508" endtime="20201030 18:29:05.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:05.818" level="INFO">${RESULT} = [{'diff': 9.08329999999985e-05}, {'diff': 9.054200000000248e-05}, {'diff': 9.055599999999858e-05}, {'diff': 9.062500000000043e-05}, {'diff': 9.052799999999944e-05}, {'diff': 9.045800000000159e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:05.815" endtime="20201030 18:29:05.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:05.822" level="INFO">${ACCURACY} = {'diff': [9.08329999999985e-05, 9.054200000000248e-05, 9.055599999999858e-05, 9.062500000000043e-05, 9.052799999999944e-05, 9.045800000000159e-05, 9.038899999999975e-05, 9.044499999999803e-05, 9.05559...</msg>
<status status="PASS" starttime="20201030 18:29:05.819" endtime="20201030 18:29:05.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.827" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 18:29:05.826" endtime="20201030 18:29:05.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.829" level="INFO">VALUE: [9.08329999999985e-05, 9.054200000000248e-05, 9.055599999999858e-05, 9.062500000000043e-05, 9.052799999999944e-05, 9.045800000000159e-05, 9.038899999999975e-05, 9.044499999999803e-05, 9.055599999999858e-05, 9.057000000000162e-05, 9.047300000000064e-05, 9.069499999999828e-05, 9.056999999999815e-05, 9.052799999999944e-05, 9.066599999999966e-05, 9.06939999999988e-05, 9.041599999999941e-05, 9.056900000000215e-05, 9.051399999999987e-05, 9.055499999999911e-05, 9.06939999999988e-05, 9.054199999999901e-05, 9.040299999999932e-05, 9.069500000000175e-05, 9.052799999999944e-05, 9.070800000000184e-05, 9.052799999999944e-05, 9.067999999999923e-05, 9.056900000000215e-05, 9.047300000000064e-05, 9.043100000000193e-05, 9.065299999999957e-05, 9.05130000000004e-05, 9.061099999999739e-05, 9.059700000000129e-05, 9.062500000000043e-05, 9.045799999999812e-05, 9.0639e-05, 9.05000000000003e-05, 9.043000000000245e-05, 9.0639e-05, 9.066699999999914e-05, 9.052800000000291e-05, 9.04450000000015e-05, 9.062500000000043e-05, 9.048599999999726e-05, 9.043100000000193e-05, 9.059800000000076e-05, 9.06520000000001e-05, 9.054199999999901e-05]</msg>
<status status="PASS" starttime="20201030 18:29:05.828" endtime="20201030 18:29:05.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.823" endtime="20201030 18:29:05.831"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:05.834" endtime="20201030 18:29:05.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.833" endtime="20201030 18:29:05.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.832" endtime="20201030 18:29:05.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.474" endtime="20201030 18:29:05.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.473" endtime="20201030 18:29:05.855"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.864" endtime="20201030 18:29:05.886"></status>
</kw>
<msg timestamp="20201030 18:29:05.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.862" endtime="20201030 18:29:05.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.887" endtime="20201030 18:29:05.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.890" endtime="20201030 18:29:05.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.860" endtime="20201030 18:29:05.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.858" endtime="20201030 18:29:05.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.899" endtime="20201030 18:29:06.184"></status>
</kw>
<msg timestamp="20201030 18:29:06.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025501611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025593139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.897" endtime="20201030 18:29:06.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025501611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025593139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:06.188" endtime="20201030 18:29:06.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.197" endtime="20201030 18:29:06.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.895" endtime="20201030 18:29:06.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.893" endtime="20201030 18:29:06.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:06.204" level="INFO">${RESULT} = [{'diff': 9.152800000000044e-05}, {'diff': 9.168099999999971e-05}, {'diff': 9.166700000000014e-05}, {'diff': 9.148600000000173e-05}, {'diff': 9.145800000000259e-05}, {'diff': 9.144400000000302e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:06.201" endtime="20201030 18:29:06.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:06.208" level="INFO">${ACCURACY} = {'diff': [9.152800000000044e-05, 9.168099999999971e-05, 9.166700000000014e-05, 9.148600000000173e-05, 9.145800000000259e-05, 9.144400000000302e-05, 9.166600000000066e-05, 9.170800000000284e-05, 9.1458...</msg>
<status status="PASS" starttime="20201030 18:29:06.205" endtime="20201030 18:29:06.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.213" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 18:29:06.212" endtime="20201030 18:29:06.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.216" level="INFO">VALUE: [9.152800000000044e-05, 9.168099999999971e-05, 9.166700000000014e-05, 9.148600000000173e-05, 9.145800000000259e-05, 9.144400000000302e-05, 9.166600000000066e-05, 9.170800000000284e-05, 9.145800000000259e-05, 9.159700000000229e-05, 9.145800000000259e-05, 9.166700000000014e-05, 9.161100000000186e-05, 9.155600000000305e-05, 9.16529999999971e-05, 9.170899999999885e-05, 9.156999999999915e-05, 9.156999999999915e-05, 9.14589999999986e-05, 9.148599999999826e-05, 9.144499999999903e-05, 9.161099999999839e-05, 9.148600000000173e-05, 9.158299999999925e-05, 9.140200000000084e-05, 9.144399999999955e-05, 9.170799999999937e-05, 9.151400000000087e-05, 9.145800000000259e-05, 9.152800000000044e-05, 9.166700000000014e-05, 9.143100000000293e-05, 9.152800000000044e-05, 9.147200000000216e-05, 9.158400000000219e-05, 9.173600000000198e-05, 9.15139999999974e-05, 9.161099999999839e-05, 9.169499999999928e-05, 9.166700000000014e-05, 9.142999999999998e-05, 9.142999999999998e-05, 9.156899999999968e-05, 9.14719999999987e-05, 9.141699999999989e-05, 9.151400000000087e-05, 9.14719999999987e-05, 9.170799999999937e-05, 9.168099999999971e-05, 9.165300000000057e-05]</msg>
<status status="PASS" starttime="20201030 18:29:06.214" endtime="20201030 18:29:06.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.209" endtime="20201030 18:29:06.218"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:06.221" endtime="20201030 18:29:06.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.220" endtime="20201030 18:29:06.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.219" endtime="20201030 18:29:06.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.856" endtime="20201030 18:29:06.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.855" endtime="20201030 18:29:06.242"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.251" endtime="20201030 18:29:06.269"></status>
</kw>
<msg timestamp="20201030 18:29:06.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.249" endtime="20201030 18:29:06.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.271" endtime="20201030 18:29:06.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.273" endtime="20201030 18:29:06.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.247" endtime="20201030 18:29:06.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.244" endtime="20201030 18:29:06.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.283" endtime="20201030 18:29:06.568"></status>
</kw>
<msg timestamp="20201030 18:29:06.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021793111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021885042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:06.281" endtime="20201030 18:29:06.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021793111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021885042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:06.572" endtime="20201030 18:29:06.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.580" endtime="20201030 18:29:06.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.278" endtime="20201030 18:29:06.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.277" endtime="20201030 18:29:06.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:06.587" level="INFO">${RESULT} = [{'diff': 9.193099999999996e-05}, {'diff': 9.238800000000227e-05}, {'diff': 9.269399999999733e-05}, {'diff': 9.259699999999982e-05}, {'diff': 9.255500000000111e-05}, {'diff': 9.259699999999982e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:06.584" endtime="20201030 18:29:06.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:06.592" level="INFO">${ACCURACY} = {'diff': [9.193099999999996e-05, 9.238800000000227e-05, 9.269399999999733e-05, 9.259699999999982e-05, 9.255500000000111e-05, 9.259699999999982e-05, 9.244400000000055e-05, 9.262499999999896e-05, 9.2556...</msg>
<status status="PASS" starttime="20201030 18:29:06.588" endtime="20201030 18:29:06.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.596" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 18:29:06.595" endtime="20201030 18:29:06.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.599" level="INFO">VALUE: [9.193099999999996e-05, 9.238800000000227e-05, 9.269399999999733e-05, 9.259699999999982e-05, 9.255500000000111e-05, 9.259699999999982e-05, 9.244400000000055e-05, 9.262499999999896e-05, 9.255600000000058e-05, 9.262499999999896e-05, 9.251400000000187e-05, 9.255500000000111e-05, 9.24589999999996e-05, 9.243100000000046e-05, 9.247300000000264e-05, 9.243100000000046e-05, 9.257000000000015e-05, 9.257000000000015e-05, 9.251299999999893e-05, 9.266600000000166e-05, 9.25139999999984e-05, 9.24719999999997e-05, 9.248599999999926e-05, 9.269500000000028e-05, 9.25139999999984e-05, 9.252800000000144e-05, 9.247200000000316e-05, 9.24719999999997e-05, 9.270800000000037e-05, 9.270899999999985e-05, 9.269500000000028e-05, 9.265300000000157e-05, 9.262500000000243e-05, 9.256899999999721e-05, 9.24589999999996e-05, 9.244500000000003e-05, 9.256900000000068e-05, 9.261099999999939e-05, 9.254200000000101e-05, 9.26659999999982e-05, 9.254100000000154e-05, 9.26529999999981e-05, 9.258300000000025e-05, 9.258300000000025e-05, 9.244500000000003e-05, 9.270899999999985e-05, 9.254200000000101e-05, 9.254199999999754e-05, 9.268100000000071e-05, 9.25139999999984e-05]</msg>
<status status="PASS" starttime="20201030 18:29:06.597" endtime="20201030 18:29:06.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.593" endtime="20201030 18:29:06.600"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:06.604" endtime="20201030 18:29:06.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.602" endtime="20201030 18:29:06.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.601" endtime="20201030 18:29:06.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.243" endtime="20201030 18:29:06.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.242" endtime="20201030 18:29:06.624"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.633" endtime="20201030 18:29:06.651"></status>
</kw>
<msg timestamp="20201030 18:29:06.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.631" endtime="20201030 18:29:06.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.653" endtime="20201030 18:29:06.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.656" endtime="20201030 18:29:06.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.629" endtime="20201030 18:29:06.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.627" endtime="20201030 18:29:06.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.664" endtime="20201030 18:29:06.954"></status>
</kw>
<msg timestamp="20201030 18:29:06.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021900694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021994097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:06.663" endtime="20201030 18:29:06.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021900694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021994097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:06.958" endtime="20201030 18:29:06.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.966" endtime="20201030 18:29:06.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.660" endtime="20201030 18:29:06.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.659" endtime="20201030 18:29:06.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:06.973" level="INFO">${RESULT} = [{'diff': 9.340300000000232e-05}, {'diff': 9.342999999999851e-05}, {'diff': 9.34720000000007e-05}, {'diff': 9.349999999999983e-05}, {'diff': 9.357000000000115e-05}, {'diff': 9.348600000000026e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:06.970" endtime="20201030 18:29:06.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:06.977" level="INFO">${ACCURACY} = {'diff': [9.340300000000232e-05, 9.342999999999851e-05, 9.34720000000007e-05, 9.349999999999983e-05, 9.357000000000115e-05, 9.348600000000026e-05, 9.358400000000072e-05, 9.357000000000115e-05, 9.34450...</msg>
<status status="PASS" starttime="20201030 18:29:06.974" endtime="20201030 18:29:06.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.981" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 18:29:06.980" endtime="20201030 18:29:06.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.984" level="INFO">VALUE: [9.340300000000232e-05, 9.342999999999851e-05, 9.34720000000007e-05, 9.349999999999983e-05, 9.357000000000115e-05, 9.348600000000026e-05, 9.358400000000072e-05, 9.357000000000115e-05, 9.344500000000103e-05, 9.344500000000103e-05, 9.36529999999991e-05, 9.362499999999996e-05, 9.363800000000005e-05, 9.365199999999962e-05, 9.352799999999897e-05, 9.344400000000155e-05, 9.354199999999854e-05, 9.369399999999833e-05, 9.362499999999996e-05, 9.354199999999854e-05, 9.363899999999953e-05, 9.348600000000026e-05, 9.352799999999897e-05, 9.357000000000115e-05, 9.358400000000072e-05, 9.347300000000017e-05, 9.363899999999953e-05, 9.359800000000029e-05, 9.354200000000201e-05, 9.36659999999992e-05, 9.35269999999995e-05, 9.363800000000005e-05, 9.344399999999808e-05, 9.341600000000241e-05, 9.355500000000211e-05, 9.352799999999897e-05, 9.345800000000112e-05, 9.342999999999851e-05, 9.368099999999824e-05, 9.369500000000128e-05, 9.363899999999953e-05, 9.34590000000006e-05, 9.361100000000039e-05, 9.347300000000017e-05, 9.368100000000171e-05, 9.362499999999996e-05, 9.343100000000146e-05, 9.363800000000005e-05, 9.356899999999821e-05, 9.352800000000244e-05]</msg>
<status status="PASS" starttime="20201030 18:29:06.982" endtime="20201030 18:29:06.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.978" endtime="20201030 18:29:06.985"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:06.989" endtime="20201030 18:29:07.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.987" endtime="20201030 18:29:07.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.986" endtime="20201030 18:29:07.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.625" endtime="20201030 18:29:07.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.625" endtime="20201030 18:29:07.009"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.018" endtime="20201030 18:29:07.038"></status>
</kw>
<msg timestamp="20201030 18:29:07.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.016" endtime="20201030 18:29:07.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.039" endtime="20201030 18:29:07.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.042" endtime="20201030 18:29:07.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.014" endtime="20201030 18:29:07.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.012" endtime="20201030 18:29:07.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.051" endtime="20201030 18:29:07.336"></status>
</kw>
<msg timestamp="20201030 18:29:07.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022785639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022880028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.049" endtime="20201030 18:29:07.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022785639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022880028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.340" endtime="20201030 18:29:07.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.349" endtime="20201030 18:29:07.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.047" endtime="20201030 18:29:07.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.045" endtime="20201030 18:29:07.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:07.355" level="INFO">${RESULT} = [{'diff': 9.438900000000028e-05}, {'diff': 9.44590000000016e-05}, {'diff': 9.455599999999911e-05}, {'diff': 9.461099999999792e-05}, {'diff': 9.462499999999749e-05}, {'diff': 9.461199999999739e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:07.352" endtime="20201030 18:29:07.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:07.359" level="INFO">${ACCURACY} = {'diff': [9.438900000000028e-05, 9.44590000000016e-05, 9.455599999999911e-05, 9.461099999999792e-05, 9.462499999999749e-05, 9.461199999999739e-05, 9.451299999999746e-05, 9.442999999999951e-05, 9.46799...</msg>
<status status="PASS" starttime="20201030 18:29:07.356" endtime="20201030 18:29:07.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.364" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 18:29:07.363" endtime="20201030 18:29:07.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.366" level="INFO">VALUE: [9.438900000000028e-05, 9.44590000000016e-05, 9.455599999999911e-05, 9.461099999999792e-05, 9.462499999999749e-05, 9.461199999999739e-05, 9.451299999999746e-05, 9.442999999999951e-05, 9.467999999999976e-05, 9.458300000000225e-05, 9.44720000000017e-05, 9.462500000000096e-05, 9.463900000000053e-05, 9.451399999999693e-05, 9.468099999999924e-05, 9.447199999999822e-05, 9.46530000000001e-05, 9.443100000000246e-05, 9.455499999999964e-05, 9.45140000000004e-05, 9.45140000000004e-05, 9.444500000000203e-05, 9.448700000000074e-05, 9.455599999999911e-05, 9.469399999999933e-05, 9.442999999999951e-05, 9.444399999999908e-05, 9.452799999999997e-05, 9.442999999999951e-05, 9.455500000000311e-05, 9.448600000000126e-05, 9.456899999999921e-05, 9.441699999999942e-05, 9.472199999999847e-05, 9.46530000000001e-05, 9.445799999999865e-05, 9.443099999999899e-05, 9.438900000000028e-05, 9.46530000000001e-05, 9.447300000000117e-05, 9.472200000000194e-05, 9.448600000000126e-05, 9.445800000000212e-05, 9.450000000000083e-05, 9.46530000000001e-05, 9.456899999999921e-05, 9.461099999999792e-05, 9.46660000000002e-05, 9.47079999999989e-05, 9.458299999999878e-05]</msg>
<status status="PASS" starttime="20201030 18:29:07.365" endtime="20201030 18:29:07.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.360" endtime="20201030 18:29:07.368"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:07.372" endtime="20201030 18:29:07.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.370" endtime="20201030 18:29:07.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.369" endtime="20201030 18:29:07.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.010" endtime="20201030 18:29:07.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.010" endtime="20201030 18:29:07.392"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.401" endtime="20201030 18:29:07.419"></status>
</kw>
<msg timestamp="20201030 18:29:07.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.400" endtime="20201030 18:29:07.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.421" endtime="20201030 18:29:07.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.424" endtime="20201030 18:29:07.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.397" endtime="20201030 18:29:07.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.395" endtime="20201030 18:29:07.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.432" endtime="20201030 18:29:07.717"></status>
</kw>
<msg timestamp="20201030 18:29:07.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022013625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.431" endtime="20201030 18:29:07.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022013625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.721" endtime="20201030 18:29:07.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.729" endtime="20201030 18:29:07.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.428" endtime="20201030 18:29:07.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.427" endtime="20201030 18:29:07.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:07.736" level="INFO">${RESULT} = [{'diff': 9.527799999999725e-05}, {'diff': 9.556999999999968e-05}, {'diff': 9.55279999999975e-05}, {'diff': 9.54729999999987e-05}, {'diff': 9.552800000000097e-05}, {'diff': 9.561100000000239e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:07.732" endtime="20201030 18:29:07.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:07.741" level="INFO">${ACCURACY} = {'diff': [9.527799999999725e-05, 9.556999999999968e-05, 9.55279999999975e-05, 9.54729999999987e-05, 9.552800000000097e-05, 9.561100000000239e-05, 9.541699999999695e-05, 9.558299999999978e-05, 9.545799...</msg>
<status status="PASS" starttime="20201030 18:29:07.737" endtime="20201030 18:29:07.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.745" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 18:29:07.744" endtime="20201030 18:29:07.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.748" level="INFO">VALUE: [9.527799999999725e-05, 9.556999999999968e-05, 9.55279999999975e-05, 9.54729999999987e-05, 9.552800000000097e-05, 9.561100000000239e-05, 9.541699999999695e-05, 9.558299999999978e-05, 9.545799999999965e-05, 9.547199999999922e-05, 9.556900000000021e-05, 9.562499999999849e-05, 9.55279999999975e-05, 9.555600000000011e-05, 9.561100000000239e-05, 9.544400000000008e-05, 9.547199999999922e-05, 9.565299999999763e-05, 9.543099999999999e-05, 9.561099999999892e-05, 9.54729999999987e-05, 9.569400000000033e-05, 9.56669999999972e-05, 9.573599999999904e-05, 9.555600000000011e-05, 9.57079999999999e-05, 9.552699999999803e-05, 9.555500000000064e-05, 9.561099999999892e-05, 9.562500000000196e-05, 9.559700000000282e-05, 9.568000000000076e-05, 9.545800000000312e-05, 9.559699999999935e-05, 9.56530000000011e-05, 9.552800000000097e-05, 9.559700000000282e-05, 9.544500000000303e-05, 9.543099999999999e-05, 9.544499999999956e-05, 9.54859999999988e-05, 9.569499999999981e-05, 9.572200000000294e-05, 9.543000000000051e-05, 9.565200000000162e-05, 9.563900000000153e-05, 9.568000000000076e-05, 9.547199999999922e-05, 9.54720000000027e-05, 9.563899999999806e-05]</msg>
<status status="PASS" starttime="20201030 18:29:07.746" endtime="20201030 18:29:07.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.741" endtime="20201030 18:29:07.749"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:07.753" endtime="20201030 18:29:07.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.751" endtime="20201030 18:29:07.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.750" endtime="20201030 18:29:07.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.393" endtime="20201030 18:29:07.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.393" endtime="20201030 18:29:07.773"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.782" endtime="20201030 18:29:07.801"></status>
</kw>
<msg timestamp="20201030 18:29:07.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.780" endtime="20201030 18:29:07.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.802" endtime="20201030 18:29:07.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.805" endtime="20201030 18:29:07.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.778" endtime="20201030 18:29:07.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.776" endtime="20201030 18:29:07.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.814" endtime="20201030 18:29:08.100"></status>
</kw>
<msg timestamp="20201030 18:29:08.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021832444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021928944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.812" endtime="20201030 18:29:08.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021832444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021928944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:08.104" endtime="20201030 18:29:08.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.113" endtime="20201030 18:29:08.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.810" endtime="20201030 18:29:08.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.808" endtime="20201030 18:29:08.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:08.119" level="INFO">${RESULT} = [{'diff': 9.649999999999936e-05}, {'diff': 9.654199999999807e-05}, {'diff': 9.648600000000326e-05}, {'diff': 9.649999999999936e-05}, {'diff': 9.647200000000022e-05}, {'diff': 9.669499999999734e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:08.116" endtime="20201030 18:29:08.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:08.123" level="INFO">${ACCURACY} = {'diff': [9.649999999999936e-05, 9.654199999999807e-05, 9.648600000000326e-05, 9.649999999999936e-05, 9.647200000000022e-05, 9.669499999999734e-05, 9.641700000000142e-05, 9.665299999999863e-05, 9.6624...</msg>
<status status="PASS" starttime="20201030 18:29:08.120" endtime="20201030 18:29:08.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.128" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 18:29:08.127" endtime="20201030 18:29:08.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.130" level="INFO">VALUE: [9.649999999999936e-05, 9.654199999999807e-05, 9.648600000000326e-05, 9.649999999999936e-05, 9.647200000000022e-05, 9.669499999999734e-05, 9.641700000000142e-05, 9.665299999999863e-05, 9.662499999999949e-05, 9.640299999999838e-05, 9.670900000000038e-05, 9.672299999999995e-05, 9.67080000000009e-05, 9.645900000000013e-05, 9.652699999999903e-05, 9.647200000000022e-05, 9.651399999999893e-05, 9.651399999999893e-05, 9.64859999999998e-05, 9.65409999999986e-05, 9.661099999999992e-05, 9.65140000000024e-05, 9.65279999999985e-05, 9.641699999999795e-05, 9.67080000000009e-05, 9.66530000000021e-05, 9.658400000000025e-05, 9.645900000000013e-05, 9.65279999999985e-05, 9.65140000000024e-05, 9.651299999999946e-05, 9.647200000000022e-05, 9.658300000000078e-05, 9.661099999999992e-05, 9.651399999999893e-05, 9.658400000000025e-05, 9.672200000000047e-05, 9.654200000000154e-05, 9.665299999999863e-05, 9.65279999999985e-05, 9.64729999999997e-05, 9.676399999999918e-05, 9.670899999999691e-05, 9.65409999999986e-05, 9.665299999999863e-05, 9.644500000000056e-05, 9.658300000000078e-05, 9.64019999999989e-05, 9.670799999999743e-05, 9.656900000000121e-05]</msg>
<status status="PASS" starttime="20201030 18:29:08.129" endtime="20201030 18:29:08.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.124" endtime="20201030 18:29:08.132"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:08.135" endtime="20201030 18:29:08.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.134" endtime="20201030 18:29:08.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.133" endtime="20201030 18:29:08.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.774" endtime="20201030 18:29:08.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.774" endtime="20201030 18:29:08.156"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.164" endtime="20201030 18:29:08.184"></status>
</kw>
<msg timestamp="20201030 18:29:08.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.163" endtime="20201030 18:29:08.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.186" endtime="20201030 18:29:08.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.188" endtime="20201030 18:29:08.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.160" endtime="20201030 18:29:08.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.158" endtime="20201030 18:29:08.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.197" endtime="20201030 18:29:08.483"></status>
</kw>
<msg timestamp="20201030 18:29:08.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226315, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022728903, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:08.196" endtime="20201030 18:29:08.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226315, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022728903, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:08.487" endtime="20201030 18:29:08.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.495" endtime="20201030 18:29:08.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.193" endtime="20201030 18:29:08.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.192" endtime="20201030 18:29:08.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:08.501" level="INFO">${RESULT} = [{'diff': 9.740300000000285e-05}, {'diff': 9.775000000000061e-05}, {'diff': 9.758400000000125e-05}, {'diff': 9.743099999999852e-05}, {'diff': 9.762499999999702e-05}, {'diff': 9.744400000000208e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:08.498" endtime="20201030 18:29:08.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:08.506" level="INFO">${ACCURACY} = {'diff': [9.740300000000285e-05, 9.775000000000061e-05, 9.758400000000125e-05, 9.743099999999852e-05, 9.762499999999702e-05, 9.744400000000208e-05, 9.769399999999887e-05, 9.750000000000036e-05, 9.7429...</msg>
<status status="PASS" starttime="20201030 18:29:08.502" endtime="20201030 18:29:08.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.510" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 18:29:08.509" endtime="20201030 18:29:08.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.512" level="INFO">VALUE: [9.740300000000285e-05, 9.775000000000061e-05, 9.758400000000125e-05, 9.743099999999852e-05, 9.762499999999702e-05, 9.744400000000208e-05, 9.769399999999887e-05, 9.750000000000036e-05, 9.742999999999905e-05, 9.763900000000006e-05, 9.742999999999905e-05, 9.768099999999877e-05, 9.754199999999907e-05, 9.76669999999992e-05, 9.76669999999992e-05, 9.752700000000003e-05, 9.745899999999766e-05, 9.756999999999821e-05, 9.765299999999963e-05, 9.754199999999907e-05, 9.770899999999791e-05, 9.741699999999895e-05, 9.752700000000003e-05, 9.755500000000264e-05, 9.759700000000135e-05, 9.761099999999745e-05, 9.758299999999831e-05, 9.75279999999995e-05, 9.765299999999963e-05, 9.773600000000104e-05, 9.754199999999907e-05, 9.744500000000156e-05, 9.755599999999864e-05, 9.758399999999778e-05, 9.758399999999778e-05, 9.75279999999995e-05, 9.754199999999907e-05, 9.756899999999874e-05, 9.750000000000036e-05, 9.765299999999963e-05, 9.744400000000208e-05, 9.762500000000049e-05, 9.752700000000003e-05, 9.769399999999887e-05, 9.759700000000135e-05, 9.751399999999993e-05, 9.756999999999821e-05, 9.743099999999852e-05, 9.745900000000113e-05, 9.759700000000135e-05]</msg>
<status status="PASS" starttime="20201030 18:29:08.511" endtime="20201030 18:29:08.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.506" endtime="20201030 18:29:08.515"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:08.518" endtime="20201030 18:29:08.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.517" endtime="20201030 18:29:08.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.516" endtime="20201030 18:29:08.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.157" endtime="20201030 18:29:08.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.156" endtime="20201030 18:29:08.539"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.547" endtime="20201030 18:29:08.566"></status>
</kw>
<msg timestamp="20201030 18:29:08.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.546" endtime="20201030 18:29:08.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.568" endtime="20201030 18:29:08.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.570" endtime="20201030 18:29:08.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.543" endtime="20201030 18:29:08.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.541" endtime="20201030 18:29:08.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.579" endtime="20201030 18:29:08.863"></status>
</kw>
<msg timestamp="20201030 18:29:08.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022068403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022166472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:08.578" endtime="20201030 18:29:08.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022068403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022166472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:08.868" endtime="20201030 18:29:08.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.876" endtime="20201030 18:29:08.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.575" endtime="20201030 18:29:08.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.574" endtime="20201030 18:29:08.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:08.882" level="INFO">${RESULT} = [{'diff': 9.806899999999924e-05}, {'diff': 9.848599999999832e-05}, {'diff': 9.868099999999977e-05}, {'diff': 9.870799999999944e-05}, {'diff': 9.841699999999995e-05}, {'diff': 9.844499999999909e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:08.879" endtime="20201030 18:29:08.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:08.887" level="INFO">${ACCURACY} = {'diff': [9.806899999999924e-05, 9.848599999999832e-05, 9.868099999999977e-05, 9.870799999999944e-05, 9.841699999999995e-05, 9.844499999999909e-05, 9.8721999999999e-05, 9.858400000000225e-05, 9.851400...</msg>
<status status="PASS" starttime="20201030 18:29:08.883" endtime="20201030 18:29:08.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.892" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 18:29:08.891" endtime="20201030 18:29:08.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.894" level="INFO">VALUE: [9.806899999999924e-05, 9.848599999999832e-05, 9.868099999999977e-05, 9.870799999999944e-05, 9.841699999999995e-05, 9.844499999999909e-05, 9.8721999999999e-05, 9.858400000000225e-05, 9.851400000000093e-05, 9.844499999999909e-05, 9.844500000000256e-05, 9.868099999999977e-05, 9.84730000000017e-05, 9.859699999999888e-05, 9.861099999999845e-05, 9.854200000000007e-05, 9.863899999999759e-05, 9.86800000000003e-05, 9.865300000000063e-05, 9.856899999999974e-05, 9.863800000000159e-05, 9.862500000000149e-05, 9.843099999999952e-05, 9.870899999999891e-05, 9.85280000000005e-05, 9.85280000000005e-05, 9.868099999999977e-05, 9.850000000000136e-05, 9.859800000000182e-05, 9.87080000000029e-05, 9.863799999999812e-05, 9.847199999999875e-05, 9.847199999999875e-05, 9.856899999999974e-05, 9.866600000000073e-05, 9.848599999999832e-05, 9.859699999999888e-05, 9.859699999999888e-05, 9.847199999999875e-05, 9.843099999999952e-05, 9.86670000000002e-05, 9.868099999999977e-05, 9.847200000000222e-05, 9.861100000000192e-05, 9.862500000000149e-05, 9.865300000000063e-05, 9.856900000000321e-05, 9.869399999999987e-05, 9.861099999999845e-05, 9.851399999999746e-05]</msg>
<status status="PASS" starttime="20201030 18:29:08.893" endtime="20201030 18:29:08.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.888" endtime="20201030 18:29:08.900"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:08.904" endtime="20201030 18:29:08.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.903" endtime="20201030 18:29:08.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.901" endtime="20201030 18:29:08.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.540" endtime="20201030 18:29:08.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.539" endtime="20201030 18:29:08.925"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.933" endtime="20201030 18:29:08.952"></status>
</kw>
<msg timestamp="20201030 18:29:08.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.932" endtime="20201030 18:29:08.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.954" endtime="20201030 18:29:08.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.957" endtime="20201030 18:29:08.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.929" endtime="20201030 18:29:08.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.927" endtime="20201030 18:29:08.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.965" endtime="20201030 18:29:09.251"></status>
</kw>
<msg timestamp="20201030 18:29:09.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021954917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:08.964" endtime="20201030 18:29:09.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021954917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.256" endtime="20201030 18:29:09.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.264" endtime="20201030 18:29:09.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.961" endtime="20201030 18:29:09.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.960" endtime="20201030 18:29:09.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:09.271" level="INFO">${RESULT} = [{'diff': 9.942999999999758e-05}, {'diff': 9.948599999999932e-05}, {'diff': 9.958300000000031e-05}, {'diff': 9.963900000000206e-05}, {'diff': 9.947199999999976e-05}, {'diff': 9.963899999999859e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:09.267" endtime="20201030 18:29:09.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:09.275" level="INFO">${ACCURACY} = {'diff': [9.942999999999758e-05, 9.948599999999932e-05, 9.958300000000031e-05, 9.963900000000206e-05, 9.947199999999976e-05, 9.963899999999859e-05, 9.962499999999902e-05, 9.963899999999859e-05, 9.9499...</msg>
<status status="PASS" starttime="20201030 18:29:09.272" endtime="20201030 18:29:09.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.279" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 18:29:09.278" endtime="20201030 18:29:09.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.282" level="INFO">VALUE: [9.942999999999758e-05, 9.948599999999932e-05, 9.958300000000031e-05, 9.963900000000206e-05, 9.947199999999976e-05, 9.963899999999859e-05, 9.962499999999902e-05, 9.963899999999859e-05, 9.94999999999989e-05, 9.94999999999989e-05, 9.945899999999966e-05, 9.965200000000216e-05, 9.947199999999976e-05, 9.956900000000074e-05, 9.961099999999945e-05, 9.9415999999998e-05, 9.970899999999991e-05, 9.969400000000087e-05, 9.969500000000034e-05, 9.969400000000087e-05, 9.944500000000009e-05, 9.958300000000031e-05, 9.965299999999816e-05, 9.954200000000107e-05, 9.94730000000027e-05, 9.956900000000074e-05, 9.957000000000021e-05, 9.963799999999912e-05, 9.963899999999859e-05, 9.947199999999976e-05, 9.9722e-05, 9.965299999999816e-05, 9.940300000000138e-05, 9.961099999999945e-05, 9.955500000000117e-05, 9.96670000000012e-05, 9.94999999999989e-05, 9.944500000000009e-05, 9.955599999999717e-05, 9.951399999999846e-05, 9.948599999999932e-05, 9.951400000000193e-05, 9.94999999999989e-05, 9.965300000000163e-05, 9.945800000000019e-05, 9.945800000000019e-05, 9.965200000000216e-05, 9.94999999999989e-05, 9.951399999999846e-05, 9.94999999999989e-05]</msg>
<status status="PASS" starttime="20201030 18:29:09.280" endtime="20201030 18:29:09.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.276" endtime="20201030 18:29:09.283"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:09.287" endtime="20201030 18:29:09.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.285" endtime="20201030 18:29:09.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.284" endtime="20201030 18:29:09.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.926" endtime="20201030 18:29:09.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.925" endtime="20201030 18:29:09.307"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.316" endtime="20201030 18:29:09.338"></status>
</kw>
<msg timestamp="20201030 18:29:09.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.314" endtime="20201030 18:29:09.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.340" endtime="20201030 18:29:09.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.342" endtime="20201030 18:29:09.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.312" endtime="20201030 18:29:09.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.310" endtime="20201030 18:29:09.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.351" endtime="20201030 18:29:09.637"></status>
</kw>
<msg timestamp="20201030 18:29:09.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024909069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025009931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.349" endtime="20201030 18:29:09.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024909069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025009931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.641" endtime="20201030 18:29:09.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.650" endtime="20201030 18:29:09.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.347" endtime="20201030 18:29:09.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.345" endtime="20201030 18:29:09.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:09.656" level="INFO">${RESULT} = [{'diff': 0.00010086200000000017}, {'diff': 0.00010051400000000293}, {'diff': 0.00010058300000000131}, {'diff': 0.00010045799999999772}, {'diff': 0.00010051400000000293}, {'diff': 0.000100486000000000...</msg>
<status status="PASS" starttime="20201030 18:29:09.653" endtime="20201030 18:29:09.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:09.660" level="INFO">${ACCURACY} = {'diff': [0.00010086200000000017, 0.00010051400000000293, 0.00010058300000000131, 0.00010045799999999772, 0.00010051400000000293, 0.00010048600000000033, 0.00010066599999999926, 0.00010045800000000119...</msg>
<status status="PASS" starttime="20201030 18:29:09.657" endtime="20201030 18:29:09.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.664" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 18:29:09.663" endtime="20201030 18:29:09.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.667" level="INFO">VALUE: [0.00010086200000000017, 0.00010051400000000293, 0.00010058300000000131, 0.00010045799999999772, 0.00010051400000000293, 0.00010048600000000033, 0.00010066599999999926, 0.00010045800000000119, 0.00010058300000000131, 0.00010050000000000336, 0.00010065299999999916, 0.0001005419999999986, 0.00010069500000000134, 0.00010061100000000045, 0.0001006800000000023, 0.00010065299999999916, 0.00010052699999999956, 0.00010070899999999744, 0.00010056899999999827, 0.00010061100000000045, 0.00010050000000000336, 0.00010069400000000187, 0.00010052799999999903, 0.00010061100000000045, 0.00010058300000000131, 0.00010052799999999903, 0.00010058300000000131, 0.00010044499999999762, 0.00010048599999999686, 0.00010043100000000152, 0.00010041699999999848, 0.00010059800000000035, 0.00010058299999999784, 0.00010066699999999873, 0.00010054200000000207, 0.00010054099999999913, 0.00010044399999999815, 0.00010063899999999959, 0.00010058299999999784, 0.00010070799999999797, 0.00010070899999999744, 0.00010051399999999946, 0.00010065299999999916, 0.00010065199999999969, 0.00010043100000000152, 0.00010055600000000164, 0.00010058400000000078, 0.00010045900000000066, 0.00010044500000000109, 0.00010061199999999992]</msg>
<status status="PASS" starttime="20201030 18:29:09.666" endtime="20201030 18:29:09.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.661" endtime="20201030 18:29:09.669"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:09.673" endtime="20201030 18:29:09.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.671" endtime="20201030 18:29:09.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.670" endtime="20201030 18:29:09.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.308" endtime="20201030 18:29:09.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.308" endtime="20201030 18:29:09.693"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.702" endtime="20201030 18:29:09.721"></status>
</kw>
<msg timestamp="20201030 18:29:09.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.700" endtime="20201030 18:29:09.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.722" endtime="20201030 18:29:09.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.725" endtime="20201030 18:29:09.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.698" endtime="20201030 18:29:09.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.696" endtime="20201030 18:29:09.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.734" endtime="20201030 18:29:10.019"></status>
</kw>
<msg timestamp="20201030 18:29:10.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021788722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021889708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.732" endtime="20201030 18:29:10.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021788722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021889708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.023" endtime="20201030 18:29:10.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.031" endtime="20201030 18:29:10.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.730" endtime="20201030 18:29:10.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.728" endtime="20201030 18:29:10.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:10.037" level="INFO">${RESULT} = [{'diff': 0.00010098600000000083}, {'diff': 0.00010155599999999917}, {'diff': 0.00010140299999999991}, {'diff': 0.0001015419999999996}, {'diff': 0.00010155599999999917}, {'diff': 0.000101513999999997}...</msg>
<status status="PASS" starttime="20201030 18:29:10.034" endtime="20201030 18:29:10.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:10.042" level="INFO">${ACCURACY} = {'diff': [0.00010098600000000083, 0.00010155599999999917, 0.00010140299999999991, 0.0001015419999999996, 0.00010155599999999917, 0.000101513999999997, 0.00010166699999999973, 0.00010143100000000252, 0...</msg>
<status status="PASS" starttime="20201030 18:29:10.038" endtime="20201030 18:29:10.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.047" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 18:29:10.046" endtime="20201030 18:29:10.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.049" level="INFO">VALUE: [0.00010098600000000083, 0.00010155599999999917, 0.00010140299999999991, 0.0001015419999999996, 0.00010155599999999917, 0.000101513999999997, 0.00010166699999999973, 0.00010143100000000252, 0.00010155599999999917, 0.0001016939999999994, 0.00010166699999999973, 0.00010165299999999669, 0.00010152700000000056, 0.00010147199999999829, 0.00010156899999999927, 0.00010154100000000013, 0.00010145799999999872, 0.0001016939999999994, 0.00010155599999999917, 0.00010156900000000274, 0.00010156999999999874, 0.00010161100000000145, 0.00010147200000000176, 0.0001015549999999997, 0.00010140299999999991, 0.0001015419999999996, 0.00010161099999999798, 0.00010161099999999798, 0.00010145799999999872, 0.0001015549999999997, 0.00010142999999999958, 0.00010158300000000231, 0.00010145800000000219, 0.00010161100000000145, 0.00010148600000000133, 0.0001015000000000009, 0.00010148600000000133, 0.0001015000000000009, 0.00010165300000000016, 0.00010161199999999745, 0.00010162499999999755, 0.00010161199999999745, 0.00010165299999999669, 0.00010152799999999657, 0.0001015549999999997, 0.00010147200000000176, 0.00010166600000000026, 0.00010145800000000219, 0.00010145800000000219, 0.0001016939999999994]</msg>
<status status="PASS" starttime="20201030 18:29:10.048" endtime="20201030 18:29:10.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.043" endtime="20201030 18:29:10.050"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:10.054" endtime="20201030 18:29:10.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.052" endtime="20201030 18:29:10.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.051" endtime="20201030 18:29:10.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.694" endtime="20201030 18:29:10.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.694" endtime="20201030 18:29:10.075"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.083" endtime="20201030 18:29:10.102"></status>
</kw>
<msg timestamp="20201030 18:29:10.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.082" endtime="20201030 18:29:10.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.104" endtime="20201030 18:29:10.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.107" endtime="20201030 18:29:10.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.079" endtime="20201030 18:29:10.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.077" endtime="20201030 18:29:10.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.115" endtime="20201030 18:29:10.402"></status>
</kw>
<msg timestamp="20201030 18:29:10.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021998361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.114" endtime="20201030 18:29:10.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021998361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.406" endtime="20201030 18:29:10.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.414" endtime="20201030 18:29:10.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.111" endtime="20201030 18:29:10.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.110" endtime="20201030 18:29:10.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:10.421" level="INFO">${RESULT} = [{'diff': 0.00010286099999999923}, {'diff': 0.00010258299999999984}, {'diff': 0.00010243100000000005}, {'diff': 0.00010263900000000159}, {'diff': 0.00010245899999999919}, {'diff': 0.000102444999999999...</msg>
<status status="PASS" starttime="20201030 18:29:10.418" endtime="20201030 18:29:10.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:10.425" level="INFO">${ACCURACY} = {'diff': [0.00010286099999999923, 0.00010258299999999984, 0.00010243100000000005, 0.00010263900000000159, 0.00010245899999999919, 0.00010244499999999962, 0.0001025420000000006, 0.00010269499999999987,...</msg>
<status status="PASS" starttime="20201030 18:29:10.422" endtime="20201030 18:29:10.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.429" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 18:29:10.428" endtime="20201030 18:29:10.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.432" level="INFO">VALUE: [0.00010286099999999923, 0.00010258299999999984, 0.00010243100000000005, 0.00010263900000000159, 0.00010245899999999919, 0.00010244499999999962, 0.0001025420000000006, 0.00010269499999999987, 0.00010255600000000017, 0.00010256900000000027, 0.00010249999999999843, 0.00010243000000000058, 0.00010243000000000058, 0.00010265299999999769, 0.000102513999999998, 0.00010249999999999843, 0.00010251400000000147, 0.00010256900000000027, 0.00010269499999999987, 0.00010244499999999962, 0.0001025420000000006, 0.00010248600000000233, 0.00010243100000000005, 0.0001026810000000003, 0.00010263799999999865, 0.00010262499999999855, 0.00010259699999999941, 0.00010261100000000245, 0.00010248599999999886, 0.000102513999999998, 0.00010262499999999855, 0.0001025420000000006, 0.00010240299999999744, 0.00010247199999999929, 0.00010263900000000159, 0.00010243100000000005, 0.00010243100000000005, 0.00010258399999999931, 0.00010269499999999987, 0.00010243100000000005, 0.00010265300000000116, 0.00010251400000000147, 0.00010263899999999812, 0.00010252699999999809, 0.00010249999999999843, 0.00010245799999999972, 0.00010261100000000245, 0.000102513999999998, 0.00010263899999999812, 0.00010266700000000073]</msg>
<status status="PASS" starttime="20201030 18:29:10.430" endtime="20201030 18:29:10.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.426" endtime="20201030 18:29:10.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:10.437" endtime="20201030 18:29:10.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.435" endtime="20201030 18:29:10.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.434" endtime="20201030 18:29:10.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.075" endtime="20201030 18:29:10.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.075" endtime="20201030 18:29:10.457"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.466" endtime="20201030 18:29:10.485"></status>
</kw>
<msg timestamp="20201030 18:29:10.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.464" endtime="20201030 18:29:10.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.487" endtime="20201030 18:29:10.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.489" endtime="20201030 18:29:10.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.462" endtime="20201030 18:29:10.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.460" endtime="20201030 18:29:10.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.498" endtime="20201030 18:29:10.783"></status>
</kw>
<msg timestamp="20201030 18:29:10.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022645708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022749583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.497" endtime="20201030 18:29:10.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022645708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022749583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.787" endtime="20201030 18:29:10.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.795" endtime="20201030 18:29:10.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.494" endtime="20201030 18:29:10.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.492" endtime="20201030 18:29:10.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:10.802" level="INFO">${RESULT} = [{'diff': 0.0001038749999999998}, {'diff': 0.0001035000000000029}, {'diff': 0.00010355499999999823}, {'diff': 0.00010341700000000148}, {'diff': 0.00010344400000000115}, {'diff': 0.00010358300000000084...</msg>
<status status="PASS" starttime="20201030 18:29:10.799" endtime="20201030 18:29:10.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:10.806" level="INFO">${ACCURACY} = {'diff': [0.0001038749999999998, 0.0001035000000000029, 0.00010355499999999823, 0.00010341700000000148, 0.00010344400000000115, 0.00010358300000000084, 0.00010357000000000074, 0.00010348599999999986, ...</msg>
<status status="PASS" starttime="20201030 18:29:10.803" endtime="20201030 18:29:10.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.810" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 18:29:10.809" endtime="20201030 18:29:10.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.813" level="INFO">VALUE: [0.0001038749999999998, 0.0001035000000000029, 0.00010355499999999823, 0.00010341700000000148, 0.00010344400000000115, 0.00010358300000000084, 0.00010357000000000074, 0.00010348599999999986, 0.00010352799999999857, 0.00010347299999999976, 0.00010363899999999912, 0.00010345900000000019, 0.00010351299999999952, 0.00010366600000000226, 0.00010354099999999866, 0.00010347200000000029, 0.00010356900000000127, 0.00010358300000000084, 0.00010345800000000072, 0.00010352800000000204, 0.00010361099999999998, 0.0001035420000000016, 0.00010345900000000019, 0.00010351400000000247, 0.00010362499999999955, 0.00010361099999999998, 0.0001035559999999977, 0.00010359799999999988, 0.00010361199999999945, 0.00010349999999999943, 0.00010349999999999943, 0.0001036940000000014, 0.00010370800000000097, 0.00010351400000000247, 0.00010370800000000097, 0.0001035000000000029, 0.00010345800000000072, 0.00010359700000000041, 0.00010357000000000074, 0.00010372300000000001, 0.00010354199999999814, 0.0001035420000000016, 0.00010347299999999976, 0.00010348699999999933, 0.00010358400000000031, 0.00010348599999999986, 0.00010342999999999811, 0.00010362499999999955, 0.00010352800000000204, 0.00010348599999999986]</msg>
<status status="PASS" starttime="20201030 18:29:10.811" endtime="20201030 18:29:10.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.807" endtime="20201030 18:29:10.815"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:10.818" endtime="20201030 18:29:10.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.817" endtime="20201030 18:29:10.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.816" endtime="20201030 18:29:10.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.458" endtime="20201030 18:29:10.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.458" endtime="20201030 18:29:10.839"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.848" endtime="20201030 18:29:10.868"></status>
</kw>
<msg timestamp="20201030 18:29:10.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.846" endtime="20201030 18:29:10.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.869" endtime="20201030 18:29:10.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.872" endtime="20201030 18:29:10.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.844" endtime="20201030 18:29:10.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.841" endtime="20201030 18:29:10.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.881" endtime="20201030 18:29:11.166"></status>
</kw>
<msg timestamp="20201030 18:29:11.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022124236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022228944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.879" endtime="20201030 18:29:11.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022124236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022228944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.170" endtime="20201030 18:29:11.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.178" endtime="20201030 18:29:11.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.877" endtime="20201030 18:29:11.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.875" endtime="20201030 18:29:11.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:11.185" level="INFO">${RESULT} = [{'diff': 0.00010470800000000197}, {'diff': 0.00010448599999999739}, {'diff': 0.00010469399999999893}, {'diff': 0.00010462500000000055}, {'diff': 0.00010465299999999969}, {'diff': 0.000104596999999997...</msg>
<status status="PASS" starttime="20201030 18:29:11.182" endtime="20201030 18:29:11.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:11.189" level="INFO">${ACCURACY} = {'diff': [0.00010470800000000197, 0.00010448599999999739, 0.00010469399999999893, 0.00010462500000000055, 0.00010465299999999969, 0.00010459699999999794, 0.00010448600000000086, 0.00010468099999999883...</msg>
<status status="PASS" starttime="20201030 18:29:11.186" endtime="20201030 18:29:11.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.194" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 18:29:11.193" endtime="20201030 18:29:11.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.196" level="INFO">VALUE: [0.00010470800000000197, 0.00010448599999999739, 0.00010469399999999893, 0.00010462500000000055, 0.00010465299999999969, 0.00010459699999999794, 0.00010448600000000086, 0.00010468099999999883, 0.0001046810000000023, 0.00010450000000000043, 0.00010441699999999901, 0.000104514, 0.0001047360000000011, 0.00010468099999999883, 0.00010458299999999837, 0.0001043880000000004, 0.00010476400000000025, 0.00010443000000000258, 0.000104514, 0.00010467999999999936, 0.0001045689999999988, 0.0001046940000000024, 0.000104514, 0.000104514, 0.00010462500000000055, 0.00010463899999999665, 0.00010447200000000129, 0.00010463900000000012, 0.00010458400000000131, 0.00010455499999999923, 0.000104514, 0.00010459700000000141, 0.00010440199999999997, 0.00010465200000000022, 0.00010441599999999954, 0.0001045550000000027, 0.00010459700000000141, 0.0001045689999999988, 0.000104514, 0.00010457000000000174, 0.00010462500000000055, 0.00010454199999999914, 0.00010465299999999969, 0.0001045559999999987, 0.00010448700000000033, 0.00010445900000000119, 0.00010465200000000022, 0.00010466700000000273, 0.00010462500000000055, 0.00010462500000000055]</msg>
<status status="PASS" starttime="20201030 18:29:11.195" endtime="20201030 18:29:11.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.190" endtime="20201030 18:29:11.198"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:11.201" endtime="20201030 18:29:11.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.200" endtime="20201030 18:29:11.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.199" endtime="20201030 18:29:11.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.840" endtime="20201030 18:29:11.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.839" endtime="20201030 18:29:11.222"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.231" endtime="20201030 18:29:11.250"></status>
</kw>
<msg timestamp="20201030 18:29:11.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.229" endtime="20201030 18:29:11.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.251" endtime="20201030 18:29:11.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.254" endtime="20201030 18:29:11.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.227" endtime="20201030 18:29:11.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.224" endtime="20201030 18:29:11.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.263" endtime="20201030 18:29:11.549"></status>
</kw>
<msg timestamp="20201030 18:29:11.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021864889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021970444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.261" endtime="20201030 18:29:11.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021864889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021970444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.553" endtime="20201030 18:29:11.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.561" endtime="20201030 18:29:11.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.259" endtime="20201030 18:29:11.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.257" endtime="20201030 18:29:11.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:11.568" level="INFO">${RESULT} = [{'diff': 0.00010555500000000023}, {'diff': 0.00010544399999999968}, {'diff': 0.0001055559999999997}, {'diff': 0.00010563899999999765}, {'diff': 0.00010548599999999839}, {'diff': 0.0001056109999999985...</msg>
<status status="PASS" starttime="20201030 18:29:11.565" endtime="20201030 18:29:11.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:11.572" level="INFO">${ACCURACY} = {'diff': [0.00010555500000000023, 0.00010544399999999968, 0.0001055559999999997, 0.00010563899999999765, 0.00010548599999999839, 0.00010561099999999851, 0.00010563899999999765, 0.00010559699999999894,...</msg>
<status status="PASS" starttime="20201030 18:29:11.569" endtime="20201030 18:29:11.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.577" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 18:29:11.576" endtime="20201030 18:29:11.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.579" level="INFO">VALUE: [0.00010555500000000023, 0.00010544399999999968, 0.0001055559999999997, 0.00010563899999999765, 0.00010548599999999839, 0.00010561099999999851, 0.00010563899999999765, 0.00010559699999999894, 0.0001056949999999994, 0.0001055559999999997, 0.00010561100000000198, 0.00010566700000000026, 0.00010547199999999882, 0.00010559700000000241, 0.00010559700000000241, 0.00010568099999999983, 0.00010565300000000069, 0.00010547199999999882, 0.00010569399999999993, 0.00010552800000000057, 0.00010549999999999796, 0.00010544499999999915, 0.00010568099999999983, 0.00010552800000000057, 0.00010543099999999958, 0.00010566700000000026, 0.00010562500000000155, 0.00010547300000000176, 0.00010559700000000241, 0.00010563799999999818, 0.00010568099999999983, 0.00010544399999999968, 0.00010549999999999796, 0.00010544399999999968, 0.00010566700000000026, 0.00010561099999999851, 0.00010568099999999983, 0.00010563900000000112, 0.00010568099999999983, 0.00010548599999999839, 0.00010545900000000219, 0.00010566700000000026, 0.00010547300000000176, 0.00010541700000000001, 0.00010538799999999793, 0.00010558299999999937, 0.00010565299999999722, 0.00010559699999999894, 0.00010554200000000014, 0.00010568000000000036]</msg>
<status status="PASS" starttime="20201030 18:29:11.578" endtime="20201030 18:29:11.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.573" endtime="20201030 18:29:11.580"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:11.584" endtime="20201030 18:29:11.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.582" endtime="20201030 18:29:11.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.581" endtime="20201030 18:29:11.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.223" endtime="20201030 18:29:11.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.222" endtime="20201030 18:29:11.605"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.613" endtime="20201030 18:29:11.634"></status>
</kw>
<msg timestamp="20201030 18:29:11.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.612" endtime="20201030 18:29:11.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.635" endtime="20201030 18:29:11.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.638" endtime="20201030 18:29:11.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.609" endtime="20201030 18:29:11.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.607" endtime="20201030 18:29:11.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.647" endtime="20201030 18:29:11.931"></status>
</kw>
<msg timestamp="20201030 18:29:11.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022823819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022929889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.645" endtime="20201030 18:29:11.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022823819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022929889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.935" endtime="20201030 18:29:11.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.943" endtime="20201030 18:29:11.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.643" endtime="20201030 18:29:11.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.641" endtime="20201030 18:29:11.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:11.950" level="INFO">${RESULT} = [{'diff': 0.00010606999999999978}, {'diff': 0.00010662499999999908}, {'diff': 0.00010654200000000114}, {'diff': 0.00010658399999999985}, {'diff': 0.00010658399999999985}, {'diff': 0.000106625000000002...</msg>
<status status="PASS" starttime="20201030 18:29:11.947" endtime="20201030 18:29:11.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:11.954" level="INFO">${ACCURACY} = {'diff': [0.00010606999999999978, 0.00010662499999999908, 0.00010654200000000114, 0.00010658399999999985, 0.00010658399999999985, 0.00010662500000000255, 0.00010641699999999754, 0.00010659699999999994...</msg>
<status status="PASS" starttime="20201030 18:29:11.951" endtime="20201030 18:29:11.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.958" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 18:29:11.957" endtime="20201030 18:29:11.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.961" level="INFO">VALUE: [0.00010606999999999978, 0.00010662499999999908, 0.00010654200000000114, 0.00010658399999999985, 0.00010658399999999985, 0.00010662500000000255, 0.00010641699999999754, 0.00010659699999999994, 0.00010668000000000136, 0.0001065690000000008, 0.00010662499999999908, 0.0001065829999999969, 0.00010643000000000111, 0.00010663899999999865, 0.00010659699999999994, 0.00010668100000000083, 0.0001067080000000005, 0.00010643099999999711, 0.00010665300000000169, 0.00010644500000000015, 0.00010654199999999767, 0.00010649999999999896, 0.00010668000000000136, 0.00010649999999999896, 0.00010662499999999908, 0.0001063750000000023, 0.00010649999999999896, 0.00010668000000000136, 0.00010662499999999908, 0.00010644400000000068, 0.00010652800000000157, 0.00010668099999999736, 0.00010658399999999985, 0.00010663899999999865, 0.00010644500000000015, 0.00010643100000000058, 0.0001065560000000007, 0.00010665299999999822, 0.00010645800000000025, 0.00010647199999999982, 0.0001065690000000008, 0.000106514000000002, 0.00010645799999999678, 0.00010661099999999951, 0.00010650000000000243, 0.00010659699999999994, 0.00010644400000000068, 0.00010668100000000083, 0.00010649999999999896, 0.00010645899999999972]</msg>
<status status="PASS" starttime="20201030 18:29:11.960" endtime="20201030 18:29:11.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.955" endtime="20201030 18:29:11.963"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:11.967" endtime="20201030 18:29:11.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.965" endtime="20201030 18:29:11.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.964" endtime="20201030 18:29:11.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.606" endtime="20201030 18:29:11.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.605" endtime="20201030 18:29:11.987"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.996" endtime="20201030 18:29:12.016"></status>
</kw>
<msg timestamp="20201030 18:29:12.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.994" endtime="20201030 18:29:12.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.018" endtime="20201030 18:29:12.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.020" endtime="20201030 18:29:12.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.992" endtime="20201030 18:29:12.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.990" endtime="20201030 18:29:12.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.029" endtime="20201030 18:29:12.315"></status>
</kw>
<msg timestamp="20201030 18:29:12.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022223014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022329972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:12.028" endtime="20201030 18:29:12.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022223014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022329972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:12.319" endtime="20201030 18:29:12.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.327" endtime="20201030 18:29:12.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.025" endtime="20201030 18:29:12.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.023" endtime="20201030 18:29:12.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:12.333" level="INFO">${RESULT} = [{'diff': 0.00010695800000000075}, {'diff': 0.00010748600000000039}, {'diff': 0.00010747200000000082}, {'diff': 0.00010770900000000097}, {'diff': 0.0001075560000000017}, {'diff': 0.0001075559999999982...</msg>
<status status="PASS" starttime="20201030 18:29:12.330" endtime="20201030 18:29:12.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:12.338" level="INFO">${ACCURACY} = {'diff': [0.00010695800000000075, 0.00010748600000000039, 0.00010747200000000082, 0.00010770900000000097, 0.0001075560000000017, 0.00010755599999999824, 0.00010749999999999996, 0.00010744500000000115,...</msg>
<status status="PASS" starttime="20201030 18:29:12.334" endtime="20201030 18:29:12.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.342" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 18:29:12.341" endtime="20201030 18:29:12.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.345" level="INFO">VALUE: [0.00010695800000000075, 0.00010748600000000039, 0.00010747200000000082, 0.00010770900000000097, 0.0001075560000000017, 0.00010755599999999824, 0.00010749999999999996, 0.00010744500000000115, 0.00010748599999999692, 0.00010744399999999821, 0.00010766599999999932, 0.0001077500000000002, 0.00010747199999999735, 0.0001075690000000018, 0.00010768099999999836, 0.00010772200000000107, 0.00010765299999999922, 0.0001077089999999975, 0.00010766700000000226, 0.0001075279999999991, 0.00010765299999999922, 0.00010745900000000072, 0.00010745900000000072, 0.000107514000000003, 0.00010751399999999953, 0.00010758300000000137, 0.00010734699999999722, 0.00010762500000000008, 0.00010749999999999996, 0.00010741700000000201, 0.00010749999999999996, 0.00010747200000000082, 0.00010763900000000312, 0.00010759700000000094, 0.00010769499999999793, 0.00010761100000000051, 0.00010745900000000072, 0.00010743099999999811, 0.00010751399999999953, 0.00010766699999999879, 0.00010770799999999803, 0.00010761100000000051, 0.00010754099999999919, 0.0001075829999999979, 0.00010761100000000051, 0.00010752699999999962, 0.00010759699999999747, 0.00010759700000000094, 0.00010749999999999996, 0.00010745900000000072]</msg>
<status status="PASS" starttime="20201030 18:29:12.343" endtime="20201030 18:29:12.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.339" endtime="20201030 18:29:12.346"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:12.350" endtime="20201030 18:29:12.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.348" endtime="20201030 18:29:12.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.347" endtime="20201030 18:29:12.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.988" endtime="20201030 18:29:12.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.988" endtime="20201030 18:29:12.370"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.379" endtime="20201030 18:29:12.400"></status>
</kw>
<msg timestamp="20201030 18:29:12.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.378" endtime="20201030 18:29:12.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.402" endtime="20201030 18:29:12.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.404" endtime="20201030 18:29:12.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.375" endtime="20201030 18:29:12.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.373" endtime="20201030 18:29:12.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.413" endtime="20201030 18:29:12.700"></status>
</kw>
<msg timestamp="20201030 18:29:12.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022413931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022522625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:12.412" endtime="20201030 18:29:12.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022413931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022522625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:12.704" endtime="20201030 18:29:12.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.712" endtime="20201030 18:29:12.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.409" endtime="20201030 18:29:12.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.408" endtime="20201030 18:29:12.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:12.719" level="INFO">${RESULT} = [{'diff': 0.00010869399999999946}, {'diff': 0.00010852700000000062}, {'diff': 0.00010854100000000019}, {'diff': 0.00010852699999999715}, {'diff': 0.00010866599999999685}, {'diff': 0.000108514000000000...</msg>
<status status="PASS" starttime="20201030 18:29:12.716" endtime="20201030 18:29:12.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:12.723" level="INFO">${ACCURACY} = {'diff': [0.00010869399999999946, 0.00010852700000000062, 0.00010854100000000019, 0.00010852699999999715, 0.00010866599999999685, 0.00010851400000000053, 0.00010861100000000151, 0.00010858300000000237...</msg>
<status status="PASS" starttime="20201030 18:29:12.720" endtime="20201030 18:29:12.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.727" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 18:29:12.726" endtime="20201030 18:29:12.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.730" level="INFO">VALUE: [0.00010869399999999946, 0.00010852700000000062, 0.00010854100000000019, 0.00010852699999999715, 0.00010866599999999685, 0.00010851400000000053, 0.00010861100000000151, 0.00010858300000000237, 0.00010869399999999946, 0.00010854199999999967, 0.00010866699999999979, 0.00010848600000000139, 0.00010858399999999838, 0.00010849999999999749, 0.00010841699999999954, 0.00010844499999999868, 0.00010851299999999758, 0.00010842999999999964, 0.00010840199999999703, 0.00010847200000000182, 0.00010859700000000194, 0.00010851400000000053, 0.0001085280000000001, 0.00010851400000000053, 0.00010861100000000151, 0.00010850000000000096, 0.00010868099999999936, 0.00010844499999999868, 0.00010863900000000065, 0.00010849999999999749, 0.00010849999999999749, 0.00010845800000000225, 0.00010866600000000032, 0.00010855499999999976, 0.00010848599999999792, 0.00010847200000000182, 0.00010861100000000151, 0.00010872200000000207, 0.00010847200000000182, 0.00010845800000000225, 0.00010843099999999911, 0.00010851400000000053, 0.00010847299999999782, 0.00010854199999999967, 0.00010859699999999847, 0.00010848699999999739, 0.00010865199999999728, 0.00010847199999999835, 0.00010849999999999749, 0.00010851400000000053]</msg>
<status status="PASS" starttime="20201030 18:29:12.728" endtime="20201030 18:29:12.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.723" endtime="20201030 18:29:12.731"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:12.735" endtime="20201030 18:29:12.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.733" endtime="20201030 18:29:12.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.732" endtime="20201030 18:29:12.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.371" endtime="20201030 18:29:12.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.371" endtime="20201030 18:29:12.755"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.764" endtime="20201030 18:29:12.786"></status>
</kw>
<msg timestamp="20201030 18:29:12.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.762" endtime="20201030 18:29:12.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.787" endtime="20201030 18:29:12.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.790" endtime="20201030 18:29:12.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.760" endtime="20201030 18:29:12.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.758" endtime="20201030 18:29:12.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.799" endtime="20201030 18:29:13.091"></status>
</kw>
<msg timestamp="20201030 18:29:13.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024829083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024938278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:12.797" endtime="20201030 18:29:13.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024829083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024938278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.100" endtime="20201030 18:29:13.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.118" endtime="20201030 18:29:13.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.795" endtime="20201030 18:29:13.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.793" endtime="20201030 18:29:13.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:13.132" level="INFO">${RESULT} = [{'diff': 0.0001091950000000029}, {'diff': 0.00010961200000000199}, {'diff': 0.00010970800000000003}, {'diff': 0.00010954100000000119}, {'diff': 0.00010943000000000064}, {'diff': 0.0001094859999999989...</msg>
<status status="PASS" starttime="20201030 18:29:13.125" endtime="20201030 18:29:13.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:13.140" level="INFO">${ACCURACY} = {'diff': [0.0001091950000000029, 0.00010961200000000199, 0.00010970800000000003, 0.00010954100000000119, 0.00010943000000000064, 0.00010948599999999892, 0.00010954200000000067, 0.00010943000000000064,...</msg>
<status status="PASS" starttime="20201030 18:29:13.134" endtime="20201030 18:29:13.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.149" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 18:29:13.147" endtime="20201030 18:29:13.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.154" level="INFO">VALUE: [0.0001091950000000029, 0.00010961200000000199, 0.00010970800000000003, 0.00010954100000000119, 0.00010943000000000064, 0.00010948599999999892, 0.00010954200000000067, 0.00010943000000000064, 0.00010951399999999806, 0.0001095829999999999, 0.00010958300000000337, 0.00010952799999999763, 0.00010945899999999925, 0.00010945899999999925, 0.0001095699999999998, 0.00010961200000000199, 0.00010959699999999947, 0.0001095829999999999, 0.00010969400000000046, 0.00010948600000000239, 0.0001094159999999976, 0.00010959699999999947, 0.00010949999999999849, 0.00010970800000000003, 0.00010951399999999806, 0.0001095829999999999, 0.00010947199999999935, 0.00010943100000000011, 0.00010944499999999968, 0.0001095280000000011, 0.00010940300000000097, 0.00010963900000000165, 0.00010944400000000021, 0.00010948600000000239, 0.00010949999999999849, 0.00010968000000000089, 0.00010956900000000033, 0.00010955500000000076, 0.00010966699999999732, 0.00010966700000000079, 0.00010963899999999818, 0.00010959799999999895, 0.00010945899999999925, 0.00010952799999999763, 0.00010945899999999925, 0.00010943100000000011, 0.00010951400000000153, 0.00010952799999999763, 0.00010966600000000132, 0.00010951300000000205]</msg>
<status status="PASS" starttime="20201030 18:29:13.151" endtime="20201030 18:29:13.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.142" endtime="20201030 18:29:13.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:13.162" endtime="20201030 18:29:13.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.161" endtime="20201030 18:29:13.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.159" endtime="20201030 18:29:13.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.756" endtime="20201030 18:29:13.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.756" endtime="20201030 18:29:13.183"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.191" endtime="20201030 18:29:13.211"></status>
</kw>
<msg timestamp="20201030 18:29:13.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.190" endtime="20201030 18:29:13.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.213" endtime="20201030 18:29:13.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.215" endtime="20201030 18:29:13.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.187" endtime="20201030 18:29:13.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.185" endtime="20201030 18:29:13.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.224" endtime="20201030 18:29:13.510"></status>
</kw>
<msg timestamp="20201030 18:29:13.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022021, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022131889, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:13.223" endtime="20201030 18:29:13.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022021, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022131889, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:13.514" endtime="20201030 18:29:13.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.522" endtime="20201030 18:29:13.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.220" endtime="20201030 18:29:13.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.218" endtime="20201030 18:29:13.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:13.528" level="INFO">${RESULT} = [{'diff': 0.00011088899999999943}, {'diff': 0.00011072199999999713}, {'diff': 0.00011065300000000222}, {'diff': 0.00011048699999999939}, {'diff': 0.00011051400000000253}, {'diff': 0.000110679999999998...</msg>
<status status="PASS" starttime="20201030 18:29:13.525" endtime="20201030 18:29:13.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:13.533" level="INFO">${ACCURACY} = {'diff': [0.00011088899999999943, 0.00011072199999999713, 0.00011065300000000222, 0.00011048699999999939, 0.00011051400000000253, 0.00011067999999999842, 0.0001104159999999986, 0.00011047200000000035,...</msg>
<status status="PASS" starttime="20201030 18:29:13.529" endtime="20201030 18:29:13.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.538" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 18:29:13.537" endtime="20201030 18:29:13.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.540" level="INFO">VALUE: [0.00011088899999999943, 0.00011072199999999713, 0.00011065300000000222, 0.00011048699999999939, 0.00011051400000000253, 0.00011067999999999842, 0.0001104159999999986, 0.00011047200000000035, 0.00011056900000000133, 0.00011069400000000146, 0.00011065300000000222, 0.00011063899999999918, 0.00011068099999999789, 0.00011055600000000124, 0.00011048599999999992, 0.00011052799999999863, 0.00011056999999999734, 0.00011058400000000038, 0.00011050000000000296, 0.0001105700000000008, 0.00011042999999999817, 0.00011052699999999915, 0.00011067999999999842, 0.00011051399999999906, 0.00011052799999999863, 0.00011043000000000164, 0.00011048599999999992, 0.00011044400000000121, 0.00011041699999999807, 0.00011048599999999992, 0.00011061100000000004, 0.0001105280000000021, 0.00011058399999999691, 0.00011055600000000124, 0.00011043099999999764, 0.00011074999999999974, 0.00011070799999999756, 0.0001107220000000006, 0.00011061100000000004, 0.00011044400000000121, 0.00011044399999999774, 0.00011061100000000004, 0.00011065299999999875, 0.00011051400000000253, 0.00011068099999999789, 0.00011054200000000167, 0.00011052799999999863, 0.00011051399999999906, 0.00011069500000000093, 0.0001105280000000021]</msg>
<status status="PASS" starttime="20201030 18:29:13.539" endtime="20201030 18:29:13.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.534" endtime="20201030 18:29:13.542"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:13.545" endtime="20201030 18:29:13.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.544" endtime="20201030 18:29:13.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.542" endtime="20201030 18:29:13.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.184" endtime="20201030 18:29:13.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.183" endtime="20201030 18:29:13.566"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.574" endtime="20201030 18:29:13.595"></status>
</kw>
<msg timestamp="20201030 18:29:13.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.573" endtime="20201030 18:29:13.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.596" endtime="20201030 18:29:13.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.599" endtime="20201030 18:29:13.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.570" endtime="20201030 18:29:13.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.568" endtime="20201030 18:29:13.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.608" endtime="20201030 18:29:13.901"></status>
</kw>
<msg timestamp="20201030 18:29:13.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021868194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021979764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.606" endtime="20201030 18:29:13.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021868194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021979764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.910" endtime="20201030 18:29:13.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.928" endtime="20201030 18:29:13.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.604" endtime="20201030 18:29:13.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.602" endtime="20201030 18:29:13.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:13.942" level="INFO">${RESULT} = [{'diff': 0.00011156999999999834}, {'diff': 0.0001115700000000018}, {'diff': 0.00011168100000000236}, {'diff': 0.00011162500000000061}, {'diff': 0.00011151400000000006}, {'diff': 0.0001115409999999997...</msg>
<status status="PASS" starttime="20201030 18:29:13.935" endtime="20201030 18:29:13.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:13.953" level="INFO">${ACCURACY} = {'diff': [0.00011156999999999834, 0.0001115700000000018, 0.00011168100000000236, 0.00011162500000000061, 0.00011151400000000006, 0.00011154099999999972, 0.00011145800000000178, 0.00011162500000000061,...</msg>
<status status="PASS" starttime="20201030 18:29:13.945" endtime="20201030 18:29:13.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.963" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 18:29:13.961" endtime="20201030 18:29:13.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.967" level="INFO">VALUE: [0.00011156999999999834, 0.0001115700000000018, 0.00011168100000000236, 0.00011162500000000061, 0.00011151400000000006, 0.00011154099999999972, 0.00011145800000000178, 0.00011162500000000061, 0.00011150000000000049, 0.00011156899999999886, 0.00011145799999999831, 0.00011168100000000236, 0.00011163900000000018, 0.00011169399999999899, 0.00011150000000000049, 0.00011159800000000095, 0.00011169500000000193, 0.00011169500000000193, 0.00011144499999999821, 0.00011151400000000006, 0.00011149999999999702, 0.00011138800000000046, 0.00011166599999999985, 0.00011145800000000178, 0.000111596999999998, 0.00011145800000000178, 0.00011170800000000203, 0.00011159700000000147, 0.00011145799999999831, 0.00011165300000000322, 0.00011165299999999975, 0.00011165299999999975, 0.00011161100000000104, 0.00011145899999999778, 0.00011168099999999889, 0.00011148599999999745, 0.00011170799999999856, 0.00011165200000000028, 0.0001115419999999992, 0.00011145799999999831, 0.00011147200000000135, 0.00011147200000000135, 0.00011159700000000147, 0.00011145799999999831, 0.00011166699999999932, 0.00011145900000000125, 0.00011147300000000082, 0.00011145900000000125, 0.00011143099999999864, 0.00011161199999999705]</msg>
<status status="PASS" starttime="20201030 18:29:13.966" endtime="20201030 18:29:13.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.955" endtime="20201030 18:29:13.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:13.972" endtime="20201030 18:29:13.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.971" endtime="20201030 18:29:13.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.970" endtime="20201030 18:29:13.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.567" endtime="20201030 18:29:13.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.566" endtime="20201030 18:29:13.993"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.002" endtime="20201030 18:29:14.022"></status>
</kw>
<msg timestamp="20201030 18:29:14.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.000" endtime="20201030 18:29:14.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.023" endtime="20201030 18:29:14.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.026" endtime="20201030 18:29:14.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.998" endtime="20201030 18:29:14.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.996" endtime="20201030 18:29:14.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.035" endtime="20201030 18:29:14.320"></status>
</kw>
<msg timestamp="20201030 18:29:14.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023059097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023171236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:14.033" endtime="20201030 18:29:14.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023059097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023171236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:14.324" endtime="20201030 18:29:14.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.333" endtime="20201030 18:29:14.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.031" endtime="20201030 18:29:14.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.029" endtime="20201030 18:29:14.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:14.340" level="INFO">${RESULT} = [{'diff': 0.00011213900000000068}, {'diff': 0.00011247199999999888}, {'diff': 0.0001125700000000028}, {'diff': 0.00011268099999999989}, {'diff': 0.00011268099999999989}, {'diff': 0.0001127089999999990...</msg>
<status status="PASS" starttime="20201030 18:29:14.336" endtime="20201030 18:29:14.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:14.344" level="INFO">${ACCURACY} = {'diff': [0.00011213900000000068, 0.00011247199999999888, 0.0001125700000000028, 0.00011268099999999989, 0.00011268099999999989, 0.00011270899999999903, 0.0001125550000000003, 0.00011259799999999848, ...</msg>
<status status="PASS" starttime="20201030 18:29:14.341" endtime="20201030 18:29:14.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.348" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 18:29:14.347" endtime="20201030 18:29:14.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.350" level="INFO">VALUE: [0.00011213900000000068, 0.00011247199999999888, 0.0001125700000000028, 0.00011268099999999989, 0.00011268099999999989, 0.00011270899999999903, 0.0001125550000000003, 0.00011259799999999848, 0.00011250000000000149, 0.00011262500000000161, 0.00011247199999999888, 0.00011265300000000075, 0.00011261100000000204, 0.00011259700000000247, 0.000112596999999999, 0.00011243099999999964, 0.00011248600000000192, 0.00011245799999999931, 0.00011262500000000161, 0.00011262499999999814, 0.00011262499999999814, 0.00011248700000000139, 0.00011259800000000195, 0.00011240200000000103, 0.00011261100000000204, 0.00011251400000000106, 0.00011256999999999934, 0.00011270799999999956, 0.00011248599999999845, 0.00011268099999999989, 0.00011270799999999956, 0.00011247199999999888, 0.00011251399999999759, 0.00011261099999999857, 0.00011258399999999891, 0.00011256999999999934, 0.00011262500000000161, 0.00011268000000000042, 0.00011265200000000128, 0.00011252699999999768, 0.00011248600000000192, 0.00011267999999999695, 0.0001125420000000002, 0.00011255599999999977, 0.00011262499999999814, 0.00011258299999999943, 0.00011262500000000161, 0.00011262500000000161, 0.00011245900000000225, 0.00011243099999999964]</msg>
<status status="PASS" starttime="20201030 18:29:14.349" endtime="20201030 18:29:14.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.344" endtime="20201030 18:29:14.353"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:14.356" endtime="20201030 18:29:14.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.355" endtime="20201030 18:29:14.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.354" endtime="20201030 18:29:14.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.994" endtime="20201030 18:29:14.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.993" endtime="20201030 18:29:14.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.566" endtime="20201030 18:29:14.377"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:14.381" endtime="20201030 18:29:14.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.379" endtime="20201030 18:29:14.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.378" endtime="20201030 18:29:14.401"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:35.496" endtime="20201030 18:29:14.401" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:27:55.115" endtime="20201030 18:29:14.405"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.458" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:29:14.466" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:29:15.682" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:29:14.456" endtime="20201030 18:29:15.683"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.686" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:29:15.684" endtime="20201030 18:29:15.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.455" endtime="20201030 18:29:15.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:15.689" endtime="20201030 18:29:15.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.687" endtime="20201030 18:29:15.872"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.884" endtime="20201030 18:29:15.899"></status>
</kw>
<msg timestamp="20201030 18:29:15.900" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.883" endtime="20201030 18:29:15.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.902" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.901" endtime="20201030 18:29:15.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.906" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:15.903" endtime="20201030 18:29:15.906"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:15.880" endtime="20201030 18:29:15.907"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:15.878" endtime="20201030 18:29:15.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.877" endtime="20201030 18:29:15.907"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:15.911" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:15.911" endtime="20201030 18:29:15.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.908" endtime="20201030 18:29:15.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.876" endtime="20201030 18:29:15.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.875" endtime="20201030 18:29:15.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.913" endtime="20201030 18:29:15.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.874" endtime="20201030 18:29:15.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.916" endtime="20201030 18:29:15.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.873" endtime="20201030 18:29:15.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.454" endtime="20201030 18:29:15.919"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:15.924" endtime="20201030 18:29:15.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.923" endtime="20201030 18:29:15.944"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.957" endtime="20201030 18:29:15.971"></status>
</kw>
<msg timestamp="20201030 18:29:15.971" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.955" endtime="20201030 18:29:15.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.974" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.972" endtime="20201030 18:29:15.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.978" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:15.975" endtime="20201030 18:29:15.978"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:15.953" endtime="20201030 18:29:15.979"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:15.951" endtime="20201030 18:29:15.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.949" endtime="20201030 18:29:15.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:15.983" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:15.983" endtime="20201030 18:29:15.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.980" endtime="20201030 18:29:15.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.948" endtime="20201030 18:29:15.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.948" endtime="20201030 18:29:15.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.985" endtime="20201030 18:29:15.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.947" endtime="20201030 18:29:15.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.945" endtime="20201030 18:29:15.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.921" endtime="20201030 18:29:15.988"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.996" endtime="20201030 18:29:22.115"></status>
</kw>
<msg timestamp="20201030 18:29:22.115" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.994" endtime="20201030 18:29:22.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.118" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.116" endtime="20201030 18:29:22.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.119" endtime="20201030 18:29:22.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.992" endtime="20201030 18:29:22.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.990" endtime="20201030 18:29:22.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:22.124" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 0, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:29:22.122" endtime="20201030 18:29:22.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.129" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:22.128" endtime="20201030 18:29:22.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.131" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:29:22.130" endtime="20201030 18:29:22.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.125" endtime="20201030 18:29:22.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.135" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:22.134" endtime="20201030 18:29:22.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.137" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:29:22.136" endtime="20201030 18:29:22.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.132" endtime="20201030 18:29:22.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.142" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:29:22.141" endtime="20201030 18:29:22.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.144" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 18:29:22.143" endtime="20201030 18:29:22.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.139" endtime="20201030 18:29:22.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.151" endtime="20201030 18:29:22.449"></status>
</kw>
<msg timestamp="20201030 18:29:22.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061987764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162007333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.150" endtime="20201030 18:29:22.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061987764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162007333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.452" endtime="20201030 18:29:22.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.458" endtime="20201030 18:29:22.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.147" endtime="20201030 18:29:22.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.146" endtime="20201030 18:29:22.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:29:22.464" level="INFO">${FILTERED} = [{'diff': 0.100019569}, {'diff': 0.10000729199999997}, {'diff': 0.100007181}, {'diff': 0.10000679199999996}, {'diff': 0.10000733299999998}, {'diff': 5.419999999922709e-07}, {'diff': 0.1000072360000001...</msg>
<status status="PASS" starttime="20201030 18:29:22.461" endtime="20201030 18:29:22.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:22.467" level="INFO">${RESULT} = {'diff': [0.100019569, 0.10000729199999997, 0.100007181, 0.10000679199999996, 0.10000733299999998, 5.419999999922709e-07, 0.10000723600000017, 0.10000679200000007, 0.10000734700000002, 0.1000073619999...</msg>
<status status="PASS" starttime="20201030 18:29:22.465" endtime="20201030 18:29:22.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.471" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:29:22.470" endtime="20201030 18:29:22.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.473" level="INFO">VALUE: [0.100019569, 0.10000729199999997, 0.100007181, 0.10000679199999996, 0.10000733299999998, 5.419999999922709e-07, 0.10000723600000017, 0.10000679200000007, 0.10000734700000002, 0.10000736199999993, 0.10000731900000015, 0.1000073050000001, 5.419999999922709e-07, 0.10000727800000009, 5.419999999922709e-07, 0.10000731899999993, 0.10000672199999983, 0.10000724999999999, 0.10000681999999994, 0.10000733299999975, 0.10000729200000036, 5.409999999095305e-07, 5.419999999922709e-07, 0.10000733299999975, 5.419999999922709e-07, 0.10000724999999999, 0.10000722299999953, 0.10000724999999999, 0.10000680500000048, 0.10000734700000002, 0.10000733399999984]</msg>
<status status="PASS" starttime="20201030 18:29:22.472" endtime="20201030 18:29:22.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.468" endtime="20201030 18:29:22.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:22.478" endtime="20201030 18:29:22.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.477" endtime="20201030 18:29:22.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.476" endtime="20201030 18:29:22.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.988" endtime="20201030 18:29:22.499"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:15.919" endtime="20201030 18:29:22.499" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:22.506" endtime="20201030 18:29:22.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.504" endtime="20201030 18:29:22.526"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.540" endtime="20201030 18:29:22.554"></status>
</kw>
<msg timestamp="20201030 18:29:22.554" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.538" endtime="20201030 18:29:22.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.557" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.555" endtime="20201030 18:29:22.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.560" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:22.558" endtime="20201030 18:29:22.560"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:22.534" endtime="20201030 18:29:22.561"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:22.532" endtime="20201030 18:29:22.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.531" endtime="20201030 18:29:22.562"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:22.565" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:22.565" endtime="20201030 18:29:22.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.562" endtime="20201030 18:29:22.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.530" endtime="20201030 18:29:22.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.529" endtime="20201030 18:29:22.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.567" endtime="20201030 18:29:22.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.528" endtime="20201030 18:29:22.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.526" endtime="20201030 18:29:22.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.503" endtime="20201030 18:29:22.570"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.578" endtime="20201030 18:29:28.699"></status>
</kw>
<msg timestamp="20201030 18:29:28.700" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.576" endtime="20201030 18:29:28.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.705" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:28.702" endtime="20201030 18:29:28.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.707" endtime="20201030 18:29:28.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.574" endtime="20201030 18:29:28.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.572" endtime="20201030 18:29:28.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:28.719" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 5, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:29:28.715" endtime="20201030 18:29:28.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.727" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:28.725" endtime="20201030 18:29:28.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.731" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:29:28.729" endtime="20201030 18:29:28.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.720" endtime="20201030 18:29:28.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.742" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:28.739" endtime="20201030 18:29:28.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.746" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:29:28.744" endtime="20201030 18:29:28.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.734" endtime="20201030 18:29:28.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.757" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:29:28.754" endtime="20201030 18:29:28.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.761" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 18:29:28.759" endtime="20201030 18:29:28.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.749" endtime="20201030 18:29:28.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.782" endtime="20201030 18:29:29.061"></status>
</kw>
<msg timestamp="20201030 18:29:29.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062020917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162077208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:28.779" endtime="20201030 18:29:29.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062020917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162077208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:29.064" endtime="20201030 18:29:29.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.070" endtime="20201030 18:29:29.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.774" endtime="20201030 18:29:29.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.770" endtime="20201030 18:29:29.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:29:29.076" level="INFO">${FILTERED} = [{'diff': 0.10005629099999999}, {'diff': 0.10000691699999997}, {'diff': 0.10000730499999999}, {'diff': 5.419999999922709e-07}, {'diff': 0.10000727799999998}, {'diff': 0.1000072769999999}, {'diff': 0.1...</msg>
<status status="PASS" starttime="20201030 18:29:29.073" endtime="20201030 18:29:29.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:29.079" level="INFO">${RESULT} = {'diff': [0.10005629099999999, 0.10000691699999997, 0.10000730499999999, 5.419999999922709e-07, 0.10000727799999998, 0.1000072769999999, 0.10000681900000008, 0.10000732000000001, 5.409999999095305e-07...</msg>
<status status="PASS" starttime="20201030 18:29:29.077" endtime="20201030 18:29:29.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.083" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:29:29.082" endtime="20201030 18:29:29.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.085" level="INFO">VALUE: [0.10005629099999999, 0.10000691699999997, 0.10000730499999999, 5.419999999922709e-07, 0.10000727799999998, 0.1000072769999999, 0.10000681900000008, 0.10000732000000001, 5.409999999095305e-07, 5.419999999922709e-07, 0.10000733299999998, 0.1000073469999998, 0.1000073330000002, 0.10000683300000013, 0.10000729099999983, 0.10000681899999986, 0.1000073330000002, 0.10000734699999958, 0.10000726400000026, 0.1000073330000002, 0.1000073610000003, 0.10000732000000001, 0.10000731900000037, 0.10000740300000022, 0.10000733299999975, 0.1000067910000002, 5.419999995481817e-07, 5.419999995481817e-07, 0.10000726399999937, 0.10000680499999959, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201030 18:29:29.084" endtime="20201030 18:29:29.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.080" endtime="20201030 18:29:29.087"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:29.090" endtime="20201030 18:29:29.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.089" endtime="20201030 18:29:29.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.088" endtime="20201030 18:29:29.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.570" endtime="20201030 18:29:29.111"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:22.501" endtime="20201030 18:29:29.111" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:29.118" endtime="20201030 18:29:29.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.116" endtime="20201030 18:29:29.138"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.151" endtime="20201030 18:29:29.165"></status>
</kw>
<msg timestamp="20201030 18:29:29.166" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.150" endtime="20201030 18:29:29.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.168" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.167" endtime="20201030 18:29:29.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.171" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:29.169" endtime="20201030 18:29:29.171"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:29.147" endtime="20201030 18:29:29.172"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:29.145" endtime="20201030 18:29:29.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.144" endtime="20201030 18:29:29.173"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:29.177" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:29.176" endtime="20201030 18:29:29.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.174" endtime="20201030 18:29:29.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.143" endtime="20201030 18:29:29.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.142" endtime="20201030 18:29:29.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.178" endtime="20201030 18:29:29.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.141" endtime="20201030 18:29:29.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.138" endtime="20201030 18:29:29.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.115" endtime="20201030 18:29:29.181"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.189" endtime="20201030 18:29:35.310"></status>
</kw>
<msg timestamp="20201030 18:29:35.311" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.187" endtime="20201030 18:29:35.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.316" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:35.313" endtime="20201030 18:29:35.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.319" endtime="20201030 18:29:35.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.185" endtime="20201030 18:29:35.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.183" endtime="20201030 18:29:35.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:35.330" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 10, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:29:35.326" endtime="20201030 18:29:35.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.338" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:35.336" endtime="20201030 18:29:35.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.342" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:29:35.340" endtime="20201030 18:29:35.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.331" endtime="20201030 18:29:35.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.354" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:35.352" endtime="20201030 18:29:35.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.359" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:29:35.357" endtime="20201030 18:29:35.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.345" endtime="20201030 18:29:35.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.368" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:29:35.366" endtime="20201030 18:29:35.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.373" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 18:29:35.371" endtime="20201030 18:29:35.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.362" endtime="20201030 18:29:35.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.385" endtime="20201030 18:29:35.661"></status>
</kw>
<msg timestamp="20201030 18:29:35.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061506556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161594444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:35.383" endtime="20201030 18:29:35.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061506556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161594444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:35.664" endtime="20201030 18:29:35.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.670" endtime="20201030 18:29:35.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.379" endtime="20201030 18:29:35.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.376" endtime="20201030 18:29:35.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:29:35.675" level="INFO">${FILTERED} = [{'diff': 0.10008788800000001}, {'diff': 0.09991843100000003}, {'diff': 0.10000640300000002}, {'diff': 0.10000681999999994}, {'diff': 0.10000734700000002}, {'diff': 0.10000734700000014}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201030 18:29:35.673" endtime="20201030 18:29:35.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:35.679" level="INFO">${RESULT} = {'diff': [0.10008788800000001, 0.09991843100000003, 0.10000640300000002, 0.10000681999999994, 0.10000734700000002, 0.10000734700000014, 0.10000731899999993, 0.10000734700000002, 0.10000734700000002, 0...</msg>
<status status="PASS" starttime="20201030 18:29:35.676" endtime="20201030 18:29:35.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.683" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:29:35.682" endtime="20201030 18:29:35.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.685" level="INFO">VALUE: [0.10008788800000001, 0.09991843100000003, 0.10000640300000002, 0.10000681999999994, 0.10000734700000002, 0.10000734700000014, 0.10000731899999993, 0.10000734700000002, 0.10000734700000002, 0.10000734799999988, 0.10000734700000002, 5.409999999095305e-07, 0.10000727800000009, 0.10000726300000018, 0.10000724999999999, 0.10000681999999994, 0.10000736099999985, 5.419999999922709e-07, 0.10000726399999982, 0.10000726399999982, 0.10000683300000013, 0.10000737500000012, 0.10000733299999975, 5.410000003536197e-07, 0.10000722200000034, 0.10000729100000072, 0.1000072920000008, 0.10000729199999991, 0.10000727799999964]</msg>
<status status="PASS" starttime="20201030 18:29:35.684" endtime="20201030 18:29:35.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.679" endtime="20201030 18:29:35.687"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:35.690" endtime="20201030 18:29:35.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.689" endtime="20201030 18:29:35.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.687" endtime="20201030 18:29:35.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.182" endtime="20201030 18:29:35.711"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:29.113" endtime="20201030 18:29:35.711" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:35.718" endtime="20201030 18:29:35.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.716" endtime="20201030 18:29:35.738"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.750" endtime="20201030 18:29:35.765"></status>
</kw>
<msg timestamp="20201030 18:29:35.765" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:35.749" endtime="20201030 18:29:35.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.768" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:35.766" endtime="20201030 18:29:35.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.771" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:35.769" endtime="20201030 18:29:35.771"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:35.746" endtime="20201030 18:29:35.772"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:35.744" endtime="20201030 18:29:35.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.743" endtime="20201030 18:29:35.772"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:35.776" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:35.775" endtime="20201030 18:29:35.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.773" endtime="20201030 18:29:35.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.742" endtime="20201030 18:29:35.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.741" endtime="20201030 18:29:35.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.778" endtime="20201030 18:29:35.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.740" endtime="20201030 18:29:35.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.738" endtime="20201030 18:29:35.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.715" endtime="20201030 18:29:35.781"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.790" endtime="20201030 18:29:41.913"></status>
</kw>
<msg timestamp="20201030 18:29:41.915" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:35.787" endtime="20201030 18:29:41.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.920" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:41.917" endtime="20201030 18:29:41.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.923" endtime="20201030 18:29:41.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.785" endtime="20201030 18:29:41.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.783" endtime="20201030 18:29:41.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:41.933" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 15, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:29:41.930" endtime="20201030 18:29:41.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.942" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:41.940" endtime="20201030 18:29:41.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.946" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:29:41.944" endtime="20201030 18:29:41.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.935" endtime="20201030 18:29:41.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.956" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:41.954" endtime="20201030 18:29:41.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.960" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:29:41.958" endtime="20201030 18:29:41.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.949" endtime="20201030 18:29:41.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.970" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:29:41.968" endtime="20201030 18:29:41.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.974" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 18:29:41.972" endtime="20201030 18:29:41.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.963" endtime="20201030 18:29:41.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.989" endtime="20201030 18:29:42.275"></status>
</kw>
<msg timestamp="20201030 18:29:42.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062350431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162492875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:41.986" endtime="20201030 18:29:42.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062350431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162492875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:42.278" endtime="20201030 18:29:42.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.284" endtime="20201030 18:29:42.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.980" endtime="20201030 18:29:42.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.977" endtime="20201030 18:29:42.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:29:42.290" level="INFO">${FILTERED} = [{'diff': 0.10014244400000001}, {'diff': 0.100034708}, {'diff': 5.409999999650417e-07}, {'diff': 0.10000744399999995}, {'diff': 0.10000723600000005}, {'diff': 0.10000729200000003}, {'diff': 0.10000727...</msg>
<status status="PASS" starttime="20201030 18:29:42.288" endtime="20201030 18:29:42.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:42.295" level="INFO">${RESULT} = {'diff': [0.10014244400000001, 0.100034708, 5.409999999650417e-07, 0.10000744399999995, 0.10000723600000005, 0.10000729200000003, 0.100007277, 5.419999999922709e-07, 0.10000730499999988, 0.10000729199...</msg>
<status status="PASS" starttime="20201030 18:29:42.291" endtime="20201030 18:29:42.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.299" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:29:42.298" endtime="20201030 18:29:42.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.301" level="INFO">VALUE: [0.10014244400000001, 0.100034708, 5.409999999650417e-07, 0.10000744399999995, 0.10000723600000005, 0.10000729200000003, 0.100007277, 5.419999999922709e-07, 0.10000730499999988, 0.10000729199999991, 0.10000733400000006, 0.100007277, 0.10000676399999975, 0.10000726400000026, 0.10000729199999991, 0.10000729199999991, 5.409999999095305e-07, 5.419999999922709e-07, 0.10000731899999993, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000726400000026, 0.100007277, 0.10000679200000029, 0.10000722200000034, 5.419999995481817e-07, 0.10000727800000053, 5.419999995481817e-07, 0.10000730600000018, 5.410000003536197e-07, 0.10000727799999964, 0.10000680500000048]</msg>
<status status="PASS" starttime="20201030 18:29:42.300" endtime="20201030 18:29:42.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.295" endtime="20201030 18:29:42.302"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:42.306" endtime="20201030 18:29:42.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.304" endtime="20201030 18:29:42.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.303" endtime="20201030 18:29:42.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.781" endtime="20201030 18:29:42.326"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:35.713" endtime="20201030 18:29:42.327" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:42.333" endtime="20201030 18:29:42.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.332" endtime="20201030 18:29:42.353"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.366" endtime="20201030 18:29:42.379"></status>
</kw>
<msg timestamp="20201030 18:29:42.380" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:42.364" endtime="20201030 18:29:42.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.382" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:42.381" endtime="20201030 18:29:42.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.385" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:42.383" endtime="20201030 18:29:42.386"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:42.362" endtime="20201030 18:29:42.386"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:42.360" endtime="20201030 18:29:42.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.358" endtime="20201030 18:29:42.387"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:42.391" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:42.390" endtime="20201030 18:29:42.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.388" endtime="20201030 18:29:42.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.358" endtime="20201030 18:29:42.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.357" endtime="20201030 18:29:42.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.393" endtime="20201030 18:29:42.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.356" endtime="20201030 18:29:42.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.354" endtime="20201030 18:29:42.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.331" endtime="20201030 18:29:42.397"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.413" endtime="20201030 18:29:48.536"></status>
</kw>
<msg timestamp="20201030 18:29:48.537" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:42.411" endtime="20201030 18:29:48.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.543" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:48.539" endtime="20201030 18:29:48.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.546" endtime="20201030 18:29:48.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.405" endtime="20201030 18:29:48.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.401" endtime="20201030 18:29:48.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:48.557" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 20, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:29:48.553" endtime="20201030 18:29:48.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.566" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:48.564" endtime="20201030 18:29:48.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.571" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:29:48.569" endtime="20201030 18:29:48.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.559" endtime="20201030 18:29:48.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.581" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:48.579" endtime="20201030 18:29:48.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.586" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:29:48.584" endtime="20201030 18:29:48.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.574" endtime="20201030 18:29:48.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.596" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:29:48.594" endtime="20201030 18:29:48.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.601" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 18:29:48.599" endtime="20201030 18:29:48.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.589" endtime="20201030 18:29:48.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.617" endtime="20201030 18:29:48.906"></status>
</kw>
<msg timestamp="20201030 18:29:48.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070617319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.170826361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:48.614" endtime="20201030 18:29:48.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070617319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.170826361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:48.909" endtime="20201030 18:29:48.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.915" endtime="20201030 18:29:48.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.608" endtime="20201030 18:29:48.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.604" endtime="20201030 18:29:48.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:29:48.922" level="INFO">${FILTERED} = [{'diff': 0.10020904200000001}, {'diff': 0.100041403}, {'diff': 0.09978925}, {'diff': 0.10000736099999996}, {'diff': 5.419999999922709e-07}, {'diff': 0.10000731899999993}, {'diff': 0.10000734700000002...</msg>
<status status="PASS" starttime="20201030 18:29:48.919" endtime="20201030 18:29:48.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:48.926" level="INFO">${RESULT} = {'diff': [0.10020904200000001, 0.100041403, 0.09978925, 0.10000736099999996, 5.419999999922709e-07, 0.10000731899999993, 0.10000734700000002, 0.10000734700000002, 0.10000731899999993, 0.10000674999999...</msg>
<status status="PASS" starttime="20201030 18:29:48.923" endtime="20201030 18:29:48.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.931" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:29:48.930" endtime="20201030 18:29:48.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.933" level="INFO">VALUE: [0.10020904200000001, 0.100041403, 0.09978925, 0.10000736099999996, 5.419999999922709e-07, 0.10000731899999993, 0.10000734700000002, 0.10000734700000002, 0.10000731899999993, 0.10000674999999992, 0.10000679099999998, 0.10000676399999997, 0.10000727799999987, 0.10000684700000018, 0.1000073330000002, 0.1000073330000002, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000729199999991, 0.10000727799999964, 0.10000729199999991, 0.10000680600000011, 0.10000731899999993, 5.410000003536197e-07, 0.10000724999999999, 0.10000724999999955, 5.420000004363601e-07, 0.1000073480000001, 0.10000677800000002, 0.10000686099999978, 0.10000733300000064, 0.10000677699999994, 0.10000727799999964]</msg>
<status status="PASS" starttime="20201030 18:29:48.932" endtime="20201030 18:29:48.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.927" endtime="20201030 18:29:48.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:48.938" endtime="20201030 18:29:48.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.937" endtime="20201030 18:29:48.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.936" endtime="20201030 18:29:48.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.398" endtime="20201030 18:29:48.959"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:42.328" endtime="20201030 18:29:48.960" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:48.973" endtime="20201030 18:29:48.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.971" endtime="20201030 18:29:48.993"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.006" endtime="20201030 18:29:49.020"></status>
</kw>
<msg timestamp="20201030 18:29:49.021" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:49.005" endtime="20201030 18:29:49.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.023" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:49.022" endtime="20201030 18:29:49.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.027" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:49.025" endtime="20201030 18:29:49.028"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:49.002" endtime="20201030 18:29:49.029"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:48.999" endtime="20201030 18:29:49.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.998" endtime="20201030 18:29:49.030"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:49.033" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:49.033" endtime="20201030 18:29:49.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.030" endtime="20201030 18:29:49.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.997" endtime="20201030 18:29:49.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.997" endtime="20201030 18:29:49.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.035" endtime="20201030 18:29:49.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.995" endtime="20201030 18:29:49.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.993" endtime="20201030 18:29:49.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.970" endtime="20201030 18:29:49.038"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.046" endtime="20201030 18:29:55.170"></status>
</kw>
<msg timestamp="20201030 18:29:55.171" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:49.045" endtime="20201030 18:29:55.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.177" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:55.173" endtime="20201030 18:29:55.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.180" endtime="20201030 18:29:55.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.042" endtime="20201030 18:29:55.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.040" endtime="20201030 18:29:55.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:55.191" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 25, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 18:29:55.187" endtime="20201030 18:29:55.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.200" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:55.198" endtime="20201030 18:29:55.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.205" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:29:55.202" endtime="20201030 18:29:55.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.193" endtime="20201030 18:29:55.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.225" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:55.221" endtime="20201030 18:29:55.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.234" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:29:55.229" endtime="20201030 18:29:55.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.211" endtime="20201030 18:29:55.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.250" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:29:55.248" endtime="20201030 18:29:55.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.269" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 18:29:55.256" endtime="20201030 18:29:55.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.240" endtime="20201030 18:29:55.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.279" endtime="20201030 18:29:55.570"></status>
</kw>
<msg timestamp="20201030 18:29:55.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064474139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164772542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:55.277" endtime="20201030 18:29:55.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064474139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164772542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:55.573" endtime="20201030 18:29:55.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.579" endtime="20201030 18:29:55.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.275" endtime="20201030 18:29:55.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.273" endtime="20201030 18:29:55.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:29:55.585" level="INFO">${FILTERED} = [{'diff': 0.100298403}, {'diff': 0.09969772300000002}, {'diff': 0.10000641700000001}, {'diff': 0.10000681899999997}, {'diff': 5.420000001032932e-07}, {'diff': 0.10000723599999994}, {'diff': 0.10000684...</msg>
<status status="PASS" starttime="20201030 18:29:55.582" endtime="20201030 18:29:55.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:55.589" level="INFO">${RESULT} = {'diff': [0.100298403, 0.09969772300000002, 0.10000641700000001, 0.10000681899999997, 5.420000001032932e-07, 0.10000723599999994, 0.10000684699999995, 0.10000733299999998, 0.10000732000000001, 0.10000...</msg>
<status status="PASS" starttime="20201030 18:29:55.586" endtime="20201030 18:29:55.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.593" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:29:55.592" endtime="20201030 18:29:55.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.596" level="INFO">VALUE: [0.100298403, 0.09969772300000002, 0.10000641700000001, 0.10000681899999997, 5.420000001032932e-07, 0.10000723599999994, 0.10000684699999995, 0.10000733299999998, 0.10000732000000001, 0.1000067779999998, 5.409999999095305e-07, 0.10000733299999998, 0.100007277, 0.10000736099999985, 0.10000729099999983, 0.10000676399999975, 0.10000730600000018, 0.10000730599999974, 0.10000729199999991, 0.10000730599999974, 0.10000729199999991, 5.419999999922709e-07, 0.10000734699999958, 0.10000736099999985, 5.410000003536197e-07, 0.10000731900000037, 0.10000729099999983, 0.10000680599999967, 0.10000740300000022, 0.10000734700000002]</msg>
<status status="PASS" starttime="20201030 18:29:55.595" endtime="20201030 18:29:55.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.590" endtime="20201030 18:29:55.597"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:55.601" endtime="20201030 18:29:55.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.600" endtime="20201030 18:29:55.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.599" endtime="20201030 18:29:55.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.039" endtime="20201030 18:29:55.622"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:48.967" endtime="20201030 18:29:55.622" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:29:14.414" endtime="20201030 18:29:55.629"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 18:27:11.804" endtime="20201030 18:29:55.661"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
