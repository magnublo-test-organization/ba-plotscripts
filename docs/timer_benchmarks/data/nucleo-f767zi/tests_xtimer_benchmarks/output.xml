<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 09:32:58.011" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:32:58.612" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:32:58.620" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:32:59.852" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:32:58.610" endtime="20201029 09:32:59.853"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:32:59.855" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:32:59.854" endtime="20201029 09:32:59.856"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.609" endtime="20201029 09:32:59.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:32:59.859" endtime="20201029 09:33:00.097"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.857" endtime="20201029 09:33:00.097"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:00.110" endtime="20201029 09:33:00.124"></status>
</kw>
<msg timestamp="20201029 09:33:00.125" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:00.109" endtime="20201029 09:33:00.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.127" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:00.126" endtime="20201029 09:33:00.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.131" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:00.129" endtime="20201029 09:33:00.131"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:00.106" endtime="20201029 09:33:00.132"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:00.104" endtime="20201029 09:33:00.132"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.103" endtime="20201029 09:33:00.133"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:00.136" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:00.136" endtime="20201029 09:33:00.138"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.133" endtime="20201029 09:33:00.138"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.102" endtime="20201029 09:33:00.138"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.101" endtime="20201029 09:33:00.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:00.139" endtime="20201029 09:33:00.140"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.100" endtime="20201029 09:33:00.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:00.142" endtime="20201029 09:33:00.143"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.098" endtime="20201029 09:33:00.144"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.607" endtime="20201029 09:33:00.144"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:00.150" endtime="20201029 09:33:00.170"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.149" endtime="20201029 09:33:00.170"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:00.184" endtime="20201029 09:33:00.197"></status>
</kw>
<msg timestamp="20201029 09:33:00.197" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:00.182" endtime="20201029 09:33:00.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.200" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:00.198" endtime="20201029 09:33:00.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.203" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:00.201" endtime="20201029 09:33:00.203"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:00.180" endtime="20201029 09:33:00.204"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:00.177" endtime="20201029 09:33:00.204"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.175" endtime="20201029 09:33:00.205"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:00.209" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:00.208" endtime="20201029 09:33:00.209"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.206" endtime="20201029 09:33:00.209"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.175" endtime="20201029 09:33:00.209"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.174" endtime="20201029 09:33:00.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:00.210" endtime="20201029 09:33:00.212"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.173" endtime="20201029 09:33:00.212"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.171" endtime="20201029 09:33:00.213"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.147" endtime="20201029 09:33:00.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:00.222" endtime="20201029 09:33:00.233"></status>
</kw>
<msg timestamp="20201029 09:33:00.234" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:00.219" endtime="20201029 09:33:00.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.237" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:00.235" endtime="20201029 09:33:00.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:00.239" endtime="20201029 09:33:00.241"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.216" endtime="20201029 09:33:00.243"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.214" endtime="20201029 09:33:00.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.248" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 09:33:00.247" endtime="20201029 09:33:00.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.251" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201029 09:33:00.250" endtime="20201029 09:33:00.251"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.244" endtime="20201029 09:33:00.253"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:00.145" endtime="20201029 09:33:00.253" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:32:58.138" endtime="20201029 09:33:00.256"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.315" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:33:00.323" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:33:01.544" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:33:00.314" endtime="20201029 09:33:01.545"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:33:01.547" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:33:01.546" endtime="20201029 09:33:01.548"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.313" endtime="20201029 09:33:01.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:01.551" endtime="20201029 09:33:01.775"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.549" endtime="20201029 09:33:01.776"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:01.788" endtime="20201029 09:33:01.802"></status>
</kw>
<msg timestamp="20201029 09:33:01.802" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:01.787" endtime="20201029 09:33:01.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:01.805" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:01.803" endtime="20201029 09:33:01.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:01.808" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:01.806" endtime="20201029 09:33:01.808"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:01.784" endtime="20201029 09:33:01.809"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:01.782" endtime="20201029 09:33:01.809"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.781" endtime="20201029 09:33:01.810"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:01.813" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:01.813" endtime="20201029 09:33:01.814"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.810" endtime="20201029 09:33:01.814"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.780" endtime="20201029 09:33:01.814"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.779" endtime="20201029 09:33:01.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:01.815" endtime="20201029 09:33:01.817"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.778" endtime="20201029 09:33:01.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:01.818" endtime="20201029 09:33:01.819"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.776" endtime="20201029 09:33:01.820"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.311" endtime="20201029 09:33:01.820"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:01.827" endtime="20201029 09:33:01.847"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.824" endtime="20201029 09:33:01.847"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:01.861" endtime="20201029 09:33:01.874"></status>
</kw>
<msg timestamp="20201029 09:33:01.875" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:01.859" endtime="20201029 09:33:01.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:01.879" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:01.877" endtime="20201029 09:33:01.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:01.883" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:01.880" endtime="20201029 09:33:01.883"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:01.856" endtime="20201029 09:33:01.884"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:01.854" endtime="20201029 09:33:01.885"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.853" endtime="20201029 09:33:01.886"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:01.890" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:01.889" endtime="20201029 09:33:01.891"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.887" endtime="20201029 09:33:01.891"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.852" endtime="20201029 09:33:01.892"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.851" endtime="20201029 09:33:01.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:01.893" endtime="20201029 09:33:01.895"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.850" endtime="20201029 09:33:01.896"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.848" endtime="20201029 09:33:01.896"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.823" endtime="20201029 09:33:01.897"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:01.911" endtime="20201029 09:33:01.922"></status>
</kw>
<msg timestamp="20201029 09:33:01.922" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:01.909" endtime="20201029 09:33:01.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:01.925" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:01.923" endtime="20201029 09:33:01.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:01.927" endtime="20201029 09:33:01.929"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.905" endtime="20201029 09:33:01.930"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.903" endtime="20201029 09:33:01.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:01.938" endtime="20201029 09:33:02.212"></status>
</kw>
<msg timestamp="20201029 09:33:02.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075261778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075262319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:01.936" endtime="20201029 09:33:02.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075261778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075262319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:02.215" endtime="20201029 09:33:02.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.221" endtime="20201029 09:33:02.222"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.933" endtime="20201029 09:33:02.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.931" endtime="20201029 09:33:02.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:02.227" level="INFO">${RESULT} = [{'diff': 5.409999999927972e-07}, {'diff': 2.860999999992897e-06}, {'diff': 2.874999999999406e-06}, {'diff': 3.3340000000076087e-06}, {'diff': 3.4449999999908165e-06}, {'diff': 3.2079999999906628e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:02.224" endtime="20201029 09:33:02.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:02.230" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999927972e-07, 2.860999999992897e-06, 2.874999999999406e-06, 3.3340000000076087e-06, 3.4449999999908165e-06, 3.2079999999906628e-06, 3.1530000000057345e-06, 2.9860000000103692e-06, 3...</msg>
<status status="PASS" starttime="20201029 09:33:02.228" endtime="20201029 09:33:02.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.235" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:02.234" endtime="20201029 09:33:02.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.237" level="INFO">VALUE: [5.409999999927972e-07, 2.860999999992897e-06, 2.874999999999406e-06, 3.3340000000076087e-06, 3.4449999999908165e-06, 3.2079999999906628e-06, 3.1530000000057345e-06, 2.9860000000103692e-06, 3.041999999994771e-06, 3.487000000010343e-06, 2.973000000003334e-06, 3.3340000000076087e-06, 2.8890000000059146e-06, 3.3329999999942572e-06, 2.5139999999951312e-06, 3.1670000000122434e-06, 3.360999999993397e-06, 3.014000000009509e-06, 2.833999999993231e-06, 3.4170000000055545e-06, 3.02800000000214e-06, 2.7219999999966715e-06, 3.401999999999572e-06, 2.610999999999586e-06, 2.9029999999985456e-06]</msg>
<status status="PASS" starttime="20201029 09:33:02.236" endtime="20201029 09:33:02.238"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.231" endtime="20201029 09:33:02.238"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.900" endtime="20201029 09:33:02.239"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.899" endtime="20201029 09:33:02.239"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.247" endtime="20201029 09:33:02.256"></status>
</kw>
<msg timestamp="20201029 09:33:02.257" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:02.245" endtime="20201029 09:33:02.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.259" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:02.258" endtime="20201029 09:33:02.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.260" endtime="20201029 09:33:02.263"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.242" endtime="20201029 09:33:02.263"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.241" endtime="20201029 09:33:02.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.270" endtime="20201029 09:33:02.563"></status>
</kw>
<msg timestamp="20201029 09:33:02.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075261778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075262319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:02.269" endtime="20201029 09:33:02.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075261778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075262319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:02.567" endtime="20201029 09:33:02.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.576" endtime="20201029 09:33:02.578"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.266" endtime="20201029 09:33:02.579"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.264" endtime="20201029 09:33:02.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:02.583" level="INFO">${RESULT} = [{'diff': 5.409999999927972e-07}, {'diff': 2.860999999992897e-06}, {'diff': 2.874999999999406e-06}, {'diff': 3.3340000000076087e-06}, {'diff': 3.4449999999908165e-06}, {'diff': 3.2079999999906628e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:02.580" endtime="20201029 09:33:02.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:02.588" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999927972e-07, 2.860999999992897e-06, 2.874999999999406e-06, 3.3340000000076087e-06, 3.4449999999908165e-06, 3.2079999999906628e-06, 3.1530000000057345e-06, 2.9860000000103692e-06, 3...</msg>
<status status="PASS" starttime="20201029 09:33:02.584" endtime="20201029 09:33:02.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.593" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:02.591" endtime="20201029 09:33:02.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.596" level="INFO">VALUE: [5.409999999927972e-07, 2.860999999992897e-06, 2.874999999999406e-06, 3.3340000000076087e-06, 3.4449999999908165e-06, 3.2079999999906628e-06, 3.1530000000057345e-06, 2.9860000000103692e-06, 3.041999999994771e-06, 3.487000000010343e-06, 2.973000000003334e-06, 3.3340000000076087e-06, 2.8890000000059146e-06, 3.3329999999942572e-06, 2.5139999999951312e-06, 3.1670000000122434e-06, 3.360999999993397e-06, 3.014000000009509e-06, 2.833999999993231e-06, 3.4170000000055545e-06, 3.02800000000214e-06, 2.7219999999966715e-06, 3.401999999999572e-06, 2.610999999999586e-06, 2.9029999999985456e-06, 0.323199584, 3.083999999986542e-06, 3.0419999999531377e-06, 3.4449999999908165e-06, 2.8329999999798794e-06, 2.8610000000206526e-06, 3.069000000022193e-06, 3.2779999999954512e-06, 2.9579999999973516e-06, 2.4299999999977118e-06, 3.4580000000117295e-06, 3.028000000016018e-06, 2.6949999999970053e-06, 3.041000000036931e-06, 3.152999999977979e-06, 3.250000000010189e-06, 3.05600000000128e-06, 2.8750000000132836e-06, 2.9029999999985456e-06, 3.4029999999574123e-06, 2.6530000000191123e-06, 3.3469999999868882e-06, 3.0139999999678757e-06, 2.8890000000059146e-06, 2.7499999999958114e-06, 3.207999999976785e-06]</msg>
<status status="PASS" starttime="20201029 09:33:02.594" endtime="20201029 09:33:02.596"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.589" endtime="20201029 09:33:02.597"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.239" endtime="20201029 09:33:02.597"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.239" endtime="20201029 09:33:02.598"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.606" endtime="20201029 09:33:02.616"></status>
</kw>
<msg timestamp="20201029 09:33:02.616" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:02.604" endtime="20201029 09:33:02.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.619" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:02.617" endtime="20201029 09:33:02.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.620" endtime="20201029 09:33:02.622"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.601" endtime="20201029 09:33:02.622"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.600" endtime="20201029 09:33:02.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.630" endtime="20201029 09:33:02.947"></status>
</kw>
<msg timestamp="20201029 09:33:02.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075335208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.0753385, 'source': 'DUT_IC', 'event': 'RISI...</msg>
<status status="PASS" starttime="20201029 09:33:02.628" endtime="20201029 09:33:02.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075335208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.0753385, 'source': 'DUT_IC', 'event': 'RISI...</msg>
<status status="PASS" starttime="20201029 09:33:02.958" endtime="20201029 09:33:02.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.980" endtime="20201029 09:33:02.982"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.625" endtime="20201029 09:33:02.982"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.624" endtime="20201029 09:33:02.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:02.987" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.3329999999942572e-06}, {'diff': 2.5139999999951312e-06}, {'diff': 3.1670000000122434e-06}, {'diff': 3.360999999993397e-06}, {'diff': 3.014000000009509e-06}, {'diff': 2.8339999...</msg>
<status status="PASS" starttime="20201029 09:33:02.983" endtime="20201029 09:33:02.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:02.992" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.3329999999942572e-06, 2.5139999999951312e-06, 3.1670000000122434e-06, 3.360999999993397e-06, 3.014000000009509e-06, 2.833999999993231e-06, 3.4170000000055545e-06, 3.02800000000214e-06, ...</msg>
<status status="PASS" starttime="20201029 09:33:02.988" endtime="20201029 09:33:02.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.996" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:02.995" endtime="20201029 09:33:02.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.000" level="INFO">VALUE: [0, 3.3329999999942572e-06, 2.5139999999951312e-06, 3.1670000000122434e-06, 3.360999999993397e-06, 3.014000000009509e-06, 2.833999999993231e-06, 3.4170000000055545e-06, 3.02800000000214e-06, 2.7219999999966715e-06, 3.401999999999572e-06, 2.610999999999586e-06, 2.9029999999985456e-06, 0.323199584, 3.083999999986542e-06, 3.0419999999531377e-06, 3.4449999999908165e-06, 2.8329999999798794e-06, 2.8610000000206526e-06, 3.069000000022193e-06, 3.2779999999954512e-06, 2.9579999999973516e-06, 2.4299999999977118e-06, 3.4580000000117295e-06, 3.028000000016018e-06, 2.6949999999970053e-06, 3.041000000036931e-06, 3.152999999977979e-06, 3.250000000010189e-06, 3.05600000000128e-06, 2.8750000000132836e-06, 2.9029999999985456e-06, 3.4029999999574123e-06, 2.6530000000191123e-06, 3.3469999999868882e-06, 3.0139999999678757e-06, 2.8890000000059146e-06, 2.7499999999958114e-06, 3.207999999976785e-06, 5.409999999095305e-07, 3.042000000008649e-06, 2.513999999953498e-06, 3.277000000023733e-06, 2.7779999999255622e-06, 3.014000000023387e-06, 2.7919999999737044e-06, 2.9719999999899827e-06, 3.221999999913905e-06, 3.4859999999969915e-06, 2.5420000000497822e-06, 3.097000000007455e-06, 2.7630000000167243e-06, 2.666999999956232e-06, 2.8610000000206526e-06, 3.0829999999593127e-06, 3.207999999976785e-06, 3.3889999999647813e-06, 3.45900000009447e-06, 2.7499999999403e-06, 2.8750000000687947e-06, 3.166999999915099e-06, 3.2370000000447874e-06, 2.610999999985708e-06, 2.7780000000365845e-06]</msg>
<status status="PASS" starttime="20201029 09:33:02.998" endtime="20201029 09:33:03.000"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.993" endtime="20201029 09:33:03.001"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.598" endtime="20201029 09:33:03.001"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.598" endtime="20201029 09:33:03.001"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.009" endtime="20201029 09:33:03.019"></status>
</kw>
<msg timestamp="20201029 09:33:03.019" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:03.007" endtime="20201029 09:33:03.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.022" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:03.020" endtime="20201029 09:33:03.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.023" endtime="20201029 09:33:03.024"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.005" endtime="20201029 09:33:03.025"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.003" endtime="20201029 09:33:03.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.032" endtime="20201029 09:33:03.338"></status>
</kw>
<msg timestamp="20201029 09:33:03.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.398684306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.398687347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:03.030" endtime="20201029 09:33:03.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.398684306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.398687347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:03.344" endtime="20201029 09:33:03.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.354" endtime="20201029 09:33:03.355"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.028" endtime="20201029 09:33:03.356"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.026" endtime="20201029 09:33:03.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:03.361" level="INFO">${RESULT} = [{'diff': 3.041000000036931e-06}, {'diff': 3.152999999977979e-06}, {'diff': 3.250000000010189e-06}, {'diff': 3.05600000000128e-06}, {'diff': 2.8750000000132836e-06}, {'diff': 2.9029999999985456e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:33:03.357" endtime="20201029 09:33:03.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:03.366" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.041000000036931e-06, 3.152999999977979e-06, 3.250000000010189e-06, 3.05600000000128e-06, 2.8750000000132836e-06, 2.9029999999985456e-06, 3.4029999999574123e-06, 2.6530000000191123e-06, 3.3...</msg>
<status status="PASS" starttime="20201029 09:33:03.362" endtime="20201029 09:33:03.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.371" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:03.370" endtime="20201029 09:33:03.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.374" level="INFO">VALUE: [3.041000000036931e-06, 3.152999999977979e-06, 3.250000000010189e-06, 3.05600000000128e-06, 2.8750000000132836e-06, 2.9029999999985456e-06, 3.4029999999574123e-06, 2.6530000000191123e-06, 3.3469999999868882e-06, 3.0139999999678757e-06, 2.8890000000059146e-06, 2.7499999999958114e-06, 3.207999999976785e-06, 5.409999999095305e-07, 3.042000000008649e-06, 2.513999999953498e-06, 3.277000000023733e-06, 2.7779999999255622e-06, 3.014000000023387e-06, 2.7919999999737044e-06, 2.9719999999899827e-06, 3.221999999913905e-06, 3.4859999999969915e-06, 2.5420000000497822e-06, 3.097000000007455e-06, 2.7630000000167243e-06, 2.666999999956232e-06, 2.8610000000206526e-06, 3.0829999999593127e-06, 3.207999999976785e-06, 3.3889999999647813e-06, 3.45900000009447e-06, 2.7499999999403e-06, 2.8750000000687947e-06, 3.166999999915099e-06, 3.2370000000447874e-06, 2.610999999985708e-06, 2.7780000000365845e-06, 0.3929925000000001, 3.0829999999593127e-06, 2.8610000000206526e-06, 2.9029999999430345e-06, 2.9029999999430345e-06, 3.2909999998498307e-06, 3.291999999932571e-06, 3.318999999946115e-06, 2.7780000000365845e-06, 2.430000000108734e-06, 2.8750000000687947e-06, 3.097000000007455e-06, 2.735999999892158e-06, 3.1950000001224055e-06, 3.221999999913905e-06, 3.3329999999942572e-06, 3.0269999999887887e-06, 2.540999999967042e-06, 2.833000000146413e-06, 3.167000000026121e-06, 2.6249999998118057e-06, 2.9169999999911767e-06, 3.221999999913905e-06, 3.44500000015735e-06, 2.8199999999589664e-06, 2.818999999876226e-06]</msg>
<status status="PASS" starttime="20201029 09:33:03.372" endtime="20201029 09:33:03.374"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.367" endtime="20201029 09:33:03.375"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.002" endtime="20201029 09:33:03.375"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.001" endtime="20201029 09:33:03.375"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.384" endtime="20201029 09:33:03.393"></status>
</kw>
<msg timestamp="20201029 09:33:03.394" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:03.382" endtime="20201029 09:33:03.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.396" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:03.395" endtime="20201029 09:33:03.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.398" endtime="20201029 09:33:03.399"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.379" endtime="20201029 09:33:03.400"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.377" endtime="20201029 09:33:03.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.407" endtime="20201029 09:33:03.730"></status>
</kw>
<msg timestamp="20201029 09:33:03.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.746907194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.746910069, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:03.405" endtime="20201029 09:33:03.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.746907194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.746910069, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:03.742" endtime="20201029 09:33:03.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.765" endtime="20201029 09:33:03.769"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.403" endtime="20201029 09:33:03.770"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.401" endtime="20201029 09:33:03.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:03.781" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.666999999956232e-06}, {'diff': 2.8610000000206526e-06}, {'diff': 3.0829999999593127e-06}, {'diff': 3.207999999976785e-06}, {'diff': 3.3889999999647813e-06}, {'diff': 3.4590000...</msg>
<status status="PASS" starttime="20201029 09:33:03.773" endtime="20201029 09:33:03.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:03.791" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.666999999956232e-06, 2.8610000000206526e-06, 3.0829999999593127e-06, 3.207999999976785e-06, 3.3889999999647813e-06, 3.45900000009447e-06, 2.7499999999403e-06, 2.8750000000687947e-06, 3....</msg>
<status status="PASS" starttime="20201029 09:33:03.784" endtime="20201029 09:33:03.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.796" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:03.795" endtime="20201029 09:33:03.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.799" level="INFO">VALUE: [0, 2.666999999956232e-06, 2.8610000000206526e-06, 3.0829999999593127e-06, 3.207999999976785e-06, 3.3889999999647813e-06, 3.45900000009447e-06, 2.7499999999403e-06, 2.8750000000687947e-06, 3.166999999915099e-06, 3.2370000000447874e-06, 2.610999999985708e-06, 2.7780000000365845e-06, 0.3929925000000001, 3.0829999999593127e-06, 2.8610000000206526e-06, 2.9029999999430345e-06, 2.9029999999430345e-06, 3.2909999998498307e-06, 3.291999999932571e-06, 3.318999999946115e-06, 2.7780000000365845e-06, 2.430000000108734e-06, 2.8750000000687947e-06, 3.097000000007455e-06, 2.735999999892158e-06, 3.1950000001224055e-06, 3.221999999913905e-06, 3.3329999999942572e-06, 3.0269999999887887e-06, 2.540999999967042e-06, 2.833000000146413e-06, 3.167000000026121e-06, 2.6249999998118057e-06, 2.9169999999911767e-06, 3.221999999913905e-06, 3.44500000015735e-06, 2.8199999999589664e-06, 2.818999999876226e-06, 5.419999999922709e-07, 2.9859999999271025e-06, 3.4440000000746096e-06, 2.833000000146413e-06, 3.0419999998976266e-06, 3.250000000010189e-06, 2.7080000000179183e-06, 3.221999999913905e-06, 3.5419999999675156e-06, 2.5419999998277376e-06, 2.569999999924022e-06, 2.6810000000043743e-06, 3.111000000055597e-06, 2.7360000001142026e-06, 2.8750000000687947e-06, 3.318999999946115e-06, 2.7910000000019863e-06, 2.7780000000365845e-06, 2.9859999999271025e-06, 2.9580000000528628e-06, 2.6810000000043743e-06, 2.9859999999271025e-06, 2.7920000000847267e-06, 2.806000000132869e-06, 3.402999999790879e-06]</msg>
<status status="PASS" starttime="20201029 09:33:03.797" endtime="20201029 09:33:03.799"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.792" endtime="20201029 09:33:03.800"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.376" endtime="20201029 09:33:03.800"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.375" endtime="20201029 09:33:03.800"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.809" endtime="20201029 09:33:03.818"></status>
</kw>
<msg timestamp="20201029 09:33:03.819" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:03.807" endtime="20201029 09:33:03.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.821" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:03.820" endtime="20201029 09:33:03.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.823" endtime="20201029 09:33:03.824"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.804" endtime="20201029 09:33:03.825"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.802" endtime="20201029 09:33:03.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.832" endtime="20201029 09:33:04.138"></status>
</kw>
<msg timestamp="20201029 09:33:04.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.140046569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.140049764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:03.831" endtime="20201029 09:33:04.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.140046569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.140049764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:04.143" endtime="20201029 09:33:04.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.153" endtime="20201029 09:33:04.155"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.828" endtime="20201029 09:33:04.155"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.826" endtime="20201029 09:33:04.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:04.160" level="INFO">${RESULT} = [{'diff': 3.1950000001224055e-06}, {'diff': 3.221999999913905e-06}, {'diff': 3.3329999999942572e-06}, {'diff': 3.0269999999887887e-06}, {'diff': 2.540999999967042e-06}, {'diff': 2.833000000146413e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:04.156" endtime="20201029 09:33:04.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:04.167" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.1950000001224055e-06, 3.221999999913905e-06, 3.3329999999942572e-06, 3.0269999999887887e-06, 2.540999999967042e-06, 2.833000000146413e-06, 3.167000000026121e-06, 2.6249999998118057e-06, 2....</msg>
<status status="PASS" starttime="20201029 09:33:04.161" endtime="20201029 09:33:04.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.172" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:04.171" endtime="20201029 09:33:04.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.175" level="INFO">VALUE: [3.1950000001224055e-06, 3.221999999913905e-06, 3.3329999999942572e-06, 3.0269999999887887e-06, 2.540999999967042e-06, 2.833000000146413e-06, 3.167000000026121e-06, 2.6249999998118057e-06, 2.9169999999911767e-06, 3.221999999913905e-06, 3.44500000015735e-06, 2.8199999999589664e-06, 2.818999999876226e-06, 5.419999999922709e-07, 2.9859999999271025e-06, 3.4440000000746096e-06, 2.833000000146413e-06, 3.0419999998976266e-06, 3.250000000010189e-06, 2.7080000000179183e-06, 3.221999999913905e-06, 3.5419999999675156e-06, 2.5419999998277376e-06, 2.569999999924022e-06, 2.6810000000043743e-06, 3.111000000055597e-06, 2.7360000001142026e-06, 2.8750000000687947e-06, 3.318999999946115e-06, 2.7910000000019863e-06, 2.7780000000365845e-06, 2.9859999999271025e-06, 2.9580000000528628e-06, 2.6810000000043743e-06, 2.9859999999271025e-06, 2.7920000000847267e-06, 2.806000000132869e-06, 3.402999999790879e-06, 0.41241520799999987, 3.152999999977979e-06, 2.791999999862682e-06, 2.666999999956232e-06, 2.6250000000338503e-06, 3.3059999999807133e-06, 2.679999999921634e-06, 3.1250000001037392e-06, 3.1390000001518814e-06, 2.6250000000338503e-06, 3.6389999999997258e-06, 3.2640000000583314e-06, 3.3470000000423994e-06, 2.889000000116937e-06, 3.250000000010189e-06, 2.8469999999725104e-06, 2.8329999999243682e-06, 3.0689999999111706e-06, 2.708999999878614e-06, 2.9449999998654164e-06, 2.9029999999430345e-06, 2.791999999862682e-06, 3.221999999913905e-06, 3.2229999999966452e-06, 3.111000000055597e-06, 2.7910000000019863e-06]</msg>
<status status="PASS" starttime="20201029 09:33:04.173" endtime="20201029 09:33:04.175"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.169" endtime="20201029 09:33:04.176"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.801" endtime="20201029 09:33:04.176"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.801" endtime="20201029 09:33:04.177"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.185" endtime="20201029 09:33:04.194"></status>
</kw>
<msg timestamp="20201029 09:33:04.195" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:04.183" endtime="20201029 09:33:04.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.197" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:04.196" endtime="20201029 09:33:04.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.198" endtime="20201029 09:33:04.200"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.180" endtime="20201029 09:33:04.201"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.179" endtime="20201029 09:33:04.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.208" endtime="20201029 09:33:04.508"></status>
</kw>
<msg timestamp="20201029 09:33:04.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.505309778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.505312764, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:04.206" endtime="20201029 09:33:04.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.505309778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.505312764, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:04.513" endtime="20201029 09:33:04.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.524" endtime="20201029 09:33:04.525"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.204" endtime="20201029 09:33:04.526"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.202" endtime="20201029 09:33:04.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:04.531" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.7360000001142026e-06}, {'diff': 2.8750000000687947e-06}, {'diff': 3.318999999946115e-06}, {'diff': 2.7910000000019863e-06}, {'diff': 2.7780000000365845e-06}, {'diff': 2.985999...</msg>
<status status="PASS" starttime="20201029 09:33:04.527" endtime="20201029 09:33:04.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:04.536" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.7360000001142026e-06, 2.8750000000687947e-06, 3.318999999946115e-06, 2.7910000000019863e-06, 2.7780000000365845e-06, 2.9859999999271025e-06, 2.9580000000528628e-06, 2.6810000000043743e-...</msg>
<status status="PASS" starttime="20201029 09:33:04.532" endtime="20201029 09:33:04.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.540" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:04.539" endtime="20201029 09:33:04.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.543" level="INFO">VALUE: [0, 2.7360000001142026e-06, 2.8750000000687947e-06, 3.318999999946115e-06, 2.7910000000019863e-06, 2.7780000000365845e-06, 2.9859999999271025e-06, 2.9580000000528628e-06, 2.6810000000043743e-06, 2.9859999999271025e-06, 2.7920000000847267e-06, 2.806000000132869e-06, 3.402999999790879e-06, 0.41241520799999987, 3.152999999977979e-06, 2.791999999862682e-06, 2.666999999956232e-06, 2.6250000000338503e-06, 3.3059999999807133e-06, 2.679999999921634e-06, 3.1250000001037392e-06, 3.1390000001518814e-06, 2.6250000000338503e-06, 3.6389999999997258e-06, 3.2640000000583314e-06, 3.3470000000423994e-06, 2.889000000116937e-06, 3.250000000010189e-06, 2.8469999999725104e-06, 2.8329999999243682e-06, 3.0689999999111706e-06, 2.708999999878614e-06, 2.9449999998654164e-06, 2.9029999999430345e-06, 2.791999999862682e-06, 3.221999999913905e-06, 3.2229999999966452e-06, 3.111000000055597e-06, 2.7910000000019863e-06, 5.409999999095305e-07, 2.804999999828084e-06, 2.5410000001890864e-06, 3.3329999999942572e-06, 3.1529999997559344e-06, 2.931000000039319e-06, 2.986000000149147e-06, 2.596999999937566e-06, 2.986000000149147e-06, 3.12499999965965e-06, 3.389000000186826e-06, 2.9030000003871237e-06, 3.3469999998203548e-06, 3.082999999737268e-06, 3.3609999996464524e-06, 3.042000000341716e-06, 3.0839999998200085e-06, 3.097000000007455e-06, 2.7220000000660605e-06, 2.9999999999752447e-06, 3.319999999806811e-06, 3.2769999998016885e-06, 3.235999999962047e-06, 3.4719999999488493e-06, 3.5000000000451337e-06]</msg>
<status status="PASS" starttime="20201029 09:33:04.542" endtime="20201029 09:33:04.544"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.537" endtime="20201029 09:33:04.544"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.177" endtime="20201029 09:33:04.545"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.177" endtime="20201029 09:33:04.545"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.554" endtime="20201029 09:33:04.564"></status>
</kw>
<msg timestamp="20201029 09:33:04.564" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:04.552" endtime="20201029 09:33:04.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.567" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:04.565" endtime="20201029 09:33:04.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.568" endtime="20201029 09:33:04.570"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.549" endtime="20201029 09:33:04.570"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.547" endtime="20201029 09:33:04.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.578" endtime="20201029 09:33:04.881"></status>
</kw>
<msg timestamp="20201029 09:33:04.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.917871208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.917874097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:04.576" endtime="20201029 09:33:04.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.917871208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.917874097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:04.886" endtime="20201029 09:33:04.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.897" endtime="20201029 09:33:04.899"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.573" endtime="20201029 09:33:04.899"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.571" endtime="20201029 09:33:04.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:04.904" level="INFO">${RESULT} = [{'diff': 2.889000000116937e-06}, {'diff': 3.250000000010189e-06}, {'diff': 2.8469999999725104e-06}, {'diff': 2.8329999999243682e-06}, {'diff': 3.0689999999111706e-06}, {'diff': 2.708999999878614e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:04.900" endtime="20201029 09:33:04.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:04.910" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.889000000116937e-06, 3.250000000010189e-06, 2.8469999999725104e-06, 2.8329999999243682e-06, 3.0689999999111706e-06, 2.708999999878614e-06, 2.9449999998654164e-06, 2.9029999999430345e-06, 2...</msg>
<status status="PASS" starttime="20201029 09:33:04.905" endtime="20201029 09:33:04.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.915" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:04.914" endtime="20201029 09:33:04.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.917" level="INFO">VALUE: [2.889000000116937e-06, 3.250000000010189e-06, 2.8469999999725104e-06, 2.8329999999243682e-06, 3.0689999999111706e-06, 2.708999999878614e-06, 2.9449999998654164e-06, 2.9029999999430345e-06, 2.791999999862682e-06, 3.221999999913905e-06, 3.2229999999966452e-06, 3.111000000055597e-06, 2.7910000000019863e-06, 5.409999999095305e-07, 2.804999999828084e-06, 2.5410000001890864e-06, 3.3329999999942572e-06, 3.1529999997559344e-06, 2.931000000039319e-06, 2.986000000149147e-06, 2.596999999937566e-06, 2.986000000149147e-06, 3.12499999965965e-06, 3.389000000186826e-06, 2.9030000003871237e-06, 3.3469999998203548e-06, 3.082999999737268e-06, 3.3609999996464524e-06, 3.042000000341716e-06, 3.0839999998200085e-06, 3.097000000007455e-06, 2.7220000000660605e-06, 2.9999999999752447e-06, 3.319999999806811e-06, 3.2769999998016885e-06, 3.235999999962047e-06, 3.4719999999488493e-06, 3.5000000000451337e-06, 0.3561258470000004, 2.7639999999884424e-06, 2.651999999603305e-06, 3.097000000007455e-06, 3.0840000002640977e-06, 3.3329999999942572e-06, 2.7079999997958737e-06, 3.2079999998657627e-06, 3.055000000085073e-06, 3.485999999774947e-06, 2.9449999998654164e-06, 3.5000000000451337e-06, 3.1250000001037392e-06, 3.347000000264444e-06, 3.304999999897973e-06, 3.1530000002000236e-06, 2.8059999999108243e-06, 2.5419999998277376e-06, 2.846999999750466e-06, 2.986000000149147e-06, 3.235999999962047e-06, 2.9440000002267652e-06, 3.0269999999887887e-06, 3.028000000071529e-06, 3.0830000001813573e-06, 2.8329999999243682e-06]</msg>
<status status="PASS" starttime="20201029 09:33:04.916" endtime="20201029 09:33:04.918"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.911" endtime="20201029 09:33:04.918"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.546" endtime="20201029 09:33:04.919"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.545" endtime="20201029 09:33:04.919"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.928" endtime="20201029 09:33:04.937"></status>
</kw>
<msg timestamp="20201029 09:33:04.938" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:04.926" endtime="20201029 09:33:04.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.940" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:04.939" endtime="20201029 09:33:04.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.942" endtime="20201029 09:33:04.943"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.923" endtime="20201029 09:33:04.944"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.921" endtime="20201029 09:33:04.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.951" endtime="20201029 09:33:05.262"></status>
</kw>
<msg timestamp="20201029 09:33:05.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.284011722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.284014806, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:04.950" endtime="20201029 09:33:05.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.284011722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.284014806, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:05.268" endtime="20201029 09:33:05.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.278" endtime="20201029 09:33:05.280"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.947" endtime="20201029 09:33:05.280"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.945" endtime="20201029 09:33:05.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:05.285" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.082999999737268e-06}, {'diff': 3.3609999996464524e-06}, {'diff': 3.042000000341716e-06}, {'diff': 3.0839999998200085e-06}, {'diff': 3.097000000007455e-06}, {'diff': 2.72200000...</msg>
<status status="PASS" starttime="20201029 09:33:05.281" endtime="20201029 09:33:05.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:05.303" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.082999999737268e-06, 3.3609999996464524e-06, 3.042000000341716e-06, 3.0839999998200085e-06, 3.097000000007455e-06, 2.7220000000660605e-06, 2.9999999999752447e-06, 3.319999999806811e-06,...</msg>
<status status="PASS" starttime="20201029 09:33:05.298" endtime="20201029 09:33:05.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.307" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:05.306" endtime="20201029 09:33:05.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.310" level="INFO">VALUE: [0, 3.082999999737268e-06, 3.3609999996464524e-06, 3.042000000341716e-06, 3.0839999998200085e-06, 3.097000000007455e-06, 2.7220000000660605e-06, 2.9999999999752447e-06, 3.319999999806811e-06, 3.2769999998016885e-06, 3.235999999962047e-06, 3.4719999999488493e-06, 3.5000000000451337e-06, 0.3561258470000004, 2.7639999999884424e-06, 2.651999999603305e-06, 3.097000000007455e-06, 3.0840000002640977e-06, 3.3329999999942572e-06, 2.7079999997958737e-06, 3.2079999998657627e-06, 3.055000000085073e-06, 3.485999999774947e-06, 2.9449999998654164e-06, 3.5000000000451337e-06, 3.1250000001037392e-06, 3.347000000264444e-06, 3.304999999897973e-06, 3.1530000002000236e-06, 2.8059999999108243e-06, 2.5419999998277376e-06, 2.846999999750466e-06, 2.986000000149147e-06, 3.235999999962047e-06, 2.9440000002267652e-06, 3.0269999999887887e-06, 3.028000000071529e-06, 3.0830000001813573e-06, 2.8329999999243682e-06, 5.419999999922709e-07, 2.9719999998789604e-06, 3.0139999998013423e-06, 3.2640000000583314e-06, 3.167000000026121e-06, 3.1250000001037392e-06, 3.138999999929837e-06, 3.194000000039665e-06, 3.028000000071529e-06, 3.2219999996918602e-06, 2.735999999892158e-06, 2.8329999999243682e-06, 3.3610000000905416e-06, 2.9719999998789604e-06, 3.235999999962047e-06, 3.0140000002454315e-06, 2.8610000000206526e-06, 3.1800000002135675e-06, 3.1950000001224055e-06, 2.7639999999884424e-06, 2.52800000000164e-06, 3.3340000000769976e-06, 3.208000000309852e-06, 3.000000000419334e-06, 2.4449999997955274e-06]</msg>
<status status="PASS" starttime="20201029 09:33:05.308" endtime="20201029 09:33:05.310"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.304" endtime="20201029 09:33:05.311"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.920" endtime="20201029 09:33:05.311"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.919" endtime="20201029 09:33:05.311"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.320" endtime="20201029 09:33:05.329"></status>
</kw>
<msg timestamp="20201029 09:33:05.330" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:05.318" endtime="20201029 09:33:05.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.332" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:05.331" endtime="20201029 09:33:05.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.334" endtime="20201029 09:33:05.335"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.315" endtime="20201029 09:33:05.336"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.314" endtime="20201029 09:33:05.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.344" endtime="20201029 09:33:05.664"></status>
</kw>
<msg timestamp="20201029 09:33:05.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.640287778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.640291125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:05.342" endtime="20201029 09:33:05.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.640287778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.640291125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:05.669" endtime="20201029 09:33:05.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.679" endtime="20201029 09:33:05.681"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.339" endtime="20201029 09:33:05.682"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.337" endtime="20201029 09:33:05.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:05.686" level="INFO">${RESULT} = [{'diff': 3.347000000264444e-06}, {'diff': 3.304999999897973e-06}, {'diff': 3.1530000002000236e-06}, {'diff': 2.8059999999108243e-06}, {'diff': 2.5419999998277376e-06}, {'diff': 2.846999999750466e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:05.683" endtime="20201029 09:33:05.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:05.692" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.347000000264444e-06, 3.304999999897973e-06, 3.1530000002000236e-06, 2.8059999999108243e-06, 2.5419999998277376e-06, 2.846999999750466e-06, 2.986000000149147e-06, 3.235999999962047e-06, 2.9...</msg>
<status status="PASS" starttime="20201029 09:33:05.688" endtime="20201029 09:33:05.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.696" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:05.695" endtime="20201029 09:33:05.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.700" level="INFO">VALUE: [3.347000000264444e-06, 3.304999999897973e-06, 3.1530000002000236e-06, 2.8059999999108243e-06, 2.5419999998277376e-06, 2.846999999750466e-06, 2.986000000149147e-06, 3.235999999962047e-06, 2.9440000002267652e-06, 3.0269999999887887e-06, 3.028000000071529e-06, 3.0830000001813573e-06, 2.8329999999243682e-06, 5.419999999922709e-07, 2.9719999998789604e-06, 3.0139999998013423e-06, 3.2640000000583314e-06, 3.167000000026121e-06, 3.1250000001037392e-06, 3.138999999929837e-06, 3.194000000039665e-06, 3.028000000071529e-06, 3.2219999996918602e-06, 2.735999999892158e-06, 2.8329999999243682e-06, 3.3610000000905416e-06, 2.9719999998789604e-06, 3.235999999962047e-06, 3.0140000002454315e-06, 2.8610000000206526e-06, 3.1800000002135675e-06, 3.1950000001224055e-06, 2.7639999999884424e-06, 2.52800000000164e-06, 3.3340000000769976e-06, 3.208000000309852e-06, 3.000000000419334e-06, 2.4449999997955274e-06, 0.3823660969999998, 3.235999999962047e-06, 3.277999999884429e-06, 2.7079999997958737e-06, 3.277999999884429e-06, 3.1530000002000236e-06, 3.458999999761403e-06, 3.374999999916639e-06, 2.916999999769132e-06, 3.0139999998013423e-06, 2.5419999998277376e-06, 2.916999999769132e-06, 3.2640000000583314e-06, 3.181000000296308e-06, 3.152000000117283e-06, 3.097000000007455e-06, 3.097000000007455e-06, 2.666999999956232e-06, 2.8750000002908394e-06, 3.152000000117283e-06, 2.9580000000528628e-06, 2.7360000003362472e-06, 2.9449999998654164e-06, 3.097999999646106e-06, 2.8190000000982707e-06, 3.097000000007455e-06]</msg>
<status status="PASS" starttime="20201029 09:33:05.697" endtime="20201029 09:33:05.700"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.693" endtime="20201029 09:33:05.701"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.312" endtime="20201029 09:33:05.701"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.312" endtime="20201029 09:33:05.701"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.710" endtime="20201029 09:33:05.719"></status>
</kw>
<msg timestamp="20201029 09:33:05.720" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:05.708" endtime="20201029 09:33:05.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.722" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:05.721" endtime="20201029 09:33:05.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.723" endtime="20201029 09:33:05.725"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.705" endtime="20201029 09:33:05.726"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.704" endtime="20201029 09:33:05.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.733" endtime="20201029 09:33:06.052"></status>
</kw>
<msg timestamp="20201029 09:33:06.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.002231597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.002234375, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:05.731" endtime="20201029 09:33:06.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.002231597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.002234375, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:06.057" endtime="20201029 09:33:06.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.067" endtime="20201029 09:33:06.069"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.729" endtime="20201029 09:33:06.069"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.727" endtime="20201029 09:33:06.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:06.075" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.9719999998789604e-06}, {'diff': 3.235999999962047e-06}, {'diff': 3.0140000002454315e-06}, {'diff': 2.8610000000206526e-06}, {'diff': 3.1800000002135675e-06}, {'diff': 3.195000...</msg>
<status status="PASS" starttime="20201029 09:33:06.071" endtime="20201029 09:33:06.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:06.080" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.9719999998789604e-06, 3.235999999962047e-06, 3.0140000002454315e-06, 2.8610000000206526e-06, 3.1800000002135675e-06, 3.1950000001224055e-06, 2.7639999999884424e-06, 2.52800000000164e-06...</msg>
<status status="PASS" starttime="20201029 09:33:06.076" endtime="20201029 09:33:06.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.085" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:06.084" endtime="20201029 09:33:06.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.088" level="INFO">VALUE: [0, 2.9719999998789604e-06, 3.235999999962047e-06, 3.0140000002454315e-06, 2.8610000000206526e-06, 3.1800000002135675e-06, 3.1950000001224055e-06, 2.7639999999884424e-06, 2.52800000000164e-06, 3.3340000000769976e-06, 3.208000000309852e-06, 3.000000000419334e-06, 2.4449999997955274e-06, 0.3823660969999998, 3.235999999962047e-06, 3.277999999884429e-06, 2.7079999997958737e-06, 3.277999999884429e-06, 3.1530000002000236e-06, 3.458999999761403e-06, 3.374999999916639e-06, 2.916999999769132e-06, 3.0139999998013423e-06, 2.5419999998277376e-06, 2.916999999769132e-06, 3.2640000000583314e-06, 3.181000000296308e-06, 3.152000000117283e-06, 3.097000000007455e-06, 3.097000000007455e-06, 2.666999999956232e-06, 2.8750000002908394e-06, 3.152000000117283e-06, 2.9580000000528628e-06, 2.7360000003362472e-06, 2.9449999998654164e-06, 3.097999999646106e-06, 2.8190000000982707e-06, 3.097000000007455e-06, 5.419999999922709e-07, 2.693999999969776e-06, 3.3610000000905416e-06, 3.1109999998335525e-06, 2.7639999999884424e-06, 2.985999999705058e-06, 3.167000000026121e-06, 3.1380000002911856e-06, 2.8190000000982707e-06, 2.9170000002132213e-06, 2.693999999969776e-06, 3.290999999627786e-06, 2.8750000002908394e-06, 2.901999999860294e-06, 3.2500000002322338e-06, 2.9999999999752447e-06, 2.9729999999617007e-06, 2.9029999999430345e-06, 2.638999999859948e-06, 3.12499999965965e-06, 3.4030000000129235e-06, 2.931000000039319e-06, 2.6250000000338503e-06, 3.235999999962047e-06, 2.87499999984675e-06]</msg>
<status status="PASS" starttime="20201029 09:33:06.086" endtime="20201029 09:33:06.088"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.081" endtime="20201029 09:33:06.089"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.702" endtime="20201029 09:33:06.089"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.702" endtime="20201029 09:33:06.089"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.097" endtime="20201029 09:33:06.107"></status>
</kw>
<msg timestamp="20201029 09:33:06.108" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:06.096" endtime="20201029 09:33:06.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.110" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:06.109" endtime="20201029 09:33:06.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.112" endtime="20201029 09:33:06.113"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.093" endtime="20201029 09:33:06.114"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.091" endtime="20201029 09:33:06.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.121" endtime="20201029 09:33:06.442"></status>
</kw>
<msg timestamp="20201029 09:33:06.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.384745694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.384748875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:06.120" endtime="20201029 09:33:06.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.384745694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.384748875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:06.447" endtime="20201029 09:33:06.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.457" endtime="20201029 09:33:06.459"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.117" endtime="20201029 09:33:06.459"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.115" endtime="20201029 09:33:06.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:06.466" level="INFO">${RESULT} = [{'diff': 3.181000000296308e-06}, {'diff': 3.152000000117283e-06}, {'diff': 3.097000000007455e-06}, {'diff': 3.097000000007455e-06}, {'diff': 2.666999999956232e-06}, {'diff': 2.8750000002908394e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:33:06.461" endtime="20201029 09:33:06.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:06.472" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.181000000296308e-06, 3.152000000117283e-06, 3.097000000007455e-06, 3.097000000007455e-06, 2.666999999956232e-06, 2.8750000002908394e-06, 3.152000000117283e-06, 2.9580000000528628e-06, 2.73...</msg>
<status status="PASS" starttime="20201029 09:33:06.468" endtime="20201029 09:33:06.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.479" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:06.477" endtime="20201029 09:33:06.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.481" level="INFO">VALUE: [3.181000000296308e-06, 3.152000000117283e-06, 3.097000000007455e-06, 3.097000000007455e-06, 2.666999999956232e-06, 2.8750000002908394e-06, 3.152000000117283e-06, 2.9580000000528628e-06, 2.7360000003362472e-06, 2.9449999998654164e-06, 3.097999999646106e-06, 2.8190000000982707e-06, 3.097000000007455e-06, 5.419999999922709e-07, 2.693999999969776e-06, 3.3610000000905416e-06, 3.1109999998335525e-06, 2.7639999999884424e-06, 2.985999999705058e-06, 3.167000000026121e-06, 3.1380000002911856e-06, 2.8190000000982707e-06, 2.9170000002132213e-06, 2.693999999969776e-06, 3.290999999627786e-06, 2.8750000002908394e-06, 2.901999999860294e-06, 3.2500000002322338e-06, 2.9999999999752447e-06, 2.9729999999617007e-06, 2.9029999999430345e-06, 2.638999999859948e-06, 3.12499999965965e-06, 3.4030000000129235e-06, 2.931000000039319e-06, 2.6250000000338503e-06, 3.235999999962047e-06, 2.87499999984675e-06, 0.37761636099999984, 3.4309999996651186e-06, 2.931000000039319e-06, 2.750000000162345e-06, 3.0689999999111706e-06, 2.8609999995765634e-06, 3.0830000001813573e-06, 2.527999999557551e-06, 3.3469999998203548e-06, 3.2640000000583314e-06, 2.9720000007671388e-06, 3.055999999723724e-06, 2.6530000001301346e-06, 2.9579999996087736e-06, 3.040999999370797e-06, 3.1809999994081295e-06, 3.0419999994535374e-06, 2.9299999999565784e-06, 3.000000000419334e-06, 2.986000000149147e-06, 2.986000000149147e-06, 2.735999999892158e-06, 3.555999999349524e-06, 2.8189999996541815e-06, 3.028000000071529e-06, 2.8750000007349286e-06]</msg>
<status status="PASS" starttime="20201029 09:33:06.480" endtime="20201029 09:33:06.482"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.474" endtime="20201029 09:33:06.483"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.090" endtime="20201029 09:33:06.483"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.090" endtime="20201029 09:33:06.484"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.497" endtime="20201029 09:33:06.508"></status>
</kw>
<msg timestamp="20201029 09:33:06.508" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:06.493" endtime="20201029 09:33:06.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.512" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:06.510" endtime="20201029 09:33:06.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.514" endtime="20201029 09:33:06.516"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.490" endtime="20201029 09:33:06.517"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.487" endtime="20201029 09:33:06.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.524" endtime="20201029 09:33:06.843"></status>
</kw>
<msg timestamp="20201029 09:33:06.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.764508306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.764511306, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:06.522" endtime="20201029 09:33:06.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.764508306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.764511306, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:06.848" endtime="20201029 09:33:06.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.858" endtime="20201029 09:33:06.861"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.520" endtime="20201029 09:33:06.861"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.518" endtime="20201029 09:33:06.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:06.866" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.901999999860294e-06}, {'diff': 3.2500000002322338e-06}, {'diff': 2.9999999999752447e-06}, {'diff': 2.9729999999617007e-06}, {'diff': 2.9029999999430345e-06}, {'diff': 2.638999...</msg>
<status status="PASS" starttime="20201029 09:33:06.862" endtime="20201029 09:33:06.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:06.871" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.901999999860294e-06, 3.2500000002322338e-06, 2.9999999999752447e-06, 2.9729999999617007e-06, 2.9029999999430345e-06, 2.638999999859948e-06, 3.12499999965965e-06, 3.4030000000129235e-06,...</msg>
<status status="PASS" starttime="20201029 09:33:06.867" endtime="20201029 09:33:06.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.875" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:06.874" endtime="20201029 09:33:06.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.878" level="INFO">VALUE: [0, 2.901999999860294e-06, 3.2500000002322338e-06, 2.9999999999752447e-06, 2.9729999999617007e-06, 2.9029999999430345e-06, 2.638999999859948e-06, 3.12499999965965e-06, 3.4030000000129235e-06, 2.931000000039319e-06, 2.6250000000338503e-06, 3.235999999962047e-06, 2.87499999984675e-06, 0.37761636099999984, 3.4309999996651186e-06, 2.931000000039319e-06, 2.750000000162345e-06, 3.0689999999111706e-06, 2.8609999995765634e-06, 3.0830000001813573e-06, 2.527999999557551e-06, 3.3469999998203548e-06, 3.2640000000583314e-06, 2.9720000007671388e-06, 3.055999999723724e-06, 2.6530000001301346e-06, 2.9579999996087736e-06, 3.040999999370797e-06, 3.1809999994081295e-06, 3.0419999994535374e-06, 2.9299999999565784e-06, 3.000000000419334e-06, 2.986000000149147e-06, 2.986000000149147e-06, 2.735999999892158e-06, 3.555999999349524e-06, 2.8189999996541815e-06, 3.028000000071529e-06, 2.8750000007349286e-06, 5.410000003536197e-07, 3.4309999996651186e-06, 2.9159999996863917e-06, 3.3610000000905416e-06, 2.9719999998789604e-06, 3.2499999997881446e-06, 3.055000000529162e-06, 3.0410000002589754e-06, 2.473000000335901e-06, 3.332999999550168e-06, 2.9720000007671388e-06, 2.5419999998277376e-06, 3.0840000002640977e-06, 3.401999999930183e-06, 3.1109999998335525e-06, 3.167000000026121e-06, 2.708999999434525e-06, 3.235999999517958e-06, 2.6110000002077527e-06, 2.931000000039319e-06, 2.735999999892158e-06, 3.1250000001037392e-06, 3.1529999997559344e-06, 3.1109999998335525e-06, 3.3469999998203548e-06]</msg>
<status status="PASS" starttime="20201029 09:33:06.877" endtime="20201029 09:33:06.879"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.872" endtime="20201029 09:33:06.879"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.485" endtime="20201029 09:33:06.880"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.484" endtime="20201029 09:33:06.880"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.888" endtime="20201029 09:33:06.898"></status>
</kw>
<msg timestamp="20201029 09:33:06.898" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:06.886" endtime="20201029 09:33:06.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.901" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:06.899" endtime="20201029 09:33:06.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.902" endtime="20201029 09:33:06.904"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.883" endtime="20201029 09:33:06.905"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.882" endtime="20201029 09:33:06.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.912" endtime="20201029 09:33:07.222"></status>
</kw>
<msg timestamp="20201029 09:33:07.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.142268028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.142271014, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:06.911" endtime="20201029 09:33:07.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.142268028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.142271014, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:07.227" endtime="20201029 09:33:07.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.238" endtime="20201029 09:33:07.239"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.908" endtime="20201029 09:33:07.240"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.906" endtime="20201029 09:33:07.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:07.245" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.9579999996087736e-06}, {'diff': 3.040999999370797e-06}, {'diff': 3.1809999994081295e-06}, {'diff': 3.0419999994535374e-06}, {'diff': 2.9299999999565784e-06}, {'diff': 3.000000...</msg>
<status status="PASS" starttime="20201029 09:33:07.241" endtime="20201029 09:33:07.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:07.250" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.9579999996087736e-06, 3.040999999370797e-06, 3.1809999994081295e-06, 3.0419999994535374e-06, 2.9299999999565784e-06, 3.000000000419334e-06, 2.986000000149147e-06, 2.986000000149147e-06,...</msg>
<status status="PASS" starttime="20201029 09:33:07.246" endtime="20201029 09:33:07.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.255" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:07.254" endtime="20201029 09:33:07.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.257" level="INFO">VALUE: [0, 2.9579999996087736e-06, 3.040999999370797e-06, 3.1809999994081295e-06, 3.0419999994535374e-06, 2.9299999999565784e-06, 3.000000000419334e-06, 2.986000000149147e-06, 2.986000000149147e-06, 2.735999999892158e-06, 3.555999999349524e-06, 2.8189999996541815e-06, 3.028000000071529e-06, 2.8750000007349286e-06, 5.410000003536197e-07, 3.4309999996651186e-06, 2.9159999996863917e-06, 3.3610000000905416e-06, 2.9719999998789604e-06, 3.2499999997881446e-06, 3.055000000529162e-06, 3.0410000002589754e-06, 2.473000000335901e-06, 3.332999999550168e-06, 2.9720000007671388e-06, 2.5419999998277376e-06, 3.0840000002640977e-06, 3.401999999930183e-06, 3.1109999998335525e-06, 3.167000000026121e-06, 2.708999999434525e-06, 3.235999999517958e-06, 2.6110000002077527e-06, 2.931000000039319e-06, 2.735999999892158e-06, 3.1250000001037392e-06, 3.1529999997559344e-06, 3.1109999998335525e-06, 3.3469999998203548e-06, 0.38010915299999937, 2.8189999996541815e-06, 2.5980000000203063e-06, 3.0840000002640977e-06, 3.1529999997559344e-06, 2.582999999667379e-06, 3.0969999995633657e-06, 3.416999999394932e-06, 3.263999999170153e-06, 2.9729999999617007e-06, 3.2640000000583314e-06, 2.596999999937566e-06, 2.9719999998789604e-06, 2.750000000162345e-06, 3.0830000001813573e-06, 2.750000000162345e-06, 2.9579999996087736e-06, 3.0419999994535374e-06, 3.0830000001813573e-06, 3.028000000071529e-06, 3.2640000000583314e-06, 3.2779999994403397e-06, 3.0419999994535374e-06, 3.1389999994857476e-06, 3.304999999897973e-06]</msg>
<status status="PASS" starttime="20201029 09:33:07.256" endtime="20201029 09:33:07.258"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.251" endtime="20201029 09:33:07.258"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.881" endtime="20201029 09:33:07.259"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.880" endtime="20201029 09:33:07.259"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.267" endtime="20201029 09:33:07.276"></status>
</kw>
<msg timestamp="20201029 09:33:07.277" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:07.265" endtime="20201029 09:33:07.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.279" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:07.278" endtime="20201029 09:33:07.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.280" endtime="20201029 09:33:07.282"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.262" endtime="20201029 09:33:07.282"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.261" endtime="20201029 09:33:07.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.289" endtime="20201029 09:33:07.601"></status>
</kw>
<msg timestamp="20201029 09:33:07.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.531368958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.531372042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:07.288" endtime="20201029 09:33:07.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.531368958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.531372042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:07.607" endtime="20201029 09:33:07.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.618" endtime="20201029 09:33:07.620"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.285" endtime="20201029 09:33:07.621"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.283" endtime="20201029 09:33:07.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:07.625" level="INFO">${RESULT} = [{'diff': 3.0840000002640977e-06}, {'diff': 3.401999999930183e-06}, {'diff': 3.1109999998335525e-06}, {'diff': 3.167000000026121e-06}, {'diff': 2.708999999434525e-06}, {'diff': 3.235999999517958e-06},...</msg>
<status status="PASS" starttime="20201029 09:33:07.622" endtime="20201029 09:33:07.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:07.630" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.0840000002640977e-06, 3.401999999930183e-06, 3.1109999998335525e-06, 3.167000000026121e-06, 2.708999999434525e-06, 3.235999999517958e-06, 2.6110000002077527e-06, 2.931000000039319e-06, 2.7...</msg>
<status status="PASS" starttime="20201029 09:33:07.626" endtime="20201029 09:33:07.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.634" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:07.633" endtime="20201029 09:33:07.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.637" level="INFO">VALUE: [3.0840000002640977e-06, 3.401999999930183e-06, 3.1109999998335525e-06, 3.167000000026121e-06, 2.708999999434525e-06, 3.235999999517958e-06, 2.6110000002077527e-06, 2.931000000039319e-06, 2.735999999892158e-06, 3.1250000001037392e-06, 3.1529999997559344e-06, 3.1109999998335525e-06, 3.3469999998203548e-06, 0.38010915299999937, 2.8189999996541815e-06, 2.5980000000203063e-06, 3.0840000002640977e-06, 3.1529999997559344e-06, 2.582999999667379e-06, 3.0969999995633657e-06, 3.416999999394932e-06, 3.263999999170153e-06, 2.9729999999617007e-06, 3.2640000000583314e-06, 2.596999999937566e-06, 2.9719999998789604e-06, 2.750000000162345e-06, 3.0830000001813573e-06, 2.750000000162345e-06, 2.9579999996087736e-06, 3.0419999994535374e-06, 3.0830000001813573e-06, 3.028000000071529e-06, 3.2640000000583314e-06, 3.2779999994403397e-06, 3.0419999994535374e-06, 3.1389999994857476e-06, 3.304999999897973e-06, 0.36782768099999963, 2.624999999589761e-06, 2.8750000007349286e-06, 3.055999999723724e-06, 2.8200000006251003e-06, 2.693999999969776e-06, 2.7910000000019863e-06, 2.8469999993063766e-06, 2.6250000004779395e-06, 3.332999999550168e-06, 3.250000000676323e-06, 2.6110000002077527e-06, 2.805999999466735e-06, 3.028000000071529e-06, 2.77799999981454e-06, 2.596999999937566e-06, 3.2220000001359494e-06, 3.151999999673194e-06, 2.8060000003549135e-06, 3.1529999997559344e-06, 3.2220000001359494e-06, 2.6950000000525165e-06, 3.2220000001359494e-06, 2.5560000000979244e-06, 2.9170000006573105e-06, 2.750000000162345e-06]</msg>
<status status="PASS" starttime="20201029 09:33:07.635" endtime="20201029 09:33:07.637"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.631" endtime="20201029 09:33:07.638"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.260" endtime="20201029 09:33:07.638"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.259" endtime="20201029 09:33:07.639"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.647" endtime="20201029 09:33:07.658"></status>
</kw>
<msg timestamp="20201029 09:33:07.658" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:07.646" endtime="20201029 09:33:07.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.661" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:07.660" endtime="20201029 09:33:07.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.662" endtime="20201029 09:33:07.664"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.642" endtime="20201029 09:33:07.664"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.641" endtime="20201029 09:33:07.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.671" endtime="20201029 09:33:07.983"></status>
</kw>
<msg timestamp="20201029 09:33:07.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.911629903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.911633361, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:07.670" endtime="20201029 09:33:07.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.911629903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.911633361, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:07.988" endtime="20201029 09:33:07.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.998" endtime="20201029 09:33:07.999"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.667" endtime="20201029 09:33:08.000"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.665" endtime="20201029 09:33:08.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:08.005" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.750000000162345e-06}, {'diff': 3.0830000001813573e-06}, {'diff': 2.750000000162345e-06}, {'diff': 2.9579999996087736e-06}, {'diff': 3.0419999994535374e-06}, {'diff': 3.0830000...</msg>
<status status="PASS" starttime="20201029 09:33:08.001" endtime="20201029 09:33:08.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:08.010" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.750000000162345e-06, 3.0830000001813573e-06, 2.750000000162345e-06, 2.9579999996087736e-06, 3.0419999994535374e-06, 3.0830000001813573e-06, 3.028000000071529e-06, 3.2640000000583314e-06...</msg>
<status status="PASS" starttime="20201029 09:33:08.006" endtime="20201029 09:33:08.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.014" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:08.013" endtime="20201029 09:33:08.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.017" level="INFO">VALUE: [0, 2.750000000162345e-06, 3.0830000001813573e-06, 2.750000000162345e-06, 2.9579999996087736e-06, 3.0419999994535374e-06, 3.0830000001813573e-06, 3.028000000071529e-06, 3.2640000000583314e-06, 3.2779999994403397e-06, 3.0419999994535374e-06, 3.1389999994857476e-06, 3.304999999897973e-06, 0.36782768099999963, 2.624999999589761e-06, 2.8750000007349286e-06, 3.055999999723724e-06, 2.8200000006251003e-06, 2.693999999969776e-06, 2.7910000000019863e-06, 2.8469999993063766e-06, 2.6250000004779395e-06, 3.332999999550168e-06, 3.250000000676323e-06, 2.6110000002077527e-06, 2.805999999466735e-06, 3.028000000071529e-06, 2.77799999981454e-06, 2.596999999937566e-06, 3.2220000001359494e-06, 3.151999999673194e-06, 2.8060000003549135e-06, 3.1529999997559344e-06, 3.2220000001359494e-06, 2.6950000000525165e-06, 3.2220000001359494e-06, 2.5560000000979244e-06, 2.9170000006573105e-06, 2.750000000162345e-06, 5.420000004363601e-07, 3.292000000598705e-06, 3.2220000001359494e-06, 3.235999999517958e-06, 2.986000000149147e-06, 2.750000000162345e-06, 2.735999999892158e-06, 3.0969999995633657e-06, 3.1109999998335525e-06, 3.332999999550168e-06, 3.3059999999807133e-06, 2.6799999996995894e-06, 3.111999999916293e-06, 3.2640000000583314e-06, 3.000000000419334e-06, 3.028000000071529e-06, 2.986000000149147e-06, 3.1109999998335525e-06, 2.9579999996087736e-06, 2.931000000039319e-06, 2.8609999995765634e-06, 2.7919999991965483e-06, 2.7780000007027184e-06, 2.9719999998789604e-06, 2.735999999892158e-06]</msg>
<status status="PASS" starttime="20201029 09:33:08.015" endtime="20201029 09:33:08.018"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.011" endtime="20201029 09:33:08.018"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.639" endtime="20201029 09:33:08.018"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.639" endtime="20201029 09:33:08.019"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.027" endtime="20201029 09:33:08.036"></status>
</kw>
<msg timestamp="20201029 09:33:08.036" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.025" endtime="20201029 09:33:08.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.039" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.037" endtime="20201029 09:33:08.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.040" endtime="20201029 09:33:08.041"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.022" endtime="20201029 09:33:08.042"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.021" endtime="20201029 09:33:08.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.049" endtime="20201029 09:33:08.364"></status>
</kw>
<msg timestamp="20201029 09:33:08.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.279605264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.279608292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:08.047" endtime="20201029 09:33:08.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.279605264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.279608292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:08.369" endtime="20201029 09:33:08.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.380" endtime="20201029 09:33:08.381"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.045" endtime="20201029 09:33:08.382"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.043" endtime="20201029 09:33:08.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:08.387" level="INFO">${RESULT} = [{'diff': 3.028000000071529e-06}, {'diff': 2.77799999981454e-06}, {'diff': 2.596999999937566e-06}, {'diff': 3.2220000001359494e-06}, {'diff': 3.151999999673194e-06}, {'diff': 2.8060000003549135e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:33:08.383" endtime="20201029 09:33:08.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:08.392" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.028000000071529e-06, 2.77799999981454e-06, 2.596999999937566e-06, 3.2220000001359494e-06, 3.151999999673194e-06, 2.8060000003549135e-06, 3.1529999997559344e-06, 3.2220000001359494e-06, 2.6...</msg>
<status status="PASS" starttime="20201029 09:33:08.388" endtime="20201029 09:33:08.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.396" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:08.395" endtime="20201029 09:33:08.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.399" level="INFO">VALUE: [3.028000000071529e-06, 2.77799999981454e-06, 2.596999999937566e-06, 3.2220000001359494e-06, 3.151999999673194e-06, 2.8060000003549135e-06, 3.1529999997559344e-06, 3.2220000001359494e-06, 2.6950000000525165e-06, 3.2220000001359494e-06, 2.5560000000979244e-06, 2.9170000006573105e-06, 2.750000000162345e-06, 5.420000004363601e-07, 3.292000000598705e-06, 3.2220000001359494e-06, 3.235999999517958e-06, 2.986000000149147e-06, 2.750000000162345e-06, 2.735999999892158e-06, 3.0969999995633657e-06, 3.1109999998335525e-06, 3.332999999550168e-06, 3.3059999999807133e-06, 2.6799999996995894e-06, 3.111999999916293e-06, 3.2640000000583314e-06, 3.000000000419334e-06, 3.028000000071529e-06, 2.986000000149147e-06, 3.1109999998335525e-06, 2.9579999996087736e-06, 2.931000000039319e-06, 2.8609999995765634e-06, 2.7919999991965483e-06, 2.7780000007027184e-06, 2.9719999998789604e-06, 2.735999999892158e-06, 0.3672910140000001, 2.5830000005555576e-06, 2.72300000059289e-06, 2.847999999389117e-06, 3.2779999994403397e-06, 2.666000000317581e-06, 2.9579999996087736e-06, 3.2079999998657627e-06, 3.0139999998013423e-06, 2.8750000007349286e-06, 3.0830000001813573e-06, 3.0560000006119026e-06, 3.111000000721731e-06, 3.527000000502767e-06, 3.443999999852565e-06, 2.666999999512143e-06, 3.2770000002457778e-06, 3.3750000003607283e-06, 2.986000000149147e-06, 2.9440000002267652e-06, 3.028000000071529e-06, 3.1949999996783163e-06, 2.958999999691514e-06, 3.139000000373926e-06, 2.931000000039319e-06, 3.167000000026121e-06]</msg>
<status status="PASS" starttime="20201029 09:33:08.398" endtime="20201029 09:33:08.400"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.393" endtime="20201029 09:33:08.400"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.019" endtime="20201029 09:33:08.401"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.019" endtime="20201029 09:33:08.401"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.409" endtime="20201029 09:33:08.419"></status>
</kw>
<msg timestamp="20201029 09:33:08.419" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.407" endtime="20201029 09:33:08.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.422" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.420" endtime="20201029 09:33:08.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.423" endtime="20201029 09:33:08.424"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.404" endtime="20201029 09:33:08.425"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.403" endtime="20201029 09:33:08.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.433" endtime="20201029 09:33:08.747"></status>
</kw>
<msg timestamp="20201029 09:33:08.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.651285306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.651288722, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:08.431" endtime="20201029 09:33:08.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.651285306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.651288722, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:08.752" endtime="20201029 09:33:08.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.762" endtime="20201029 09:33:08.764"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.428" endtime="20201029 09:33:08.765"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.426" endtime="20201029 09:33:08.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:08.769" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.2640000000583314e-06}, {'diff': 3.000000000419334e-06}, {'diff': 3.028000000071529e-06}, {'diff': 2.986000000149147e-06}, {'diff': 3.1109999998335525e-06}, {'diff': 2.95799999...</msg>
<status status="PASS" starttime="20201029 09:33:08.766" endtime="20201029 09:33:08.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:08.774" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.2640000000583314e-06, 3.000000000419334e-06, 3.028000000071529e-06, 2.986000000149147e-06, 3.1109999998335525e-06, 2.9579999996087736e-06, 2.931000000039319e-06, 2.8609999995765634e-06,...</msg>
<status status="PASS" starttime="20201029 09:33:08.770" endtime="20201029 09:33:08.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.778" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:08.777" endtime="20201029 09:33:08.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.782" level="INFO">VALUE: [0, 3.2640000000583314e-06, 3.000000000419334e-06, 3.028000000071529e-06, 2.986000000149147e-06, 3.1109999998335525e-06, 2.9579999996087736e-06, 2.931000000039319e-06, 2.8609999995765634e-06, 2.7919999991965483e-06, 2.7780000007027184e-06, 2.9719999998789604e-06, 2.735999999892158e-06, 0.3672910140000001, 2.5830000005555576e-06, 2.72300000059289e-06, 2.847999999389117e-06, 3.2779999994403397e-06, 2.666000000317581e-06, 2.9579999996087736e-06, 3.2079999998657627e-06, 3.0139999998013423e-06, 2.8750000007349286e-06, 3.0830000001813573e-06, 3.0560000006119026e-06, 3.111000000721731e-06, 3.527000000502767e-06, 3.443999999852565e-06, 2.666999999512143e-06, 3.2770000002457778e-06, 3.3750000003607283e-06, 2.986000000149147e-06, 2.9440000002267652e-06, 3.028000000071529e-06, 3.1949999996783163e-06, 2.958999999691514e-06, 3.139000000373926e-06, 2.931000000039319e-06, 3.167000000026121e-06, 5.409999994654413e-07, 3.221999999247771e-06, 3.2640000000583314e-06, 2.9999999995311555e-06, 2.8329999999243682e-06, 2.735999999892158e-06, 3.0419999994535374e-06, 3.1800000002135675e-06, 3.527999999697329e-06, 2.473000000335901e-06, 3.2770000002457778e-06, 2.6809999997823297e-06, 3.443999999852565e-06, 3.028000000071529e-06, 3.208999999948503e-06, 2.569000000285371e-06, 2.5970000008257443e-06, 3.0139999998013423e-06, 3.0139999998013423e-06, 3.3190000001681597e-06, 2.7229999997047116e-06, 2.986000000149147e-06, 3.278000000328518e-06, 3.139000000373926e-06, 3.1659999999433808e-06]</msg>
<status status="PASS" starttime="20201029 09:33:08.779" endtime="20201029 09:33:08.782"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.775" endtime="20201029 09:33:08.783"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.402" endtime="20201029 09:33:08.783"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.401" endtime="20201029 09:33:08.783"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.791" endtime="20201029 09:33:08.801"></status>
</kw>
<msg timestamp="20201029 09:33:08.801" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.790" endtime="20201029 09:33:08.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.804" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.802" endtime="20201029 09:33:08.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.805" endtime="20201029 09:33:08.806"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.787" endtime="20201029 09:33:08.807"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.785" endtime="20201029 09:33:08.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.814" endtime="20201029 09:33:09.120"></status>
</kw>
<msg timestamp="20201029 09:33:09.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.018724417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.018727944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:08.812" endtime="20201029 09:33:09.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.018724417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.018727944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:09.125" endtime="20201029 09:33:09.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.135" endtime="20201029 09:33:09.137"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.810" endtime="20201029 09:33:09.138"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.808" endtime="20201029 09:33:09.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:09.142" level="INFO">${RESULT} = [{'diff': 3.527000000502767e-06}, {'diff': 3.443999999852565e-06}, {'diff': 2.666999999512143e-06}, {'diff': 3.2770000002457778e-06}, {'diff': 3.3750000003607283e-06}, {'diff': 2.986000000149147e-06},...</msg>
<status status="PASS" starttime="20201029 09:33:09.139" endtime="20201029 09:33:09.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:09.148" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.527000000502767e-06, 3.443999999852565e-06, 2.666999999512143e-06, 3.2770000002457778e-06, 3.3750000003607283e-06, 2.986000000149147e-06, 2.9440000002267652e-06, 3.028000000071529e-06, 3.1...</msg>
<status status="PASS" starttime="20201029 09:33:09.143" endtime="20201029 09:33:09.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.152" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:09.151" endtime="20201029 09:33:09.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.155" level="INFO">VALUE: [3.527000000502767e-06, 3.443999999852565e-06, 2.666999999512143e-06, 3.2770000002457778e-06, 3.3750000003607283e-06, 2.986000000149147e-06, 2.9440000002267652e-06, 3.028000000071529e-06, 3.1949999996783163e-06, 2.958999999691514e-06, 3.139000000373926e-06, 2.931000000039319e-06, 3.167000000026121e-06, 5.409999994654413e-07, 3.221999999247771e-06, 3.2640000000583314e-06, 2.9999999995311555e-06, 2.8329999999243682e-06, 2.735999999892158e-06, 3.0419999994535374e-06, 3.1800000002135675e-06, 3.527999999697329e-06, 2.473000000335901e-06, 3.2770000002457778e-06, 2.6809999997823297e-06, 3.443999999852565e-06, 3.028000000071529e-06, 3.208999999948503e-06, 2.569000000285371e-06, 2.5970000008257443e-06, 3.0139999998013423e-06, 3.0139999998013423e-06, 3.3190000001681597e-06, 2.7229999997047116e-06, 2.986000000149147e-06, 3.278000000328518e-06, 3.139000000373926e-06, 3.1659999999433808e-06, 0.3731515280000002, 2.4440000006009654e-06, 3.2499999997881446e-06, 3.3889999997427367e-06, 2.9579999996087736e-06, 2.8340000000071086e-06, 3.2220000001359494e-06, 2.5560000000979244e-06, 2.8060000003549135e-06, 3.000000000419334e-06, 2.958999999691514e-06, 3.0969999995633657e-06, 3.3199999993627216e-06, 3.1109999998335525e-06, 3.0830000001813573e-06, 2.958000000496952e-06, 3.0839999993759193e-06, 3.290999999627786e-06, 2.6809999997823297e-06, 3.262999999975591e-06, 3.028000000071529e-06, 3.1800000002135675e-06, 2.8750000007349286e-06, 2.666000000317581e-06, 3.304999999897973e-06, 2.763999999544353e-06]</msg>
<status status="PASS" starttime="20201029 09:33:09.153" endtime="20201029 09:33:09.155"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.149" endtime="20201029 09:33:09.156"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.784" endtime="20201029 09:33:09.156"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.783" endtime="20201029 09:33:09.156"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.164" endtime="20201029 09:33:09.174"></status>
</kw>
<msg timestamp="20201029 09:33:09.175" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.163" endtime="20201029 09:33:09.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.177" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.176" endtime="20201029 09:33:09.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.178" endtime="20201029 09:33:09.180"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.160" endtime="20201029 09:33:09.180"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.158" endtime="20201029 09:33:09.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.188" endtime="20201029 09:33:09.492"></status>
</kw>
<msg timestamp="20201029 09:33:09.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.391643083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.391645958, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:09.186" endtime="20201029 09:33:09.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.391643083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.391645958, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:09.497" endtime="20201029 09:33:09.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.507" endtime="20201029 09:33:09.509"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.183" endtime="20201029 09:33:09.509"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.182" endtime="20201029 09:33:09.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:09.514" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.028000000071529e-06}, {'diff': 3.208999999948503e-06}, {'diff': 2.569000000285371e-06}, {'diff': 2.5970000008257443e-06}, {'diff': 3.0139999998013423e-06}, {'diff': 3.01399999...</msg>
<status status="PASS" starttime="20201029 09:33:09.510" endtime="20201029 09:33:09.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:09.519" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.028000000071529e-06, 3.208999999948503e-06, 2.569000000285371e-06, 2.5970000008257443e-06, 3.0139999998013423e-06, 3.0139999998013423e-06, 3.3190000001681597e-06, 2.7229999997047116e-06...</msg>
<status status="PASS" starttime="20201029 09:33:09.515" endtime="20201029 09:33:09.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.523" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:09.522" endtime="20201029 09:33:09.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.526" level="INFO">VALUE: [0, 3.028000000071529e-06, 3.208999999948503e-06, 2.569000000285371e-06, 2.5970000008257443e-06, 3.0139999998013423e-06, 3.0139999998013423e-06, 3.3190000001681597e-06, 2.7229999997047116e-06, 2.986000000149147e-06, 3.278000000328518e-06, 3.139000000373926e-06, 3.1659999999433808e-06, 0.3731515280000002, 2.4440000006009654e-06, 3.2499999997881446e-06, 3.3889999997427367e-06, 2.9579999996087736e-06, 2.8340000000071086e-06, 3.2220000001359494e-06, 2.5560000000979244e-06, 2.8060000003549135e-06, 3.000000000419334e-06, 2.958999999691514e-06, 3.0969999995633657e-06, 3.3199999993627216e-06, 3.1109999998335525e-06, 3.0830000001813573e-06, 2.958000000496952e-06, 3.0839999993759193e-06, 3.290999999627786e-06, 2.6809999997823297e-06, 3.262999999975591e-06, 3.028000000071529e-06, 3.1800000002135675e-06, 2.8750000007349286e-06, 2.666000000317581e-06, 3.304999999897973e-06, 2.763999999544353e-06, 5.419999995481817e-07, 3.055999999723724e-06, 3.290999999627786e-06, 2.944999999421327e-06, 2.889000000116937e-06, 3.193999999595576e-06, 3.3879999996599963e-06, 3.4589999993173137e-06, 2.624999999589761e-06, 3.042000000341716e-06, 3.6659999995691805e-06, 3.028000000071529e-06, 2.457999999982974e-06, 2.9030000003871237e-06, 3.263999999170153e-06, 2.7780000007027184e-06, 3.055000000529162e-06, 3.097000000451544e-06, 3.0839999993759193e-06, 3.012999999718602e-06, 2.638999999859948e-06, 3.0830000001813573e-06, 2.6670000004003214e-06, 2.6530000001301346e-06, 2.9579999996087736e-06]</msg>
<status status="PASS" starttime="20201029 09:33:09.524" endtime="20201029 09:33:09.526"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.520" endtime="20201029 09:33:09.526"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.157" endtime="20201029 09:33:09.527"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.157" endtime="20201029 09:33:09.527"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.898" endtime="20201029 09:33:09.527"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:01.821" endtime="20201029 09:33:09.528" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:09.535" endtime="20201029 09:33:09.554"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.533" endtime="20201029 09:33:09.554"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.569" endtime="20201029 09:33:09.583"></status>
</kw>
<msg timestamp="20201029 09:33:09.583" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.567" endtime="20201029 09:33:09.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.586" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.585" endtime="20201029 09:33:09.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.589" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:09.587" endtime="20201029 09:33:09.590"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:09.564" endtime="20201029 09:33:09.590"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:09.562" endtime="20201029 09:33:09.591"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.561" endtime="20201029 09:33:09.591"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:09.595" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:09.594" endtime="20201029 09:33:09.595"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.592" endtime="20201029 09:33:09.595"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.560" endtime="20201029 09:33:09.596"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.559" endtime="20201029 09:33:09.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.596" endtime="20201029 09:33:09.598"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.557" endtime="20201029 09:33:09.599"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.555" endtime="20201029 09:33:09.599"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.532" endtime="20201029 09:33:09.599"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.608" endtime="20201029 09:33:09.619"></status>
</kw>
<msg timestamp="20201029 09:33:09.620" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.606" endtime="20201029 09:33:09.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.622" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.621" endtime="20201029 09:33:09.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.623" endtime="20201029 09:33:09.625"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.604" endtime="20201029 09:33:09.626"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.602" endtime="20201029 09:33:09.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.634" endtime="20201029 09:33:09.911"></status>
</kw>
<msg timestamp="20201029 09:33:09.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064630069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064631375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:09.631" endtime="20201029 09:33:09.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064630069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064631375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:09.915" endtime="20201029 09:33:09.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.924" endtime="20201029 09:33:09.925"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.628" endtime="20201029 09:33:09.926"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.627" endtime="20201029 09:33:09.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:09.930" level="INFO">${RESULT} = [{'diff': 1.3060000000064687e-06}, {'diff': 8.340000000051084e-07}, {'diff': 8.32999999991757e-07}, {'diff': 8.749999999974056e-07}, {'diff': 8.880000000044408e-07}, {'diff': 8.469999999982658e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:33:09.927" endtime="20201029 09:33:09.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:09.935" level="INFO">${OVERHEAD} = {'diff': [1.3060000000064687e-06, 8.340000000051084e-07, 8.32999999991757e-07, 8.749999999974056e-07, 8.880000000044408e-07, 8.469999999982658e-07, 8.330000000056348e-07, 8.199999999985996e-07, 8.1999...</msg>
<status status="PASS" starttime="20201029 09:33:09.931" endtime="20201029 09:33:09.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.939" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:09.938" endtime="20201029 09:33:09.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.942" level="INFO">VALUE: [1.3060000000064687e-06, 8.340000000051084e-07, 8.32999999991757e-07, 8.749999999974056e-07, 8.880000000044408e-07, 8.469999999982658e-07, 8.330000000056348e-07, 8.199999999985996e-07, 8.199999999985996e-07, 8.05000000006495e-07, 8.479999999977395e-07, 8.190000000130038e-07, 8.469999999982658e-07, 8.32999999991757e-07, 8.18999999999126e-07, 8.469999999982658e-07, 8.32999999991757e-07, 8.749999999974056e-07, 8.749999999974056e-07, 8.340000000051084e-07, 8.330000000056348e-07, 7.919999999994598e-07, 8.609999999908968e-07, 8.32999999991757e-07, 8.339999999912306e-07, 8.339999999912306e-07, 8.340000000051084e-07, 8.330000000056348e-07, 8.049999999926172e-07, 8.199999999985996e-07, 8.339999999912306e-07, 8.340000000051084e-07, 8.469999999982658e-07, 8.199999999985996e-07, 8.469999999982658e-07, 8.199999999985996e-07, 8.199999999985996e-07, 8.199999999985996e-07, 8.749999999974056e-07, 8.340000000051084e-07, 8.749999999974056e-07, 8.469999999982658e-07, 8.330000000056348e-07, 8.330000000056348e-07, 8.199999999985996e-07, 7.77999999992951e-07, 8.18999999999126e-07, 8.340000000051084e-07, 8.18999999999126e-07, 8.32999999991757e-07]</msg>
<status status="PASS" starttime="20201029 09:33:09.940" endtime="20201029 09:33:09.942"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.936" endtime="20201029 09:33:09.943"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.601" endtime="20201029 09:33:09.943"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.600" endtime="20201029 09:33:09.943"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.953" endtime="20201029 09:33:09.964"></status>
</kw>
<msg timestamp="20201029 09:33:09.964" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.951" endtime="20201029 09:33:09.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.967" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.965" endtime="20201029 09:33:09.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.968" endtime="20201029 09:33:09.970"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.948" endtime="20201029 09:33:09.970"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.946" endtime="20201029 09:33:09.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.977" endtime="20201029 09:33:10.275"></status>
</kw>
<msg timestamp="20201029 09:33:10.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064718722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064719542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:09.975" endtime="20201029 09:33:10.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064718722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064719542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:10.280" endtime="20201029 09:33:10.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.290" endtime="20201029 09:33:10.292"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.973" endtime="20201029 09:33:10.293"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.971" endtime="20201029 09:33:10.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:10.297" level="INFO">${RESULT} = [{'diff': 8.199999999985996e-07}, {'diff': 8.199999999985996e-07}, {'diff': 8.749999999974056e-07}, {'diff': 8.340000000051084e-07}, {'diff': 8.749999999974056e-07}, {'diff': 8.469999999982658e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:33:10.294" endtime="20201029 09:33:10.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:10.303" level="INFO">${OVERHEAD} = {'diff': [8.199999999985996e-07, 8.199999999985996e-07, 8.749999999974056e-07, 8.340000000051084e-07, 8.749999999974056e-07, 8.469999999982658e-07, 8.330000000056348e-07, 8.330000000056348e-07, 8.1999...</msg>
<status status="PASS" starttime="20201029 09:33:10.298" endtime="20201029 09:33:10.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.313" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:10.312" endtime="20201029 09:33:10.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.316" level="INFO">VALUE: [8.199999999985996e-07, 8.199999999985996e-07, 8.749999999974056e-07, 8.340000000051084e-07, 8.749999999974056e-07, 8.469999999982658e-07, 8.330000000056348e-07, 8.330000000056348e-07, 8.199999999985996e-07, 7.77999999992951e-07, 8.18999999999126e-07, 8.340000000051084e-07, 8.18999999999126e-07, 8.32999999991757e-07, 1.291999999986082e-06, 8.330000000333904e-07, 8.189999999852482e-07, 8.189999999852482e-07, 8.619999999903705e-07, 8.329999999778792e-07, 8.750000000112834e-07, 8.479999999977395e-07, 8.200000000124774e-07, 8.330000000333904e-07, 8.469999999705102e-07, 8.340000000051084e-07, 8.619999999903705e-07, 8.479999999977395e-07, 8.330000000333904e-07, 8.469999999705102e-07, 7.919999999717042e-07, 8.340000000051084e-07, 8.479999999977395e-07, 8.200000000124774e-07, 8.610000000186524e-07, 8.199999999569663e-07, 8.470000000260214e-07, 8.189999999852482e-07, 8.470000000260214e-07, 8.049999999926172e-07, 8.330000000333904e-07, 8.469999999705102e-07, 8.329999999778792e-07, 8.330000000333904e-07, 8.190000000407593e-07, 8.189999999852482e-07, 8.329999999778792e-07, 8.330000000333904e-07, 8.340000000051084e-07, 8.610000000186524e-07, 8.329999999778792e-07, 8.329999999778792e-07, 8.199999999569663e-07, 8.340000000051084e-07, 8.470000000260214e-07, 8.199999999569663e-07, 8.329999999778792e-07, 8.330000000333904e-07, 8.469999999705102e-07, 8.199999999569663e-07, 8.189999999852482e-07, 8.340000000051084e-07, 8.340000000051084e-07, 8.469999999705102e-07]</msg>
<status status="PASS" starttime="20201029 09:33:10.314" endtime="20201029 09:33:10.316"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.310" endtime="20201029 09:33:10.317"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.944" endtime="20201029 09:33:10.317"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.944" endtime="20201029 09:33:10.317"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.325" endtime="20201029 09:33:10.337"></status>
</kw>
<msg timestamp="20201029 09:33:10.337" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.324" endtime="20201029 09:33:10.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.340" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.338" endtime="20201029 09:33:10.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.341" endtime="20201029 09:33:10.342"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.321" endtime="20201029 09:33:10.343"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.319" endtime="20201029 09:33:10.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.350" endtime="20201029 09:33:10.652"></status>
</kw>
<msg timestamp="20201029 09:33:10.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.399726903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.399727736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:10.348" endtime="20201029 09:33:10.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.399726903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.399727736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:10.657" endtime="20201029 09:33:10.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.667" endtime="20201029 09:33:10.669"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.346" endtime="20201029 09:33:10.669"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.344" endtime="20201029 09:33:10.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:10.674" level="INFO">${RESULT} = [{'diff': 8.329999999778792e-07}, {'diff': 8.329999999778792e-07}, {'diff': 8.199999999569663e-07}, {'diff': 8.340000000051084e-07}, {'diff': 8.470000000260214e-07}, {'diff': 8.199999999569663e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:33:10.670" endtime="20201029 09:33:10.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:10.682" level="INFO">${OVERHEAD} = {'diff': [8.329999999778792e-07, 8.329999999778792e-07, 8.199999999569663e-07, 8.340000000051084e-07, 8.470000000260214e-07, 8.199999999569663e-07, 8.329999999778792e-07, 8.330000000333904e-07, 8.4699...</msg>
<status status="PASS" starttime="20201029 09:33:10.675" endtime="20201029 09:33:10.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.686" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:10.685" endtime="20201029 09:33:10.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.689" level="INFO">VALUE: [8.329999999778792e-07, 8.329999999778792e-07, 8.199999999569663e-07, 8.340000000051084e-07, 8.470000000260214e-07, 8.199999999569663e-07, 8.329999999778792e-07, 8.330000000333904e-07, 8.469999999705102e-07, 8.199999999569663e-07, 8.189999999852482e-07, 8.340000000051084e-07, 8.340000000051084e-07, 8.469999999705102e-07, 1.291999999986082e-06, 8.339999999495973e-07, 8.049999999926172e-07, 8.619999999348593e-07, 8.479999999977395e-07, 7.920000000272154e-07, 8.329999999778792e-07, 8.329999999778792e-07, 8.470000000260214e-07, 8.060000000753575e-07, 8.200000000124774e-07, 8.339999999495973e-07, 8.329999999778792e-07, 8.329999999778792e-07, 7.779999999790732e-07, 8.470000000260214e-07, 8.340000000606196e-07, 8.18999999929737e-07, 8.470000000260214e-07, 8.049999999926172e-07, 8.470000000260214e-07, 8.470000000260214e-07, 8.610000000741636e-07, 7.779999999790732e-07, 8.200000000124774e-07, 8.190000000407593e-07, 8.329999999778792e-07, 8.339999999495973e-07, 7.779999999790732e-07, 8.329999999778792e-07, 8.470000000260214e-07, 8.330000000889015e-07, 8.339999999495973e-07, 8.330000000889015e-07, 8.750000000112834e-07, 8.200000000124774e-07, 8.329999999778792e-07, 8.059999999643352e-07, 8.329999999778792e-07, 8.470000000260214e-07, 8.18999999929737e-07, 8.329999999778792e-07, 8.329999999778792e-07, 8.750000000112834e-07, 8.200000000124774e-07, 8.329999999778792e-07, 8.340000000606196e-07, 8.18999999929737e-07, 8.18999999929737e-07, 8.609999999631412e-07]</msg>
<status status="PASS" starttime="20201029 09:33:10.687" endtime="20201029 09:33:10.689"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.682" endtime="20201029 09:33:10.690"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.318" endtime="20201029 09:33:10.690"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.318" endtime="20201029 09:33:10.690"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.698" endtime="20201029 09:33:10.709"></status>
</kw>
<msg timestamp="20201029 09:33:10.710" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.696" endtime="20201029 09:33:10.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.712" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.711" endtime="20201029 09:33:10.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.713" endtime="20201029 09:33:10.715"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.694" endtime="20201029 09:33:10.715"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.692" endtime="20201029 09:33:10.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.722" endtime="20201029 09:33:11.030"></status>
</kw>
<msg timestamp="20201029 09:33:11.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.760827375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.760828208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:10.721" endtime="20201029 09:33:11.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.760827375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.760828208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:11.035" endtime="20201029 09:33:11.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.044" endtime="20201029 09:33:11.046"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.718" endtime="20201029 09:33:11.047"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.716" endtime="20201029 09:33:11.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:11.051" level="INFO">${RESULT} = [{'diff': 8.329999999778792e-07}, {'diff': 8.059999999643352e-07}, {'diff': 8.329999999778792e-07}, {'diff': 8.470000000260214e-07}, {'diff': 8.18999999929737e-07}, {'diff': 8.329999999778792e-07}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:11.048" endtime="20201029 09:33:11.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:11.057" level="INFO">${OVERHEAD} = {'diff': [8.329999999778792e-07, 8.059999999643352e-07, 8.329999999778792e-07, 8.470000000260214e-07, 8.18999999929737e-07, 8.329999999778792e-07, 8.329999999778792e-07, 8.750000000112834e-07, 8.20000...</msg>
<status status="PASS" starttime="20201029 09:33:11.053" endtime="20201029 09:33:11.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.061" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:11.060" endtime="20201029 09:33:11.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.064" level="INFO">VALUE: [8.329999999778792e-07, 8.059999999643352e-07, 8.329999999778792e-07, 8.470000000260214e-07, 8.18999999929737e-07, 8.329999999778792e-07, 8.329999999778792e-07, 8.750000000112834e-07, 8.200000000124774e-07, 8.329999999778792e-07, 8.340000000606196e-07, 8.18999999929737e-07, 8.18999999929737e-07, 8.609999999631412e-07, 1.3050000000625062e-06, 8.609999999631412e-07, 8.329999998668569e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.609999999631412e-07, 8.190000000407593e-07, 8.330000000889015e-07, 9.019999998027828e-07, 8.469999999149991e-07, 8.059999998533129e-07, 8.190000000407593e-07, 8.330000000889015e-07, 7.920000000272154e-07, 8.469999999149991e-07, 8.330000000889015e-07, 8.340000001716419e-07, 8.479999999977395e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.479999999977395e-07, 8.329999998668569e-07, 8.469999999149991e-07, 8.609999999631412e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.200000001234997e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.339999999495973e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.339999999495973e-07, 8.200000001234997e-07, 8.329999998668569e-07, 8.200000001234997e-07, 8.609999999631412e-07, 8.060000000753575e-07, 8.340000001716419e-07, 8.190000000407593e-07, 8.330000000889015e-07, 8.329999998668569e-07, 8.340000001716419e-07, 8.469999999149991e-07, 8.199999999014551e-07, 8.339999999495973e-07, 8.329999998668569e-07, 8.190000000407593e-07, 8.200000001234997e-07, 8.330000000889015e-07]</msg>
<status status="PASS" starttime="20201029 09:33:11.062" endtime="20201029 09:33:11.065"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.058" endtime="20201029 09:33:11.065"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.691" endtime="20201029 09:33:11.066"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.690" endtime="20201029 09:33:11.066"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.074" endtime="20201029 09:33:11.085"></status>
</kw>
<msg timestamp="20201029 09:33:11.086" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.073" endtime="20201029 09:33:11.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.088" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.087" endtime="20201029 09:33:11.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.089" endtime="20201029 09:33:11.091"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.070" endtime="20201029 09:33:11.092"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.068" endtime="20201029 09:33:11.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.103" endtime="20201029 09:33:11.416"></status>
</kw>
<msg timestamp="20201029 09:33:11.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.125410417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.125411278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:11.098" endtime="20201029 09:33:11.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.125410417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.125411278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:11.421" endtime="20201029 09:33:11.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.432" endtime="20201029 09:33:11.433"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.094" endtime="20201029 09:33:11.434"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.093" endtime="20201029 09:33:11.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:11.439" level="INFO">${RESULT} = [{'diff': 8.609999999631412e-07}, {'diff': 8.060000000753575e-07}, {'diff': 8.340000001716419e-07}, {'diff': 8.190000000407593e-07}, {'diff': 8.330000000889015e-07}, {'diff': 8.329999998668569e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:33:11.435" endtime="20201029 09:33:11.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:11.445" level="INFO">${OVERHEAD} = {'diff': [8.609999999631412e-07, 8.060000000753575e-07, 8.340000001716419e-07, 8.190000000407593e-07, 8.330000000889015e-07, 8.329999998668569e-07, 8.340000001716419e-07, 8.469999999149991e-07, 8.1999...</msg>
<status status="PASS" starttime="20201029 09:33:11.440" endtime="20201029 09:33:11.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.449" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:11.448" endtime="20201029 09:33:11.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.452" level="INFO">VALUE: [8.609999999631412e-07, 8.060000000753575e-07, 8.340000001716419e-07, 8.190000000407593e-07, 8.330000000889015e-07, 8.329999998668569e-07, 8.340000001716419e-07, 8.469999999149991e-07, 8.199999999014551e-07, 8.339999999495973e-07, 8.329999998668569e-07, 8.190000000407593e-07, 8.200000001234997e-07, 8.330000000889015e-07, 1.2769999999662218e-06, 8.470000001370437e-07, 8.330000000889015e-07, 8.339999999495973e-07, 8.330000000889015e-07, 8.330000000889015e-07, 9.030000001075678e-07, 8.469999999149991e-07, 9.170000001557099e-07, 8.329999998668569e-07, 8.339999999495973e-07, 8.060000000753575e-07, 8.330000000889015e-07, 8.199999999014551e-07, 8.470000001370437e-07, 8.609999999631412e-07, 8.470000001370437e-07, 8.190000000407593e-07, 8.339999999495973e-07, 8.470000001370437e-07, 8.479999999977395e-07, 8.469999999149991e-07, 8.199999999014551e-07, 8.339999999495973e-07, 8.190000000407593e-07, 8.190000000407593e-07, 8.470000001370437e-07, 8.339999999495973e-07, 8.329999998668569e-07, 8.330000000889015e-07, 8.339999999495973e-07, 8.049999999926172e-07, 8.060000000753575e-07, 8.200000001234997e-07, 8.330000000889015e-07, 8.200000001234997e-07, 9.030000001075678e-07, 8.470000001370437e-07, 8.199999999014551e-07, 8.330000000889015e-07, 8.609999999631412e-07, 8.469999999149991e-07, 8.479999999977395e-07, 8.190000000407593e-07, 8.190000000407593e-07, 8.339999999495973e-07, 8.189999998187147e-07, 8.190000000407593e-07, 8.479999999977395e-07, 8.330000000889015e-07]</msg>
<status status="PASS" starttime="20201029 09:33:11.451" endtime="20201029 09:33:11.453"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.446" endtime="20201029 09:33:11.453"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.067" endtime="20201029 09:33:11.453"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.066" endtime="20201029 09:33:11.454"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.462" endtime="20201029 09:33:11.473"></status>
</kw>
<msg timestamp="20201029 09:33:11.473" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.460" endtime="20201029 09:33:11.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.476" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.474" endtime="20201029 09:33:11.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.477" endtime="20201029 09:33:11.479"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.458" endtime="20201029 09:33:11.479"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.456" endtime="20201029 09:33:11.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.486" endtime="20201029 09:33:11.794"></status>
</kw>
<msg timestamp="20201029 09:33:11.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.491793083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.491793986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:11.485" endtime="20201029 09:33:11.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.491793083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.491793986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:11.799" endtime="20201029 09:33:11.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.809" endtime="20201029 09:33:11.811"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.482" endtime="20201029 09:33:11.811"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.480" endtime="20201029 09:33:11.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:11.817" level="INFO">${RESULT} = [{'diff': 9.030000001075678e-07}, {'diff': 8.470000001370437e-07}, {'diff': 8.199999999014551e-07}, {'diff': 8.330000000889015e-07}, {'diff': 8.609999999631412e-07}, {'diff': 8.469999999149991e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:33:11.813" endtime="20201029 09:33:11.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:11.823" level="INFO">${OVERHEAD} = {'diff': [9.030000001075678e-07, 8.470000001370437e-07, 8.199999999014551e-07, 8.330000000889015e-07, 8.609999999631412e-07, 8.469999999149991e-07, 8.479999999977395e-07, 8.190000000407593e-07, 8.1900...</msg>
<status status="PASS" starttime="20201029 09:33:11.818" endtime="20201029 09:33:11.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.827" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:11.826" endtime="20201029 09:33:11.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.830" level="INFO">VALUE: [9.030000001075678e-07, 8.470000001370437e-07, 8.199999999014551e-07, 8.330000000889015e-07, 8.609999999631412e-07, 8.469999999149991e-07, 8.479999999977395e-07, 8.190000000407593e-07, 8.190000000407593e-07, 8.339999999495973e-07, 8.189999998187147e-07, 8.190000000407593e-07, 8.479999999977395e-07, 8.330000000889015e-07, 1.2780000000489622e-06, 8.330000000889015e-07, 8.199999999014551e-07, 8.190000000407593e-07, 8.190000000407593e-07, 8.469999999149991e-07, 8.189999998187147e-07, 8.469999999149991e-07, 8.189999998187147e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.339999999495973e-07, 8.339999999495973e-07, 8.049999999926172e-07, 8.199999999014551e-07, 8.189999998187147e-07, 8.190000000407593e-07, 8.469999999149991e-07, 8.329999998668569e-07, 8.190000000407593e-07, 8.339999999495973e-07, 8.340000001716419e-07, 8.339999999495973e-07, 8.330000000889015e-07, 9.030000001075678e-07, 8.340000001716419e-07, 8.190000000407593e-07, 8.330000000889015e-07, 8.479999999977395e-07, 8.190000000407593e-07, 8.609999999631412e-07, 8.469999999149991e-07, 8.339999999495973e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.479999999977395e-07, 8.470000001370437e-07, 8.190000000407593e-07, 8.190000000407593e-07, 8.190000000407593e-07, 8.339999999495973e-07, 8.330000000889015e-07, 8.060000000753575e-07, 8.470000001370437e-07, 7.920000000272154e-07, 8.189999998187147e-07, 8.329999998668569e-07, 8.199999999014551e-07, 8.329999998668569e-07, 8.470000001370437e-07]</msg>
<status status="PASS" starttime="20201029 09:33:11.828" endtime="20201029 09:33:11.830"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.824" endtime="20201029 09:33:11.831"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.454" endtime="20201029 09:33:11.831"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.454" endtime="20201029 09:33:11.831"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.839" endtime="20201029 09:33:11.851"></status>
</kw>
<msg timestamp="20201029 09:33:11.851" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.838" endtime="20201029 09:33:11.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.854" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.852" endtime="20201029 09:33:11.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.855" endtime="20201029 09:33:11.856"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.835" endtime="20201029 09:33:11.857"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.833" endtime="20201029 09:33:11.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.865" endtime="20201029 09:33:12.172"></status>
</kw>
<msg timestamp="20201029 09:33:12.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.868774306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.868775153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:11.863" endtime="20201029 09:33:12.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.868774306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.868775153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.178" endtime="20201029 09:33:12.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.188" endtime="20201029 09:33:12.190"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.860" endtime="20201029 09:33:12.190"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.858" endtime="20201029 09:33:12.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:12.195" level="INFO">${RESULT} = [{'diff': 8.470000001370437e-07}, {'diff': 8.190000000407593e-07}, {'diff': 8.190000000407593e-07}, {'diff': 8.190000000407593e-07}, {'diff': 8.339999999495973e-07}, {'diff': 8.330000000889015e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:33:12.192" endtime="20201029 09:33:12.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:12.200" level="INFO">${OVERHEAD} = {'diff': [8.470000001370437e-07, 8.190000000407593e-07, 8.190000000407593e-07, 8.190000000407593e-07, 8.339999999495973e-07, 8.330000000889015e-07, 8.060000000753575e-07, 8.470000001370437e-07, 7.9200...</msg>
<status status="PASS" starttime="20201029 09:33:12.196" endtime="20201029 09:33:12.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.205" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:12.204" endtime="20201029 09:33:12.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.207" level="INFO">VALUE: [8.470000001370437e-07, 8.190000000407593e-07, 8.190000000407593e-07, 8.190000000407593e-07, 8.339999999495973e-07, 8.330000000889015e-07, 8.060000000753575e-07, 8.470000001370437e-07, 7.920000000272154e-07, 8.189999998187147e-07, 8.329999998668569e-07, 8.199999999014551e-07, 8.329999998668569e-07, 8.470000001370437e-07, 1.2919999998750598e-06, 8.469999999149991e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.610000001851859e-07, 8.470000003590883e-07, 8.19000000262804e-07, 8.189999998187147e-07, 8.330000000889015e-07, 8.19000000262804e-07, 8.189999998187147e-07, 8.340000001716419e-07, 8.469999999149991e-07, 8.189999998187147e-07, 8.330000000889015e-07, 8.049999999926172e-07, 8.330000000889015e-07, 8.610000001851859e-07, 8.330000000889015e-07, 8.609999997410966e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.049999999926172e-07, 8.479999999977395e-07, 8.330000000889015e-07, 8.750000000112834e-07, 9.030000001075678e-07, 8.189999998187147e-07, 8.340000001716419e-07, 8.890000002814702e-07, 8.469999999149991e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.189999998187147e-07, 8.049999999926172e-07, 8.199999999014551e-07, 8.340000001716419e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.189999998187147e-07, 8.610000001851859e-07, 8.330000000889015e-07, 8.199999999014551e-07, 8.340000001716419e-07, 8.469999999149991e-07, 8.340000001716419e-07]</msg>
<status status="PASS" starttime="20201029 09:33:12.206" endtime="20201029 09:33:12.208"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.201" endtime="20201029 09:33:12.208"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.832" endtime="20201029 09:33:12.209"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.832" endtime="20201029 09:33:12.209"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.218" endtime="20201029 09:33:12.229"></status>
</kw>
<msg timestamp="20201029 09:33:12.229" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.217" endtime="20201029 09:33:12.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.232" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.230" endtime="20201029 09:33:12.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.233" endtime="20201029 09:33:12.235"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.214" endtime="20201029 09:33:12.235"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.211" endtime="20201029 09:33:12.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.242" endtime="20201029 09:33:12.556"></status>
</kw>
<msg timestamp="20201029 09:33:12.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.235122528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.235123347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.241" endtime="20201029 09:33:12.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.235122528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.235123347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.562" endtime="20201029 09:33:12.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.572" endtime="20201029 09:33:12.574"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.238" endtime="20201029 09:33:12.575"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.236" endtime="20201029 09:33:12.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:12.580" level="INFO">${RESULT} = [{'diff': 8.189999998187147e-07}, {'diff': 8.049999999926172e-07}, {'diff': 8.199999999014551e-07}, {'diff': 8.340000001716419e-07}, {'diff': 8.469999999149991e-07}, {'diff': 8.339999997275527e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:33:12.576" endtime="20201029 09:33:12.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:12.585" level="INFO">${OVERHEAD} = {'diff': [8.189999998187147e-07, 8.049999999926172e-07, 8.199999999014551e-07, 8.340000001716419e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.189999998187147e-07, 8.6100...</msg>
<status status="PASS" starttime="20201029 09:33:12.581" endtime="20201029 09:33:12.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.590" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:12.589" endtime="20201029 09:33:12.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.592" level="INFO">VALUE: [8.189999998187147e-07, 8.049999999926172e-07, 8.199999999014551e-07, 8.340000001716419e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.189999998187147e-07, 8.610000001851859e-07, 8.330000000889015e-07, 8.199999999014551e-07, 8.340000001716419e-07, 8.469999999149991e-07, 8.340000001716419e-07, 1.2919999998750598e-06, 8.199999999014551e-07, 9.019999995807382e-07, 8.330000000889015e-07, 8.339999997275527e-07, 8.19000000262804e-07, 8.049999999926172e-07, 8.339999997275527e-07, 8.890000002814702e-07, 7.919999998051708e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.19000000262804e-07, 8.330000000889015e-07, 8.610000001851859e-07, 8.330000000889015e-07, 8.049999999926172e-07, 8.470000003590883e-07, 8.199999999014551e-07, 8.339999997275527e-07, 8.330000000889015e-07, 8.060000000753575e-07, 8.329999996448123e-07, 8.189999998187147e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.199999999014551e-07, 8.340000001716419e-07, 8.060000000753575e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.340000001716419e-07, 8.19000000262804e-07, 8.330000000889015e-07, 8.329999996448123e-07, 8.340000001716419e-07, 8.189999998187147e-07, 8.199999999014551e-07, 8.199999999014551e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.329999996448123e-07, 8.330000000889015e-07, 8.330000000889015e-07, 9.030000001075678e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.610000001851859e-07, 8.330000000889015e-07]</msg>
<status status="PASS" starttime="20201029 09:33:12.591" endtime="20201029 09:33:12.593"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.586" endtime="20201029 09:33:12.593"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.210" endtime="20201029 09:33:12.594"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.209" endtime="20201029 09:33:12.594"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.603" endtime="20201029 09:33:12.614"></status>
</kw>
<msg timestamp="20201029 09:33:12.615" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.601" endtime="20201029 09:33:12.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.618" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.616" endtime="20201029 09:33:12.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.619" endtime="20201029 09:33:12.620"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.598" endtime="20201029 09:33:12.621"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.596" endtime="20201029 09:33:12.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.628" endtime="20201029 09:33:12.943"></status>
</kw>
<msg timestamp="20201029 09:33:12.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.604008889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.604009708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.627" endtime="20201029 09:33:12.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.604008889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.604009708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.948" endtime="20201029 09:33:12.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.959" endtime="20201029 09:33:12.961"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.624" endtime="20201029 09:33:12.961"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.622" endtime="20201029 09:33:12.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:12.967" level="INFO">${RESULT} = [{'diff': 8.189999998187147e-07}, {'diff': 8.199999999014551e-07}, {'diff': 8.199999999014551e-07}, {'diff': 8.340000001716419e-07}, {'diff': 8.330000000889015e-07}, {'diff': 8.330000000889015e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:33:12.963" endtime="20201029 09:33:12.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:12.972" level="INFO">${OVERHEAD} = {'diff': [8.189999998187147e-07, 8.199999999014551e-07, 8.199999999014551e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.329999996448123e-07, 8.330000000889015e-07, 8.3300...</msg>
<status status="PASS" starttime="20201029 09:33:12.968" endtime="20201029 09:33:12.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.976" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:12.975" endtime="20201029 09:33:12.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.980" level="INFO">VALUE: [8.189999998187147e-07, 8.199999999014551e-07, 8.199999999014551e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.329999996448123e-07, 8.330000000889015e-07, 8.330000000889015e-07, 9.030000001075678e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.610000001851859e-07, 8.330000000889015e-07, 1.3060000001452465e-06, 8.88999999837381e-07, 8.189999998187147e-07, 8.890000002814702e-07, 8.060000000753575e-07, 9.029999996634785e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.340000001716419e-07, 8.339999997275527e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.330000000889015e-07, 8.479999999977395e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.339999997275527e-07, 8.609999997410966e-07, 8.750000000112834e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.330000000889015e-07, 8.19000000262804e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.340000001716419e-07, 9.169999999336653e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.189999998187147e-07, 8.339999997275527e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.609999997410966e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.750000000112834e-07, 8.340000001716419e-07, 8.189999998187147e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.469999999149991e-07]</msg>
<status status="PASS" starttime="20201029 09:33:12.978" endtime="20201029 09:33:12.980"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.973" endtime="20201029 09:33:12.981"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.595" endtime="20201029 09:33:12.981"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.594" endtime="20201029 09:33:12.981"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.989" endtime="20201029 09:33:13.002"></status>
</kw>
<msg timestamp="20201029 09:33:13.002" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.988" endtime="20201029 09:33:13.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.005" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.003" endtime="20201029 09:33:13.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.006" endtime="20201029 09:33:13.008"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.985" endtime="20201029 09:33:13.008"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.983" endtime="20201029 09:33:13.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.017" endtime="20201029 09:33:13.329"></status>
</kw>
<msg timestamp="20201029 09:33:13.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.977360264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.977361097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.015" endtime="20201029 09:33:13.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.977360264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.977361097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.334" endtime="20201029 09:33:13.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.345" endtime="20201029 09:33:13.346"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.011" endtime="20201029 09:33:13.347"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.009" endtime="20201029 09:33:13.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:13.352" level="INFO">${RESULT} = [{'diff': 8.330000000889015e-07}, {'diff': 8.469999999149991e-07}, {'diff': 8.609999997410966e-07}, {'diff': 8.330000000889015e-07}, {'diff': 8.469999999149991e-07}, {'diff': 8.329999996448123e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:33:13.348" endtime="20201029 09:33:13.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:13.357" level="INFO">${OVERHEAD} = {'diff': [8.330000000889015e-07, 8.469999999149991e-07, 8.609999997410966e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.7500...</msg>
<status status="PASS" starttime="20201029 09:33:13.353" endtime="20201029 09:33:13.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.362" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:13.360" endtime="20201029 09:33:13.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.365" level="INFO">VALUE: [8.330000000889015e-07, 8.469999999149991e-07, 8.609999997410966e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.750000000112834e-07, 8.340000001716419e-07, 8.189999998187147e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.469999999149991e-07, 1.292000000319149e-06, 8.890000002814702e-07, 8.610000001851859e-07, 8.19000000262804e-07, 8.330000000889015e-07, 8.609999997410966e-07, 8.329999996448123e-07, 8.330000000889015e-07, 8.340000001716419e-07, 8.469999999149991e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.199999999014551e-07, 8.199999999014551e-07, 8.890000002814702e-07, 8.469999999149991e-07, 8.189999998187147e-07, 8.610000001851859e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.330000000889015e-07, 8.329999996448123e-07, 8.330000000889015e-07, 8.609999997410966e-07, 8.189999998187147e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.049999999926172e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.609999997410966e-07, 8.340000001716419e-07, 8.199999999014551e-07, 8.340000001716419e-07, 8.189999998187147e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.049999999926172e-07, 8.199999999014551e-07, 8.609999997410966e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.339999997275527e-07, 8.330000000889015e-07, 8.469999999149991e-07]</msg>
<status status="PASS" starttime="20201029 09:33:13.363" endtime="20201029 09:33:13.365"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.358" endtime="20201029 09:33:13.366"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.982" endtime="20201029 09:33:13.366"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.981" endtime="20201029 09:33:13.366"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.374" endtime="20201029 09:33:13.385"></status>
</kw>
<msg timestamp="20201029 09:33:13.385" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.373" endtime="20201029 09:33:13.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.388" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.386" endtime="20201029 09:33:13.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.389" endtime="20201029 09:33:13.391"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.370" endtime="20201029 09:33:13.391"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.368" endtime="20201029 09:33:13.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.399" endtime="20201029 09:33:13.709"></status>
</kw>
<msg timestamp="20201029 09:33:13.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.353588361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.353589181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.397" endtime="20201029 09:33:13.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.353588361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.353589181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.715" endtime="20201029 09:33:13.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.725" endtime="20201029 09:33:13.727"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.394" endtime="20201029 09:33:13.727"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.392" endtime="20201029 09:33:13.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:13.732" level="INFO">${RESULT} = [{'diff': 8.199999999014551e-07}, {'diff': 8.340000001716419e-07}, {'diff': 8.189999998187147e-07}, {'diff': 8.330000000889015e-07}, {'diff': 8.330000000889015e-07}, {'diff': 8.049999999926172e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:33:13.729" endtime="20201029 09:33:13.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:13.738" level="INFO">${OVERHEAD} = {'diff': [8.199999999014551e-07, 8.340000001716419e-07, 8.189999998187147e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.049999999926172e-07, 8.199999999014551e-07, 8.609999997410966e-07, 8.3300...</msg>
<status status="PASS" starttime="20201029 09:33:13.733" endtime="20201029 09:33:13.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.742" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:13.741" endtime="20201029 09:33:13.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.745" level="INFO">VALUE: [8.199999999014551e-07, 8.340000001716419e-07, 8.189999998187147e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.049999999926172e-07, 8.199999999014551e-07, 8.609999997410966e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.339999997275527e-07, 8.330000000889015e-07, 8.469999999149991e-07, 1.3060000001452465e-06, 8.469999999149991e-07, 8.330000000889015e-07, 8.469999999149991e-07, 8.469999999149991e-07, 7.910000001665196e-07, 8.200000003455443e-07, 8.049999999926172e-07, 8.479999999977395e-07, 9.029999996634785e-07, 8.330000000889015e-07, 8.479999999977395e-07, 8.330000000889015e-07, 8.330000000889015e-07, 8.330000000889015e-07, 7.779999999790732e-07, 8.340000001716419e-07, 8.189999998187147e-07, 8.340000001716419e-07, 8.199999999014551e-07, 8.19000000262804e-07, 8.469999999149991e-07, 7.919999998051708e-07, 8.199999999014551e-07, 8.330000000889015e-07, 8.339999997275527e-07, 8.189999998187147e-07, 8.330000000889015e-07, 8.199999999014551e-07, 8.199999999014551e-07, 8.340000001716419e-07, 8.330000000889015e-07, 8.199999999014551e-07, 8.049999999926172e-07, 8.330000000889015e-07, 8.189999998187147e-07, 8.200000003455443e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.199999999014551e-07, 8.610000001851859e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.479999999977395e-07, 8.189999998187147e-07, 8.339999997275527e-07, 8.330000000889015e-07, 8.340000001716419e-07, 8.330000000889015e-07]</msg>
<status status="PASS" starttime="20201029 09:33:13.744" endtime="20201029 09:33:13.745"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.739" endtime="20201029 09:33:13.746"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.367" endtime="20201029 09:33:13.746"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.366" endtime="20201029 09:33:13.747"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.755" endtime="20201029 09:33:13.766"></status>
</kw>
<msg timestamp="20201029 09:33:13.766" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.753" endtime="20201029 09:33:13.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.769" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.767" endtime="20201029 09:33:13.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.770" endtime="20201029 09:33:13.772"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.751" endtime="20201029 09:33:13.772"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.749" endtime="20201029 09:33:13.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.779" endtime="20201029 09:33:14.095"></status>
</kw>
<msg timestamp="20201029 09:33:14.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.727442208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.727443028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.778" endtime="20201029 09:33:14.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.727442208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.727443028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.101" endtime="20201029 09:33:14.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.111" endtime="20201029 09:33:14.113"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.775" endtime="20201029 09:33:14.113"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.773" endtime="20201029 09:33:14.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:14.118" level="INFO">${RESULT} = [{'diff': 8.200000003455443e-07}, {'diff': 8.469999999149991e-07}, {'diff': 8.469999999149991e-07}, {'diff': 8.199999999014551e-07}, {'diff': 8.610000001851859e-07}, {'diff': 8.19000000262804e-07}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:14.114" endtime="20201029 09:33:14.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:14.123" level="INFO">${OVERHEAD} = {'diff': [8.200000003455443e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.199999999014551e-07, 8.610000001851859e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.47999...</msg>
<status status="PASS" starttime="20201029 09:33:14.119" endtime="20201029 09:33:14.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.127" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:14.126" endtime="20201029 09:33:14.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.130" level="INFO">VALUE: [8.200000003455443e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.199999999014551e-07, 8.610000001851859e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.479999999977395e-07, 8.189999998187147e-07, 8.339999997275527e-07, 8.330000000889015e-07, 8.340000001716419e-07, 8.330000000889015e-07, 1.3189999998886037e-06, 8.620000002679262e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.19000000262804e-07, 8.329999996448123e-07, 7.919999998051708e-07, 8.330000005329907e-07, 8.339999997275527e-07, 7.909999997224304e-07, 8.329999996448123e-07, 8.340000006157311e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.199999994573659e-07, 8.479999999977395e-07, 8.749999995671942e-07, 8.340000006157311e-07, 8.330000005329907e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.470000008031775e-07, 8.469999999149991e-07, 8.609999992970074e-07, 8.200000003455443e-07, 8.479999999977395e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.339999997275527e-07, 7.77999999534984e-07, 8.199999994573659e-07, 8.330000005329907e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.200000003455443e-07, 8.469999999149991e-07, 8.340000006157311e-07, 8.610000001851859e-07, 8.610000001851859e-07, 8.199999994573659e-07, 8.19000000262804e-07]</msg>
<status status="PASS" starttime="20201029 09:33:14.129" endtime="20201029 09:33:14.130"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.124" endtime="20201029 09:33:14.131"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.747" endtime="20201029 09:33:14.131"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.747" endtime="20201029 09:33:14.132"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.141" endtime="20201029 09:33:14.152"></status>
</kw>
<msg timestamp="20201029 09:33:14.153" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.138" endtime="20201029 09:33:14.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.155" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.154" endtime="20201029 09:33:14.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.156" endtime="20201029 09:33:14.158"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.135" endtime="20201029 09:33:14.159"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.134" endtime="20201029 09:33:14.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.166" endtime="20201029 09:33:14.469"></status>
</kw>
<msg timestamp="20201029 09:33:14.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.097950819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.097951653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.164" endtime="20201029 09:33:14.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.097950819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.097951653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.474" endtime="20201029 09:33:14.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.484" endtime="20201029 09:33:14.486"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.162" endtime="20201029 09:33:14.487"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.160" endtime="20201029 09:33:14.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:14.492" level="INFO">${RESULT} = [{'diff': 8.339999997275527e-07}, {'diff': 8.339999997275527e-07}, {'diff': 8.330000005329907e-07}, {'diff': 8.330000005329907e-07}, {'diff': 8.330000005329907e-07}, {'diff': 8.329999996448123e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:33:14.488" endtime="20201029 09:33:14.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:14.497" level="INFO">${OVERHEAD} = {'diff': [8.339999997275527e-07, 8.339999997275527e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.200000003455443e-07, 8.4699...</msg>
<status status="PASS" starttime="20201029 09:33:14.493" endtime="20201029 09:33:14.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.502" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:14.500" endtime="20201029 09:33:14.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.504" level="INFO">VALUE: [8.339999997275527e-07, 8.339999997275527e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.200000003455443e-07, 8.469999999149991e-07, 8.340000006157311e-07, 8.610000001851859e-07, 8.610000001851859e-07, 8.199999994573659e-07, 8.19000000262804e-07, 1.2780000000489622e-06, 8.479999999977395e-07, 8.060000000753575e-07, 7.499999998827889e-07, 8.339999997275527e-07, 8.479999999977395e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.470000008031775e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.469999999149991e-07, 7.919999998051708e-07, 8.88999999837381e-07, 8.469999999149991e-07, 8.060000000753575e-07, 8.610000001851859e-07, 8.189999993746255e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.340000006157311e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.469999999149991e-07, 9.020000000248274e-07, 8.19000000262804e-07, 8.189999993746255e-07, 8.199999994573659e-07, 8.330000005329907e-07, 8.200000003455443e-07, 8.200000003455443e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.199999994573659e-07, 8.340000006157311e-07, 8.329999996448123e-07, 7.910000006106088e-07, 8.749999995671942e-07, 8.339999997275527e-07, 8.19000000262804e-07, 8.330000005329907e-07, 8.340000006157311e-07]</msg>
<status status="PASS" starttime="20201029 09:33:14.503" endtime="20201029 09:33:14.505"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.498" endtime="20201029 09:33:14.505"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.132" endtime="20201029 09:33:14.506"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.132" endtime="20201029 09:33:14.506"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.514" endtime="20201029 09:33:14.525"></status>
</kw>
<msg timestamp="20201029 09:33:14.525" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.512" endtime="20201029 09:33:14.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.528" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.526" endtime="20201029 09:33:14.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.529" endtime="20201029 09:33:14.531"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.510" endtime="20201029 09:33:14.531"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.508" endtime="20201029 09:33:14.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.538" endtime="20201029 09:33:14.850"></status>
</kw>
<msg timestamp="20201029 09:33:14.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.473838958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.473839778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.537" endtime="20201029 09:33:14.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.473838958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.473839778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.856" endtime="20201029 09:33:14.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.866" endtime="20201029 09:33:14.868"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.534" endtime="20201029 09:33:14.869"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.532" endtime="20201029 09:33:14.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:14.873" level="INFO">${RESULT} = [{'diff': 8.200000003455443e-07}, {'diff': 8.200000003455443e-07}, {'diff': 8.200000003455443e-07}, {'diff': 8.329999996448123e-07}, {'diff': 8.469999999149991e-07}, {'diff': 8.199999994573659e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:33:14.870" endtime="20201029 09:33:14.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:14.879" level="INFO">${OVERHEAD} = {'diff': [8.200000003455443e-07, 8.200000003455443e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.199999994573659e-07, 8.340000006157311e-07, 8.329999996448123e-07, 7.9100...</msg>
<status status="PASS" starttime="20201029 09:33:14.874" endtime="20201029 09:33:14.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.883" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:14.882" endtime="20201029 09:33:14.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.886" level="INFO">VALUE: [8.200000003455443e-07, 8.200000003455443e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.199999994573659e-07, 8.340000006157311e-07, 8.329999996448123e-07, 7.910000006106088e-07, 8.749999995671942e-07, 8.339999997275527e-07, 8.19000000262804e-07, 8.330000005329907e-07, 8.340000006157311e-07, 1.3330000001587905e-06, 8.339999997275527e-07, 8.479999999977395e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.88999999837381e-07, 9.020000000248274e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.200000003455443e-07, 8.200000003455443e-07, 8.199999994573659e-07, 8.330000005329907e-07, 8.339999997275527e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.189999993746255e-07, 8.340000006157311e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.19000000262804e-07, 8.199999994573659e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.749999995671942e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.329999996448123e-07, 7.77999999534984e-07, 8.339999997275527e-07, 8.330000005329907e-07, 8.339999997275527e-07, 8.339999997275527e-07, 8.199999994573659e-07, 8.469999999149991e-07, 8.189999993746255e-07, 9.030000001075678e-07, 8.329999996448123e-07, 8.199999994573659e-07, 8.479999999977395e-07, 8.060000000753575e-07, 8.340000006157311e-07, 7.919999998051708e-07, 8.330000005329907e-07, 8.329999996448123e-07]</msg>
<status status="PASS" starttime="20201029 09:33:14.884" endtime="20201029 09:33:14.886"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.880" endtime="20201029 09:33:14.887"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.507" endtime="20201029 09:33:14.887"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.506" endtime="20201029 09:33:14.887"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.899" endtime="20201029 09:33:14.912"></status>
</kw>
<msg timestamp="20201029 09:33:14.912" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.896" endtime="20201029 09:33:14.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.915" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.913" endtime="20201029 09:33:14.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.916" endtime="20201029 09:33:14.919"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.892" endtime="20201029 09:33:14.920"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.889" endtime="20201029 09:33:14.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.927" endtime="20201029 09:33:15.244"></status>
</kw>
<msg timestamp="20201029 09:33:15.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.837224444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.837225278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.926" endtime="20201029 09:33:15.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.837224444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.837225278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:15.255" endtime="20201029 09:33:15.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.278" endtime="20201029 09:33:15.281"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.923" endtime="20201029 09:33:15.282"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.921" endtime="20201029 09:33:15.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:15.293" level="INFO">${RESULT} = [{'diff': 8.339999997275527e-07}, {'diff': 8.339999997275527e-07}, {'diff': 8.199999994573659e-07}, {'diff': 8.469999999149991e-07}, {'diff': 8.189999993746255e-07}, {'diff': 9.030000001075678e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:33:15.285" endtime="20201029 09:33:15.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:15.301" level="INFO">${OVERHEAD} = {'diff': [8.339999997275527e-07, 8.339999997275527e-07, 8.199999994573659e-07, 8.469999999149991e-07, 8.189999993746255e-07, 9.030000001075678e-07, 8.329999996448123e-07, 8.199999994573659e-07, 8.4799...</msg>
<status status="PASS" starttime="20201029 09:33:15.295" endtime="20201029 09:33:15.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.305" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:15.304" endtime="20201029 09:33:15.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.308" level="INFO">VALUE: [8.339999997275527e-07, 8.339999997275527e-07, 8.199999994573659e-07, 8.469999999149991e-07, 8.189999993746255e-07, 9.030000001075678e-07, 8.329999996448123e-07, 8.199999994573659e-07, 8.479999999977395e-07, 8.060000000753575e-07, 8.340000006157311e-07, 7.919999998051708e-07, 8.330000005329907e-07, 8.329999996448123e-07, 1.304999999618417e-06, 7.77999999534984e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.620000002679262e-07, 8.610000001851859e-07, 9.170000003777545e-07, 8.609999992970074e-07, 8.189999993746255e-07, 8.470000008031775e-07, 8.200000003455443e-07, 8.339999997275527e-07, 8.340000006157311e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.329999996448123e-07, 8.189999993746255e-07, 8.339999997275527e-07, 8.189999993746255e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.199999994573659e-07, 8.199999994573659e-07, 8.329999996448123e-07, 8.060000000753575e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.479999999977395e-07, 8.620000002679262e-07, 8.199999994573659e-07, 8.469999999149991e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.200000003455443e-07, 7.640000001529756e-07, 8.329999996448123e-07, 7.77999999534984e-07, 8.470000008031775e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.19000000262804e-07, 8.469999999149991e-07]</msg>
<status status="PASS" starttime="20201029 09:33:15.306" endtime="20201029 09:33:15.308"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.302" endtime="20201029 09:33:15.309"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.888" endtime="20201029 09:33:15.309"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.888" endtime="20201029 09:33:15.309"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.318" endtime="20201029 09:33:15.330"></status>
</kw>
<msg timestamp="20201029 09:33:15.331" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.317" endtime="20201029 09:33:15.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.333" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.332" endtime="20201029 09:33:15.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.334" endtime="20201029 09:33:15.336"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.313" endtime="20201029 09:33:15.337"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.312" endtime="20201029 09:33:15.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.352" endtime="20201029 09:33:15.651"></status>
</kw>
<msg timestamp="20201029 09:33:15.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.212081708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.212082528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:15.342" endtime="20201029 09:33:15.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.212081708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.212082528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:15.656" endtime="20201029 09:33:15.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.666" endtime="20201029 09:33:15.668"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.339" endtime="20201029 09:33:15.668"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.338" endtime="20201029 09:33:15.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:15.673" level="INFO">${RESULT} = [{'diff': 8.199999994573659e-07}, {'diff': 8.469999999149991e-07}, {'diff': 8.19000000262804e-07}, {'diff': 8.329999996448123e-07}, {'diff': 8.200000003455443e-07}, {'diff': 7.640000001529756e-07}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:15.670" endtime="20201029 09:33:15.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:15.679" level="INFO">${OVERHEAD} = {'diff': [8.199999994573659e-07, 8.469999999149991e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.200000003455443e-07, 7.640000001529756e-07, 8.329999996448123e-07, 7.77999999534984e-07, 8.470000...</msg>
<status status="PASS" starttime="20201029 09:33:15.674" endtime="20201029 09:33:15.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.683" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:15.682" endtime="20201029 09:33:15.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.685" level="INFO">VALUE: [8.199999994573659e-07, 8.469999999149991e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.200000003455443e-07, 7.640000001529756e-07, 8.329999996448123e-07, 7.77999999534984e-07, 8.470000008031775e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.19000000262804e-07, 8.469999999149991e-07, 1.3469999995407989e-06, 8.329999996448123e-07, 8.329999996448123e-07, 8.610000001851859e-07, 8.199999994573659e-07, 8.049999999926172e-07, 8.330000005329907e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.479999999977395e-07, 8.329999996448123e-07, 8.340000006157311e-07, 8.469999999149991e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.199999994573659e-07, 8.19000000262804e-07, 8.199999994573659e-07, 8.330000005329907e-07, 8.479999999977395e-07, 8.329999996448123e-07, 8.749999995671942e-07, 8.610000001851859e-07, 8.200000003455443e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.200000003455443e-07, 8.330000005329907e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.339999997275527e-07, 8.19000000262804e-07, 8.340000006157311e-07, 8.479999999977395e-07, 8.750000004553726e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.060000000753575e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.330000005329907e-07]</msg>
<status status="PASS" starttime="20201029 09:33:15.684" endtime="20201029 09:33:15.686"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.679" endtime="20201029 09:33:15.686"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.310" endtime="20201029 09:33:15.687"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.310" endtime="20201029 09:33:15.687"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.695" endtime="20201029 09:33:15.705"></status>
</kw>
<msg timestamp="20201029 09:33:15.706" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.693" endtime="20201029 09:33:15.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.708" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.707" endtime="20201029 09:33:15.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.710" endtime="20201029 09:33:15.711"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.691" endtime="20201029 09:33:15.712"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.689" endtime="20201029 09:33:15.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.719" endtime="20201029 09:33:16.038"></status>
</kw>
<msg timestamp="20201029 09:33:16.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.621628819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.621629653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:15.718" endtime="20201029 09:33:16.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.621628819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.621629653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.043" endtime="20201029 09:33:16.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.054" endtime="20201029 09:33:16.055"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.714" endtime="20201029 09:33:16.056"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.713" endtime="20201029 09:33:16.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:16.061" level="INFO">${RESULT} = [{'diff': 8.340000006157311e-07}, {'diff': 8.479999999977395e-07}, {'diff': 8.750000004553726e-07}, {'diff': 8.329999996448123e-07}, {'diff': 8.329999996448123e-07}, {'diff': 8.329999996448123e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:33:16.057" endtime="20201029 09:33:16.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:16.066" level="INFO">${OVERHEAD} = {'diff': [8.340000006157311e-07, 8.479999999977395e-07, 8.750000004553726e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.060000000753575e-07, 8.3300...</msg>
<status status="PASS" starttime="20201029 09:33:16.062" endtime="20201029 09:33:16.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.071" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:16.070" endtime="20201029 09:33:16.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.073" level="INFO">VALUE: [8.340000006157311e-07, 8.479999999977395e-07, 8.750000004553726e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.060000000753575e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.330000005329907e-07, 1.3189999998886037e-06, 8.330000005329907e-07, 8.339999997275527e-07, 8.19000000262804e-07, 8.330000005329907e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.610000001851859e-07, 8.610000001851859e-07, 7.919999998051708e-07, 9.169999994895761e-07, 8.329999996448123e-07, 8.189999993746255e-07, 8.330000005329907e-07, 8.610000001851859e-07, 8.19000000262804e-07, 8.060000000753575e-07, 8.479999999977395e-07, 8.049999999926172e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.200000003455443e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.609999992970074e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.19000000262804e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.200000003455443e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.189999993746255e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.479999999977395e-07]</msg>
<status status="PASS" starttime="20201029 09:33:16.072" endtime="20201029 09:33:16.074"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.067" endtime="20201029 09:33:16.074"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.688" endtime="20201029 09:33:16.075"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.687" endtime="20201029 09:33:16.075"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.083" endtime="20201029 09:33:16.094"></status>
</kw>
<msg timestamp="20201029 09:33:16.095" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.081" endtime="20201029 09:33:16.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.097" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.096" endtime="20201029 09:33:16.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.098" endtime="20201029 09:33:16.100"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.079" endtime="20201029 09:33:16.100"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.077" endtime="20201029 09:33:16.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.109" endtime="20201029 09:33:16.427"></status>
</kw>
<msg timestamp="20201029 09:33:16.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.987891264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.987892097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.107" endtime="20201029 09:33:16.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.987891264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.987892097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.433" endtime="20201029 09:33:16.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.443" endtime="20201029 09:33:16.444"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.104" endtime="20201029 09:33:16.445"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.101" endtime="20201029 09:33:16.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:16.450" level="INFO">${RESULT} = [{'diff': 8.329999996448123e-07}, {'diff': 8.330000005329907e-07}, {'diff': 8.19000000262804e-07}, {'diff': 8.330000005329907e-07}, {'diff': 8.469999999149991e-07}, {'diff': 8.469999999149991e-07}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:16.446" endtime="20201029 09:33:16.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:16.455" level="INFO">${OVERHEAD} = {'diff': [8.329999996448123e-07, 8.330000005329907e-07, 8.19000000262804e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.200000003455443e-07, 8.19000000262804e-07, 8.339999...</msg>
<status status="PASS" starttime="20201029 09:33:16.451" endtime="20201029 09:33:16.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.459" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:16.458" endtime="20201029 09:33:16.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.463" level="INFO">VALUE: [8.329999996448123e-07, 8.330000005329907e-07, 8.19000000262804e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.200000003455443e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.189999993746255e-07, 8.469999999149991e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.479999999977395e-07, 1.292000000319149e-06, 8.469999999149991e-07, 7.77999999534984e-07, 8.19000000262804e-07, 8.610000001851859e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.19000000262804e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.060000000753575e-07, 8.189999993746255e-07, 8.049999999926172e-07, 8.479999999977395e-07, 8.469999999149991e-07, 8.749999995671942e-07, 7.919999998051708e-07, 8.339999997275527e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.199999994573659e-07, 8.199999994573659e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.469999999149991e-07, 8.060000000753575e-07, 8.200000003455443e-07, 8.340000006157311e-07, 8.200000003455443e-07, 8.189999993746255e-07, 8.330000005329907e-07, 8.330000005329907e-07, 7.919999998051708e-07, 8.199999994573659e-07, 8.339999997275527e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.339999997275527e-07]</msg>
<status status="PASS" starttime="20201029 09:33:16.460" endtime="20201029 09:33:16.463"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.456" endtime="20201029 09:33:16.464"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.076" endtime="20201029 09:33:16.464"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.075" endtime="20201029 09:33:16.464"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.473" endtime="20201029 09:33:16.484"></status>
</kw>
<msg timestamp="20201029 09:33:16.484" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.471" endtime="20201029 09:33:16.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.487" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.485" endtime="20201029 09:33:16.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.488" endtime="20201029 09:33:16.490"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.468" endtime="20201029 09:33:16.490"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.466" endtime="20201029 09:33:16.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.498" endtime="20201029 09:33:16.834"></status>
</kw>
<msg timestamp="20201029 09:33:16.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.367723875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.367724722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.496" endtime="20201029 09:33:16.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.367723875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.367724722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.840" endtime="20201029 09:33:16.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.850" endtime="20201029 09:33:16.851"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.494" endtime="20201029 09:33:16.852"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.492" endtime="20201029 09:33:16.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:16.857" level="INFO">${RESULT} = [{'diff': 8.469999999149991e-07}, {'diff': 8.060000000753575e-07}, {'diff': 8.200000003455443e-07}, {'diff': 8.340000006157311e-07}, {'diff': 8.200000003455443e-07}, {'diff': 8.189999993746255e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:33:16.853" endtime="20201029 09:33:16.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:16.863" level="INFO">${OVERHEAD} = {'diff': [8.469999999149991e-07, 8.060000000753575e-07, 8.200000003455443e-07, 8.340000006157311e-07, 8.200000003455443e-07, 8.189999993746255e-07, 8.330000005329907e-07, 8.330000005329907e-07, 7.9199...</msg>
<status status="PASS" starttime="20201029 09:33:16.858" endtime="20201029 09:33:16.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.867" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:16.866" endtime="20201029 09:33:16.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.870" level="INFO">VALUE: [8.469999999149991e-07, 8.060000000753575e-07, 8.200000003455443e-07, 8.340000006157311e-07, 8.200000003455443e-07, 8.189999993746255e-07, 8.330000005329907e-07, 8.330000005329907e-07, 7.919999998051708e-07, 8.199999994573659e-07, 8.339999997275527e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.339999997275527e-07, 1.3059999997011573e-06, 8.329999996448123e-07, 9.030000001075678e-07, 8.199999994573659e-07, 8.200000003455443e-07, 8.200000003455443e-07, 8.610000001851859e-07, 8.329999996448123e-07, 8.329999996448123e-07, 7.639999992647972e-07, 8.329999996448123e-07, 8.060000000753575e-07, 8.339999997275527e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.200000003455443e-07, 8.330000005329907e-07, 8.749999995671942e-07, 8.329999996448123e-07, 8.610000001851859e-07, 8.200000003455443e-07, 8.329999996448123e-07, 7.919999998051708e-07, 8.610000001851859e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.200000003455443e-07, 8.620000002679262e-07, 8.19000000262804e-07, 8.19000000262804e-07, 8.610000001851859e-07, 8.609999992970074e-07, 8.049999999926172e-07, 8.469999999149991e-07, 8.19000000262804e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.469999999149991e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.200000003455443e-07, 8.330000005329907e-07, 8.19000000262804e-07, 8.199999994573659e-07, 8.189999993746255e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.479999999977395e-07, 8.469999999149991e-07, 8.189999993746255e-07]</msg>
<status status="PASS" starttime="20201029 09:33:16.868" endtime="20201029 09:33:16.870"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.863" endtime="20201029 09:33:16.871"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.465" endtime="20201029 09:33:16.871"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.465" endtime="20201029 09:33:16.871"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.880" endtime="20201029 09:33:16.891"></status>
</kw>
<msg timestamp="20201029 09:33:16.891" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.878" endtime="20201029 09:33:16.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.894" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.893" endtime="20201029 09:33:16.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.895" endtime="20201029 09:33:16.897"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.875" endtime="20201029 09:33:16.898"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.874" endtime="20201029 09:33:16.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.905" endtime="20201029 09:33:17.219"></status>
</kw>
<msg timestamp="20201029 09:33:17.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.746699903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.746700722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.904" endtime="20201029 09:33:17.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.746699903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.746700722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.224" endtime="20201029 09:33:17.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.234" endtime="20201029 09:33:17.236"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.901" endtime="20201029 09:33:17.237"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.899" endtime="20201029 09:33:17.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:17.241" level="INFO">${RESULT} = [{'diff': 8.19000000262804e-07}, {'diff': 8.469999999149991e-07}, {'diff': 8.200000003455443e-07}, {'diff': 8.329999996448123e-07}, {'diff': 8.200000003455443e-07}, {'diff': 8.330000005329907e-07}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:17.238" endtime="20201029 09:33:17.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:17.246" level="INFO">${OVERHEAD} = {'diff': [8.19000000262804e-07, 8.469999999149991e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.200000003455443e-07, 8.330000005329907e-07, 8.19000000262804e-07, 8.199999994573659e-07, 8.189999...</msg>
<status status="PASS" starttime="20201029 09:33:17.242" endtime="20201029 09:33:17.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.251" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:17.250" endtime="20201029 09:33:17.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.253" level="INFO">VALUE: [8.19000000262804e-07, 8.469999999149991e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.200000003455443e-07, 8.330000005329907e-07, 8.19000000262804e-07, 8.199999994573659e-07, 8.189999993746255e-07, 8.329999996448123e-07, 8.329999996448123e-07, 8.479999999977395e-07, 8.469999999149991e-07, 8.189999993746255e-07, 1.2909999993482302e-06, 8.609999992970074e-07, 8.610000001851859e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.200000003455443e-07, 8.610000001851859e-07, 8.200000003455443e-07, 8.329999996448123e-07, 8.200000003455443e-07, 8.469999999149991e-07, 9.030000001075678e-07, 7.77999999534984e-07, 8.469999999149991e-07, 8.610000001851859e-07, 8.329999996448123e-07, 8.19000000262804e-07, 8.330000005329907e-07, 8.479999999977395e-07, 8.329999996448123e-07, 7.640000001529756e-07, 8.339999997275527e-07, 8.199999994573659e-07, 8.479999999977395e-07, 8.200000003455443e-07, 8.339999997275527e-07, 8.469999999149991e-07, 8.340000006157311e-07, 8.060000000753575e-07, 7.780000004231624e-07, 8.330000005329907e-07, 8.330000005329907e-07, 9.030000001075678e-07, 8.339999997275527e-07, 8.329999996448123e-07, 8.330000005329907e-07, 8.330000005329907e-07, 8.329999996448123e-07, 8.340000006157311e-07, 8.330000005329907e-07, 8.470000008031775e-07, 8.049999999926172e-07, 8.060000000753575e-07, 8.19000000262804e-07, 8.200000003455443e-07, 8.330000005329907e-07, 8.469999999149991e-07, 8.469999999149991e-07, 8.340000006157311e-07, 8.479999999977395e-07]</msg>
<status status="PASS" starttime="20201029 09:33:17.252" endtime="20201029 09:33:17.254"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.247" endtime="20201029 09:33:17.254"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.872" endtime="20201029 09:33:17.255"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.872" endtime="20201029 09:33:17.255"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.600" endtime="20201029 09:33:17.255"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:09.529" endtime="20201029 09:33:17.256" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:17.263" endtime="20201029 09:33:17.282"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.261" endtime="20201029 09:33:17.283"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.300" endtime="20201029 09:33:17.313"></status>
</kw>
<msg timestamp="20201029 09:33:17.313" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.298" endtime="20201029 09:33:17.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.316" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.314" endtime="20201029 09:33:17.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.319" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:17.317" endtime="20201029 09:33:17.320"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:17.295" endtime="20201029 09:33:17.320"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:17.292" endtime="20201029 09:33:17.321"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.291" endtime="20201029 09:33:17.321"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:17.327" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:17.326" endtime="20201029 09:33:17.328"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.322" endtime="20201029 09:33:17.328"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.290" endtime="20201029 09:33:17.328"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.289" endtime="20201029 09:33:17.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.329" endtime="20201029 09:33:17.332"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.285" endtime="20201029 09:33:17.332"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.283" endtime="20201029 09:33:17.333"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.260" endtime="20201029 09:33:17.334"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.347" endtime="20201029 09:33:17.365"></status>
</kw>
<msg timestamp="20201029 09:33:17.366" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.344" endtime="20201029 09:33:17.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.369" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.367" endtime="20201029 09:33:17.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.370" endtime="20201029 09:33:17.372"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.340" endtime="20201029 09:33:17.373"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.337" endtime="20201029 09:33:17.374"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.376" endtime="20201029 09:33:17.378"></status>
</kw>
<msg timestamp="20201029 09:33:17.378" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:17.375" endtime="20201029 09:33:17.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.383" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:17.382" endtime="20201029 09:33:17.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.386" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:17.384" endtime="20201029 09:33:17.386"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.379" endtime="20201029 09:33:17.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.392" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:17.390" endtime="20201029 09:33:17.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.394" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:17.393" endtime="20201029 09:33:17.394"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.388" endtime="20201029 09:33:17.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.402" endtime="20201029 09:33:17.685"></status>
</kw>
<msg timestamp="20201029 09:33:17.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076618778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076622694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.400" endtime="20201029 09:33:17.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076618778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076622694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.689" endtime="20201029 09:33:17.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.698" endtime="20201029 09:33:17.699"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.397" endtime="20201029 09:33:17.700"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.395" endtime="20201029 09:33:17.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:17.704" level="INFO">${RESULT} = [{'diff': 3.916000000006581e-06}, {'diff': 2.8049999999946174e-06}, {'diff': 2.819000000001126e-06}, {'diff': 2.819000000001126e-06}, {'diff': 2.8060000000079688e-06}, {'diff': 2.833999999993231e-06},...</msg>
<status status="PASS" starttime="20201029 09:33:17.701" endtime="20201029 09:33:17.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:17.709" level="INFO">${OVERHEAD} = {'diff': [3.916000000006581e-06, 2.8049999999946174e-06, 2.819000000001126e-06, 2.819000000001126e-06, 2.8060000000079688e-06, 2.833999999993231e-06, 2.805000000008495e-06, 2.874999999999406e-06, 2.82...</msg>
<status status="PASS" starttime="20201029 09:33:17.705" endtime="20201029 09:33:17.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.714" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 09:33:17.713" endtime="20201029 09:33:17.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.717" level="INFO">VALUE: [3.916000000006581e-06, 2.8049999999946174e-06, 2.819000000001126e-06, 2.819000000001126e-06, 2.8060000000079688e-06, 2.833999999993231e-06, 2.805000000008495e-06, 2.874999999999406e-06, 2.8200000000006e-06, 2.805999999994091e-06, 2.819000000001126e-06, 2.819000000001126e-06, 2.847000000000266e-06, 2.76400000000232e-06, 2.833000000007635e-06, 2.8200000000006e-06, 2.833999999993231e-06, 2.847000000000266e-06, 2.819000000001126e-06, 2.8189999999872484e-06, 2.833999999993231e-06, 2.819000000001126e-06, 2.833000000007635e-06, 2.860999999992897e-06, 2.8189999999872484e-06, 2.819000000001126e-06, 2.805999999994091e-06, 2.819000000001126e-06, 2.8049999999946174e-06, 2.8060000000079688e-06, 2.832999999993757e-06, 2.832999999993757e-06, 2.819000000001126e-06, 2.832999999993757e-06, 2.819000000001126e-06, 2.8200000000006e-06, 2.833999999993231e-06, 2.819000000001126e-06, 2.832999999993757e-06, 2.832999999993757e-06, 2.832999999993757e-06, 2.8200000000006e-06, 2.8479999999997396e-06, 2.8200000000006e-06, 2.8049999999946174e-06, 2.8200000000006e-06, 2.8340000000071086e-06, 2.8200000000006e-06, 2.8049999999946174e-06, 2.778000000008829e-06]</msg>
<status status="PASS" starttime="20201029 09:33:17.715" endtime="20201029 09:33:17.717"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.710" endtime="20201029 09:33:17.718"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.335" endtime="20201029 09:33:17.718"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:17.257" endtime="20201029 09:33:17.719" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:17.726" endtime="20201029 09:33:17.745"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.725" endtime="20201029 09:33:17.746"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.760" endtime="20201029 09:33:17.774"></status>
</kw>
<msg timestamp="20201029 09:33:17.775" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.759" endtime="20201029 09:33:17.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.777" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.776" endtime="20201029 09:33:17.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.781" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:17.779" endtime="20201029 09:33:17.781"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:17.755" endtime="20201029 09:33:17.782"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:17.753" endtime="20201029 09:33:17.782"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.752" endtime="20201029 09:33:17.782"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:17.786" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:17.786" endtime="20201029 09:33:17.787"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.783" endtime="20201029 09:33:17.787"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.751" endtime="20201029 09:33:17.787"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.750" endtime="20201029 09:33:17.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.788" endtime="20201029 09:33:17.790"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.749" endtime="20201029 09:33:17.790"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.747" endtime="20201029 09:33:17.791"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.723" endtime="20201029 09:33:17.791"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.801" endtime="20201029 09:33:17.848"></status>
</kw>
<msg timestamp="20201029 09:33:17.848" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.798" endtime="20201029 09:33:17.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.851" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.849" endtime="20201029 09:33:17.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.852" endtime="20201029 09:33:17.853"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.795" endtime="20201029 09:33:17.854"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.793" endtime="20201029 09:33:17.854"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.858" endtime="20201029 09:33:17.861"></status>
</kw>
<msg timestamp="20201029 09:33:17.861" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:17.855" endtime="20201029 09:33:17.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.866" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:17.865" endtime="20201029 09:33:17.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.868" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:17.867" endtime="20201029 09:33:17.868"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.862" endtime="20201029 09:33:17.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.873" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:17.872" endtime="20201029 09:33:17.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.876" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:17.875" endtime="20201029 09:33:17.876"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.869" endtime="20201029 09:33:17.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.883" endtime="20201029 09:33:18.173"></status>
</kw>
<msg timestamp="20201029 09:33:18.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067900139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067920167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.882" endtime="20201029 09:33:18.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067900139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067920167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.177" endtime="20201029 09:33:18.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.185" endtime="20201029 09:33:18.187"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.879" endtime="20201029 09:33:18.188"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.877" endtime="20201029 09:33:18.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:18.192" level="INFO">${RESULT} = [{'diff': 2.0028000000005264e-05}, {'diff': 1.969500000000013e-05}, {'diff': 1.969500000000013e-05}, {'diff': 1.9763999999991566e-05}, {'diff': 1.966700000000099e-05}, {'diff': 1.9694000000000655e-05}...</msg>
<status status="PASS" starttime="20201029 09:33:18.189" endtime="20201029 09:33:18.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:18.197" level="INFO">${OVERHEAD} = {'diff': [2.0028000000005264e-05, 1.969500000000013e-05, 1.969500000000013e-05, 1.9763999999991566e-05, 1.966700000000099e-05, 1.9694000000000655e-05, 1.9707999999993286e-05, 1.969500000000013e-05, 1....</msg>
<status status="PASS" starttime="20201029 09:33:18.193" endtime="20201029 09:33:18.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.202" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 09:33:18.201" endtime="20201029 09:33:18.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.205" level="INFO">VALUE: [2.0028000000005264e-05, 1.969500000000013e-05, 1.969500000000013e-05, 1.9763999999991566e-05, 1.966700000000099e-05, 1.9694000000000655e-05, 1.9707999999993286e-05, 1.969500000000013e-05, 1.968099999999362e-05, 1.9694000000000655e-05, 1.9694000000000655e-05, 1.968099999999362e-05, 1.969500000000013e-05, 1.9694000000000655e-05, 1.9694000000000655e-05, 1.9707999999993286e-05, 1.9694000000000655e-05, 1.969500000000013e-05, 1.9679999999994147e-05, 1.969500000000013e-05, 1.9681000000007498e-05, 1.966700000000099e-05, 1.969500000000013e-05, 1.969500000000013e-05, 1.9708000000007164e-05, 1.9638000000002376e-05, 1.9694000000000655e-05, 1.9666000000001516e-05, 1.9694000000000655e-05, 1.9707999999993286e-05, 1.9694000000000655e-05, 1.9707999999993286e-05, 1.969500000000013e-05, 1.9681000000007498e-05, 1.9707999999993286e-05, 1.966700000000099e-05, 1.9708000000007164e-05, 1.963900000000185e-05, 1.9680000000008024e-05, 1.969500000000013e-05, 1.9694000000000655e-05, 1.9694000000000655e-05, 1.9708000000007164e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.969500000000013e-05, 1.9708000000007164e-05, 1.969500000000013e-05, 1.9707999999993286e-05, 1.9694000000000655e-05]</msg>
<status status="PASS" starttime="20201029 09:33:18.203" endtime="20201029 09:33:18.205"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.198" endtime="20201029 09:33:18.206"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.792" endtime="20201029 09:33:18.206"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:17.721" endtime="20201029 09:33:18.207" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:18.214" endtime="20201029 09:33:18.233"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.212" endtime="20201029 09:33:18.234"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.248" endtime="20201029 09:33:18.263"></status>
</kw>
<msg timestamp="20201029 09:33:18.263" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.246" endtime="20201029 09:33:18.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.266" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.264" endtime="20201029 09:33:18.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.269" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:18.267" endtime="20201029 09:33:18.269"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:18.243" endtime="20201029 09:33:18.270"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:18.241" endtime="20201029 09:33:18.270"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.239" endtime="20201029 09:33:18.271"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:18.276" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:18.275" endtime="20201029 09:33:18.278"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.272" endtime="20201029 09:33:18.279"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.238" endtime="20201029 09:33:18.279"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.238" endtime="20201029 09:33:18.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.280" endtime="20201029 09:33:18.282"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.236" endtime="20201029 09:33:18.282"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.235" endtime="20201029 09:33:18.283"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.211" endtime="20201029 09:33:18.283"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.294" endtime="20201029 09:33:18.412"></status>
</kw>
<msg timestamp="20201029 09:33:18.413" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.292" endtime="20201029 09:33:18.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.415" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.414" endtime="20201029 09:33:18.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.416" endtime="20201029 09:33:18.418"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.288" endtime="20201029 09:33:18.419"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.285" endtime="20201029 09:33:18.419"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.421" endtime="20201029 09:33:18.423"></status>
</kw>
<msg timestamp="20201029 09:33:18.424" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:18.420" endtime="20201029 09:33:18.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.428" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:18.427" endtime="20201029 09:33:18.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.430" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:18.429" endtime="20201029 09:33:18.430"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.424" endtime="20201029 09:33:18.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.435" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:18.434" endtime="20201029 09:33:18.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.438" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:18.436" endtime="20201029 09:33:18.438"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.431" endtime="20201029 09:33:18.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.445" endtime="20201029 09:33:18.738"></status>
</kw>
<msg timestamp="20201029 09:33:18.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074524944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074562542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.444" endtime="20201029 09:33:18.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074524944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074562542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.743" endtime="20201029 09:33:18.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.751" endtime="20201029 09:33:18.753"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.441" endtime="20201029 09:33:18.753"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.439" endtime="20201029 09:33:18.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:18.759" level="INFO">${RESULT} = [{'diff': 3.75979999999998e-05}, {'diff': 3.717999999999777e-05}, {'diff': 3.715199999999863e-05}, {'diff': 3.7152999999998104e-05}, {'diff': 3.7138999999991595e-05}, {'diff': 3.720799999999691e-05}, ...</msg>
<status status="PASS" starttime="20201029 09:33:18.754" endtime="20201029 09:33:18.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:18.763" level="INFO">${OVERHEAD} = {'diff': [3.75979999999998e-05, 3.717999999999777e-05, 3.715199999999863e-05, 3.7152999999998104e-05, 3.7138999999991595e-05, 3.720799999999691e-05, 3.722200000000342e-05, 3.718100000001112e-05, 3.716...</msg>
<status status="PASS" starttime="20201029 09:33:18.760" endtime="20201029 09:33:18.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.768" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 09:33:18.767" endtime="20201029 09:33:18.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.770" level="INFO">VALUE: [3.75979999999998e-05, 3.717999999999777e-05, 3.715199999999863e-05, 3.7152999999998104e-05, 3.7138999999991595e-05, 3.720799999999691e-05, 3.722200000000342e-05, 3.718100000001112e-05, 3.716700000000461e-05, 3.716700000000461e-05, 3.713900000000547e-05, 3.7096999999999825e-05, 3.715300000001198e-05, 3.7124999999998964e-05, 3.7138999999991595e-05, 3.713900000000547e-05, 3.718100000001112e-05, 3.716600000000514e-05, 3.715300000001198e-05, 3.716700000000461e-05, 3.7152999999998104e-05, 3.716700000000461e-05, 3.7180999999997244e-05, 3.713900000000547e-05, 3.7152999999998104e-05, 3.718000000001165e-05, 3.7138999999991595e-05, 3.713900000001935e-05, 3.7152999999984226e-05, 3.711100000000633e-05, 3.716600000000514e-05, 3.7152999999984226e-05, 3.7138999999991595e-05, 3.709699999998595e-05, 3.715199999998475e-05, 3.716700000000461e-05, 3.7152999999984226e-05, 3.715300000001198e-05, 3.713799999999212e-05, 3.716700000000461e-05, 3.715300000001198e-05, 3.716700000000461e-05, 3.716600000000514e-05, 3.7152999999984226e-05, 3.7138999999991595e-05, 3.716700000000461e-05, 3.715199999998475e-05, 3.720900000001026e-05, 3.708399999999279e-05, 3.7165999999977384e-05]</msg>
<status status="PASS" starttime="20201029 09:33:18.769" endtime="20201029 09:33:18.771"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.764" endtime="20201029 09:33:18.771"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.284" endtime="20201029 09:33:18.772"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:18.208" endtime="20201029 09:33:18.772" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:18.780" endtime="20201029 09:33:18.799"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.778" endtime="20201029 09:33:18.800"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.815" endtime="20201029 09:33:18.829"></status>
</kw>
<msg timestamp="20201029 09:33:18.829" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.813" endtime="20201029 09:33:18.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.832" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.831" endtime="20201029 09:33:18.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.835" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:18.833" endtime="20201029 09:33:18.835"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:18.809" endtime="20201029 09:33:18.836"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:18.806" endtime="20201029 09:33:18.837"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.805" endtime="20201029 09:33:18.837"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:18.841" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:18.840" endtime="20201029 09:33:18.841"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.838" endtime="20201029 09:33:18.842"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.804" endtime="20201029 09:33:18.842"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.804" endtime="20201029 09:33:18.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.843" endtime="20201029 09:33:18.844"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.802" endtime="20201029 09:33:18.845"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.800" endtime="20201029 09:33:18.845"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.777" endtime="20201029 09:33:18.846"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.854" endtime="20201029 09:33:18.873"></status>
</kw>
<msg timestamp="20201029 09:33:18.873" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.853" endtime="20201029 09:33:18.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.876" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.875" endtime="20201029 09:33:18.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.878" endtime="20201029 09:33:18.880"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.850" endtime="20201029 09:33:18.880"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.848" endtime="20201029 09:33:18.881"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.883" endtime="20201029 09:33:18.885"></status>
</kw>
<msg timestamp="20201029 09:33:18.885" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:18.881" endtime="20201029 09:33:18.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.889" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:18.888" endtime="20201029 09:33:18.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.891" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:18.890" endtime="20201029 09:33:18.892"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.886" endtime="20201029 09:33:18.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.896" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:18.895" endtime="20201029 09:33:18.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.899" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:18.898" endtime="20201029 09:33:18.899"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.893" endtime="20201029 09:33:18.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.908" endtime="20201029 09:33:19.189"></status>
</kw>
<msg timestamp="20201029 09:33:19.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067378931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067380042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.906" endtime="20201029 09:33:19.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067378931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067380042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.193" endtime="20201029 09:33:19.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.202" endtime="20201029 09:33:19.203"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.902" endtime="20201029 09:33:19.204"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.901" endtime="20201029 09:33:19.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:19.209" level="INFO">${RESULT} = [{'diff': 1.1109999999980857e-06}, {'diff': 9.019999999970718e-07}, {'diff': 9.299999999962116e-07}, {'diff': 9.440000000027204e-07}, {'diff': 9.859999999944913e-07}, {'diff': 9.159999999897028e-07}, ...</msg>
<status status="PASS" starttime="20201029 09:33:19.205" endtime="20201029 09:33:19.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:19.213" level="INFO">${OVERHEAD} = {'diff': [1.1109999999980857e-06, 9.019999999970718e-07, 9.299999999962116e-07, 9.440000000027204e-07, 9.859999999944913e-07, 9.159999999897028e-07, 9.450000000021941e-07, 9.450000000021941e-07, 9.580...</msg>
<status status="PASS" starttime="20201029 09:33:19.210" endtime="20201029 09:33:19.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.218" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 09:33:19.217" endtime="20201029 09:33:19.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.221" level="INFO">VALUE: [1.1109999999980857e-06, 9.019999999970718e-07, 9.299999999962116e-07, 9.440000000027204e-07, 9.859999999944913e-07, 9.159999999897028e-07, 9.450000000021941e-07, 9.450000000021941e-07, 9.580000000092292e-07, 9.449999999883163e-07, 9.720000000018603e-07, 9.170000000030543e-07, 9.450000000021941e-07, 9.159999999897028e-07, 9.299999999962116e-07, 9.450000000021941e-07, 9.590000000087029e-07, 9.439999999888427e-07, 9.170000000030543e-07, 9.450000000021941e-07, 9.300000000100894e-07, 9.440000000027204e-07, 9.440000000027204e-07, 9.450000000021941e-07, 9.299999999962116e-07, 9.310000000095631e-07, 9.440000000027204e-07, 9.299999999962116e-07, 9.300000000100894e-07, 9.309999999956853e-07, 9.309999999956853e-07, 9.309999999956853e-07, 9.159999999897028e-07, 9.440000000027204e-07, 8.749999999974056e-07, 9.299999999962116e-07, 9.439999999888427e-07, 9.440000000027204e-07, 9.299999999962116e-07, 9.299999999962116e-07, 9.300000000100894e-07, 9.450000000021941e-07, 9.029999999965455e-07, 9.579999999953515e-07, 9.169999999891765e-07, 9.169999999891765e-07, 9.169999999891765e-07, 9.159999999897028e-07, 9.450000000021941e-07, 9.309999999956853e-07]</msg>
<status status="PASS" starttime="20201029 09:33:19.219" endtime="20201029 09:33:19.221"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.214" endtime="20201029 09:33:19.222"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.846" endtime="20201029 09:33:19.223"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:18.774" endtime="20201029 09:33:19.224" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:19.233" endtime="20201029 09:33:19.253"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.231" endtime="20201029 09:33:19.254"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.270" endtime="20201029 09:33:19.284"></status>
</kw>
<msg timestamp="20201029 09:33:19.285" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.269" endtime="20201029 09:33:19.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.288" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.286" endtime="20201029 09:33:19.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.291" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:19.289" endtime="20201029 09:33:19.291"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:19.266" endtime="20201029 09:33:19.292"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:19.263" endtime="20201029 09:33:19.292"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.262" endtime="20201029 09:33:19.293"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:19.297" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:19.296" endtime="20201029 09:33:19.297"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.294" endtime="20201029 09:33:19.297"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.261" endtime="20201029 09:33:19.298"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.260" endtime="20201029 09:33:19.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.299" endtime="20201029 09:33:19.300"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.259" endtime="20201029 09:33:19.301"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.254" endtime="20201029 09:33:19.301"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.229" endtime="20201029 09:33:19.301"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.310" endtime="20201029 09:33:19.358"></status>
</kw>
<msg timestamp="20201029 09:33:19.359" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.309" endtime="20201029 09:33:19.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.362" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.360" endtime="20201029 09:33:19.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.363" endtime="20201029 09:33:19.364"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.306" endtime="20201029 09:33:19.365"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.304" endtime="20201029 09:33:19.365"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.368" endtime="20201029 09:33:19.370"></status>
</kw>
<msg timestamp="20201029 09:33:19.371" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:19.366" endtime="20201029 09:33:19.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.375" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:19.374" endtime="20201029 09:33:19.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.378" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:19.377" endtime="20201029 09:33:19.378"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.372" endtime="20201029 09:33:19.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.383" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:19.382" endtime="20201029 09:33:19.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.385" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:19.384" endtime="20201029 09:33:19.385"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.379" endtime="20201029 09:33:19.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.393" endtime="20201029 09:33:19.683"></status>
</kw>
<msg timestamp="20201029 09:33:19.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070962194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070970778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.391" endtime="20201029 09:33:19.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070962194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070970778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.687" endtime="20201029 09:33:19.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.695" endtime="20201029 09:33:19.697"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.389" endtime="20201029 09:33:19.698"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.386" endtime="20201029 09:33:19.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:19.702" level="INFO">${RESULT} = [{'diff': 8.583999999992042e-06}, {'diff': 8.403000000004046e-06}, {'diff': 8.388999999997537e-06}, {'diff': 8.403000000004046e-06}, {'diff': 8.375000000004906e-06}, {'diff': 8.402999999990168e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:19.699" endtime="20201029 09:33:19.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:19.707" level="INFO">${OVERHEAD} = {'diff': [8.583999999992042e-06, 8.403000000004046e-06, 8.388999999997537e-06, 8.403000000004046e-06, 8.375000000004906e-06, 8.402999999990168e-06, 8.403000000004046e-06, 8.389000000011415e-06, 8.3889...</msg>
<status status="PASS" starttime="20201029 09:33:19.703" endtime="20201029 09:33:19.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.712" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 09:33:19.711" endtime="20201029 09:33:19.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.715" level="INFO">VALUE: [8.583999999992042e-06, 8.403000000004046e-06, 8.388999999997537e-06, 8.403000000004046e-06, 8.375000000004906e-06, 8.402999999990168e-06, 8.403000000004046e-06, 8.389000000011415e-06, 8.388999999997537e-06, 8.401999999990695e-06, 8.401999999990695e-06, 8.416999999996677e-06, 8.431000000003186e-06, 8.445000000009695e-06, 8.403000000004046e-06, 8.403000000004046e-06, 8.403000000004046e-06, 8.416999999996677e-06, 8.388999999997537e-06, 8.360999999998397e-06, 8.416999999996677e-06, 8.387999999998064e-06, 8.402000000004572e-06, 8.430000000003712e-06, 8.416999999996677e-06, 8.402999999990168e-06, 8.416999999996677e-06, 8.402000000004572e-06, 8.403000000004046e-06, 8.402000000004572e-06, 8.388999999997537e-06, 8.444999999995817e-06, 8.403000000004046e-06, 8.388000000011941e-06, 8.443999999996343e-06, 8.402000000004572e-06, 8.443999999996343e-06, 8.402000000004572e-06, 8.389000000011415e-06, 8.416999999996677e-06, 8.403000000004046e-06, 8.388999999997537e-06, 8.402999999990168e-06, 8.416999999996677e-06, 8.417000000010555e-06, 8.403000000004046e-06, 8.417000000010555e-06, 8.416000000011081e-06, 8.403000000004046e-06, 8.388999999997537e-06]</msg>
<status status="PASS" starttime="20201029 09:33:19.713" endtime="20201029 09:33:19.715"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.708" endtime="20201029 09:33:19.716"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.302" endtime="20201029 09:33:19.716"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:19.226" endtime="20201029 09:33:19.717" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:19.724" endtime="20201029 09:33:19.743"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.722" endtime="20201029 09:33:19.744"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.757" endtime="20201029 09:33:19.771"></status>
</kw>
<msg timestamp="20201029 09:33:19.772" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.756" endtime="20201029 09:33:19.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.775" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.773" endtime="20201029 09:33:19.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.778" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:19.776" endtime="20201029 09:33:19.779"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:19.753" endtime="20201029 09:33:19.779"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:19.751" endtime="20201029 09:33:19.780"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.749" endtime="20201029 09:33:19.780"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:19.784" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:19.783" endtime="20201029 09:33:19.784"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.781" endtime="20201029 09:33:19.785"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.749" endtime="20201029 09:33:19.785"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.748" endtime="20201029 09:33:19.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.786" endtime="20201029 09:33:19.787"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.746" endtime="20201029 09:33:19.788"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.745" endtime="20201029 09:33:19.788"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.721" endtime="20201029 09:33:19.789"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.801" endtime="20201029 09:33:19.921"></status>
</kw>
<msg timestamp="20201029 09:33:19.921" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.799" endtime="20201029 09:33:19.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.924" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.922" endtime="20201029 09:33:19.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.925" endtime="20201029 09:33:19.927"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.796" endtime="20201029 09:33:19.928"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.791" endtime="20201029 09:33:19.928"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.930" endtime="20201029 09:33:19.932"></status>
</kw>
<msg timestamp="20201029 09:33:19.932" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:19.929" endtime="20201029 09:33:19.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.937" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:19.935" endtime="20201029 09:33:19.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.939" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:19.938" endtime="20201029 09:33:19.939"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.933" endtime="20201029 09:33:19.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.944" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:19.943" endtime="20201029 09:33:19.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.946" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:19.945" endtime="20201029 09:33:19.946"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.940" endtime="20201029 09:33:19.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.954" endtime="20201029 09:33:20.248"></status>
</kw>
<msg timestamp="20201029 09:33:20.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071471722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071487472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.953" endtime="20201029 09:33:20.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071471722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071487472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:20.252" endtime="20201029 09:33:20.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.260" endtime="20201029 09:33:20.262"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.949" endtime="20201029 09:33:20.263"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.948" endtime="20201029 09:33:20.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:20.267" level="INFO">${RESULT} = [{'diff': 1.5749999999994935e-05}, {'diff': 1.561099999999871e-05}, {'diff': 1.558299999999957e-05}, {'diff': 1.5542000000007272e-05}, {'diff': 1.55969999999922e-05}, {'diff': 1.558299999999957e-05}, ...</msg>
<status status="PASS" starttime="20201029 09:33:20.264" endtime="20201029 09:33:20.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:20.272" level="INFO">${OVERHEAD} = {'diff': [1.5749999999994935e-05, 1.561099999999871e-05, 1.558299999999957e-05, 1.5542000000007272e-05, 1.55969999999922e-05, 1.558299999999957e-05, 1.561099999999871e-05, 1.556899999999306e-05, 1.558...</msg>
<status status="PASS" starttime="20201029 09:33:20.268" endtime="20201029 09:33:20.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.276" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 09:33:20.275" endtime="20201029 09:33:20.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.279" level="INFO">VALUE: [1.5749999999994935e-05, 1.561099999999871e-05, 1.558299999999957e-05, 1.5542000000007272e-05, 1.55969999999922e-05, 1.558299999999957e-05, 1.561099999999871e-05, 1.556899999999306e-05, 1.558299999999957e-05, 1.55969999999922e-05, 1.554099999999392e-05, 1.5570000000006412e-05, 1.558299999999957e-05, 1.5583999999999043e-05, 1.5583999999999043e-05, 1.5555999999999903e-05, 1.561099999999871e-05, 1.558299999999957e-05, 1.5597000000006078e-05, 1.556900000000694e-05, 1.556900000000694e-05, 1.5583999999999043e-05, 1.556900000000694e-05, 1.5583999999999043e-05, 1.5597000000006078e-05, 1.563899999999785e-05, 1.556900000000694e-05, 1.558299999998569e-05, 1.5569999999992534e-05, 1.5583999999985165e-05, 1.558299999998569e-05, 1.5569000000020816e-05, 1.556899999999306e-05, 1.5527999999986886e-05, 1.558299999998569e-05, 1.563899999998397e-05, 1.5569999999992534e-05, 1.5569000000020816e-05, 1.5583000000013447e-05, 1.5583000000013447e-05, 1.5653000000004358e-05, 1.5569000000020816e-05, 1.5583999999985165e-05, 1.556899999999306e-05, 1.5583000000013447e-05, 1.5583999999985165e-05, 1.5583999999985165e-05, 1.558299999998569e-05, 1.5597000000006078e-05, 1.557000000002029e-05]</msg>
<status status="PASS" starttime="20201029 09:33:20.278" endtime="20201029 09:33:20.279"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.273" endtime="20201029 09:33:20.280"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.789" endtime="20201029 09:33:20.280"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:19.718" endtime="20201029 09:33:20.281" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:20.288" endtime="20201029 09:33:20.307"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.286" endtime="20201029 09:33:20.308"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.320" endtime="20201029 09:33:20.334"></status>
</kw>
<msg timestamp="20201029 09:33:20.334" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.319" endtime="20201029 09:33:20.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.337" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.335" endtime="20201029 09:33:20.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.341" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:20.338" endtime="20201029 09:33:20.341"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:20.316" endtime="20201029 09:33:20.342"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:20.314" endtime="20201029 09:33:20.342"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.313" endtime="20201029 09:33:20.343"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:20.346" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:20.346" endtime="20201029 09:33:20.347"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.343" endtime="20201029 09:33:20.347"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.312" endtime="20201029 09:33:20.347"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.311" endtime="20201029 09:33:20.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.349" endtime="20201029 09:33:20.352"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.310" endtime="20201029 09:33:20.353"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.308" endtime="20201029 09:33:20.354"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.285" endtime="20201029 09:33:20.354"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.362" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:33:20.378" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:33:21.705" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:33:20.359" endtime="20201029 09:33:21.706"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.708" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:33:21.707" endtime="20201029 09:33:21.709"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.356" endtime="20201029 09:33:21.709"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:21.713" endtime="20201029 09:33:21.732"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.711" endtime="20201029 09:33:21.733"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.741" endtime="20201029 09:33:21.750"></status>
</kw>
<msg timestamp="20201029 09:33:21.750" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.740" endtime="20201029 09:33:21.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.753" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.752" endtime="20201029 09:33:21.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.754" endtime="20201029 09:33:21.756"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.737" endtime="20201029 09:33:21.756"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.735" endtime="20201029 09:33:21.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.763" endtime="20201029 09:33:22.077"></status>
</kw>
<msg timestamp="20201029 09:33:22.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018218986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018223014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:21.762" endtime="20201029 09:33:22.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018218986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018223014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:22.081" endtime="20201029 09:33:22.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.090" endtime="20201029 09:33:22.091"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.759" endtime="20201029 09:33:22.092"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.757" endtime="20201029 09:33:22.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:22.096" level="INFO">${PHILIP_RES} = [{'diff': 4.027999999999671e-06}, {'diff': 2.7229999999996146e-06}, {'diff': 2.735999999999711e-06}, {'diff': 2.749999999999281e-06}, {'diff': 2.722000000000141e-06}, {'diff': 2.7229999999996146e-06},...</msg>
<status status="PASS" starttime="20201029 09:33:22.093" endtime="20201029 09:33:22.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:22.102" level="INFO">${RESULT} = {'diff': [4.027999999999671e-06, 2.7229999999996146e-06, 2.735999999999711e-06, 2.749999999999281e-06, 2.722000000000141e-06, 2.7229999999996146e-06, 2.722000000000141e-06, 2.7369999999991845e-06, 2.7...</msg>
<status status="PASS" starttime="20201029 09:33:22.097" endtime="20201029 09:33:22.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.106" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:22.105" endtime="20201029 09:33:22.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.109" level="INFO">VALUE: [4.027999999999671e-06, 2.7229999999996146e-06, 2.735999999999711e-06, 2.749999999999281e-06, 2.722000000000141e-06, 2.7229999999996146e-06, 2.722000000000141e-06, 2.7369999999991845e-06, 2.749999999999281e-06, 2.7229999999996146e-06, 2.735999999999711e-06, 2.7090000000000447e-06, 2.722000000000141e-06, 2.7090000000000447e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.749999999999281e-06, 2.708000000000571e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.749999999999281e-06, 2.708000000000571e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.749999999999281e-06, 2.708000000000571e-06, 2.7369999999991845e-06, 2.735999999999711e-06, 2.7229999999996146e-06, 2.735999999999711e-06, 2.735999999999711e-06, 2.7910000000019863e-06, 2.749999999999281e-06, 2.735999999999711e-06, 2.7079999999971016e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.722000000000141e-06, 2.735999999999711e-06, 2.722000000000141e-06, 2.7500000000027502e-06]</msg>
<status status="PASS" starttime="20201029 09:33:22.108" endtime="20201029 09:33:22.109"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.103" endtime="20201029 09:33:22.110"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.733" endtime="20201029 09:33:22.110"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.710" endtime="20201029 09:33:22.110"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:22.113" endtime="20201029 09:33:22.132"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.111" endtime="20201029 09:33:22.133"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.142" endtime="20201029 09:33:22.150"></status>
</kw>
<msg timestamp="20201029 09:33:22.151" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.141" endtime="20201029 09:33:22.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.153" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.152" endtime="20201029 09:33:22.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.154" endtime="20201029 09:33:22.156"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.138" endtime="20201029 09:33:22.157"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.135" endtime="20201029 09:33:22.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.164" endtime="20201029 09:33:22.450"></status>
</kw>
<msg timestamp="20201029 09:33:22.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018908597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018915458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:22.162" endtime="20201029 09:33:22.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018908597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018915458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:22.455" endtime="20201029 09:33:22.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.464" endtime="20201029 09:33:22.465"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.160" endtime="20201029 09:33:22.466"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.158" endtime="20201029 09:33:22.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:22.470" level="INFO">${PHILIP_RES} = [{'diff': 6.861000000000367e-06}, {'diff': 5.472999999998895e-06}, {'diff': 5.471999999999422e-06}, {'diff': 5.471999999999422e-06}, {'diff': 5.457999999999852e-06}, {'diff': 5.471999999999422e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:22.467" endtime="20201029 09:33:22.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:22.475" level="INFO">${RESULT} = {'diff': [6.861000000000367e-06, 5.472999999998895e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.485999999998992e-06, 5.4589999999993255e-06, 5.514...</msg>
<status status="PASS" starttime="20201029 09:33:22.472" endtime="20201029 09:33:22.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.479" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:22.478" endtime="20201029 09:33:22.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.482" level="INFO">VALUE: [6.861000000000367e-06, 5.472999999998895e-06, 5.471999999999422e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.485999999998992e-06, 5.4589999999993255e-06, 5.514000000001601e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.472000000002891e-06, 5.4589999999993255e-06, 5.4589999999993255e-06, 5.444000000000282e-06, 5.403000000001046e-06, 5.471999999999422e-06, 5.4589999999993255e-06, 5.473000000002365e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.471999999999422e-06, 5.429999999997243e-06, 5.472999999998895e-06, 5.485999999998992e-06, 5.457999999999852e-06, 5.485999999998992e-06, 5.485999999998992e-06, 5.444000000000282e-06, 5.472999999998895e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.485999999998992e-06, 5.430000000000712e-06, 5.472999999998895e-06, 5.500000000002031e-06, 5.487000000001935e-06, 5.485999999998992e-06, 5.472000000002891e-06, 5.4589999999993255e-06, 5.4589999999993255e-06, 5.472999999998895e-06, 5.541000000001267e-06, 5.485999999998992e-06, 5.471999999999422e-06, 5.430000000000712e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.472000000002891e-06, 5.457999999999852e-06]</msg>
<status status="PASS" starttime="20201029 09:33:22.481" endtime="20201029 09:33:22.483"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.476" endtime="20201029 09:33:22.483"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.134" endtime="20201029 09:33:22.484"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.111" endtime="20201029 09:33:22.484"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:22.486" endtime="20201029 09:33:22.506"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.485" endtime="20201029 09:33:22.506"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.516" endtime="20201029 09:33:22.524"></status>
</kw>
<msg timestamp="20201029 09:33:22.525" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.513" endtime="20201029 09:33:22.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.527" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.526" endtime="20201029 09:33:22.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.528" endtime="20201029 09:33:22.530"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.511" endtime="20201029 09:33:22.531"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.508" endtime="20201029 09:33:22.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.538" endtime="20201029 09:33:22.837"></status>
</kw>
<msg timestamp="20201029 09:33:22.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019555097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019565125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:22.536" endtime="20201029 09:33:22.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019555097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019565125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:22.847" endtime="20201029 09:33:22.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.866" endtime="20201029 09:33:22.869"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.534" endtime="20201029 09:33:22.871"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.532" endtime="20201029 09:33:22.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:22.879" level="INFO">${PHILIP_RES} = [{'diff': 1.0027999999998732e-05}, {'diff': 8.874999999998467e-06}, {'diff': 8.889000000001507e-06}, {'diff': 8.889000000001507e-06}, {'diff': 8.860999999998898e-06}, {'diff': 8.888999999998037e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:33:22.873" endtime="20201029 09:33:22.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:22.884" level="INFO">${RESULT} = {'diff': [1.0027999999998732e-05, 8.874999999998467e-06, 8.889000000001507e-06, 8.889000000001507e-06, 8.860999999998898e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.875000000001937e-06, 8.860...</msg>
<status status="PASS" starttime="20201029 09:33:22.881" endtime="20201029 09:33:22.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.888" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:22.887" endtime="20201029 09:33:22.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.892" level="INFO">VALUE: [1.0027999999998732e-05, 8.874999999998467e-06, 8.889000000001507e-06, 8.889000000001507e-06, 8.860999999998898e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.875000000001937e-06, 8.860999999998898e-06, 8.903000000001077e-06, 8.957999999999883e-06, 8.889000000001507e-06, 8.832999999999758e-06, 8.887999999998564e-06, 8.930000000000743e-06, 8.875000000001937e-06, 8.874999999998467e-06, 8.889000000001507e-06, 8.875000000001937e-06, 8.875000000001937e-06, 8.860999999998898e-06, 8.874999999998467e-06, 8.875000000001937e-06, 8.888999999998037e-06, 8.874999999998467e-06, 8.847000000002797e-06, 8.889000000001507e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.903000000001077e-06, 8.875000000001937e-06, 8.846999999999328e-06, 8.874999999998467e-06, 8.875000000001937e-06, 8.874999999998467e-06, 8.860999999998898e-06, 8.903000000001077e-06, 8.875000000001937e-06, 8.874999999998467e-06, 8.874999999998467e-06, 8.888999999998037e-06, 8.875000000001937e-06, 8.889000000001507e-06, 8.931000000000217e-06, 8.902000000001603e-06, 8.903000000001077e-06, 8.874999999998467e-06, 8.861999999998371e-06, 8.875000000001937e-06, 8.944999999999786e-06]</msg>
<status status="PASS" starttime="20201029 09:33:22.890" endtime="20201029 09:33:22.892"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.885" endtime="20201029 09:33:22.893"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.507" endtime="20201029 09:33:22.893"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.484" endtime="20201029 09:33:22.893"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:22.896" endtime="20201029 09:33:22.915"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.894" endtime="20201029 09:33:22.916"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.924" endtime="20201029 09:33:22.932"></status>
</kw>
<msg timestamp="20201029 09:33:22.932" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.922" endtime="20201029 09:33:22.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.935" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.933" endtime="20201029 09:33:22.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.936" endtime="20201029 09:33:22.937"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.920" endtime="20201029 09:33:22.938"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.918" endtime="20201029 09:33:22.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.945" endtime="20201029 09:33:23.231"></status>
</kw>
<msg timestamp="20201029 09:33:23.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017687958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017701597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:22.943" endtime="20201029 09:33:23.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017687958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017701597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:23.236" endtime="20201029 09:33:23.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.244" endtime="20201029 09:33:23.246"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.941" endtime="20201029 09:33:23.246"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.939" endtime="20201029 09:33:23.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:23.251" level="INFO">${PHILIP_RES} = [{'diff': 1.3638999999999318e-05}, {'diff': 1.2388999999998068e-05}, {'diff': 1.2416000000001204e-05}, {'diff': 1.2402999999997638e-05}, {'diff': 1.2417000000000677e-05}, {'diff': 1.2416000000001204e-...</msg>
<status status="PASS" starttime="20201029 09:33:23.248" endtime="20201029 09:33:23.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:23.256" level="INFO">${RESULT} = {'diff': [1.3638999999999318e-05, 1.2388999999998068e-05, 1.2416000000001204e-05, 1.2402999999997638e-05, 1.2417000000000677e-05, 1.2416000000001204e-05, 1.2485999999999053e-05, 1.2417000000000677e-05...</msg>
<status status="PASS" starttime="20201029 09:33:23.252" endtime="20201029 09:33:23.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.260" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:23.259" endtime="20201029 09:33:23.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.263" level="INFO">VALUE: [1.3638999999999318e-05, 1.2388999999998068e-05, 1.2416000000001204e-05, 1.2402999999997638e-05, 1.2417000000000677e-05, 1.2416000000001204e-05, 1.2485999999999053e-05, 1.2417000000000677e-05, 1.2416000000001204e-05, 1.2431000000000247e-05, 1.2429999999997304e-05, 1.2416000000001204e-05, 1.2403000000001108e-05, 1.2416999999997208e-05, 1.2430000000000774e-05, 1.2417000000000677e-05, 1.2416999999997208e-05, 1.2444000000000344e-05, 1.2403000000001108e-05, 1.2415999999997734e-05, 1.2374999999998498e-05, 1.2417000000000677e-05, 1.2415999999997734e-05, 1.2388999999998068e-05, 1.2417000000000677e-05, 1.2375000000001968e-05, 1.2431000000000247e-05, 1.2431000000000247e-05, 1.2416000000001204e-05, 1.2416999999997208e-05, 1.2444000000000344e-05, 1.2402000000001634e-05, 1.2402999999997638e-05, 1.2416000000001204e-05, 1.2485999999999053e-05, 1.2417000000000677e-05, 1.2417000000000677e-05, 1.2485999999999053e-05, 1.2417000000000677e-05, 1.2417000000000677e-05, 1.2485999999999053e-05, 1.2430999999996778e-05, 1.2430000000000774e-05, 1.2430000000000774e-05, 1.2416999999997208e-05, 1.2388999999998068e-05, 1.2361000000002398e-05, 1.2402999999997638e-05, 1.2417000000000677e-05, 1.2416000000001204e-05]</msg>
<status status="PASS" starttime="20201029 09:33:23.262" endtime="20201029 09:33:23.263"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.257" endtime="20201029 09:33:23.264"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.916" endtime="20201029 09:33:23.264"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.894" endtime="20201029 09:33:23.264"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:23.267" endtime="20201029 09:33:23.287"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.265" endtime="20201029 09:33:23.288"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.302" endtime="20201029 09:33:23.310"></status>
</kw>
<msg timestamp="20201029 09:33:23.310" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:23.299" endtime="20201029 09:33:23.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.313" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:23.311" endtime="20201029 09:33:23.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.314" endtime="20201029 09:33:23.316"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.295" endtime="20201029 09:33:23.316"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.292" endtime="20201029 09:33:23.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.323" endtime="20201029 09:33:23.610"></status>
</kw>
<msg timestamp="20201029 09:33:23.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024343681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024361097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:23.322" endtime="20201029 09:33:23.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024343681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024361097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:23.614" endtime="20201029 09:33:23.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.622" endtime="20201029 09:33:23.625"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.319" endtime="20201029 09:33:23.626"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.317" endtime="20201029 09:33:23.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:23.630" level="INFO">${PHILIP_RES} = [{'diff': 1.7416000000002735e-05}, {'diff': 1.6222999999999238e-05}, {'diff': 1.6292000000001083e-05}, {'diff': 1.629099999999814e-05}, {'diff': 1.6292000000001083e-05}, {'diff': 1.6278000000001513e-0...</msg>
<status status="PASS" starttime="20201029 09:33:23.627" endtime="20201029 09:33:23.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:23.634" level="INFO">${RESULT} = {'diff': [1.7416000000002735e-05, 1.6222999999999238e-05, 1.6292000000001083e-05, 1.629099999999814e-05, 1.6292000000001083e-05, 1.6278000000001513e-05, 1.629099999999814e-05, 1.6306000000000653e-05, ...</msg>
<status status="PASS" starttime="20201029 09:33:23.631" endtime="20201029 09:33:23.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.639" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:23.638" endtime="20201029 09:33:23.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.641" level="INFO">VALUE: [1.7416000000002735e-05, 1.6222999999999238e-05, 1.6292000000001083e-05, 1.629099999999814e-05, 1.6292000000001083e-05, 1.6278000000001513e-05, 1.629099999999814e-05, 1.6306000000000653e-05, 1.6278000000001513e-05, 1.627699999999857e-05, 1.630499999999771e-05, 1.6292000000001083e-05, 1.629099999999814e-05, 1.630500000000118e-05, 1.6292000000001083e-05, 1.6292000000001083e-05, 1.6292000000001083e-05, 1.6278000000001513e-05, 1.6277999999998044e-05, 1.6277999999998044e-05, 1.6263999999998474e-05, 1.6291999999997614e-05, 1.630499999999771e-05, 1.6292000000001083e-05, 1.6291999999997614e-05, 1.629099999999814e-05, 1.6292000000001083e-05, 1.6263999999998474e-05, 1.627699999999857e-05, 1.6292000000001083e-05, 1.6278000000001513e-05, 1.627699999999857e-05, 1.6306000000000653e-05, 1.6306000000000653e-05, 1.630499999999771e-05, 1.6278000000001513e-05, 1.6292000000001083e-05, 1.629099999999814e-05, 1.631900000000075e-05, 1.6306000000000653e-05, 1.6277999999998044e-05, 1.6292000000001083e-05, 1.6292000000001083e-05, 1.629099999999814e-05, 1.6292000000001083e-05, 1.6278000000001513e-05, 1.6277999999998044e-05, 1.633300000000032e-05, 1.6292000000001083e-05, 1.6305999999997184e-05]</msg>
<status status="PASS" starttime="20201029 09:33:23.640" endtime="20201029 09:33:23.642"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.635" endtime="20201029 09:33:23.642"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.289" endtime="20201029 09:33:23.643"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.265" endtime="20201029 09:33:23.643"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:23.645" endtime="20201029 09:33:23.664"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.644" endtime="20201029 09:33:23.665"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.673" endtime="20201029 09:33:23.682"></status>
</kw>
<msg timestamp="20201029 09:33:23.682" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:23.672" endtime="20201029 09:33:23.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.685" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:23.683" endtime="20201029 09:33:23.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.686" endtime="20201029 09:33:23.688"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.669" endtime="20201029 09:33:23.689"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.667" endtime="20201029 09:33:23.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.696" endtime="20201029 09:33:23.983"></status>
</kw>
<msg timestamp="20201029 09:33:23.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017756944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017778625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:23.694" endtime="20201029 09:33:23.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017756944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017778625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:23.988" endtime="20201029 09:33:23.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.996" endtime="20201029 09:33:23.997"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.692" endtime="20201029 09:33:23.998"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.690" endtime="20201029 09:33:23.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:24.002" level="INFO">${PHILIP_RES} = [{'diff': 2.168099999999909e-05}, {'diff': 2.052699999999935e-05}, {'diff': 2.0499999999999685e-05}, {'diff': 2.0513999999999255e-05}, {'diff': 2.0486000000000115e-05}, {'diff': 2.0513999999999255e-05...</msg>
<status status="PASS" starttime="20201029 09:33:23.999" endtime="20201029 09:33:24.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:24.007" level="INFO">${RESULT} = {'diff': [2.168099999999909e-05, 2.052699999999935e-05, 2.0499999999999685e-05, 2.0513999999999255e-05, 2.0486000000000115e-05, 2.0513999999999255e-05, 2.0499999999999685e-05, 2.051299999999978e-05, 2...</msg>
<status status="PASS" starttime="20201029 09:33:24.003" endtime="20201029 09:33:24.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.011" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:24.010" endtime="20201029 09:33:24.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.013" level="INFO">VALUE: [2.168099999999909e-05, 2.052699999999935e-05, 2.0499999999999685e-05, 2.0513999999999255e-05, 2.0486000000000115e-05, 2.0513999999999255e-05, 2.0499999999999685e-05, 2.051299999999978e-05, 2.052699999999935e-05, 2.0527999999998825e-05, 2.0472000000000545e-05, 2.0513999999999255e-05, 2.0499999999999685e-05, 2.051299999999978e-05, 2.0527999999998825e-05, 2.0514000000002724e-05, 2.0527999999998825e-05, 2.0499999999999685e-05, 2.0499999999999685e-05, 2.051299999999978e-05, 2.0514000000002724e-05, 2.0499999999999685e-05, 2.0486000000000115e-05, 2.0542000000001864e-05, 2.0527999999998825e-05, 2.0499999999999685e-05, 2.052699999999935e-05, 2.0499999999999685e-05, 2.0500000000003155e-05, 2.0527999999998825e-05, 2.0429999999998366e-05, 2.0499999999999685e-05, 2.0513999999999255e-05, 2.0513999999999255e-05, 2.0513999999999255e-05, 2.0499999999999685e-05, 2.0486000000000115e-05, 2.051299999999978e-05, 2.047300000000002e-05, 2.0499999999999685e-05, 2.0486000000000115e-05, 2.0499999999999685e-05, 2.0499999999999685e-05, 2.051299999999978e-05, 2.0514000000002724e-05, 2.0499999999999685e-05, 2.0513999999999255e-05, 2.0458000000000975e-05, 2.052699999999935e-05, 2.048700000000306e-05]</msg>
<status status="PASS" starttime="20201029 09:33:24.012" endtime="20201029 09:33:24.015"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.007" endtime="20201029 09:33:24.015"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.666" endtime="20201029 09:33:24.016"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.643" endtime="20201029 09:33:24.016"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:24.018" endtime="20201029 09:33:24.037"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.017" endtime="20201029 09:33:24.038"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.046" endtime="20201029 09:33:24.055"></status>
</kw>
<msg timestamp="20201029 09:33:24.056" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.045" endtime="20201029 09:33:24.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.060" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.058" endtime="20201029 09:33:24.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.062" endtime="20201029 09:33:24.064"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.042" endtime="20201029 09:33:24.065"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.040" endtime="20201029 09:33:24.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.075" endtime="20201029 09:33:24.384"></status>
</kw>
<msg timestamp="20201029 09:33:24.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017642861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017669111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:24.073" endtime="20201029 09:33:24.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017642861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017669111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:24.394" endtime="20201029 09:33:24.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.405" endtime="20201029 09:33:24.407"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.069" endtime="20201029 09:33:24.408"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.066" endtime="20201029 09:33:24.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:24.412" level="INFO">${PHILIP_RES} = [{'diff': 2.6250000000001966e-05}, {'diff': 2.5083999999998136e-05}, {'diff': 2.5083999999998136e-05}, {'diff': 2.508300000000213e-05}, {'diff': 2.508300000000213e-05}, {'diff': 2.5082999999998662e-05...</msg>
<status status="PASS" starttime="20201029 09:33:24.409" endtime="20201029 09:33:24.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:24.418" level="INFO">${RESULT} = {'diff': [2.6250000000001966e-05, 2.5083999999998136e-05, 2.5083999999998136e-05, 2.508300000000213e-05, 2.508300000000213e-05, 2.5082999999998662e-05, 2.5014000000000286e-05, 2.5069999999998566e-05, ...</msg>
<status status="PASS" starttime="20201029 09:33:24.413" endtime="20201029 09:33:24.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.422" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:24.421" endtime="20201029 09:33:24.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.425" level="INFO">VALUE: [2.6250000000001966e-05, 2.5083999999998136e-05, 2.5083999999998136e-05, 2.508300000000213e-05, 2.508300000000213e-05, 2.5082999999998662e-05, 2.5014000000000286e-05, 2.5069999999998566e-05, 2.50970000000017e-05, 2.506900000000256e-05, 2.5068999999999092e-05, 2.513900000000041e-05, 2.5098000000001175e-05, 2.508300000000213e-05, 2.508300000000213e-05, 2.5082999999998662e-05, 2.511100000000127e-05, 2.512500000000084e-05, 2.506900000000256e-05, 2.5068999999999092e-05, 2.5096999999998232e-05, 2.512499999999737e-05, 2.5069999999998566e-05, 2.506900000000256e-05, 2.50970000000017e-05, 2.5082999999998662e-05, 2.5069999999998566e-05, 2.5084000000001605e-05, 2.511100000000127e-05, 2.5082999999998662e-05, 2.513900000000041e-05, 2.5083999999998136e-05, 2.50970000000017e-05, 2.508300000000213e-05, 2.5082999999998662e-05, 2.5096999999998232e-05, 2.5083999999998136e-05, 2.508300000000213e-05, 2.511100000000127e-05, 2.50970000000017e-05, 2.5096999999998232e-05, 2.5083999999998136e-05, 2.50970000000017e-05, 2.508300000000213e-05, 2.5096999999998232e-05, 2.5082999999998662e-05, 2.5083999999998136e-05, 2.508300000000213e-05, 2.508300000000213e-05, 2.5096999999998232e-05]</msg>
<status status="PASS" starttime="20201029 09:33:24.423" endtime="20201029 09:33:24.425"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.419" endtime="20201029 09:33:24.426"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.039" endtime="20201029 09:33:24.426"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.016" endtime="20201029 09:33:24.426"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:24.429" endtime="20201029 09:33:24.448"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.427" endtime="20201029 09:33:24.449"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.457" endtime="20201029 09:33:24.466"></status>
</kw>
<msg timestamp="20201029 09:33:24.467" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.456" endtime="20201029 09:33:24.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.469" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.468" endtime="20201029 09:33:24.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.470" endtime="20201029 09:33:24.472"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.453" endtime="20201029 09:33:24.472"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.451" endtime="20201029 09:33:24.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.480" endtime="20201029 09:33:24.770"></status>
</kw>
<msg timestamp="20201029 09:33:24.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018047819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018079, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:33:24.479" endtime="20201029 09:33:24.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018047819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018079, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:33:24.774" endtime="20201029 09:33:24.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.782" endtime="20201029 09:33:24.784"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.476" endtime="20201029 09:33:24.785"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.474" endtime="20201029 09:33:24.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:24.789" level="INFO">${PHILIP_RES} = [{'diff': 3.118100000000165e-05}, {'diff': 3.0041000000001483e-05}, {'diff': 3.0028000000001387e-05}, {'diff': 3.0014000000001817e-05}, {'diff': 3.0028000000001387e-05}, {'diff': 3.0014000000001817e-0...</msg>
<status status="PASS" starttime="20201029 09:33:24.786" endtime="20201029 09:33:24.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:24.794" level="INFO">${RESULT} = {'diff': [3.118100000000165e-05, 3.0041000000001483e-05, 3.0028000000001387e-05, 3.0014000000001817e-05, 3.0028000000001387e-05, 3.0014000000001817e-05, 3.0055000000001053e-05, 2.9958000000000068e-05,...</msg>
<status status="PASS" starttime="20201029 09:33:24.790" endtime="20201029 09:33:24.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.798" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:24.797" endtime="20201029 09:33:24.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.801" level="INFO">VALUE: [3.118100000000165e-05, 3.0041000000001483e-05, 3.0028000000001387e-05, 3.0014000000001817e-05, 3.0028000000001387e-05, 3.0014000000001817e-05, 3.0055000000001053e-05, 2.9958000000000068e-05, 3.0026999999998444e-05, 3.0027999999997917e-05, 3.0027999999997917e-05, 3.0041999999997487e-05, 3.0026999999998444e-05, 3.0027999999997917e-05, 3.0013999999998348e-05, 3.0083999999999667e-05, 3.0028000000001387e-05, 3.0014000000001817e-05, 3.0056000000000527e-05, 2.9958000000000068e-05, 3.0028000000001387e-05, 3.0014000000001817e-05, 3.0028000000001387e-05, 3.0026999999998444e-05, 3.0027999999997917e-05, 3.0013999999998348e-05, 3.0040999999998014e-05, 3.0027999999997917e-05, 3.0027999999997917e-05, 2.9958000000000068e-05, 3.0026999999998444e-05, 3.0096999999999763e-05, 3.0069000000000623e-05, 3.0042000000000957e-05, 3.0055000000001053e-05, 2.9985999999999208e-05, 3.0042000000000957e-05, 2.9999999999998778e-05, 3.0040999999998014e-05, 3.0041999999997487e-05, 3.0013999999998348e-05, 3.0012999999998874e-05, 3.0042000000000957e-05, 3.0013999999998348e-05, 3.0027999999997917e-05, 3.0014000000001817e-05, 3.0014000000001817e-05, 3.0028000000001387e-05, 3.0027000000001913e-05, 3.0028000000001387e-05]</msg>
<status status="PASS" starttime="20201029 09:33:24.799" endtime="20201029 09:33:24.801"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.795" endtime="20201029 09:33:24.802"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.449" endtime="20201029 09:33:24.802"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.427" endtime="20201029 09:33:24.802"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:24.805" endtime="20201029 09:33:24.824"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.803" endtime="20201029 09:33:24.825"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.833" endtime="20201029 09:33:24.843"></status>
</kw>
<msg timestamp="20201029 09:33:24.843" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.832" endtime="20201029 09:33:24.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.846" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.844" endtime="20201029 09:33:24.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.847" endtime="20201029 09:33:24.850"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.829" endtime="20201029 09:33:24.851"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.827" endtime="20201029 09:33:24.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.858" endtime="20201029 09:33:25.144"></status>
</kw>
<msg timestamp="20201029 09:33:25.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018041972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018078431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:24.856" endtime="20201029 09:33:25.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018041972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018078431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:25.149" endtime="20201029 09:33:25.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.157" endtime="20201029 09:33:25.159"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.853" endtime="20201029 09:33:25.160"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.852" endtime="20201029 09:33:25.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:25.164" level="INFO">${PHILIP_RES} = [{'diff': 3.64589999999991e-05}, {'diff': 3.5290999999999795e-05}, {'diff': 3.5304999999999365e-05}, {'diff': 3.532000000000188e-05}, {'diff': 3.530600000000231e-05}, {'diff': 3.523599999999752e-05}, ...</msg>
<status status="PASS" starttime="20201029 09:33:25.161" endtime="20201029 09:33:25.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:25.169" level="INFO">${RESULT} = {'diff': [3.64589999999991e-05, 3.5290999999999795e-05, 3.5304999999999365e-05, 3.532000000000188e-05, 3.530600000000231e-05, 3.523599999999752e-05, 3.530599999999884e-05, 3.529199999999927e-05, 3.530...</msg>
<status status="PASS" starttime="20201029 09:33:25.165" endtime="20201029 09:33:25.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.174" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:25.173" endtime="20201029 09:33:25.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.177" level="INFO">VALUE: [3.64589999999991e-05, 3.5290999999999795e-05, 3.5304999999999365e-05, 3.532000000000188e-05, 3.530600000000231e-05, 3.523599999999752e-05, 3.530599999999884e-05, 3.529199999999927e-05, 3.5304999999999365e-05, 3.530599999999884e-05, 3.5360999999997644e-05, 3.5304999999999365e-05, 3.530599999999884e-05, 3.52779999999997e-05, 3.5305000000002834e-05, 3.529200000000274e-05, 3.529199999999927e-05, 3.5319000000002404e-05, 3.530599999999884e-05, 3.533400000000145e-05, 3.5318999999998935e-05, 3.526400000000013e-05, 3.5332999999998504e-05, 3.5318999999998935e-05, 3.525000000000056e-05, 3.529199999999927e-05, 3.5305000000002834e-05, 3.5319000000002404e-05, 3.529200000000274e-05, 3.5318999999998935e-05, 3.5290999999999795e-05, 3.530599999999884e-05, 3.529199999999927e-05, 3.52779999999997e-05, 3.530599999999884e-05, 3.5318999999998935e-05, 3.5304999999999365e-05, 3.531999999999841e-05, 3.530600000000231e-05, 3.5319000000002404e-05, 3.532000000000188e-05, 3.530599999999884e-05, 3.5318999999998935e-05, 3.531999999999841e-05, 3.530599999999884e-05, 3.5290999999999795e-05, 3.525000000000056e-05, 3.5346999999998074e-05, 3.5318999999998935e-05, 3.5304999999999365e-05]</msg>
<status status="PASS" starttime="20201029 09:33:25.175" endtime="20201029 09:33:25.178"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.170" endtime="20201029 09:33:25.179"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.825" endtime="20201029 09:33:25.179"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.803" endtime="20201029 09:33:25.179"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:25.182" endtime="20201029 09:33:25.202"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.181" endtime="20201029 09:33:25.202"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.211" endtime="20201029 09:33:25.221"></status>
</kw>
<msg timestamp="20201029 09:33:25.222" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.209" endtime="20201029 09:33:25.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.224" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.223" endtime="20201029 09:33:25.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.226" endtime="20201029 09:33:25.228"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.206" endtime="20201029 09:33:25.228"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.204" endtime="20201029 09:33:25.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.236" endtime="20201029 09:33:25.523"></status>
</kw>
<msg timestamp="20201029 09:33:25.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018566972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018609069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:25.234" endtime="20201029 09:33:25.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018566972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018609069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:25.527" endtime="20201029 09:33:25.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.535" endtime="20201029 09:33:25.537"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.231" endtime="20201029 09:33:25.538"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.229" endtime="20201029 09:33:25.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:25.542" level="INFO">${PHILIP_RES} = [{'diff': 4.2096999999997886e-05}, {'diff': 4.0972999999999704e-05}, {'diff': 4.092999999999805e-05}, {'diff': 4.093000000000152e-05}, {'diff': 4.0945000000000564e-05}, {'diff': 4.0917000000001424e-05...</msg>
<status status="PASS" starttime="20201029 09:33:25.539" endtime="20201029 09:33:25.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:25.548" level="INFO">${RESULT} = {'diff': [4.2096999999997886e-05, 4.0972999999999704e-05, 4.092999999999805e-05, 4.093000000000152e-05, 4.0945000000000564e-05, 4.0917000000001424e-05, 4.100000000000284e-05, 4.094400000000109e-05, 4....</msg>
<status status="PASS" starttime="20201029 09:33:25.543" endtime="20201029 09:33:25.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.552" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:25.551" endtime="20201029 09:33:25.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.555" level="INFO">VALUE: [4.2096999999997886e-05, 4.0972999999999704e-05, 4.092999999999805e-05, 4.093000000000152e-05, 4.0945000000000564e-05, 4.0917000000001424e-05, 4.100000000000284e-05, 4.094400000000109e-05, 4.0917000000001424e-05, 4.0945000000000564e-05, 4.091599999999848e-05, 4.094399999999762e-05, 4.0945000000000564e-05, 4.092999999999805e-05, 4.091600000000195e-05, 4.0888999999998815e-05, 4.0959000000000134e-05, 4.097200000000023e-05, 4.091600000000195e-05, 4.0945000000000564e-05, 4.0931000000000994e-05, 4.094400000000109e-05, 4.0875000000002715e-05, 4.0874999999999245e-05, 4.094400000000109e-05, 4.093000000000152e-05, 4.0931000000000994e-05, 4.0945000000000564e-05, 4.094400000000109e-05, 4.094400000000109e-05, 4.0930999999997525e-05, 4.0959000000000134e-05, 4.095799999999719e-05, 4.093000000000152e-05, 4.0958999999996665e-05, 4.0874999999999245e-05, 4.092999999999805e-05, 4.0931000000000994e-05, 4.0945000000000564e-05, 4.094400000000109e-05, 4.092999999999805e-05, 4.0931000000000994e-05, 4.0917000000001424e-05, 4.094400000000109e-05, 4.095800000000066e-05, 4.0945000000000564e-05, 4.0959000000000134e-05, 4.092999999999805e-05, 4.094400000000109e-05, 4.0930999999997525e-05]</msg>
<status status="PASS" starttime="20201029 09:33:25.553" endtime="20201029 09:33:25.555"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.549" endtime="20201029 09:33:25.556"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.203" endtime="20201029 09:33:25.556"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.180" endtime="20201029 09:33:25.556"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:25.559" endtime="20201029 09:33:25.578"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.557" endtime="20201029 09:33:25.579"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.587" endtime="20201029 09:33:25.598"></status>
</kw>
<msg timestamp="20201029 09:33:25.599" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.586" endtime="20201029 09:33:25.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.609" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.600" endtime="20201029 09:33:25.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.610" endtime="20201029 09:33:25.612"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.583" endtime="20201029 09:33:25.613"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.581" endtime="20201029 09:33:25.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.620" endtime="20201029 09:33:25.905"></status>
</kw>
<msg timestamp="20201029 09:33:25.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018414889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018462958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:25.618" endtime="20201029 09:33:25.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018414889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018462958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:25.910" endtime="20201029 09:33:25.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.918" endtime="20201029 09:33:25.921"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.616" endtime="20201029 09:33:25.921"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.614" endtime="20201029 09:33:25.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:25.926" level="INFO">${PHILIP_RES} = [{'diff': 4.806900000000128e-05}, {'diff': 4.694400000000015e-05}, {'diff': 4.6931000000000056e-05}, {'diff': 4.6931000000000056e-05}, {'diff': 4.690299999999745e-05}, {'diff': 4.6931000000000056e-05}...</msg>
<status status="PASS" starttime="20201029 09:33:25.923" endtime="20201029 09:33:25.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:25.930" level="INFO">${RESULT} = {'diff': [4.806900000000128e-05, 4.694400000000015e-05, 4.6931000000000056e-05, 4.6931000000000056e-05, 4.690299999999745e-05, 4.6931000000000056e-05, 4.6931000000000056e-05, 4.697199999999929e-05, 4....</msg>
<status status="PASS" starttime="20201029 09:33:25.927" endtime="20201029 09:33:25.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.935" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:25.934" endtime="20201029 09:33:25.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.937" level="INFO">VALUE: [4.806900000000128e-05, 4.694400000000015e-05, 4.6931000000000056e-05, 4.6931000000000056e-05, 4.690299999999745e-05, 4.6931000000000056e-05, 4.6931000000000056e-05, 4.697199999999929e-05, 4.698599999999886e-05, 4.6931000000000056e-05, 4.6917000000000486e-05, 4.6847000000002637e-05, 4.6931000000000056e-05, 4.6917000000000486e-05, 4.6917000000000486e-05, 4.691599999999754e-05, 4.690299999999745e-05, 4.691600000000101e-05, 4.693000000000058e-05, 4.693000000000058e-05, 4.694400000000015e-05, 4.691600000000101e-05, 4.697199999999929e-05, 4.693000000000058e-05, 4.690299999999745e-05, 4.6931000000000056e-05, 4.6917000000000486e-05, 4.6903000000000916e-05, 4.6931000000000056e-05, 4.6917000000000486e-05, 4.6889000000001346e-05, 4.690299999999745e-05, 4.6931000000000056e-05, 4.6917000000000486e-05, 4.6931000000000056e-05, 4.6931000000000056e-05, 4.6931000000000056e-05, 4.6875000000001776e-05, 4.6917000000000486e-05, 4.691599999999754e-05, 4.6917000000000486e-05, 4.691600000000101e-05, 4.691600000000101e-05, 4.690199999999797e-05, 4.693000000000058e-05, 4.693000000000058e-05, 4.690200000000144e-05, 4.698599999999886e-05, 4.6917000000000486e-05, 4.6917000000000486e-05]</msg>
<status status="PASS" starttime="20201029 09:33:25.936" endtime="20201029 09:33:25.938"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.931" endtime="20201029 09:33:25.939"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.579" endtime="20201029 09:33:25.939"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.557" endtime="20201029 09:33:25.939"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:25.942" endtime="20201029 09:33:25.961"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.940" endtime="20201029 09:33:25.962"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.970" endtime="20201029 09:33:25.980"></status>
</kw>
<msg timestamp="20201029 09:33:25.981" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.969" endtime="20201029 09:33:25.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.984" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.982" endtime="20201029 09:33:25.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.985" endtime="20201029 09:33:25.988"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.966" endtime="20201029 09:33:25.988"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.964" endtime="20201029 09:33:25.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.996" endtime="20201029 09:33:26.283"></status>
</kw>
<msg timestamp="20201029 09:33:26.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018406597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018461, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:33:25.994" endtime="20201029 09:33:26.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018406597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018461, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:33:26.287" endtime="20201029 09:33:26.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.296" endtime="20201029 09:33:26.297"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.991" endtime="20201029 09:33:26.298"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.989" endtime="20201029 09:33:26.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:26.302" level="INFO">${PHILIP_RES} = [{'diff': 5.440300000000148e-05}, {'diff': 5.332000000000253e-05}, {'diff': 5.327800000000035e-05}, {'diff': 5.327800000000035e-05}, {'diff': 5.319500000000241e-05}, {'diff': 5.329100000000045e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:33:26.299" endtime="20201029 09:33:26.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:26.307" level="INFO">${RESULT} = {'diff': [5.440300000000148e-05, 5.332000000000253e-05, 5.327800000000035e-05, 5.327800000000035e-05, 5.319500000000241e-05, 5.329100000000045e-05, 5.333299999999916e-05, 5.3249999999997744e-05, 5.327...</msg>
<status status="PASS" starttime="20201029 09:33:26.303" endtime="20201029 09:33:26.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.311" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:26.310" endtime="20201029 09:33:26.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.313" level="INFO">VALUE: [5.440300000000148e-05, 5.332000000000253e-05, 5.327800000000035e-05, 5.327800000000035e-05, 5.319500000000241e-05, 5.329100000000045e-05, 5.333299999999916e-05, 5.3249999999997744e-05, 5.327800000000035e-05, 5.3221999999998604e-05, 5.327800000000035e-05, 5.333299999999916e-05, 5.329100000000045e-05, 5.3179999999999894e-05, 5.329199999999992e-05, 5.327800000000035e-05, 5.326400000000078e-05, 5.327800000000035e-05, 5.329100000000045e-05, 5.325000000000121e-05, 5.329199999999992e-05, 5.329199999999992e-05, 5.3235999999998174e-05, 5.327800000000035e-05, 5.327800000000035e-05, 5.326400000000078e-05, 5.327700000000088e-05, 5.323600000000164e-05, 5.327800000000035e-05, 5.329199999999992e-05, 5.323600000000164e-05, 5.327800000000035e-05, 5.329100000000045e-05, 5.326400000000078e-05, 5.325000000000121e-05, 5.323600000000164e-05, 5.330599999999949e-05, 5.326400000000078e-05, 5.327800000000035e-05, 5.331899999999959e-05, 5.3235999999998174e-05, 5.330599999999949e-05, 5.327800000000035e-05, 5.326400000000078e-05, 5.327800000000035e-05, 5.327700000000088e-05, 5.325000000000121e-05, 5.327800000000035e-05, 5.327800000000035e-05, 5.327800000000035e-05]</msg>
<status status="PASS" starttime="20201029 09:33:26.312" endtime="20201029 09:33:26.315"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.307" endtime="20201029 09:33:26.315"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.962" endtime="20201029 09:33:26.315"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.940" endtime="20201029 09:33:26.316"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:26.318" endtime="20201029 09:33:26.337"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.317" endtime="20201029 09:33:26.338"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.346" endtime="20201029 09:33:26.358"></status>
</kw>
<msg timestamp="20201029 09:33:26.359" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.345" endtime="20201029 09:33:26.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.361" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.360" endtime="20201029 09:33:26.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.362" endtime="20201029 09:33:26.364"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.342" endtime="20201029 09:33:26.365"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.340" endtime="20201029 09:33:26.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.372" endtime="20201029 09:33:26.677"></status>
</kw>
<msg timestamp="20201029 09:33:26.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018285083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018346194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:26.370" endtime="20201029 09:33:26.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018285083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018346194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:26.681" endtime="20201029 09:33:26.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.689" endtime="20201029 09:33:26.691"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.367" endtime="20201029 09:33:26.692"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.366" endtime="20201029 09:33:26.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:26.696" level="INFO">${PHILIP_RES} = [{'diff': 6.111099999999911e-05}, {'diff': 5.997300000000136e-05}, {'diff': 5.995899999999832e-05}, {'diff': 5.995900000000179e-05}, {'diff': 5.995899999999832e-05}, {'diff': 5.995900000000179e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:33:26.693" endtime="20201029 09:33:26.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:26.701" level="INFO">${RESULT} = {'diff': [6.111099999999911e-05, 5.997300000000136e-05, 5.995899999999832e-05, 5.995900000000179e-05, 5.995899999999832e-05, 5.995900000000179e-05, 6.0028000000000165e-05, 5.997300000000136e-05, 5.993...</msg>
<status status="PASS" starttime="20201029 09:33:26.697" endtime="20201029 09:33:26.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.706" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:26.705" endtime="20201029 09:33:26.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.708" level="INFO">VALUE: [6.111099999999911e-05, 5.997300000000136e-05, 5.995899999999832e-05, 5.995900000000179e-05, 5.995899999999832e-05, 5.995900000000179e-05, 6.0028000000000165e-05, 5.997300000000136e-05, 5.993100000000265e-05, 5.991699999999961e-05, 5.995900000000179e-05, 5.994499999999875e-05, 5.994499999999875e-05, 5.995899999999832e-05, 5.994499999999875e-05, 5.995900000000179e-05, 5.995899999999832e-05, 5.995900000000179e-05, 5.9971999999998415e-05, 5.9972000000001885e-05, 5.995899999999832e-05, 5.995899999999832e-05, 5.991699999999961e-05, 5.995899999999832e-05, 5.9958000000002315e-05, 5.994499999999875e-05, 5.994499999999875e-05, 5.995899999999832e-05, 5.995899999999832e-05, 5.995900000000179e-05, 5.995899999999832e-05, 5.994500000000222e-05, 5.994499999999875e-05, 5.9985999999997985e-05, 5.994499999999875e-05, 5.9916000000000136e-05, 5.9958000000002315e-05, 5.9957999999998846e-05, 5.9944000000002745e-05, 5.9957999999998846e-05, 5.9971999999998415e-05, 5.9958000000002315e-05, 5.9957999999998846e-05, 6.0014000000000595e-05, 5.9929999999999706e-05, 5.9958000000002315e-05, 5.9971999999998415e-05, 5.9957999999998846e-05, 5.9943999999999276e-05, 5.9957999999998846e-05]</msg>
<status status="PASS" starttime="20201029 09:33:26.707" endtime="20201029 09:33:26.709"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.702" endtime="20201029 09:33:26.709"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.339" endtime="20201029 09:33:26.710"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.316" endtime="20201029 09:33:26.710"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:26.712" endtime="20201029 09:33:26.731"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.711" endtime="20201029 09:33:26.732"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.741" endtime="20201029 09:33:26.752"></status>
</kw>
<msg timestamp="20201029 09:33:26.753" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.739" endtime="20201029 09:33:26.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.755" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.754" endtime="20201029 09:33:26.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.756" endtime="20201029 09:33:26.758"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.736" endtime="20201029 09:33:26.759"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.734" endtime="20201029 09:33:26.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.766" endtime="20201029 09:33:27.052"></status>
</kw>
<msg timestamp="20201029 09:33:27.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018257917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018326125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:26.764" endtime="20201029 09:33:27.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018257917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018326125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:27.056" endtime="20201029 09:33:27.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.065" endtime="20201029 09:33:27.067"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.761" endtime="20201029 09:33:27.068"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.760" endtime="20201029 09:33:27.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:27.072" level="INFO">${PHILIP_RES} = [{'diff': 6.820800000000016e-05}, {'diff': 6.695800000000238e-05}, {'diff': 6.700000000000109e-05}, {'diff': 6.701300000000118e-05}, {'diff': 6.700000000000109e-05}, {'diff': 6.701400000000066e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:33:27.069" endtime="20201029 09:33:27.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:27.076" level="INFO">${RESULT} = {'diff': [6.820800000000016e-05, 6.695800000000238e-05, 6.700000000000109e-05, 6.701300000000118e-05, 6.700000000000109e-05, 6.701400000000066e-05, 6.700000000000109e-05, 6.700000000000109e-05, 6.7000...</msg>
<status status="PASS" starttime="20201029 09:33:27.073" endtime="20201029 09:33:27.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.081" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:27.080" endtime="20201029 09:33:27.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.083" level="INFO">VALUE: [6.820800000000016e-05, 6.695800000000238e-05, 6.700000000000109e-05, 6.701300000000118e-05, 6.700000000000109e-05, 6.701400000000066e-05, 6.700000000000109e-05, 6.700000000000109e-05, 6.700000000000109e-05, 6.700000000000109e-05, 6.702800000000023e-05, 6.698600000000152e-05, 6.700000000000109e-05, 6.701400000000066e-05, 6.700000000000109e-05, 6.700000000000109e-05, 6.700000000000109e-05, 6.701400000000066e-05, 6.698599999999805e-05, 6.700000000000109e-05, 6.699999999999762e-05, 6.699999999999762e-05, 6.698599999999805e-05, 6.698599999999805e-05, 6.699999999999762e-05, 6.697300000000142e-05, 6.700000000000109e-05, 6.705599999999937e-05, 6.701400000000066e-05, 6.70419999999998e-05, 6.699999999999762e-05, 6.698599999999805e-05, 6.699999999999762e-05, 6.697199999999848e-05, 6.698599999999805e-05, 6.697199999999848e-05, 6.697199999999848e-05, 6.699999999999762e-05, 6.698599999999805e-05, 6.699999999999762e-05, 6.699999999999762e-05, 6.699999999999762e-05, 6.699999999999762e-05, 6.699999999999762e-05, 6.698599999999805e-05, 6.700000000000109e-05, 6.702800000000023e-05, 6.698599999999805e-05, 6.698599999999805e-05, 6.694399999999934e-05]</msg>
<status status="PASS" starttime="20201029 09:33:27.082" endtime="20201029 09:33:27.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.077" endtime="20201029 09:33:27.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.732" endtime="20201029 09:33:27.085"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.710" endtime="20201029 09:33:27.085"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:27.087" endtime="20201029 09:33:27.107"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.086" endtime="20201029 09:33:27.107"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.116" endtime="20201029 09:33:27.128"></status>
</kw>
<msg timestamp="20201029 09:33:27.129" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.114" endtime="20201029 09:33:27.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.131" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.130" endtime="20201029 09:33:27.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.132" endtime="20201029 09:33:27.135"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.111" endtime="20201029 09:33:27.135"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.109" endtime="20201029 09:33:27.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.142" endtime="20201029 09:33:27.429"></status>
</kw>
<msg timestamp="20201029 09:33:27.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018603986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018679528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:27.141" endtime="20201029 09:33:27.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018603986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018679528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:27.435" endtime="20201029 09:33:27.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.446" endtime="20201029 09:33:27.448"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.138" endtime="20201029 09:33:27.448"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.136" endtime="20201029 09:33:27.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:27.455" level="INFO">${PHILIP_RES} = [{'diff': 7.554200000000136e-05}, {'diff': 7.437499999999805e-05}, {'diff': 7.440300000000066e-05}, {'diff': 7.437500000000152e-05}, {'diff': 7.437500000000152e-05}, {'diff': 7.437500000000152e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:33:27.450" endtime="20201029 09:33:27.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:27.460" level="INFO">${RESULT} = {'diff': [7.554200000000136e-05, 7.437499999999805e-05, 7.440300000000066e-05, 7.437500000000152e-05, 7.437500000000152e-05, 7.437500000000152e-05, 7.440300000000066e-05, 7.438899999999762e-05, 7.4388...</msg>
<status status="PASS" starttime="20201029 09:33:27.456" endtime="20201029 09:33:27.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.464" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:27.463" endtime="20201029 09:33:27.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.467" level="INFO">VALUE: [7.554200000000136e-05, 7.437499999999805e-05, 7.440300000000066e-05, 7.437500000000152e-05, 7.437500000000152e-05, 7.437500000000152e-05, 7.440300000000066e-05, 7.438899999999762e-05, 7.438899999999762e-05, 7.437499999999805e-05, 7.437500000000152e-05, 7.440300000000066e-05, 7.437500000000152e-05, 7.438900000000109e-05, 7.438900000000109e-05, 7.438900000000109e-05, 7.438799999999815e-05, 7.438899999999762e-05, 7.437500000000152e-05, 7.440300000000066e-05, 7.437500000000152e-05, 7.438900000000109e-05, 7.438900000000109e-05, 7.440300000000066e-05, 7.438900000000109e-05, 7.436099999999848e-05, 7.436099999999848e-05, 7.437499999999805e-05, 7.440200000000119e-05, 7.437500000000152e-05, 7.437500000000152e-05, 7.438900000000109e-05, 7.437499999999805e-05, 7.438899999999762e-05, 7.440199999999772e-05, 7.437499999999805e-05, 7.437499999999805e-05, 7.437500000000152e-05, 7.436100000000195e-05, 7.438900000000109e-05, 7.437500000000152e-05, 7.438800000000162e-05, 7.438900000000109e-05, 7.436099999999848e-05, 7.438899999999762e-05, 7.44439999999999e-05, 7.438900000000109e-05, 7.437500000000152e-05, 7.437500000000152e-05, 7.437500000000152e-05]</msg>
<status status="PASS" starttime="20201029 09:33:27.466" endtime="20201029 09:33:27.468"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.461" endtime="20201029 09:33:27.469"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.108" endtime="20201029 09:33:27.469"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.085" endtime="20201029 09:33:27.469"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:27.472" endtime="20201029 09:33:27.491"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.470" endtime="20201029 09:33:27.492"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.501" endtime="20201029 09:33:27.513"></status>
</kw>
<msg timestamp="20201029 09:33:27.513" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.500" endtime="20201029 09:33:27.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.516" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.514" endtime="20201029 09:33:27.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.517" endtime="20201029 09:33:27.519"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.497" endtime="20201029 09:33:27.519"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.494" endtime="20201029 09:33:27.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.526" endtime="20201029 09:33:27.812"></status>
</kw>
<msg timestamp="20201029 09:33:27.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01907825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019161556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:27.525" endtime="20201029 09:33:27.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01907825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019161556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:27.817" endtime="20201029 09:33:27.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.825" endtime="20201029 09:33:27.827"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.522" endtime="20201029 09:33:27.828"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.520" endtime="20201029 09:33:27.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:27.832" level="INFO">${PHILIP_RES} = [{'diff': 8.330599999999827e-05}, {'diff': 8.21390000000019e-05}, {'diff': 8.215300000000147e-05}, {'diff': 8.215300000000147e-05}, {'diff': 8.212499999999887e-05}, {'diff': 8.2152999999998e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 09:33:27.829" endtime="20201029 09:33:27.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:27.837" level="INFO">${RESULT} = {'diff': [8.330599999999827e-05, 8.21390000000019e-05, 8.215300000000147e-05, 8.215300000000147e-05, 8.212499999999887e-05, 8.2152999999998e-05, 8.213899999999844e-05, 8.222199999999985e-05, 8.2138999...</msg>
<status status="PASS" starttime="20201029 09:33:27.833" endtime="20201029 09:33:27.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.842" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:27.841" endtime="20201029 09:33:27.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.845" level="INFO">VALUE: [8.330599999999827e-05, 8.21390000000019e-05, 8.215300000000147e-05, 8.215300000000147e-05, 8.212499999999887e-05, 8.2152999999998e-05, 8.213899999999844e-05, 8.222199999999985e-05, 8.213899999999844e-05, 8.218100000000061e-05, 8.216700000000104e-05, 8.21390000000019e-05, 8.20979999999992e-05, 8.215300000000147e-05, 8.212499999999887e-05, 8.2152999999998e-05, 8.220899999999975e-05, 8.215199999999853e-05, 8.213899999999844e-05, 8.222299999999932e-05, 8.212500000000234e-05, 8.213899999999844e-05, 8.213800000000243e-05, 8.215300000000147e-05, 8.21390000000019e-05, 8.213899999999844e-05, 8.2152999999998e-05, 8.215199999999853e-05, 8.215300000000147e-05, 8.216700000000104e-05, 8.21390000000019e-05, 8.216700000000104e-05, 8.21390000000019e-05, 8.21390000000019e-05, 8.212499999999887e-05, 8.213799999999896e-05, 8.212499999999887e-05, 8.2152999999998e-05, 8.218000000000114e-05, 8.213899999999844e-05, 8.209699999999973e-05, 8.215300000000147e-05, 8.209699999999973e-05, 8.215300000000147e-05, 8.213899999999844e-05, 8.2152999999998e-05, 8.213899999999844e-05, 8.213899999999844e-05, 8.20979999999992e-05, 8.213899999999844e-05]</msg>
<status status="PASS" starttime="20201029 09:33:27.843" endtime="20201029 09:33:27.845"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.838" endtime="20201029 09:33:27.846"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.493" endtime="20201029 09:33:27.846"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.470" endtime="20201029 09:33:27.846"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:27.849" endtime="20201029 09:33:27.868"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.847" endtime="20201029 09:33:27.869"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.878" endtime="20201029 09:33:27.890"></status>
</kw>
<msg timestamp="20201029 09:33:27.891" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.876" endtime="20201029 09:33:27.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.894" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.892" endtime="20201029 09:33:27.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.895" endtime="20201029 09:33:27.897"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.873" endtime="20201029 09:33:27.897"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.871" endtime="20201029 09:33:27.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.904" endtime="20201029 09:33:28.191"></status>
</kw>
<msg timestamp="20201029 09:33:28.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018772986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018864389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:27.903" endtime="20201029 09:33:28.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018772986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018864389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.195" endtime="20201029 09:33:28.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.204" endtime="20201029 09:33:28.206"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.900" endtime="20201029 09:33:28.206"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.898" endtime="20201029 09:33:28.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:28.211" level="INFO">${PHILIP_RES} = [{'diff': 9.140300000000032e-05}, {'diff': 9.01800000000022e-05}, {'diff': 9.023599999999701e-05}, {'diff': 9.025000000000005e-05}, {'diff': 9.023600000000048e-05}, {'diff': 9.022199999999744e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:28.207" endtime="20201029 09:33:28.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:28.215" level="INFO">${RESULT} = {'diff': [9.140300000000032e-05, 9.01800000000022e-05, 9.023599999999701e-05, 9.025000000000005e-05, 9.023600000000048e-05, 9.022199999999744e-05, 9.025000000000005e-05, 9.025000000000005e-05, 9.02500...</msg>
<status status="PASS" starttime="20201029 09:33:28.212" endtime="20201029 09:33:28.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.220" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:28.219" endtime="20201029 09:33:28.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.223" level="INFO">VALUE: [9.140300000000032e-05, 9.01800000000022e-05, 9.023599999999701e-05, 9.025000000000005e-05, 9.023600000000048e-05, 9.022199999999744e-05, 9.025000000000005e-05, 9.025000000000005e-05, 9.025000000000005e-05, 9.022300000000039e-05, 9.027799999999919e-05, 9.020799999999787e-05, 9.023600000000048e-05, 9.023600000000048e-05, 9.022199999999744e-05, 9.022200000000091e-05, 9.023599999999701e-05, 9.025000000000005e-05, 9.022200000000091e-05, 9.022199999999744e-05, 9.025000000000005e-05, 9.025000000000005e-05, 9.030599999999833e-05, 9.027799999999919e-05, 9.025000000000005e-05, 9.023599999999701e-05, 9.022200000000091e-05, 9.019400000000177e-05, 9.023600000000048e-05, 9.023600000000048e-05, 9.022200000000091e-05, 9.023600000000048e-05, 9.025000000000005e-05, 9.027799999999919e-05, 9.032000000000137e-05, 9.023600000000048e-05, 9.018100000000168e-05, 9.025000000000005e-05, 9.016599999999916e-05, 9.022199999999744e-05, 9.022200000000091e-05, 9.025000000000005e-05, 9.01939999999983e-05, 9.023600000000048e-05, 9.022200000000091e-05, 9.022199999999744e-05, 9.022300000000039e-05, 9.023600000000048e-05, 9.027799999999919e-05, 9.023600000000048e-05]</msg>
<status status="PASS" starttime="20201029 09:33:28.222" endtime="20201029 09:33:28.224"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.216" endtime="20201029 09:33:28.224"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.870" endtime="20201029 09:33:28.225"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.847" endtime="20201029 09:33:28.225"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:28.228" endtime="20201029 09:33:28.248"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.226" endtime="20201029 09:33:28.248"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.257" endtime="20201029 09:33:28.270"></status>
</kw>
<msg timestamp="20201029 09:33:28.271" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.255" endtime="20201029 09:33:28.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.273" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.272" endtime="20201029 09:33:28.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.274" endtime="20201029 09:33:28.277"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.252" endtime="20201029 09:33:28.278"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.250" endtime="20201029 09:33:28.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.285" endtime="20201029 09:33:28.570"></status>
</kw>
<msg timestamp="20201029 09:33:28.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018248486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018348292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.283" endtime="20201029 09:33:28.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018248486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018348292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.574" endtime="20201029 09:33:28.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.583" endtime="20201029 09:33:28.585"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.280" endtime="20201029 09:33:28.585"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.279" endtime="20201029 09:33:28.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:28.590" level="INFO">${PHILIP_RES} = [{'diff': 9.980599999999742e-05}, {'diff': 9.866600000000073e-05}, {'diff': 9.861099999999845e-05}, {'diff': 9.869499999999934e-05}, {'diff': 9.870799999999944e-05}, {'diff': 9.869399999999987e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:33:28.586" endtime="20201029 09:33:28.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:28.594" level="INFO">${RESULT} = {'diff': [9.980599999999742e-05, 9.866600000000073e-05, 9.861099999999845e-05, 9.869499999999934e-05, 9.870799999999944e-05, 9.869399999999987e-05, 9.872299999999848e-05, 9.86800000000003e-05, 9.86810...</msg>
<status status="PASS" starttime="20201029 09:33:28.591" endtime="20201029 09:33:28.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.599" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:28.598" endtime="20201029 09:33:28.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.601" level="INFO">VALUE: [9.980599999999742e-05, 9.866600000000073e-05, 9.861099999999845e-05, 9.869499999999934e-05, 9.870799999999944e-05, 9.869399999999987e-05, 9.872299999999848e-05, 9.86800000000003e-05, 9.868100000000324e-05, 9.869499999999934e-05, 9.869399999999987e-05, 9.868099999999977e-05, 9.869499999999934e-05, 9.86800000000003e-05, 9.868099999999977e-05, 9.869499999999934e-05, 9.869399999999987e-05, 9.865300000000063e-05, 9.861100000000192e-05, 9.86800000000003e-05, 9.86670000000002e-05, 9.870900000000238e-05, 9.863899999999759e-05, 9.868099999999977e-05, 9.86670000000002e-05, 9.869399999999987e-05, 9.86670000000002e-05, 9.86800000000003e-05, 9.869399999999987e-05, 9.868099999999977e-05, 9.874999999999814e-05, 9.867999999999683e-05, 9.865300000000063e-05, 9.869400000000333e-05, 9.869399999999987e-05, 9.872200000000247e-05, 9.872300000000195e-05, 9.869399999999987e-05, 9.869499999999934e-05, 9.86800000000003e-05, 9.8721999999999e-05, 9.86670000000002e-05, 9.863900000000106e-05, 9.870799999999944e-05, 9.868099999999977e-05, 9.869399999999987e-05, 9.859799999999835e-05, 9.868099999999977e-05, 9.869399999999987e-05, 9.869399999999987e-05]</msg>
<status status="PASS" starttime="20201029 09:33:28.600" endtime="20201029 09:33:28.602"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.595" endtime="20201029 09:33:28.603"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.249" endtime="20201029 09:33:28.603"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.225" endtime="20201029 09:33:28.604"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:28.606" endtime="20201029 09:33:28.626"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.605" endtime="20201029 09:33:28.626"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.635" endtime="20201029 09:33:28.649"></status>
</kw>
<msg timestamp="20201029 09:33:28.649" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.633" endtime="20201029 09:33:28.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.652" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.651" endtime="20201029 09:33:28.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.653" endtime="20201029 09:33:28.655"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.631" endtime="20201029 09:33:28.655"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.629" endtime="20201029 09:33:28.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.663" endtime="20201029 09:33:28.948"></status>
</kw>
<msg timestamp="20201029 09:33:28.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018106917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018215542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.661" endtime="20201029 09:33:28.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018106917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018215542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.952" endtime="20201029 09:33:28.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.961" endtime="20201029 09:33:28.962"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.658" endtime="20201029 09:33:28.963"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.656" endtime="20201029 09:33:28.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:28.967" level="INFO">${PHILIP_RES} = [{'diff': 0.00010862500000000108}, {'diff': 0.00010748600000000039}, {'diff': 0.00010748600000000039}, {'diff': 0.00010751300000000005}, {'diff': 0.00010747200000000082}, {'diff': 0.000107486000000000...</msg>
<status status="PASS" starttime="20201029 09:33:28.964" endtime="20201029 09:33:28.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:28.972" level="INFO">${RESULT} = {'diff': [0.00010862500000000108, 0.00010748600000000039, 0.00010748600000000039, 0.00010751300000000005, 0.00010747200000000082, 0.00010748600000000039, 0.00010749999999999996, 0.00010743000000000211...</msg>
<status status="PASS" starttime="20201029 09:33:28.968" endtime="20201029 09:33:28.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.977" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:28.976" endtime="20201029 09:33:28.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.979" level="INFO">VALUE: [0.00010862500000000108, 0.00010748600000000039, 0.00010748600000000039, 0.00010751300000000005, 0.00010747200000000082, 0.00010748600000000039, 0.00010749999999999996, 0.00010743000000000211, 0.00010748600000000039, 0.00010747199999999735, 0.00010747199999999735, 0.00010747200000000082, 0.00010745800000000125, 0.00010748699999999986, 0.00010748600000000039, 0.00010748600000000039, 0.00010747200000000082, 0.00010748600000000039, 0.00010751399999999953, 0.00010745799999999778, 0.00010745899999999725, 0.00010745800000000125, 0.00010751399999999953, 0.00010747300000000029, 0.00010747200000000082, 0.00010748600000000039, 0.00010744400000000168, 0.00010748600000000039, 0.00010751399999999953, 0.00010745799999999778, 0.00010743099999999811, 0.00010751399999999953, 0.00010747200000000082, 0.00010748600000000039, 0.00010745900000000072, 0.00010744500000000115, 0.00010745800000000125, 0.00010748600000000039, 0.00010745799999999778, 0.00010748600000000039, 0.00010747300000000029, 0.00010745800000000125, 0.00010748600000000039, 0.00010748600000000039, 0.00010748600000000039, 0.00010747300000000029, 0.00010748600000000039, 0.00010747200000000082, 0.0001075279999999991, 0.00010740299999999897]</msg>
<status status="PASS" starttime="20201029 09:33:28.978" endtime="20201029 09:33:28.980"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.973" endtime="20201029 09:33:28.981"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.627" endtime="20201029 09:33:28.981"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.604" endtime="20201029 09:33:28.981"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:28.984" endtime="20201029 09:33:29.003"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.982" endtime="20201029 09:33:29.004"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.016" endtime="20201029 09:33:29.030"></status>
</kw>
<msg timestamp="20201029 09:33:29.031" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.013" endtime="20201029 09:33:29.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.034" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.032" endtime="20201029 09:33:29.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.035" endtime="20201029 09:33:29.037"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.009" endtime="20201029 09:33:29.038"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.006" endtime="20201029 09:33:29.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.047" endtime="20201029 09:33:29.333"></status>
</kw>
<msg timestamp="20201029 09:33:29.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021868431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:29.045" endtime="20201029 09:33:29.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021868431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:29.337" endtime="20201029 09:33:29.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.346" endtime="20201029 09:33:29.349"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.042" endtime="20201029 09:33:29.349"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.039" endtime="20201029 09:33:29.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:29.354" level="INFO">${PHILIP_RES} = [{'diff': 0.00011779200000000198}, {'diff': 0.00011665299999999781}, {'diff': 0.0001166109999999991}, {'diff': 0.00011663800000000224}, {'diff': 0.00011663799999999877}, {'diff': 0.0001166109999999991...</msg>
<status status="PASS" starttime="20201029 09:33:29.350" endtime="20201029 09:33:29.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:29.358" level="INFO">${RESULT} = {'diff': [0.00011779200000000198, 0.00011665299999999781, 0.0001166109999999991, 0.00011663800000000224, 0.00011663799999999877, 0.0001166109999999991, 0.00011663900000000171, 0.00011663900000000171, ...</msg>
<status status="PASS" starttime="20201029 09:33:29.355" endtime="20201029 09:33:29.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.362" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:29.361" endtime="20201029 09:33:29.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.365" level="INFO">VALUE: [0.00011779200000000198, 0.00011665299999999781, 0.0001166109999999991, 0.00011663800000000224, 0.00011663799999999877, 0.0001166109999999991, 0.00011663900000000171, 0.00011663900000000171, 0.00011663899999999824, 0.0001165560000000003, 0.00011665300000000128, 0.00011663899999999824, 0.00011672199999999966, 0.00011665200000000181, 0.00011672299999999913, 0.00011666700000000085, 0.00011663899999999824, 0.00011663900000000171, 0.00011665300000000128, 0.00011663899999999824, 0.00011663899999999824, 0.00011665200000000181, 0.00011663900000000171, 0.00011665299999999781, 0.00011666700000000085, 0.00011666700000000085, 0.00011663900000000171, 0.00011662499999999867, 0.00011663899999999824, 0.00011663900000000171, 0.00011665200000000181, 0.00011663899999999824, 0.00011665299999999781, 0.00011663900000000171, 0.00011662499999999867, 0.00011665299999999781, 0.00011665300000000128, 0.00011669400000000052, 0.00011663799999999877, 0.00011665199999999834, 0.00011666700000000085, 0.00011666700000000085, 0.00011663899999999824, 0.00011665299999999781, 0.00011665300000000128, 0.00011668000000000095, 0.00011666599999999791, 0.00011665199999999834, 0.00011665200000000181, 0.00011662500000000214]</msg>
<status status="PASS" starttime="20201029 09:33:29.364" endtime="20201029 09:33:29.366"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.359" endtime="20201029 09:33:29.366"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.004" endtime="20201029 09:33:29.367"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.982" endtime="20201029 09:33:29.367"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:29.369" endtime="20201029 09:33:29.389"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.368" endtime="20201029 09:33:29.389"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.398" endtime="20201029 09:33:29.413"></status>
</kw>
<msg timestamp="20201029 09:33:29.414" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.396" endtime="20201029 09:33:29.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.416" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.415" endtime="20201029 09:33:29.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.417" endtime="20201029 09:33:29.420"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.394" endtime="20201029 09:33:29.420"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.392" endtime="20201029 09:33:29.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.428" endtime="20201029 09:33:29.714"></status>
</kw>
<msg timestamp="20201029 09:33:29.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0183715, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018498806, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:29.426" endtime="20201029 09:33:29.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0183715, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018498806, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:29.718" endtime="20201029 09:33:29.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.726" endtime="20201029 09:33:29.728"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.423" endtime="20201029 09:33:29.729"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.422" endtime="20201029 09:33:29.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:29.733" level="INFO">${PHILIP_RES} = [{'diff': 0.00012730600000000064}, {'diff': 0.00012620899999999866}, {'diff': 0.00012615300000000038}, {'diff': 0.00012613899999999734}, {'diff': 0.0001261390000000008}, {'diff': 0.0001261390000000008...</msg>
<status status="PASS" starttime="20201029 09:33:29.730" endtime="20201029 09:33:29.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:29.737" level="INFO">${RESULT} = {'diff': [0.00012730600000000064, 0.00012620899999999866, 0.00012615300000000038, 0.00012613899999999734, 0.0001261390000000008, 0.0001261390000000008, 0.00012616699999999995, 0.00012615300000000038, ...</msg>
<status status="PASS" starttime="20201029 09:33:29.734" endtime="20201029 09:33:29.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.742" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:29.741" endtime="20201029 09:33:29.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.744" level="INFO">VALUE: [0.00012730600000000064, 0.00012620899999999866, 0.00012615300000000038, 0.00012613899999999734, 0.0001261390000000008, 0.0001261390000000008, 0.00012616699999999995, 0.00012615300000000038, 0.00012612499999999777, 0.00012615300000000038, 0.00012616699999999995, 0.00012613899999999734, 0.00012615300000000038, 0.0001261520000000009, 0.00012615300000000038, 0.00012615300000000038, 0.00012613899999999734, 0.0001261939999999996, 0.00012616699999999995, 0.00012613799999999786, 0.00012615300000000038, 0.0001261390000000008, 0.00012615300000000038, 0.0001261109999999982, 0.00012613899999999734, 0.00012615199999999743, 0.00012612500000000124, 0.0001261520000000009, 0.00012619499999999909, 0.0001261520000000009, 0.0001261390000000008, 0.00012615199999999743, 0.00012611100000000167, 0.00012612500000000124, 0.00012615300000000038, 0.00012616600000000047, 0.00012616699999999995, 0.00012615300000000038, 0.0001261529999999969, 0.00012615300000000038, 0.0001261390000000008, 0.00012611100000000167, 0.00012616699999999995, 0.00012615300000000038, 0.00012615300000000038, 0.0001261529999999969, 0.0001261390000000008, 0.0001261390000000008, 0.00012616699999999995, 0.00012615300000000038]</msg>
<status status="PASS" starttime="20201029 09:33:29.743" endtime="20201029 09:33:29.746"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.738" endtime="20201029 09:33:29.747"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.390" endtime="20201029 09:33:29.747"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.367" endtime="20201029 09:33:29.747"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:29.750" endtime="20201029 09:33:29.769"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.748" endtime="20201029 09:33:29.770"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.778" endtime="20201029 09:33:29.794"></status>
</kw>
<msg timestamp="20201029 09:33:29.794" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.777" endtime="20201029 09:33:29.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.797" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.795" endtime="20201029 09:33:29.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.798" endtime="20201029 09:33:29.800"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.774" endtime="20201029 09:33:29.800"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.772" endtime="20201029 09:33:29.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.808" endtime="20201029 09:33:30.093"></status>
</kw>
<msg timestamp="20201029 09:33:30.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01814875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018285903, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:29.806" endtime="20201029 09:33:30.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01814875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018285903, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:30.097" endtime="20201029 09:33:30.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.106" endtime="20201029 09:33:30.107"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.803" endtime="20201029 09:33:30.108"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.802" endtime="20201029 09:33:30.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:30.112" level="INFO">${PHILIP_RES} = [{'diff': 0.0001371529999999975}, {'diff': 0.00013601400000000027}, {'diff': 0.0001360000000000007}, {'diff': 0.00013598600000000113}, {'diff': 0.0001360000000000007}, {'diff': 0.00013601299999999733}...</msg>
<status status="PASS" starttime="20201029 09:33:30.109" endtime="20201029 09:33:30.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:30.117" level="INFO">${RESULT} = {'diff': [0.0001371529999999975, 0.00013601400000000027, 0.0001360000000000007, 0.00013598600000000113, 0.0001360000000000007, 0.00013601299999999733, 0.00013598600000000113, 0.0001360000000000007, 0....</msg>
<status status="PASS" starttime="20201029 09:33:30.113" endtime="20201029 09:33:30.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.122" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:30.121" endtime="20201029 09:33:30.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.124" level="INFO">VALUE: [0.0001371529999999975, 0.00013601400000000027, 0.0001360000000000007, 0.00013598600000000113, 0.0001360000000000007, 0.00013601299999999733, 0.00013598600000000113, 0.0001360000000000007, 0.00013602799999999984, 0.00013601400000000027, 0.00013601400000000027, 0.00013598600000000113, 0.00013598599999999766, 0.00013601400000000027, 0.00013598600000000113, 0.00013598600000000113, 0.0001360000000000007, 0.00013599999999999723, 0.00013602700000000037, 0.00013598600000000113, 0.00013599999999999723, 0.0001360130000000008, 0.000135958999999998, 0.0001360000000000007, 0.00013598699999999714, 0.00013601400000000027, 0.0001360000000000007, 0.00013602799999999984, 0.0001360000000000007, 0.00013605599999999898, 0.0001360000000000007, 0.0001360549999999995, 0.00013598600000000113, 0.0001360000000000007, 0.0001360000000000007, 0.00013601400000000027, 0.000135958000000002, 0.0001360000000000007, 0.0001360000000000007, 0.00013601400000000027, 0.0001360000000000007, 0.0001360000000000007, 0.0001360000000000007, 0.0001360000000000007, 0.0001360000000000007, 0.00013601400000000027, 0.00013601299999999733, 0.0001360000000000007, 0.00013601400000000027, 0.00013602799999999984]</msg>
<status status="PASS" starttime="20201029 09:33:30.123" endtime="20201029 09:33:30.125"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.118" endtime="20201029 09:33:30.126"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.770" endtime="20201029 09:33:30.126"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.748" endtime="20201029 09:33:30.126"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:30.129" endtime="20201029 09:33:30.148"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.127" endtime="20201029 09:33:30.149"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.157" endtime="20201029 09:33:30.173"></status>
</kw>
<msg timestamp="20201029 09:33:30.173" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.156" endtime="20201029 09:33:30.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.176" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.174" endtime="20201029 09:33:30.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.177" endtime="20201029 09:33:30.178"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.153" endtime="20201029 09:33:30.179"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.151" endtime="20201029 09:33:30.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.186" endtime="20201029 09:33:30.473"></status>
</kw>
<msg timestamp="20201029 09:33:30.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018150111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018297472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.185" endtime="20201029 09:33:30.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018150111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018297472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.477" endtime="20201029 09:33:30.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.486" endtime="20201029 09:33:30.487"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.182" endtime="20201029 09:33:30.488"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.180" endtime="20201029 09:33:30.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:30.492" level="INFO">${PHILIP_RES} = [{'diff': 0.00014736099999999863}, {'diff': 0.00014622300000000088}, {'diff': 0.00014620799999999837}, {'diff': 0.00014626400000000012}, {'diff': 0.00014623600000000098}, {'diff': 0.000146194000000002...</msg>
<status status="PASS" starttime="20201029 09:33:30.489" endtime="20201029 09:33:30.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:30.497" level="INFO">${RESULT} = {'diff': [0.00014736099999999863, 0.00014622300000000088, 0.00014620799999999837, 0.00014626400000000012, 0.00014623600000000098, 0.00014619400000000227, 0.00014620800000000184, 0.0001462090000000013,...</msg>
<status status="PASS" starttime="20201029 09:33:30.493" endtime="20201029 09:33:30.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.501" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:30.500" endtime="20201029 09:33:30.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.504" level="INFO">VALUE: [0.00014736099999999863, 0.00014622300000000088, 0.00014620799999999837, 0.00014626400000000012, 0.00014623600000000098, 0.00014619400000000227, 0.00014620800000000184, 0.0001462090000000013, 0.00014620799999999837, 0.00014616599999999966, 0.00014622199999999794, 0.0001462090000000013, 0.00014620799999999837, 0.00014620800000000184, 0.00014619500000000174, 0.00014625000000000055, 0.00014625000000000055, 0.00014620899999999784, 0.00014622199999999794, 0.0001461939999999988, 0.00014619499999999827, 0.0001462090000000013, 0.0001461939999999988, 0.0001462220000000014, 0.00014619500000000174, 0.00014616599999999966, 0.00014617999999999923, 0.0001462090000000013, 0.00014617999999999923, 0.0001461939999999988, 0.00014619499999999827, 0.00014625000000000055, 0.00014620799999999837, 0.00014622300000000088, 0.00014619400000000227, 0.00014620800000000184, 0.0001462090000000013, 0.00014622199999999794, 0.00014622199999999794, 0.00014620799999999837, 0.0001461809999999987, 0.00014620799999999837, 0.0001461939999999988, 0.00014615300000000303, 0.00014620800000000184, 0.00014619400000000227, 0.00014622300000000088, 0.00014620799999999837, 0.00014620799999999837, 0.00014619499999999827]</msg>
<status status="PASS" starttime="20201029 09:33:30.502" endtime="20201029 09:33:30.505"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.498" endtime="20201029 09:33:30.505"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.150" endtime="20201029 09:33:30.506"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.127" endtime="20201029 09:33:30.506"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:30.508" endtime="20201029 09:33:30.528"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.507" endtime="20201029 09:33:30.528"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.537" endtime="20201029 09:33:30.553"></status>
</kw>
<msg timestamp="20201029 09:33:30.554" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.535" endtime="20201029 09:33:30.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.556" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.555" endtime="20201029 09:33:30.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.558" endtime="20201029 09:33:30.560"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.533" endtime="20201029 09:33:30.561"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.531" endtime="20201029 09:33:30.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.568" endtime="20201029 09:33:30.854"></status>
</kw>
<msg timestamp="20201029 09:33:30.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018158042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018315958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.566" endtime="20201029 09:33:30.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018158042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018315958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.858" endtime="20201029 09:33:30.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.867" endtime="20201029 09:33:30.868"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.564" endtime="20201029 09:33:30.869"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.562" endtime="20201029 09:33:30.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:30.873" level="INFO">${PHILIP_RES} = [{'diff': 0.000157916000000001}, {'diff': 0.00015679200000000282}, {'diff': 0.00015680499999999944}, {'diff': 0.00015677799999999978}, {'diff': 0.00015675000000000064}, {'diff': 0.0001567640000000002}...</msg>
<status status="PASS" starttime="20201029 09:33:30.870" endtime="20201029 09:33:30.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:30.878" level="INFO">${RESULT} = {'diff': [0.000157916000000001, 0.00015679200000000282, 0.00015680499999999944, 0.00015677799999999978, 0.00015675000000000064, 0.0001567640000000002, 0.00015676399999999674, 0.00015679199999999935, 0...</msg>
<status status="PASS" starttime="20201029 09:33:30.874" endtime="20201029 09:33:30.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.882" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:30.881" endtime="20201029 09:33:30.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.885" level="INFO">VALUE: [0.000157916000000001, 0.00015679200000000282, 0.00015680499999999944, 0.00015677799999999978, 0.00015675000000000064, 0.0001567640000000002, 0.00015676399999999674, 0.00015679199999999935, 0.00015679099999999987, 0.0001567640000000002, 0.0001567640000000002, 0.0001567770000000003, 0.00015679199999999935, 0.0001567220000000015, 0.0001567640000000002, 0.00015677799999999978, 0.00015683400000000153, 0.0001567770000000003, 0.00015679099999999987, 0.0001567640000000002, 0.00015677699999999684, 0.0001567640000000002, 0.0001567640000000002, 0.0001567770000000003, 0.00015684699999999815, 0.0001567640000000002, 0.00015676299999999727, 0.00015675000000000064, 0.00015677799999999978, 0.00015677799999999978, 0.00015677799999999978, 0.00015675000000000064, 0.00015677799999999978, 0.0001567640000000002, 0.0001567640000000002, 0.00015677800000000325, 0.00015677799999999978, 0.00015677799999999978, 0.0001567640000000002, 0.00015679199999999935, 0.00015677799999999978, 0.00015680499999999944, 0.00015680599999999892, 0.00015679099999999987, 0.0001567640000000002, 0.0001567640000000002, 0.0001567770000000003, 0.00015677799999999978, 0.00015677799999999978, 0.00015681899999999901]</msg>
<status status="PASS" starttime="20201029 09:33:30.883" endtime="20201029 09:33:30.891"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.879" endtime="20201029 09:33:30.892"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.529" endtime="20201029 09:33:30.892"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.506" endtime="20201029 09:33:30.893"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:30.895" endtime="20201029 09:33:30.915"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.894" endtime="20201029 09:33:30.916"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.931" endtime="20201029 09:33:30.950"></status>
</kw>
<msg timestamp="20201029 09:33:30.950" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.928" endtime="20201029 09:33:30.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.953" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.951" endtime="20201029 09:33:30.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.954" endtime="20201029 09:33:30.956"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.924" endtime="20201029 09:33:30.956"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.919" endtime="20201029 09:33:30.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.963" endtime="20201029 09:33:31.249"></status>
</kw>
<msg timestamp="20201029 09:33:31.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026788597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026957444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.962" endtime="20201029 09:33:31.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026788597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026957444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.253" endtime="20201029 09:33:31.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.262" endtime="20201029 09:33:31.264"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.959" endtime="20201029 09:33:31.264"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.957" endtime="20201029 09:33:31.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:31.269" level="INFO">${PHILIP_RES} = [{'diff': 0.00016884699999999975}, {'diff': 0.00016769500000000243}, {'diff': 0.00016769399999999948}, {'diff': 0.00016769500000000243}, {'diff': 0.00016769500000000243}, {'diff': 0.000167693999999999...</msg>
<status status="PASS" starttime="20201029 09:33:31.265" endtime="20201029 09:33:31.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:31.274" level="INFO">${RESULT} = {'diff': [0.00016884699999999975, 0.00016769500000000243, 0.00016769399999999948, 0.00016769500000000243, 0.00016769500000000243, 0.00016769399999999948, 0.0001676799999999999, 0.00016766699999999982,...</msg>
<status status="PASS" starttime="20201029 09:33:31.270" endtime="20201029 09:33:31.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.278" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:31.277" endtime="20201029 09:33:31.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.281" level="INFO">VALUE: [0.00016884699999999975, 0.00016769500000000243, 0.00016769399999999948, 0.00016769500000000243, 0.00016769500000000243, 0.00016769399999999948, 0.0001676799999999999, 0.00016766699999999982, 0.00016766600000000034, 0.0001676799999999999, 0.00016770899999999853, 0.0001677640000000008, 0.00016766600000000034, 0.00016765300000000025, 0.00016772199999999862, 0.00016775000000000123, 0.00016769399999999948, 0.0001677640000000008, 0.00016766700000000329, 0.0001676799999999999, 0.00016769500000000243, 0.00016776399999999733, 0.00016766600000000034, 0.00016770799999999905, 0.00016766699999999635, 0.00016770800000000252, 0.000167693999999996, 0.00016766700000000329, 0.00016769400000000295, 0.000167693999999996, 0.00016766700000000329, 0.0001676949999999955, 0.00016766700000000329, 0.00016767999999999644, 0.00016768100000000286, 0.000167693999999996, 0.00016768000000000338, 0.00016770899999999506, 0.00016762499999999764, 0.00016767999999999644, 0.00016769400000000295, 0.00016768099999999592, 0.00016769400000000295, 0.00016769400000000295, 0.00016766700000000329, 0.00016769400000000295, 0.00016766599999999687, 0.00016766700000000329, 0.000167693999999996, 0.0001676660000000038]</msg>
<status status="PASS" starttime="20201029 09:33:31.279" endtime="20201029 09:33:31.282"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.275" endtime="20201029 09:33:31.282"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.916" endtime="20201029 09:33:31.283"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.893" endtime="20201029 09:33:31.283"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:31.285" endtime="20201029 09:33:31.304"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.284" endtime="20201029 09:33:31.305"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.313" endtime="20201029 09:33:31.331"></status>
</kw>
<msg timestamp="20201029 09:33:31.332" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.312" endtime="20201029 09:33:31.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.334" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.333" endtime="20201029 09:33:31.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.335" endtime="20201029 09:33:31.337"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.309" endtime="20201029 09:33:31.337"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.307" endtime="20201029 09:33:31.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.344" endtime="20201029 09:33:31.653"></status>
</kw>
<msg timestamp="20201029 09:33:31.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017759333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017939444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.343" endtime="20201029 09:33:31.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017759333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017939444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.660" endtime="20201029 09:33:31.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.668" endtime="20201029 09:33:31.670"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.340" endtime="20201029 09:33:31.671"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.339" endtime="20201029 09:33:31.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:31.675" level="INFO">${PHILIP_RES} = [{'diff': 0.00018011100000000016}, {'diff': 0.0001789449999999998}, {'diff': 0.00017894400000000033}, {'diff': 0.00017897199999999946}, {'diff': 0.00017893100000000023}, {'diff': 0.0001789870000000019...</msg>
<status status="PASS" starttime="20201029 09:33:31.672" endtime="20201029 09:33:31.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:31.679" level="INFO">${RESULT} = {'diff': [0.00018011100000000016, 0.0001789449999999998, 0.00017894400000000033, 0.00017897199999999946, 0.00017893100000000023, 0.00017898700000000198, 0.00017897199999999946, 0.00017894399999999686,...</msg>
<status status="PASS" starttime="20201029 09:33:31.676" endtime="20201029 09:33:31.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.683" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:31.682" endtime="20201029 09:33:31.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.686" level="INFO">VALUE: [0.00018011100000000016, 0.0001789449999999998, 0.00017894400000000033, 0.00017897199999999946, 0.00017893100000000023, 0.00017898700000000198, 0.00017897199999999946, 0.00017894399999999686, 0.0001789449999999998, 0.0001789860000000025, 0.00017894400000000033, 0.00017893099999999676, 0.00017887500000000195, 0.0001789579999999999, 0.00017897199999999946, 0.00017894400000000033, 0.0001789449999999998, 0.00017897199999999946, 0.00017898599999999903, 0.00017898599999999903, 0.0001789449999999998, 0.00017894400000000033, 0.00017902799999999774, 0.0001789999999999986, 0.00017895899999999937, 0.00017893000000000076, 0.00017891600000000119, 0.0001789579999999999, 0.00017895899999999937, 0.0001789579999999999, 0.0001789579999999999, 0.00017895899999999937, 0.00017895899999999937, 0.00017897199999999946, 0.00017894400000000033, 0.00017895899999999937, 0.00017895899999999937, 0.00017894400000000033, 0.00017894400000000033, 0.0001789169999999972, 0.0001789860000000025, 0.0001789869999999985, 0.0001789579999999999, 0.00017895900000000284, 0.0001789030000000011, 0.00017894400000000033, 0.0001789579999999999, 0.00017888900000000152, 0.0001789030000000011, 0.00017897199999999946]</msg>
<status status="PASS" starttime="20201029 09:33:31.684" endtime="20201029 09:33:31.687"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.680" endtime="20201029 09:33:31.687"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.306" endtime="20201029 09:33:31.688"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.283" endtime="20201029 09:33:31.688"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:31.690" endtime="20201029 09:33:31.710"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.689" endtime="20201029 09:33:31.710"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.718" endtime="20201029 09:33:31.736"></status>
</kw>
<msg timestamp="20201029 09:33:31.737" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.717" endtime="20201029 09:33:31.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.739" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.738" endtime="20201029 09:33:31.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.740" endtime="20201029 09:33:31.743"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.714" endtime="20201029 09:33:31.743"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.712" endtime="20201029 09:33:31.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.750" endtime="20201029 09:33:32.036"></status>
</kw>
<msg timestamp="20201029 09:33:32.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017941944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018133694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.749" endtime="20201029 09:33:32.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017941944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018133694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.040" endtime="20201029 09:33:32.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.049" endtime="20201029 09:33:32.050"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.746" endtime="20201029 09:33:32.051"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.744" endtime="20201029 09:33:32.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:32.055" level="INFO">${PHILIP_RES} = [{'diff': 0.00019174999999999748}, {'diff': 0.00019054200000000188}, {'diff': 0.00019055599999999798}, {'diff': 0.00019056999999999755}, {'diff': 0.00019058400000000059}, {'diff': 0.000190570000000001...</msg>
<status status="PASS" starttime="20201029 09:33:32.052" endtime="20201029 09:33:32.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:32.059" level="INFO">${RESULT} = {'diff': [0.00019174999999999748, 0.00019054200000000188, 0.00019055599999999798, 0.00019056999999999755, 0.00019058400000000059, 0.00019057000000000102, 0.00019052799999999884, 0.00019055600000000145...</msg>
<status status="PASS" starttime="20201029 09:33:32.056" endtime="20201029 09:33:32.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.064" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:32.062" endtime="20201029 09:33:32.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.066" level="INFO">VALUE: [0.00019174999999999748, 0.00019054200000000188, 0.00019055599999999798, 0.00019056999999999755, 0.00019058400000000059, 0.00019057000000000102, 0.00019052799999999884, 0.00019055600000000145, 0.00019047200000000056, 0.00019055599999999798, 0.00019048600000000013, 0.00019055600000000145, 0.00019057000000000102, 0.0001906389999999994, 0.00019057000000000102, 0.00019054200000000188, 0.00019055600000000145, 0.00019056999999999755, 0.00019055600000000145, 0.00019055600000000145, 0.00019058299999999764, 0.00019056999999999755, 0.00019055600000000145, 0.00019056900000000154, 0.0001905419999999984, 0.00019055600000000145, 0.00019055600000000145, 0.00019056899999999807, 0.00019056899999999807, 0.0001905830000000011, 0.00019056900000000154, 0.0001905549999999985, 0.0001905549999999985, 0.0001905410000000024, 0.00019056900000000154, 0.00019054099999999893, 0.0001905549999999985, 0.0001905830000000011, 0.0001905549999999985, 0.00019056899999999807, 0.00019054099999999893, 0.00019056900000000154, 0.00019054099999999893, 0.00019051399999999927, 0.00019055500000000197, 0.00019061100000000025, 0.00019052799999999884, 0.0001904999999999997, 0.0001905410000000024, 0.00019056899999999807]</msg>
<status status="PASS" starttime="20201029 09:33:32.065" endtime="20201029 09:33:32.068"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.060" endtime="20201029 09:33:32.068"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.711" endtime="20201029 09:33:32.069"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.688" endtime="20201029 09:33:32.069"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:32.071" endtime="20201029 09:33:32.090"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.070" endtime="20201029 09:33:32.091"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.099" endtime="20201029 09:33:32.118"></status>
</kw>
<msg timestamp="20201029 09:33:32.118" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.098" endtime="20201029 09:33:32.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.121" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.119" endtime="20201029 09:33:32.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.122" endtime="20201029 09:33:32.123"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.095" endtime="20201029 09:33:32.124"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.093" endtime="20201029 09:33:32.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.131" endtime="20201029 09:33:32.416"></status>
</kw>
<msg timestamp="20201029 09:33:32.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017893556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018097236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.130" endtime="20201029 09:33:32.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017893556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018097236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.420" endtime="20201029 09:33:32.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.428" endtime="20201029 09:33:32.430"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.127" endtime="20201029 09:33:32.430"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.125" endtime="20201029 09:33:32.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:32.435" level="INFO">${PHILIP_RES} = [{'diff': 0.00020367999999999775}, {'diff': 0.00020258400000000218}, {'diff': 0.00020255599999999957}, {'diff': 0.00020252800000000043}, {'diff': 0.00020259700000000228}, {'diff': 0.000202542}, {'diff...</msg>
<status status="PASS" starttime="20201029 09:33:32.432" endtime="20201029 09:33:32.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:32.440" level="INFO">${RESULT} = {'diff': [0.00020367999999999775, 0.00020258400000000218, 0.00020255599999999957, 0.00020252800000000043, 0.00020259700000000228, 0.000202542, 0.000202542, 0.00020252800000000043, 0.000202555000000000...</msg>
<status status="PASS" starttime="20201029 09:33:32.436" endtime="20201029 09:33:32.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.444" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:32.443" endtime="20201029 09:33:32.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.446" level="INFO">VALUE: [0.00020367999999999775, 0.00020258400000000218, 0.00020255599999999957, 0.00020252800000000043, 0.00020259700000000228, 0.000202542, 0.000202542, 0.00020252800000000043, 0.0002025550000000001, 0.0002025839999999987, 0.0002025839999999987, 0.00020262500000000142, 0.00020254100000000053, 0.00020252799999999696, 0.000202542, 0.000202542, 0.0002025969999999988, 0.00020254100000000053, 0.00020248600000000172, 0.00020251400000000086, 0.00020254100000000053, 0.00020254100000000053, 0.00020252800000000043, 0.000202542, 0.000202542, 0.00020252800000000043, 0.00020252800000000043, 0.000202542, 0.000202542, 0.00020254100000000053, 0.00020249999999999782, 0.00020248599999999825, 0.00020252700000000096, 0.0002025969999999988, 0.000202542, 0.000202542, 0.0002025969999999988, 0.00020254100000000053, 0.00020249999999999782, 0.00020255600000000304, 0.00020252800000000043, 0.00020254100000000053, 0.000202542, 0.000202542, 0.000202542, 0.0002025550000000001, 0.00020255600000000304, 0.00020255599999999957, 0.000202542, 0.00020252700000000096]</msg>
<status status="PASS" starttime="20201029 09:33:32.445" endtime="20201029 09:33:32.447"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.440" endtime="20201029 09:33:32.448"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.092" endtime="20201029 09:33:32.448"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.069" endtime="20201029 09:33:32.448"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:32.451" endtime="20201029 09:33:32.470"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.449" endtime="20201029 09:33:32.471"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.479" endtime="20201029 09:33:32.499"></status>
</kw>
<msg timestamp="20201029 09:33:32.499" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.477" endtime="20201029 09:33:32.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.502" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.500" endtime="20201029 09:33:32.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.503" endtime="20201029 09:33:32.504"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.475" endtime="20201029 09:33:32.505"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.473" endtime="20201029 09:33:32.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.512" endtime="20201029 09:33:32.799"></status>
</kw>
<msg timestamp="20201029 09:33:32.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017840403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018056417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.510" endtime="20201029 09:33:32.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017840403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018056417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.803" endtime="20201029 09:33:32.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.811" endtime="20201029 09:33:32.813"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.508" endtime="20201029 09:33:32.813"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.506" endtime="20201029 09:33:32.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:32.818" level="INFO">${PHILIP_RES} = [{'diff': 0.00021601400000000048}, {'diff': 0.00021484800000000012}, {'diff': 0.0002148749999999998}, {'diff': 0.00021484699999999718}, {'diff': 0.00021486100000000022}, {'diff': 0.0002148749999999998...</msg>
<status status="PASS" starttime="20201029 09:33:32.815" endtime="20201029 09:33:32.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:32.822" level="INFO">${RESULT} = {'diff': [0.00021601400000000048, 0.00021484800000000012, 0.0002148749999999998, 0.00021484699999999718, 0.00021486100000000022, 0.0002148749999999998, 0.0002148749999999998, 0.00021484700000000065, 0...</msg>
<status status="PASS" starttime="20201029 09:33:32.819" endtime="20201029 09:33:32.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.826" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:32.825" endtime="20201029 09:33:32.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.829" level="INFO">VALUE: [0.00021601400000000048, 0.00021484800000000012, 0.0002148749999999998, 0.00021484699999999718, 0.00021486100000000022, 0.0002148749999999998, 0.0002148749999999998, 0.00021484700000000065, 0.00021490199999999945, 0.00021484800000000012, 0.00021486100000000022, 0.00021481899999999804, 0.00021480500000000194, 0.00021486100000000022, 0.00021486100000000022, 0.00021479199999999837, 0.00021486200000000316, 0.00021486100000000022, 0.0002147909999999989, 0.00021486100000000022, 0.00021486100000000022, 0.00021491599999999902, 0.00021486100000000022, 0.0002148619999999997, 0.0002148329999999976, 0.00021488899999999936, 0.00021486100000000022, 0.00021483300000000108, 0.00021486100000000022, 0.00021486099999999675, 0.00021486100000000022, 0.00021491700000000197, 0.00021486100000000022, 0.00021484700000000065, 0.0002148329999999976, 0.00021483300000000108, 0.0002148749999999998, 0.00021484800000000012, 0.00021483400000000055, 0.00021486100000000022, 0.0002148749999999998, 0.0002148749999999998, 0.00021486100000000022, 0.00021490199999999945, 0.00021484800000000012, 0.00021490299999999893, 0.0002148749999999998, 0.00021491700000000197, 0.00021490299999999893, 0.0002148749999999998]</msg>
<status status="PASS" starttime="20201029 09:33:32.827" endtime="20201029 09:33:32.829"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.823" endtime="20201029 09:33:32.830"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.471" endtime="20201029 09:33:32.830"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.449" endtime="20201029 09:33:32.831"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:32.833" endtime="20201029 09:33:32.852"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.832" endtime="20201029 09:33:32.853"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.861" endtime="20201029 09:33:32.882"></status>
</kw>
<msg timestamp="20201029 09:33:32.884" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.860" endtime="20201029 09:33:32.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.888" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.885" endtime="20201029 09:33:32.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.889" endtime="20201029 09:33:32.892"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.857" endtime="20201029 09:33:32.892"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.855" endtime="20201029 09:33:32.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.899" endtime="20201029 09:33:33.185"></status>
</kw>
<msg timestamp="20201029 09:33:33.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017909319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018138014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.898" endtime="20201029 09:33:33.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017909319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018138014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.190" endtime="20201029 09:33:33.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.198" endtime="20201029 09:33:33.199"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.895" endtime="20201029 09:33:33.200"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.893" endtime="20201029 09:33:33.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:33.204" level="INFO">${PHILIP_RES} = [{'diff': 0.00022869500000000098}, {'diff': 0.0002275139999999981}, {'diff': 0.00022751400000000158}, {'diff': 0.000227500000000002}, {'diff': 0.00022752800000000115}, {'diff': 0.00022751400000000158}...</msg>
<status status="PASS" starttime="20201029 09:33:33.201" endtime="20201029 09:33:33.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:33.208" level="INFO">${RESULT} = {'diff': [0.00022869500000000098, 0.0002275139999999981, 0.00022751400000000158, 0.000227500000000002, 0.00022752800000000115, 0.00022751400000000158, 0.0002275269999999982, 0.00022751400000000158, 0....</msg>
<status status="PASS" starttime="20201029 09:33:33.205" endtime="20201029 09:33:33.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.213" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:33.212" endtime="20201029 09:33:33.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.215" level="INFO">VALUE: [0.00022869500000000098, 0.0002275139999999981, 0.00022751400000000158, 0.000227500000000002, 0.00022752800000000115, 0.00022751400000000158, 0.0002275269999999982, 0.00022751400000000158, 0.00022751400000000158, 0.00022752800000000115, 0.0002275840000000029, 0.00022748599999999897, 0.00022752700000000167, 0.00022756900000000038, 0.00022752800000000115, 0.00022755600000000029, 0.000227500000000002, 0.00022752800000000115, 0.00022751400000000158, 0.00022749999999999854, 0.00022752799999999768, 0.00022751400000000158, 0.00022752800000000115, 0.00022745799999999983, 0.00022752799999999768, 0.0002275269999999982, 0.00022752700000000167, 0.00022744499999999973, 0.0002275139999999981, 0.00022749999999999854, 0.00022747200000000287, 0.00022755600000000029, 0.00022752800000000115, 0.0002275139999999981, 0.00022752800000000115, 0.00022754200000000072, 0.00022754200000000072, 0.00022751400000000158, 0.00022752799999999768, 0.00022759699999999952, 0.00022752800000000115, 0.00022754200000000072, 0.00022752799999999768, 0.00022752799999999768, 0.00022751400000000158, 0.00022752800000000115, 0.00022752700000000167, 0.0002275139999999981, 0.00022749999999999854, 0.00022752800000000115]</msg>
<status status="PASS" starttime="20201029 09:33:33.214" endtime="20201029 09:33:33.217"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.209" endtime="20201029 09:33:33.217"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.853" endtime="20201029 09:33:33.218"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.831" endtime="20201029 09:33:33.219"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:33.224" endtime="20201029 09:33:33.244"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.221" endtime="20201029 09:33:33.246"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.257" endtime="20201029 09:33:33.278"></status>
</kw>
<msg timestamp="20201029 09:33:33.278" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.255" endtime="20201029 09:33:33.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.281" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.279" endtime="20201029 09:33:33.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.282" endtime="20201029 09:33:33.284"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.252" endtime="20201029 09:33:33.284"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.250" endtime="20201029 09:33:33.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.292" endtime="20201029 09:33:33.579"></status>
</kw>
<msg timestamp="20201029 09:33:33.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021404625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021646319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.291" endtime="20201029 09:33:33.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021404625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021646319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.583" endtime="20201029 09:33:33.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.591" endtime="20201029 09:33:33.593"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.288" endtime="20201029 09:33:33.593"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.285" endtime="20201029 09:33:33.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:33.598" level="INFO">${PHILIP_RES} = [{'diff': 0.00024169400000000063}, {'diff': 0.00024055499999999994}, {'diff': 0.0002405559999999994}, {'diff': 0.00024054100000000037}, {'diff': 0.00024054199999999984}, {'diff': 0.0002405419999999998...</msg>
<status status="PASS" starttime="20201029 09:33:33.595" endtime="20201029 09:33:33.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:33.603" level="INFO">${RESULT} = {'diff': [0.00024169400000000063, 0.00024055499999999994, 0.0002405559999999994, 0.00024054100000000037, 0.00024054199999999984, 0.00024054199999999984, 0.00024055499999999994, 0.00024056999999999898,...</msg>
<status status="PASS" starttime="20201029 09:33:33.599" endtime="20201029 09:33:33.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.608" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:33.607" endtime="20201029 09:33:33.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.610" level="INFO">VALUE: [0.00024169400000000063, 0.00024055499999999994, 0.0002405559999999994, 0.00024054100000000037, 0.00024054199999999984, 0.00024054199999999984, 0.00024055499999999994, 0.00024056999999999898, 0.00024061099999999822, 0.0002405279999999968, 0.00024054199999999984, 0.00024050000000000113, 0.0002405559999999994, 0.00024054199999999984, 0.00024055499999999994, 0.0002405559999999994, 0.0002405689999999995, 0.0002405559999999994, 0.0002405279999999968, 0.00024054100000000037, 0.00024058399999999855, 0.00024052800000000027, 0.00024055499999999994, 0.00024047199999999852, 0.00024054100000000037, 0.00024052800000000027, 0.00024054199999999984, 0.00024054100000000037, 0.0002405559999999994, 0.00024052800000000027, 0.00024052800000000027, 0.00024054199999999984, 0.00024054100000000037, 0.00024052800000000027, 0.00024054199999999984, 0.00024051399999999723, 0.0002405559999999994, 0.00024045899999999842, 0.00024055499999999647, 0.00024055599999999594, 0.0002405409999999969, 0.0002405420000000033, 0.00024055600000000288, 0.00024054100000000384, 0.00024058400000000202, 0.00024052800000000374, 0.0002405409999999969, 0.00024055599999999594, 0.0002405409999999969, 0.00024055600000000288]</msg>
<status status="PASS" starttime="20201029 09:33:33.609" endtime="20201029 09:33:33.611"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.604" endtime="20201029 09:33:33.612"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.246" endtime="20201029 09:33:33.612"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.219" endtime="20201029 09:33:33.612"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:33.615" endtime="20201029 09:33:33.634"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.613" endtime="20201029 09:33:33.635"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.643" endtime="20201029 09:33:33.665"></status>
</kw>
<msg timestamp="20201029 09:33:33.665" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.642" endtime="20201029 09:33:33.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.668" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.667" endtime="20201029 09:33:33.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.669" endtime="20201029 09:33:33.671"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.639" endtime="20201029 09:33:33.671"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.637" endtime="20201029 09:33:33.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.679" endtime="20201029 09:33:33.978"></status>
</kw>
<msg timestamp="20201029 09:33:33.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018168167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018423236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.677" endtime="20201029 09:33:33.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018168167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018423236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.982" endtime="20201029 09:33:33.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.991" endtime="20201029 09:33:33.992"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.674" endtime="20201029 09:33:33.993"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.672" endtime="20201029 09:33:33.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:33.997" level="INFO">${PHILIP_RES} = [{'diff': 0.00025506900000000013}, {'diff': 0.0002539860000000012}, {'diff': 0.00025395899999999805}, {'diff': 0.00025390300000000324}, {'diff': 0.00025394500000000195}, {'diff': 0.0002539299999999994...</msg>
<status status="PASS" starttime="20201029 09:33:33.994" endtime="20201029 09:33:33.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:34.002" level="INFO">${RESULT} = {'diff': [0.00025506900000000013, 0.0002539860000000012, 0.00025395899999999805, 0.00025390300000000324, 0.00025394500000000195, 0.00025392999999999943, 0.00025391599999999986, 0.000253943999999999, 0...</msg>
<status status="PASS" starttime="20201029 09:33:33.998" endtime="20201029 09:33:34.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.006" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:34.005" endtime="20201029 09:33:34.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.009" level="INFO">VALUE: [0.00025506900000000013, 0.0002539860000000012, 0.00025395899999999805, 0.00025390300000000324, 0.00025394500000000195, 0.00025392999999999943, 0.00025391599999999986, 0.000253943999999999, 0.0002539309999999989, 0.0002539170000000028, 0.0002539310000000024, 0.00025390299999999977, 0.0002539579999999986, 0.000253943999999999, 0.000253943999999999, 0.00025395800000000204, 0.0002539170000000028, 0.00025394500000000195, 0.00025394500000000195, 0.0002539309999999989, 0.00025392999999999943, 0.00025392999999999943, 0.0002539440000000025, 0.00025392999999999943, 0.0002539310000000024, 0.00025395899999999805, 0.00025391699999999934, 0.0002539449999999985, 0.00025392999999999943, 0.0002539440000000025, 0.0002539440000000025, 0.0002539309999999989, 0.0002539309999999989, 0.00025391699999999934, 0.0002539449999999985, 0.0002539440000000025, 0.00025392999999999943, 0.000253943999999999, 0.000253943999999999, 0.0002540140000000003, 0.00025391699999999934, 0.0002539170000000028, 0.00025394500000000195, 0.0002539309999999989, 0.0002538890000000002, 0.00025392999999999943, 0.0002539310000000024, 0.00025391699999999934, 0.00025397199999999814, 0.0002539449999999985]</msg>
<status status="PASS" starttime="20201029 09:33:34.008" endtime="20201029 09:33:34.010"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.003" endtime="20201029 09:33:34.010"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.635" endtime="20201029 09:33:34.011"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.613" endtime="20201029 09:33:34.011"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:34.013" endtime="20201029 09:33:34.033"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.012" endtime="20201029 09:33:34.033"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.042" endtime="20201029 09:33:34.064"></status>
</kw>
<msg timestamp="20201029 09:33:34.064" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.040" endtime="20201029 09:33:34.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.067" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.065" endtime="20201029 09:33:34.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.068" endtime="20201029 09:33:34.071"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.038" endtime="20201029 09:33:34.071"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.036" endtime="20201029 09:33:34.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.079" endtime="20201029 09:33:34.365"></status>
</kw>
<msg timestamp="20201029 09:33:34.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018168694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018437486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.077" endtime="20201029 09:33:34.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018168694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018437486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.370" endtime="20201029 09:33:34.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.378" endtime="20201029 09:33:34.380"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.074" endtime="20201029 09:33:34.380"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.072" endtime="20201029 09:33:34.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:34.385" level="INFO">${PHILIP_RES} = [{'diff': 0.00026879200000000034}, {'diff': 0.00026765299999999964}, {'diff': 0.00026763900000000007}, {'diff': 0.00026765299999999964}, {'diff': 0.00026763900000000007}, {'diff': 0.000267639000000000...</msg>
<status status="PASS" starttime="20201029 09:33:34.382" endtime="20201029 09:33:34.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:34.389" level="INFO">${RESULT} = {'diff': [0.00026879200000000034, 0.00026765299999999964, 0.00026763900000000007, 0.00026765299999999964, 0.00026763900000000007, 0.00026763900000000007, 0.00026765299999999964, 0.00026763900000000007...</msg>
<status status="PASS" starttime="20201029 09:33:34.386" endtime="20201029 09:33:34.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.394" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:34.393" endtime="20201029 09:33:34.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.396" level="INFO">VALUE: [0.00026879200000000034, 0.00026765299999999964, 0.00026763900000000007, 0.00026765299999999964, 0.00026763900000000007, 0.00026763900000000007, 0.00026765299999999964, 0.00026763900000000007, 0.00026765299999999964, 0.00026763900000000007, 0.00026763900000000007, 0.0002676799999999993, 0.0002675830000000018, 0.00026769499999999835, 0.00026763900000000007, 0.00026763900000000007, 0.00026765299999999964, 0.0002676669999999992, 0.00026761099999999746, 0.0002676530000000031, 0.0002676669999999992, 0.00026763900000000007, 0.0002676809999999988, 0.00026765299999999964, 0.00026763900000000007, 0.00026763900000000007, 0.00026765299999999964, 0.0002676800000000028, 0.00026765299999999964, 0.0002676120000000004, 0.00026765299999999964, 0.00026766599999999974, 0.00026766599999999974, 0.00026766599999999974, 0.00026763799999999713, 0.00026765299999999964, 0.00026765299999999964, 0.0002676250000000005, 0.00026765200000000017, 0.00026765200000000017, 0.00026766599999999974, 0.0002676670000000027, 0.00026768100000000225, 0.0002676809999999988, 0.0002676669999999992, 0.0002676669999999992, 0.0002676809999999988, 0.00026765299999999964, 0.00026763900000000007, 0.00026765299999999964]</msg>
<status status="PASS" starttime="20201029 09:33:34.395" endtime="20201029 09:33:34.398"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.390" endtime="20201029 09:33:34.399"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.034" endtime="20201029 09:33:34.399"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.011" endtime="20201029 09:33:34.399"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:34.402" endtime="20201029 09:33:34.421"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.400" endtime="20201029 09:33:34.422"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.430" endtime="20201029 09:33:34.453"></status>
</kw>
<msg timestamp="20201029 09:33:34.453" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.429" endtime="20201029 09:33:34.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.456" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.454" endtime="20201029 09:33:34.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.457" endtime="20201029 09:33:34.459"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.426" endtime="20201029 09:33:34.459"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.424" endtime="20201029 09:33:34.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.466" endtime="20201029 09:33:34.751"></status>
</kw>
<msg timestamp="20201029 09:33:34.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018262139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018545028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.465" endtime="20201029 09:33:34.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018262139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018545028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.756" endtime="20201029 09:33:34.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.764" endtime="20201029 09:33:34.766"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.462" endtime="20201029 09:33:34.767"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.460" endtime="20201029 09:33:34.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:34.771" level="INFO">${PHILIP_RES} = [{'diff': 0.00028288900000000144}, {'diff': 0.0002817359999999977}, {'diff': 0.00028170800000000204}, {'diff': 0.0002817220000000016}, {'diff': 0.0002817360000000012}, {'diff': 0.00028170799999999857}...</msg>
<status status="PASS" starttime="20201029 09:33:34.768" endtime="20201029 09:33:34.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:34.776" level="INFO">${RESULT} = {'diff': [0.00028288900000000144, 0.0002817359999999977, 0.00028170800000000204, 0.0002817220000000016, 0.0002817360000000012, 0.00028170799999999857, 0.00028170799999999857, 0.0002817360000000012, 0....</msg>
<status status="PASS" starttime="20201029 09:33:34.772" endtime="20201029 09:33:34.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.781" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:34.780" endtime="20201029 09:33:34.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.783" level="INFO">VALUE: [0.00028288900000000144, 0.0002817359999999977, 0.00028170800000000204, 0.0002817220000000016, 0.0002817360000000012, 0.00028170799999999857, 0.00028170799999999857, 0.0002817360000000012, 0.0002817360000000012, 0.00028175000000000075, 0.00028172199999999814, 0.0002817359999999977, 0.0002817359999999977, 0.0002817369999999972, 0.0002817360000000012, 0.0002817360000000012, 0.0002817359999999977, 0.00028172199999999814, 0.0002817220000000016, 0.0002817220000000016, 0.0002817360000000012, 0.0002817640000000003, 0.0002817359999999977, 0.00028175000000000075, 0.0002817360000000012, 0.00028169400000000247, 0.00028175000000000075, 0.0002817360000000012, 0.00028172199999999814, 0.0002817360000000012, 0.00028175000000000075, 0.0002817360000000012, 0.0002817360000000012, 0.00028172199999999814, 0.00028172199999999814, 0.0002817220000000016, 0.0002817220000000016, 0.00028179199999999946, 0.0002817359999999977, 0.00028175000000000075, 0.000281693999999999, 0.0002817220000000016, 0.00028173600000000465, 0.00028173600000000465, 0.00028173600000000465, 0.00028173600000000465, 0.0002817359999999977, 0.00028172199999999814, 0.00028170799999999857, 0.0002817499999999973]</msg>
<status status="PASS" starttime="20201029 09:33:34.782" endtime="20201029 09:33:34.784"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.777" endtime="20201029 09:33:34.785"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.422" endtime="20201029 09:33:34.785"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.400" endtime="20201029 09:33:34.785"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:34.788" endtime="20201029 09:33:34.807"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.786" endtime="20201029 09:33:34.808"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.816" endtime="20201029 09:33:34.840"></status>
</kw>
<msg timestamp="20201029 09:33:34.840" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.815" endtime="20201029 09:33:34.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.843" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.841" endtime="20201029 09:33:34.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.844" endtime="20201029 09:33:34.845"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.812" endtime="20201029 09:33:34.846"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.810" endtime="20201029 09:33:34.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.853" endtime="20201029 09:33:35.143"></status>
</kw>
<msg timestamp="20201029 09:33:35.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018246431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018543806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.852" endtime="20201029 09:33:35.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018246431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018543806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.147" endtime="20201029 09:33:35.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.155" endtime="20201029 09:33:35.156"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.849" endtime="20201029 09:33:35.157"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.847" endtime="20201029 09:33:35.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:35.161" level="INFO">${PHILIP_RES} = [{'diff': 0.00029737499999999903}, {'diff': 0.0002961520000000009}, {'diff': 0.0002962499999999979}, {'diff': 0.0002961390000000008}, {'diff': 0.00029618099999999953}, {'diff': 0.00029615199999999745}...</msg>
<status status="PASS" starttime="20201029 09:33:35.158" endtime="20201029 09:33:35.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:35.165" level="INFO">${RESULT} = {'diff': [0.00029737499999999903, 0.0002961520000000009, 0.0002962499999999979, 0.0002961390000000008, 0.00029618099999999953, 0.00029615199999999745, 0.00029616699999999996, 0.00029618099999999953, 0...</msg>
<status status="PASS" starttime="20201029 09:33:35.162" endtime="20201029 09:33:35.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.170" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:35.169" endtime="20201029 09:33:35.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.172" level="INFO">VALUE: [0.00029737499999999903, 0.0002961520000000009, 0.0002962499999999979, 0.0002961390000000008, 0.00029618099999999953, 0.00029615199999999745, 0.00029616699999999996, 0.00029618099999999953, 0.00029616699999999996, 0.00029616699999999996, 0.0002961660000000005, 0.0002961939999999996, 0.0002961530000000004, 0.0002961390000000008, 0.00029615199999999745, 0.0002961530000000004, 0.0002961530000000004, 0.00029616699999999996, 0.0002961530000000004, 0.0002961379999999979, 0.00029607000000000244, 0.00029618099999999953, 0.0002961530000000004, 0.00029616699999999996, 0.000296165999999997, 0.00029618099999999953, 0.00029616699999999996, 0.00029618099999999953, 0.00029618000000000005, 0.0002961660000000005, 0.00029616699999999996, 0.00029616699999999996, 0.0002961660000000005, 0.00029622199999999876, 0.0002961530000000004, 0.0002961390000000008, 0.00029609699999999864, 0.00029618000000000005, 0.0002961660000000005, 0.0002961390000000008, 0.0002961530000000004, 0.00029616699999999996, 0.0002961520000000009, 0.0002961660000000005, 0.00029616699999999996, 0.00029620899999999867, 0.00029616699999999996, 0.0002961660000000005, 0.00029618099999999953, 0.00029618100000000647]</msg>
<status status="PASS" starttime="20201029 09:33:35.171" endtime="20201029 09:33:35.173"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.166" endtime="20201029 09:33:35.174"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.809" endtime="20201029 09:33:35.174"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.786" endtime="20201029 09:33:35.174"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:35.177" endtime="20201029 09:33:35.196"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.175" endtime="20201029 09:33:35.196"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.205" endtime="20201029 09:33:35.229"></status>
</kw>
<msg timestamp="20201029 09:33:35.230" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.203" endtime="20201029 09:33:35.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.232" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.231" endtime="20201029 09:33:35.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.233" endtime="20201029 09:33:35.236"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.200" endtime="20201029 09:33:35.236"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.199" endtime="20201029 09:33:35.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.243" endtime="20201029 09:33:35.553"></status>
</kw>
<msg timestamp="20201029 09:33:35.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01778325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018095347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:35.242" endtime="20201029 09:33:35.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01778325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018095347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:35.557" endtime="20201029 09:33:35.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.565" endtime="20201029 09:33:35.566"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.239" endtime="20201029 09:33:35.567"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.237" endtime="20201029 09:33:35.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:35.571" level="INFO">${PHILIP_RES} = [{'diff': 0.00031209700000000076}, {'diff': 0.00031095800000000007}, {'diff': 0.0003110140000000018}, {'diff': 0.00031095800000000007}, {'diff': 0.0003110140000000018}, {'diff': 0.0003109310000000004}...</msg>
<status status="PASS" starttime="20201029 09:33:35.568" endtime="20201029 09:33:35.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:35.575" level="INFO">${RESULT} = {'diff': [0.00031209700000000076, 0.00031095800000000007, 0.0003110140000000018, 0.00031095800000000007, 0.0003110140000000018, 0.0003109310000000004, 0.00031097199999999964, 0.00031095899999999954, 0...</msg>
<status status="PASS" starttime="20201029 09:33:35.572" endtime="20201029 09:33:35.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.580" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:35.578" endtime="20201029 09:33:35.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.582" level="INFO">VALUE: [0.00031209700000000076, 0.00031095800000000007, 0.0003110140000000018, 0.00031095800000000007, 0.0003110140000000018, 0.0003109310000000004, 0.00031097199999999964, 0.00031095899999999954, 0.00031095800000000007, 0.00031095899999999954, 0.00031095800000000007, 0.00031095899999999954, 0.00031095800000000007, 0.0003109720000000031, 0.00031095800000000007, 0.00031095800000000007, 0.00031097199999999964, 0.00031095800000000007, 0.00031094499999999997, 0.00031095800000000007, 0.00031095899999999954, 0.00031097199999999964, 0.0003109310000000004, 0.00031093000000000093, 0.00031094499999999997, 0.00031097199999999964, 0.00031097199999999964, 0.0003109310000000004, 0.00031091700000000083, 0.0003109859999999992, 0.0003109579999999966, 0.00031094499999999997, 0.0003109720000000031, 0.00031094499999999997, 0.0003109720000000031, 0.00031095899999999954, 0.0003109720000000031, 0.00031095899999999954, 0.00031097199999999964, 0.00031095899999999607, 0.00031095800000000007, 0.00031094499999999997, 0.00031093000000000093, 0.0003109440000000005, 0.00031097199999999964, 0.0003109440000000005, 0.00031094499999999997, 0.00031095800000000007, 0.00031097199999999964, 0.00031095800000000007]</msg>
<status status="PASS" starttime="20201029 09:33:35.581" endtime="20201029 09:33:35.583"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.576" endtime="20201029 09:33:35.584"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.197" endtime="20201029 09:33:35.584"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.174" endtime="20201029 09:33:35.585"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:35.587" endtime="20201029 09:33:35.606"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.585" endtime="20201029 09:33:35.607"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.615" endtime="20201029 09:33:35.641"></status>
</kw>
<msg timestamp="20201029 09:33:35.641" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.613" endtime="20201029 09:33:35.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.644" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.642" endtime="20201029 09:33:35.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.645" endtime="20201029 09:33:35.646"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.611" endtime="20201029 09:33:35.647"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.609" endtime="20201029 09:33:35.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.654" endtime="20201029 09:33:35.940"></status>
</kw>
<msg timestamp="20201029 09:33:35.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017626028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017953278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.652" endtime="20201029 09:33:35.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017626028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017953278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.946" endtime="20201029 09:33:35.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.955" endtime="20201029 09:33:35.957"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.650" endtime="20201029 09:33:35.958"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.648" endtime="20201029 09:33:35.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:35.962" level="INFO">${PHILIP_RES} = [{'diff': 0.00032725000000000115}, {'diff': 0.0003260970000000009}, {'diff': 0.0003260970000000009}, {'diff': 0.0003260970000000009}, {'diff': 0.0003260830000000013}, {'diff': 0.00032608299999999785},...</msg>
<status status="PASS" starttime="20201029 09:33:35.959" endtime="20201029 09:33:35.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:35.967" level="INFO">${RESULT} = {'diff': [0.00032725000000000115, 0.0003260970000000009, 0.0003260970000000009, 0.0003260970000000009, 0.0003260830000000013, 0.00032608299999999785, 0.00032606900000000175, 0.0003261389999999996, 0.0...</msg>
<status status="PASS" starttime="20201029 09:33:35.963" endtime="20201029 09:33:35.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.972" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:35.971" endtime="20201029 09:33:35.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.974" level="INFO">VALUE: [0.00032725000000000115, 0.0003260970000000009, 0.0003260970000000009, 0.0003260970000000009, 0.0003260830000000013, 0.00032608299999999785, 0.00032606900000000175, 0.0003261389999999996, 0.00032604099999999914, 0.0003260830000000013, 0.00032611100000000046, 0.0003260840000000008, 0.00032609800000000036, 0.0003260840000000008, 0.00032615299999999917, 0.0003260559999999982, 0.0003260700000000012, 0.0003260830000000013, 0.00032608299999999785, 0.0003260970000000009, 0.0003260830000000013, 0.0003260830000000013, 0.0003260969999999974, 0.0003260830000000013, 0.0003260830000000013, 0.0003260969999999974, 0.0003260689999999983, 0.00032611100000000046, 0.0003260830000000013, 0.00032608299999999785, 0.0003260970000000009, 0.0003260970000000009, 0.0003260979999999969, 0.0003260700000000012, 0.00032609800000000036, 0.0003260979999999969, 0.00032609800000000036, 0.0003260830000000013, 0.0003260830000000013, 0.00032609700000000436, 0.000326110999999997, 0.000326110999999997, 0.00032608299999999785, 0.0003261670000000022, 0.0003260689999999983, 0.00032615300000000264, 0.00032613900000000307, 0.0003260689999999983, 0.0003260969999999974, 0.00032608299999999785]</msg>
<status status="PASS" starttime="20201029 09:33:35.973" endtime="20201029 09:33:35.975"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.968" endtime="20201029 09:33:35.975"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.607" endtime="20201029 09:33:35.976"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.585" endtime="20201029 09:33:35.976"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:35.978" endtime="20201029 09:33:35.998"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.977" endtime="20201029 09:33:35.998"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.006" endtime="20201029 09:33:36.033"></status>
</kw>
<msg timestamp="20201029 09:33:36.033" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.005" endtime="20201029 09:33:36.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.036" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.034" endtime="20201029 09:33:36.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.037" endtime="20201029 09:33:36.038"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.002" endtime="20201029 09:33:36.039"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.000" endtime="20201029 09:33:36.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.046" endtime="20201029 09:33:36.334"></status>
</kw>
<msg timestamp="20201029 09:33:36.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017795667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018138389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.044" endtime="20201029 09:33:36.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017795667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018138389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.338" endtime="20201029 09:33:36.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.346" endtime="20201029 09:33:36.348"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.042" endtime="20201029 09:33:36.349"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.040" endtime="20201029 09:33:36.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:36.353" level="INFO">${PHILIP_RES} = [{'diff': 0.00034272200000000017}, {'diff': 0.00034158399999999894}, {'diff': 0.00034158399999999894}, {'diff': 0.0003415689999999999}, {'diff': 0.00034155500000000033}, {'diff': 0.0003415550000000003...</msg>
<status status="PASS" starttime="20201029 09:33:36.350" endtime="20201029 09:33:36.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:36.358" level="INFO">${RESULT} = {'diff': [0.00034272200000000017, 0.00034158399999999894, 0.00034158399999999894, 0.0003415689999999999, 0.00034155500000000033, 0.00034155500000000033, 0.0003415559999999998, 0.0003415699999999994, 0...</msg>
<status status="PASS" starttime="20201029 09:33:36.354" endtime="20201029 09:33:36.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.362" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:36.361" endtime="20201029 09:33:36.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.365" level="INFO">VALUE: [0.00034272200000000017, 0.00034158399999999894, 0.00034158399999999894, 0.0003415689999999999, 0.00034155500000000033, 0.00034155500000000033, 0.0003415559999999998, 0.0003415699999999994, 0.0003415559999999998, 0.00034158299999999947, 0.0003415689999999999, 0.0003416119999999981, 0.0003415699999999994, 0.0003415699999999994, 0.0003415689999999999, 0.00034155500000000033, 0.00034158299999999947, 0.0003415699999999994, 0.0003415970000000025, 0.00034158299999999947, 0.0003416109999999986, 0.00034158299999999947, 0.00034158299999999947, 0.0003415699999999994, 0.0003415560000000033, 0.00034158299999999947, 0.00034155500000000033, 0.00034155500000000033, 0.0003415559999999998, 0.0003415699999999994, 0.00034158300000000294, 0.0003415689999999999, 0.0003415140000000011, 0.0003415689999999999, 0.0003415699999999994, 0.0003415000000000015, 0.00034155500000000033, 0.0003415689999999999, 0.00034158299999999947, 0.0003415830000000064, 0.0003415840000000059, 0.0003415699999999994, 0.0003415689999999999, 0.00034159699999999904, 0.00034158299999999947, 0.0003415699999999994, 0.0003415699999999994, 0.00034158399999999894, 0.00034155500000000033, 0.0003415689999999999]</msg>
<status status="PASS" starttime="20201029 09:33:36.363" endtime="20201029 09:33:36.366"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.359" endtime="20201029 09:33:36.366"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.999" endtime="20201029 09:33:36.367"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.976" endtime="20201029 09:33:36.367"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:36.369" endtime="20201029 09:33:36.389"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.368" endtime="20201029 09:33:36.389"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.397" endtime="20201029 09:33:36.425"></status>
</kw>
<msg timestamp="20201029 09:33:36.425" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.396" endtime="20201029 09:33:36.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.428" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.426" endtime="20201029 09:33:36.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.429" endtime="20201029 09:33:36.431"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.393" endtime="20201029 09:33:36.432"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.391" endtime="20201029 09:33:36.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.439" endtime="20201029 09:33:36.724"></status>
</kw>
<msg timestamp="20201029 09:33:36.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017882569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018241111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.437" endtime="20201029 09:33:36.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017882569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018241111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.728" endtime="20201029 09:33:36.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.736" endtime="20201029 09:33:36.738"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.434" endtime="20201029 09:33:36.738"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.433" endtime="20201029 09:33:36.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:36.743" level="INFO">${PHILIP_RES} = [{'diff': 0.0003585419999999999}, {'diff': 0.00035740300000000266}, {'diff': 0.0003573889999999996}, {'diff': 0.0003574029999999992}, {'diff': 0.00035738800000000015}, {'diff': 0.0003574029999999992},...</msg>
<status status="PASS" starttime="20201029 09:33:36.740" endtime="20201029 09:33:36.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:36.747" level="INFO">${RESULT} = {'diff': [0.0003585419999999999, 0.00035740300000000266, 0.0003573889999999996, 0.0003574029999999992, 0.00035738800000000015, 0.0003574029999999992, 0.0003574029999999992, 0.0003573470000000009, 0.00...</msg>
<status status="PASS" starttime="20201029 09:33:36.744" endtime="20201029 09:33:36.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.751" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:36.750" endtime="20201029 09:33:36.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.754" level="INFO">VALUE: [0.0003585419999999999, 0.00035740300000000266, 0.0003573889999999996, 0.0003574029999999992, 0.00035738800000000015, 0.0003574029999999992, 0.0003574029999999992, 0.0003573470000000009, 0.0003573889999999996, 0.00035741699999999876, 0.0003573889999999996, 0.00035737500000000005, 0.0003573890000000031, 0.0003574020000000032, 0.00035741700000000223, 0.00035741699999999876, 0.00035741699999999876, 0.00035742999999999886, 0.0003574029999999992, 0.0003573889999999996, 0.00035741699999999876, 0.00035733399999999735, 0.00035740300000000266, 0.00035740300000000266, 0.0003574159999999993, 0.00035742999999999886, 0.0003574019999999997, 0.0003574029999999992, 0.0003573889999999996, 0.000357457999999998, 0.0003573889999999996, 0.0003574029999999992, 0.0003573889999999996, 0.0003574029999999992, 0.0003574029999999992, 0.0003574159999999993, 0.00035737500000000005, 0.0003573889999999996, 0.0003574300000000058, 0.00035741600000000623, 0.00035738900000000656, 0.0003574449999999979, 0.0003573889999999996, 0.0003574029999999992, 0.00035742999999999886, 0.0003573889999999996, 0.0003574029999999992, 0.00035742999999999886, 0.00035738800000000015, 0.00035741699999999876]</msg>
<status status="PASS" starttime="20201029 09:33:36.752" endtime="20201029 09:33:36.755"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.748" endtime="20201029 09:33:36.756"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.390" endtime="20201029 09:33:36.756"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.367" endtime="20201029 09:33:36.756"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:36.759" endtime="20201029 09:33:36.778"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.757" endtime="20201029 09:33:36.779"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.787" endtime="20201029 09:33:36.815"></status>
</kw>
<msg timestamp="20201029 09:33:36.816" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.785" endtime="20201029 09:33:36.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.818" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.817" endtime="20201029 09:33:36.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.819" endtime="20201029 09:33:36.821"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.783" endtime="20201029 09:33:36.821"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.781" endtime="20201029 09:33:36.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.828" endtime="20201029 09:33:37.114"></status>
</kw>
<msg timestamp="20201029 09:33:37.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017767847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018142625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.827" endtime="20201029 09:33:37.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017767847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018142625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.118" endtime="20201029 09:33:37.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.126" endtime="20201029 09:33:37.128"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.824" endtime="20201029 09:33:37.128"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.822" endtime="20201029 09:33:37.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:37.133" level="INFO">${PHILIP_RES} = [{'diff': 0.0003747779999999992}, {'diff': 0.0003736529999999981}, {'diff': 0.00037362499999999896}, {'diff': 0.00037361200000000233}, {'diff': 0.0003736109999999994}, {'diff': 0.00037362499999999896}...</msg>
<status status="PASS" starttime="20201029 09:33:37.130" endtime="20201029 09:33:37.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:37.138" level="INFO">${RESULT} = {'diff': [0.0003747779999999992, 0.0003736529999999981, 0.00037362499999999896, 0.00037361200000000233, 0.0003736109999999994, 0.00037362499999999896, 0.0003736109999999994, 0.00037357000000000015, 0....</msg>
<status status="PASS" starttime="20201029 09:33:37.134" endtime="20201029 09:33:37.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.142" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:37.141" endtime="20201029 09:33:37.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.144" level="INFO">VALUE: [0.0003747779999999992, 0.0003736529999999981, 0.00037362499999999896, 0.00037361200000000233, 0.0003736109999999994, 0.00037362499999999896, 0.0003736109999999994, 0.00037357000000000015, 0.00037366700000000114, 0.00037354100000000154, 0.00037363899999999853, 0.0003735979999999993, 0.0003736109999999994, 0.0003736109999999994, 0.0003735969999999998, 0.0003735969999999998, 0.00037362499999999896, 0.00037358300000000025, 0.0003735970000000033, 0.0003736519999999986, 0.00037363899999999853, 0.0003735550000000011, 0.00037363899999999853, 0.0003735829999999968, 0.0003735560000000006, 0.0003735969999999998, 0.0003736109999999994, 0.00037362499999999896, 0.00037359800000000276, 0.0003736529999999981, 0.0003736109999999994, 0.0003736109999999994, 0.0003735979999999993, 0.00037361100000000286, 0.00037363899999999506, 0.00037361100000000286, 0.00037361100000000286, 0.000373639000000002, 0.00037361100000000286, 0.0003735829999999968, 0.00037362500000000243, 0.00037359800000000276, 0.0003736109999999959, 0.0003735970000000033, 0.00037359699999999635, 0.0003735840000000032, 0.000373639000000002, 0.0003736109999999959, 0.00037361100000000286, 0.0003736109999999959]</msg>
<status status="PASS" starttime="20201029 09:33:37.143" endtime="20201029 09:33:37.145"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.138" endtime="20201029 09:33:37.146"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.779" endtime="20201029 09:33:37.146"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.757" endtime="20201029 09:33:37.146"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:37.149" endtime="20201029 09:33:37.168"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.147" endtime="20201029 09:33:37.169"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.177" endtime="20201029 09:33:37.206"></status>
</kw>
<msg timestamp="20201029 09:33:37.206" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.175" endtime="20201029 09:33:37.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.209" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.207" endtime="20201029 09:33:37.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.210" endtime="20201029 09:33:37.211"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.173" endtime="20201029 09:33:37.212"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.171" endtime="20201029 09:33:37.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.219" endtime="20201029 09:33:37.506"></status>
</kw>
<msg timestamp="20201029 09:33:37.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017925528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018316875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.217" endtime="20201029 09:33:37.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017925528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018316875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.510" endtime="20201029 09:33:37.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.520" endtime="20201029 09:33:37.523"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.215" endtime="20201029 09:33:37.524"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.213" endtime="20201029 09:33:37.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:37.533" level="INFO">${PHILIP_RES} = [{'diff': 0.0003913470000000002}, {'diff': 0.0003901389999999977}, {'diff': 0.0003901389999999977}, {'diff': 0.0003901530000000007}, {'diff': 0.0003900829999999994}, {'diff': 0.0003901530000000007}, {...</msg>
<status status="PASS" starttime="20201029 09:33:37.527" endtime="20201029 09:33:37.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:37.542" level="INFO">${RESULT} = {'diff': [0.0003913470000000002, 0.0003901389999999977, 0.0003901389999999977, 0.0003901530000000007, 0.0003900829999999994, 0.0003901530000000007, 0.00039013900000000115, 0.0003901670000000003, 0.000...</msg>
<status status="PASS" starttime="20201029 09:33:37.535" endtime="20201029 09:33:37.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.551" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:37.549" endtime="20201029 09:33:37.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.556" level="INFO">VALUE: [0.0003913470000000002, 0.0003901389999999977, 0.0003901389999999977, 0.0003901530000000007, 0.0003900829999999994, 0.0003901530000000007, 0.00039013900000000115, 0.0003901670000000003, 0.00039015299999999725, 0.0003901670000000003, 0.0003901800000000004, 0.00039015200000000125, 0.0003901530000000007, 0.0003901530000000007, 0.00039013900000000115, 0.0003901670000000003, 0.00039019499999999943, 0.0003901389999999977, 0.0003901389999999977, 0.0003901249999999981, 0.0003901530000000007, 0.0003901530000000007, 0.00039013900000000115, 0.0003901250000000016, 0.0003901660000000008, 0.0003901530000000007, 0.0003901669999999968, 0.00039015299999999725, 0.0003901530000000007, 0.0003901530000000007, 0.0003901530000000007, 0.0003901389999999977, 0.00039020900000000247, 0.0003901519999999978, 0.0003900829999999994, 0.0003901389999999977, 0.00039012500000000505, 0.0003901389999999977, 0.00039015299999999725, 0.00039016599999999735, 0.0003901389999999977, 0.0003901390000000046, 0.0003901669999999968, 0.00039016700000000376, 0.0003901389999999977, 0.0003901660000000043, 0.0003901519999999978, 0.00039016599999999735, 0.0003901390000000046, 0.0003901799999999969]</msg>
<status status="PASS" starttime="20201029 09:33:37.553" endtime="20201029 09:33:37.558"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.544" endtime="20201029 09:33:37.559"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.169" endtime="20201029 09:33:37.560"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.147" endtime="20201029 09:33:37.560"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:37.565" endtime="20201029 09:33:37.588"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.562" endtime="20201029 09:33:37.589"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.606" endtime="20201029 09:33:37.637"></status>
</kw>
<msg timestamp="20201029 09:33:37.637" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.603" endtime="20201029 09:33:37.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.640" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.638" endtime="20201029 09:33:37.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.641" endtime="20201029 09:33:37.643"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.597" endtime="20201029 09:33:37.644"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.593" endtime="20201029 09:33:37.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.651" endtime="20201029 09:33:37.936"></status>
</kw>
<msg timestamp="20201029 09:33:37.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031241736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031649944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.649" endtime="20201029 09:33:37.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031241736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031649944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.941" endtime="20201029 09:33:37.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.949" endtime="20201029 09:33:37.950"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.647" endtime="20201029 09:33:37.951"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.645" endtime="20201029 09:33:37.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:37.955" level="INFO">${PHILIP_RES} = [{'diff': 0.0004082080000000002}, {'diff': 0.00040705499999999645}, {'diff': 0.0004070280000000037}, {'diff': 0.0004070139999999972}, {'diff': 0.00040705600000000286}, {'diff': 0.00040706900000000296}...</msg>
<status status="PASS" starttime="20201029 09:33:37.952" endtime="20201029 09:33:37.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:37.959" level="INFO">${RESULT} = {'diff': [0.0004082080000000002, 0.00040705499999999645, 0.0004070280000000037, 0.0004070139999999972, 0.00040705600000000286, 0.00040706900000000296, 0.0004070269999999973, 0.0004070280000000037, 0.0...</msg>
<status status="PASS" starttime="20201029 09:33:37.956" endtime="20201029 09:33:37.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.964" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:37.962" endtime="20201029 09:33:37.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.966" level="INFO">VALUE: [0.0004082080000000002, 0.00040705499999999645, 0.0004070280000000037, 0.0004070139999999972, 0.00040705600000000286, 0.00040706900000000296, 0.0004070269999999973, 0.0004070280000000037, 0.0004070410000000038, 0.0004070559999999959, 0.00040698599999999807, 0.0004070279999999968, 0.00040699999999999764, 0.0004070410000000038, 0.00040709800000000157, 0.00040698699999999755, 0.0004070280000000037, 0.0004070279999999968, 0.00040702700000000425, 0.00040707000000000243, 0.00040704199999999635, 0.0004070410000000038, 0.00040705600000000286, 0.0004070139999999972, 0.0004070000000000046, 0.00040704199999999635, 0.0004070279999999968, 0.0004070420000000033, 0.0004070139999999972, 0.0004070420000000033, 0.0004070410000000038, 0.0004070279999999968, 0.0004070420000000033, 0.0004070409999999969, 0.00040704199999999635, 0.0004070280000000037, 0.00040704199999999635, 0.0004070279999999968, 0.00040702700000000425, 0.00040704199999999635, 0.0004070410000000038, 0.0004070280000000037, 0.0004070279999999968, 0.0004070420000000033, 0.0004070139999999972, 0.0004070409999999969, 0.0004070280000000037, 0.0004070139999999972, 0.00040705499999999645, 0.0004070280000000037]</msg>
<status status="PASS" starttime="20201029 09:33:37.965" endtime="20201029 09:33:37.967"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.960" endtime="20201029 09:33:37.968"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.590" endtime="20201029 09:33:37.968"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.561" endtime="20201029 09:33:37.969"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:37.971" endtime="20201029 09:33:37.990"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.970" endtime="20201029 09:33:37.991"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.999" endtime="20201029 09:33:38.030"></status>
</kw>
<msg timestamp="20201029 09:33:38.030" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.997" endtime="20201029 09:33:38.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.033" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.031" endtime="20201029 09:33:38.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.034" endtime="20201029 09:33:38.035"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.995" endtime="20201029 09:33:38.036"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.993" endtime="20201029 09:33:38.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.043" endtime="20201029 09:33:38.330"></status>
</kw>
<msg timestamp="20201029 09:33:38.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017767472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018192889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.041" endtime="20201029 09:33:38.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017767472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018192889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.339" endtime="20201029 09:33:38.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.356" endtime="20201029 09:33:38.360"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.039" endtime="20201029 09:33:38.361"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.037" endtime="20201029 09:33:38.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:38.370" level="INFO">${PHILIP_RES} = [{'diff': 0.00042541700000000085}, {'diff': 0.000424250000000001}, {'diff': 0.00042434699999999853}, {'diff': 0.00042427800000000016}, {'diff': 0.00042427800000000016}, {'diff': 0.00042427800000000016...</msg>
<status status="PASS" starttime="20201029 09:33:38.363" endtime="20201029 09:33:38.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:38.381" level="INFO">${RESULT} = {'diff': [0.00042541700000000085, 0.000424250000000001, 0.00042434699999999853, 0.00042427800000000016, 0.00042427800000000016, 0.00042427800000000016, 0.00042427800000000016, 0.0004242640000000006, 0...</msg>
<status status="PASS" starttime="20201029 09:33:38.372" endtime="20201029 09:33:38.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.391" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:38.389" endtime="20201029 09:33:38.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.397" level="INFO">VALUE: [0.00042541700000000085, 0.000424250000000001, 0.00042434699999999853, 0.00042427800000000016, 0.00042427800000000016, 0.00042427800000000016, 0.00042427800000000016, 0.0004242640000000006, 0.0004242770000000007, 0.0004242640000000006, 0.0004242920000000032, 0.0004242640000000006, 0.00042429100000000025, 0.0004242640000000006, 0.0004242919999999997, 0.00042426299999999764, 0.0004242640000000006, 0.0004242919999999997, 0.0004242769999999972, 0.00042427800000000016, 0.0004242639999999971, 0.00042427800000000016, 0.0004243189999999994, 0.00042430600000000276, 0.000424250000000001, 0.00042429100000000025, 0.0004242640000000006, 0.0004242220000000019, 0.0004242919999999997, 0.0004242769999999972, 0.0004243189999999994, 0.00042427800000000016, 0.0004242770000000007, 0.00042427800000000016, 0.0004243059999999993, 0.00042427800000000016, 0.0004242770000000007, 0.00042427800000000016, 0.00042427800000000016, 0.0004242770000000007, 0.00042426299999999417, 0.0004242640000000006, 0.0004242919999999997, 0.0004242770000000007, 0.00042427800000000016, 0.0004242640000000006, 0.0004242640000000006, 0.0004242919999999997, 0.00042427800000000016, 0.0004242220000000019]</msg>
<status status="PASS" starttime="20201029 09:33:38.394" endtime="20201029 09:33:38.398"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.384" endtime="20201029 09:33:38.399"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.991" endtime="20201029 09:33:38.401"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.969" endtime="20201029 09:33:38.401"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:38.406" endtime="20201029 09:33:38.427"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.403" endtime="20201029 09:33:38.427"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.435" endtime="20201029 09:33:38.468"></status>
</kw>
<msg timestamp="20201029 09:33:38.469" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.434" endtime="20201029 09:33:38.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.471" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.470" endtime="20201029 09:33:38.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.472" endtime="20201029 09:33:38.474"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.431" endtime="20201029 09:33:38.474"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.429" endtime="20201029 09:33:38.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.481" endtime="20201029 09:33:38.770"></status>
</kw>
<msg timestamp="20201029 09:33:38.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018075444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018518486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.480" endtime="20201029 09:33:38.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018075444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018518486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.774" endtime="20201029 09:33:38.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.782" endtime="20201029 09:33:38.784"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.477" endtime="20201029 09:33:38.785"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.475" endtime="20201029 09:33:38.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:38.789" level="INFO">${PHILIP_RES} = [{'diff': 0.00044304200000000113}, {'diff': 0.00044188900000000086}, {'diff': 0.00044190300000000043}, {'diff': 0.00044190200000000096}, {'diff': 0.0004418610000000017}, {'diff': 0.0004418749999999978...</msg>
<status status="PASS" starttime="20201029 09:33:38.786" endtime="20201029 09:33:38.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:38.793" level="INFO">${RESULT} = {'diff': [0.00044304200000000113, 0.00044188900000000086, 0.00044190300000000043, 0.00044190200000000096, 0.0004418610000000017, 0.0004418749999999978, 0.0004418880000000014, 0.00044181899999999955, 0...</msg>
<status status="PASS" starttime="20201029 09:33:38.790" endtime="20201029 09:33:38.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.798" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:38.796" endtime="20201029 09:33:38.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.800" level="INFO">VALUE: [0.00044304200000000113, 0.00044188900000000086, 0.00044190300000000043, 0.00044190200000000096, 0.0004418610000000017, 0.0004418749999999978, 0.0004418880000000014, 0.00044181899999999955, 0.0004419019999999975, 0.0004418750000000013, 0.00044188900000000086, 0.0004419019999999975, 0.00044190200000000096, 0.0004418880000000014, 0.0004419019999999975, 0.00044190300000000043, 0.00044190300000000043, 0.00044188900000000086, 0.0004418750000000013, 0.0004418339999999986, 0.0004418749999999978, 0.0004418339999999986, 0.00044188900000000086, 0.000441917, 0.0004418750000000013, 0.00044188900000000086, 0.00044188900000000086, 0.00044190300000000043, 0.00044188900000000086, 0.00044188900000000086, 0.0004418889999999939, 0.00044188900000000086, 0.00044195799999999924, 0.00044188900000000086, 0.0004418750000000013, 0.00044188900000000086, 0.00044190300000000043, 0.000441917, 0.0004418750000000013, 0.0004418750000000013, 0.00044190300000000043, 0.00044188900000000086, 0.0004418610000000017, 0.0004419309999999996, 0.00044190300000000043, 0.00044190300000000043, 0.0004418610000000017, 0.0004418750000000013, 0.00044187499999999436, 0.00044188900000000086]</msg>
<status status="PASS" starttime="20201029 09:33:38.799" endtime="20201029 09:33:38.801"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.794" endtime="20201029 09:33:38.801"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.428" endtime="20201029 09:33:38.802"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.402" endtime="20201029 09:33:38.802"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:38.804" endtime="20201029 09:33:38.823"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.803" endtime="20201029 09:33:38.824"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.832" endtime="20201029 09:33:38.865"></status>
</kw>
<msg timestamp="20201029 09:33:38.865" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.831" endtime="20201029 09:33:38.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.868" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.866" endtime="20201029 09:33:38.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.869" endtime="20201029 09:33:38.871"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.828" endtime="20201029 09:33:38.872"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.826" endtime="20201029 09:33:38.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.879" endtime="20201029 09:33:39.174"></status>
</kw>
<msg timestamp="20201029 09:33:39.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017820042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018281028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.877" endtime="20201029 09:33:39.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017820042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018281028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:39.184" endtime="20201029 09:33:39.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.202" endtime="20201029 09:33:39.205"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.875" endtime="20201029 09:33:39.206"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.873" endtime="20201029 09:33:39.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:39.216" level="INFO">${PHILIP_RES} = [{'diff': 0.00046098600000000003}, {'diff': 0.0004598890000000015}, {'diff': 0.00045987500000000195}, {'diff': 0.00045983299999999977}, {'diff': 0.0004598749999999985}, {'diff': 0.00045983299999999977...</msg>
<status status="PASS" starttime="20201029 09:33:39.209" endtime="20201029 09:33:39.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:39.224" level="INFO">${RESULT} = {'diff': [0.00046098600000000003, 0.0004598890000000015, 0.00045987500000000195, 0.00045983299999999977, 0.0004598749999999985, 0.00045983299999999977, 0.0004598609999999989, 0.0004598470000000028, 0....</msg>
<status status="PASS" starttime="20201029 09:33:39.218" endtime="20201029 09:33:39.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.232" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:39.231" endtime="20201029 09:33:39.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.235" level="INFO">VALUE: [0.00046098600000000003, 0.0004598890000000015, 0.00045987500000000195, 0.00045983299999999977, 0.0004598749999999985, 0.00045983299999999977, 0.0004598609999999989, 0.0004598470000000028, 0.00045987500000000195, 0.00045983399999999924, 0.0004598199999999997, 0.00045984699999999934, 0.00045983299999999977, 0.00045983299999999977, 0.00045984699999999934, 0.0004598470000000028, 0.0004598470000000028, 0.00045984699999999934, 0.0004598749999999985, 0.00045983299999999977, 0.00045984699999999934, 0.00045983399999999924, 0.00045983399999999924, 0.0004598340000000027, 0.0004598199999999997, 0.00045984699999999934, 0.00045983299999999977, 0.00045983300000000324, 0.00045988899999999805, 0.00045984699999999934, 0.00045983299999999977, 0.0004598190000000002, 0.0004598609999999989, 0.0004598199999999997, 0.00045983399999999924, 0.0004598479999999988, 0.0004598340000000062, 0.00045984699999999934, 0.0004598190000000002, 0.00045984699999999934, 0.00045983299999999977, 0.00045983299999999977, 0.00045983299999999977, 0.0004598470000000063, 0.00045984699999999934, 0.00045983399999999924, 0.00045984699999999934, 0.0004598199999999997, 0.00045983399999999924, 0.00045984699999999934]</msg>
<status status="PASS" starttime="20201029 09:33:39.233" endtime="20201029 09:33:39.236"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.226" endtime="20201029 09:33:39.237"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.825" endtime="20201029 09:33:39.237"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.802" endtime="20201029 09:33:39.237"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:39.240" endtime="20201029 09:33:39.259"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.238" endtime="20201029 09:33:39.260"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.268" endtime="20201029 09:33:39.301"></status>
</kw>
<msg timestamp="20201029 09:33:39.301" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:39.266" endtime="20201029 09:33:39.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.304" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:39.303" endtime="20201029 09:33:39.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.305" endtime="20201029 09:33:39.307"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.264" endtime="20201029 09:33:39.307"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.262" endtime="20201029 09:33:39.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.314" endtime="20201029 09:33:39.600"></status>
</kw>
<msg timestamp="20201029 09:33:39.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017860847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018340139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:39.313" endtime="20201029 09:33:39.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017860847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018340139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:39.604" endtime="20201029 09:33:39.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.613" endtime="20201029 09:33:39.614"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.310" endtime="20201029 09:33:39.615"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.308" endtime="20201029 09:33:39.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:39.619" level="INFO">${PHILIP_RES} = [{'diff': 0.0004792919999999992}, {'diff': 0.0004781950000000007}, {'diff': 0.000478153000000002}, {'diff': 0.000478153000000002}, {'diff': 0.0004781390000000024}, {'diff': 0.00047819399999999776}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:39.616" endtime="20201029 09:33:39.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:39.624" level="INFO">${RESULT} = {'diff': [0.0004792919999999992, 0.0004781950000000007, 0.000478153000000002, 0.000478153000000002, 0.0004781390000000024, 0.00047819399999999776, 0.00047813899999999895, 0.00047809700000000024, 0.000...</msg>
<status status="PASS" starttime="20201029 09:33:39.620" endtime="20201029 09:33:39.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.629" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:39.628" endtime="20201029 09:33:39.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.632" level="INFO">VALUE: [0.0004792919999999992, 0.0004781950000000007, 0.000478153000000002, 0.000478153000000002, 0.0004781390000000024, 0.00047819399999999776, 0.00047813899999999895, 0.00047809700000000024, 0.00047813899999999895, 0.000478153000000002, 0.00047813899999999895, 0.00047812500000000285, 0.0004781249999999994, 0.0004781249999999994, 0.0004781249999999994, 0.0004781249999999994, 0.000478153000000002, 0.0004781379999999995, 0.0004781390000000024, 0.000478153000000002, 0.00047813899999999895, 0.00047813899999999895, 0.00047813899999999895, 0.0004781249999999994, 0.00047813899999999895, 0.0004781529999999985, 0.0004781799999999947, 0.0004780839999999967, 0.0004781389999999955, 0.0004781249999999959, 0.0004781249999999959, 0.00047820900000000027, 0.00047813800000000295, 0.00047812500000000285, 0.0004781390000000024, 0.00047813800000000295, 0.00047812500000000285, 0.0004781390000000024, 0.00047813800000000295, 0.000478153000000002, 0.0004781390000000024, 0.0004781249999999959, 0.00047811099999999634, 0.0004781389999999955, 0.0004781519999999956, 0.000478153000000002, 0.00047806899999999763, 0.00047813800000000295, 0.0004781390000000024, 0.00047812500000000285]</msg>
<status status="PASS" starttime="20201029 09:33:39.630" endtime="20201029 09:33:39.632"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.625" endtime="20201029 09:33:39.633"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.260" endtime="20201029 09:33:39.633"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.238" endtime="20201029 09:33:39.634"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:39.636" endtime="20201029 09:33:39.655"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.635" endtime="20201029 09:33:39.656"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.665" endtime="20201029 09:33:39.699"></status>
</kw>
<msg timestamp="20201029 09:33:39.699" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:39.663" endtime="20201029 09:33:39.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.702" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:39.701" endtime="20201029 09:33:39.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.703" endtime="20201029 09:33:39.705"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.660" endtime="20201029 09:33:39.705"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.658" endtime="20201029 09:33:39.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.713" endtime="20201029 09:33:40.020"></status>
</kw>
<msg timestamp="20201029 09:33:40.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018148889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018646833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:39.711" endtime="20201029 09:33:40.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018148889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018646833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.029" endtime="20201029 09:33:40.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.043" endtime="20201029 09:33:40.045"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.708" endtime="20201029 09:33:40.045"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.706" endtime="20201029 09:33:40.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:40.050" level="INFO">${PHILIP_RES} = [{'diff': 0.0004979440000000002}, {'diff': 0.0004967909999999999}, {'diff': 0.000496820000000002}, {'diff': 0.0004967919999999994}, {'diff': 0.0004968469999999982}, {'diff': 0.0004967220000000015}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:40.047" endtime="20201029 09:33:40.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:40.054" level="INFO">${RESULT} = {'diff': [0.0004979440000000002, 0.0004967909999999999, 0.000496820000000002, 0.0004967919999999994, 0.0004968469999999982, 0.0004967220000000015, 0.0004967779999999998, 0.0004967779999999998, 0.00049...</msg>
<status status="PASS" starttime="20201029 09:33:40.051" endtime="20201029 09:33:40.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.059" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:40.057" endtime="20201029 09:33:40.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.061" level="INFO">VALUE: [0.0004979440000000002, 0.0004967909999999999, 0.000496820000000002, 0.0004967919999999994, 0.0004968469999999982, 0.0004967220000000015, 0.0004967779999999998, 0.0004967779999999998, 0.0004967779999999998, 0.0004967770000000003, 0.0004968059999999989, 0.0004967779999999998, 0.0004967920000000028, 0.0004967910000000034, 0.0004967920000000028, 0.0004967779999999998, 0.0004968059999999989, 0.0004967909999999999, 0.0004967500000000007, 0.0004967779999999998, 0.0004967360000000011, 0.0004967640000000002, 0.0004968049999999995, 0.0004968060000000024, 0.0004967919999999994, 0.000496708999999998, 0.0004967769999999969, 0.0004967779999999963, 0.000496820000000002, 0.0004967779999999963, 0.0004967909999999964, 0.0004967640000000037, 0.0004967780000000033, 0.0004967920000000028, 0.0004967770000000038, 0.0004967920000000028, 0.0004968340000000016, 0.0004967640000000037, 0.0004968050000000029, 0.0004967920000000028, 0.0004967640000000037, 0.0004967780000000033, 0.0004967629999999973, 0.0004967909999999964, 0.0004967920000000028, 0.0004967779999999963, 0.0004967229999999975, 0.0004967769999999969, 0.0004968059999999955, 0.0004968610000000012]</msg>
<status status="PASS" starttime="20201029 09:33:40.060" endtime="20201029 09:33:40.062"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.055" endtime="20201029 09:33:40.062"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.657" endtime="20201029 09:33:40.063"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.634" endtime="20201029 09:33:40.063"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:40.066" endtime="20201029 09:33:40.085"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.064" endtime="20201029 09:33:40.086"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.094" endtime="20201029 09:33:40.130"></status>
</kw>
<msg timestamp="20201029 09:33:40.130" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.092" endtime="20201029 09:33:40.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.133" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.131" endtime="20201029 09:33:40.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.134" endtime="20201029 09:33:40.137"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.090" endtime="20201029 09:33:40.137"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.088" endtime="20201029 09:33:40.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.144" endtime="20201029 09:33:40.431"></status>
</kw>
<msg timestamp="20201029 09:33:40.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018196556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018713514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.143" endtime="20201029 09:33:40.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018196556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018713514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.435" endtime="20201029 09:33:40.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.444" endtime="20201029 09:33:40.446"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.140" endtime="20201029 09:33:40.446"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.138" endtime="20201029 09:33:40.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:40.451" level="INFO">${PHILIP_RES} = [{'diff': 0.0005169580000000014}, {'diff': 0.0005158049999999977}, {'diff': 0.0005158609999999994}, {'diff': 0.0005158200000000002}, {'diff': 0.0005158050000000011}, {'diff': 0.0005158050000000011}, {...</msg>
<status status="PASS" starttime="20201029 09:33:40.447" endtime="20201029 09:33:40.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:40.455" level="INFO">${RESULT} = {'diff': [0.0005169580000000014, 0.0005158049999999977, 0.0005158609999999994, 0.0005158200000000002, 0.0005158050000000011, 0.0005158050000000011, 0.0005158060000000006, 0.0005158060000000006, 0.0005...</msg>
<status status="PASS" starttime="20201029 09:33:40.452" endtime="20201029 09:33:40.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.459" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:40.458" endtime="20201029 09:33:40.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.462" level="INFO">VALUE: [0.0005169580000000014, 0.0005158049999999977, 0.0005158609999999994, 0.0005158200000000002, 0.0005158050000000011, 0.0005158050000000011, 0.0005158060000000006, 0.0005158060000000006, 0.0005158060000000006, 0.0005158190000000007, 0.0005158330000000003, 0.0005158200000000002, 0.0005158200000000002, 0.0005157359999999993, 0.0005157909999999981, 0.0005158060000000006, 0.0005158750000000024, 0.0005157639999999984, 0.0005158050000000011, 0.0005158060000000006, 0.0005158060000000006, 0.000515792000000001, 0.0005157500000000023, 0.0005158060000000041, 0.0005157640000000019, 0.0005157220000000032, 0.0005158050000000011, 0.0005158049999999942, 0.0005158060000000006, 0.0005157499999999954, 0.000515792000000001, 0.0005158050000000011, 0.0005158050000000011, 0.000515792000000001, 0.0005158619999999989, 0.0005158050000000011, 0.0005157500000000023, 0.0005158060000000006, 0.0005158200000000002, 0.0005158050000000011, 0.0005158189999999938, 0.0005157500000000023, 0.0005157909999999946, 0.0005158050000000011, 0.0005157910000000016, 0.0005158190000000007, 0.0005158060000000006, 0.000515792000000001, 0.0005158190000000007, 0.0005158330000000003]</msg>
<status status="PASS" starttime="20201029 09:33:40.460" endtime="20201029 09:33:40.463"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.456" endtime="20201029 09:33:40.464"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.086" endtime="20201029 09:33:40.465"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.063" endtime="20201029 09:33:40.465"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:40.467" endtime="20201029 09:33:40.487"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.466" endtime="20201029 09:33:40.487"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.496" endtime="20201029 09:33:40.532"></status>
</kw>
<msg timestamp="20201029 09:33:40.532" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.494" endtime="20201029 09:33:40.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.535" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.534" endtime="20201029 09:33:40.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.536" endtime="20201029 09:33:40.538"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.491" endtime="20201029 09:33:40.539"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.489" endtime="20201029 09:33:40.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.546" endtime="20201029 09:33:40.832"></status>
</kw>
<msg timestamp="20201029 09:33:40.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018113431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018649736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.544" endtime="20201029 09:33:40.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018113431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018649736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.836" endtime="20201029 09:33:40.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.844" endtime="20201029 09:33:40.846"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.541" endtime="20201029 09:33:40.847"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.540" endtime="20201029 09:33:40.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:40.851" level="INFO">${PHILIP_RES} = [{'diff': 0.0005363050000000008}, {'diff': 0.0005351660000000001}, {'diff': 0.0005351520000000005}, {'diff': 0.0005351520000000005}, {'diff': 0.0005351520000000005}, {'diff': 0.0005351520000000005}, {...</msg>
<status status="PASS" starttime="20201029 09:33:40.848" endtime="20201029 09:33:40.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:40.856" level="INFO">${RESULT} = {'diff': [0.0005363050000000008, 0.0005351660000000001, 0.0005351520000000005, 0.0005351520000000005, 0.0005351520000000005, 0.0005351520000000005, 0.0005351390000000004, 0.000535153, 0.00053517999999...</msg>
<status status="PASS" starttime="20201029 09:33:40.852" endtime="20201029 09:33:40.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.861" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:40.860" endtime="20201029 09:33:40.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.863" level="INFO">VALUE: [0.0005363050000000008, 0.0005351660000000001, 0.0005351520000000005, 0.0005351520000000005, 0.0005351520000000005, 0.0005351520000000005, 0.0005351390000000004, 0.000535153, 0.0005351799999999997, 0.000535153, 0.0005351390000000004, 0.0005351669999999996, 0.0005352080000000023, 0.0005351390000000004, 0.000535153, 0.000535153, 0.000535153, 0.0005351669999999996, 0.000535153, 0.000535153, 0.0005351670000000031, 0.0005351669999999996, 0.0005351530000000035, 0.0005351530000000035, 0.0005351530000000035, 0.0005351530000000035, 0.0005351529999999965, 0.0005351659999999966, 0.0005352360000000014, 0.0005351660000000036, 0.000535152000000004, 0.0005351940000000027, 0.0005351379999999975, 0.0005351249999999974, 0.0005351519999999971, 0.0005351529999999965, 0.0005351940000000027, 0.0005351390000000039, 0.0005351249999999974, 0.0005351529999999965, 0.0005351939999999958, 0.0005351809999999957, 0.0005351530000000035, 0.0005351530000000035, 0.0005351670000000031, 0.0005351529999999965, 0.0005351529999999965, 0.0005351949999999953, 0.000535138999999997, 0.0005351390000000039]</msg>
<status status="PASS" starttime="20201029 09:33:40.862" endtime="20201029 09:33:40.864"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.857" endtime="20201029 09:33:40.864"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.488" endtime="20201029 09:33:40.865"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.465" endtime="20201029 09:33:40.865"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:40.868" endtime="20201029 09:33:40.887"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.866" endtime="20201029 09:33:40.888"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.896" endtime="20201029 09:33:40.934"></status>
</kw>
<msg timestamp="20201029 09:33:40.934" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.895" endtime="20201029 09:33:40.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.937" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.935" endtime="20201029 09:33:40.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.938" endtime="20201029 09:33:40.940"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.892" endtime="20201029 09:33:40.940"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.890" endtime="20201029 09:33:40.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.948" endtime="20201029 09:33:41.235"></status>
</kw>
<msg timestamp="20201029 09:33:41.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018284861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018840847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.946" endtime="20201029 09:33:41.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018284861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018840847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:41.239" endtime="20201029 09:33:41.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.247" endtime="20201029 09:33:41.249"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.943" endtime="20201029 09:33:41.250"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.941" endtime="20201029 09:33:41.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:41.254" level="INFO">${PHILIP_RES} = [{'diff': 0.0005559860000000014}, {'diff': 0.0005548889999999994}, {'diff': 0.0005548889999999994}, {'diff': 0.0005548889999999994}, {'diff': 0.0005548619999999997}, {'diff': 0.0005548749999999998}, {...</msg>
<status status="PASS" starttime="20201029 09:33:41.251" endtime="20201029 09:33:41.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:41.258" level="INFO">${RESULT} = {'diff': [0.0005559860000000014, 0.0005548889999999994, 0.0005548889999999994, 0.0005548889999999994, 0.0005548619999999997, 0.0005548749999999998, 0.0005548749999999998, 0.0005548610000000002, 0.0005...</msg>
<status status="PASS" starttime="20201029 09:33:41.255" endtime="20201029 09:33:41.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.263" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:41.262" endtime="20201029 09:33:41.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.265" level="INFO">VALUE: [0.0005559860000000014, 0.0005548889999999994, 0.0005548889999999994, 0.0005548889999999994, 0.0005548619999999997, 0.0005548749999999998, 0.0005548749999999998, 0.0005548610000000002, 0.0005548480000000001, 0.0005548749999999998, 0.0005548610000000002, 0.0005548610000000002, 0.0005548749999999998, 0.0005548610000000002, 0.0005548610000000002, 0.0005549030000000024, 0.0005548610000000002, 0.0005549160000000025, 0.0005548610000000002, 0.0005548610000000002, 0.0005548609999999968, 0.0005548609999999968, 0.0005548610000000037, 0.0005548470000000041, 0.0005548469999999972, 0.0005548469999999972, 0.0005548609999999968, 0.000554819000000005, 0.0005548750000000033, 0.0005548609999999968, 0.0005548749999999963, 0.0005548329999999976, 0.0005548610000000037, 0.0005548750000000033, 0.0005548609999999968, 0.0005548609999999968, 0.0005548749999999963, 0.0005548610000000037, 0.0005548470000000041, 0.0005548329999999976, 0.0005548469999999972, 0.000554917000000002, 0.0005548609999999968, 0.0005548610000000037, 0.0005548189999999981, 0.0005548469999999972, 0.0005548609999999968, 0.0005548610000000037, 0.0005548610000000037, 0.0005548620000000032]</msg>
<status status="PASS" starttime="20201029 09:33:41.264" endtime="20201029 09:33:41.266"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.259" endtime="20201029 09:33:41.267"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.888" endtime="20201029 09:33:41.267"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.865" endtime="20201029 09:33:41.267"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.710" endtime="20201029 09:33:41.268"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:20.282" endtime="20201029 09:33:41.268" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:33:00.264" endtime="20201029 09:33:41.277"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 09:32:58.014" endtime="20201029 09:33:41.308"></status>
</suite>
<statistics>
<total>
<stat pass="10" fail="0">Critical Tests</stat>
<stat pass="10" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="10" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="10" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="10" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
