<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 15:51:26.624" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.204" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:51:27.212" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:51:28.451" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:51:27.202" endtime="20201030 15:51:28.452"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.454" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:51:28.453" endtime="20201030 15:51:28.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.201" endtime="20201030 15:51:28.455"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:28.457" endtime="20201030 15:51:28.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.456" endtime="20201030 15:51:28.679"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.692" endtime="20201030 15:51:28.706"></status>
</kw>
<msg timestamp="20201030 15:51:28.706" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.690" endtime="20201030 15:51:28.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.709" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.707" endtime="20201030 15:51:28.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.712" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:28.710" endtime="20201030 15:51:28.712"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:28.688" endtime="20201030 15:51:28.713"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:28.685" endtime="20201030 15:51:28.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.684" endtime="20201030 15:51:28.714"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:28.718" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:28.718" endtime="20201030 15:51:28.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.715" endtime="20201030 15:51:28.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.683" endtime="20201030 15:51:28.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.683" endtime="20201030 15:51:28.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.720" endtime="20201030 15:51:28.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.681" endtime="20201030 15:51:28.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.723" endtime="20201030 15:51:28.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.680" endtime="20201030 15:51:28.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.199" endtime="20201030 15:51:28.725"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:28.731" endtime="20201030 15:51:28.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.730" endtime="20201030 15:51:28.751"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.765" endtime="20201030 15:51:28.779"></status>
</kw>
<msg timestamp="20201030 15:51:28.779" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.763" endtime="20201030 15:51:28.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.782" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.780" endtime="20201030 15:51:28.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.785" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:28.783" endtime="20201030 15:51:28.785"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:28.760" endtime="20201030 15:51:28.786"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:28.758" endtime="20201030 15:51:28.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.756" endtime="20201030 15:51:28.787"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:28.790" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:28.790" endtime="20201030 15:51:28.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.788" endtime="20201030 15:51:28.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.755" endtime="20201030 15:51:28.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.755" endtime="20201030 15:51:28.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.792" endtime="20201030 15:51:28.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.753" endtime="20201030 15:51:28.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.752" endtime="20201030 15:51:28.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.728" endtime="20201030 15:51:28.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.802" endtime="20201030 15:51:28.813"></status>
</kw>
<msg timestamp="20201030 15:51:28.813" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.800" endtime="20201030 15:51:28.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.815" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.814" endtime="20201030 15:51:28.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.817" endtime="20201030 15:51:28.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.797" endtime="20201030 15:51:28.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.796" endtime="20201030 15:51:28.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.823" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 15:51:28.822" endtime="20201030 15:51:28.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.825" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 15:51:28.824" endtime="20201030 15:51:28.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.820" endtime="20201030 15:51:28.826"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:28.726" endtime="20201030 15:51:28.826" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:51:26.746" endtime="20201030 15:51:28.829"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.880" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:51:28.888" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:51:30.109" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:51:28.879" endtime="20201030 15:51:30.110"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.113" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:51:30.111" endtime="20201030 15:51:30.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.877" endtime="20201030 15:51:30.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:30.116" endtime="20201030 15:51:30.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.114" endtime="20201030 15:51:30.338"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.350" endtime="20201030 15:51:30.365"></status>
</kw>
<msg timestamp="20201030 15:51:30.365" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.349" endtime="20201030 15:51:30.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.368" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.366" endtime="20201030 15:51:30.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.371" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:30.369" endtime="20201030 15:51:30.371"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:30.346" endtime="20201030 15:51:30.372"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:30.344" endtime="20201030 15:51:30.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.343" endtime="20201030 15:51:30.372"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:30.376" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:30.376" endtime="20201030 15:51:30.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.373" endtime="20201030 15:51:30.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.342" endtime="20201030 15:51:30.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.341" endtime="20201030 15:51:30.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.378" endtime="20201030 15:51:30.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.340" endtime="20201030 15:51:30.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.381" endtime="20201030 15:51:30.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.339" endtime="20201030 15:51:30.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.876" endtime="20201030 15:51:30.383"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:30.391" endtime="20201030 15:51:30.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.387" endtime="20201030 15:51:30.413"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.431" endtime="20201030 15:51:30.445"></status>
</kw>
<msg timestamp="20201030 15:51:30.445" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.429" endtime="20201030 15:51:30.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.448" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.447" endtime="20201030 15:51:30.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.451" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:30.450" endtime="20201030 15:51:30.452"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:30.427" endtime="20201030 15:51:30.452"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:30.425" endtime="20201030 15:51:30.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.423" endtime="20201030 15:51:30.453"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:30.457" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:30.456" endtime="20201030 15:51:30.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.454" endtime="20201030 15:51:30.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.422" endtime="20201030 15:51:30.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.422" endtime="20201030 15:51:30.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.459" endtime="20201030 15:51:30.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.420" endtime="20201030 15:51:30.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.414" endtime="20201030 15:51:30.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.386" endtime="20201030 15:51:30.461"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.470" endtime="20201030 15:51:30.480"></status>
</kw>
<msg timestamp="20201030 15:51:30.480" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.468" endtime="20201030 15:51:30.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.483" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.481" endtime="20201030 15:51:30.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.484" endtime="20201030 15:51:30.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.466" endtime="20201030 15:51:30.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.464" endtime="20201030 15:51:30.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.493" endtime="20201030 15:51:30.768"></status>
</kw>
<msg timestamp="20201030 15:51:30.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067748722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067752056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:30.491" endtime="20201030 15:51:30.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067748722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067752056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:30.771" endtime="20201030 15:51:30.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.776" endtime="20201030 15:51:30.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.489" endtime="20201030 15:51:30.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.487" endtime="20201030 15:51:30.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:30.782" level="INFO">${RESULT} = [{'diff': 3.3340000000076087e-06}, {'diff': 3.1669999999983656e-06}, {'diff': 3.4300000000125896e-06}, {'diff': 2.847000000000266e-06}, {'diff': 2.6800000000049007e-06}, {'diff': 2.860999999992897e-06...</msg>
<status status="PASS" starttime="20201030 15:51:30.779" endtime="20201030 15:51:30.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:30.786" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.3340000000076087e-06, 3.1669999999983656e-06, 3.4300000000125896e-06, 2.847000000000266e-06, 2.6800000000049007e-06, 2.860999999992897e-06, 2.583000000000446e-06, 3.4720000000043605e-06, 3...</msg>
<status status="PASS" starttime="20201030 15:51:30.783" endtime="20201030 15:51:30.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.790" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:30.789" endtime="20201030 15:51:30.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.792" level="INFO">VALUE: [3.3340000000076087e-06, 3.1669999999983656e-06, 3.4300000000125896e-06, 2.847000000000266e-06, 2.6800000000049007e-06, 2.860999999992897e-06, 2.583000000000446e-06, 3.4720000000043605e-06, 3.042000000008649e-06, 3.1810000000048744e-06, 2.874999999999406e-06, 3.347000000000766e-06, 3.3890000000064147e-06, 2.9860000000103692e-06, 2.805000000008495e-06, 2.9170000000050544e-06, 3.0689999999944373e-06, 2.986999999995965e-06, 3.014000000009509e-06, 2.5839999999999197e-06, 3.1810000000048744e-06, 3.319000000001626e-06, 3.4029999999990457e-06, 3.278000000009329e-06, 3.1530000000057345e-06]</msg>
<status status="PASS" starttime="20201030 15:51:30.791" endtime="20201030 15:51:30.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.787" endtime="20201030 15:51:30.793"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:30.797" endtime="20201030 15:51:30.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.795" endtime="20201030 15:51:30.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.794" endtime="20201030 15:51:30.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.463" endtime="20201030 15:51:30.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.462" endtime="20201030 15:51:30.817"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.826" endtime="20201030 15:51:30.836"></status>
</kw>
<msg timestamp="20201030 15:51:30.837" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.824" endtime="20201030 15:51:30.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.839" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.838" endtime="20201030 15:51:30.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.840" endtime="20201030 15:51:30.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.821" endtime="20201030 15:51:30.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.819" endtime="20201030 15:51:30.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.853" endtime="20201030 15:51:31.126"></status>
</kw>
<msg timestamp="20201030 15:51:31.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019341778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019345292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:30.849" endtime="20201030 15:51:31.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019341778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019345292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:31.128" endtime="20201030 15:51:31.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.134" endtime="20201030 15:51:31.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.845" endtime="20201030 15:51:31.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.843" endtime="20201030 15:51:31.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:31.140" level="INFO">${RESULT} = [{'diff': 3.5139999999996008e-06}, {'diff': 3.124999999999656e-06}, {'diff': 3.4300000000021813e-06}, {'diff': 2.9029999999985456e-06}, {'diff': 2.985999999999961e-06}, {'diff': 3.1669999999983656e-06...</msg>
<status status="PASS" starttime="20201030 15:51:31.137" endtime="20201030 15:51:31.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:31.143" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.5139999999996008e-06, 3.124999999999656e-06, 3.4300000000021813e-06, 2.9029999999985456e-06, 2.985999999999961e-06, 3.1669999999983656e-06, 3.361000000000336e-06, 3.07000000000085e-06, 2.5...</msg>
<status status="PASS" starttime="20201030 15:51:31.141" endtime="20201030 15:51:31.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.147" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:31.146" endtime="20201030 15:51:31.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.150" level="INFO">VALUE: [3.5139999999996008e-06, 3.124999999999656e-06, 3.4300000000021813e-06, 2.9029999999985456e-06, 2.985999999999961e-06, 3.1669999999983656e-06, 3.361000000000336e-06, 3.07000000000085e-06, 2.5419999999977405e-06, 3.513000000000127e-06, 3.124999999999656e-06, 2.77800000000189e-06, 3.1389999999992257e-06, 3.222000000000641e-06, 3.3480000000002397e-06, 3.1389999999992257e-06, 3.0139999999991007e-06, 2.9729999999998646e-06, 3.4579999999978517e-06, 2.7639999999988507e-06, 3.4579999999978517e-06, 3.0840000000004197e-06, 2.999999999999531e-06, 2.860999999999836e-06, 3.3199999999976304e-06]</msg>
<status status="PASS" starttime="20201030 15:51:31.149" endtime="20201030 15:51:31.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.144" endtime="20201030 15:51:31.151"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:31.154" endtime="20201030 15:51:31.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.153" endtime="20201030 15:51:31.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.152" endtime="20201030 15:51:31.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.818" endtime="20201030 15:51:31.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.818" endtime="20201030 15:51:31.175"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.184" endtime="20201030 15:51:31.193"></status>
</kw>
<msg timestamp="20201030 15:51:31.193" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.181" endtime="20201030 15:51:31.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.196" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.194" endtime="20201030 15:51:31.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.197" endtime="20201030 15:51:31.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.179" endtime="20201030 15:51:31.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.177" endtime="20201030 15:51:31.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.206" endtime="20201030 15:51:31.471"></status>
</kw>
<msg timestamp="20201030 15:51:31.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019319528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019322444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:31.204" endtime="20201030 15:51:31.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019319528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019322444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:31.474" endtime="20201030 15:51:31.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.479" endtime="20201030 15:51:31.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.202" endtime="20201030 15:51:31.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.200" endtime="20201030 15:51:31.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:31.485" level="INFO">${RESULT} = [{'diff': 2.9160000000021113e-06}, {'diff': 3.445000000001225e-06}, {'diff': 3.0139999999991007e-06}, {'diff': 3.181000000001405e-06}, {'diff': 3.153000000002265e-06}, {'diff': 3.0410000000022364e-06}...</msg>
<status status="PASS" starttime="20201030 15:51:31.482" endtime="20201030 15:51:31.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:31.488" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.9160000000021113e-06, 3.445000000001225e-06, 3.0139999999991007e-06, 3.181000000001405e-06, 3.153000000002265e-06, 3.0410000000022364e-06, 2.999999999999531e-06, 3.0689999999979067e-06, 3....</msg>
<status status="PASS" starttime="20201030 15:51:31.486" endtime="20201030 15:51:31.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.493" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:31.492" endtime="20201030 15:51:31.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.495" level="INFO">VALUE: [2.9160000000021113e-06, 3.445000000001225e-06, 3.0139999999991007e-06, 3.181000000001405e-06, 3.153000000002265e-06, 3.0410000000022364e-06, 2.999999999999531e-06, 3.0689999999979067e-06, 3.0279999999986706e-06, 3.0419999999982406e-06, 2.860999999999836e-06, 3.3889999999994758e-06, 2.9590000000002947e-06, 2.903000000002015e-06, 2.610999999999586e-06, 2.8050000000015562e-06, 3.083000000000946e-06, 2.8479999999997396e-06, 3.5980000000004897e-06, 3.2079999999976017e-06, 3.181000000001405e-06, 2.8329999999972266e-06, 3.1939999999980317e-06, 2.8340000000001697e-06, 2.929999999998212e-06]</msg>
<status status="PASS" starttime="20201030 15:51:31.494" endtime="20201030 15:51:31.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.489" endtime="20201030 15:51:31.496"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:31.499" endtime="20201030 15:51:31.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.498" endtime="20201030 15:51:31.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.497" endtime="20201030 15:51:31.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.176" endtime="20201030 15:51:31.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.175" endtime="20201030 15:51:31.520"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.529" endtime="20201030 15:51:31.539"></status>
</kw>
<msg timestamp="20201030 15:51:31.540" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.526" endtime="20201030 15:51:31.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.542" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.541" endtime="20201030 15:51:31.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.543" endtime="20201030 15:51:31.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.524" endtime="20201030 15:51:31.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.522" endtime="20201030 15:51:31.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.552" endtime="20201030 15:51:31.818"></status>
</kw>
<msg timestamp="20201030 15:51:31.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019279806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01928325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:31.551" endtime="20201030 15:51:31.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019279806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01928325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:31.821" endtime="20201030 15:51:31.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.826" endtime="20201030 15:51:31.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.548" endtime="20201030 15:51:31.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.547" endtime="20201030 15:51:31.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:31.832" level="INFO">${RESULT} = [{'diff': 3.4439999999982818e-06}, {'diff': 2.999999999999531e-06}, {'diff': 2.999999999999531e-06}, {'diff': 2.999999999999531e-06}, {'diff': 3.3889999999994758e-06}, {'diff': 3.374999999999906e-06},...</msg>
<status status="PASS" starttime="20201030 15:51:31.830" endtime="20201030 15:51:31.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:31.836" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.4439999999982818e-06, 2.999999999999531e-06, 2.999999999999531e-06, 2.999999999999531e-06, 3.3889999999994758e-06, 3.374999999999906e-06, 3.403000000002515e-06, 2.874999999999406e-06, 2.55...</msg>
<status status="PASS" starttime="20201030 15:51:31.833" endtime="20201030 15:51:31.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.841" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:31.840" endtime="20201030 15:51:31.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.843" level="INFO">VALUE: [3.4439999999982818e-06, 2.999999999999531e-06, 2.999999999999531e-06, 2.999999999999531e-06, 3.3889999999994758e-06, 3.374999999999906e-06, 3.403000000002515e-06, 2.874999999999406e-06, 2.5559999999973104e-06, 2.972000000000391e-06, 3.195000000000975e-06, 2.819000000001126e-06, 3.2639999999993508e-06, 3.27800000000239e-06, 3.4439999999982818e-06, 3.111000000000086e-06, 2.6110000000030553e-06, 2.9309999999976855e-06, 3.2639999999993508e-06, 2.735999999999711e-06, 2.958000000000821e-06, 3.3890000000029452e-06, 3.513000000000127e-06, 2.9169999999981155e-06, 2.915999999998642e-06]</msg>
<status status="PASS" starttime="20201030 15:51:31.842" endtime="20201030 15:51:31.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.837" endtime="20201030 15:51:31.844"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:31.848" endtime="20201030 15:51:31.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.846" endtime="20201030 15:51:31.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.845" endtime="20201030 15:51:31.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.521" endtime="20201030 15:51:31.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.520" endtime="20201030 15:51:31.869"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.878" endtime="20201030 15:51:31.889"></status>
</kw>
<msg timestamp="20201030 15:51:31.889" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.875" endtime="20201030 15:51:31.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.892" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.890" endtime="20201030 15:51:31.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.893" endtime="20201030 15:51:31.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.873" endtime="20201030 15:51:31.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.871" endtime="20201030 15:51:31.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.906" endtime="20201030 15:51:32.172"></status>
</kw>
<msg timestamp="20201030 15:51:32.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020048389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020051875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:31.904" endtime="20201030 15:51:32.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020048389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020051875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.175" endtime="20201030 15:51:32.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.180" endtime="20201030 15:51:32.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.901" endtime="20201030 15:51:32.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.899" endtime="20201030 15:51:32.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:32.186" level="INFO">${RESULT} = [{'diff': 3.486000000000461e-06}, {'diff': 3.0979999999999897e-06}, {'diff': 3.0559999999978105e-06}, {'diff': 3.026999999999197e-06}, {'diff': 2.999999999999531e-06}, {'diff': 2.653000000001765e-06},...</msg>
<status status="PASS" starttime="20201030 15:51:32.183" endtime="20201030 15:51:32.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:32.189" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.486000000000461e-06, 3.0979999999999897e-06, 3.0559999999978105e-06, 3.026999999999197e-06, 2.999999999999531e-06, 2.653000000001765e-06, 2.8889999999989757e-06, 3.097000000000516e-06, 3.5...</msg>
<status status="PASS" starttime="20201030 15:51:32.187" endtime="20201030 15:51:32.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.194" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:32.193" endtime="20201030 15:51:32.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.196" level="INFO">VALUE: [3.486000000000461e-06, 3.0979999999999897e-06, 3.0559999999978105e-06, 3.026999999999197e-06, 2.999999999999531e-06, 2.653000000001765e-06, 2.8889999999989757e-06, 3.097000000000516e-06, 3.54200000000221e-06, 2.8479999999997396e-06, 3.2919999999984906e-06, 2.958000000000821e-06, 3.0840000000004197e-06, 2.958000000000821e-06, 2.985999999999961e-06, 2.887999999999502e-06, 2.9590000000002947e-06, 3.2910000000024864e-06, 3.347000000000766e-06, 2.749999999999281e-06, 3.2089999999970753e-06, 3.124999999999656e-06, 3.5559999999983105e-06, 3.1939999999980317e-06, 2.9869999999994346e-06]</msg>
<status status="PASS" starttime="20201030 15:51:32.195" endtime="20201030 15:51:32.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.190" endtime="20201030 15:51:32.197"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:32.201" endtime="20201030 15:51:32.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.199" endtime="20201030 15:51:32.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.198" endtime="20201030 15:51:32.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.869" endtime="20201030 15:51:32.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.869" endtime="20201030 15:51:32.224"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.242" endtime="20201030 15:51:32.255"></status>
</kw>
<msg timestamp="20201030 15:51:32.256" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.237" endtime="20201030 15:51:32.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.261" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.258" endtime="20201030 15:51:32.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.264" endtime="20201030 15:51:32.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.232" endtime="20201030 15:51:32.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.228" endtime="20201030 15:51:32.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.282" endtime="20201030 15:51:32.554"></status>
</kw>
<msg timestamp="20201030 15:51:32.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032772417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032775903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.279" endtime="20201030 15:51:32.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032772417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032775903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.557" endtime="20201030 15:51:32.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.562" endtime="20201030 15:51:32.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.274" endtime="20201030 15:51:32.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.270" endtime="20201030 15:51:32.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:32.568" level="INFO">${RESULT} = [{'diff': 3.4860000000039304e-06}, {'diff': 2.8889999999989757e-06}, {'diff': 2.76400000000232e-06}, {'diff': 2.7080000000040405e-06}, {'diff': 3.4170000000055545e-06}, {'diff': 2.777999999994951e-06}...</msg>
<status status="PASS" starttime="20201030 15:51:32.565" endtime="20201030 15:51:32.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:32.571" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.4860000000039304e-06, 2.8889999999989757e-06, 2.76400000000232e-06, 2.7080000000040405e-06, 3.4170000000055545e-06, 2.777999999994951e-06, 3.27800000000239e-06, 3.2219999999971716e-06, 2.6...</msg>
<status status="PASS" starttime="20201030 15:51:32.569" endtime="20201030 15:51:32.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.585" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:32.575" endtime="20201030 15:51:32.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.588" level="INFO">VALUE: [3.4860000000039304e-06, 2.8889999999989757e-06, 2.76400000000232e-06, 2.7080000000040405e-06, 3.4170000000055545e-06, 2.777999999994951e-06, 3.27800000000239e-06, 3.2219999999971716e-06, 2.6950000000039442e-06, 3.6529999999992957e-06, 3.361000000000336e-06, 3.4579999999978517e-06, 2.9439999999977817e-06, 3.361000000000336e-06, 2.9029999999985456e-06, 2.9860000000034304e-06, 3.1669999999983656e-06, 2.805999999994091e-06, 3.041999999994771e-06, 2.9999999999960614e-06, 2.874999999999406e-06, 3.30600000000153e-06, 3.319000000001626e-06, 3.2079999999976017e-06, 2.9169999999981155e-06]</msg>
<status status="PASS" starttime="20201030 15:51:32.586" endtime="20201030 15:51:32.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.572" endtime="20201030 15:51:32.589"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:32.593" endtime="20201030 15:51:32.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.591" endtime="20201030 15:51:32.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.590" endtime="20201030 15:51:32.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.226" endtime="20201030 15:51:32.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.225" endtime="20201030 15:51:32.614"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.623" endtime="20201030 15:51:32.633"></status>
</kw>
<msg timestamp="20201030 15:51:32.633" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.620" endtime="20201030 15:51:32.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.636" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.635" endtime="20201030 15:51:32.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.637" endtime="20201030 15:51:32.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.618" endtime="20201030 15:51:32.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.616" endtime="20201030 15:51:32.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.647" endtime="20201030 15:51:32.912"></status>
</kw>
<msg timestamp="20201030 15:51:32.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020076347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020079333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.645" endtime="20201030 15:51:32.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020076347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020079333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.915" endtime="20201030 15:51:32.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.920" endtime="20201030 15:51:32.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.642" endtime="20201030 15:51:32.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.641" endtime="20201030 15:51:32.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:32.926" level="INFO">${RESULT} = [{'diff': 2.985999999999961e-06}, {'diff': 3.249999999999781e-06}, {'diff': 3.05600000000128e-06}, {'diff': 2.958000000000821e-06}, {'diff': 3.4859999999969915e-06}, {'diff': 2.973000000003334e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:32.924" endtime="20201030 15:51:32.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:32.930" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.985999999999961e-06, 3.249999999999781e-06, 3.05600000000128e-06, 2.958000000000821e-06, 3.4859999999969915e-06, 2.973000000003334e-06, 2.847000000000266e-06, 2.860999999999836e-06, 3.1940...</msg>
<status status="PASS" starttime="20201030 15:51:32.928" endtime="20201030 15:51:32.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.935" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:32.933" endtime="20201030 15:51:32.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.937" level="INFO">VALUE: [2.985999999999961e-06, 3.249999999999781e-06, 3.05600000000128e-06, 2.958000000000821e-06, 3.4859999999969915e-06, 2.973000000003334e-06, 2.847000000000266e-06, 2.860999999999836e-06, 3.194000000001501e-06, 3.361000000000336e-06, 3.236000000000211e-06, 3.0139999999991007e-06, 3.1529999999987957e-06, 2.999999999999531e-06, 3.026999999999197e-06, 2.6800000000014312e-06, 3.667000000002335e-06, 3.5840000000009198e-06, 2.667000000001335e-06, 3.222000000000641e-06, 2.972000000000391e-06, 3.1389999999992257e-06, 3.124999999999656e-06, 2.972000000000391e-06, 2.917000000001585e-06]</msg>
<status status="PASS" starttime="20201030 15:51:32.936" endtime="20201030 15:51:32.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.931" endtime="20201030 15:51:32.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:32.942" endtime="20201030 15:51:32.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.940" endtime="20201030 15:51:32.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.939" endtime="20201030 15:51:32.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.615" endtime="20201030 15:51:32.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.614" endtime="20201030 15:51:32.963"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.973" endtime="20201030 15:51:32.983"></status>
</kw>
<msg timestamp="20201030 15:51:32.984" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.969" endtime="20201030 15:51:32.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.986" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.985" endtime="20201030 15:51:32.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.988" endtime="20201030 15:51:32.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.967" endtime="20201030 15:51:32.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.965" endtime="20201030 15:51:32.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.997" endtime="20201030 15:51:33.292"></status>
</kw>
<msg timestamp="20201030 15:51:33.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021200583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021203708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.995" endtime="20201030 15:51:33.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021200583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021203708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.295" endtime="20201030 15:51:33.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.301" endtime="20201030 15:51:33.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.993" endtime="20201030 15:51:33.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.991" endtime="20201030 15:51:33.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:33.306" level="INFO">${RESULT} = [{'diff': 3.1250000000031253e-06}, {'diff': 2.79200000000146e-06}, {'diff': 3.179999999998462e-06}, {'diff': 3.179999999998462e-06}, {'diff': 3.429999999998712e-06}, {'diff': 2.79200000000146e-06}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:33.304" endtime="20201030 15:51:33.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:33.310" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.1250000000031253e-06, 2.79200000000146e-06, 3.179999999998462e-06, 3.179999999998462e-06, 3.429999999998712e-06, 2.79200000000146e-06, 3.3050000000020563e-06, 3.1809999999979355e-06, 3.568...</msg>
<status status="PASS" starttime="20201030 15:51:33.308" endtime="20201030 15:51:33.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.314" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:33.313" endtime="20201030 15:51:33.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.317" level="INFO">VALUE: [3.1250000000031253e-06, 2.79200000000146e-06, 3.179999999998462e-06, 3.179999999998462e-06, 3.429999999998712e-06, 2.79200000000146e-06, 3.3050000000020563e-06, 3.1809999999979355e-06, 3.5689999999984068e-06, 3.069000000001376e-06, 3.583000000001446e-06, 3.236000000000211e-06, 3.4449999999977554e-06, 3.431000000001655e-06, 3.179999999998462e-06, 2.887999999999502e-06, 2.5410000000017363e-06, 2.915999999998642e-06, 3.083000000000946e-06, 3.3469999999972966e-06, 3.083000000000946e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.153000000002265e-06, 2.9160000000021113e-06]</msg>
<status status="PASS" starttime="20201030 15:51:33.316" endtime="20201030 15:51:33.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.311" endtime="20201030 15:51:33.318"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:33.321" endtime="20201030 15:51:33.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.320" endtime="20201030 15:51:33.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.319" endtime="20201030 15:51:33.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.963" endtime="20201030 15:51:33.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.963" endtime="20201030 15:51:33.342"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.350" endtime="20201030 15:51:33.360"></status>
</kw>
<msg timestamp="20201030 15:51:33.361" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.348" endtime="20201030 15:51:33.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.363" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.362" endtime="20201030 15:51:33.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.364" endtime="20201030 15:51:33.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.346" endtime="20201030 15:51:33.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.344" endtime="20201030 15:51:33.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.373" endtime="20201030 15:51:33.639"></status>
</kw>
<msg timestamp="20201030 15:51:33.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019199944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019203361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.372" endtime="20201030 15:51:33.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019199944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019203361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.642" endtime="20201030 15:51:33.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.647" endtime="20201030 15:51:33.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.369" endtime="20201030 15:51:33.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.368" endtime="20201030 15:51:33.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:33.654" level="INFO">${RESULT} = [{'diff': 3.4169999999986156e-06}, {'diff': 2.9719999999969215e-06}, {'diff': 2.8479999999997396e-06}, {'diff': 2.9160000000021113e-06}, {'diff': 3.3340000000006698e-06}, {'diff': 3.111000000000086e-0...</msg>
<status status="PASS" starttime="20201030 15:51:33.651" endtime="20201030 15:51:33.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:33.657" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.4169999999986156e-06, 2.9719999999969215e-06, 2.8479999999997396e-06, 2.9160000000021113e-06, 3.3340000000006698e-06, 3.111000000000086e-06, 2.667000000001335e-06, 3.1389999999992257e-06, ...</msg>
<status status="PASS" starttime="20201030 15:51:33.655" endtime="20201030 15:51:33.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.662" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:33.660" endtime="20201030 15:51:33.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.664" level="INFO">VALUE: [3.4169999999986156e-06, 2.9719999999969215e-06, 2.8479999999997396e-06, 2.9160000000021113e-06, 3.3340000000006698e-06, 3.111000000000086e-06, 2.667000000001335e-06, 3.1389999999992257e-06, 2.6660000000018613e-06, 3.2079999999976017e-06, 2.9869999999994346e-06, 2.7630000000028465e-06, 2.8479999999997396e-06, 3.262999999999877e-06, 2.9029999999985456e-06, 2.9160000000021113e-06, 2.889000000002445e-06, 3.361000000000336e-06, 2.9590000000002947e-06, 3.139000000002695e-06, 3.2230000000001147e-06, 2.8200000000006e-06, 2.722000000000141e-06, 3.222000000000641e-06, 3.0840000000004197e-06]</msg>
<status status="PASS" starttime="20201030 15:51:33.663" endtime="20201030 15:51:33.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.658" endtime="20201030 15:51:33.665"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:33.669" endtime="20201030 15:51:33.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.668" endtime="20201030 15:51:33.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.666" endtime="20201030 15:51:33.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.343" endtime="20201030 15:51:33.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.342" endtime="20201030 15:51:33.690"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.699" endtime="20201030 15:51:33.709"></status>
</kw>
<msg timestamp="20201030 15:51:33.709" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.697" endtime="20201030 15:51:33.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.712" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.710" endtime="20201030 15:51:33.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.713" endtime="20201030 15:51:33.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.694" endtime="20201030 15:51:33.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.692" endtime="20201030 15:51:33.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.722" endtime="20201030 15:51:34.021"></status>
</kw>
<msg timestamp="20201030 15:51:34.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020053375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020056944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.721" endtime="20201030 15:51:34.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020053375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020056944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.024" endtime="20201030 15:51:34.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.029" endtime="20201030 15:51:34.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.718" endtime="20201030 15:51:34.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.716" endtime="20201030 15:51:34.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:34.035" level="INFO">${RESULT} = [{'diff': 3.5690000000018762e-06}, {'diff': 3.3889999999994758e-06}, {'diff': 2.804999999998087e-06}, {'diff': 3.361000000000336e-06}, {'diff': 3.249999999999781e-06}, {'diff': 3.5419999999987406e-06}...</msg>
<status status="PASS" starttime="20201030 15:51:34.032" endtime="20201030 15:51:34.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:34.038" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.5690000000018762e-06, 3.3889999999994758e-06, 2.804999999998087e-06, 3.361000000000336e-06, 3.249999999999781e-06, 3.5419999999987406e-06, 3.415999999999142e-06, 3.02800000000214e-06, 3.11...</msg>
<status status="PASS" starttime="20201030 15:51:34.036" endtime="20201030 15:51:34.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.042" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:34.041" endtime="20201030 15:51:34.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.048" level="INFO">VALUE: [3.5690000000018762e-06, 3.3889999999994758e-06, 2.804999999998087e-06, 3.361000000000336e-06, 3.249999999999781e-06, 3.5419999999987406e-06, 3.415999999999142e-06, 3.02800000000214e-06, 3.1119999999995596e-06, 2.6529999999982956e-06, 2.9579999999973516e-06, 3.333000000001196e-06, 3.249999999999781e-06, 3.1949999999975054e-06, 3.1809999999979355e-06, 3.1939999999980317e-06, 2.735999999999711e-06, 2.9029999999985456e-06, 3.1529999999987957e-06, 3.05600000000128e-06, 2.8340000000001697e-06, 3.0419999999982406e-06, 3.194000000001501e-06, 2.874999999999406e-06, 3.165999999998892e-06]</msg>
<status status="PASS" starttime="20201030 15:51:34.046" endtime="20201030 15:51:34.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.039" endtime="20201030 15:51:34.049"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:34.053" endtime="20201030 15:51:34.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.051" endtime="20201030 15:51:34.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.049" endtime="20201030 15:51:34.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.691" endtime="20201030 15:51:34.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.690" endtime="20201030 15:51:34.074"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.083" endtime="20201030 15:51:34.092"></status>
</kw>
<msg timestamp="20201030 15:51:34.092" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.080" endtime="20201030 15:51:34.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.095" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.094" endtime="20201030 15:51:34.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.096" endtime="20201030 15:51:34.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.078" endtime="20201030 15:51:34.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.076" endtime="20201030 15:51:34.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.106" endtime="20201030 15:51:34.371"></status>
</kw>
<msg timestamp="20201030 15:51:34.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020067194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020069917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.104" endtime="20201030 15:51:34.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020067194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020069917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.374" endtime="20201030 15:51:34.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.380" endtime="20201030 15:51:34.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.101" endtime="20201030 15:51:34.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.100" endtime="20201030 15:51:34.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:34.386" level="INFO">${RESULT} = [{'diff': 2.7229999999996146e-06}, {'diff': 2.847000000000266e-06}, {'diff': 3.3480000000002397e-06}, {'diff': 2.833000000000696e-06}, {'diff': 2.931000000001155e-06}, {'diff': 3.124999999999656e-06},...</msg>
<status status="PASS" starttime="20201030 15:51:34.383" endtime="20201030 15:51:34.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:34.389" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.7229999999996146e-06, 2.847000000000266e-06, 3.3480000000002397e-06, 2.833000000000696e-06, 2.931000000001155e-06, 3.124999999999656e-06, 3.083000000000946e-06, 3.2919999999984906e-06, 2.9...</msg>
<status status="PASS" starttime="20201030 15:51:34.387" endtime="20201030 15:51:34.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.394" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:34.392" endtime="20201030 15:51:34.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.397" level="INFO">VALUE: [2.7229999999996146e-06, 2.847000000000266e-06, 3.3480000000002397e-06, 2.833000000000696e-06, 2.931000000001155e-06, 3.124999999999656e-06, 3.083000000000946e-06, 3.2919999999984906e-06, 2.9869999999994346e-06, 3.124999999999656e-06, 3.5550000000023063e-06, 3.4309999999981855e-06, 3.07000000000085e-06, 2.9439999999977817e-06, 2.945000000000725e-06, 3.124999999999656e-06, 3.26400000000282e-06, 3.0699999999973804e-06, 3.111000000000086e-06, 2.735999999999711e-06, 2.8750000000028753e-06, 3.111000000000086e-06, 2.972000000000391e-06, 3.083000000000946e-06, 2.9309999999976855e-06]</msg>
<status status="PASS" starttime="20201030 15:51:34.395" endtime="20201030 15:51:34.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.390" endtime="20201030 15:51:34.397"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:34.401" endtime="20201030 15:51:34.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.400" endtime="20201030 15:51:34.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.398" endtime="20201030 15:51:34.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.074" endtime="20201030 15:51:34.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.074" endtime="20201030 15:51:34.422"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.431" endtime="20201030 15:51:34.442"></status>
</kw>
<msg timestamp="20201030 15:51:34.442" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.429" endtime="20201030 15:51:34.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.445" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.443" endtime="20201030 15:51:34.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.446" endtime="20201030 15:51:34.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.426" endtime="20201030 15:51:34.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.424" endtime="20201030 15:51:34.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.456" endtime="20201030 15:51:34.747"></status>
</kw>
<msg timestamp="20201030 15:51:34.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019867806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0198715, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:34.454" endtime="20201030 15:51:34.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019867806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0198715, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:34.750" endtime="20201030 15:51:34.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.755" endtime="20201030 15:51:34.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.451" endtime="20201030 15:51:34.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.449" endtime="20201030 15:51:34.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:34.762" level="INFO">${RESULT} = [{'diff': 3.6940000000020012e-06}, {'diff': 3.040999999998767e-06}, {'diff': 2.819000000001126e-06}, {'diff': 3.1529999999987957e-06}, {'diff': 2.9719999999969215e-06}, {'diff': 3.1389999999992257e-06...</msg>
<status status="PASS" starttime="20201030 15:51:34.759" endtime="20201030 15:51:34.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:34.765" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.6940000000020012e-06, 3.040999999998767e-06, 2.819000000001126e-06, 3.1529999999987957e-06, 2.9719999999969215e-06, 3.1389999999992257e-06, 2.6389999999987257e-06, 3.431000000001655e-06, 3...</msg>
<status status="PASS" starttime="20201030 15:51:34.763" endtime="20201030 15:51:34.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.769" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:34.768" endtime="20201030 15:51:34.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.772" level="INFO">VALUE: [3.6940000000020012e-06, 3.040999999998767e-06, 2.819000000001126e-06, 3.1529999999987957e-06, 2.9719999999969215e-06, 3.1389999999992257e-06, 2.6389999999987257e-06, 3.431000000001655e-06, 3.3200000000011e-06, 3.0419999999982406e-06, 3.1529999999987957e-06, 2.749999999999281e-06, 3.07000000000085e-06, 3.137999999999752e-06, 3.2639999999993508e-06, 3.167000000001835e-06, 3.04200000000171e-06, 3.0840000000004197e-06, 2.999999999999531e-06, 3.097000000000516e-06, 2.833000000000696e-06, 3.625000000000156e-06, 2.8889999999989757e-06, 3.124999999999656e-06, 2.9729999999998646e-06]</msg>
<status status="PASS" starttime="20201030 15:51:34.771" endtime="20201030 15:51:34.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.766" endtime="20201030 15:51:34.773"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:34.777" endtime="20201030 15:51:34.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.776" endtime="20201030 15:51:34.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.774" endtime="20201030 15:51:34.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.423" endtime="20201030 15:51:34.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.423" endtime="20201030 15:51:34.798"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.807" endtime="20201030 15:51:34.817"></status>
</kw>
<msg timestamp="20201030 15:51:34.818" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.805" endtime="20201030 15:51:34.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.820" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.819" endtime="20201030 15:51:34.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.821" endtime="20201030 15:51:34.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.802" endtime="20201030 15:51:34.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.800" endtime="20201030 15:51:34.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.831" endtime="20201030 15:51:35.098"></status>
</kw>
<msg timestamp="20201030 15:51:35.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019977236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019980569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.829" endtime="20201030 15:51:35.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019977236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019980569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.101" endtime="20201030 15:51:35.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.107" endtime="20201030 15:51:35.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.827" endtime="20201030 15:51:35.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.825" endtime="20201030 15:51:35.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:35.113" level="INFO">${RESULT} = [{'diff': 3.333000000001196e-06}, {'diff': 3.249999999999781e-06}, {'diff': 3.374999999999906e-06}, {'diff': 2.874999999999406e-06}, {'diff': 2.889000000002445e-06}, {'diff': 3.1669999999983656e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:35.110" endtime="20201030 15:51:35.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:35.116" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.333000000001196e-06, 3.249999999999781e-06, 3.374999999999906e-06, 2.874999999999406e-06, 2.889000000002445e-06, 3.1669999999983656e-06, 3.3050000000020563e-06, 3.431000000001655e-06, 3.44...</msg>
<status status="PASS" starttime="20201030 15:51:35.114" endtime="20201030 15:51:35.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.120" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:35.119" endtime="20201030 15:51:35.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.123" level="INFO">VALUE: [3.333000000001196e-06, 3.249999999999781e-06, 3.374999999999906e-06, 2.874999999999406e-06, 2.889000000002445e-06, 3.1669999999983656e-06, 3.3050000000020563e-06, 3.431000000001655e-06, 3.445000000001225e-06, 3.0000000000030003e-06, 2.7500000000027502e-06, 3.040999999998767e-06, 2.833000000000696e-06, 2.9169999999981155e-06, 3.374999999999906e-06, 3.417000000002085e-06, 2.77800000000189e-06, 3.57000000000135e-06, 3.222000000000641e-06, 3.124999999999656e-06, 3.3329999999977267e-06, 3.0279999999986706e-06, 3.30600000000153e-06, 2.8889999999989757e-06, 2.7910000000019863e-06]</msg>
<status status="PASS" starttime="20201030 15:51:35.121" endtime="20201030 15:51:35.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.117" endtime="20201030 15:51:35.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:35.127" endtime="20201030 15:51:35.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.126" endtime="20201030 15:51:35.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.125" endtime="20201030 15:51:35.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.799" endtime="20201030 15:51:35.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.798" endtime="20201030 15:51:35.148"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.157" endtime="20201030 15:51:35.166"></status>
</kw>
<msg timestamp="20201030 15:51:35.166" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.154" endtime="20201030 15:51:35.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.169" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.167" endtime="20201030 15:51:35.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.170" endtime="20201030 15:51:35.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.152" endtime="20201030 15:51:35.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.150" endtime="20201030 15:51:35.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.179" endtime="20201030 15:51:35.443"></status>
</kw>
<msg timestamp="20201030 15:51:35.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019288208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019291417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.177" endtime="20201030 15:51:35.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019288208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019291417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.448" endtime="20201030 15:51:35.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.460" endtime="20201030 15:51:35.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.175" endtime="20201030 15:51:35.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.173" endtime="20201030 15:51:35.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:35.472" level="INFO">${RESULT} = [{'diff': 3.2090000000005448e-06}, {'diff': 3.181000000001405e-06}, {'diff': 3.5840000000009198e-06}, {'diff': 2.639000000002195e-06}, {'diff': 3.083000000000946e-06}, {'diff': 3.249999999999781e-06},...</msg>
<status status="PASS" starttime="20201030 15:51:35.467" endtime="20201030 15:51:35.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:35.479" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.2090000000005448e-06, 3.181000000001405e-06, 3.5840000000009198e-06, 2.639000000002195e-06, 3.083000000000946e-06, 3.249999999999781e-06, 3.124999999999656e-06, 3.26400000000282e-06, 3.264...</msg>
<status status="PASS" starttime="20201030 15:51:35.474" endtime="20201030 15:51:35.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.487" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:35.485" endtime="20201030 15:51:35.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.492" level="INFO">VALUE: [3.2090000000005448e-06, 3.181000000001405e-06, 3.5840000000009198e-06, 2.639000000002195e-06, 3.083000000000946e-06, 3.249999999999781e-06, 3.124999999999656e-06, 3.26400000000282e-06, 3.26400000000282e-06, 3.069000000001376e-06, 3.2919999999984906e-06, 2.749999999999281e-06, 3.540999999999267e-06, 3.4169999999986156e-06, 2.8889999999989757e-06, 2.735999999999711e-06, 3.3200000000011e-06, 2.944000000001251e-06, 2.735999999999711e-06, 3.1660000000023614e-06, 3.486000000000461e-06, 2.637999999999252e-06, 3.3200000000011e-06, 3.153000000002265e-06, 3.4309999999981855e-06]</msg>
<status status="PASS" starttime="20201030 15:51:35.489" endtime="20201030 15:51:35.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.480" endtime="20201030 15:51:35.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:35.502" endtime="20201030 15:51:35.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.499" endtime="20201030 15:51:35.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.497" endtime="20201030 15:51:35.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.149" endtime="20201030 15:51:35.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.148" endtime="20201030 15:51:35.527"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.545" endtime="20201030 15:51:35.555"></status>
</kw>
<msg timestamp="20201030 15:51:35.556" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.540" endtime="20201030 15:51:35.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.558" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.557" endtime="20201030 15:51:35.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.559" endtime="20201030 15:51:35.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.534" endtime="20201030 15:51:35.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.531" endtime="20201030 15:51:35.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.568" endtime="20201030 15:51:35.835"></status>
</kw>
<msg timestamp="20201030 15:51:35.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032693806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032696806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.567" endtime="20201030 15:51:35.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032693806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032696806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.838" endtime="20201030 15:51:35.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.844" endtime="20201030 15:51:35.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.564" endtime="20201030 15:51:35.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.562" endtime="20201030 15:51:35.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:35.850" level="INFO">${RESULT} = [{'diff': 3.0000000000030003e-06}, {'diff': 2.860999999999836e-06}, {'diff': 3.111000000000086e-06}, {'diff': 2.8890000000059146e-06}, {'diff': 2.79200000000146e-06}, {'diff': 2.874999999999406e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:35.847" endtime="20201030 15:51:35.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:35.853" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.0000000000030003e-06, 2.860999999999836e-06, 3.111000000000086e-06, 2.8890000000059146e-06, 2.79200000000146e-06, 2.874999999999406e-06, 2.9029999999985456e-06, 2.723000000003084e-06, 3.38...</msg>
<status status="PASS" starttime="20201030 15:51:35.851" endtime="20201030 15:51:35.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.857" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:35.856" endtime="20201030 15:51:35.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.860" level="INFO">VALUE: [3.0000000000030003e-06, 2.860999999999836e-06, 3.111000000000086e-06, 2.8890000000059146e-06, 2.79200000000146e-06, 2.874999999999406e-06, 2.9029999999985456e-06, 2.723000000003084e-06, 3.3889999999994758e-06, 3.333000000001196e-06, 2.7639999999953813e-06, 2.9170000000050544e-06, 3.111000000000086e-06, 2.860999999999836e-06, 2.6809999999974354e-06, 3.29200000000196e-06, 3.2500000000032503e-06, 2.887999999999502e-06, 3.179999999998462e-06, 3.374999999999906e-06, 2.76400000000232e-06, 3.333000000001196e-06, 2.651999999998822e-06, 3.01400000000257e-06, 2.847000000000266e-06]</msg>
<status status="PASS" starttime="20201030 15:51:35.859" endtime="20201030 15:51:35.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.854" endtime="20201030 15:51:35.861"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:35.865" endtime="20201030 15:51:35.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.863" endtime="20201030 15:51:35.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.862" endtime="20201030 15:51:35.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.528" endtime="20201030 15:51:35.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.527" endtime="20201030 15:51:35.886"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.895" endtime="20201030 15:51:35.905"></status>
</kw>
<msg timestamp="20201030 15:51:35.906" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.893" endtime="20201030 15:51:35.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.908" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.907" endtime="20201030 15:51:35.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.910" endtime="20201030 15:51:35.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.890" endtime="20201030 15:51:35.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.888" endtime="20201030 15:51:35.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.919" endtime="20201030 15:51:36.184"></status>
</kw>
<msg timestamp="20201030 15:51:36.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020008958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020012347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.917" endtime="20201030 15:51:36.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020008958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020012347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.187" endtime="20201030 15:51:36.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.192" endtime="20201030 15:51:36.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.915" endtime="20201030 15:51:36.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.913" endtime="20201030 15:51:36.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:36.198" level="INFO">${RESULT} = [{'diff': 3.3889999999994758e-06}, {'diff': 2.77800000000189e-06}, {'diff': 3.026999999999197e-06}, {'diff': 3.3340000000006698e-06}, {'diff': 2.833000000000696e-06}, {'diff': 3.540999999999267e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:36.195" endtime="20201030 15:51:36.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:36.201" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.3889999999994758e-06, 2.77800000000189e-06, 3.026999999999197e-06, 3.3340000000006698e-06, 2.833000000000696e-06, 3.540999999999267e-06, 2.847000000000266e-06, 3.403000000002515e-06, 2.999...</msg>
<status status="PASS" starttime="20201030 15:51:36.199" endtime="20201030 15:51:36.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.205" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:36.204" endtime="20201030 15:51:36.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.208" level="INFO">VALUE: [3.3889999999994758e-06, 2.77800000000189e-06, 3.026999999999197e-06, 3.3340000000006698e-06, 2.833000000000696e-06, 3.540999999999267e-06, 2.847000000000266e-06, 3.403000000002515e-06, 2.999999999999531e-06, 2.958000000000821e-06, 2.597000000000016e-06, 3.222000000000641e-06, 3.526999999999697e-06, 3.1939999999980317e-06, 3.208000000001071e-06, 3.0550000000018063e-06, 3.111000000000086e-06, 3.27800000000239e-06, 3.069000000001376e-06, 2.9029999999985456e-06, 3.374999999999906e-06, 3.6390000000031952e-06, 2.6669999999978655e-06, 3.0559999999978105e-06, 3.3200000000011e-06]</msg>
<status status="PASS" starttime="20201030 15:51:36.206" endtime="20201030 15:51:36.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.202" endtime="20201030 15:51:36.209"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:36.212" endtime="20201030 15:51:36.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.211" endtime="20201030 15:51:36.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.210" endtime="20201030 15:51:36.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.887" endtime="20201030 15:51:36.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.886" endtime="20201030 15:51:36.233"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.242" endtime="20201030 15:51:36.252"></status>
</kw>
<msg timestamp="20201030 15:51:36.253" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.239" endtime="20201030 15:51:36.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.258" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.255" endtime="20201030 15:51:36.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.260" endtime="20201030 15:51:36.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.237" endtime="20201030 15:51:36.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.235" endtime="20201030 15:51:36.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.279" endtime="20201030 15:51:36.552"></status>
</kw>
<msg timestamp="20201030 15:51:36.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019371722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019374667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.276" endtime="20201030 15:51:36.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019371722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019374667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.555" endtime="20201030 15:51:36.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.561" endtime="20201030 15:51:36.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.270" endtime="20201030 15:51:36.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.267" endtime="20201030 15:51:36.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:36.566" level="INFO">${RESULT} = [{'diff': 2.945000000000725e-06}, {'diff': 2.8469999999967965e-06}, {'diff': 2.9169999999981155e-06}, {'diff': 3.3619999999998096e-06}, {'diff': 2.76400000000232e-06}, {'diff': 3.05600000000128e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:36.564" endtime="20201030 15:51:36.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:36.570" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.945000000000725e-06, 2.8469999999967965e-06, 2.9169999999981155e-06, 3.3619999999998096e-06, 2.76400000000232e-06, 3.05600000000128e-06, 3.304999999998587e-06, 3.111000000000086e-06, 2.999...</msg>
<status status="PASS" starttime="20201030 15:51:36.567" endtime="20201030 15:51:36.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.574" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:36.573" endtime="20201030 15:51:36.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.576" level="INFO">VALUE: [2.945000000000725e-06, 2.8469999999967965e-06, 2.9169999999981155e-06, 3.3619999999998096e-06, 2.76400000000232e-06, 3.05600000000128e-06, 3.304999999998587e-06, 3.111000000000086e-06, 2.999999999999531e-06, 3.1800000000019313e-06, 3.1389999999992257e-06, 3.236000000000211e-06, 3.611000000000586e-06, 3.54200000000221e-06, 2.7910000000019863e-06, 3.361000000000336e-06, 3.4590000000007948e-06, 3.069000000001376e-06, 3.01400000000257e-06, 3.0840000000004197e-06, 3.27800000000239e-06, 3.054999999998337e-06, 3.2090000000005448e-06, 3.0139999999991007e-06, 3.249999999999781e-06]</msg>
<status status="PASS" starttime="20201030 15:51:36.575" endtime="20201030 15:51:36.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.570" endtime="20201030 15:51:36.577"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:36.581" endtime="20201030 15:51:36.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.579" endtime="20201030 15:51:36.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.578" endtime="20201030 15:51:36.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.234" endtime="20201030 15:51:36.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.233" endtime="20201030 15:51:36.602"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.610" endtime="20201030 15:51:36.620"></status>
</kw>
<msg timestamp="20201030 15:51:36.620" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.608" endtime="20201030 15:51:36.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.623" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.621" endtime="20201030 15:51:36.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.624" endtime="20201030 15:51:36.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.605" endtime="20201030 15:51:36.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.604" endtime="20201030 15:51:36.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.633" endtime="20201030 15:51:36.898"></status>
</kw>
<msg timestamp="20201030 15:51:36.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019308153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019311361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.631" endtime="20201030 15:51:36.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019308153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019311361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.901" endtime="20201030 15:51:36.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.906" endtime="20201030 15:51:36.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.629" endtime="20201030 15:51:36.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.627" endtime="20201030 15:51:36.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:36.912" level="INFO">${RESULT} = [{'diff': 3.2079999999976017e-06}, {'diff': 3.139000000002695e-06}, {'diff': 3.4169999999986156e-06}, {'diff': 3.4169999999986156e-06}, {'diff': 2.7919999999979905e-06}, {'diff': 3.05600000000128e-06}...</msg>
<status status="PASS" starttime="20201030 15:51:36.909" endtime="20201030 15:51:36.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:36.915" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.2079999999976017e-06, 3.139000000002695e-06, 3.4169999999986156e-06, 3.4169999999986156e-06, 2.7919999999979905e-06, 3.05600000000128e-06, 3.4859999999969915e-06, 2.847000000000266e-06, 3....</msg>
<status status="PASS" starttime="20201030 15:51:36.913" endtime="20201030 15:51:36.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.919" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:36.918" endtime="20201030 15:51:36.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.921" level="INFO">VALUE: [3.2079999999976017e-06, 3.139000000002695e-06, 3.4169999999986156e-06, 3.4169999999986156e-06, 2.7919999999979905e-06, 3.05600000000128e-06, 3.4859999999969915e-06, 2.847000000000266e-06, 3.02800000000214e-06, 3.124999999999656e-06, 2.958000000000821e-06, 2.610999999999586e-06, 2.958000000000821e-06, 2.5700000000003498e-06, 3.3059999999980605e-06, 3.083000000000946e-06, 3.124999999999656e-06, 3.139000000002695e-06, 3.2639999999993508e-06, 3.472000000000891e-06, 2.901999999999072e-06, 2.9160000000021113e-06, 2.9439999999977817e-06, 2.917000000001585e-06, 2.860999999999836e-06]</msg>
<status status="PASS" starttime="20201030 15:51:36.920" endtime="20201030 15:51:36.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.916" endtime="20201030 15:51:36.922"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:36.927" endtime="20201030 15:51:36.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.925" endtime="20201030 15:51:36.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.923" endtime="20201030 15:51:36.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.602" endtime="20201030 15:51:36.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.602" endtime="20201030 15:51:36.947"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.956" endtime="20201030 15:51:36.966"></status>
</kw>
<msg timestamp="20201030 15:51:36.967" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.954" endtime="20201030 15:51:36.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.969" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.968" endtime="20201030 15:51:36.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.970" endtime="20201030 15:51:36.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.951" endtime="20201030 15:51:36.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.949" endtime="20201030 15:51:36.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.979" endtime="20201030 15:51:37.264"></status>
</kw>
<msg timestamp="20201030 15:51:37.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019504333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019507139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.978" endtime="20201030 15:51:37.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019504333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019507139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.267" endtime="20201030 15:51:37.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.272" endtime="20201030 15:51:37.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.975" endtime="20201030 15:51:37.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.973" endtime="20201030 15:51:37.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:37.278" level="INFO">${RESULT} = [{'diff': 2.80600000000103e-06}, {'diff': 3.333000000001196e-06}, {'diff': 3.500000000000031e-06}, {'diff': 3.05600000000128e-06}, {'diff': 2.917000000001585e-06}, {'diff': 3.347000000000766e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 15:51:37.276" endtime="20201030 15:51:37.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:37.285" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.80600000000103e-06, 3.333000000001196e-06, 3.500000000000031e-06, 3.05600000000128e-06, 2.917000000001585e-06, 3.347000000000766e-06, 2.6389999999987257e-06, 2.887999999999502e-06, 3.08300...</msg>
<status status="PASS" starttime="20201030 15:51:37.280" endtime="20201030 15:51:37.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.291" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:37.288" endtime="20201030 15:51:37.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.295" level="INFO">VALUE: [2.80600000000103e-06, 3.333000000001196e-06, 3.500000000000031e-06, 3.05600000000128e-06, 2.917000000001585e-06, 3.347000000000766e-06, 2.6389999999987257e-06, 2.887999999999502e-06, 3.083000000000946e-06, 3.0699999999973804e-06, 3.195000000000975e-06, 3.4309999999981855e-06, 3.2079999999976017e-06, 3.1389999999992257e-06, 3.069000000001376e-06, 3.151999999999322e-06, 3.3750000000033753e-06, 2.708000000000571e-06, 3.361000000000336e-06, 3.097000000000516e-06, 3.249999999999781e-06, 2.985999999999961e-06, 2.7779999999984206e-06, 3.361000000000336e-06, 2.80600000000103e-06]</msg>
<status status="PASS" starttime="20201030 15:51:37.293" endtime="20201030 15:51:37.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.286" endtime="20201030 15:51:37.296"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:37.302" endtime="20201030 15:51:37.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.299" endtime="20201030 15:51:37.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.297" endtime="20201030 15:51:37.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.948" endtime="20201030 15:51:37.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.948" endtime="20201030 15:51:37.324"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.334" endtime="20201030 15:51:37.344"></status>
</kw>
<msg timestamp="20201030 15:51:37.344" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.330" endtime="20201030 15:51:37.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.347" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.345" endtime="20201030 15:51:37.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.348" endtime="20201030 15:51:37.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.327" endtime="20201030 15:51:37.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.326" endtime="20201030 15:51:37.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.357" endtime="20201030 15:51:37.626"></status>
</kw>
<msg timestamp="20201030 15:51:37.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021583153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021586111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.355" endtime="20201030 15:51:37.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021583153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021586111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.629" endtime="20201030 15:51:37.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.634" endtime="20201030 15:51:37.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.353" endtime="20201030 15:51:37.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.351" endtime="20201030 15:51:37.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:37.640" level="INFO">${RESULT} = [{'diff': 2.958000000000821e-06}, {'diff': 3.3059999999980605e-06}, {'diff': 2.8340000000001697e-06}, {'diff': 3.0419999999982406e-06}, {'diff': 3.124999999999656e-06}, {'diff': 2.985999999999961e-06}...</msg>
<status status="PASS" starttime="20201030 15:51:37.638" endtime="20201030 15:51:37.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:37.643" level="INFO">${GPIO_OVERHEAD} = {'diff': [2.958000000000821e-06, 3.3059999999980605e-06, 2.8340000000001697e-06, 3.0419999999982406e-06, 3.124999999999656e-06, 2.985999999999961e-06, 3.5139999999996008e-06, 3.347000000000766e-06, 2....</msg>
<status status="PASS" starttime="20201030 15:51:37.641" endtime="20201030 15:51:37.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.648" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:37.647" endtime="20201030 15:51:37.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.650" level="INFO">VALUE: [2.958000000000821e-06, 3.3059999999980605e-06, 2.8340000000001697e-06, 3.0419999999982406e-06, 3.124999999999656e-06, 2.985999999999961e-06, 3.5139999999996008e-06, 3.347000000000766e-06, 2.722000000000141e-06, 2.8889999999989757e-06, 3.374999999999906e-06, 3.4439999999982818e-06, 2.847000000000266e-06, 3.097000000000516e-06, 2.694000000001001e-06, 3.124999999999656e-06, 3.1809999999979355e-06, 3.0139999999991007e-06, 3.040999999998767e-06, 3.374999999999906e-06, 2.9309999999976855e-06, 3.472000000000891e-06, 2.985999999999961e-06, 3.5139999999996008e-06, 2.9869999999994346e-06]</msg>
<status status="PASS" starttime="20201030 15:51:37.649" endtime="20201030 15:51:37.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.644" endtime="20201030 15:51:37.651"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:37.656" endtime="20201030 15:51:37.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.654" endtime="20201030 15:51:37.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.652" endtime="20201030 15:51:37.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.324" endtime="20201030 15:51:37.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.324" endtime="20201030 15:51:37.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.462" endtime="20201030 15:51:37.677"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:30.383" endtime="20201030 15:51:37.677" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:37.684" endtime="20201030 15:51:37.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.682" endtime="20201030 15:51:37.704"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.718" endtime="20201030 15:51:37.731"></status>
</kw>
<msg timestamp="20201030 15:51:37.732" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.716" endtime="20201030 15:51:37.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.734" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.733" endtime="20201030 15:51:37.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.737" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:37.736" endtime="20201030 15:51:37.738"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:37.714" endtime="20201030 15:51:37.738"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:37.711" endtime="20201030 15:51:37.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.710" endtime="20201030 15:51:37.739"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:37.743" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:37.742" endtime="20201030 15:51:37.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.740" endtime="20201030 15:51:37.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.709" endtime="20201030 15:51:37.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.708" endtime="20201030 15:51:37.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.745" endtime="20201030 15:51:37.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.706" endtime="20201030 15:51:37.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.705" endtime="20201030 15:51:37.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.681" endtime="20201030 15:51:37.747"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.756" endtime="20201030 15:51:37.767"></status>
</kw>
<msg timestamp="20201030 15:51:37.768" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.754" endtime="20201030 15:51:37.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.770" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.769" endtime="20201030 15:51:37.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.771" endtime="20201030 15:51:37.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.752" endtime="20201030 15:51:37.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.750" endtime="20201030 15:51:37.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.781" endtime="20201030 15:51:38.063"></status>
</kw>
<msg timestamp="20201030 15:51:38.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062992347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062993667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.779" endtime="20201030 15:51:38.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062992347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062993667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.067" endtime="20201030 15:51:38.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.075" endtime="20201030 15:51:38.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.777" endtime="20201030 15:51:38.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.775" endtime="20201030 15:51:38.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:38.082" level="INFO">${RESULT} = [{'diff': 1.3199999999990997e-06}, {'diff': 8.32999999991757e-07}, {'diff': 8.469999999982658e-07}, {'diff': 8.469999999982658e-07}, {'diff': 8.330000000056348e-07}, {'diff': 8.18999999999126e-07}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:38.079" endtime="20201030 15:51:38.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:38.086" level="INFO">${OVERHEAD} = {'diff': [1.3199999999990997e-06, 8.32999999991757e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.330000000056348e-07, 8.18999999999126e-07, 8.18999999999126e-07, 8.330000000056348e-07, 8.330000...</msg>
<status status="PASS" starttime="20201030 15:51:38.083" endtime="20201030 15:51:38.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.090" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:38.089" endtime="20201030 15:51:38.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.092" level="INFO">VALUE: [1.3199999999990997e-06, 8.32999999991757e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.330000000056348e-07, 8.18999999999126e-07, 8.18999999999126e-07, 8.330000000056348e-07, 8.330000000056348e-07, 8.330000000056348e-07, 8.200000000124774e-07, 8.340000000051084e-07, 8.199999999985996e-07, 8.469999999982658e-07, 8.470000000121436e-07, 8.32999999991757e-07, 8.32999999991757e-07, 8.339999999912306e-07, 8.060000000059686e-07, 8.340000000051084e-07, 8.610000000047746e-07, 8.469999999982658e-07, 8.480000000116172e-07, 8.340000000051084e-07, 8.340000000051084e-07, 8.469999999982658e-07, 8.619999999903705e-07, 8.610000000047746e-07, 8.469999999982658e-07, 8.330000000056348e-07, 8.469999999982658e-07, 8.609999999908968e-07, 7.919999999994598e-07, 8.340000000051084e-07, 8.749999999974056e-07, 8.469999999982658e-07, 8.620000000042483e-07, 8.339999999912306e-07, 8.330000000056348e-07, 8.469999999982658e-07, 8.609999999908968e-07, 8.32999999991757e-07, 8.609999999908968e-07, 8.330000000056348e-07, 8.609999999908968e-07, 9.160000000035806e-07, 8.340000000051084e-07, 9.029999999965455e-07, 8.32999999991757e-07, 8.470000000121436e-07]</msg>
<status status="PASS" starttime="20201030 15:51:38.091" endtime="20201030 15:51:38.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.087" endtime="20201030 15:51:38.093"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:38.097" endtime="20201030 15:51:38.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.095" endtime="20201030 15:51:38.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.094" endtime="20201030 15:51:38.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.749" endtime="20201030 15:51:38.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.748" endtime="20201030 15:51:38.118"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.126" endtime="20201030 15:51:38.137"></status>
</kw>
<msg timestamp="20201030 15:51:38.138" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.125" endtime="20201030 15:51:38.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.140" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.139" endtime="20201030 15:51:38.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.142" endtime="20201030 15:51:38.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.121" endtime="20201030 15:51:38.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.120" endtime="20201030 15:51:38.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.151" endtime="20201030 15:51:38.441"></status>
</kw>
<msg timestamp="20201030 15:51:38.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020583625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020584903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.149" endtime="20201030 15:51:38.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020583625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020584903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.445" endtime="20201030 15:51:38.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.453" endtime="20201030 15:51:38.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.147" endtime="20201030 15:51:38.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.145" endtime="20201030 15:51:38.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:38.460" level="INFO">${RESULT} = [{'diff': 1.27800000000039e-06}, {'diff': 8.470000000017353e-07}, {'diff': 9.020000000005413e-07}, {'diff': 9.020000000005413e-07}, {'diff': 8.470000000017353e-07}, {'diff': 8.200000000020691e-07}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:38.456" endtime="20201030 15:51:38.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:38.464" level="INFO">${OVERHEAD} = {'diff': [1.27800000000039e-06, 8.470000000017353e-07, 9.020000000005413e-07, 9.020000000005413e-07, 8.470000000017353e-07, 8.200000000020691e-07, 8.190000000025954e-07, 8.18999999999126e-07, 8.339999...</msg>
<status status="PASS" starttime="20201030 15:51:38.461" endtime="20201030 15:51:38.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.469" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:38.467" endtime="20201030 15:51:38.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.471" level="INFO">VALUE: [1.27800000000039e-06, 8.470000000017353e-07, 9.020000000005413e-07, 9.020000000005413e-07, 8.470000000017353e-07, 8.200000000020691e-07, 8.190000000025954e-07, 8.18999999999126e-07, 8.339999999981695e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.480000000012089e-07, 8.18999999999126e-07, 8.480000000012089e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.329999999986959e-07, 8.329999999986959e-07, 8.329999999986959e-07, 8.469999999982658e-07, 8.609999999978357e-07, 8.610000000013052e-07, 8.479999999977395e-07, 8.329999999986959e-07, 8.34000000001639e-07, 8.34000000001639e-07, 8.470000000017353e-07, 8.34000000001639e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.89000000000445e-07, 8.329999999986959e-07, 8.329999999986959e-07, 8.330000000021653e-07, 8.18999999999126e-07, 8.330000000021653e-07, 8.469999999982658e-07, 8.18999999999126e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.330000000021653e-07, 8.330000000021653e-07, 8.480000000012089e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.480000000012089e-07, 8.34000000001639e-07]</msg>
<status status="PASS" starttime="20201030 15:51:38.470" endtime="20201030 15:51:38.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.465" endtime="20201030 15:51:38.472"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:38.476" endtime="20201030 15:51:38.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.474" endtime="20201030 15:51:38.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.473" endtime="20201030 15:51:38.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.119" endtime="20201030 15:51:38.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.118" endtime="20201030 15:51:38.496"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.504" endtime="20201030 15:51:38.516"></status>
</kw>
<msg timestamp="20201030 15:51:38.517" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.503" endtime="20201030 15:51:38.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.519" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.518" endtime="20201030 15:51:38.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.520" endtime="20201030 15:51:38.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.500" endtime="20201030 15:51:38.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.498" endtime="20201030 15:51:38.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.529" endtime="20201030 15:51:38.810"></status>
</kw>
<msg timestamp="20201030 15:51:38.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019361931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019363194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.528" endtime="20201030 15:51:38.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019361931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019363194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.815" endtime="20201030 15:51:38.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.823" endtime="20201030 15:51:38.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.525" endtime="20201030 15:51:38.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.523" endtime="20201030 15:51:38.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:38.829" level="INFO">${RESULT} = [{'diff': 1.2630000000013464e-06}, {'diff': 8.329999999986959e-07}, {'diff': 8.470000000017353e-07}, {'diff': 8.470000000017353e-07}, {'diff': 8.479999999977395e-07}, {'diff': 8.330000000021653e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:38.826" endtime="20201030 15:51:38.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:38.834" level="INFO">${OVERHEAD} = {'diff': [1.2630000000013464e-06, 8.329999999986959e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.479999999977395e-07, 8.330000000021653e-07, 8.470000000017353e-07, 8.18999999999126e-07, 7.9199...</msg>
<status status="PASS" starttime="20201030 15:51:38.830" endtime="20201030 15:51:38.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.839" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:38.838" endtime="20201030 15:51:38.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.841" level="INFO">VALUE: [1.2630000000013464e-06, 8.329999999986959e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.479999999977395e-07, 8.330000000021653e-07, 8.470000000017353e-07, 8.18999999999126e-07, 7.919999999994598e-07, 8.330000000021653e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.330000000021653e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.480000000012089e-07, 8.480000000012089e-07, 8.339999999981695e-07, 8.469999999982658e-07, 8.330000000021653e-07, 8.329999999986959e-07, 8.329999999986959e-07, 8.469999999982658e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.34000000001639e-07, 8.330000000021653e-07, 8.470000000017353e-07, 8.18999999999126e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.330000000021653e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.479999999977395e-07, 8.470000000017353e-07, 7.919999999994598e-07, 8.609999999978357e-07, 8.620000000007788e-07, 8.34000000001639e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.469999999982658e-07]</msg>
<status status="PASS" starttime="20201030 15:51:38.840" endtime="20201030 15:51:38.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.835" endtime="20201030 15:51:38.842"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:38.846" endtime="20201030 15:51:38.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.844" endtime="20201030 15:51:38.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.843" endtime="20201030 15:51:38.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.497" endtime="20201030 15:51:38.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.497" endtime="20201030 15:51:38.868"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.882" endtime="20201030 15:51:38.895"></status>
</kw>
<msg timestamp="20201030 15:51:38.896" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.879" endtime="20201030 15:51:38.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.898" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.897" endtime="20201030 15:51:38.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.900" endtime="20201030 15:51:38.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.874" endtime="20201030 15:51:38.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.871" endtime="20201030 15:51:38.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.909" endtime="20201030 15:51:39.189"></status>
</kw>
<msg timestamp="20201030 15:51:39.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028199861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028201139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.907" endtime="20201030 15:51:39.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028199861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028201139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.193" endtime="20201030 15:51:39.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.201" endtime="20201030 15:51:39.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.904" endtime="20201030 15:51:39.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.903" endtime="20201030 15:51:39.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:39.209" level="INFO">${RESULT} = [{'diff': 1.27800000000039e-06}, {'diff': 8.610000000013052e-07}, {'diff': 8.470000000017353e-07}, {'diff': 8.610000000013052e-07}, {'diff': 8.610000000013052e-07}, {'diff': 8.329999999986959e-07}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:39.206" endtime="20201030 15:51:39.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:39.213" level="INFO">${OVERHEAD} = {'diff': [1.27800000000039e-06, 8.610000000013052e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.329999999986959e-07, 8.330000000021653e-07, 8.469999999982658e-07, 8.47000...</msg>
<status status="PASS" starttime="20201030 15:51:39.210" endtime="20201030 15:51:39.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.217" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:39.216" endtime="20201030 15:51:39.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.220" level="INFO">VALUE: [1.27800000000039e-06, 8.610000000013052e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.329999999986959e-07, 8.330000000021653e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.199999999985996e-07, 8.480000000012089e-07, 8.050000000030255e-07, 8.059999999990297e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.610000000013052e-07, 8.060000000024992e-07, 8.199999999985996e-07, 8.470000000017353e-07, 8.609999999978357e-07, 8.330000000021653e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.059999999990297e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.34000000001639e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.469999999982658e-07, 9.020000000005413e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.480000000012089e-07, 8.610000000013052e-07, 8.330000000021653e-07, 8.610000000013052e-07, 8.330000000021653e-07, 8.329999999986959e-07, 8.330000000021653e-07, 8.330000000021653e-07, 8.480000000012089e-07, 8.749999999974056e-07, 8.34000000001639e-07, 8.18999999999126e-07]</msg>
<status status="PASS" starttime="20201030 15:51:39.218" endtime="20201030 15:51:39.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.214" endtime="20201030 15:51:39.220"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:39.224" endtime="20201030 15:51:39.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.223" endtime="20201030 15:51:39.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.221" endtime="20201030 15:51:39.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.869" endtime="20201030 15:51:39.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.868" endtime="20201030 15:51:39.245"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.257" endtime="20201030 15:51:39.268"></status>
</kw>
<msg timestamp="20201030 15:51:39.269" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.255" endtime="20201030 15:51:39.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.271" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.270" endtime="20201030 15:51:39.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.272" endtime="20201030 15:51:39.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.253" endtime="20201030 15:51:39.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.251" endtime="20201030 15:51:39.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.282" endtime="20201030 15:51:39.591"></status>
</kw>
<msg timestamp="20201030 15:51:39.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023651556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023652861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.281" endtime="20201030 15:51:39.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023651556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023652861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.596" endtime="20201030 15:51:39.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.606" endtime="20201030 15:51:39.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.278" endtime="20201030 15:51:39.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.276" endtime="20201030 15:51:39.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:39.614" level="INFO">${RESULT} = [{'diff': 1.3050000000000561e-06}, {'diff': 8.200000000020691e-07}, {'diff': 8.329999999986959e-07}, {'diff': 8.34000000001639e-07}, {'diff': 8.339999999981695e-07}, {'diff': 8.610000000013052e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:51:39.610" endtime="20201030 15:51:39.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:39.618" level="INFO">${OVERHEAD} = {'diff': [1.3050000000000561e-06, 8.200000000020691e-07, 8.329999999986959e-07, 8.34000000001639e-07, 8.339999999981695e-07, 8.610000000013052e-07, 8.339999999981695e-07, 8.329999999986959e-07, 8.1999...</msg>
<status status="PASS" starttime="20201030 15:51:39.615" endtime="20201030 15:51:39.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.623" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:39.622" endtime="20201030 15:51:39.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.626" level="INFO">VALUE: [1.3050000000000561e-06, 8.200000000020691e-07, 8.329999999986959e-07, 8.34000000001639e-07, 8.339999999981695e-07, 8.610000000013052e-07, 8.339999999981695e-07, 8.329999999986959e-07, 8.199999999985996e-07, 9.030000000000149e-07, 8.480000000012089e-07, 8.469999999982658e-07, 8.330000000021653e-07, 7.779999999998899e-07, 9.020000000005413e-07, 8.329999999986959e-07, 8.609999999978357e-07, 8.609999999978357e-07, 8.470000000017353e-07, 9.019999999970718e-07, 8.470000000017353e-07, 8.34000000001639e-07, 8.89000000000445e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.330000000021653e-07, 8.469999999982658e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.34000000001639e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.89000000000445e-07, 8.339999999981695e-07, 8.34000000001639e-07, 7.909999999999862e-07, 8.620000000007788e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.329999999986959e-07, 8.339999999981695e-07, 8.470000000017353e-07, 8.34000000001639e-07, 8.479999999977395e-07, 8.34000000001639e-07, 8.329999999986959e-07]</msg>
<status status="PASS" starttime="20201030 15:51:39.624" endtime="20201030 15:51:39.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.619" endtime="20201030 15:51:39.628"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:39.632" endtime="20201030 15:51:39.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.630" endtime="20201030 15:51:39.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.629" endtime="20201030 15:51:39.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.250" endtime="20201030 15:51:39.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.249" endtime="20201030 15:51:39.653"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.661" endtime="20201030 15:51:39.672"></status>
</kw>
<msg timestamp="20201030 15:51:39.672" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.660" endtime="20201030 15:51:39.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.675" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.673" endtime="20201030 15:51:39.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.676" endtime="20201030 15:51:39.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.657" endtime="20201030 15:51:39.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.655" endtime="20201030 15:51:39.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.685" endtime="20201030 15:51:39.975"></status>
</kw>
<msg timestamp="20201030 15:51:39.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019480486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019481806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.684" endtime="20201030 15:51:39.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019480486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019481806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.979" endtime="20201030 15:51:39.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.989" endtime="20201030 15:51:39.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.681" endtime="20201030 15:51:39.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.679" endtime="20201030 15:51:39.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:40.000" level="INFO">${RESULT} = [{'diff': 1.3199999999990997e-06}, {'diff': 8.329999999986959e-07}, {'diff': 8.18999999999126e-07}, {'diff': 8.470000000017353e-07}, {'diff': 8.610000000013052e-07}, {'diff': 8.339999999981695e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:51:39.995" endtime="20201030 15:51:40.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:40.008" level="INFO">${OVERHEAD} = {'diff': [1.3199999999990997e-06, 8.329999999986959e-07, 8.18999999999126e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.339999999981695e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.6100...</msg>
<status status="PASS" starttime="20201030 15:51:40.002" endtime="20201030 15:51:40.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.016" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:40.014" endtime="20201030 15:51:40.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.019" level="INFO">VALUE: [1.3199999999990997e-06, 8.329999999986959e-07, 8.18999999999126e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.339999999981695e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.34000000001639e-07, 8.479999999977395e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.330000000021653e-07, 8.18999999999126e-07, 8.470000000017353e-07, 8.18999999999126e-07, 8.609999999978357e-07, 8.329999999986959e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.330000000021653e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.609999999978357e-07, 8.329999999986959e-07, 9.030000000000149e-07, 8.330000000021653e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.330000000021653e-07, 8.18999999999126e-07, 8.89000000000445e-07, 8.610000000013052e-07, 8.469999999982658e-07, 9.030000000000149e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.610000000013052e-07, 8.339999999981695e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.610000000013052e-07, 8.329999999986959e-07, 7.779999999998899e-07, 8.470000000017353e-07]</msg>
<status status="PASS" starttime="20201030 15:51:40.017" endtime="20201030 15:51:40.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.010" endtime="20201030 15:51:40.020"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:40.024" endtime="20201030 15:51:40.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.022" endtime="20201030 15:51:40.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.021" endtime="20201030 15:51:40.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.654" endtime="20201030 15:51:40.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.654" endtime="20201030 15:51:40.045"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.052" endtime="20201030 15:51:40.064"></status>
</kw>
<msg timestamp="20201030 15:51:40.065" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.051" endtime="20201030 15:51:40.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.067" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.066" endtime="20201030 15:51:40.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.068" endtime="20201030 15:51:40.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.048" endtime="20201030 15:51:40.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.047" endtime="20201030 15:51:40.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.077" endtime="20201030 15:51:40.361"></status>
</kw>
<msg timestamp="20201030 15:51:40.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019401181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019402472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:40.076" endtime="20201030 15:51:40.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019401181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019402472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:40.365" endtime="20201030 15:51:40.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.373" endtime="20201030 15:51:40.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.073" endtime="20201030 15:51:40.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.071" endtime="20201030 15:51:40.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:40.380" level="INFO">${RESULT} = [{'diff': 1.2910000000004862e-06}, {'diff': 8.609999999978357e-07}, {'diff': 8.610000000013052e-07}, {'diff': 8.610000000013052e-07}, {'diff': 8.469999999982658e-07}, {'diff': 8.329999999986959e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:40.377" endtime="20201030 15:51:40.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:40.384" level="INFO">${OVERHEAD} = {'diff': [1.2910000000004862e-06, 8.609999999978357e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.479999999977395e-07, 8.200000000020691e-07, 8.339...</msg>
<status status="PASS" starttime="20201030 15:51:40.381" endtime="20201030 15:51:40.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.389" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:40.388" endtime="20201030 15:51:40.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.391" level="INFO">VALUE: [1.2910000000004862e-06, 8.609999999978357e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.479999999977395e-07, 8.200000000020691e-07, 8.339999999981695e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.89000000000445e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.339999999981695e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.339999999981695e-07, 8.480000000012089e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.199999999985996e-07, 8.620000000007788e-07, 8.479999999977395e-07, 8.479999999977395e-07, 8.330000000021653e-07, 8.470000000017353e-07, 8.190000000025954e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.190000000025954e-07, 8.480000000012089e-07, 8.339999999981695e-07, 8.469999999982658e-07, 8.330000000021653e-07, 8.199999999985996e-07]</msg>
<status status="PASS" starttime="20201030 15:51:40.390" endtime="20201030 15:51:40.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.385" endtime="20201030 15:51:40.392"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:40.396" endtime="20201030 15:51:40.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.395" endtime="20201030 15:51:40.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.393" endtime="20201030 15:51:40.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.045" endtime="20201030 15:51:40.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.045" endtime="20201030 15:51:40.417"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.425" endtime="20201030 15:51:40.436"></status>
</kw>
<msg timestamp="20201030 15:51:40.437" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.423" endtime="20201030 15:51:40.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.439" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.438" endtime="20201030 15:51:40.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.440" endtime="20201030 15:51:40.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.420" endtime="20201030 15:51:40.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.419" endtime="20201030 15:51:40.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.453" endtime="20201030 15:51:40.740"></status>
</kw>
<msg timestamp="20201030 15:51:40.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019419028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019420319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:40.450" endtime="20201030 15:51:40.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019419028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019420319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:40.744" endtime="20201030 15:51:40.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.752" endtime="20201030 15:51:40.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.446" endtime="20201030 15:51:40.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.444" endtime="20201030 15:51:40.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:40.759" level="INFO">${RESULT} = [{'diff': 1.2909999999970168e-06}, {'diff': 8.049999999995561e-07}, {'diff': 8.199999999985996e-07}, {'diff': 8.18999999999126e-07}, {'diff': 8.610000000013052e-07}, {'diff': 8.329999999986959e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:51:40.755" endtime="20201030 15:51:40.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:40.763" level="INFO">${OVERHEAD} = {'diff': [1.2909999999970168e-06, 8.049999999995561e-07, 8.199999999985996e-07, 8.18999999999126e-07, 8.610000000013052e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.609999999978357e-07, 8.3300...</msg>
<status status="PASS" starttime="20201030 15:51:40.760" endtime="20201030 15:51:40.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.767" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:40.766" endtime="20201030 15:51:40.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.769" level="INFO">VALUE: [1.2909999999970168e-06, 8.049999999995561e-07, 8.199999999985996e-07, 8.18999999999126e-07, 8.610000000013052e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.609999999978357e-07, 8.330000000021653e-07, 8.34000000001639e-07, 8.469999999982658e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.34000000001639e-07, 9.169999999995848e-07, 8.470000000017353e-07, 8.200000000020691e-07, 8.89000000000445e-07, 7.919999999994598e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.330000000021653e-07, 8.470000000017353e-07, 8.34000000001639e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.330000000021653e-07, 8.469999999982658e-07, 8.620000000007788e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.479999999977395e-07, 8.610000000013052e-07, 8.479999999977395e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.479999999977395e-07, 8.750000000008751e-07, 8.469999999982658e-07, 8.480000000012089e-07, 8.330000000021653e-07, 8.34000000001639e-07]</msg>
<status status="PASS" starttime="20201030 15:51:40.768" endtime="20201030 15:51:40.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.764" endtime="20201030 15:51:40.773"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:40.777" endtime="20201030 15:51:40.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.776" endtime="20201030 15:51:40.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.774" endtime="20201030 15:51:40.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.418" endtime="20201030 15:51:40.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.417" endtime="20201030 15:51:40.798"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.806" endtime="20201030 15:51:40.817"></status>
</kw>
<msg timestamp="20201030 15:51:40.817" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.804" endtime="20201030 15:51:40.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.820" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.818" endtime="20201030 15:51:40.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.821" endtime="20201030 15:51:40.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.801" endtime="20201030 15:51:40.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.800" endtime="20201030 15:51:40.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.830" endtime="20201030 15:51:41.111"></status>
</kw>
<msg timestamp="20201030 15:51:41.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019310403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019311694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:40.828" endtime="20201030 15:51:41.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019310403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019311694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:41.115" endtime="20201030 15:51:41.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.123" endtime="20201030 15:51:41.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.826" endtime="20201030 15:51:41.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.824" endtime="20201030 15:51:41.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:41.130" level="INFO">${RESULT} = [{'diff': 1.2910000000004862e-06}, {'diff': 8.470000000017353e-07}, {'diff': 8.470000000017353e-07}, {'diff': 8.470000000017353e-07}, {'diff': 8.469999999982658e-07}, {'diff': 8.469999999982658e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:41.127" endtime="20201030 15:51:41.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:41.135" level="INFO">${OVERHEAD} = {'diff': [1.2910000000004862e-06, 8.470000000017353e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.330000000021653e-07, 8.470000000017353e-07, 8.330...</msg>
<status status="PASS" starttime="20201030 15:51:41.131" endtime="20201030 15:51:41.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.139" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:41.138" endtime="20201030 15:51:41.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.141" level="INFO">VALUE: [1.2910000000004862e-06, 8.470000000017353e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.330000000021653e-07, 8.470000000017353e-07, 8.330000000021653e-07, 8.34000000001639e-07, 8.89000000000445e-07, 8.470000000017353e-07, 9.030000000000149e-07, 8.050000000030255e-07, 8.330000000021653e-07, 8.18999999999126e-07, 8.34000000001639e-07, 8.330000000021653e-07, 8.200000000020691e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.610000000013052e-07, 8.469999999982658e-07, 9.030000000000149e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.479999999977395e-07, 8.329999999986959e-07, 8.339999999981695e-07, 8.18999999999126e-07, 8.610000000013052e-07, 8.330000000021653e-07, 8.750000000008751e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.469999999982658e-07, 8.330000000021653e-07, 8.480000000012089e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.18999999999126e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.480000000012089e-07, 8.479999999977395e-07, 8.479999999977395e-07, 8.620000000007788e-07, 8.610000000013052e-07, 8.89000000000445e-07]</msg>
<status status="PASS" starttime="20201030 15:51:41.140" endtime="20201030 15:51:41.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.135" endtime="20201030 15:51:41.142"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:41.146" endtime="20201030 15:51:41.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.145" endtime="20201030 15:51:41.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.143" endtime="20201030 15:51:41.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.798" endtime="20201030 15:51:41.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.798" endtime="20201030 15:51:41.167"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.175" endtime="20201030 15:51:41.187"></status>
</kw>
<msg timestamp="20201030 15:51:41.187" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.173" endtime="20201030 15:51:41.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.189" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.188" endtime="20201030 15:51:41.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.190" endtime="20201030 15:51:41.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.170" endtime="20201030 15:51:41.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.169" endtime="20201030 15:51:41.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.199" endtime="20201030 15:51:41.489"></status>
</kw>
<msg timestamp="20201030 15:51:41.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019472944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019474264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:41.198" endtime="20201030 15:51:41.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019472944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019474264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:41.493" endtime="20201030 15:51:41.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.502" endtime="20201030 15:51:41.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.195" endtime="20201030 15:51:41.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.194" endtime="20201030 15:51:41.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:41.509" level="INFO">${RESULT} = [{'diff': 1.3200000000025691e-06}, {'diff': 8.34000000001639e-07}, {'diff': 8.330000000021653e-07}, {'diff': 8.479999999977395e-07}, {'diff': 8.469999999982658e-07}, {'diff': 8.199999999985996e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:51:41.506" endtime="20201030 15:51:41.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:41.513" level="INFO">${OVERHEAD} = {'diff': [1.3200000000025691e-06, 8.34000000001639e-07, 8.330000000021653e-07, 8.479999999977395e-07, 8.469999999982658e-07, 8.199999999985996e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.33000...</msg>
<status status="PASS" starttime="20201030 15:51:41.510" endtime="20201030 15:51:41.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.517" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:41.516" endtime="20201030 15:51:41.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.520" level="INFO">VALUE: [1.3200000000025691e-06, 8.34000000001639e-07, 8.330000000021653e-07, 8.479999999977395e-07, 8.469999999982658e-07, 8.199999999985996e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.330000000021653e-07, 8.469999999982658e-07, 8.330000000021653e-07, 8.330000000021653e-07, 8.18999999999126e-07, 9.030000000000149e-07, 8.469999999982658e-07, 8.470000000017353e-07, 7.919999999994598e-07, 8.469999999982658e-07, 8.34000000001639e-07, 8.470000000017353e-07, 8.199999999985996e-07, 8.34000000001639e-07, 8.34000000001639e-07, 8.330000000021653e-07, 8.749999999974056e-07, 8.339999999981695e-07, 8.060000000024992e-07, 8.610000000013052e-07, 8.479999999977395e-07, 8.330000000021653e-07, 8.480000000012089e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.330000000021653e-07, 8.199999999985996e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.609999999978357e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.330000000021653e-07, 8.329999999986959e-07, 9.030000000000149e-07, 8.329999999986959e-07]</msg>
<status status="PASS" starttime="20201030 15:51:41.518" endtime="20201030 15:51:41.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.514" endtime="20201030 15:51:41.521"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:41.525" endtime="20201030 15:51:41.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.523" endtime="20201030 15:51:41.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.522" endtime="20201030 15:51:41.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.168" endtime="20201030 15:51:41.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.167" endtime="20201030 15:51:41.545"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.553" endtime="20201030 15:51:41.564"></status>
</kw>
<msg timestamp="20201030 15:51:41.565" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.552" endtime="20201030 15:51:41.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.567" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.566" endtime="20201030 15:51:41.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.568" endtime="20201030 15:51:41.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.549" endtime="20201030 15:51:41.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.547" endtime="20201030 15:51:41.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.578" endtime="20201030 15:51:41.863"></status>
</kw>
<msg timestamp="20201030 15:51:41.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019400639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019401958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:41.577" endtime="20201030 15:51:41.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019400639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019401958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:41.867" endtime="20201030 15:51:41.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.876" endtime="20201030 15:51:41.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.574" endtime="20201030 15:51:41.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.572" endtime="20201030 15:51:41.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:41.882" level="INFO">${RESULT} = [{'diff': 1.318999999999626e-06}, {'diff': 8.200000000020691e-07}, {'diff': 7.919999999994598e-07}, {'diff': 8.470000000017353e-07}, {'diff': 8.480000000012089e-07}, {'diff': 8.470000000017353e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:51:41.879" endtime="20201030 15:51:41.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:41.886" level="INFO">${OVERHEAD} = {'diff': [1.318999999999626e-06, 8.200000000020691e-07, 7.919999999994598e-07, 8.470000000017353e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.059999999990297e-07, 8.610000000013052e-07, 8.3399...</msg>
<status status="PASS" starttime="20201030 15:51:41.883" endtime="20201030 15:51:41.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.890" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:41.889" endtime="20201030 15:51:41.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.893" level="INFO">VALUE: [1.318999999999626e-06, 8.200000000020691e-07, 7.919999999994598e-07, 8.470000000017353e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.059999999990297e-07, 8.610000000013052e-07, 8.339999999981695e-07, 8.330000000021653e-07, 8.469999999982658e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.329999999986959e-07, 7.909999999999862e-07, 8.480000000012089e-07, 8.480000000012089e-07, 9.030000000000149e-07, 8.190000000025954e-07, 8.480000000012089e-07, 8.469999999982658e-07, 8.609999999978357e-07, 8.469999999982658e-07, 8.479999999977395e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.469999999982658e-07, 7.909999999999862e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.339999999981695e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.480000000012089e-07, 8.889999999969755e-07, 8.750000000008751e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.339999999981695e-07, 8.329999999986959e-07, 8.329999999986959e-07, 8.610000000013052e-07, 8.329999999986959e-07, 8.469999999982658e-07, 8.470000000017353e-07]</msg>
<status status="PASS" starttime="20201030 15:51:41.891" endtime="20201030 15:51:41.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.887" endtime="20201030 15:51:41.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:41.899" endtime="20201030 15:51:41.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.897" endtime="20201030 15:51:41.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.896" endtime="20201030 15:51:41.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.546" endtime="20201030 15:51:41.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.546" endtime="20201030 15:51:41.919"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.927" endtime="20201030 15:51:41.938"></status>
</kw>
<msg timestamp="20201030 15:51:41.938" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.926" endtime="20201030 15:51:41.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.940" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.939" endtime="20201030 15:51:41.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.942" endtime="20201030 15:51:41.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.923" endtime="20201030 15:51:41.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.921" endtime="20201030 15:51:41.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.951" endtime="20201030 15:51:42.239"></status>
</kw>
<msg timestamp="20201030 15:51:42.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019460903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019462194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:41.949" endtime="20201030 15:51:42.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019460903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019462194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:42.243" endtime="20201030 15:51:42.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.251" endtime="20201030 15:51:42.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.946" endtime="20201030 15:51:42.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.945" endtime="20201030 15:51:42.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:42.258" level="INFO">${RESULT} = [{'diff': 1.2909999999970168e-06}, {'diff': 8.89000000000445e-07}, {'diff': 8.18999999999126e-07}, {'diff': 8.469999999982658e-07}, {'diff': 8.609999999978357e-07}, {'diff': 8.610000000013052e-07}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:42.254" endtime="20201030 15:51:42.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:42.262" level="INFO">${OVERHEAD} = {'diff': [1.2909999999970168e-06, 8.89000000000445e-07, 8.18999999999126e-07, 8.469999999982658e-07, 8.609999999978357e-07, 8.610000000013052e-07, 8.329999999986959e-07, 8.609999999978357e-07, 8.47000...</msg>
<status status="PASS" starttime="20201030 15:51:42.258" endtime="20201030 15:51:42.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.267" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:42.266" endtime="20201030 15:51:42.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.269" level="INFO">VALUE: [1.2909999999970168e-06, 8.89000000000445e-07, 8.18999999999126e-07, 8.469999999982658e-07, 8.609999999978357e-07, 8.610000000013052e-07, 8.329999999986959e-07, 8.609999999978357e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.339999999981695e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.34000000001639e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.479999999977395e-07, 8.200000000020691e-07, 7.919999999994598e-07, 8.329999999986959e-07, 8.330000000021653e-07, 8.329999999986959e-07, 8.469999999982658e-07, 8.330000000021653e-07, 8.329999999986959e-07, 8.609999999978357e-07, 8.329999999986959e-07, 8.480000000012089e-07, 8.34000000001639e-07, 8.479999999977395e-07, 8.620000000007788e-07, 7.919999999994598e-07, 8.34000000001639e-07, 8.329999999986959e-07, 8.049999999995561e-07, 8.620000000007788e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.199999999985996e-07, 8.480000000012089e-07, 8.609999999978357e-07, 8.330000000021653e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.609999999978357e-07, 8.470000000017353e-07]</msg>
<status status="PASS" starttime="20201030 15:51:42.268" endtime="20201030 15:51:42.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.263" endtime="20201030 15:51:42.270"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:42.274" endtime="20201030 15:51:42.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.273" endtime="20201030 15:51:42.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.271" endtime="20201030 15:51:42.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.920" endtime="20201030 15:51:42.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.920" endtime="20201030 15:51:42.295"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.303" endtime="20201030 15:51:42.313"></status>
</kw>
<msg timestamp="20201030 15:51:42.314" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.301" endtime="20201030 15:51:42.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.316" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.315" endtime="20201030 15:51:42.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.318" endtime="20201030 15:51:42.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.298" endtime="20201030 15:51:42.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.297" endtime="20201030 15:51:42.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.326" endtime="20201030 15:51:42.608"></status>
</kw>
<msg timestamp="20201030 15:51:42.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019281139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019282444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:42.325" endtime="20201030 15:51:42.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019281139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019282444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:42.612" endtime="20201030 15:51:42.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.621" endtime="20201030 15:51:42.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.322" endtime="20201030 15:51:42.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.321" endtime="20201030 15:51:42.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:42.628" level="INFO">${RESULT} = [{'diff': 1.3050000000000561e-06}, {'diff': 8.610000000013052e-07}, {'diff': 7.639999999968505e-07}, {'diff': 8.610000000013052e-07}, {'diff': 9.299999999996811e-07}, {'diff': 8.480000000012089e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:42.625" endtime="20201030 15:51:42.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:42.632" level="INFO">${OVERHEAD} = {'diff': [1.3050000000000561e-06, 8.610000000013052e-07, 7.639999999968505e-07, 8.610000000013052e-07, 9.299999999996811e-07, 8.480000000012089e-07, 8.34000000001639e-07, 8.329999999986959e-07, 8.1999...</msg>
<status status="PASS" starttime="20201030 15:51:42.629" endtime="20201030 15:51:42.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.636" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:42.635" endtime="20201030 15:51:42.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.639" level="INFO">VALUE: [1.3050000000000561e-06, 8.610000000013052e-07, 7.639999999968505e-07, 8.610000000013052e-07, 9.299999999996811e-07, 8.480000000012089e-07, 8.34000000001639e-07, 8.329999999986959e-07, 8.199999999985996e-07, 8.469999999982658e-07, 8.479999999977395e-07, 8.609999999978357e-07, 8.469999999982658e-07, 8.479999999977395e-07, 8.329999999986959e-07, 8.480000000012089e-07, 8.199999999985996e-07, 7.919999999994598e-07, 8.330000000021653e-07, 8.18999999999126e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.339999999981695e-07, 8.889999999969755e-07, 8.329999999986959e-07, 8.18999999999126e-07, 8.620000000007788e-07, 8.18999999999126e-07, 8.199999999985996e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.059999999990297e-07, 8.480000000012089e-07, 8.199999999985996e-07, 8.18999999999126e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.329999999986959e-07, 8.330000000021653e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.339999999981695e-07, 8.469999999982658e-07, 8.339999999981695e-07, 8.330000000021653e-07, 8.18999999999126e-07, 8.18999999999126e-07, 8.469999999982658e-07]</msg>
<status status="PASS" starttime="20201030 15:51:42.638" endtime="20201030 15:51:42.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.633" endtime="20201030 15:51:42.640"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:42.644" endtime="20201030 15:51:42.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.642" endtime="20201030 15:51:42.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.641" endtime="20201030 15:51:42.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.296" endtime="20201030 15:51:42.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.295" endtime="20201030 15:51:42.665"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.672" endtime="20201030 15:51:42.683"></status>
</kw>
<msg timestamp="20201030 15:51:42.684" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.671" endtime="20201030 15:51:42.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.686" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.685" endtime="20201030 15:51:42.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.687" endtime="20201030 15:51:42.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.668" endtime="20201030 15:51:42.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.667" endtime="20201030 15:51:42.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.697" endtime="20201030 15:51:42.979"></status>
</kw>
<msg timestamp="20201030 15:51:42.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019343958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019345264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:42.695" endtime="20201030 15:51:42.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019343958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019345264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:42.983" endtime="20201030 15:51:42.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.991" endtime="20201030 15:51:42.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.693" endtime="20201030 15:51:42.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.691" endtime="20201030 15:51:42.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:42.998" level="INFO">${RESULT} = [{'diff': 1.3059999999995298e-06}, {'diff': 8.330000000021653e-07}, {'diff': 8.330000000021653e-07}, {'diff': 8.469999999982658e-07}, {'diff': 8.610000000013052e-07}, {'diff': 8.330000000021653e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:42.995" endtime="20201030 15:51:42.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:43.002" level="INFO">${OVERHEAD} = {'diff': [1.3059999999995298e-06, 8.330000000021653e-07, 8.330000000021653e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.330000000021653e-07, 8.049999999995561e-07, 8.329999999986959e-07, 8.339...</msg>
<status status="PASS" starttime="20201030 15:51:42.999" endtime="20201030 15:51:43.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.006" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:43.005" endtime="20201030 15:51:43.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.009" level="INFO">VALUE: [1.3059999999995298e-06, 8.330000000021653e-07, 8.330000000021653e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.330000000021653e-07, 8.049999999995561e-07, 8.329999999986959e-07, 8.339999999981695e-07, 8.609999999978357e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.329999999986959e-07, 8.470000000017353e-07, 9.030000000000149e-07, 8.610000000013052e-07, 7.779999999998899e-07, 8.480000000012089e-07, 8.34000000001639e-07, 8.330000000021653e-07, 8.059999999990297e-07, 8.609999999978357e-07, 8.610000000013052e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.18999999999126e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.18999999999126e-07, 8.060000000024992e-07, 8.479999999977395e-07, 8.610000000013052e-07, 8.200000000020691e-07, 8.749999999974056e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.620000000007788e-07, 8.330000000021653e-07]</msg>
<status status="PASS" starttime="20201030 15:51:43.007" endtime="20201030 15:51:43.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.003" endtime="20201030 15:51:43.011"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:43.014" endtime="20201030 15:51:43.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.013" endtime="20201030 15:51:43.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.012" endtime="20201030 15:51:43.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.665" endtime="20201030 15:51:43.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.665" endtime="20201030 15:51:43.035"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.043" endtime="20201030 15:51:43.054"></status>
</kw>
<msg timestamp="20201030 15:51:43.054" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:43.041" endtime="20201030 15:51:43.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.057" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:43.055" endtime="20201030 15:51:43.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.058" endtime="20201030 15:51:43.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.039" endtime="20201030 15:51:43.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.037" endtime="20201030 15:51:43.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.068" endtime="20201030 15:51:43.349"></status>
</kw>
<msg timestamp="20201030 15:51:43.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019328708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019330014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:43.066" endtime="20201030 15:51:43.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019328708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019330014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:43.353" endtime="20201030 15:51:43.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.361" endtime="20201030 15:51:43.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.063" endtime="20201030 15:51:43.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.062" endtime="20201030 15:51:43.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:43.367" level="INFO">${RESULT} = [{'diff': 1.3059999999995298e-06}, {'diff': 8.329999999986959e-07}, {'diff': 8.469999999982658e-07}, {'diff': 8.479999999977395e-07}, {'diff': 8.059999999990297e-07}, {'diff': 8.609999999978357e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:43.364" endtime="20201030 15:51:43.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:43.372" level="INFO">${OVERHEAD} = {'diff': [1.3059999999995298e-06, 8.329999999986959e-07, 8.469999999982658e-07, 8.479999999977395e-07, 8.059999999990297e-07, 8.609999999978357e-07, 8.610000000013052e-07, 8.89000000000445e-07, 9.0200...</msg>
<status status="PASS" starttime="20201030 15:51:43.368" endtime="20201030 15:51:43.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.378" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:43.377" endtime="20201030 15:51:43.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.382" level="INFO">VALUE: [1.3059999999995298e-06, 8.329999999986959e-07, 8.469999999982658e-07, 8.479999999977395e-07, 8.059999999990297e-07, 8.609999999978357e-07, 8.610000000013052e-07, 8.89000000000445e-07, 9.020000000005413e-07, 8.329999999986959e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.609999999978357e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.609999999978357e-07, 8.34000000001639e-07, 8.479999999977395e-07, 8.329999999986959e-07, 8.34000000001639e-07, 8.329999999986959e-07, 8.480000000012089e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.330000000021653e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.610000000013052e-07, 8.750000000008751e-07, 8.199999999985996e-07, 8.469999999982658e-07, 8.750000000008751e-07, 8.480000000012089e-07, 8.339999999981695e-07, 8.18999999999126e-07, 8.049999999995561e-07, 8.470000000017353e-07, 8.330000000021653e-07, 7.909999999999862e-07, 7.919999999994598e-07, 8.18999999999126e-07, 8.329999999986959e-07, 9.030000000000149e-07, 8.330000000021653e-07, 8.480000000012089e-07, 8.329999999986959e-07]</msg>
<status status="PASS" starttime="20201030 15:51:43.380" endtime="20201030 15:51:43.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.373" endtime="20201030 15:51:43.383"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:43.389" endtime="20201030 15:51:43.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.386" endtime="20201030 15:51:43.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.384" endtime="20201030 15:51:43.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.036" endtime="20201030 15:51:43.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.035" endtime="20201030 15:51:43.411"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.419" endtime="20201030 15:51:43.429"></status>
</kw>
<msg timestamp="20201030 15:51:43.430" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:43.417" endtime="20201030 15:51:43.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.432" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:43.431" endtime="20201030 15:51:43.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.433" endtime="20201030 15:51:43.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.414" endtime="20201030 15:51:43.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.413" endtime="20201030 15:51:43.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.443" endtime="20201030 15:51:43.732"></status>
</kw>
<msg timestamp="20201030 15:51:43.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019704736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019706042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:43.441" endtime="20201030 15:51:43.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019704736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019706042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:43.737" endtime="20201030 15:51:43.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.745" endtime="20201030 15:51:43.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.438" endtime="20201030 15:51:43.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.437" endtime="20201030 15:51:43.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:43.753" level="INFO">${RESULT} = [{'diff': 1.3059999999995298e-06}, {'diff': 8.329999999986959e-07}, {'diff': 8.469999999982658e-07}, {'diff': 8.469999999982658e-07}, {'diff': 8.470000000017353e-07}, {'diff': 9.020000000005413e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:43.750" endtime="20201030 15:51:43.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:43.757" level="INFO">${OVERHEAD} = {'diff': [1.3059999999995298e-06, 8.329999999986959e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.470000000017353e-07, 9.020000000005413e-07, 8.609999999978357e-07, 8.329999999986959e-07, 8.480...</msg>
<status status="PASS" starttime="20201030 15:51:43.754" endtime="20201030 15:51:43.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.762" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:43.761" endtime="20201030 15:51:43.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.764" level="INFO">VALUE: [1.3059999999995298e-06, 8.329999999986959e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.470000000017353e-07, 9.020000000005413e-07, 8.609999999978357e-07, 8.329999999986959e-07, 8.480000000012089e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.34000000001639e-07, 8.18999999999126e-07, 8.339999999981695e-07, 8.18999999999126e-07, 7.909999999999862e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.329999999986959e-07, 7.919999999994598e-07, 8.470000000017353e-07, 8.330000000021653e-07, 8.479999999977395e-07, 8.34000000001639e-07, 8.609999999978357e-07, 8.479999999977395e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.34000000001639e-07, 8.480000000012089e-07, 8.620000000007788e-07, 8.339999999981695e-07, 8.469999999982658e-07, 8.480000000012089e-07, 8.190000000025954e-07, 8.469999999982658e-07, 8.620000000007788e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.330000000021653e-07, 8.330000000021653e-07, 8.329999999986959e-07, 8.750000000008751e-07, 8.480000000012089e-07]</msg>
<status status="PASS" starttime="20201030 15:51:43.763" endtime="20201030 15:51:43.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.758" endtime="20201030 15:51:43.765"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:43.769" endtime="20201030 15:51:43.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.768" endtime="20201030 15:51:43.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.766" endtime="20201030 15:51:43.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.411" endtime="20201030 15:51:43.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.411" endtime="20201030 15:51:43.790"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.798" endtime="20201030 15:51:43.808"></status>
</kw>
<msg timestamp="20201030 15:51:43.809" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:43.796" endtime="20201030 15:51:43.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.811" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:43.810" endtime="20201030 15:51:43.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.812" endtime="20201030 15:51:43.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.794" endtime="20201030 15:51:43.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.792" endtime="20201030 15:51:43.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.822" endtime="20201030 15:51:44.112"></status>
</kw>
<msg timestamp="20201030 15:51:44.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019553583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019554847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:43.821" endtime="20201030 15:51:44.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019553583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019554847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.116" endtime="20201030 15:51:44.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.125" endtime="20201030 15:51:44.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.818" endtime="20201030 15:51:44.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.817" endtime="20201030 15:51:44.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:44.131" level="INFO">${RESULT} = [{'diff': 1.26400000000082e-06}, {'diff': 8.469999999982658e-07}, {'diff': 8.470000000017353e-07}, {'diff': 8.469999999982658e-07}, {'diff': 8.469999999982658e-07}, {'diff': 8.34000000001639e-07}, {'d...</msg>
<status status="PASS" starttime="20201030 15:51:44.128" endtime="20201030 15:51:44.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:44.135" level="INFO">${OVERHEAD} = {'diff': [1.26400000000082e-06, 8.469999999982658e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.34000000001639e-07, 8.339999999981695e-07, 8.329999999986959e-07, 8.340000...</msg>
<status status="PASS" starttime="20201030 15:51:44.132" endtime="20201030 15:51:44.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.139" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:44.138" endtime="20201030 15:51:44.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.142" level="INFO">VALUE: [1.26400000000082e-06, 8.469999999982658e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.34000000001639e-07, 8.339999999981695e-07, 8.329999999986959e-07, 8.34000000001639e-07, 8.049999999995561e-07, 8.18999999999126e-07, 8.339999999981695e-07, 8.479999999977395e-07, 8.329999999986959e-07, 8.329999999986959e-07, 8.619999999973094e-07, 8.329999999986959e-07, 8.480000000012089e-07, 8.610000000013052e-07, 8.329999999986959e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.480000000012089e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.480000000012089e-07, 8.480000000012089e-07, 8.330000000021653e-07, 8.329999999986959e-07, 8.329999999986959e-07, 8.469999999982658e-07, 8.480000000012089e-07, 8.609999999978357e-07, 8.479999999977395e-07, 9.020000000005413e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.610000000013052e-07, 8.330000000021653e-07, 8.610000000013052e-07, 8.329999999986959e-07, 8.059999999990297e-07, 7.779999999998899e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.200000000020691e-07, 8.34000000001639e-07, 8.339999999981695e-07, 8.620000000007788e-07]</msg>
<status status="PASS" starttime="20201030 15:51:44.140" endtime="20201030 15:51:44.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.136" endtime="20201030 15:51:44.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:44.150" endtime="20201030 15:51:44.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.149" endtime="20201030 15:51:44.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.147" endtime="20201030 15:51:44.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.791" endtime="20201030 15:51:44.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.790" endtime="20201030 15:51:44.171"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.178" endtime="20201030 15:51:44.189"></status>
</kw>
<msg timestamp="20201030 15:51:44.190" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.177" endtime="20201030 15:51:44.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.192" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.191" endtime="20201030 15:51:44.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.193" endtime="20201030 15:51:44.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.174" endtime="20201030 15:51:44.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.173" endtime="20201030 15:51:44.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.202" endtime="20201030 15:51:44.483"></status>
</kw>
<msg timestamp="20201030 15:51:44.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019346042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019347333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.200" endtime="20201030 15:51:44.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019346042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019347333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.489" endtime="20201030 15:51:44.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.499" endtime="20201030 15:51:44.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.198" endtime="20201030 15:51:44.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.196" endtime="20201030 15:51:44.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:44.510" level="INFO">${RESULT} = [{'diff': 1.2910000000004862e-06}, {'diff': 8.470000000017353e-07}, {'diff': 8.469999999982658e-07}, {'diff': 8.470000000017353e-07}, {'diff': 8.479999999977395e-07}, {'diff': 8.470000000017353e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:44.505" endtime="20201030 15:51:44.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:44.518" level="INFO">${OVERHEAD} = {'diff': [1.2910000000004862e-06, 8.470000000017353e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.479999999977395e-07, 8.470000000017353e-07, 8.049999999995561e-07, 8.610000000013052e-07, 8.330...</msg>
<status status="PASS" starttime="20201030 15:51:44.511" endtime="20201030 15:51:44.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.523" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:44.522" endtime="20201030 15:51:44.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.525" level="INFO">VALUE: [1.2910000000004862e-06, 8.470000000017353e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.479999999977395e-07, 8.470000000017353e-07, 8.049999999995561e-07, 8.610000000013052e-07, 8.330000000021653e-07, 8.339999999981695e-07, 8.329999999986959e-07, 8.609999999978357e-07, 8.89000000000445e-07, 8.190000000025954e-07, 8.329999999986959e-07, 8.050000000030255e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.330000000021653e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.480000000012089e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.330000000021653e-07, 8.610000000013052e-07, 8.480000000012089e-07, 8.329999999986959e-07, 8.329999999986959e-07, 8.199999999985996e-07, 8.34000000001639e-07, 8.609999999978357e-07, 8.480000000012089e-07, 8.060000000024992e-07, 8.34000000001639e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.18999999999126e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.050000000030255e-07, 8.480000000012089e-07, 8.609999999978357e-07]</msg>
<status status="PASS" starttime="20201030 15:51:44.524" endtime="20201030 15:51:44.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.519" endtime="20201030 15:51:44.532"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:44.536" endtime="20201030 15:51:44.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.534" endtime="20201030 15:51:44.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.533" endtime="20201030 15:51:44.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.171" endtime="20201030 15:51:44.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.171" endtime="20201030 15:51:44.556"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.564" endtime="20201030 15:51:44.576"></status>
</kw>
<msg timestamp="20201030 15:51:44.576" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.563" endtime="20201030 15:51:44.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.579" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.577" endtime="20201030 15:51:44.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.580" endtime="20201030 15:51:44.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.560" endtime="20201030 15:51:44.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.558" endtime="20201030 15:51:44.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.589" endtime="20201030 15:51:44.878"></status>
</kw>
<msg timestamp="20201030 15:51:44.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019499903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019501208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.587" endtime="20201030 15:51:44.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019499903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019501208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.882" endtime="20201030 15:51:44.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.891" endtime="20201030 15:51:44.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.585" endtime="20201030 15:51:44.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.583" endtime="20201030 15:51:44.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:44.898" level="INFO">${RESULT} = [{'diff': 1.3050000000000561e-06}, {'diff': 8.469999999982658e-07}, {'diff': 8.470000000017353e-07}, {'diff': 8.329999999986959e-07}, {'diff': 8.469999999982658e-07}, {'diff': 8.469999999982658e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:44.895" endtime="20201030 15:51:44.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:44.902" level="INFO">${OVERHEAD} = {'diff': [1.3050000000000561e-06, 8.469999999982658e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.480000000012089e-07, 8.890...</msg>
<status status="PASS" starttime="20201030 15:51:44.899" endtime="20201030 15:51:44.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.906" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:44.905" endtime="20201030 15:51:44.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.909" level="INFO">VALUE: [1.3050000000000561e-06, 8.469999999982658e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.480000000012089e-07, 8.89000000000445e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.190000000025954e-07, 8.480000000012089e-07, 8.469999999982658e-07, 8.480000000012089e-07, 8.480000000012089e-07, 8.339999999981695e-07, 8.18999999999126e-07, 9.030000000000149e-07, 8.330000000021653e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.200000000020691e-07, 8.610000000013052e-07, 8.049999999995561e-07, 8.469999999982658e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.190000000025954e-07, 8.480000000012089e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.470000000017353e-07, 9.030000000000149e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.469999999982658e-07, 9.030000000000149e-07, 8.329999999986959e-07, 8.469999999982658e-07, 8.339999999981695e-07, 8.480000000012089e-07, 8.480000000012089e-07, 8.479999999977395e-07, 8.749999999974056e-07, 8.470000000017353e-07, 8.620000000007788e-07, 8.329999999986959e-07]</msg>
<status status="PASS" starttime="20201030 15:51:44.907" endtime="20201030 15:51:44.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.903" endtime="20201030 15:51:44.910"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:44.914" endtime="20201030 15:51:44.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.912" endtime="20201030 15:51:44.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.911" endtime="20201030 15:51:44.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.557" endtime="20201030 15:51:44.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.557" endtime="20201030 15:51:44.934"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.943" endtime="20201030 15:51:44.953"></status>
</kw>
<msg timestamp="20201030 15:51:44.954" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.941" endtime="20201030 15:51:44.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.956" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.955" endtime="20201030 15:51:44.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.957" endtime="20201030 15:51:44.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.938" endtime="20201030 15:51:44.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.937" endtime="20201030 15:51:44.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.967" endtime="20201030 15:51:45.257"></status>
</kw>
<msg timestamp="20201030 15:51:45.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019854625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019855931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.966" endtime="20201030 15:51:45.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019854625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019855931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.262" endtime="20201030 15:51:45.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.270" endtime="20201030 15:51:45.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.963" endtime="20201030 15:51:45.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.962" endtime="20201030 15:51:45.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:45.278" level="INFO">${RESULT} = [{'diff': 1.3059999999995298e-06}, {'diff': 9.030000000000149e-07}, {'diff': 8.330000000021653e-07}, {'diff': 8.18999999999126e-07}, {'diff': 8.469999999982658e-07}, {'diff': 8.610000000013052e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:51:45.274" endtime="20201030 15:51:45.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:45.282" level="INFO">${OVERHEAD} = {'diff': [1.3059999999995298e-06, 9.030000000000149e-07, 8.330000000021653e-07, 8.18999999999126e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.34000000001639e-07, 8.46999...</msg>
<status status="PASS" starttime="20201030 15:51:45.279" endtime="20201030 15:51:45.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.287" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:45.286" endtime="20201030 15:51:45.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.290" level="INFO">VALUE: [1.3059999999995298e-06, 9.030000000000149e-07, 8.330000000021653e-07, 8.18999999999126e-07, 8.469999999982658e-07, 8.610000000013052e-07, 8.470000000017353e-07, 8.34000000001639e-07, 8.469999999982658e-07, 8.480000000012089e-07, 8.469999999982658e-07, 8.329999999986959e-07, 8.609999999978357e-07, 8.469999999982658e-07, 8.339999999981695e-07, 8.34000000001639e-07, 8.469999999982658e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.330000000021653e-07, 8.34000000001639e-07, 8.339999999981695e-07, 8.339999999981695e-07, 8.610000000013052e-07, 8.330000000021653e-07, 8.329999999986959e-07, 8.34000000001639e-07, 8.339999999981695e-07, 8.470000000017353e-07, 8.470000000017353e-07, 8.199999999985996e-07, 8.479999999977395e-07, 8.34000000001639e-07, 8.470000000017353e-07, 8.469999999982658e-07, 8.609999999978357e-07, 8.329999999986959e-07, 8.470000000017353e-07, 8.329999999986959e-07, 8.330000000021653e-07, 8.199999999985996e-07, 8.470000000017353e-07, 8.610000000013052e-07, 8.469999999982658e-07, 8.480000000012089e-07, 8.479999999977395e-07, 8.329999999986959e-07, 8.18999999999126e-07, 8.470000000017353e-07, 8.199999999985996e-07]</msg>
<status status="PASS" starttime="20201030 15:51:45.288" endtime="20201030 15:51:45.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.283" endtime="20201030 15:51:45.292"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:45.296" endtime="20201030 15:51:45.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.295" endtime="20201030 15:51:45.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.293" endtime="20201030 15:51:45.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.935" endtime="20201030 15:51:45.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.935" endtime="20201030 15:51:45.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.748" endtime="20201030 15:51:45.318"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:37.679" endtime="20201030 15:51:45.318" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:45.326" endtime="20201030 15:51:45.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.324" endtime="20201030 15:51:45.346"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.360" endtime="20201030 15:51:45.374"></status>
</kw>
<msg timestamp="20201030 15:51:45.374" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.358" endtime="20201030 15:51:45.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.377" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.375" endtime="20201030 15:51:45.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.380" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:45.378" endtime="20201030 15:51:45.380"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:45.356" endtime="20201030 15:51:45.381"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:45.353" endtime="20201030 15:51:45.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.352" endtime="20201030 15:51:45.382"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:45.386" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:45.385" endtime="20201030 15:51:45.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.383" endtime="20201030 15:51:45.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.351" endtime="20201030 15:51:45.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.350" endtime="20201030 15:51:45.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.387" endtime="20201030 15:51:45.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.349" endtime="20201030 15:51:45.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.347" endtime="20201030 15:51:45.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.323" endtime="20201030 15:51:45.390"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.400" endtime="20201030 15:51:45.419"></status>
</kw>
<msg timestamp="20201030 15:51:45.419" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.399" endtime="20201030 15:51:45.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.422" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.420" endtime="20201030 15:51:45.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.424" endtime="20201030 15:51:45.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.395" endtime="20201030 15:51:45.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.393" endtime="20201030 15:51:45.426"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.429" endtime="20201030 15:51:45.430"></status>
</kw>
<msg timestamp="20201030 15:51:45.431" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:45.427" endtime="20201030 15:51:45.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.435" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:45.434" endtime="20201030 15:51:45.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.437" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:45.436" endtime="20201030 15:51:45.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.432" endtime="20201030 15:51:45.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.442" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:45.441" endtime="20201030 15:51:45.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.444" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:45.443" endtime="20201030 15:51:45.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.439" endtime="20201030 15:51:45.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.452" endtime="20201030 15:51:45.757"></status>
</kw>
<msg timestamp="20201030 15:51:45.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066668611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066672431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.450" endtime="20201030 15:51:45.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066668611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066672431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.761" endtime="20201030 15:51:45.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.771" endtime="20201030 15:51:45.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.448" endtime="20201030 15:51:45.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.446" endtime="20201030 15:51:45.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:45.779" level="INFO">${RESULT} = [{'diff': 3.8200000000016e-06}, {'diff': 2.777999999994951e-06}, {'diff': 2.7630000000028465e-06}, {'diff': 2.7360000000031803e-06}, {'diff': 2.805999999994091e-06}, {'diff': 2.7499999999958114e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:45.775" endtime="20201030 15:51:45.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:45.785" level="INFO">${OVERHEAD} = {'diff': [3.8200000000016e-06, 2.777999999994951e-06, 2.7630000000028465e-06, 2.7360000000031803e-06, 2.805999999994091e-06, 2.7499999999958114e-06, 2.805999999994091e-06, 2.7910000000019863e-06, 2.76...</msg>
<status status="PASS" starttime="20201030 15:51:45.780" endtime="20201030 15:51:45.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.790" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 15:51:45.789" endtime="20201030 15:51:45.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.792" level="INFO">VALUE: [3.8200000000016e-06, 2.777999999994951e-06, 2.7630000000028465e-06, 2.7360000000031803e-06, 2.805999999994091e-06, 2.7499999999958114e-06, 2.805999999994091e-06, 2.7910000000019863e-06, 2.7639999999884424e-06, 2.7769999999954775e-06, 2.6939999999975317e-06, 2.750000000009689e-06, 2.750000000009689e-06, 2.750000000009689e-06, 2.79200000000146e-06, 2.76400000000232e-06, 2.76400000000232e-06, 2.7499999999958114e-06, 2.76400000000232e-06, 2.7499999999958114e-06, 2.7499999999958114e-06, 2.76400000000232e-06, 2.7499999999958114e-06, 2.76400000000232e-06, 2.7360000000031803e-06, 2.7499999999958114e-06, 2.76400000000232e-06, 2.777999999994951e-06, 2.8200000000006e-06, 2.7360000000031803e-06, 2.76400000000232e-06, 2.7629999999889687e-06, 2.7499999999958114e-06, 2.7639999999884424e-06, 2.7499999999958114e-06, 2.7080000000040405e-06, 2.7769999999954775e-06, 2.76400000000232e-06, 2.76400000000232e-06, 2.76400000000232e-06, 2.777999999994951e-06, 2.76400000000232e-06, 2.76400000000232e-06, 2.76400000000232e-06, 2.7499999999958114e-06, 2.76400000000232e-06, 2.7499999999958114e-06, 2.7360000000031803e-06, 2.7499999999958114e-06, 2.7499999999958114e-06]</msg>
<status status="PASS" starttime="20201030 15:51:45.791" endtime="20201030 15:51:45.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.786" endtime="20201030 15:51:45.793"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:45.797" endtime="20201030 15:51:45.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.796" endtime="20201030 15:51:45.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.795" endtime="20201030 15:51:45.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.391" endtime="20201030 15:51:45.821"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:45.320" endtime="20201030 15:51:45.821" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:45.830" endtime="20201030 15:51:45.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.828" endtime="20201030 15:51:45.851"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.864" endtime="20201030 15:51:45.878"></status>
</kw>
<msg timestamp="20201030 15:51:45.878" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.862" endtime="20201030 15:51:45.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.881" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.880" endtime="20201030 15:51:45.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.885" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:45.882" endtime="20201030 15:51:45.885"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:45.860" endtime="20201030 15:51:45.886"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:45.857" endtime="20201030 15:51:45.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.856" endtime="20201030 15:51:45.887"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:45.891" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:45.890" endtime="20201030 15:51:45.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.888" endtime="20201030 15:51:45.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.855" endtime="20201030 15:51:45.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.855" endtime="20201030 15:51:45.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.892" endtime="20201030 15:51:45.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.853" endtime="20201030 15:51:45.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.852" endtime="20201030 15:51:45.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.826" endtime="20201030 15:51:45.895"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.903" endtime="20201030 15:51:45.949"></status>
</kw>
<msg timestamp="20201030 15:51:45.950" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.902" endtime="20201030 15:51:45.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.952" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.951" endtime="20201030 15:51:45.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.954" endtime="20201030 15:51:45.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.899" endtime="20201030 15:51:45.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.897" endtime="20201030 15:51:45.957"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.959" endtime="20201030 15:51:45.960"></status>
</kw>
<msg timestamp="20201030 15:51:45.961" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:45.957" endtime="20201030 15:51:45.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.965" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:45.964" endtime="20201030 15:51:45.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.967" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:45.966" endtime="20201030 15:51:45.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.962" endtime="20201030 15:51:45.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.972" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:45.971" endtime="20201030 15:51:45.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.974" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:45.973" endtime="20201030 15:51:45.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.968" endtime="20201030 15:51:45.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.981" endtime="20201030 15:51:46.269"></status>
</kw>
<msg timestamp="20201030 15:51:46.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065513319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065533333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.980" endtime="20201030 15:51:46.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065513319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065533333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.273" endtime="20201030 15:51:46.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.281" endtime="20201030 15:51:46.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.977" endtime="20201030 15:51:46.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.975" endtime="20201030 15:51:46.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:46.288" level="INFO">${RESULT} = [{'diff': 2.0013999999998755e-05}, {'diff': 1.965299999999448e-05}, {'diff': 1.963900000000185e-05}, {'diff': 1.958300000000357e-05}, {'diff': 1.962500000000922e-05}, {'diff': 1.963900000000185e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:51:46.285" endtime="20201030 15:51:46.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:46.292" level="INFO">${OVERHEAD} = {'diff': [2.0013999999998755e-05, 1.965299999999448e-05, 1.963900000000185e-05, 1.958300000000357e-05, 1.962500000000922e-05, 1.963900000000185e-05, 1.963900000000185e-05, 1.963900000000185e-05, 1.962...</msg>
<status status="PASS" starttime="20201030 15:51:46.289" endtime="20201030 15:51:46.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.297" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 15:51:46.296" endtime="20201030 15:51:46.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.299" level="INFO">VALUE: [2.0013999999998755e-05, 1.965299999999448e-05, 1.963900000000185e-05, 1.958300000000357e-05, 1.962500000000922e-05, 1.963900000000185e-05, 1.963900000000185e-05, 1.963900000000185e-05, 1.962499999999534e-05, 1.963900000000185e-05, 1.965299999999448e-05, 1.962500000000922e-05, 1.963900000000185e-05, 1.963900000000185e-05, 1.969500000000013e-05, 1.962499999999534e-05, 1.965299999999448e-05, 1.965299999999448e-05, 1.963900000000185e-05, 1.963900000000185e-05, 1.9583999999989166e-05, 1.963900000000185e-05, 1.963900000000185e-05, 1.9707999999993286e-05, 1.9610999999988832e-05, 1.963899999998797e-05, 1.965299999999448e-05, 1.963900000000185e-05, 1.9584000000003043e-05, 1.962499999999534e-05, 1.9653000000008358e-05, 1.9651999999995007e-05, 1.9582999999989692e-05, 1.965299999999448e-05, 1.965299999999448e-05, 1.963900000000185e-05, 1.963900000000185e-05, 1.965299999999448e-05, 1.962500000000922e-05, 1.962500000000922e-05, 1.963899999998797e-05, 1.962499999999534e-05, 1.963900000000185e-05, 1.963900000000185e-05, 1.958300000000357e-05, 1.9652000000008885e-05, 1.963900000000185e-05, 1.962500000000922e-05, 1.963900000000185e-05, 1.963900000000185e-05]</msg>
<status status="PASS" starttime="20201030 15:51:46.298" endtime="20201030 15:51:46.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.293" endtime="20201030 15:51:46.300"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:46.304" endtime="20201030 15:51:46.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.303" endtime="20201030 15:51:46.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.301" endtime="20201030 15:51:46.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.896" endtime="20201030 15:51:46.325"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:45.823" endtime="20201030 15:51:46.325" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:46.332" endtime="20201030 15:51:46.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.331" endtime="20201030 15:51:46.352"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.366" endtime="20201030 15:51:46.380"></status>
</kw>
<msg timestamp="20201030 15:51:46.380" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.365" endtime="20201030 15:51:46.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.383" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.382" endtime="20201030 15:51:46.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.386" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:46.384" endtime="20201030 15:51:46.386"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:46.362" endtime="20201030 15:51:46.387"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:46.360" endtime="20201030 15:51:46.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.358" endtime="20201030 15:51:46.388"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:46.392" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:46.391" endtime="20201030 15:51:46.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.389" endtime="20201030 15:51:46.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.357" endtime="20201030 15:51:46.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.356" endtime="20201030 15:51:46.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.393" endtime="20201030 15:51:46.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.354" endtime="20201030 15:51:46.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.353" endtime="20201030 15:51:46.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.329" endtime="20201030 15:51:46.396"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.405" endtime="20201030 15:51:46.521"></status>
</kw>
<msg timestamp="20201030 15:51:46.521" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.403" endtime="20201030 15:51:46.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.524" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.522" endtime="20201030 15:51:46.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.525" endtime="20201030 15:51:46.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.400" endtime="20201030 15:51:46.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.398" endtime="20201030 15:51:46.528"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.530" endtime="20201030 15:51:46.532"></status>
</kw>
<msg timestamp="20201030 15:51:46.532" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:46.529" endtime="20201030 15:51:46.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.536" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:46.535" endtime="20201030 15:51:46.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.538" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:46.537" endtime="20201030 15:51:46.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.533" endtime="20201030 15:51:46.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.544" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:46.543" endtime="20201030 15:51:46.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.546" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:46.545" endtime="20201030 15:51:46.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.541" endtime="20201030 15:51:46.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.554" endtime="20201030 15:51:46.848"></status>
</kw>
<msg timestamp="20201030 15:51:46.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066021347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066058931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.552" endtime="20201030 15:51:46.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066021347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066058931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.852" endtime="20201030 15:51:46.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.860" endtime="20201030 15:51:46.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.549" endtime="20201030 15:51:46.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.548" endtime="20201030 15:51:46.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:46.867" level="INFO">${RESULT} = [{'diff': 3.758400000000717e-05}, {'diff': 3.7083000000007194e-05}, {'diff': 3.7069000000000685e-05}, {'diff': 3.699999999999537e-05}, {'diff': 3.7069000000000685e-05}, {'diff': 3.712500000001284e-05}...</msg>
<status status="PASS" starttime="20201030 15:51:46.863" endtime="20201030 15:51:46.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:46.871" level="INFO">${OVERHEAD} = {'diff': [3.758400000000717e-05, 3.7083000000007194e-05, 3.7069000000000685e-05, 3.699999999999537e-05, 3.7069000000000685e-05, 3.712500000001284e-05, 3.708400000000667e-05, 3.707000000000016e-05, 3.7...</msg>
<status status="PASS" starttime="20201030 15:51:46.868" endtime="20201030 15:51:46.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.876" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 15:51:46.875" endtime="20201030 15:51:46.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.879" level="INFO">VALUE: [3.758400000000717e-05, 3.7083000000007194e-05, 3.7069000000000685e-05, 3.699999999999537e-05, 3.7069000000000685e-05, 3.712500000001284e-05, 3.708400000000667e-05, 3.707000000000016e-05, 3.7124999999998964e-05, 3.7110999999992456e-05, 3.7083000000007194e-05, 3.704200000000102e-05, 3.7082999999993316e-05, 3.708399999999279e-05, 3.708400000000667e-05, 3.7096999999999825e-05, 3.708400000000667e-05, 3.707000000000016e-05, 3.705600000000753e-05, 3.70979999999993e-05, 3.715199999999863e-05, 3.7082999999993316e-05, 3.7083000000007194e-05, 3.7083000000007194e-05, 3.7069000000000685e-05, 3.707000000000016e-05, 3.708400000000667e-05, 3.7096999999999825e-05, 3.7069000000000685e-05, 3.708400000000667e-05, 3.708300000002107e-05, 3.7138999999991595e-05, 3.7098000000013176e-05, 3.7082999999993316e-05, 3.707000000000016e-05, 3.7069000000000685e-05, 3.705599999997977e-05, 3.708399999999279e-05, 3.708399999999279e-05, 3.707000000000016e-05, 3.708399999999279e-05, 3.7138999999991595e-05, 3.7082999999993316e-05, 3.708399999999279e-05, 3.709699999998595e-05, 3.702799999999451e-05, 3.7084000000020545e-05, 3.70970000000137e-05, 3.7082999999993316e-05, 3.711100000000633e-05]</msg>
<status status="PASS" starttime="20201030 15:51:46.877" endtime="20201030 15:51:46.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.872" endtime="20201030 15:51:46.880"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:46.884" endtime="20201030 15:51:46.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.882" endtime="20201030 15:51:46.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.881" endtime="20201030 15:51:46.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.397" endtime="20201030 15:51:46.904"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:46.327" endtime="20201030 15:51:46.905" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:46.912" endtime="20201030 15:51:46.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.910" endtime="20201030 15:51:46.932"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.945" endtime="20201030 15:51:46.958"></status>
</kw>
<msg timestamp="20201030 15:51:46.959" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.943" endtime="20201030 15:51:46.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.961" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.960" endtime="20201030 15:51:46.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.964" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:46.962" endtime="20201030 15:51:46.965"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:46.941" endtime="20201030 15:51:46.965"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:46.938" endtime="20201030 15:51:46.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.937" endtime="20201030 15:51:46.966"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:46.970" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:46.969" endtime="20201030 15:51:46.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.967" endtime="20201030 15:51:46.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.936" endtime="20201030 15:51:46.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.936" endtime="20201030 15:51:46.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.972" endtime="20201030 15:51:46.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.934" endtime="20201030 15:51:46.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.932" endtime="20201030 15:51:46.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.909" endtime="20201030 15:51:46.974"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.986" endtime="20201030 15:51:47.006"></status>
</kw>
<msg timestamp="20201030 15:51:47.006" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.985" endtime="20201030 15:51:47.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.009" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.007" endtime="20201030 15:51:47.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.010" endtime="20201030 15:51:47.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.979" endtime="20201030 15:51:47.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.976" endtime="20201030 15:51:47.013"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.015" endtime="20201030 15:51:47.017"></status>
</kw>
<msg timestamp="20201030 15:51:47.017" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:47.014" endtime="20201030 15:51:47.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.021" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:47.020" endtime="20201030 15:51:47.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.023" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:47.022" endtime="20201030 15:51:47.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.018" endtime="20201030 15:51:47.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.028" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:47.027" endtime="20201030 15:51:47.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.030" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:47.029" endtime="20201030 15:51:47.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.025" endtime="20201030 15:51:47.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.037" endtime="20201030 15:51:47.362"></status>
</kw>
<msg timestamp="20201030 15:51:47.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067270236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067271361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:47.036" endtime="20201030 15:51:47.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067270236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067271361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:47.367" endtime="20201030 15:51:47.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.375" endtime="20201030 15:51:47.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.033" endtime="20201030 15:51:47.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.031" endtime="20201030 15:51:47.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:47.381" level="INFO">${RESULT} = [{'diff': 1.1250000000045945e-06}, {'diff': 9.299999999962116e-07}, {'diff': 9.160000000035806e-07}, {'diff': 9.029999999965455e-07}, {'diff': 9.309999999956853e-07}, {'diff': 9.299999999962116e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:47.378" endtime="20201030 15:51:47.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:47.386" level="INFO">${OVERHEAD} = {'diff': [1.1250000000045945e-06, 9.299999999962116e-07, 9.160000000035806e-07, 9.029999999965455e-07, 9.309999999956853e-07, 9.299999999962116e-07, 9.160000000035806e-07, 9.169999999891765e-07, 9.309...</msg>
<status status="PASS" starttime="20201030 15:51:47.382" endtime="20201030 15:51:47.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.391" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 15:51:47.390" endtime="20201030 15:51:47.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.393" level="INFO">VALUE: [1.1250000000045945e-06, 9.299999999962116e-07, 9.160000000035806e-07, 9.029999999965455e-07, 9.309999999956853e-07, 9.299999999962116e-07, 9.160000000035806e-07, 9.169999999891765e-07, 9.309999999956853e-07, 9.299999999962116e-07, 9.309999999956853e-07, 9.029999999965455e-07, 9.029999999965455e-07, 9.299999999962116e-07, 9.169999999891765e-07, 9.160000000035806e-07, 9.299999999962116e-07, 9.169999999891765e-07, 9.169999999891765e-07, 9.159999999897028e-07, 9.169999999891765e-07, 9.170000000030543e-07, 9.170000000030543e-07, 9.160000000035806e-07, 9.160000000035806e-07, 9.450000000021941e-07, 9.170000000030543e-07, 9.170000000030543e-07, 9.019999999970718e-07, 9.310000000095631e-07, 9.300000000100894e-07, 9.169999999891765e-07, 9.169999999891765e-07, 9.169999999891765e-07, 9.170000000030543e-07, 9.299999999962116e-07, 9.309999999956853e-07, 9.309999999956853e-07, 9.160000000035806e-07, 9.019999999970718e-07, 9.309999999956853e-07, 9.170000000030543e-07, 9.169999999891765e-07, 9.170000000030543e-07, 9.309999999956853e-07, 9.169999999891765e-07, 8.890000000039144e-07, 9.170000000030543e-07, 9.169999999891765e-07, 9.170000000030543e-07]</msg>
<status status="PASS" starttime="20201030 15:51:47.392" endtime="20201030 15:51:47.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.387" endtime="20201030 15:51:47.395"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:47.398" endtime="20201030 15:51:47.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.397" endtime="20201030 15:51:47.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.396" endtime="20201030 15:51:47.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.975" endtime="20201030 15:51:47.419"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:46.906" endtime="20201030 15:51:47.419" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:47.426" endtime="20201030 15:51:47.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.425" endtime="20201030 15:51:47.446"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.459" endtime="20201030 15:51:47.477"></status>
</kw>
<msg timestamp="20201030 15:51:47.478" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.457" endtime="20201030 15:51:47.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.482" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.480" endtime="20201030 15:51:47.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.488" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:47.485" endtime="20201030 15:51:47.489"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:47.455" endtime="20201030 15:51:47.489"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:47.452" endtime="20201030 15:51:47.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.451" endtime="20201030 15:51:47.490"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:47.496" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:47.494" endtime="20201030 15:51:47.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.491" endtime="20201030 15:51:47.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.450" endtime="20201030 15:51:47.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.450" endtime="20201030 15:51:47.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.499" endtime="20201030 15:51:47.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.448" endtime="20201030 15:51:47.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.447" endtime="20201030 15:51:47.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.423" endtime="20201030 15:51:47.502"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.510" endtime="20201030 15:51:47.558"></status>
</kw>
<msg timestamp="20201030 15:51:47.558" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.509" endtime="20201030 15:51:47.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.561" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.559" endtime="20201030 15:51:47.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.563" endtime="20201030 15:51:47.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.506" endtime="20201030 15:51:47.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.504" endtime="20201030 15:51:47.565"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.568" endtime="20201030 15:51:47.569"></status>
</kw>
<msg timestamp="20201030 15:51:47.570" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:47.566" endtime="20201030 15:51:47.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.574" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:47.573" endtime="20201030 15:51:47.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.576" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:47.575" endtime="20201030 15:51:47.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.571" endtime="20201030 15:51:47.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.581" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:47.580" endtime="20201030 15:51:47.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.583" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:47.582" endtime="20201030 15:51:47.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.578" endtime="20201030 15:51:47.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.591" endtime="20201030 15:51:47.883"></status>
</kw>
<msg timestamp="20201030 15:51:47.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07739425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077402875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:47.589" endtime="20201030 15:51:47.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07739425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077402875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:47.887" endtime="20201030 15:51:47.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.896" endtime="20201030 15:51:47.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.587" endtime="20201030 15:51:47.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.585" endtime="20201030 15:51:47.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:47.902" level="INFO">${RESULT} = [{'diff': 8.624999999998217e-06}, {'diff': 8.416999999996677e-06}, {'diff': 8.389000000011415e-06}, {'diff': 8.387999999998064e-06}, {'diff': 8.387999999998064e-06}, {'diff': 8.403000000004046e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:47.899" endtime="20201030 15:51:47.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:47.907" level="INFO">${OVERHEAD} = {'diff': [8.624999999998217e-06, 8.416999999996677e-06, 8.389000000011415e-06, 8.387999999998064e-06, 8.387999999998064e-06, 8.403000000004046e-06, 8.374999999991029e-06, 8.374999999991029e-06, 8.4589...</msg>
<status status="PASS" starttime="20201030 15:51:47.903" endtime="20201030 15:51:47.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.911" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 15:51:47.910" endtime="20201030 15:51:47.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.914" level="INFO">VALUE: [8.624999999998217e-06, 8.416999999996677e-06, 8.389000000011415e-06, 8.387999999998064e-06, 8.387999999998064e-06, 8.403000000004046e-06, 8.374999999991029e-06, 8.374999999991029e-06, 8.458999999988448e-06, 8.388999999997537e-06, 8.388999999997537e-06, 8.443999999996343e-06, 8.388999999997537e-06, 8.375000000004906e-06, 8.387999999998064e-06, 8.402999999990168e-06, 8.402999999990168e-06, 8.389000000011415e-06, 8.401999999990695e-06, 8.374999999991029e-06, 8.416999999996677e-06, 8.388999999997537e-06, 8.388999999997537e-06, 8.374999999991029e-06, 8.443999999996343e-06, 8.388999999997537e-06, 8.388999999997537e-06, 8.388999999997537e-06, 8.403000000004046e-06, 8.387999999998064e-06, 8.360999999998397e-06, 8.318999999992749e-06, 8.388999999997537e-06, 8.388999999997537e-06, 8.388999999997537e-06, 8.402999999990168e-06, 8.403000000004046e-06, 8.388999999997537e-06, 8.361999999997871e-06, 8.388999999997537e-06, 8.403000000004046e-06, 8.402999999990168e-06, 8.388999999997537e-06, 8.403000000004046e-06, 8.388999999997537e-06, 8.402000000004572e-06, 8.374999999991029e-06, 8.387999999998064e-06, 8.402999999990168e-06, 8.388999999997537e-06]</msg>
<status status="PASS" starttime="20201030 15:51:47.913" endtime="20201030 15:51:47.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.908" endtime="20201030 15:51:47.915"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:47.919" endtime="20201030 15:51:47.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.918" endtime="20201030 15:51:47.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.916" endtime="20201030 15:51:47.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.502" endtime="20201030 15:51:47.940"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:47.421" endtime="20201030 15:51:47.940" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:47.948" endtime="20201030 15:51:47.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.946" endtime="20201030 15:51:47.970"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.002" endtime="20201030 15:51:48.020"></status>
</kw>
<msg timestamp="20201030 15:51:48.022" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.998" endtime="20201030 15:51:48.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.027" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.024" endtime="20201030 15:51:48.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.034" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:48.030" endtime="20201030 15:51:48.035"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:47.992" endtime="20201030 15:51:48.036"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:47.987" endtime="20201030 15:51:48.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.984" endtime="20201030 15:51:48.038"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:48.046" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:48.045" endtime="20201030 15:51:48.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.040" endtime="20201030 15:51:48.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.980" endtime="20201030 15:51:48.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.979" endtime="20201030 15:51:48.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.050" endtime="20201030 15:51:48.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.976" endtime="20201030 15:51:48.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.972" endtime="20201030 15:51:48.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.945" endtime="20201030 15:51:48.056"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.065" endtime="20201030 15:51:48.185"></status>
</kw>
<msg timestamp="20201030 15:51:48.185" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.063" endtime="20201030 15:51:48.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.188" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.186" endtime="20201030 15:51:48.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.189" endtime="20201030 15:51:48.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.061" endtime="20201030 15:51:48.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.059" endtime="20201030 15:51:48.192"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.194" endtime="20201030 15:51:48.196"></status>
</kw>
<msg timestamp="20201030 15:51:48.197" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:48.193" endtime="20201030 15:51:48.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.201" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:48.200" endtime="20201030 15:51:48.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.203" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:48.202" endtime="20201030 15:51:48.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.197" endtime="20201030 15:51:48.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.209" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:48.207" endtime="20201030 15:51:48.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.212" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:48.211" endtime="20201030 15:51:48.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.205" endtime="20201030 15:51:48.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.219" endtime="20201030 15:51:48.514"></status>
</kw>
<msg timestamp="20201030 15:51:48.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.112069556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.112085361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.218" endtime="20201030 15:51:48.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.112069556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.112085361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.518" endtime="20201030 15:51:48.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.526" endtime="20201030 15:51:48.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.215" endtime="20201030 15:51:48.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.213" endtime="20201030 15:51:48.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:48.533" level="INFO">${RESULT} = [{'diff': 1.580499999999374e-05}, {'diff': 1.5555999999999903e-05}, {'diff': 1.555500000000043e-05}, {'diff': 1.5570000000006412e-05}, {'diff': 1.5570000000006412e-05}, {'diff': 1.5570000000006412e-05...</msg>
<status status="PASS" starttime="20201030 15:51:48.530" endtime="20201030 15:51:48.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:48.537" level="INFO">${OVERHEAD} = {'diff': [1.580499999999374e-05, 1.5555999999999903e-05, 1.555500000000043e-05, 1.5570000000006412e-05, 1.5570000000006412e-05, 1.5570000000006412e-05, 1.555500000000043e-05, 1.555500000000043e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:51:48.534" endtime="20201030 15:51:48.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.542" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 15:51:48.541" endtime="20201030 15:51:48.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.545" level="INFO">VALUE: [1.580499999999374e-05, 1.5555999999999903e-05, 1.555500000000043e-05, 1.5570000000006412e-05, 1.5570000000006412e-05, 1.5570000000006412e-05, 1.555500000000043e-05, 1.555500000000043e-05, 1.556899999999306e-05, 1.556899999999306e-05, 1.5569000000020816e-05, 1.5583000000013447e-05, 1.556899999999306e-05, 1.5569999999992534e-05, 1.5569999999992534e-05, 1.5583999999985165e-05, 1.555500000000043e-05, 1.561099999999871e-05, 1.5583999999985165e-05, 1.5583999999985165e-05, 1.5569999999992534e-05, 1.558299999998569e-05, 1.5569999999992534e-05, 1.558400000001292e-05, 1.55410000000078e-05, 1.5583000000013447e-05, 1.5569999999992534e-05, 1.5583999999985165e-05, 1.5583000000013447e-05, 1.5569999999992534e-05, 1.5569999999992534e-05, 1.555500000000043e-05, 1.556899999999306e-05, 1.555500000000043e-05, 1.5569000000020816e-05, 1.5583000000013447e-05, 1.558400000001292e-05, 1.556899999999306e-05, 1.556899999999306e-05, 1.555500000000043e-05, 1.5569000000020816e-05, 1.5569999999992534e-05, 1.5569999999992534e-05, 1.5500000000001624e-05, 1.552800000001464e-05, 1.5611999999998183e-05, 1.556899999999306e-05, 1.5583000000013447e-05, 1.552800000001464e-05, 1.5569000000020816e-05]</msg>
<status status="PASS" starttime="20201030 15:51:48.543" endtime="20201030 15:51:48.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.538" endtime="20201030 15:51:48.547"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:48.551" endtime="20201030 15:51:48.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.549" endtime="20201030 15:51:48.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.548" endtime="20201030 15:51:48.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.057" endtime="20201030 15:51:48.572"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:47.942" endtime="20201030 15:51:48.572" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:48.579" endtime="20201030 15:51:48.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.578" endtime="20201030 15:51:48.599"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.613" endtime="20201030 15:51:48.626"></status>
</kw>
<msg timestamp="20201030 15:51:48.627" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.611" endtime="20201030 15:51:48.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.630" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.628" endtime="20201030 15:51:48.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.633" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:48.631" endtime="20201030 15:51:48.633"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:48.608" endtime="20201030 15:51:48.634"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:48.606" endtime="20201030 15:51:48.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.605" endtime="20201030 15:51:48.635"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:48.639" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:48.638" endtime="20201030 15:51:48.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.636" endtime="20201030 15:51:48.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.604" endtime="20201030 15:51:48.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.603" endtime="20201030 15:51:48.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.640" endtime="20201030 15:51:48.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.602" endtime="20201030 15:51:48.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.600" endtime="20201030 15:51:48.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.576" endtime="20201030 15:51:48.643"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.647" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:51:48.656" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:51:49.948" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:51:48.646" endtime="20201030 15:51:49.949"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.955" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:51:49.952" endtime="20201030 15:51:49.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.644" endtime="20201030 15:51:49.957"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.988" endtime="20201030 15:51:49.996"></status>
</kw>
<msg timestamp="20201030 15:51:49.996" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.977" endtime="20201030 15:51:49.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.999" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.997" endtime="20201030 15:51:49.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.000" endtime="20201030 15:51:50.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.971" endtime="20201030 15:51:50.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.967" endtime="20201030 15:51:50.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.010" endtime="20201030 15:51:50.284"></status>
</kw>
<msg timestamp="20201030 15:51:50.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.399184681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.399188694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.008" endtime="20201030 15:51:50.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.399184681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.399188694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.289" endtime="20201030 15:51:50.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.297" endtime="20201030 15:51:50.299"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.005" endtime="20201030 15:51:50.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.003" endtime="20201030 15:51:50.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:50.304" level="INFO">${PHILIP_RES} = [{'diff': 4.0130000000804245e-06}, {'diff': 2.6670000001782768e-06}, {'diff': 2.7360000001142026e-06}, {'diff': 2.7499999999403e-06}, {'diff': 2.735999999892158e-06}, {'diff': 2.750000000162345e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:50.301" endtime="20201030 15:51:50.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:50.309" level="INFO">${RESULT} = {'diff': [4.0130000000804245e-06, 2.6670000001782768e-06, 2.7360000001142026e-06, 2.7499999999403e-06, 2.735999999892158e-06, 2.750000000162345e-06, 2.7639999999884424e-06, 2.7499999999403e-06, 2.7500...</msg>
<status status="PASS" starttime="20201030 15:51:50.305" endtime="20201030 15:51:50.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.314" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:50.313" endtime="20201030 15:51:50.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.317" level="INFO">VALUE: [4.0130000000804245e-06, 2.6670000001782768e-06, 2.7360000001142026e-06, 2.7499999999403e-06, 2.735999999892158e-06, 2.750000000162345e-06, 2.7639999999884424e-06, 2.7499999999403e-06, 2.750000000162345e-06, 2.7639999999884424e-06, 2.7499999999403e-06, 2.7639999999884424e-06, 2.7499999999403e-06, 2.7499999999403e-06, 2.7639999999884424e-06, 2.7639999999884424e-06, 2.750000000162345e-06, 2.679999999921634e-06, 2.735999999892158e-06, 2.750000000162345e-06, 2.7499999999403e-06, 2.7499999999403e-06, 2.7639999999884424e-06, 2.7499999999403e-06, 2.735999999892158e-06, 2.7369999999748984e-06, 2.7360000001142026e-06, 2.735999999892158e-06, 2.735999999892158e-06, 2.7360000001142026e-06, 2.735999999892158e-06, 2.735999999892158e-06, 2.7499999999403e-06, 2.6950000000525165e-06, 2.7499999999403e-06, 2.735999999892158e-06, 2.735999999892158e-06, 2.7360000001142026e-06, 2.7499999999403e-06, 2.7639999999884424e-06, 2.750000000162345e-06, 2.735999999892158e-06, 2.7499999999403e-06, 2.7639999999884424e-06, 2.7499999999403e-06, 2.7639999999884424e-06, 2.7499999999403e-06, 2.7630000001277466e-06, 2.7499999999403e-06, 2.7639999999884424e-06]</msg>
<status status="PASS" starttime="20201030 15:51:50.315" endtime="20201030 15:51:50.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.310" endtime="20201030 15:51:50.318"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:50.321" endtime="20201030 15:51:50.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.320" endtime="20201030 15:51:50.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.319" endtime="20201030 15:51:50.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.960" endtime="20201030 15:51:50.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.959" endtime="20201030 15:51:50.342"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.352" endtime="20201030 15:51:50.359"></status>
</kw>
<msg timestamp="20201030 15:51:50.359" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.350" endtime="20201030 15:51:50.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.362" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.360" endtime="20201030 15:51:50.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.363" endtime="20201030 15:51:50.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.347" endtime="20201030 15:51:50.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.345" endtime="20201030 15:51:50.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.372" endtime="20201030 15:51:50.662"></status>
</kw>
<msg timestamp="20201030 15:51:50.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019549847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019556778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.371" endtime="20201030 15:51:50.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019549847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019556778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.667" endtime="20201030 15:51:50.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.675" endtime="20201030 15:51:50.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.368" endtime="20201030 15:51:50.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.366" endtime="20201030 15:51:50.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:50.682" level="INFO">${PHILIP_RES} = [{'diff': 6.931000000001686e-06}, {'diff': 5.569000000000407e-06}, {'diff': 5.569000000000407e-06}, {'diff': 5.569000000000407e-06}, {'diff': 5.569999999999881e-06}, {'diff': 5.556000000000311e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:50.679" endtime="20201030 15:51:50.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:50.687" level="INFO">${RESULT} = {'diff': [6.931000000001686e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.556000000000311e-06, 5.556000000000311e-06, 5.555999999996841e-06, 5.5829...</msg>
<status status="PASS" starttime="20201030 15:51:50.683" endtime="20201030 15:51:50.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.692" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:50.691" endtime="20201030 15:51:50.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.695" level="INFO">VALUE: [6.931000000001686e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.556000000000311e-06, 5.556000000000311e-06, 5.555999999996841e-06, 5.582999999999977e-06, 5.569000000000407e-06, 5.540999999997798e-06, 5.582999999999977e-06, 5.556000000000311e-06, 5.569999999999881e-06, 5.569000000000407e-06, 5.555000000000837e-06, 5.569000000000407e-06, 5.5689999999969375e-06, 5.556000000000311e-06, 5.569999999999881e-06, 5.556000000000311e-06, 5.569000000000407e-06, 5.528000000001171e-06, 5.569000000000407e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.556000000000311e-06, 5.569999999999881e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.554999999997368e-06, 5.526999999998228e-06, 5.569999999999881e-06, 5.5839999999994505e-06, 5.569999999999881e-06, 5.569000000000407e-06, 5.555000000000837e-06, 5.554999999997368e-06, 5.569000000000407e-06, 5.569999999999881e-06, 5.610999999999117e-06, 5.556000000000311e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.555000000000837e-06, 5.569999999999881e-06, 5.555999999996841e-06, 5.569999999999881e-06, 5.582999999999977e-06]</msg>
<status status="PASS" starttime="20201030 15:51:50.693" endtime="20201030 15:51:50.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.688" endtime="20201030 15:51:50.696"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:50.700" endtime="20201030 15:51:50.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.698" endtime="20201030 15:51:50.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.697" endtime="20201030 15:51:50.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.343" endtime="20201030 15:51:50.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.343" endtime="20201030 15:51:50.721"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.730" endtime="20201030 15:51:50.737"></status>
</kw>
<msg timestamp="20201030 15:51:50.737" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.728" endtime="20201030 15:51:50.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.740" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.738" endtime="20201030 15:51:50.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.741" endtime="20201030 15:51:50.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.725" endtime="20201030 15:51:50.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.723" endtime="20201030 15:51:50.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.751" endtime="20201030 15:51:51.040"></status>
</kw>
<msg timestamp="20201030 15:51:51.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019584236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019594347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.749" endtime="20201030 15:51:51.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019584236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019594347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.044" endtime="20201030 15:51:51.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.052" endtime="20201030 15:51:51.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.746" endtime="20201030 15:51:51.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.745" endtime="20201030 15:51:51.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:51.059" level="INFO">${PHILIP_RES} = [{'diff': 1.0111000000000148e-05}, {'diff': 9.013999999998162e-06}, {'diff': 9.054999999997398e-06}, {'diff': 9.110999999999148e-06}, {'diff': 9.014000000001632e-06}, {'diff': 9.055000000000868e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:51.056" endtime="20201030 15:51:51.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:51.063" level="INFO">${RESULT} = {'diff': [1.0111000000000148e-05, 9.013999999998162e-06, 9.054999999997398e-06, 9.110999999999148e-06, 9.014000000001632e-06, 9.055000000000868e-06, 9.054999999997398e-06, 9.028000000001202e-06, 9.056...</msg>
<status status="PASS" starttime="20201030 15:51:51.060" endtime="20201030 15:51:51.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.068" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:51.067" endtime="20201030 15:51:51.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.071" level="INFO">VALUE: [1.0111000000000148e-05, 9.013999999998162e-06, 9.054999999997398e-06, 9.110999999999148e-06, 9.014000000001632e-06, 9.055000000000868e-06, 9.054999999997398e-06, 9.028000000001202e-06, 9.056000000000342e-06, 9.040999999997829e-06, 9.054999999997398e-06, 9.056000000000342e-06, 9.124999999998717e-06, 9.055000000000868e-06, 8.987000000001966e-06, 9.014000000001632e-06, 9.056000000000342e-06, 9.054999999997398e-06, 9.042000000000772e-06, 9.056000000000342e-06, 9.056000000000342e-06, 9.068999999996968e-06, 9.042000000000772e-06, 9.056000000000342e-06, 9.069999999999911e-06, 9.054999999997398e-06, 9.042000000000772e-06, 9.069999999999911e-06, 9.056000000000342e-06, 9.040999999997829e-06, 9.014000000001632e-06, 8.999999999998592e-06, 9.056000000000342e-06, 9.026999999998259e-06, 9.124999999998717e-06, 9.069999999999911e-06, 9.08400000000295e-06, 9.040999999997829e-06, 9.056000000000342e-06, 9.042000000000772e-06, 9.027999999997732e-06, 9.069000000000438e-06, 9.056000000000342e-06, 9.056000000000342e-06, 9.041999999997302e-06, 9.000000000002062e-06, 9.014000000001632e-06, 9.056000000000342e-06, 9.041999999997302e-06, 9.055000000000868e-06]</msg>
<status status="PASS" starttime="20201030 15:51:51.069" endtime="20201030 15:51:51.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.064" endtime="20201030 15:51:51.072"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:51.076" endtime="20201030 15:51:51.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.074" endtime="20201030 15:51:51.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.073" endtime="20201030 15:51:51.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.722" endtime="20201030 15:51:51.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.721" endtime="20201030 15:51:51.097"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.106" endtime="20201030 15:51:51.115"></status>
</kw>
<msg timestamp="20201030 15:51:51.115" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.104" endtime="20201030 15:51:51.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.118" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.116" endtime="20201030 15:51:51.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.119" endtime="20201030 15:51:51.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.101" endtime="20201030 15:51:51.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.099" endtime="20201030 15:51:51.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.128" endtime="20201030 15:51:51.415"></status>
</kw>
<msg timestamp="20201030 15:51:51.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020049292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020062944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.127" endtime="20201030 15:51:51.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020049292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020062944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.420" endtime="20201030 15:51:51.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.431" endtime="20201030 15:51:51.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.124" endtime="20201030 15:51:51.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.122" endtime="20201030 15:51:51.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:51.441" level="INFO">${PHILIP_RES} = [{'diff': 1.3651999999999415e-05}, {'diff': 1.2583999999999512e-05}, {'diff': 1.2596999999999609e-05}, {'diff': 1.2681000000000497e-05}, {'diff': 1.2638999999998318e-05}, {'diff': 1.2597000000003078e-...</msg>
<status status="PASS" starttime="20201030 15:51:51.437" endtime="20201030 15:51:51.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:51.448" level="INFO">${RESULT} = {'diff': [1.3651999999999415e-05, 1.2583999999999512e-05, 1.2596999999999609e-05, 1.2681000000000497e-05, 1.2638999999998318e-05, 1.2597000000003078e-05, 1.2596999999999609e-05, 1.2611000000002648e-05...</msg>
<status status="PASS" starttime="20201030 15:51:51.443" endtime="20201030 15:51:51.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.459" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:51.453" endtime="20201030 15:51:51.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.462" level="INFO">VALUE: [1.3651999999999415e-05, 1.2583999999999512e-05, 1.2596999999999609e-05, 1.2681000000000497e-05, 1.2638999999998318e-05, 1.2597000000003078e-05, 1.2596999999999609e-05, 1.2611000000002648e-05, 1.2583999999999512e-05, 1.2624999999998748e-05, 1.2598000000002552e-05, 1.2596999999999609e-05, 1.2597999999999082e-05, 1.2596999999999609e-05, 1.2555000000000899e-05, 1.2596999999999609e-05, 1.2596999999999609e-05, 1.2598000000002552e-05, 1.2596999999999609e-05, 1.2638999999998318e-05, 1.2583000000000039e-05, 1.2583000000000039e-05, 1.2637999999998845e-05, 1.2610999999999178e-05, 1.2596999999999609e-05, 1.2596999999999609e-05, 1.2583999999999512e-05, 1.2583000000000039e-05, 1.2596999999999609e-05, 1.2612000000002122e-05, 1.2596999999999609e-05, 1.2624999999998748e-05, 1.2596999999999609e-05, 1.2598000000002552e-05, 1.2625000000002218e-05, 1.255499999999743e-05, 1.2569000000000469e-05, 1.2610999999999178e-05, 1.2610999999999178e-05, 1.2583000000000039e-05, 1.2597999999999082e-05, 1.2583000000000039e-05, 1.2597999999999082e-05, 1.2610999999999178e-05, 1.2610999999999178e-05, 1.2597000000003078e-05, 1.2596999999999609e-05, 1.2637999999998845e-05, 1.2583000000000039e-05, 1.2583999999999512e-05]</msg>
<status status="PASS" starttime="20201030 15:51:51.461" endtime="20201030 15:51:51.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.449" endtime="20201030 15:51:51.464"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:51.467" endtime="20201030 15:51:51.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.466" endtime="20201030 15:51:51.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.465" endtime="20201030 15:51:51.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.098" endtime="20201030 15:51:51.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.097" endtime="20201030 15:51:51.488"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.497" endtime="20201030 15:51:51.505"></status>
</kw>
<msg timestamp="20201030 15:51:51.506" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.496" endtime="20201030 15:51:51.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.508" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.507" endtime="20201030 15:51:51.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.509" endtime="20201030 15:51:51.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.493" endtime="20201030 15:51:51.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.491" endtime="20201030 15:51:51.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.519" endtime="20201030 15:51:51.804"></status>
</kw>
<msg timestamp="20201030 15:51:51.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019230986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019248556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.517" endtime="20201030 15:51:51.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019230986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019248556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.809" endtime="20201030 15:51:51.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.817" endtime="20201030 15:51:51.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.515" endtime="20201030 15:51:51.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.513" endtime="20201030 15:51:51.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:51.824" level="INFO">${PHILIP_RES} = [{'diff': 1.7570000000001473e-05}, {'diff': 1.6485999999999584e-05}, {'diff': 1.6472000000000014e-05}, {'diff': 1.6472000000000014e-05}, {'diff': 1.6472000000000014e-05}, {'diff': 1.6458000000000444e-...</msg>
<status status="PASS" starttime="20201030 15:51:51.821" endtime="20201030 15:51:51.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:51.829" level="INFO">${RESULT} = {'diff': [1.7570000000001473e-05, 1.6485999999999584e-05, 1.6472000000000014e-05, 1.6472000000000014e-05, 1.6472000000000014e-05, 1.6458000000000444e-05, 1.6472000000000014e-05, 1.6527999999998294e-05...</msg>
<status status="PASS" starttime="20201030 15:51:51.825" endtime="20201030 15:51:51.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.834" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:51.833" endtime="20201030 15:51:51.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.837" level="INFO">VALUE: [1.7570000000001473e-05, 1.6485999999999584e-05, 1.6472000000000014e-05, 1.6472000000000014e-05, 1.6472000000000014e-05, 1.6458000000000444e-05, 1.6472000000000014e-05, 1.6527999999998294e-05, 1.6472000000000014e-05, 1.6472000000000014e-05, 1.6472000000000014e-05, 1.651299999999925e-05, 1.6472999999999488e-05, 1.6472999999999488e-05, 1.6485999999999584e-05, 1.6458999999999918e-05, 1.6486000000003054e-05, 1.6486000000003054e-05, 1.6485999999999584e-05, 1.6472000000000014e-05, 1.6514000000002194e-05, 1.6458000000000444e-05, 1.6472000000000014e-05, 1.6528000000001764e-05, 1.6485999999999584e-05, 1.6499999999999154e-05, 1.654100000000186e-05, 1.6485999999999584e-05, 1.6499999999999154e-05, 1.641700000000121e-05, 1.6472000000000014e-05, 1.6472000000000014e-05, 1.6499999999999154e-05, 1.6472999999999488e-05, 1.6499999999999154e-05, 1.6472999999999488e-05, 1.6472000000000014e-05, 1.6472000000000014e-05, 1.6485999999999584e-05, 1.6485999999999584e-05, 1.6457999999996975e-05, 1.6486000000003054e-05, 1.6500000000002624e-05, 1.6485999999999584e-05, 1.643099999999731e-05, 1.6472000000000014e-05, 1.6500000000002624e-05, 1.6499999999999154e-05, 1.6472000000000014e-05, 1.6458000000000444e-05]</msg>
<status status="PASS" starttime="20201030 15:51:51.835" endtime="20201030 15:51:51.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.830" endtime="20201030 15:51:51.838"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:51.842" endtime="20201030 15:51:51.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.840" endtime="20201030 15:51:51.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.839" endtime="20201030 15:51:51.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.489" endtime="20201030 15:51:51.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.489" endtime="20201030 15:51:51.863"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.872" endtime="20201030 15:51:51.881"></status>
</kw>
<msg timestamp="20201030 15:51:51.881" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.870" endtime="20201030 15:51:51.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.884" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.882" endtime="20201030 15:51:51.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.885" endtime="20201030 15:51:51.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.867" endtime="20201030 15:51:51.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.865" endtime="20201030 15:51:51.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.895" endtime="20201030 15:51:52.180"></status>
</kw>
<msg timestamp="20201030 15:51:52.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019205486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019227278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.893" endtime="20201030 15:51:52.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019205486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019227278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.185" endtime="20201030 15:51:52.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.193" endtime="20201030 15:51:52.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.890" endtime="20201030 15:51:52.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.888" endtime="20201030 15:51:52.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:52.201" level="INFO">${PHILIP_RES} = [{'diff': 2.1791999999999645e-05}, {'diff': 2.0722000000000795e-05}, {'diff': 2.0806000000001684e-05}, {'diff': 2.0722000000000795e-05}, {'diff': 2.0749999999999935e-05}, {'diff': 2.0736000000000365e-...</msg>
<status status="PASS" starttime="20201030 15:51:52.198" endtime="20201030 15:51:52.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:52.206" level="INFO">${RESULT} = {'diff': [2.1791999999999645e-05, 2.0722000000000795e-05, 2.0806000000001684e-05, 2.0722000000000795e-05, 2.0749999999999935e-05, 2.0736000000000365e-05, 2.0708000000001225e-05, 2.0722000000000795e-05...</msg>
<status status="PASS" starttime="20201030 15:51:52.202" endtime="20201030 15:51:52.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.213" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:52.212" endtime="20201030 15:51:52.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.218" level="INFO">VALUE: [2.1791999999999645e-05, 2.0722000000000795e-05, 2.0806000000001684e-05, 2.0722000000000795e-05, 2.0749999999999935e-05, 2.0736000000000365e-05, 2.0708000000001225e-05, 2.0722000000000795e-05, 2.0763999999999505e-05, 2.063900000000285e-05, 2.0736000000000365e-05, 2.0722000000000795e-05, 2.0736000000000365e-05, 2.0707999999997756e-05, 2.0735999999996896e-05, 2.0707999999997756e-05, 2.072300000000027e-05, 2.0721999999997326e-05, 2.072300000000027e-05, 2.0736000000000365e-05, 2.072300000000027e-05, 2.0708000000001225e-05, 2.072300000000027e-05, 2.0763999999999505e-05, 2.068100000000156e-05, 2.0736000000000365e-05, 2.072300000000027e-05, 2.0736000000000365e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.07090000000007e-05, 2.0736000000000365e-05, 2.0736000000000365e-05, 2.068100000000156e-05, 2.073699999999984e-05, 2.0721999999997326e-05, 2.073699999999984e-05, 2.0736000000000365e-05, 2.0778000000002544e-05, 2.0708000000001225e-05, 2.0736000000000365e-05, 2.0708000000001225e-05, 2.073699999999984e-05, 2.0722000000000795e-05, 2.0749999999999935e-05, 2.0777999999999075e-05, 2.0749999999999935e-05, 2.0722000000000795e-05, 2.0749999999999935e-05, 2.065300000000242e-05]</msg>
<status status="PASS" starttime="20201030 15:51:52.215" endtime="20201030 15:51:52.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.208" endtime="20201030 15:51:52.220"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:52.230" endtime="20201030 15:51:52.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.225" endtime="20201030 15:51:52.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.222" endtime="20201030 15:51:52.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.864" endtime="20201030 15:51:52.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.863" endtime="20201030 15:51:52.252"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.263" endtime="20201030 15:51:52.287"></status>
</kw>
<msg timestamp="20201030 15:51:52.287" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.261" endtime="20201030 15:51:52.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.291" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.288" endtime="20201030 15:51:52.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.292" endtime="20201030 15:51:52.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.259" endtime="20201030 15:51:52.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.257" endtime="20201030 15:51:52.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.306" endtime="20201030 15:51:52.593"></status>
</kw>
<msg timestamp="20201030 15:51:52.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022541764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022568181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.304" endtime="20201030 15:51:52.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022541764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022568181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.597" endtime="20201030 15:51:52.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.606" endtime="20201030 15:51:52.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.300" endtime="20201030 15:51:52.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.297" endtime="20201030 15:51:52.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:52.612" level="INFO">${PHILIP_RES} = [{'diff': 2.64170000000008e-05}, {'diff': 2.538900000000066e-05}, {'diff': 2.5332999999998912e-05}, {'diff': 2.5318999999999342e-05}, {'diff': 2.533300000000238e-05}, {'diff': 2.5306000000002715e-05},...</msg>
<status status="PASS" starttime="20201030 15:51:52.609" endtime="20201030 15:51:52.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:52.616" level="INFO">${RESULT} = {'diff': [2.64170000000008e-05, 2.538900000000066e-05, 2.5332999999998912e-05, 2.5318999999999342e-05, 2.533300000000238e-05, 2.5306000000002715e-05, 2.5305999999999246e-05, 2.5318999999999342e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:51:52.613" endtime="20201030 15:51:52.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.621" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:52.620" endtime="20201030 15:51:52.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.623" level="INFO">VALUE: [2.64170000000008e-05, 2.538900000000066e-05, 2.5332999999998912e-05, 2.5318999999999342e-05, 2.533300000000238e-05, 2.5306000000002715e-05, 2.5305999999999246e-05, 2.5318999999999342e-05, 2.534700000000195e-05, 2.5346999999998482e-05, 2.5305999999999246e-05, 2.5332999999998912e-05, 2.5318999999999342e-05, 2.5304999999999772e-05, 2.5347999999997956e-05, 2.538899999999719e-05, 2.533300000000238e-05, 2.537500000000109e-05, 2.5319999999998816e-05, 2.531900000000281e-05, 2.5304999999999772e-05, 2.533300000000238e-05, 2.5320000000002285e-05, 2.5318999999999342e-05, 2.5346999999998482e-05, 2.5250000000000966e-05, 2.537499999999762e-05, 2.533300000000238e-05, 2.540300000000023e-05, 2.5332999999998912e-05, 2.5334000000001855e-05, 2.5332999999998912e-05, 2.538900000000066e-05, 2.534700000000195e-05, 2.5278000000000106e-05, 2.5347999999997956e-05, 2.5264000000000536e-05, 2.5332999999998912e-05, 2.537499999999762e-05, 2.5334000000001855e-05, 2.5291999999999676e-05, 2.5346999999998482e-05, 2.5263000000001062e-05, 2.5333999999998386e-05, 2.5278000000000106e-05, 2.534700000000195e-05, 2.5332999999998912e-05, 2.5348000000001425e-05, 2.5318999999999342e-05, 2.5318999999999342e-05]</msg>
<status status="PASS" starttime="20201030 15:51:52.622" endtime="20201030 15:51:52.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.617" endtime="20201030 15:51:52.625"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:52.629" endtime="20201030 15:51:52.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.628" endtime="20201030 15:51:52.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.626" endtime="20201030 15:51:52.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.255" endtime="20201030 15:51:52.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.253" endtime="20201030 15:51:52.650"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.658" endtime="20201030 15:51:52.667"></status>
</kw>
<msg timestamp="20201030 15:51:52.668" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.657" endtime="20201030 15:51:52.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.670" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.669" endtime="20201030 15:51:52.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.671" endtime="20201030 15:51:52.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.654" endtime="20201030 15:51:52.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.652" endtime="20201030 15:51:52.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.681" endtime="20201030 15:51:52.982"></status>
</kw>
<msg timestamp="20201030 15:51:52.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018775069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018806431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.679" endtime="20201030 15:51:52.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018775069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018806431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.986" endtime="20201030 15:51:52.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.995" endtime="20201030 15:51:52.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.676" endtime="20201030 15:51:52.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.675" endtime="20201030 15:51:52.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:53.001" level="INFO">${PHILIP_RES} = [{'diff': 3.1362000000000056e-05}, {'diff': 3.0278000000001637e-05}, {'diff': 3.0292000000001207e-05}, {'diff': 3.0306000000000777e-05}, {'diff': 3.0292000000001207e-05}, {'diff': 3.0291000000001733e-...</msg>
<status status="PASS" starttime="20201030 15:51:52.998" endtime="20201030 15:51:53.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:53.007" level="INFO">${RESULT} = {'diff': [3.1362000000000056e-05, 3.0278000000001637e-05, 3.0292000000001207e-05, 3.0306000000000777e-05, 3.0292000000001207e-05, 3.0291000000001733e-05, 3.0290999999998264e-05, 3.0292000000001207e-05...</msg>
<status status="PASS" starttime="20201030 15:51:53.002" endtime="20201030 15:51:53.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.011" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:53.010" endtime="20201030 15:51:53.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.013" level="INFO">VALUE: [3.1362000000000056e-05, 3.0278000000001637e-05, 3.0292000000001207e-05, 3.0306000000000777e-05, 3.0292000000001207e-05, 3.0291000000001733e-05, 3.0290999999998264e-05, 3.0292000000001207e-05, 3.0318999999997404e-05, 3.0319000000000873e-05, 3.0277999999998167e-05, 3.0221999999999888e-05, 3.0276999999998694e-05, 3.0291999999997737e-05, 3.0306000000000777e-05, 3.0292000000001207e-05, 3.0306000000000777e-05, 3.0292000000001207e-05, 3.0305000000001303e-05, 3.0278000000001637e-05, 3.0306000000000777e-05, 3.0278000000001637e-05, 3.0306000000000777e-05, 3.0278000000001637e-05, 3.0290999999998264e-05, 3.0277999999998167e-05, 3.0277999999998167e-05, 3.0277999999998167e-05, 3.0277999999998167e-05, 3.0306000000000777e-05, 3.0291000000001733e-05, 3.0305000000001303e-05, 3.0278000000001637e-05, 3.0278000000001637e-05, 3.0264000000002067e-05, 3.0278000000001637e-05, 3.0263999999998598e-05, 3.0290999999998264e-05, 3.022299999999936e-05, 3.0291999999997737e-05, 3.0305999999997307e-05, 3.0305999999997307e-05, 3.0263999999998598e-05, 3.0347000000000013e-05, 3.0319000000000873e-05, 3.0306000000000777e-05, 3.0278000000001637e-05, 3.0278000000001637e-05, 3.0278000000001637e-05, 3.0291000000001733e-05]</msg>
<status status="PASS" starttime="20201030 15:51:53.012" endtime="20201030 15:51:53.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.007" endtime="20201030 15:51:53.015"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:53.019" endtime="20201030 15:51:53.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.017" endtime="20201030 15:51:53.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.016" endtime="20201030 15:51:53.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.651" endtime="20201030 15:51:53.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.650" endtime="20201030 15:51:53.039"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.048" endtime="20201030 15:51:53.057"></status>
</kw>
<msg timestamp="20201030 15:51:53.058" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.046" endtime="20201030 15:51:53.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.060" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.059" endtime="20201030 15:51:53.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.061" endtime="20201030 15:51:53.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.043" endtime="20201030 15:51:53.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.042" endtime="20201030 15:51:53.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.070" endtime="20201030 15:51:53.357"></status>
</kw>
<msg timestamp="20201030 15:51:53.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018646167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018682833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.069" endtime="20201030 15:51:53.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018646167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018682833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.361" endtime="20201030 15:51:53.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.370" endtime="20201030 15:51:53.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.066" endtime="20201030 15:51:53.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.065" endtime="20201030 15:51:53.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:53.377" level="INFO">${PHILIP_RES} = [{'diff': 3.66659999999977e-05}, {'diff': 3.557000000000213e-05}, {'diff': 3.550000000000081e-05}, {'diff': 3.5569000000002654e-05}, {'diff': 3.557000000000213e-05}, {'diff': 3.551400000000038e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:53.374" endtime="20201030 15:51:53.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:53.382" level="INFO">${RESULT} = {'diff': [3.66659999999977e-05, 3.557000000000213e-05, 3.550000000000081e-05, 3.5569000000002654e-05, 3.557000000000213e-05, 3.551400000000038e-05, 3.556999999999866e-05, 3.550000000000081e-05, 3.5554...</msg>
<status status="PASS" starttime="20201030 15:51:53.378" endtime="20201030 15:51:53.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.386" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:53.385" endtime="20201030 15:51:53.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.388" level="INFO">VALUE: [3.66659999999977e-05, 3.557000000000213e-05, 3.550000000000081e-05, 3.5569000000002654e-05, 3.557000000000213e-05, 3.551400000000038e-05, 3.556999999999866e-05, 3.550000000000081e-05, 3.5554999999999615e-05, 3.556999999999866e-05, 3.5568999999999185e-05, 3.555599999999909e-05, 3.5568999999999185e-05, 3.556999999999866e-05, 3.5568999999999185e-05, 3.5582999999998755e-05, 3.557000000000213e-05, 3.5568999999999185e-05, 3.5569000000002654e-05, 3.5583000000002224e-05, 3.550000000000081e-05, 3.557000000000213e-05, 3.5569000000002654e-05, 3.557000000000213e-05, 3.5568999999999185e-05, 3.5527000000000475e-05, 3.555599999999909e-05, 3.5568999999999185e-05, 3.555599999999909e-05, 3.5582999999998755e-05, 3.555599999999909e-05, 3.5554999999999615e-05, 3.5582999999998755e-05, 3.555599999999909e-05, 3.5568999999999185e-05, 3.556999999999866e-05, 3.5583000000002224e-05, 3.5597000000001794e-05, 3.5569000000002654e-05, 3.5569000000002654e-05, 3.557000000000213e-05, 3.5568999999999185e-05, 3.556999999999866e-05, 3.5554999999999615e-05, 3.5582999999998755e-05, 3.563799999999756e-05, 3.5582999999998755e-05, 3.556999999999866e-05, 3.5611000000001364e-05, 3.5582999999998755e-05]</msg>
<status status="PASS" starttime="20201030 15:51:53.387" endtime="20201030 15:51:53.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.382" endtime="20201030 15:51:53.390"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:53.393" endtime="20201030 15:51:53.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.392" endtime="20201030 15:51:53.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.391" endtime="20201030 15:51:53.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.040" endtime="20201030 15:51:53.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.040" endtime="20201030 15:51:53.414"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.422" endtime="20201030 15:51:53.433"></status>
</kw>
<msg timestamp="20201030 15:51:53.433" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.421" endtime="20201030 15:51:53.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.436" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.434" endtime="20201030 15:51:53.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.437" endtime="20201030 15:51:53.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.418" endtime="20201030 15:51:53.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.417" endtime="20201030 15:51:53.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.446" endtime="20201030 15:51:53.732"></status>
</kw>
<msg timestamp="20201030 15:51:53.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019590347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019632681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.444" endtime="20201030 15:51:53.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019590347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019632681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.736" endtime="20201030 15:51:53.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.745" endtime="20201030 15:51:53.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.442" endtime="20201030 15:51:53.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.440" endtime="20201030 15:51:53.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:53.751" level="INFO">${PHILIP_RES} = [{'diff': 4.233399999999804e-05}, {'diff': 4.124999999999962e-05}, {'diff': 4.123600000000005e-05}, {'diff': 4.122200000000048e-05}, {'diff': 4.123600000000005e-05}, {'diff': 4.1153000000002105e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:51:53.748" endtime="20201030 15:51:53.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:53.755" level="INFO">${RESULT} = {'diff': [4.233399999999804e-05, 4.124999999999962e-05, 4.123600000000005e-05, 4.122200000000048e-05, 4.123600000000005e-05, 4.1153000000002105e-05, 4.124999999999962e-05, 4.125000000000309e-05, 4.122...</msg>
<status status="PASS" starttime="20201030 15:51:53.752" endtime="20201030 15:51:53.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.760" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:53.759" endtime="20201030 15:51:53.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.762" level="INFO">VALUE: [4.233399999999804e-05, 4.124999999999962e-05, 4.123600000000005e-05, 4.122200000000048e-05, 4.123600000000005e-05, 4.1153000000002105e-05, 4.124999999999962e-05, 4.125000000000309e-05, 4.122200000000048e-05, 4.123600000000005e-05, 4.124999999999962e-05, 4.120800000000091e-05, 4.126399999999919e-05, 4.123600000000005e-05, 4.1167000000001674e-05, 4.126399999999919e-05, 4.123600000000005e-05, 4.123600000000005e-05, 4.123600000000005e-05, 4.124999999999962e-05, 4.123600000000005e-05, 4.123600000000005e-05, 4.124999999999962e-05, 4.1167000000001674e-05, 4.124999999999962e-05, 4.124999999999962e-05, 4.120800000000091e-05, 4.122200000000048e-05, 4.122199999999701e-05, 4.125000000000309e-05, 4.126400000000266e-05, 4.1209000000000384e-05, 4.123600000000005e-05, 4.123600000000005e-05, 4.123600000000005e-05, 4.123600000000005e-05, 4.122200000000048e-05, 4.126399999999919e-05, 4.1237000000002993e-05, 4.125000000000309e-05, 4.123600000000005e-05, 4.124999999999962e-05, 4.122200000000048e-05, 4.122200000000048e-05, 4.123600000000005e-05, 4.1222999999999954e-05, 4.123600000000005e-05, 4.123600000000005e-05, 4.122199999999701e-05, 4.122200000000048e-05]</msg>
<status status="PASS" starttime="20201030 15:51:53.761" endtime="20201030 15:51:53.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.756" endtime="20201030 15:51:53.764"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:53.768" endtime="20201030 15:51:53.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.767" endtime="20201030 15:51:53.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.765" endtime="20201030 15:51:53.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.415" endtime="20201030 15:51:53.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.414" endtime="20201030 15:51:53.789"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.797" endtime="20201030 15:51:53.807"></status>
</kw>
<msg timestamp="20201030 15:51:53.807" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.796" endtime="20201030 15:51:53.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.810" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.809" endtime="20201030 15:51:53.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.811" endtime="20201030 15:51:53.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.793" endtime="20201030 15:51:53.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.791" endtime="20201030 15:51:53.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.820" endtime="20201030 15:51:54.106"></status>
</kw>
<msg timestamp="20201030 15:51:54.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018795403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018843708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.819" endtime="20201030 15:51:54.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018795403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018843708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.110" endtime="20201030 15:51:54.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.118" endtime="20201030 15:51:54.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.816" endtime="20201030 15:51:54.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.814" endtime="20201030 15:51:54.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:54.125" level="INFO">${PHILIP_RES} = [{'diff': 4.830500000000196e-05}, {'diff': 4.722199999999954e-05}, {'diff': 4.729199999999739e-05}, {'diff': 4.7237000000002055e-05}, {'diff': 4.723599999999911e-05}, {'diff': 4.725000000000215e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:51:54.122" endtime="20201030 15:51:54.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:54.130" level="INFO">${RESULT} = {'diff': [4.830500000000196e-05, 4.722199999999954e-05, 4.729199999999739e-05, 4.7237000000002055e-05, 4.723599999999911e-05, 4.725000000000215e-05, 4.722199999999954e-05, 4.723599999999911e-05, 4.722...</msg>
<status status="PASS" starttime="20201030 15:51:54.126" endtime="20201030 15:51:54.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.134" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:54.133" endtime="20201030 15:51:54.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.137" level="INFO">VALUE: [4.830500000000196e-05, 4.722199999999954e-05, 4.729199999999739e-05, 4.7237000000002055e-05, 4.723599999999911e-05, 4.725000000000215e-05, 4.722199999999954e-05, 4.723599999999911e-05, 4.7222999999999016e-05, 4.722199999999954e-05, 4.722199999999954e-05, 4.732e-05, 4.716600000000126e-05, 4.7236999999998586e-05, 4.727700000000182e-05, 4.727799999999782e-05, 4.723599999999911e-05, 4.724999999999868e-05, 4.732e-05, 4.724999999999868e-05, 4.7194999999999876e-05, 4.723599999999911e-05, 4.723599999999911e-05, 4.725000000000215e-05, 4.724999999999868e-05, 4.7209000000002915e-05, 4.723599999999911e-05, 4.723600000000258e-05, 4.723599999999911e-05, 4.723599999999911e-05, 4.724999999999868e-05, 4.725000000000215e-05, 4.7167000000000736e-05, 4.723599999999911e-05, 4.723600000000258e-05, 4.726299999999878e-05, 4.722199999999954e-05, 4.723599999999911e-05, 4.725000000000215e-05, 4.722199999999954e-05, 4.725000000000215e-05, 4.723599999999911e-05, 4.725000000000215e-05, 4.724999999999868e-05, 4.719399999999693e-05, 4.723599999999911e-05, 4.723599999999911e-05, 4.725000000000215e-05, 4.722199999999954e-05, 4.723600000000258e-05]</msg>
<status status="PASS" starttime="20201030 15:51:54.135" endtime="20201030 15:51:54.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.131" endtime="20201030 15:51:54.138"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:54.142" endtime="20201030 15:51:54.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.140" endtime="20201030 15:51:54.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.139" endtime="20201030 15:51:54.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.790" endtime="20201030 15:51:54.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.789" endtime="20201030 15:51:54.163"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.171" endtime="20201030 15:51:54.181"></status>
</kw>
<msg timestamp="20201030 15:51:54.182" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.170" endtime="20201030 15:51:54.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.184" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.183" endtime="20201030 15:51:54.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.185" endtime="20201030 15:51:54.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.167" endtime="20201030 15:51:54.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.165" endtime="20201030 15:51:54.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.195" endtime="20201030 15:51:54.480"></status>
</kw>
<msg timestamp="20201030 15:51:54.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019099972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019154639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.193" endtime="20201030 15:51:54.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019099972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019154639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.484" endtime="20201030 15:51:54.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.492" endtime="20201030 15:51:54.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.190" endtime="20201030 15:51:54.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.189" endtime="20201030 15:51:54.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:54.500" level="INFO">${PHILIP_RES} = [{'diff': 5.46670000000013e-05}, {'diff': 5.361200000000149e-05}, {'diff': 5.368099999999987e-05}, {'diff': 5.358299999999941e-05}, {'diff': 5.359700000000245e-05}, {'diff': 5.355500000000027e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:54.497" endtime="20201030 15:51:54.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:54.504" level="INFO">${RESULT} = {'diff': [5.46670000000013e-05, 5.361200000000149e-05, 5.368099999999987e-05, 5.358299999999941e-05, 5.359700000000245e-05, 5.355500000000027e-05, 5.358299999999941e-05, 5.362500000000159e-05, 5.35420...</msg>
<status status="PASS" starttime="20201030 15:51:54.501" endtime="20201030 15:51:54.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.509" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:54.508" endtime="20201030 15:51:54.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.511" level="INFO">VALUE: [5.46670000000013e-05, 5.361200000000149e-05, 5.368099999999987e-05, 5.358299999999941e-05, 5.359700000000245e-05, 5.355500000000027e-05, 5.358299999999941e-05, 5.362500000000159e-05, 5.354200000000017e-05, 5.361099999999855e-05, 5.361099999999855e-05, 5.358299999999941e-05, 5.361100000000202e-05, 5.361099999999855e-05, 5.361099999999855e-05, 5.361200000000149e-05, 5.362499999999812e-05, 5.361099999999855e-05, 5.359700000000245e-05, 5.359700000000245e-05, 5.359699999999898e-05, 5.355599999999974e-05, 5.361200000000149e-05, 5.359699999999898e-05, 5.363900000000116e-05, 5.359699999999898e-05, 5.358299999999941e-05, 5.359699999999898e-05, 5.361199999999802e-05, 5.359799999999845e-05, 5.361100000000202e-05, 5.359699999999898e-05, 5.361099999999855e-05, 5.359700000000245e-05, 5.358400000000235e-05, 5.361199999999802e-05, 5.361099999999855e-05, 5.358299999999941e-05, 5.359700000000245e-05, 5.361099999999855e-05, 5.356999999999931e-05, 5.361100000000202e-05, 5.359800000000192e-05, 5.356899999999984e-05, 5.363899999999769e-05, 5.359700000000245e-05, 5.358299999999941e-05, 5.358299999999941e-05, 5.358399999999888e-05, 5.361100000000202e-05]</msg>
<status status="PASS" starttime="20201030 15:51:54.510" endtime="20201030 15:51:54.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.505" endtime="20201030 15:51:54.512"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:54.516" endtime="20201030 15:51:54.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.515" endtime="20201030 15:51:54.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.513" endtime="20201030 15:51:54.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.163" endtime="20201030 15:51:54.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.163" endtime="20201030 15:51:54.537"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.545" endtime="20201030 15:51:54.557"></status>
</kw>
<msg timestamp="20201030 15:51:54.558" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.544" endtime="20201030 15:51:54.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.560" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.559" endtime="20201030 15:51:54.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.561" endtime="20201030 15:51:54.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.541" endtime="20201030 15:51:54.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.539" endtime="20201030 15:51:54.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.570" endtime="20201030 15:51:54.856"></status>
</kw>
<msg timestamp="20201030 15:51:54.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01970725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019768639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:54.569" endtime="20201030 15:51:54.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01970725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019768639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:54.860" endtime="20201030 15:51:54.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.869" endtime="20201030 15:51:54.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.566" endtime="20201030 15:51:54.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.565" endtime="20201030 15:51:54.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:54.875" level="INFO">${PHILIP_RES} = [{'diff': 6.138900000000197e-05}, {'diff': 6.0305999999999554e-05}, {'diff': 6.0291999999999984e-05}, {'diff': 6.0305999999999554e-05}, {'diff': 6.031899999999965e-05}, {'diff': 6.030500000000008e-05}...</msg>
<status status="PASS" starttime="20201030 15:51:54.872" endtime="20201030 15:51:54.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:54.879" level="INFO">${RESULT} = {'diff': [6.138900000000197e-05, 6.0305999999999554e-05, 6.0291999999999984e-05, 6.0305999999999554e-05, 6.031899999999965e-05, 6.030500000000008e-05, 6.0278000000000415e-05, 6.0250000000001275e-05, 6...</msg>
<status status="PASS" starttime="20201030 15:51:54.876" endtime="20201030 15:51:54.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.884" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:54.883" endtime="20201030 15:51:54.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.886" level="INFO">VALUE: [6.138900000000197e-05, 6.0305999999999554e-05, 6.0291999999999984e-05, 6.0305999999999554e-05, 6.031899999999965e-05, 6.030500000000008e-05, 6.0278000000000415e-05, 6.0250000000001275e-05, 6.0319999999999124e-05, 6.0291999999999984e-05, 6.0291999999999984e-05, 6.029100000000051e-05, 6.03750000000014e-05, 6.0291999999999984e-05, 6.0291999999999984e-05, 6.0263999999997375e-05, 6.0305999999999554e-05, 6.030500000000008e-05, 6.029100000000051e-05, 6.029100000000051e-05, 6.0291999999999984e-05, 6.0291999999999984e-05, 6.0278000000000415e-05, 6.030500000000008e-05, 6.02629999999979e-05, 6.029100000000051e-05, 6.0250000000001275e-05, 6.0278000000000415e-05, 6.0305999999999554e-05, 6.0291999999999984e-05, 6.030500000000008e-05, 6.030500000000008e-05, 6.0236000000001705e-05, 6.0305999999999554e-05, 6.0221999999998665e-05, 6.0291999999999984e-05, 6.0291999999999984e-05, 6.0264000000000845e-05, 6.031900000000312e-05, 6.0250000000001275e-05, 6.0291999999999984e-05, 6.0264000000000845e-05, 6.0291999999999984e-05, 6.033299999999922e-05, 6.029100000000051e-05, 6.0221999999998665e-05, 6.0305999999999554e-05, 6.0306000000003024e-05, 6.0319999999999124e-05, 6.0264000000000845e-05]</msg>
<status status="PASS" starttime="20201030 15:51:54.885" endtime="20201030 15:51:54.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.880" endtime="20201030 15:51:54.891"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:54.894" endtime="20201030 15:51:54.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.893" endtime="20201030 15:51:54.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.892" endtime="20201030 15:51:54.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.538" endtime="20201030 15:51:54.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.537" endtime="20201030 15:51:54.915"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.924" endtime="20201030 15:51:54.935"></status>
</kw>
<msg timestamp="20201030 15:51:54.936" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.922" endtime="20201030 15:51:54.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.938" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.937" endtime="20201030 15:51:54.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.939" endtime="20201030 15:51:54.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.919" endtime="20201030 15:51:54.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.918" endtime="20201030 15:51:54.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.949" endtime="20201030 15:51:55.236"></status>
</kw>
<msg timestamp="20201030 15:51:55.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018782597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018851042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.948" endtime="20201030 15:51:55.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018782597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018851042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.240" endtime="20201030 15:51:55.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.248" endtime="20201030 15:51:55.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.945" endtime="20201030 15:51:55.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.943" endtime="20201030 15:51:55.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:55.255" level="INFO">${PHILIP_RES} = [{'diff': 6.844499999999684e-05}, {'diff': 6.736100000000189e-05}, {'diff': 6.730500000000014e-05}, {'diff': 6.734700000000232e-05}, {'diff': 6.738900000000103e-05}, {'diff': 6.736099999999842e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:55.252" endtime="20201030 15:51:55.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:55.260" level="INFO">${RESULT} = {'diff': [6.844499999999684e-05, 6.736100000000189e-05, 6.730500000000014e-05, 6.734700000000232e-05, 6.738900000000103e-05, 6.736099999999842e-05, 6.734799999999833e-05, 6.73480000000018e-05, 6.73470...</msg>
<status status="PASS" starttime="20201030 15:51:55.256" endtime="20201030 15:51:55.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.264" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:55.263" endtime="20201030 15:51:55.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.267" level="INFO">VALUE: [6.844499999999684e-05, 6.736100000000189e-05, 6.730500000000014e-05, 6.734700000000232e-05, 6.738900000000103e-05, 6.736099999999842e-05, 6.734799999999833e-05, 6.73480000000018e-05, 6.734700000000232e-05, 6.733299999999928e-05, 6.736099999999842e-05, 6.736100000000189e-05, 6.736100000000189e-05, 6.731999999999919e-05, 6.736100000000189e-05, 6.74030000000006e-05, 6.736099999999842e-05, 6.738900000000103e-05, 6.730500000000014e-05, 6.734700000000232e-05, 6.734699999999885e-05, 6.737499999999799e-05, 6.736100000000189e-05, 6.740200000000113e-05, 6.738899999999756e-05, 6.736099999999842e-05, 6.736100000000189e-05, 6.737499999999799e-05, 6.736099999999842e-05, 6.736100000000189e-05, 6.737500000000146e-05, 6.736099999999842e-05, 6.734799999999833e-05, 6.734700000000232e-05, 6.736100000000189e-05, 6.736099999999842e-05, 6.729200000000005e-05, 6.734700000000232e-05, 6.740199999999766e-05, 6.736099999999842e-05, 6.736200000000137e-05, 6.737500000000146e-05, 6.737499999999799e-05, 6.736099999999842e-05, 6.738900000000103e-05, 6.736100000000189e-05, 6.736099999999842e-05, 6.74160000000007e-05, 6.736200000000137e-05, 6.738899999999756e-05]</msg>
<status status="PASS" starttime="20201030 15:51:55.265" endtime="20201030 15:51:55.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.261" endtime="20201030 15:51:55.272"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:55.276" endtime="20201030 15:51:55.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.274" endtime="20201030 15:51:55.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.273" endtime="20201030 15:51:55.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.916" endtime="20201030 15:51:55.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.916" endtime="20201030 15:51:55.296"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.305" endtime="20201030 15:51:55.316"></status>
</kw>
<msg timestamp="20201030 15:51:55.317" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.303" endtime="20201030 15:51:55.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.319" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.318" endtime="20201030 15:51:55.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.320" endtime="20201030 15:51:55.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.301" endtime="20201030 15:51:55.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.299" endtime="20201030 15:51:55.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.330" endtime="20201030 15:51:55.617"></status>
</kw>
<msg timestamp="20201030 15:51:55.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018772014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018847847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.328" endtime="20201030 15:51:55.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018772014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018847847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.621" endtime="20201030 15:51:55.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.629" endtime="20201030 15:51:55.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.325" endtime="20201030 15:51:55.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.323" endtime="20201030 15:51:55.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:55.637" level="INFO">${PHILIP_RES} = [{'diff': 7.583300000000084e-05}, {'diff': 7.479200000000061e-05}, {'diff': 7.477799999999757e-05}, {'diff': 7.477800000000104e-05}, {'diff': 7.477700000000156e-05}, {'diff': 7.47769999999981e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:55.634" endtime="20201030 15:51:55.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:55.641" level="INFO">${RESULT} = {'diff': [7.583300000000084e-05, 7.479200000000061e-05, 7.477799999999757e-05, 7.477800000000104e-05, 7.477700000000156e-05, 7.47769999999981e-05, 7.47769999999981e-05, 7.479200000000061e-05, 7.476400...</msg>
<status status="PASS" starttime="20201030 15:51:55.638" endtime="20201030 15:51:55.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.645" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:55.644" endtime="20201030 15:51:55.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.648" level="INFO">VALUE: [7.583300000000084e-05, 7.479200000000061e-05, 7.477799999999757e-05, 7.477800000000104e-05, 7.477700000000156e-05, 7.47769999999981e-05, 7.47769999999981e-05, 7.479200000000061e-05, 7.476400000000147e-05, 7.483299999999984e-05, 7.477800000000104e-05, 7.477800000000104e-05, 7.477799999999757e-05, 7.477800000000104e-05, 7.477800000000104e-05, 7.477799999999757e-05, 7.473599999999886e-05, 7.476400000000147e-05, 7.484699999999941e-05, 7.4763999999998e-05, 7.480600000000018e-05, 7.480600000000018e-05, 7.477800000000104e-05, 7.480600000000018e-05, 7.477799999999757e-05, 7.4763999999998e-05, 7.477700000000156e-05, 7.48050000000007e-05, 7.477799999999757e-05, 7.473699999999833e-05, 7.479200000000061e-05, 7.4763999999998e-05, 7.484699999999941e-05, 7.477800000000104e-05, 7.4763999999998e-05, 7.477800000000104e-05, 7.47500000000019e-05, 7.479099999999766e-05, 7.477800000000104e-05, 7.484699999999941e-05, 7.477800000000104e-05, 7.477800000000104e-05, 7.477800000000104e-05, 7.477799999999757e-05, 7.479200000000061e-05, 7.476400000000147e-05, 7.476400000000147e-05, 7.477799999999757e-05, 7.477700000000156e-05, 7.470899999999919e-05]</msg>
<status status="PASS" starttime="20201030 15:51:55.647" endtime="20201030 15:51:55.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.642" endtime="20201030 15:51:55.649"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:55.653" endtime="20201030 15:51:55.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.651" endtime="20201030 15:51:55.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.650" endtime="20201030 15:51:55.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.297" endtime="20201030 15:51:55.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.297" endtime="20201030 15:51:55.674"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.682" endtime="20201030 15:51:55.696"></status>
</kw>
<msg timestamp="20201030 15:51:55.696" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.681" endtime="20201030 15:51:55.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.699" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.697" endtime="20201030 15:51:55.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.700" endtime="20201030 15:51:55.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.678" endtime="20201030 15:51:55.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.676" endtime="20201030 15:51:55.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.709" endtime="20201030 15:51:55.995"></status>
</kw>
<msg timestamp="20201030 15:51:55.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019700264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019783875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.707" endtime="20201030 15:51:55.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019700264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019783875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.999" endtime="20201030 15:51:56.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.008" endtime="20201030 15:51:56.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.705" endtime="20201030 15:51:56.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.703" endtime="20201030 15:51:56.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:56.014" level="INFO">${PHILIP_RES} = [{'diff': 8.36110000000008e-05}, {'diff': 8.252699999999891e-05}, {'diff': 8.254200000000142e-05}, {'diff': 8.258300000000066e-05}, {'diff': 8.255600000000099e-05}, {'diff': 8.26109999999998e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:51:56.011" endtime="20201030 15:51:56.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:56.018" level="INFO">${RESULT} = {'diff': [8.36110000000008e-05, 8.252699999999891e-05, 8.254200000000142e-05, 8.258300000000066e-05, 8.255600000000099e-05, 8.26109999999998e-05, 8.252799999999838e-05, 8.254100000000195e-05, 8.255600...</msg>
<status status="PASS" starttime="20201030 15:51:56.015" endtime="20201030 15:51:56.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.023" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:56.022" endtime="20201030 15:51:56.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.025" level="INFO">VALUE: [8.36110000000008e-05, 8.252699999999891e-05, 8.254200000000142e-05, 8.258300000000066e-05, 8.255600000000099e-05, 8.26109999999998e-05, 8.252799999999838e-05, 8.254100000000195e-05, 8.255600000000099e-05, 8.252699999999891e-05, 8.257000000000056e-05, 8.254099999999848e-05, 8.252799999999838e-05, 8.254100000000195e-05, 8.248599999999967e-05, 8.252699999999891e-05, 8.252799999999838e-05, 8.255500000000152e-05, 8.256899999999762e-05, 8.255500000000152e-05, 8.255600000000099e-05, 8.254099999999848e-05, 8.26109999999998e-05, 8.255500000000152e-05, 8.251399999999881e-05, 8.254100000000195e-05, 8.254199999999795e-05, 8.254099999999848e-05, 8.24720000000001e-05, 8.255500000000152e-05, 8.255600000000099e-05, 8.255499999999805e-05, 8.24720000000001e-05, 8.256900000000109e-05, 8.254200000000142e-05, 8.254100000000195e-05, 8.254199999999795e-05, 8.255499999999805e-05, 8.255600000000099e-05, 8.256900000000109e-05, 8.254200000000142e-05, 8.255499999999805e-05, 8.255599999999752e-05, 8.255499999999805e-05, 8.254200000000142e-05, 8.251400000000228e-05, 8.252800000000185e-05, 8.254099999999848e-05, 8.255599999999752e-05, 8.254099999999848e-05]</msg>
<status status="PASS" starttime="20201030 15:51:56.024" endtime="20201030 15:51:56.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.019" endtime="20201030 15:51:56.027"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:56.031" endtime="20201030 15:51:56.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.029" endtime="20201030 15:51:56.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.028" endtime="20201030 15:51:56.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.675" endtime="20201030 15:51:56.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.674" endtime="20201030 15:51:56.052"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.060" endtime="20201030 15:51:56.072"></status>
</kw>
<msg timestamp="20201030 15:51:56.073" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.059" endtime="20201030 15:51:56.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.075" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.074" endtime="20201030 15:51:56.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.076" endtime="20201030 15:51:56.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.056" endtime="20201030 15:51:56.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.054" endtime="20201030 15:51:56.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.085" endtime="20201030 15:51:56.371"></status>
</kw>
<msg timestamp="20201030 15:51:56.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018738139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018829861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:56.084" endtime="20201030 15:51:56.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018738139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018829861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:56.375" endtime="20201030 15:51:56.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.383" endtime="20201030 15:51:56.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.081" endtime="20201030 15:51:56.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.080" endtime="20201030 15:51:56.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:56.390" level="INFO">${PHILIP_RES} = [{'diff': 9.172199999999894e-05}, {'diff': 9.0639e-05}, {'diff': 9.06670000000026e-05}, {'diff': 9.061200000000033e-05}, {'diff': 9.062499999999696e-05}, {'diff': 9.065299999999957e-05}, {'diff': 9.06...</msg>
<status status="PASS" starttime="20201030 15:51:56.387" endtime="20201030 15:51:56.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:56.395" level="INFO">${RESULT} = {'diff': [9.172199999999894e-05, 9.0639e-05, 9.06670000000026e-05, 9.061200000000033e-05, 9.062499999999696e-05, 9.065299999999957e-05, 9.065299999999957e-05, 9.06520000000001e-05, 9.065299999999957e-...</msg>
<status status="PASS" starttime="20201030 15:51:56.391" endtime="20201030 15:51:56.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.399" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:56.398" endtime="20201030 15:51:56.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.402" level="INFO">VALUE: [9.172199999999894e-05, 9.0639e-05, 9.06670000000026e-05, 9.061200000000033e-05, 9.062499999999696e-05, 9.065299999999957e-05, 9.065299999999957e-05, 9.06520000000001e-05, 9.065299999999957e-05, 9.065299999999957e-05, 9.065299999999957e-05, 9.067999999999923e-05, 9.0639e-05, 9.065299999999957e-05, 9.065299999999957e-05, 9.067999999999923e-05, 9.065300000000304e-05, 9.065299999999957e-05, 9.062500000000043e-05, 9.066699999999914e-05, 9.066599999999966e-05, 9.065299999999957e-05, 9.0639e-05, 9.066699999999914e-05, 9.063799999999705e-05, 9.065299999999957e-05, 9.06670000000026e-05, 9.069500000000175e-05, 9.065299999999957e-05, 9.065299999999957e-05, 9.068099999999871e-05, 9.065299999999957e-05, 9.066699999999914e-05, 9.0639e-05, 9.065299999999957e-05, 9.0639e-05, 9.0639e-05, 9.06520000000001e-05, 9.065299999999957e-05, 9.068099999999871e-05, 9.066699999999914e-05, 9.06520000000001e-05, 9.0639e-05, 9.068099999999871e-05, 9.056900000000215e-05, 9.06520000000001e-05, 9.065299999999957e-05, 9.065299999999957e-05, 9.065299999999957e-05, 9.066699999999914e-05]</msg>
<status status="PASS" starttime="20201030 15:51:56.401" endtime="20201030 15:51:56.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.396" endtime="20201030 15:51:56.403"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:56.407" endtime="20201030 15:51:56.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.405" endtime="20201030 15:51:56.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.404" endtime="20201030 15:51:56.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.053" endtime="20201030 15:51:56.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.052" endtime="20201030 15:51:56.428"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.436" endtime="20201030 15:51:56.449"></status>
</kw>
<msg timestamp="20201030 15:51:56.449" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.435" endtime="20201030 15:51:56.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.452" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.450" endtime="20201030 15:51:56.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.453" endtime="20201030 15:51:56.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.432" endtime="20201030 15:51:56.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.430" endtime="20201030 15:51:56.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.462" endtime="20201030 15:51:56.747"></status>
</kw>
<msg timestamp="20201030 15:51:56.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018785528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018885736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:56.460" endtime="20201030 15:51:56.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018785528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018885736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:56.751" endtime="20201030 15:51:56.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.759" endtime="20201030 15:51:56.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.458" endtime="20201030 15:51:56.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.456" endtime="20201030 15:51:56.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:56.767" level="INFO">${PHILIP_RES} = [{'diff': 0.00010020800000000094}, {'diff': 9.912499999999852e-05}, {'diff': 9.915300000000113e-05}, {'diff': 9.913900000000156e-05}, {'diff': 9.913900000000156e-05}, {'diff': 9.913900000000156e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:51:56.763" endtime="20201030 15:51:56.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:56.771" level="INFO">${RESULT} = {'diff': [0.00010020800000000094, 9.912499999999852e-05, 9.915300000000113e-05, 9.913900000000156e-05, 9.913900000000156e-05, 9.913900000000156e-05, 9.912500000000199e-05, 9.911100000000242e-05, 9.911...</msg>
<status status="PASS" starttime="20201030 15:51:56.768" endtime="20201030 15:51:56.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.775" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:56.774" endtime="20201030 15:51:56.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.778" level="INFO">VALUE: [0.00010020800000000094, 9.912499999999852e-05, 9.915300000000113e-05, 9.913900000000156e-05, 9.913900000000156e-05, 9.913900000000156e-05, 9.912500000000199e-05, 9.911100000000242e-05, 9.911100000000242e-05, 9.912500000000199e-05, 9.906999999999971e-05, 9.91939999999969e-05, 9.911099999999895e-05, 9.911099999999895e-05, 9.909699999999938e-05, 9.915300000000113e-05, 9.912499999999852e-05, 9.908299999999981e-05, 9.911099999999895e-05, 9.912499999999852e-05, 9.912499999999852e-05, 9.913900000000156e-05, 9.908300000000328e-05, 9.912500000000199e-05, 9.912500000000199e-05, 9.912500000000199e-05, 9.912499999999852e-05, 9.912500000000199e-05, 9.912499999999852e-05, 9.913899999999809e-05, 9.912499999999852e-05, 9.912499999999852e-05, 9.912499999999852e-05, 9.909699999999938e-05, 9.912499999999852e-05, 9.913899999999809e-05, 9.911099999999895e-05, 9.912499999999852e-05, 9.912499999999852e-05, 9.911100000000242e-05, 9.912500000000199e-05, 9.912500000000199e-05, 9.911100000000242e-05, 9.911099999999895e-05, 9.912499999999852e-05, 9.913899999999809e-05, 9.906999999999971e-05, 9.913899999999809e-05, 9.918100000000027e-05, 9.918100000000027e-05]</msg>
<status status="PASS" starttime="20201030 15:51:56.776" endtime="20201030 15:51:56.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.772" endtime="20201030 15:51:56.779"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:56.783" endtime="20201030 15:51:56.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.781" endtime="20201030 15:51:56.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.780" endtime="20201030 15:51:56.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.429" endtime="20201030 15:51:56.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.428" endtime="20201030 15:51:56.803"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.812" endtime="20201030 15:51:56.826"></status>
</kw>
<msg timestamp="20201030 15:51:56.826" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.810" endtime="20201030 15:51:56.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.829" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.827" endtime="20201030 15:51:56.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.830" endtime="20201030 15:51:56.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.808" endtime="20201030 15:51:56.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.806" endtime="20201030 15:51:56.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.839" endtime="20201030 15:51:57.125"></status>
</kw>
<msg timestamp="20201030 15:51:57.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019548514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019657556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:56.837" endtime="20201030 15:51:57.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019548514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019657556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.129" endtime="20201030 15:51:57.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.137" endtime="20201030 15:51:57.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.835" endtime="20201030 15:51:57.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.833" endtime="20201030 15:51:57.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:57.144" level="INFO">${PHILIP_RES} = [{'diff': 0.00010904200000000017}, {'diff': 0.00010797200000000132}, {'diff': 0.00010797199999999785}, {'diff': 0.00010794399999999871}, {'diff': 0.00010792999999999914}, {'diff': 0.000107943999999998...</msg>
<status status="PASS" starttime="20201030 15:51:57.140" endtime="20201030 15:51:57.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:57.148" level="INFO">${RESULT} = {'diff': [0.00010904200000000017, 0.00010797200000000132, 0.00010797199999999785, 0.00010794399999999871, 0.00010792999999999914, 0.00010794399999999871, 0.00010795799999999828, 0.00010792999999999914...</msg>
<status status="PASS" starttime="20201030 15:51:57.145" endtime="20201030 15:51:57.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.153" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:57.152" endtime="20201030 15:51:57.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.157" level="INFO">VALUE: [0.00010904200000000017, 0.00010797200000000132, 0.00010797199999999785, 0.00010794399999999871, 0.00010792999999999914, 0.00010794399999999871, 0.00010795799999999828, 0.00010792999999999914, 0.00010794400000000218, 0.00010793099999999861, 0.00010791699999999904, 0.00010794400000000218, 0.00010797199999999785, 0.00010795900000000122, 0.00010794500000000165, 0.00010797299999999732, 0.00010798600000000089, 0.00010790299999999947, 0.00010797299999999732, 0.00010794500000000165, 0.00010798600000000089, 0.00010795899999999775, 0.00010795799999999828, 0.00010794500000000165, 0.00010797199999999785, 0.00010794399999999871, 0.00010794400000000218, 0.00010794399999999871, 0.00010792999999999914, 0.00010794400000000218, 0.00010797199999999785, 0.00010794399999999871, 0.0001078889999999999, 0.00010795799999999828, 0.00010794399999999871, 0.00010795800000000175, 0.00010795799999999828, 0.00010791699999999904, 0.00010795800000000175, 0.00010797199999999785, 0.00010793099999999861, 0.00010798700000000036, 0.00010795900000000122, 0.00010794499999999818, 0.00010793100000000208, 0.00010791699999999904, 0.00010795899999999775, 0.00010793100000000208, 0.00010795900000000122, 0.00010793099999999861]</msg>
<status status="PASS" starttime="20201030 15:51:57.155" endtime="20201030 15:51:57.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.149" endtime="20201030 15:51:57.159"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:57.165" endtime="20201030 15:51:57.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.162" endtime="20201030 15:51:57.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.160" endtime="20201030 15:51:57.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.804" endtime="20201030 15:51:57.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.804" endtime="20201030 15:51:57.186"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.194" endtime="20201030 15:51:57.208"></status>
</kw>
<msg timestamp="20201030 15:51:57.208" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.193" endtime="20201030 15:51:57.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.211" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.209" endtime="20201030 15:51:57.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.212" endtime="20201030 15:51:57.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.190" endtime="20201030 15:51:57.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.188" endtime="20201030 15:51:57.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.221" endtime="20201030 15:51:57.506"></status>
</kw>
<msg timestamp="20201030 15:51:57.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019026306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019144486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.219" endtime="20201030 15:51:57.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019026306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019144486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.511" endtime="20201030 15:51:57.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.519" endtime="20201030 15:51:57.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.217" endtime="20201030 15:51:57.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.215" endtime="20201030 15:51:57.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:57.525" level="INFO">${PHILIP_RES} = [{'diff': 0.00011817999999999898}, {'diff': 0.00011713899999999874}, {'diff': 0.00011709700000000003}, {'diff': 0.00011712500000000264}, {'diff': 0.00011712499999999917}, {'diff': 0.000117181000000000...</msg>
<status status="PASS" starttime="20201030 15:51:57.522" endtime="20201030 15:51:57.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:57.530" level="INFO">${RESULT} = {'diff': [0.00011817999999999898, 0.00011713899999999874, 0.00011709700000000003, 0.00011712500000000264, 0.00011712499999999917, 0.00011718100000000092, 0.00011711199999999908, 0.00011712499999999917...</msg>
<status status="PASS" starttime="20201030 15:51:57.526" endtime="20201030 15:51:57.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.534" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:57.533" endtime="20201030 15:51:57.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.537" level="INFO">VALUE: [0.00011817999999999898, 0.00011713899999999874, 0.00011709700000000003, 0.00011712500000000264, 0.00011712499999999917, 0.00011718100000000092, 0.00011711199999999908, 0.00011712499999999917, 0.00011713899999999874, 0.00011712499999999917, 0.0001171109999999996, 0.0001171109999999996, 0.0001171109999999996, 0.0001171109999999996, 0.0001171109999999996, 0.00011712499999999917, 0.00011712500000000264, 0.00011712499999999917, 0.00011712499999999917, 0.00011716600000000188, 0.00011712499999999917, 0.00011712499999999917, 0.0001171109999999996, 0.00011712500000000264, 0.00011709700000000003, 0.00011718000000000145, 0.00011716600000000188, 0.0001171109999999996, 0.00011713899999999874, 0.00011712499999999917, 0.00011713899999999874, 0.00011716700000000135, 0.00011712499999999917, 0.0001171109999999996, 0.0001171109999999996, 0.00011711199999999908, 0.0001171109999999996, 0.00011713899999999874, 0.00011715300000000178, 0.00011720800000000059, 0.00011712499999999917, 0.00011712499999999917, 0.00011712499999999917, 0.00011712499999999917, 0.00011713799999999927, 0.00011709800000000298, 0.0001171109999999996, 0.00011715299999999831, 0.00011713900000000221, 0.0001170690000000009]</msg>
<status status="PASS" starttime="20201030 15:51:57.536" endtime="20201030 15:51:57.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.531" endtime="20201030 15:51:57.538"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:57.542" endtime="20201030 15:51:57.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.540" endtime="20201030 15:51:57.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.539" endtime="20201030 15:51:57.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.187" endtime="20201030 15:51:57.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.186" endtime="20201030 15:51:57.563"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.571" endtime="20201030 15:51:57.586"></status>
</kw>
<msg timestamp="20201030 15:51:57.587" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.570" endtime="20201030 15:51:57.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.589" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.588" endtime="20201030 15:51:57.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.590" endtime="20201030 15:51:57.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.567" endtime="20201030 15:51:57.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.565" endtime="20201030 15:51:57.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.599" endtime="20201030 15:51:57.885"></status>
</kw>
<msg timestamp="20201030 15:51:57.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018789361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018917083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.598" endtime="20201030 15:51:57.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018789361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018917083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.889" endtime="20201030 15:51:57.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.897" endtime="20201030 15:51:57.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.595" endtime="20201030 15:51:57.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.593" endtime="20201030 15:51:57.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:57.905" level="INFO">${PHILIP_RES} = [{'diff': 0.00012772200000000025}, {'diff': 0.00012670799999999968}, {'diff': 0.0001266390000000013}, {'diff': 0.0001266109999999987}, {'diff': 0.00012663799999999836}, {'diff': 0.0001266109999999987}...</msg>
<status status="PASS" starttime="20201030 15:51:57.902" endtime="20201030 15:51:57.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:57.909" level="INFO">${RESULT} = {'diff': [0.00012772200000000025, 0.00012670799999999968, 0.0001266390000000013, 0.0001266109999999987, 0.00012663799999999836, 0.0001266109999999987, 0.00012663899999999784, 0.00012662500000000174, 0...</msg>
<status status="PASS" starttime="20201030 15:51:57.906" endtime="20201030 15:51:57.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.913" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:57.912" endtime="20201030 15:51:57.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.916" level="INFO">VALUE: [0.00012772200000000025, 0.00012670799999999968, 0.0001266390000000013, 0.0001266109999999987, 0.00012663799999999836, 0.0001266109999999987, 0.00012663899999999784, 0.00012662500000000174, 0.0001266109999999987, 0.00012670899999999916, 0.00012662500000000174, 0.00012662499999999827, 0.00012663899999999784, 0.0001265559999999999, 0.0001266390000000013, 0.0001266390000000013, 0.00012662500000000174, 0.0001266390000000013, 0.00012662499999999827, 0.00012662499999999827, 0.00012663899999999784, 0.00012662500000000174, 0.00012672199999999925, 0.0001266520000000014, 0.0001266390000000013, 0.0001266109999999987, 0.0001266109999999987, 0.00012663899999999784, 0.00012665300000000088, 0.0001266390000000013, 0.00012663800000000183, 0.0001266390000000013, 0.0001266520000000014, 0.00012665300000000088, 0.0001266109999999987, 0.00012663800000000183, 0.0001266390000000013, 0.0001266390000000013, 0.00012662499999999827, 0.0001266390000000013, 0.00012662499999999827, 0.00012662499999999827, 0.00012659699999999913, 0.00012662500000000174, 0.00012665300000000088, 0.00012670899999999916, 0.0001266390000000013, 0.00012662499999999827, 0.0001266109999999987, 0.00012663799999999836]</msg>
<status status="PASS" starttime="20201030 15:51:57.914" endtime="20201030 15:51:57.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.910" endtime="20201030 15:51:57.917"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:57.921" endtime="20201030 15:51:57.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.919" endtime="20201030 15:51:57.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.918" endtime="20201030 15:51:57.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.564" endtime="20201030 15:51:57.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.563" endtime="20201030 15:51:57.941"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.950" endtime="20201030 15:51:57.966"></status>
</kw>
<msg timestamp="20201030 15:51:57.967" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.948" endtime="20201030 15:51:57.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.969" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.968" endtime="20201030 15:51:57.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.970" endtime="20201030 15:51:57.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.946" endtime="20201030 15:51:57.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.944" endtime="20201030 15:51:57.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.980" endtime="20201030 15:51:58.266"></status>
</kw>
<msg timestamp="20201030 15:51:58.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019820292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019957917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.978" endtime="20201030 15:51:58.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019820292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019957917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.270" endtime="20201030 15:51:58.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.278" endtime="20201030 15:51:58.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.975" endtime="20201030 15:51:58.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.974" endtime="20201030 15:51:58.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:58.285" level="INFO">${PHILIP_RES} = [{'diff': 0.00013762499999999886}, {'diff': 0.0001365419999999999}, {'diff': 0.00013652800000000034}, {'diff': 0.00013651400000000077}, {'diff': 0.0001365139999999973}, {'diff': 0.00013645799999999902...</msg>
<status status="PASS" starttime="20201030 15:51:58.281" endtime="20201030 15:51:58.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:58.289" level="INFO">${RESULT} = {'diff': [0.00013762499999999886, 0.0001365419999999999, 0.00013652800000000034, 0.00013651400000000077, 0.0001365139999999973, 0.00013645799999999902, 0.0001365000000000012, 0.0001365139999999973, 0....</msg>
<status status="PASS" starttime="20201030 15:51:58.286" endtime="20201030 15:51:58.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.293" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:58.292" endtime="20201030 15:51:58.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.295" level="INFO">VALUE: [0.00013762499999999886, 0.0001365419999999999, 0.00013652800000000034, 0.00013651400000000077, 0.0001365139999999973, 0.00013645799999999902, 0.0001365000000000012, 0.0001365139999999973, 0.00013651400000000077, 0.0001365000000000012, 0.00013651400000000077, 0.0001365139999999973, 0.0001365000000000012, 0.0001364719999999986, 0.00013651400000000077, 0.0001365139999999973, 0.0001365000000000012, 0.00013644399999999945, 0.00013652800000000034, 0.0001365139999999973, 0.0001365130000000013, 0.00013652700000000087, 0.00013652799999999687, 0.0001365419999999999, 0.00013651400000000077, 0.00013651400000000077, 0.00013648599999999816, 0.00013651400000000077, 0.00013651400000000077, 0.0001365000000000012, 0.0001364719999999986, 0.0001365419999999999, 0.0001364870000000011, 0.00013647299999999807, 0.00013651400000000077, 0.00013651400000000077, 0.00013651400000000077, 0.00013651400000000077, 0.00013648600000000163, 0.00013651400000000077, 0.00013651400000000077, 0.00013651299999999783, 0.00013648600000000163, 0.00013654100000000044, 0.0001365139999999973, 0.00013651400000000077, 0.0001364450000000024, 0.0001365419999999999, 0.00013651400000000077, 0.00013652800000000034]</msg>
<status status="PASS" starttime="20201030 15:51:58.294" endtime="20201030 15:51:58.299"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.289" endtime="20201030 15:51:58.300"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:58.304" endtime="20201030 15:51:58.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.302" endtime="20201030 15:51:58.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.301" endtime="20201030 15:51:58.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.942" endtime="20201030 15:51:58.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.942" endtime="20201030 15:51:58.324"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.333" endtime="20201030 15:51:58.348"></status>
</kw>
<msg timestamp="20201030 15:51:58.349" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.331" endtime="20201030 15:51:58.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.351" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.350" endtime="20201030 15:51:58.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.352" endtime="20201030 15:51:58.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.329" endtime="20201030 15:51:58.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.327" endtime="20201030 15:51:58.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.361" endtime="20201030 15:51:58.647"></status>
</kw>
<msg timestamp="20201030 15:51:58.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018777736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018925583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.360" endtime="20201030 15:51:58.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018777736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018925583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.651" endtime="20201030 15:51:58.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.659" endtime="20201030 15:51:58.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.357" endtime="20201030 15:51:58.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.355" endtime="20201030 15:51:58.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:58.665" level="INFO">${PHILIP_RES} = [{'diff': 0.00014784699999999956}, {'diff': 0.00014680599999999933}, {'diff': 0.00014673600000000148}, {'diff': 0.00014673600000000148}, {'diff': 0.00014673600000000148}, {'diff': 0.000146763999999997...</msg>
<status status="PASS" starttime="20201030 15:51:58.662" endtime="20201030 15:51:58.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:58.670" level="INFO">${RESULT} = {'diff': [0.00014784699999999956, 0.00014680599999999933, 0.00014673600000000148, 0.00014673600000000148, 0.00014673600000000148, 0.00014676399999999715, 0.00014675000000000105, 0.00014673600000000148...</msg>
<status status="PASS" starttime="20201030 15:51:58.666" endtime="20201030 15:51:58.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.675" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:58.674" endtime="20201030 15:51:58.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.677" level="INFO">VALUE: [0.00014784699999999956, 0.00014680599999999933, 0.00014673600000000148, 0.00014673600000000148, 0.00014673600000000148, 0.00014676399999999715, 0.00014675000000000105, 0.00014673600000000148, 0.0001467770000000007, 0.00014675000000000105, 0.000146735999999998, 0.00014670800000000234, 0.00014673600000000148, 0.00014673699999999748, 0.00014675000000000105, 0.00014677800000000019, 0.00014670799999999887, 0.00014675000000000105, 0.000146735999999998, 0.00014675000000000105, 0.000146735999999998, 0.00014674999999999758, 0.00014675000000000105, 0.0001466939999999993, 0.0001466939999999993, 0.00014673600000000148, 0.00014672199999999844, 0.00014673700000000095, 0.00014676400000000062, 0.0001468199999999989, 0.00014670799999999887, 0.00014676399999999715, 0.00014676300000000114, 0.00014667999999999973, 0.00014675000000000105, 0.00014673600000000148, 0.00014674999999999758, 0.00014675000000000105, 0.00014675000000000105, 0.00014674999999999758, 0.00014670799999999887, 0.0001467229999999979, 0.00014673600000000148, 0.00014673600000000148, 0.000146735999999998, 0.00014675000000000105, 0.0001467229999999979, 0.00014674999999999758, 0.0001467220000000019, 0.00014674999999999758]</msg>
<status status="PASS" starttime="20201030 15:51:58.676" endtime="20201030 15:51:58.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.671" endtime="20201030 15:51:58.678"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:58.682" endtime="20201030 15:51:58.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.681" endtime="20201030 15:51:58.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.679" endtime="20201030 15:51:58.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.325" endtime="20201030 15:51:58.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.325" endtime="20201030 15:51:58.703"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.711" endtime="20201030 15:51:58.728"></status>
</kw>
<msg timestamp="20201030 15:51:58.728" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.710" endtime="20201030 15:51:58.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.731" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.729" endtime="20201030 15:51:58.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.732" endtime="20201030 15:51:58.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.707" endtime="20201030 15:51:58.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.705" endtime="20201030 15:51:58.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.741" endtime="20201030 15:51:59.027"></status>
</kw>
<msg timestamp="20201030 15:51:59.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018705417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018863806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.739" endtime="20201030 15:51:59.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018705417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018863806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:59.032" endtime="20201030 15:51:59.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.040" endtime="20201030 15:51:59.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.737" endtime="20201030 15:51:59.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.735" endtime="20201030 15:51:59.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:59.048" level="INFO">${PHILIP_RES} = [{'diff': 0.00015838900000000183}, {'diff': 0.00015729100000000037}, {'diff': 0.00015733299999999908}, {'diff': 0.00015733400000000203}, {'diff': 0.00015736099999999822}, {'diff': 0.000157264000000000...</msg>
<status status="PASS" starttime="20201030 15:51:59.045" endtime="20201030 15:51:59.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:59.054" level="INFO">${RESULT} = {'diff': [0.00015838900000000183, 0.00015729100000000037, 0.00015733299999999908, 0.00015733400000000203, 0.00015736099999999822, 0.0001572640000000007, 0.00015733399999999856, 0.00015733299999999908,...</msg>
<status status="PASS" starttime="20201030 15:51:59.050" endtime="20201030 15:51:59.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.059" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:59.058" endtime="20201030 15:51:59.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.062" level="INFO">VALUE: [0.00015838900000000183, 0.00015729100000000037, 0.00015733299999999908, 0.00015733400000000203, 0.00015736099999999822, 0.0001572640000000007, 0.00015733399999999856, 0.00015733299999999908, 0.00015733300000000255, 0.00015736099999999822, 0.00015730499999999994, 0.00015734699999999865, 0.0001573610000000017, 0.00015734699999999865, 0.00015733299999999908, 0.00015734699999999865, 0.00015731899999999951, 0.0001573060000000029, 0.000157319999999999, 0.00015730499999999994, 0.000157319999999999, 0.00015733400000000203, 0.00015733299999999908, 0.00015730599999999942, 0.00015734799999999813, 0.00015737500000000126, 0.00015733300000000255, 0.00015734799999999813, 0.00015733299999999908, 0.00015733299999999908, 0.00015733400000000203, 0.00015733300000000255, 0.00015738900000000083, 0.00015733399999999856, 0.00015734700000000212, 0.00015733300000000255, 0.00015733399999999856, 0.00015730499999999994, 0.00015729199999999985, 0.00015733400000000203, 0.00015733300000000255, 0.00015731899999999951, 0.00015733399999999856, 0.00015733299999999908, 0.00015731900000000298, 0.00015734799999999813, 0.00015731899999999951, 0.00015733299999999908, 0.0001572640000000007, 0.00015738900000000083]</msg>
<status status="PASS" starttime="20201030 15:51:59.061" endtime="20201030 15:51:59.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.055" endtime="20201030 15:51:59.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:59.069" endtime="20201030 15:51:59.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.067" endtime="20201030 15:51:59.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.065" endtime="20201030 15:51:59.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.704" endtime="20201030 15:51:59.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.703" endtime="20201030 15:51:59.090"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.099" endtime="20201030 15:51:59.116"></status>
</kw>
<msg timestamp="20201030 15:51:59.117" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.097" endtime="20201030 15:51:59.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.119" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.118" endtime="20201030 15:51:59.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.120" endtime="20201030 15:51:59.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.094" endtime="20201030 15:51:59.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.092" endtime="20201030 15:51:59.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.129" endtime="20201030 15:51:59.415"></status>
</kw>
<msg timestamp="20201030 15:51:59.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019654958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019824292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:59.128" endtime="20201030 15:51:59.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019654958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019824292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:59.420" endtime="20201030 15:51:59.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.428" endtime="20201030 15:51:59.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.125" endtime="20201030 15:51:59.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.124" endtime="20201030 15:51:59.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:59.434" level="INFO">${PHILIP_RES} = [{'diff': 0.00016933400000000015}, {'diff': 0.00016825000000000173}, {'diff': 0.00016824999999999826}, {'diff': 0.00016825000000000173}, {'diff': 0.0001682640000000013}, {'diff': 0.0001682359999999987...</msg>
<status status="PASS" starttime="20201030 15:51:59.431" endtime="20201030 15:51:59.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:59.438" level="INFO">${RESULT} = {'diff': [0.00016933400000000015, 0.00016825000000000173, 0.00016824999999999826, 0.00016825000000000173, 0.0001682640000000013, 0.0001682359999999987, 0.00016825000000000173, 0.0001682640000000013, 0...</msg>
<status status="PASS" starttime="20201030 15:51:59.435" endtime="20201030 15:51:59.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.442" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:59.441" endtime="20201030 15:51:59.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.445" level="INFO">VALUE: [0.00016933400000000015, 0.00016825000000000173, 0.00016824999999999826, 0.00016825000000000173, 0.0001682640000000013, 0.0001682359999999987, 0.00016825000000000173, 0.0001682640000000013, 0.00016824999999999826, 0.00016825000000000173, 0.0001682359999999987, 0.00016822199999999912, 0.00016825000000000173, 0.0001682359999999987, 0.00016822199999999912, 0.0001682090000000025, 0.0001682359999999987, 0.00016825000000000173, 0.0001682640000000013, 0.00016816600000000084, 0.0001682640000000013, 0.0001682359999999987, 0.0001682640000000013, 0.00016823600000000216, 0.00016826399999999783, 0.0001683190000000001, 0.0001682220000000026, 0.0001682359999999987, 0.0001682640000000013, 0.00016829200000000044, 0.00016818099999999989, 0.00016830500000000054, 0.0001682359999999987, 0.0001682359999999987, 0.00016819500000000293, 0.00016824999999999826, 0.00016825000000000173, 0.00016824999999999826, 0.00016825000000000173, 0.00016825000000000173, 0.0001682359999999987, 0.00016825000000000173, 0.00016823600000000216, 0.00016824999999999826, 0.00016825000000000173, 0.0001681800000000004, 0.00016824999999999826, 0.0001682640000000013, 0.00016824999999999826, 0.00016825000000000173]</msg>
<status status="PASS" starttime="20201030 15:51:59.444" endtime="20201030 15:51:59.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.439" endtime="20201030 15:51:59.447"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:59.451" endtime="20201030 15:51:59.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.449" endtime="20201030 15:51:59.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.448" endtime="20201030 15:51:59.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.091" endtime="20201030 15:51:59.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.090" endtime="20201030 15:51:59.472"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.480" endtime="20201030 15:51:59.497"></status>
</kw>
<msg timestamp="20201030 15:51:59.497" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.478" endtime="20201030 15:51:59.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.500" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.498" endtime="20201030 15:51:59.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.501" endtime="20201030 15:51:59.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.476" endtime="20201030 15:51:59.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.474" endtime="20201030 15:51:59.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.510" endtime="20201030 15:51:59.796"></status>
</kw>
<msg timestamp="20201030 15:51:59.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018837236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019017778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:59.508" endtime="20201030 15:51:59.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018837236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019017778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:59.800" endtime="20201030 15:51:59.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.808" endtime="20201030 15:51:59.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.506" endtime="20201030 15:51:59.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.504" endtime="20201030 15:51:59.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:59.815" level="INFO">${PHILIP_RES} = [{'diff': 0.00018054199999999881}, {'diff': 0.00017954200000000128}, {'diff': 0.00017952799999999824}, {'diff': 0.00017954199999999781}, {'diff': 0.00017951399999999867}, {'diff': 0.000179612000000002...</msg>
<status status="PASS" starttime="20201030 15:51:59.812" endtime="20201030 15:51:59.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:59.820" level="INFO">${RESULT} = {'diff': [0.00018054199999999881, 0.00017954200000000128, 0.00017952799999999824, 0.00017954199999999781, 0.00017951399999999867, 0.0001796120000000026, 0.00017952700000000224, 0.00017951300000000267,...</msg>
<status status="PASS" starttime="20201030 15:51:59.816" endtime="20201030 15:51:59.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.824" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:59.823" endtime="20201030 15:51:59.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.826" level="INFO">VALUE: [0.00018054199999999881, 0.00017954200000000128, 0.00017952799999999824, 0.00017954199999999781, 0.00017951399999999867, 0.0001796120000000026, 0.00017952700000000224, 0.00017951300000000267, 0.00017954200000000128, 0.00017955600000000085, 0.00017951400000000214, 0.00017955599999999738, 0.00017954199999999781, 0.0001795549999999979, 0.00017954099999999834, 0.00017955500000000138, 0.00017951400000000214, 0.00017952800000000171, 0.00017952800000000171, 0.00017955600000000085, 0.00017951399999999867, 0.00017952699999999877, 0.00017952799999999824, 0.00017955600000000085, 0.00017954200000000128, 0.00017951400000000214, 0.00017952800000000171, 0.00017952800000000171, 0.00017947199999999996, 0.00017951399999999867, 0.00017954199999999781, 0.00017954199999999781, 0.00017955600000000085, 0.00017952800000000171, 0.00017954200000000128, 0.00017956900000000095, 0.0001795410000000018, 0.00017952799999999824, 0.00017947199999999996, 0.00017955599999999738, 0.00017954199999999781, 0.00017951399999999867, 0.00017952699999999877, 0.00017952700000000224, 0.00017954200000000128, 0.00017954200000000128, 0.0001794999999999991, 0.00017955600000000085, 0.00017951399999999867, 0.00017952699999999877]</msg>
<status status="PASS" starttime="20201030 15:51:59.825" endtime="20201030 15:51:59.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.820" endtime="20201030 15:51:59.828"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:59.831" endtime="20201030 15:51:59.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.830" endtime="20201030 15:51:59.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.829" endtime="20201030 15:51:59.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.472" endtime="20201030 15:51:59.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.472" endtime="20201030 15:51:59.852"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.861" endtime="20201030 15:51:59.879"></status>
</kw>
<msg timestamp="20201030 15:51:59.880" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.859" endtime="20201030 15:51:59.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.882" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.881" endtime="20201030 15:51:59.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.883" endtime="20201030 15:51:59.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.857" endtime="20201030 15:51:59.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.855" endtime="20201030 15:51:59.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.892" endtime="20201030 15:52:00.180"></status>
</kw>
<msg timestamp="20201030 15:52:00.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018873972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019066222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:59.891" endtime="20201030 15:52:00.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018873972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019066222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.184" endtime="20201030 15:52:00.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.192" endtime="20201030 15:52:00.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.888" endtime="20201030 15:52:00.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.887" endtime="20201030 15:52:00.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:00.199" level="INFO">${PHILIP_RES} = [{'diff': 0.00019225000000000145}, {'diff': 0.0001911939999999987}, {'diff': 0.00019119499999999817}, {'diff': 0.0001911939999999987}, {'diff': 0.00019116600000000303}, {'diff': 0.00019119500000000164...</msg>
<status status="PASS" starttime="20201030 15:52:00.196" endtime="20201030 15:52:00.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:00.203" level="INFO">${RESULT} = {'diff': [0.00019225000000000145, 0.0001911939999999987, 0.00019119499999999817, 0.0001911939999999987, 0.00019116600000000303, 0.00019119500000000164, 0.00019117999999999913, 0.00019116699999999903, ...</msg>
<status status="PASS" starttime="20201030 15:52:00.200" endtime="20201030 15:52:00.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.207" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:00.206" endtime="20201030 15:52:00.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.210" level="INFO">VALUE: [0.00019225000000000145, 0.0001911939999999987, 0.00019119499999999817, 0.0001911939999999987, 0.00019116600000000303, 0.00019119500000000164, 0.00019117999999999913, 0.00019116699999999903, 0.00019116599999999956, 0.00019120899999999774, 0.00019109800000000066, 0.00019116599999999956, 0.00019115299999999946, 0.0001911800000000026, 0.00019116699999999903, 0.00019109800000000066, 0.00019117999999999913, 0.0001911809999999986, 0.0001911800000000026, 0.0001911670000000025, 0.0001912220000000013, 0.0001911809999999986, 0.00019116699999999903, 0.00019117999999999913, 0.00019109700000000118, 0.00019111100000000075, 0.00019118100000000207, 0.00019119400000000217, 0.0001911809999999986, 0.0001911809999999986, 0.00019117999999999913, 0.00019116699999999903, 0.00019116599999999956, 0.00019118100000000207, 0.00019116600000000303, 0.00019115299999999946, 0.00019116699999999903, 0.00019117999999999913, 0.0001911809999999986, 0.00019117999999999913, 0.00019122300000000078, 0.00019122199999999784, 0.00019118100000000207, 0.0001911809999999986, 0.00019117999999999913, 0.00019116699999999903, 0.00019117999999999913, 0.00019116699999999903, 0.00019118100000000207, 0.00019122300000000078]</msg>
<status status="PASS" starttime="20201030 15:52:00.208" endtime="20201030 15:52:00.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.204" endtime="20201030 15:52:00.211"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:00.215" endtime="20201030 15:52:00.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.213" endtime="20201030 15:52:00.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.212" endtime="20201030 15:52:00.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.853" endtime="20201030 15:52:00.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.852" endtime="20201030 15:52:00.235"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.244" endtime="20201030 15:52:00.263"></status>
</kw>
<msg timestamp="20201030 15:52:00.263" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.242" endtime="20201030 15:52:00.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.266" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.264" endtime="20201030 15:52:00.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.267" endtime="20201030 15:52:00.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.240" endtime="20201030 15:52:00.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.238" endtime="20201030 15:52:00.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.276" endtime="20201030 15:52:00.563"></status>
</kw>
<msg timestamp="20201030 15:52:00.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0195965, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019800708, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:00.274" endtime="20201030 15:52:00.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0195965, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019800708, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:00.567" endtime="20201030 15:52:00.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.575" endtime="20201030 15:52:00.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.272" endtime="20201030 15:52:00.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.270" endtime="20201030 15:52:00.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:00.581" level="INFO">${PHILIP_RES} = [{'diff': 0.00020420800000000086}, {'diff': 0.00020319499999999976}, {'diff': 0.00020317999999999725}, {'diff': 0.0002031810000000002}, {'diff': 0.00020315299999999759}, {'diff': 0.0002031940000000003...</msg>
<status status="PASS" starttime="20201030 15:52:00.578" endtime="20201030 15:52:00.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:00.585" level="INFO">${RESULT} = {'diff': [0.00020420800000000086, 0.00020319499999999976, 0.00020317999999999725, 0.0002031810000000002, 0.00020315299999999759, 0.0002031940000000003, 0.00020316599999999768, 0.00020316700000000062, ...</msg>
<status status="PASS" starttime="20201030 15:52:00.582" endtime="20201030 15:52:00.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.589" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:00.588" endtime="20201030 15:52:00.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.592" level="INFO">VALUE: [0.00020420800000000086, 0.00020319499999999976, 0.00020317999999999725, 0.0002031810000000002, 0.00020315299999999759, 0.0002031940000000003, 0.00020316599999999768, 0.00020316700000000062, 0.0002031810000000002, 0.00020313899999999802, 0.00020316700000000062, 0.00020316599999999768, 0.00020316600000000115, 0.00020318099999999673, 0.00020316700000000062, 0.00020316699999999716, 0.00020316600000000115, 0.00020315300000000105, 0.0002031810000000002, 0.0002031810000000002, 0.00020316700000000062, 0.00020315200000000158, 0.00020316699999999716, 0.00020319499999999976, 0.00020315300000000105, 0.0002031810000000002, 0.00020318000000000072, 0.00020318000000000072, 0.00020316700000000062, 0.00020315299999999759, 0.00020316700000000062, 0.00020316599999999768, 0.00020316700000000062, 0.0002031810000000002, 0.00020313900000000149, 0.00020315300000000105, 0.00020323600000000247, 0.00020312500000000192, 0.00020316599999999768, 0.00020311100000000235, 0.00020316699999999716, 0.00020316600000000115, 0.00020311199999999835, 0.00020315300000000105, 0.00020311100000000235, 0.00020311099999999888, 0.00020322199999999943, 0.0002032220000000029, 0.0002031810000000002, 0.00020318099999999673]</msg>
<status status="PASS" starttime="20201030 15:52:00.591" endtime="20201030 15:52:00.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.586" endtime="20201030 15:52:00.594"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:00.598" endtime="20201030 15:52:00.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.596" endtime="20201030 15:52:00.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.595" endtime="20201030 15:52:00.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.236" endtime="20201030 15:52:00.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.236" endtime="20201030 15:52:00.619"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.627" endtime="20201030 15:52:00.646"></status>
</kw>
<msg timestamp="20201030 15:52:00.646" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.625" endtime="20201030 15:52:00.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.649" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.647" endtime="20201030 15:52:00.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.650" endtime="20201030 15:52:00.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.623" endtime="20201030 15:52:00.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.621" endtime="20201030 15:52:00.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.659" endtime="20201030 15:52:00.945"></status>
</kw>
<msg timestamp="20201030 15:52:00.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018851028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019067597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.658" endtime="20201030 15:52:00.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018851028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019067597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.949" endtime="20201030 15:52:00.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.957" endtime="20201030 15:52:00.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.655" endtime="20201030 15:52:00.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.653" endtime="20201030 15:52:00.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:00.964" level="INFO">${PHILIP_RES} = [{'diff': 0.0002165689999999998}, {'diff': 0.00021548599999999737}, {'diff': 0.00021548600000000084}, {'diff': 0.00021548600000000084}, {'diff': 0.00021548700000000032}, {'diff': 0.0002155000000000004...</msg>
<status status="PASS" starttime="20201030 15:52:00.960" endtime="20201030 15:52:00.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:00.968" level="INFO">${RESULT} = {'diff': [0.0002165689999999998, 0.00021548599999999737, 0.00021548600000000084, 0.00021548600000000084, 0.00021548700000000032, 0.0002155000000000004, 0.0002155000000000004, 0.00021549999999999694, 0...</msg>
<status status="PASS" starttime="20201030 15:52:00.965" endtime="20201030 15:52:00.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.973" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:00.972" endtime="20201030 15:52:00.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.975" level="INFO">VALUE: [0.0002165689999999998, 0.00021548599999999737, 0.00021548600000000084, 0.00021548600000000084, 0.00021548700000000032, 0.0002155000000000004, 0.0002155000000000004, 0.00021549999999999694, 0.00021548600000000084, 0.0002155000000000004, 0.0002155000000000004, 0.00021545900000000118, 0.00021548600000000084, 0.00021540299999999943, 0.00021551399999999998, 0.00021548600000000084, 0.00021548600000000084, 0.0002155000000000004, 0.00021548599999999737, 0.0002155000000000004, 0.00021547200000000127, 0.00021548600000000084, 0.0002155000000000004, 0.00021548699999999685, 0.00021548599999999737, 0.00021547300000000075, 0.0002154450000000016, 0.00021548600000000084, 0.00021545799999999823, 0.00021548600000000084, 0.0002155000000000004, 0.00021548600000000084, 0.0002155000000000004, 0.0002155000000000004, 0.0002154719999999978, 0.00021551399999999998, 0.0002155000000000004, 0.00021551399999999998, 0.0002155000000000004, 0.00021548599999999737, 0.0002155420000000026, 0.00021548600000000084, 0.00021552799999999955, 0.00021548600000000084, 0.00021548600000000084, 0.0002155000000000004, 0.0002154299999999991, 0.00021552799999999955, 0.00021548600000000084, 0.00021552799999999955]</msg>
<status status="PASS" starttime="20201030 15:52:00.974" endtime="20201030 15:52:00.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.969" endtime="20201030 15:52:00.977"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:00.980" endtime="20201030 15:52:01.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.979" endtime="20201030 15:52:01.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.978" endtime="20201030 15:52:01.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.619" endtime="20201030 15:52:01.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.619" endtime="20201030 15:52:01.001"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.010" endtime="20201030 15:52:01.029"></status>
</kw>
<msg timestamp="20201030 15:52:01.030" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.008" endtime="20201030 15:52:01.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.032" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.031" endtime="20201030 15:52:01.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.033" endtime="20201030 15:52:01.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.006" endtime="20201030 15:52:01.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.004" endtime="20201030 15:52:01.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.044" endtime="20201030 15:52:01.330"></status>
</kw>
<msg timestamp="20201030 15:52:01.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018806569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019035819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.042" endtime="20201030 15:52:01.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018806569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019035819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.334" endtime="20201030 15:52:01.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.343" endtime="20201030 15:52:01.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.039" endtime="20201030 15:52:01.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.037" endtime="20201030 15:52:01.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:01.349" level="INFO">${PHILIP_RES} = [{'diff': 0.0002292500000000003}, {'diff': 0.00022816700000000134}, {'diff': 0.00022817999999999797}, {'diff': 0.0002281810000000009}, {'diff': 0.00022822200000000015}, {'diff': 0.00022818099999999744...</msg>
<status status="PASS" starttime="20201030 15:52:01.346" endtime="20201030 15:52:01.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:01.353" level="INFO">${RESULT} = {'diff': [0.0002292500000000003, 0.00022816700000000134, 0.00022817999999999797, 0.0002281810000000009, 0.00022822200000000015, 0.00022818099999999744, 0.00022826299999999938, 0.00022817999999999797, ...</msg>
<status status="PASS" starttime="20201030 15:52:01.350" endtime="20201030 15:52:01.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.358" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:01.357" endtime="20201030 15:52:01.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.360" level="INFO">VALUE: [0.0002292500000000003, 0.00022816700000000134, 0.00022817999999999797, 0.0002281810000000009, 0.00022822200000000015, 0.00022818099999999744, 0.00022826299999999938, 0.00022817999999999797, 0.0002281659999999984, 0.00022818000000000144, 0.00022819500000000048, 0.00022819500000000048, 0.0002281810000000009, 0.00022820800000000058, 0.000228194000000001, 0.00022818000000000144, 0.00022820800000000058, 0.0002281520000000023, 0.00022819500000000048, 0.00022820900000000005, 0.00022816699999999787, 0.00022819399999999754, 0.00022820800000000058, 0.000228194000000001, 0.00022813899999999873, 0.00022816700000000134, 0.00022820900000000005, 0.000228194000000001, 0.00022818000000000144, 0.0002281390000000022, 0.00022816600000000187, 0.00022819500000000048, 0.00022819500000000048, 0.00022820900000000005, 0.00022819399999999754, 0.00022819399999999754, 0.00022817999999999797, 0.0002281810000000009, 0.0002281810000000009, 0.00022819500000000048, 0.00022812499999999916, 0.000228194000000001, 0.000228194000000001, 0.00022818000000000144, 0.00022822200000000015, 0.0002281109999999996, 0.00022819500000000048, 0.00022823599999999972, 0.00022817999999999797, 0.00022823599999999972]</msg>
<status status="PASS" starttime="20201030 15:52:01.359" endtime="20201030 15:52:01.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.354" endtime="20201030 15:52:01.361"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:01.365" endtime="20201030 15:52:01.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.363" endtime="20201030 15:52:01.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.362" endtime="20201030 15:52:01.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.002" endtime="20201030 15:52:01.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.001" endtime="20201030 15:52:01.386"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.395" endtime="20201030 15:52:01.419"></status>
</kw>
<msg timestamp="20201030 15:52:01.419" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.393" endtime="20201030 15:52:01.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.423" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.420" endtime="20201030 15:52:01.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.426" endtime="20201030 15:52:01.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.390" endtime="20201030 15:52:01.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.388" endtime="20201030 15:52:01.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.440" endtime="20201030 15:52:01.728"></status>
</kw>
<msg timestamp="20201030 15:52:01.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021635514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.437" endtime="20201030 15:52:01.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021635514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.732" endtime="20201030 15:52:01.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.740" endtime="20201030 15:52:01.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.433" endtime="20201030 15:52:01.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.430" endtime="20201030 15:52:01.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:01.747" level="INFO">${PHILIP_RES} = [{'diff': 0.00024230499999999822}, {'diff': 0.00024130600000000016}, {'diff': 0.00024123599999999884}, {'diff': 0.0002412360000000023}, {'diff': 0.0002411949999999996}, {'diff': 0.00024126399999999798...</msg>
<status status="PASS" starttime="20201030 15:52:01.744" endtime="20201030 15:52:01.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:01.751" level="INFO">${RESULT} = {'diff': [0.00024230499999999822, 0.00024130600000000016, 0.00024123599999999884, 0.0002412360000000023, 0.0002411949999999996, 0.00024126399999999798, 0.0002412920000000006, 0.0002412360000000023, 0....</msg>
<status status="PASS" starttime="20201030 15:52:01.748" endtime="20201030 15:52:01.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.755" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:01.754" endtime="20201030 15:52:01.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.758" level="INFO">VALUE: [0.00024230499999999822, 0.00024130600000000016, 0.00024123599999999884, 0.0002412360000000023, 0.0002411949999999996, 0.00024126399999999798, 0.0002412920000000006, 0.0002412360000000023, 0.00024122199999999927, 0.0002412499999999984, 0.00024123599999999884, 0.00024122199999999927, 0.0002412360000000023, 0.00024118000000000056, 0.00024120899999999917, 0.0002412360000000023, 0.00024123599999999884, 0.00024129100000000112, 0.00024122199999999927, 0.0002412920000000006, 0.00024127700000000155, 0.0002412499999999984, 0.00024123599999999884, 0.00024123599999999884, 0.0002412360000000023, 0.00024125000000000188, 0.0002412499999999984, 0.0002412360000000023, 0.0002412360000000023, 0.00024123700000000178, 0.00024123599999999884, 0.00024122199999999927, 0.0002412230000000022, 0.0002412360000000023, 0.0002412499999999984, 0.0002412499999999984, 0.00024125000000000188, 0.00024118000000000056, 0.00024119400000000013, 0.00024123600000000578, 0.00024122199999999927, 0.00024123599999999884, 0.00024123599999999884, 0.00024122199999999927, 0.00024122199999999927, 0.00024126399999999798, 0.00024123600000000578, 0.00024123599999999884, 0.00024122199999999927, 0.00024122199999999927]</msg>
<status status="PASS" starttime="20201030 15:52:01.756" endtime="20201030 15:52:01.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.752" endtime="20201030 15:52:01.762"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:01.766" endtime="20201030 15:52:01.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.764" endtime="20201030 15:52:01.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.763" endtime="20201030 15:52:01.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.387" endtime="20201030 15:52:01.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.386" endtime="20201030 15:52:01.787"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.795" endtime="20201030 15:52:01.816"></status>
</kw>
<msg timestamp="20201030 15:52:01.816" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.793" endtime="20201030 15:52:01.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.818" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.817" endtime="20201030 15:52:01.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.820" endtime="20201030 15:52:01.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.791" endtime="20201030 15:52:01.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.789" endtime="20201030 15:52:01.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.828" endtime="20201030 15:52:02.115"></status>
</kw>
<msg timestamp="20201030 15:52:02.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018494556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018750236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.827" endtime="20201030 15:52:02.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018494556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018750236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.119" endtime="20201030 15:52:02.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.127" endtime="20201030 15:52:02.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.824" endtime="20201030 15:52:02.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.823" endtime="20201030 15:52:02.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:02.134" level="INFO">${PHILIP_RES} = [{'diff': 0.0002556800000000012}, {'diff': 0.00025461099999999834}, {'diff': 0.0002546670000000001}, {'diff': 0.00025463900000000095}, {'diff': 0.0002546530000000005}, {'diff': 0.0002546250000000014},...</msg>
<status status="PASS" starttime="20201030 15:52:02.131" endtime="20201030 15:52:02.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:02.138" level="INFO">${RESULT} = {'diff': [0.0002556800000000012, 0.00025461099999999834, 0.0002546670000000001, 0.00025463900000000095, 0.0002546530000000005, 0.0002546250000000014, 0.0002546250000000014, 0.00025461099999999834, 0.0...</msg>
<status status="PASS" starttime="20201030 15:52:02.135" endtime="20201030 15:52:02.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.143" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:02.142" endtime="20201030 15:52:02.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.145" level="INFO">VALUE: [0.0002556800000000012, 0.00025461099999999834, 0.0002546670000000001, 0.00025463900000000095, 0.0002546530000000005, 0.0002546250000000014, 0.0002546250000000014, 0.00025461099999999834, 0.0002546250000000014, 0.0002546530000000005, 0.0002546389999999975, 0.000254637999999998, 0.0002545829999999992, 0.0002546389999999975, 0.0002546389999999975, 0.0002546530000000005, 0.00025469399999999975, 0.0002546389999999975, 0.00025463900000000095, 0.0002546250000000014, 0.0002546389999999975, 0.0002546250000000014, 0.0002546530000000005, 0.0002546389999999975, 0.00025461099999999834, 0.00025463900000000095, 0.0002546250000000014, 0.00025461099999999834, 0.00025458300000000267, 0.00025461099999999834, 0.0002546800000000002, 0.0002546250000000014, 0.00025463900000000095, 0.0002546389999999975, 0.0002546249999999979, 0.00025463900000000095, 0.0002546249999999979, 0.0002546249999999979, 0.0002546250000000014, 0.0002546250000000014, 0.0002546249999999979, 0.0002546110000000018, 0.0002546250000000014, 0.0002546389999999975, 0.0002546110000000018, 0.00025463900000000095, 0.00025463900000000095, 0.0002546530000000005, 0.0002546250000000014, 0.0002546120000000013]</msg>
<status status="PASS" starttime="20201030 15:52:02.144" endtime="20201030 15:52:02.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.139" endtime="20201030 15:52:02.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:02.150" endtime="20201030 15:52:02.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.149" endtime="20201030 15:52:02.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.147" endtime="20201030 15:52:02.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.787" endtime="20201030 15:52:02.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.787" endtime="20201030 15:52:02.171"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.179" endtime="20201030 15:52:02.201"></status>
</kw>
<msg timestamp="20201030 15:52:02.201" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.178" endtime="20201030 15:52:02.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.204" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.202" endtime="20201030 15:52:02.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.205" endtime="20201030 15:52:02.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.175" endtime="20201030 15:52:02.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.173" endtime="20201030 15:52:02.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.214" endtime="20201030 15:52:02.501"></status>
</kw>
<msg timestamp="20201030 15:52:02.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018613069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018882569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.212" endtime="20201030 15:52:02.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018613069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018882569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.505" endtime="20201030 15:52:02.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.513" endtime="20201030 15:52:02.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.210" endtime="20201030 15:52:02.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.208" endtime="20201030 15:52:02.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:02.520" level="INFO">${PHILIP_RES} = [{'diff': 0.0002694999999999989}, {'diff': 0.0002684030000000004}, {'diff': 0.0002683609999999982}, {'diff': 0.0002683610000000017}, {'diff': 0.00026837500000000125}, {'diff': 0.0002683609999999982}, ...</msg>
<status status="PASS" starttime="20201030 15:52:02.517" endtime="20201030 15:52:02.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:02.524" level="INFO">${RESULT} = {'diff': [0.0002694999999999989, 0.0002684030000000004, 0.0002683609999999982, 0.0002683610000000017, 0.00026837500000000125, 0.0002683609999999982, 0.0002683610000000017, 0.0002683609999999982, 0.000...</msg>
<status status="PASS" starttime="20201030 15:52:02.521" endtime="20201030 15:52:02.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.528" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:02.527" endtime="20201030 15:52:02.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.530" level="INFO">VALUE: [0.0002694999999999989, 0.0002684030000000004, 0.0002683609999999982, 0.0002683610000000017, 0.00026837500000000125, 0.0002683609999999982, 0.0002683610000000017, 0.0002683609999999982, 0.00026837500000000125, 0.0002683749999999978, 0.0002683609999999982, 0.00026837500000000125, 0.0002683749999999978, 0.00026837500000000125, 0.00026834699999999864, 0.0002683610000000017, 0.000268319999999999, 0.0002683609999999982, 0.0002684449999999991, 0.00026834699999999864, 0.0002683890000000008, 0.0002683479999999981, 0.0002684030000000004, 0.0002684030000000004, 0.00026837500000000125, 0.00026837500000000125, 0.00026834699999999864, 0.00026837500000000125, 0.0002683610000000017, 0.00026837500000000125, 0.0002683610000000017, 0.0002683609999999982, 0.0002683890000000008, 0.0002684449999999991, 0.00026837500000000125, 0.0002684030000000004, 0.0002683609999999982, 0.00026833399999999855, 0.00026834699999999864, 0.0002683890000000008, 0.00026829199999999984, 0.0002683609999999982, 0.0002683879999999979, 0.0002683470000000021, 0.00026837500000000125, 0.0002683610000000017, 0.00026836099999999474, 0.00026831900000000297, 0.0002683610000000017, 0.00026836099999999474]</msg>
<status status="PASS" starttime="20201030 15:52:02.529" endtime="20201030 15:52:02.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.525" endtime="20201030 15:52:02.532"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:02.535" endtime="20201030 15:52:02.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.534" endtime="20201030 15:52:02.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.533" endtime="20201030 15:52:02.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.172" endtime="20201030 15:52:02.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.171" endtime="20201030 15:52:02.556"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.565" endtime="20201030 15:52:02.588"></status>
</kw>
<msg timestamp="20201030 15:52:02.589" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.563" endtime="20201030 15:52:02.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.591" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.590" endtime="20201030 15:52:02.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.592" endtime="20201030 15:52:02.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.560" endtime="20201030 15:52:02.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.558" endtime="20201030 15:52:02.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.601" endtime="20201030 15:52:02.903"></status>
</kw>
<msg timestamp="20201030 15:52:02.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019828569, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:02.600" endtime="20201030 15:52:02.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019828569, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:02.907" endtime="20201030 15:52:02.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.915" endtime="20201030 15:52:02.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.597" endtime="20201030 15:52:02.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.596" endtime="20201030 15:52:02.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:02.922" level="INFO">${PHILIP_RES} = [{'diff': 0.0002835690000000009}, {'diff': 0.00028247299999999836}, {'diff': 0.0002824870000000014}, {'diff': 0.00028247299999999836}, {'diff': 0.00028248600000000193}, {'diff': 0.0002824579999999993}...</msg>
<status status="PASS" starttime="20201030 15:52:02.919" endtime="20201030 15:52:02.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:02.926" level="INFO">${RESULT} = {'diff': [0.0002835690000000009, 0.00028247299999999836, 0.0002824870000000014, 0.00028247299999999836, 0.00028248600000000193, 0.0002824579999999993, 0.0002824719999999989, 0.0002825559999999998, 0.0...</msg>
<status status="PASS" starttime="20201030 15:52:02.923" endtime="20201030 15:52:02.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.930" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:02.929" endtime="20201030 15:52:02.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.933" level="INFO">VALUE: [0.0002835690000000009, 0.00028247299999999836, 0.0002824870000000014, 0.00028247299999999836, 0.00028248600000000193, 0.0002824579999999993, 0.0002824719999999989, 0.0002825559999999998, 0.0002824579999999993, 0.00028248599999999846, 0.00028247300000000183, 0.00028248699999999793, 0.00028247200000000236, 0.0002824579999999993, 0.0002824719999999989, 0.00028247200000000236, 0.00028244399999999975, 0.00028248600000000193, 0.0002824579999999993, 0.00028247299999999836, 0.00028247300000000183, 0.00028248599999999846, 0.0002824449999999992, 0.0002824579999999993, 0.0002824719999999989, 0.0002824580000000028, 0.0002824719999999989, 0.0002825000000000015, 0.00028247300000000183, 0.00028248699999999793, 0.00028245900000000226, 0.00028248599999999846, 0.0002824719999999989, 0.00028247200000000236, 0.0002824719999999989, 0.0002824719999999989, 0.0002824579999999993, 0.00028247200000000236, 0.00028247299999999836, 0.0002824589999999988, 0.0002824579999999993, 0.0002824719999999989, 0.0002825280000000041, 0.0002824579999999993, 0.00028249999999999803, 0.00028248599999999846, 0.0002824589999999988, 0.0002825280000000041, 0.00028248699999999793, 0.0002824719999999989]</msg>
<status status="PASS" starttime="20201030 15:52:02.931" endtime="20201030 15:52:02.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.927" endtime="20201030 15:52:02.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:02.938" endtime="20201030 15:52:02.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.937" endtime="20201030 15:52:02.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.936" endtime="20201030 15:52:02.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.557" endtime="20201030 15:52:02.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.556" endtime="20201030 15:52:02.959"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.967" endtime="20201030 15:52:02.991"></status>
</kw>
<msg timestamp="20201030 15:52:02.991" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.966" endtime="20201030 15:52:02.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.994" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.992" endtime="20201030 15:52:02.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.995" endtime="20201030 15:52:02.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.963" endtime="20201030 15:52:02.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.961" endtime="20201030 15:52:02.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.004" endtime="20201030 15:52:03.290"></status>
</kw>
<msg timestamp="20201030 15:52:03.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018584319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018882319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.002" endtime="20201030 15:52:03.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018584319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018882319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.294" endtime="20201030 15:52:03.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.302" endtime="20201030 15:52:03.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.000" endtime="20201030 15:52:03.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.998" endtime="20201030 15:52:03.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:03.308" level="INFO">${PHILIP_RES} = [{'diff': 0.0002980000000000031}, {'diff': 0.0002969170000000007}, {'diff': 0.0002969440000000004}, {'diff': 0.00029691600000000123}, {'diff': 0.0002969300000000008}, {'diff': 0.00029692999999999733},...</msg>
<status status="PASS" starttime="20201030 15:52:03.305" endtime="20201030 15:52:03.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:03.313" level="INFO">${RESULT} = {'diff': [0.0002980000000000031, 0.0002969170000000007, 0.0002969440000000004, 0.00029691600000000123, 0.0002969300000000008, 0.00029692999999999733, 0.0002969440000000004, 0.00029691599999999777, 0.0...</msg>
<status status="PASS" starttime="20201030 15:52:03.309" endtime="20201030 15:52:03.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.317" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:03.316" endtime="20201030 15:52:03.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.320" level="INFO">VALUE: [0.0002980000000000031, 0.0002969170000000007, 0.0002969440000000004, 0.00029691600000000123, 0.0002969300000000008, 0.00029692999999999733, 0.0002969440000000004, 0.00029691599999999777, 0.0002969440000000004, 0.0002969300000000008, 0.0002969300000000008, 0.00029691600000000123, 0.0002969440000000004, 0.0002969300000000008, 0.0002969440000000004, 0.00029691600000000123, 0.0002969719999999995, 0.0002968889999999981, 0.0002969170000000007, 0.00029687499999999853, 0.00029694499999999985, 0.00029694499999999985, 0.0002969170000000007, 0.0002969440000000004, 0.00029694499999999985, 0.0002969310000000003, 0.0002969310000000003, 0.00029687499999999853, 0.0002969310000000003, 0.0002969310000000003, 0.0002969170000000007, 0.00029690299999999767, 0.0002969310000000003, 0.0002970140000000017, 0.00029686099999999896, 0.0002969310000000003, 0.0002969300000000008, 0.0002969440000000004, 0.00029691599999999777, 0.0002969029999999942, 0.00029692999999999387, 0.0002969719999999995, 0.0002969019999999947, 0.00029690200000000166, 0.0002969300000000008, 0.0002969300000000008, 0.00029691600000000123, 0.0002969859999999991, 0.00029695799999999994, 0.00029691600000000123]</msg>
<status status="PASS" starttime="20201030 15:52:03.318" endtime="20201030 15:52:03.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.314" endtime="20201030 15:52:03.321"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:03.325" endtime="20201030 15:52:03.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.323" endtime="20201030 15:52:03.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.322" endtime="20201030 15:52:03.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.960" endtime="20201030 15:52:03.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.959" endtime="20201030 15:52:03.346"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.354" endtime="20201030 15:52:03.378"></status>
</kw>
<msg timestamp="20201030 15:52:03.379" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.352" endtime="20201030 15:52:03.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.381" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.380" endtime="20201030 15:52:03.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.382" endtime="20201030 15:52:03.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.350" endtime="20201030 15:52:03.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.348" endtime="20201030 15:52:03.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.391" endtime="20201030 15:52:03.698"></status>
</kw>
<msg timestamp="20201030 15:52:03.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0189195, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019232306, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:03.390" endtime="20201030 15:52:03.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0189195, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019232306, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:03.703" endtime="20201030 15:52:03.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.712" endtime="20201030 15:52:03.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.387" endtime="20201030 15:52:03.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.385" endtime="20201030 15:52:03.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:03.718" level="INFO">${PHILIP_RES} = [{'diff': 0.0003128060000000023}, {'diff': 0.00031172299999999986}, {'diff': 0.00031174999999999953}, {'diff': 0.0003117220000000004}, {'diff': 0.00031173599999999996}, {'diff': 0.0003117639999999991}...</msg>
<status status="PASS" starttime="20201030 15:52:03.715" endtime="20201030 15:52:03.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:03.722" level="INFO">${RESULT} = {'diff': [0.0003128060000000023, 0.00031172299999999986, 0.00031174999999999953, 0.0003117220000000004, 0.00031173599999999996, 0.0003117639999999991, 0.00031173599999999996, 0.00031173599999999996, 0...</msg>
<status status="PASS" starttime="20201030 15:52:03.719" endtime="20201030 15:52:03.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.726" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:03.725" endtime="20201030 15:52:03.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.729" level="INFO">VALUE: [0.0003128060000000023, 0.00031172299999999986, 0.00031174999999999953, 0.0003117220000000004, 0.00031173599999999996, 0.0003117639999999991, 0.00031173599999999996, 0.00031173599999999996, 0.00031172299999999986, 0.00031172299999999986, 0.00031170799999999735, 0.00031179199999999824, 0.0003117080000000008, 0.0003117220000000004, 0.00031173599999999996, 0.00031173599999999996, 0.0003117769999999992, 0.0003117220000000004, 0.0003117220000000004, 0.00031173599999999996, 0.00031169400000000125, 0.00031170799999999735, 0.0003117639999999991, 0.00031177800000000214, 0.00031172299999999986, 0.00031173599999999996, 0.0003117080000000008, 0.0003117219999999969, 0.00031173599999999996, 0.00031174999999999953, 0.00031173599999999996, 0.00031173599999999996, 0.0003117090000000003, 0.00031173599999999996, 0.00031174999999999953, 0.00031173599999999996, 0.00031173599999999996, 0.00031174999999999953, 0.0003117220000000004, 0.0003116670000000016, 0.00031179099999999876, 0.00031173599999999996, 0.0003117639999999991, 0.00031174999999999953, 0.0003117080000000008, 0.0003117220000000004, 0.00031174999999999953, 0.00031174999999999953, 0.00031174999999999953, 0.0003117220000000004]</msg>
<status status="PASS" starttime="20201030 15:52:03.727" endtime="20201030 15:52:03.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.723" endtime="20201030 15:52:03.730"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:03.734" endtime="20201030 15:52:03.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.732" endtime="20201030 15:52:03.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.731" endtime="20201030 15:52:03.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.346" endtime="20201030 15:52:03.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.346" endtime="20201030 15:52:03.754"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.763" endtime="20201030 15:52:03.789"></status>
</kw>
<msg timestamp="20201030 15:52:03.790" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.761" endtime="20201030 15:52:03.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.792" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.791" endtime="20201030 15:52:03.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.793" endtime="20201030 15:52:03.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.759" endtime="20201030 15:52:03.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.757" endtime="20201030 15:52:03.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.802" endtime="20201030 15:52:04.088"></status>
</kw>
<msg timestamp="20201030 15:52:04.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019604125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019932056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.801" endtime="20201030 15:52:04.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019604125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019932056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.092" endtime="20201030 15:52:04.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.100" endtime="20201030 15:52:04.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.798" endtime="20201030 15:52:04.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.796" endtime="20201030 15:52:04.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:04.107" level="INFO">${PHILIP_RES} = [{'diff': 0.00032793100000000006}, {'diff': 0.0003268750000000008}, {'diff': 0.0003268610000000012}, {'diff': 0.00032684699999999817}, {'diff': 0.0003268750000000008}, {'diff': 0.00032686099999999774}...</msg>
<status status="PASS" starttime="20201030 15:52:04.104" endtime="20201030 15:52:04.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:04.112" level="INFO">${RESULT} = {'diff': [0.00032793100000000006, 0.0003268750000000008, 0.0003268610000000012, 0.00032684699999999817, 0.0003268750000000008, 0.00032686099999999774, 0.00032694399999999915, 0.0003269169999999995, 0....</msg>
<status status="PASS" starttime="20201030 15:52:04.108" endtime="20201030 15:52:04.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.119" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:04.117" endtime="20201030 15:52:04.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.122" level="INFO">VALUE: [0.00032793100000000006, 0.0003268750000000008, 0.0003268610000000012, 0.00032684699999999817, 0.0003268750000000008, 0.00032686099999999774, 0.00032694399999999915, 0.0003269169999999995, 0.0003268750000000008, 0.00032686099999999774, 0.0003268750000000008, 0.0003268750000000008, 0.0003268610000000012, 0.0003268620000000007, 0.0003268749999999973, 0.0003268610000000012, 0.00032686099999999774, 0.0003268750000000008, 0.00032688900000000035, 0.0003268750000000008, 0.0003268750000000008, 0.00032693099999999906, 0.0003268620000000007, 0.0003268749999999973, 0.0003268750000000008, 0.0003269029999999999, 0.0003269029999999999, 0.0003268610000000012, 0.00032693099999999906, 0.0003268480000000011, 0.00032686099999999774, 0.00032688900000000035, 0.00032684700000000164, 0.0003268749999999973, 0.0003268889999999969, 0.00032687500000000425, 0.0003268480000000046, 0.00032686099999999774, 0.00032686099999999774, 0.0003268470000000051, 0.0003268749999999973, 0.0003268889999999969, 0.00032687500000000425, 0.00032686200000000415, 0.0003268749999999973, 0.0003268749999999973, 0.00032687500000000425, 0.00032686099999999774, 0.00032684699999999817, 0.00032684699999999817]</msg>
<status status="PASS" starttime="20201030 15:52:04.120" endtime="20201030 15:52:04.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.113" endtime="20201030 15:52:04.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:04.129" endtime="20201030 15:52:04.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.127" endtime="20201030 15:52:04.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.126" endtime="20201030 15:52:04.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.755" endtime="20201030 15:52:04.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.755" endtime="20201030 15:52:04.150"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.159" endtime="20201030 15:52:04.187"></status>
</kw>
<msg timestamp="20201030 15:52:04.187" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.157" endtime="20201030 15:52:04.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.190" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.188" endtime="20201030 15:52:04.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.191" endtime="20201030 15:52:04.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.155" endtime="20201030 15:52:04.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.153" endtime="20201030 15:52:04.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.200" endtime="20201030 15:52:04.508"></status>
</kw>
<msg timestamp="20201030 15:52:04.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019002569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019346097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.199" endtime="20201030 15:52:04.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019002569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019346097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.512" endtime="20201030 15:52:04.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.520" endtime="20201030 15:52:04.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.196" endtime="20201030 15:52:04.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.194" endtime="20201030 15:52:04.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:04.526" level="INFO">${PHILIP_RES} = [{'diff': 0.0003435279999999992}, {'diff': 0.00034237499999999893}, {'diff': 0.00034236099999999936}, {'diff': 0.0003423620000000023}, {'diff': 0.00034241599999999817}, {'diff': 0.0003424019999999986}...</msg>
<status status="PASS" starttime="20201030 15:52:04.523" endtime="20201030 15:52:04.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:04.531" level="INFO">${RESULT} = {'diff': [0.0003435279999999992, 0.00034237499999999893, 0.00034236099999999936, 0.0003423620000000023, 0.00034241599999999817, 0.0003424019999999986, 0.00034238900000000197, 0.0003423889999999985, 0....</msg>
<status status="PASS" starttime="20201030 15:52:04.527" endtime="20201030 15:52:04.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.535" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:04.534" endtime="20201030 15:52:04.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.538" level="INFO">VALUE: [0.0003435279999999992, 0.00034237499999999893, 0.00034236099999999936, 0.0003423620000000023, 0.00034241599999999817, 0.0003424019999999986, 0.00034238900000000197, 0.0003423889999999985, 0.00034240299999999807, 0.00034237499999999893, 0.00034238900000000197, 0.0003423889999999985, 0.0003423889999999985, 0.0003423889999999985, 0.00034238900000000197, 0.00034237499999999893, 0.00034240299999999807, 0.0003423469999999998, 0.00034236099999999936, 0.0003423889999999985, 0.00034240299999999807, 0.00034238900000000197, 0.00034240300000000154, 0.0003423889999999985, 0.00034236099999999936, 0.00034240300000000154, 0.00034238900000000197, 0.00034237499999999893, 0.000342387999999999, 0.0003423880000000025, 0.0003424439999999973, 0.0003423889999999985, 0.000342387999999999, 0.0003423889999999985, 0.00034238900000000544, 0.0003423889999999985, 0.00034236099999999936, 0.00034237499999999893, 0.0003423889999999985, 0.00034238900000000544, 0.0003423330000000002, 0.00034240299999999807, 0.00034237500000000587, 0.00034240299999999807, 0.00034237499999999893, 0.00034237499999999893, 0.00034241699999999764, 0.00034238900000000544, 0.00034236099999999936, 0.0003423889999999985]</msg>
<status status="PASS" starttime="20201030 15:52:04.536" endtime="20201030 15:52:04.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.532" endtime="20201030 15:52:04.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:04.543" endtime="20201030 15:52:04.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.541" endtime="20201030 15:52:04.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.540" endtime="20201030 15:52:04.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.151" endtime="20201030 15:52:04.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.151" endtime="20201030 15:52:04.563"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.572" endtime="20201030 15:52:04.598"></status>
</kw>
<msg timestamp="20201030 15:52:04.598" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.570" endtime="20201030 15:52:04.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.601" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.599" endtime="20201030 15:52:04.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.602" endtime="20201030 15:52:04.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.568" endtime="20201030 15:52:04.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.566" endtime="20201030 15:52:04.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.611" endtime="20201030 15:52:04.898"></status>
</kw>
<msg timestamp="20201030 15:52:04.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018688028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019047375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.609" endtime="20201030 15:52:04.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018688028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019047375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.902" endtime="20201030 15:52:04.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.910" endtime="20201030 15:52:04.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.607" endtime="20201030 15:52:04.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.605" endtime="20201030 15:52:04.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:04.917" level="INFO">${PHILIP_RES} = [{'diff': 0.00035934699999999944}, {'diff': 0.00035823699999999736}, {'diff': 0.0003582359999999979}, {'diff': 0.00035823600000000136}, {'diff': 0.00035823600000000136}, {'diff': 0.0003582360000000013...</msg>
<status status="PASS" starttime="20201030 15:52:04.914" endtime="20201030 15:52:04.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:04.921" level="INFO">${RESULT} = {'diff': [0.00035934699999999944, 0.00035823699999999736, 0.0003582359999999979, 0.00035823600000000136, 0.00035823600000000136, 0.00035823600000000136, 0.00035820799999999875, 0.00035825000000000093,...</msg>
<status status="PASS" starttime="20201030 15:52:04.918" endtime="20201030 15:52:04.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.925" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:04.924" endtime="20201030 15:52:04.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.927" level="INFO">VALUE: [0.00035934699999999944, 0.00035823699999999736, 0.0003582359999999979, 0.00035823600000000136, 0.00035823600000000136, 0.00035823600000000136, 0.00035820799999999875, 0.00035825000000000093, 0.00035829199999999964, 0.0003582220000000018, 0.00035823600000000136, 0.00035823699999999736, 0.0003581939999999992, 0.00035825000000000093, 0.00035825000000000093, 0.00035823600000000136, 0.0003582359999999979, 0.0003582359999999979, 0.00035825000000000093, 0.00035823600000000136, 0.0003582640000000005, 0.00035823699999999736, 0.0003582219999999983, 0.00035825000000000093, 0.000358263000000001, 0.00035823600000000136, 0.0003582219999999983, 0.00035824999999999746, 0.0003582640000000005, 0.00035825000000000093, 0.0003582090000000017, 0.00035820799999999875, 0.00035830599999999574, 0.0003582359999999979, 0.0003582359999999979, 0.00035824999999999746, 0.0003582500000000044, 0.0003582500000000044, 0.00035823600000000483, 0.00035824999999999746, 0.0003582769999999971, 0.00035829199999999617, 0.0003582359999999979, 0.0003582359999999979, 0.00035824999999999746, 0.0003582500000000044, 0.00035829100000000363, 0.00035822200000000526, 0.00035826400000000397, 0.0003582500000000044]</msg>
<status status="PASS" starttime="20201030 15:52:04.926" endtime="20201030 15:52:04.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.922" endtime="20201030 15:52:04.929"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:04.932" endtime="20201030 15:52:04.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.931" endtime="20201030 15:52:04.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.930" endtime="20201030 15:52:04.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.564" endtime="20201030 15:52:04.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.564" endtime="20201030 15:52:04.953"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.962" endtime="20201030 15:52:04.990"></status>
</kw>
<msg timestamp="20201030 15:52:04.991" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.960" endtime="20201030 15:52:04.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.993" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.992" endtime="20201030 15:52:04.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.994" endtime="20201030 15:52:04.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.958" endtime="20201030 15:52:04.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.956" endtime="20201030 15:52:04.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.003" endtime="20201030 15:52:05.289"></status>
</kw>
<msg timestamp="20201030 15:52:05.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019639083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020014583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.002" endtime="20201030 15:52:05.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019639083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020014583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.293" endtime="20201030 15:52:05.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.301" endtime="20201030 15:52:05.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.999" endtime="20201030 15:52:05.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.998" endtime="20201030 15:52:05.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:05.307" level="INFO">${PHILIP_RES} = [{'diff': 0.00037549999999999736}, {'diff': 0.000374445000000001}, {'diff': 0.0003744580000000011}, {'diff': 0.0003744590000000006}, {'diff': 0.0003744160000000024}, {'diff': 0.0003744720000000007}, {...</msg>
<status status="PASS" starttime="20201030 15:52:05.304" endtime="20201030 15:52:05.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:05.311" level="INFO">${RESULT} = {'diff': [0.00037549999999999736, 0.000374445000000001, 0.0003744580000000011, 0.0003744590000000006, 0.0003744160000000024, 0.0003744720000000007, 0.0003744580000000011, 0.0003744720000000007, 0.0003...</msg>
<status status="PASS" starttime="20201030 15:52:05.308" endtime="20201030 15:52:05.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.316" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:05.315" endtime="20201030 15:52:05.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.318" level="INFO">VALUE: [0.00037549999999999736, 0.000374445000000001, 0.0003744580000000011, 0.0003744590000000006, 0.0003744160000000024, 0.0003744720000000007, 0.0003744580000000011, 0.0003744720000000007, 0.0003744580000000011, 0.0003744580000000011, 0.0003744590000000006, 0.0003744169999999984, 0.0003744590000000006, 0.0003744299999999985, 0.0003743889999999993, 0.00037445799999999765, 0.00037445899999999713, 0.0003744719999999972, 0.00037445799999999765, 0.0003744580000000011, 0.00037448600000000026, 0.0003744580000000011, 0.0003744580000000011, 0.00037443100000000146, 0.0003744720000000007, 0.0003744590000000006, 0.00037444400000000155, 0.0003744590000000006, 0.00037447200000000416, 0.0003743750000000032, 0.00037444400000000155, 0.0003744590000000006, 0.00037444400000000155, 0.00037449999999999983, 0.0003744580000000011, 0.0003743889999999958, 0.0003744720000000007, 0.0003744580000000011, 0.0003744720000000007, 0.0003744720000000007, 0.0003744590000000006, 0.0003744309999999945, 0.00037447300000000017, 0.0003744579999999942, 0.00037448699999999974, 0.0003744580000000011, 0.000374445000000001, 0.0003744720000000007, 0.0003744580000000011, 0.000374430000000002]</msg>
<status status="PASS" starttime="20201030 15:52:05.317" endtime="20201030 15:52:05.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.312" endtime="20201030 15:52:05.323"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:05.326" endtime="20201030 15:52:05.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.325" endtime="20201030 15:52:05.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.324" endtime="20201030 15:52:05.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.954" endtime="20201030 15:52:05.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.953" endtime="20201030 15:52:05.347"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.355" endtime="20201030 15:52:05.384"></status>
</kw>
<msg timestamp="20201030 15:52:05.385" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.354" endtime="20201030 15:52:05.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.387" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.386" endtime="20201030 15:52:05.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.388" endtime="20201030 15:52:05.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.351" endtime="20201030 15:52:05.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.349" endtime="20201030 15:52:05.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.397" endtime="20201030 15:52:05.683"></status>
</kw>
<msg timestamp="20201030 15:52:05.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018776583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019168667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.396" endtime="20201030 15:52:05.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018776583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019168667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.688" endtime="20201030 15:52:05.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.695" endtime="20201030 15:52:05.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.393" endtime="20201030 15:52:05.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.391" endtime="20201030 15:52:05.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:05.702" level="INFO">${PHILIP_RES} = [{'diff': 0.0003920840000000009}, {'diff': 0.0003909859999999994}, {'diff': 0.0003910279999999981}, {'diff': 0.00039097199999999985}, {'diff': 0.000391014000000002}, {'diff': 0.00039100000000000246}, ...</msg>
<status status="PASS" starttime="20201030 15:52:05.699" endtime="20201030 15:52:05.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:05.707" level="INFO">${RESULT} = {'diff': [0.0003920840000000009, 0.0003909859999999994, 0.0003910279999999981, 0.00039097199999999985, 0.000391014000000002, 0.00039100000000000246, 0.000391014000000002, 0.0003909859999999994, 0.0003...</msg>
<status status="PASS" starttime="20201030 15:52:05.703" endtime="20201030 15:52:05.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.711" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:05.710" endtime="20201030 15:52:05.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.713" level="INFO">VALUE: [0.0003920840000000009, 0.0003909859999999994, 0.0003910279999999981, 0.00039097199999999985, 0.000391014000000002, 0.00039100000000000246, 0.000391014000000002, 0.0003909859999999994, 0.000390999999999999, 0.00039101399999999856, 0.00039101399999999856, 0.00039101399999999856, 0.00039100000000000246, 0.00039098700000000236, 0.00039101399999999856, 0.000390999999999999, 0.00039106900000000083, 0.00039097199999999985, 0.00039101399999999856, 0.0003910279999999981, 0.0003910129999999991, 0.00039104200000000117, 0.000391014000000002, 0.000391014000000002, 0.00039101399999999856, 0.000390999999999999, 0.00039101399999999856, 0.0003910129999999991, 0.00039100000000000246, 0.000391014000000002, 0.0003909999999999955, 0.0003909860000000029, 0.00039100000000000246, 0.00039100000000000246, 0.00039100000000000246, 0.0003910280000000016, 0.0003909590000000032, 0.0003910269999999952, 0.000391014000000002, 0.0003910139999999951, 0.00039094500000000365, 0.000391014000000002, 0.000391014000000002, 0.00039100000000000246, 0.00039105500000000126, 0.00039095800000000375, 0.0003910139999999951, 0.0003910280000000016, 0.00039100000000000246, 0.000391014000000002]</msg>
<status status="PASS" starttime="20201030 15:52:05.712" endtime="20201030 15:52:05.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.707" endtime="20201030 15:52:05.721"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:05.725" endtime="20201030 15:52:05.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.723" endtime="20201030 15:52:05.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.722" endtime="20201030 15:52:05.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.348" endtime="20201030 15:52:05.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.347" endtime="20201030 15:52:05.746"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.754" endtime="20201030 15:52:05.784"></status>
</kw>
<msg timestamp="20201030 15:52:05.784" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.752" endtime="20201030 15:52:05.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.787" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.785" endtime="20201030 15:52:05.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.788" endtime="20201030 15:52:05.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.750" endtime="20201030 15:52:05.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.748" endtime="20201030 15:52:05.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.797" endtime="20201030 15:52:06.084"></status>
</kw>
<msg timestamp="20201030 15:52:06.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018769375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019178403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.795" endtime="20201030 15:52:06.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018769375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019178403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.088" endtime="20201030 15:52:06.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.097" endtime="20201030 15:52:06.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.793" endtime="20201030 15:52:06.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.791" endtime="20201030 15:52:06.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:06.105" level="INFO">${PHILIP_RES} = [{'diff': 0.0004090279999999988}, {'diff': 0.00040795799999999993}, {'diff': 0.0004079300000000008}, {'diff': 0.0004079160000000012}, {'diff': 0.00040791599999999775}, {'diff': 0.0004079030000000011},...</msg>
<status status="PASS" starttime="20201030 15:52:06.101" endtime="20201030 15:52:06.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:06.110" level="INFO">${RESULT} = {'diff': [0.0004090279999999988, 0.00040795799999999993, 0.0004079300000000008, 0.0004079160000000012, 0.00040791599999999775, 0.0004079030000000011, 0.00040794400000000036, 0.0004079170000000007, 0.0...</msg>
<status status="PASS" starttime="20201030 15:52:06.106" endtime="20201030 15:52:06.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.115" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:06.113" endtime="20201030 15:52:06.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.118" level="INFO">VALUE: [0.0004090279999999988, 0.00040795799999999993, 0.0004079300000000008, 0.0004079160000000012, 0.00040791599999999775, 0.0004079030000000011, 0.00040794400000000036, 0.0004079170000000007, 0.0004079170000000007, 0.0004079170000000007, 0.00040794499999999984, 0.0004079170000000007, 0.0004079170000000007, 0.0004079439999999969, 0.0004079170000000007, 0.0004079299999999973, 0.00040790200000000165, 0.0004079300000000008, 0.00040794400000000036, 0.000407972999999999, 0.0004079169999999972, 0.00040793100000000027, 0.00040793100000000027, 0.0004079030000000011, 0.00040790299999999766, 0.0004079170000000007, 0.00040793100000000027, 0.00040791599999999775, 0.0004079299999999973, 0.0004079160000000012, 0.00040794400000000036, 0.0004079300000000008, 0.00040794400000000036, 0.0004078609999999955, 0.00040793100000000027, 0.0004078610000000024, 0.00040793100000000027, 0.00040793100000000027, 0.00040793100000000027, 0.00040794400000000036, 0.0004079170000000007, 0.00040792999999999385, 0.0004079300000000008, 0.0004079719999999995, 0.0004078330000000033, 0.00040793100000000027, 0.00040793100000000027, 0.00040794499999999984, 0.00040793100000000027, 0.0004079170000000007]</msg>
<status status="PASS" starttime="20201030 15:52:06.116" endtime="20201030 15:52:06.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.111" endtime="20201030 15:52:06.120"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:06.124" endtime="20201030 15:52:06.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.122" endtime="20201030 15:52:06.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.121" endtime="20201030 15:52:06.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.746" endtime="20201030 15:52:06.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.746" endtime="20201030 15:52:06.145"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.154" endtime="20201030 15:52:06.185"></status>
</kw>
<msg timestamp="20201030 15:52:06.186" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.152" endtime="20201030 15:52:06.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.188" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.187" endtime="20201030 15:52:06.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.189" endtime="20201030 15:52:06.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.149" endtime="20201030 15:52:06.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.148" endtime="20201030 15:52:06.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.199" endtime="20201030 15:52:06.485"></status>
</kw>
<msg timestamp="20201030 15:52:06.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019728236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020154528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.197" endtime="20201030 15:52:06.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019728236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020154528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.489" endtime="20201030 15:52:06.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.497" endtime="20201030 15:52:06.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.194" endtime="20201030 15:52:06.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.193" endtime="20201030 15:52:06.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:06.503" level="INFO">${PHILIP_RES} = [{'diff': 0.0004262920000000017}, {'diff': 0.00042519400000000027}, {'diff': 0.00042520799999999984}, {'diff': 0.0004251670000000006}, {'diff': 0.00042518100000000017}, {'diff': 0.0004252080000000033}...</msg>
<status status="PASS" starttime="20201030 15:52:06.500" endtime="20201030 15:52:06.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:06.507" level="INFO">${RESULT} = {'diff': [0.0004262920000000017, 0.00042519400000000027, 0.00042520799999999984, 0.0004251670000000006, 0.00042518100000000017, 0.0004252080000000033, 0.00042520799999999984, 0.0004252089999999993, 0....</msg>
<status status="PASS" starttime="20201030 15:52:06.504" endtime="20201030 15:52:06.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.512" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:06.511" endtime="20201030 15:52:06.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.514" level="INFO">VALUE: [0.0004262920000000017, 0.00042519400000000027, 0.00042520799999999984, 0.0004251670000000006, 0.00042518100000000017, 0.0004252080000000033, 0.00042520799999999984, 0.0004252089999999993, 0.0004251800000000007, 0.00042519400000000027, 0.00042519499999999974, 0.00042519400000000027, 0.00042519400000000027, 0.00042519499999999974, 0.00042519400000000027, 0.0004251660000000011, 0.00042518100000000017, 0.00042518100000000017, 0.00042519400000000027, 0.00042519499999999974, 0.00042523699999999845, 0.00042519400000000027, 0.0004251670000000006, 0.00042519400000000027, 0.00042519400000000027, 0.0004251809999999967, 0.0004252090000000028, 0.0004251939999999968, 0.0004251950000000032, 0.00042519499999999627, 0.00042519400000000374, 0.0004251939999999968, 0.00042518100000000364, 0.00042520799999999637, 0.0004252080000000033, 0.0004251809999999967, 0.0004251939999999968, 0.00042519400000000374, 0.0004251809999999967, 0.0004251249999999984, 0.0004251379999999985, 0.000425250000000002, 0.0004251939999999968, 0.0004252220000000029, 0.00042519499999999627, 0.0004252080000000033, 0.0004251939999999968, 0.0004251950000000032, 0.00042519499999999627, 0.00042519400000000374]</msg>
<status status="PASS" starttime="20201030 15:52:06.513" endtime="20201030 15:52:06.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.508" endtime="20201030 15:52:06.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:06.520" endtime="20201030 15:52:06.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.518" endtime="20201030 15:52:06.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.517" endtime="20201030 15:52:06.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.146" endtime="20201030 15:52:06.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.146" endtime="20201030 15:52:06.541"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.549" endtime="20201030 15:52:06.580"></status>
</kw>
<msg timestamp="20201030 15:52:06.581" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.547" endtime="20201030 15:52:06.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.583" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.582" endtime="20201030 15:52:06.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.585" endtime="20201030 15:52:06.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.545" endtime="20201030 15:52:06.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.543" endtime="20201030 15:52:06.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.593" endtime="20201030 15:52:06.879"></status>
</kw>
<msg timestamp="20201030 15:52:06.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018655958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019099833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.592" endtime="20201030 15:52:06.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018655958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019099833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.883" endtime="20201030 15:52:06.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.891" endtime="20201030 15:52:06.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.589" endtime="20201030 15:52:06.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.588" endtime="20201030 15:52:06.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:06.897" level="INFO">${PHILIP_RES} = [{'diff': 0.0004438749999999998}, {'diff': 0.000442805000000001}, {'diff': 0.0004428330000000001}, {'diff': 0.00044282}, {'diff': 0.000442805999999997}, {'diff': 0.00044280600000000045}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201030 15:52:06.894" endtime="20201030 15:52:06.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:06.902" level="INFO">${RESULT} = {'diff': [0.0004438749999999998, 0.000442805000000001, 0.0004428330000000001, 0.00044282, 0.000442805999999997, 0.00044280600000000045, 0.00044282, 0.00044275000000000217, 0.000442805000000001, 0.0004...</msg>
<status status="PASS" starttime="20201030 15:52:06.898" endtime="20201030 15:52:06.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.906" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:06.905" endtime="20201030 15:52:06.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.909" level="INFO">VALUE: [0.0004438749999999998, 0.000442805000000001, 0.0004428330000000001, 0.00044282, 0.000442805999999997, 0.00044280600000000045, 0.00044282, 0.00044275000000000217, 0.000442805000000001, 0.000442805000000001, 0.00044281900000000055, 0.000442805000000001, 0.00044280600000000045, 0.0004428749999999988, 0.00044282, 0.00044280600000000045, 0.0004427920000000009, 0.0004428330000000001, 0.0004427910000000014, 0.00044281900000000055, 0.00044281900000000055, 0.00044281900000000055, 0.0004427780000000013, 0.00044282, 0.00044282, 0.00044282, 0.000442805999999997, 0.000442819000000004, 0.0004427499999999987, 0.000442819000000004, 0.0004428189999999971, 0.0004428469999999962, 0.0004428060000000039, 0.0004428339999999961, 0.00044283400000000306, 0.000442805999999997, 0.0004428060000000039, 0.000442805999999997, 0.00044280500000000445, 0.0004428189999999971, 0.0004428330000000036, 0.0004427919999999974, 0.0004428060000000039, 0.00044288900000000186, 0.0004428200000000035, 0.000442805999999997, 0.0004428060000000039, 0.00044277799999999784, 0.0004428189999999971, 0.000442819000000004]</msg>
<status status="PASS" starttime="20201030 15:52:06.907" endtime="20201030 15:52:06.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.903" endtime="20201030 15:52:06.910"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:06.914" endtime="20201030 15:52:06.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.912" endtime="20201030 15:52:06.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.911" endtime="20201030 15:52:06.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.541" endtime="20201030 15:52:06.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.541" endtime="20201030 15:52:06.934"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.943" endtime="20201030 15:52:06.975"></status>
</kw>
<msg timestamp="20201030 15:52:06.976" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.941" endtime="20201030 15:52:06.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.978" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.977" endtime="20201030 15:52:06.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.980" endtime="20201030 15:52:06.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.939" endtime="20201030 15:52:06.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.937" endtime="20201030 15:52:06.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.989" endtime="20201030 15:52:07.276"></status>
</kw>
<msg timestamp="20201030 15:52:07.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018599931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019061778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.987" endtime="20201030 15:52:07.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018599931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019061778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.280" endtime="20201030 15:52:07.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.288" endtime="20201030 15:52:07.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.984" endtime="20201030 15:52:07.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.983" endtime="20201030 15:52:07.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:07.294" level="INFO">${PHILIP_RES} = [{'diff': 0.00046184700000000134}, {'diff': 0.00046079100000000206}, {'diff': 0.0004607779999999985}, {'diff': 0.0004607779999999985}, {'diff': 0.00046074999999999935}, {'diff': 0.00046077800000000196...</msg>
<status status="PASS" starttime="20201030 15:52:07.291" endtime="20201030 15:52:07.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:07.298" level="INFO">${RESULT} = {'diff': [0.00046184700000000134, 0.00046079100000000206, 0.0004607779999999985, 0.0004607779999999985, 0.00046074999999999935, 0.00046077800000000196, 0.00046079200000000153, 0.0004607779999999985, 0...</msg>
<status status="PASS" starttime="20201030 15:52:07.295" endtime="20201030 15:52:07.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.302" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:07.301" endtime="20201030 15:52:07.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.305" level="INFO">VALUE: [0.00046184700000000134, 0.00046079100000000206, 0.0004607779999999985, 0.0004607779999999985, 0.00046074999999999935, 0.00046077800000000196, 0.00046079200000000153, 0.0004607779999999985, 0.00046079200000000153, 0.00046077800000000196, 0.0004607639999999989, 0.00046076299999999945, 0.0004607640000000024, 0.0004607639999999989, 0.00046079199999999806, 0.0004607639999999989, 0.0004606940000000011, 0.000460776999999999, 0.0004607639999999989, 0.00046077800000000196, 0.00046077800000000196, 0.00046080499999999816, 0.000460776999999999, 0.00046077800000000196, 0.0004607640000000024, 0.00046077800000000196, 0.00046079200000000153, 0.0004607229999999962, 0.00046077699999999555, 0.00046077800000000196, 0.0004607500000000028, 0.0004607640000000024, 0.00046077800000000196, 0.000460762999999996, 0.0004607919999999946, 0.00046076399999999545, 0.00046079200000000153, 0.0004607500000000028, 0.0004608190000000012, 0.0004607640000000024, 0.00046077800000000196, 0.00046079200000000153, 0.0004607499999999959, 0.00046076399999999545, 0.0004607630000000029, 0.0004607500000000028, 0.00046077800000000196, 0.00046077800000000196, 0.00046077800000000196, 0.00046083300000000077]</msg>
<status status="PASS" starttime="20201030 15:52:07.303" endtime="20201030 15:52:07.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.299" endtime="20201030 15:52:07.306"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:07.310" endtime="20201030 15:52:07.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.308" endtime="20201030 15:52:07.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.307" endtime="20201030 15:52:07.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.935" endtime="20201030 15:52:07.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.935" endtime="20201030 15:52:07.331"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.339" endtime="20201030 15:52:07.375"></status>
</kw>
<msg timestamp="20201030 15:52:07.376" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.338" endtime="20201030 15:52:07.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.378" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.377" endtime="20201030 15:52:07.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.379" endtime="20201030 15:52:07.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.335" endtime="20201030 15:52:07.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.333" endtime="20201030 15:52:07.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.388" endtime="20201030 15:52:07.674"></status>
</kw>
<msg timestamp="20201030 15:52:07.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020670319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021150486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.387" endtime="20201030 15:52:07.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020670319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021150486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.678" endtime="20201030 15:52:07.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.686" endtime="20201030 15:52:07.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.384" endtime="20201030 15:52:07.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.383" endtime="20201030 15:52:07.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:07.692" level="INFO">${PHILIP_RES} = [{'diff': 0.0004801670000000001}, {'diff': 0.00047908400000000115}, {'diff': 0.0004791110000000008}, {'diff': 0.0004790969999999978}, {'diff': 0.00047909700000000124}, {'diff': 0.0004790980000000007},...</msg>
<status status="PASS" starttime="20201030 15:52:07.689" endtime="20201030 15:52:07.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:07.696" level="INFO">${RESULT} = {'diff': [0.0004801670000000001, 0.00047908400000000115, 0.0004791110000000008, 0.0004790969999999978, 0.00047909700000000124, 0.0004790980000000007, 0.00047909700000000124, 0.00047911099999999734, 0....</msg>
<status status="PASS" starttime="20201030 15:52:07.693" endtime="20201030 15:52:07.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.701" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:07.700" endtime="20201030 15:52:07.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.703" level="INFO">VALUE: [0.0004801670000000001, 0.00047908400000000115, 0.0004791110000000008, 0.0004790969999999978, 0.00047909700000000124, 0.0004790980000000007, 0.00047909700000000124, 0.00047911099999999734, 0.00047909700000000124, 0.0004790980000000007, 0.00047905499999999906, 0.0004790829999999982, 0.0004790830000000017, 0.0004790700000000016, 0.0004790699999999981, 0.0004791110000000008, 0.00047909700000000124, 0.00047908400000000115, 0.00047913899999999995, 0.00047909700000000124, 0.0004790969999999978, 0.0004791519999999966, 0.0004790980000000042, 0.0004790829999999982, 0.0004790829999999982, 0.0004790970000000047, 0.0004791119999999968, 0.0004790969999999978, 0.0004790969999999978, 0.0004790969999999978, 0.0004791390000000034, 0.00047909799999999725, 0.00047911099999999734, 0.0004790970000000047, 0.0004790969999999978, 0.0004790699999999981, 0.0004791110000000043, 0.00047911099999999734, 0.0004790829999999982, 0.00047909799999999725, 0.0004790829999999982, 0.0004790970000000047, 0.0004790969999999978, 0.0004790839999999977, 0.00047912500000000385, 0.0004790969999999978, 0.0004790969999999978, 0.0004790980000000042, 0.00047911099999999734, 0.0004790409999999995]</msg>
<status status="PASS" starttime="20201030 15:52:07.702" endtime="20201030 15:52:07.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.697" endtime="20201030 15:52:07.705"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:07.709" endtime="20201030 15:52:07.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.707" endtime="20201030 15:52:07.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.706" endtime="20201030 15:52:07.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.331" endtime="20201030 15:52:07.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.331" endtime="20201030 15:52:07.730"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.738" endtime="20201030 15:52:07.772"></status>
</kw>
<msg timestamp="20201030 15:52:07.773" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.736" endtime="20201030 15:52:07.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.775" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.774" endtime="20201030 15:52:07.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.776" endtime="20201030 15:52:07.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.734" endtime="20201030 15:52:07.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.732" endtime="20201030 15:52:07.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.785" endtime="20201030 15:52:08.071"></status>
</kw>
<msg timestamp="20201030 15:52:08.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018835889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01933475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:07.784" endtime="20201030 15:52:08.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018835889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01933475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:08.075" endtime="20201030 15:52:08.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.083" endtime="20201030 15:52:08.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.781" endtime="20201030 15:52:08.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.780" endtime="20201030 15:52:08.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:08.089" level="INFO">${PHILIP_RES} = [{'diff': 0.0004988609999999997}, {'diff': 0.0004977919999999969}, {'diff': 0.0004977780000000008}, {'diff': 0.0004977639999999978}, {'diff': 0.0004977359999999986}, {'diff': 0.0004977769999999979}, {...</msg>
<status status="PASS" starttime="20201030 15:52:08.086" endtime="20201030 15:52:08.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:08.094" level="INFO">${RESULT} = {'diff': [0.0004988609999999997, 0.0004977919999999969, 0.0004977780000000008, 0.0004977639999999978, 0.0004977359999999986, 0.0004977769999999979, 0.0004977780000000008, 0.0004977779999999973, 0.0004...</msg>
<status status="PASS" starttime="20201030 15:52:08.090" endtime="20201030 15:52:08.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.098" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:08.097" endtime="20201030 15:52:08.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.101" level="INFO">VALUE: [0.0004988609999999997, 0.0004977919999999969, 0.0004977780000000008, 0.0004977639999999978, 0.0004977359999999986, 0.0004977769999999979, 0.0004977780000000008, 0.0004977779999999973, 0.0004977640000000012, 0.0004977780000000008, 0.0004977780000000008, 0.0004977780000000008, 0.0004977499999999982, 0.0004977780000000008, 0.0004978050000000005, 0.0004977629999999983, 0.0004977640000000012, 0.0004977920000000004, 0.0004977640000000012, 0.0004978059999999999, 0.0004977920000000004, 0.0004977780000000008, 0.0004978330000000031, 0.0004977780000000008, 0.0004977500000000051, 0.0004977499999999982, 0.0004977769999999979, 0.000497721999999999, 0.0004977780000000043, 0.0004977639999999978, 0.0004977919999999969, 0.0004977639999999978, 0.0004977780000000043, 0.0004977499999999982, 0.0004977769999999979, 0.0004977629999999983, 0.0004977910000000044, 0.0004977920000000038, 0.0004977499999999982, 0.0004977499999999982, 0.0004977640000000047, 0.0004977779999999973, 0.0004977779999999973, 0.000497804999999997, 0.0004977780000000043, 0.0004977769999999979, 0.0004977769999999979, 0.0004977919999999969, 0.0004976939999999999, 0.0004977780000000043]</msg>
<status status="PASS" starttime="20201030 15:52:08.100" endtime="20201030 15:52:08.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.095" endtime="20201030 15:52:08.102"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:08.106" endtime="20201030 15:52:08.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.104" endtime="20201030 15:52:08.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.103" endtime="20201030 15:52:08.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.731" endtime="20201030 15:52:08.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.730" endtime="20201030 15:52:08.126"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.135" endtime="20201030 15:52:08.171"></status>
</kw>
<msg timestamp="20201030 15:52:08.171" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.133" endtime="20201030 15:52:08.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.174" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.172" endtime="20201030 15:52:08.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.175" endtime="20201030 15:52:08.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.131" endtime="20201030 15:52:08.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.129" endtime="20201030 15:52:08.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.184" endtime="20201030 15:52:08.470"></status>
</kw>
<msg timestamp="20201030 15:52:08.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019108083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019625986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.182" endtime="20201030 15:52:08.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019108083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019625986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.474" endtime="20201030 15:52:08.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.482" endtime="20201030 15:52:08.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.180" endtime="20201030 15:52:08.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.178" endtime="20201030 15:52:08.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:08.489" level="INFO">${PHILIP_RES} = [{'diff': 0.0005179030000000001}, {'diff': 0.0005168050000000021}, {'diff': 0.0005168059999999981}, {'diff': 0.0005168060000000016}, {'diff': 0.0005167499999999998}, {'diff': 0.0005168050000000021}, {...</msg>
<status status="PASS" starttime="20201030 15:52:08.486" endtime="20201030 15:52:08.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:08.493" level="INFO">${RESULT} = {'diff': [0.0005179030000000001, 0.0005168050000000021, 0.0005168059999999981, 0.0005168060000000016, 0.0005167499999999998, 0.0005168050000000021, 0.0005168050000000021, 0.0005167780000000025, 0.0005...</msg>
<status status="PASS" starttime="20201030 15:52:08.490" endtime="20201030 15:52:08.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.497" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:08.496" endtime="20201030 15:52:08.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.499" level="INFO">VALUE: [0.0005179030000000001, 0.0005168050000000021, 0.0005168059999999981, 0.0005168060000000016, 0.0005167499999999998, 0.0005168050000000021, 0.0005168050000000021, 0.0005167780000000025, 0.000516777999999999, 0.0005168050000000021, 0.0005168059999999981, 0.0005168060000000016, 0.0005167919999999986, 0.0005167910000000026, 0.0005168189999999982, 0.0005168200000000012, 0.0005168059999999981, 0.0005168190000000017, 0.0005167909999999991, 0.0005168060000000016, 0.000516792000000002, 0.0005168479999999968, 0.0005167909999999956, 0.000516792000000002, 0.000516792000000002, 0.0005168060000000016, 0.0005168049999999952, 0.0005167910000000026, 0.0005168190000000017, 0.0005168060000000016, 0.0005167919999999951, 0.0005167910000000026, 0.0005168050000000021, 0.0005168340000000007, 0.0005168059999999947, 0.0005168050000000021, 0.0005168050000000021, 0.000516792000000002, 0.0005168060000000016, 0.0005168049999999952, 0.0005168050000000021, 0.0005168060000000016, 0.0005168060000000016, 0.0005168059999999947, 0.0005168330000000013, 0.0005168050000000021, 0.0005168200000000012, 0.0005167919999999951, 0.0005168190000000017, 0.0005167910000000026]</msg>
<status status="PASS" starttime="20201030 15:52:08.498" endtime="20201030 15:52:08.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.494" endtime="20201030 15:52:08.501"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:08.504" endtime="20201030 15:52:08.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.503" endtime="20201030 15:52:08.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.502" endtime="20201030 15:52:08.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.127" endtime="20201030 15:52:08.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.127" endtime="20201030 15:52:08.525"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.534" endtime="20201030 15:52:08.571"></status>
</kw>
<msg timestamp="20201030 15:52:08.571" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.532" endtime="20201030 15:52:08.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.574" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.572" endtime="20201030 15:52:08.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.575" endtime="20201030 15:52:08.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.530" endtime="20201030 15:52:08.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.528" endtime="20201030 15:52:08.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.584" endtime="20201030 15:52:08.870"></status>
</kw>
<msg timestamp="20201030 15:52:08.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019542597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020079819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.582" endtime="20201030 15:52:08.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019542597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020079819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.874" endtime="20201030 15:52:08.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.882" endtime="20201030 15:52:08.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.580" endtime="20201030 15:52:08.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.578" endtime="20201030 15:52:08.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:08.888" level="INFO">${PHILIP_RES} = [{'diff': 0.0005372220000000004}, {'diff': 0.0005361670000000006}, {'diff': 0.000536153000000001}, {'diff': 0.0005361670000000006}, {'diff': 0.0005361670000000006}, {'diff': 0.000536153000000001}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:08.885" endtime="20201030 15:52:08.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:08.892" level="INFO">${RESULT} = {'diff': [0.0005372220000000004, 0.0005361670000000006, 0.000536153000000001, 0.0005361670000000006, 0.0005361670000000006, 0.000536153000000001, 0.0005361940000000003, 0.0005361660000000011, 0.000536...</msg>
<status status="PASS" starttime="20201030 15:52:08.889" endtime="20201030 15:52:08.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.896" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:08.895" endtime="20201030 15:52:08.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.899" level="INFO">VALUE: [0.0005372220000000004, 0.0005361670000000006, 0.000536153000000001, 0.0005361670000000006, 0.0005361670000000006, 0.000536153000000001, 0.0005361940000000003, 0.0005361660000000011, 0.000536153000000001, 0.000536153000000001, 0.0005361670000000006, 0.0005361390000000014, 0.0005361670000000006, 0.0005361670000000006, 0.0005361520000000015, 0.0005361520000000015, 0.0005361800000000007, 0.0005361670000000006, 0.0005361109999999988, 0.000536153000000001, 0.0005361109999999954, 0.0005361659999999976, 0.0005362220000000029, 0.0005361659999999976, 0.0005361800000000042, 0.0005361670000000041, 0.0005361950000000032, 0.0005361810000000036, 0.0005361529999999975, 0.0005361530000000045, 0.0005361670000000041, 0.0005361940000000037, 0.0005361950000000032, 0.0005361810000000036, 0.0005361670000000041, 0.0005361810000000036, 0.0005361530000000045, 0.0005361810000000036, 0.0005361660000000046, 0.0005361109999999988, 0.000536152000000005, 0.0005362220000000029, 0.0005361670000000041, 0.0005361670000000041, 0.0005361530000000045, 0.000536250000000002, 0.0005361940000000037, 0.0005361660000000046, 0.0005361800000000042, 0.0005361530000000045]</msg>
<status status="PASS" starttime="20201030 15:52:08.897" endtime="20201030 15:52:08.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.893" endtime="20201030 15:52:08.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:08.907" endtime="20201030 15:52:08.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.905" endtime="20201030 15:52:08.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.904" endtime="20201030 15:52:08.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.526" endtime="20201030 15:52:08.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.526" endtime="20201030 15:52:08.927"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.936" endtime="20201030 15:52:08.973"></status>
</kw>
<msg timestamp="20201030 15:52:08.973" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.934" endtime="20201030 15:52:08.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.976" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.975" endtime="20201030 15:52:08.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.977" endtime="20201030 15:52:08.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.932" endtime="20201030 15:52:08.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.930" endtime="20201030 15:52:08.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.986" endtime="20201030 15:52:09.272"></status>
</kw>
<msg timestamp="20201030 15:52:09.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018598722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019155736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.984" endtime="20201030 15:52:09.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018598722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019155736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.276" endtime="20201030 15:52:09.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.283" endtime="20201030 15:52:09.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.982" endtime="20201030 15:52:09.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.980" endtime="20201030 15:52:09.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:09.290" level="INFO">${PHILIP_RES} = [{'diff': 0.000557013999999998}, {'diff': 0.0005559299999999996}, {'diff': 0.0005558890000000004}, {'diff': 0.000555903}, {'diff': 0.0005559719999999983}, {'diff': 0.000555903}, {'diff': 0.00055583400...</msg>
<status status="PASS" starttime="20201030 15:52:09.287" endtime="20201030 15:52:09.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:09.295" level="INFO">${RESULT} = {'diff': [0.000557013999999998, 0.0005559299999999996, 0.0005558890000000004, 0.000555903, 0.0005559719999999983, 0.000555903, 0.0005558340000000016, 0.0005558890000000004, 0.000555903, 0.000555889000...</msg>
<status status="PASS" starttime="20201030 15:52:09.291" endtime="20201030 15:52:09.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.299" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:09.298" endtime="20201030 15:52:09.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.301" level="INFO">VALUE: [0.000557013999999998, 0.0005559299999999996, 0.0005558890000000004, 0.000555903, 0.0005559719999999983, 0.000555903, 0.0005558340000000016, 0.0005558890000000004, 0.000555903, 0.0005558890000000004, 0.0005559169999999995, 0.0005558879999999974, 0.0005558890000000004, 0.0005558890000000004, 0.0005558890000000004, 0.0005559439999999992, 0.0005558610000000012, 0.0005558890000000004, 0.0005559020000000005, 0.0005558890000000004, 0.0005558199999999985, 0.0005558889999999969, 0.0005559300000000031, 0.0005559030000000034, 0.000555917000000003, 0.0005559029999999965, 0.0005558889999999969, 0.0005558889999999969, 0.0005558890000000039, 0.0005559030000000034, 0.0005559029999999965, 0.0005559029999999965, 0.0005559440000000027, 0.0005558750000000043, 0.0005559720000000018, 0.000555916999999996, 0.0005559439999999957, 0.0005559029999999965, 0.000555917000000003, 0.0005558189999999991, 0.0005559719999999949, 0.0005558889999999969, 0.0005559029999999965, 0.0005559030000000034, 0.000555917000000003, 0.000555916999999996, 0.0005559159999999966, 0.0005558749999999973, 0.0005558750000000043, 0.0005559580000000022]</msg>
<status status="PASS" starttime="20201030 15:52:09.300" endtime="20201030 15:52:09.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.296" endtime="20201030 15:52:09.303"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:09.306" endtime="20201030 15:52:09.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.305" endtime="20201030 15:52:09.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.304" endtime="20201030 15:52:09.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.928" endtime="20201030 15:52:09.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.928" endtime="20201030 15:52:09.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.957" endtime="20201030 15:52:09.327"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:48.574" endtime="20201030 15:52:09.328" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:51:28.833" endtime="20201030 15:52:09.336"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.405" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:52:09.413" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:52:10.584" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:52:09.404" endtime="20201030 15:52:10.585"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.587" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:52:10.586" endtime="20201030 15:52:10.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.402" endtime="20201030 15:52:10.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:10.590" endtime="20201030 15:52:10.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.589" endtime="20201030 15:52:10.774"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.786" endtime="20201030 15:52:10.800"></status>
</kw>
<msg timestamp="20201030 15:52:10.800" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.785" endtime="20201030 15:52:10.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.803" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.801" endtime="20201030 15:52:10.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.806" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:10.804" endtime="20201030 15:52:10.806"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:10.782" endtime="20201030 15:52:10.807"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:10.780" endtime="20201030 15:52:10.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.779" endtime="20201030 15:52:10.808"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:10.811" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:10.811" endtime="20201030 15:52:10.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.808" endtime="20201030 15:52:10.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.778" endtime="20201030 15:52:10.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.777" endtime="20201030 15:52:10.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.814" endtime="20201030 15:52:10.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.776" endtime="20201030 15:52:10.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.817" endtime="20201030 15:52:10.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.774" endtime="20201030 15:52:10.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.401" endtime="20201030 15:52:10.819"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:10.834" endtime="20201030 15:52:10.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.832" endtime="20201030 15:52:10.854"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.870" endtime="20201030 15:52:10.888"></status>
</kw>
<msg timestamp="20201030 15:52:10.889" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.867" endtime="20201030 15:52:10.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.894" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.891" endtime="20201030 15:52:10.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.900" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:10.897" endtime="20201030 15:52:10.901"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:10.863" endtime="20201030 15:52:10.902"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:10.861" endtime="20201030 15:52:10.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.859" endtime="20201030 15:52:10.904"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:10.912" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:10.910" endtime="20201030 15:52:10.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.906" endtime="20201030 15:52:10.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.859" endtime="20201030 15:52:10.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.858" endtime="20201030 15:52:10.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.915" endtime="20201030 15:52:10.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.857" endtime="20201030 15:52:10.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.855" endtime="20201030 15:52:10.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.831" endtime="20201030 15:52:10.921"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.943" endtime="20201030 15:52:10.960"></status>
</kw>
<msg timestamp="20201030 15:52:10.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.940" endtime="20201030 15:52:10.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.963" endtime="20201030 15:52:10.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.967" endtime="20201030 15:52:10.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.932" endtime="20201030 15:52:10.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.928" endtime="20201030 15:52:10.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.977" endtime="20201030 15:52:11.281"></status>
</kw>
<msg timestamp="20201030 15:52:11.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.10266475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.102667806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:10.975" endtime="20201030 15:52:11.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.10266475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.102667806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:11.285" endtime="20201030 15:52:11.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.294" endtime="20201030 15:52:11.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.972" endtime="20201030 15:52:11.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.970" endtime="20201030 15:52:11.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:11.301" level="INFO">${RESULT} = [{'diff': 3.05600000000128e-06}, {'diff': 1.6809999999894965e-06}, {'diff': 2.068999999993437e-06}, {'diff': 2.777999999994951e-06}, {'diff': 2.124999999991717e-06}, {'diff': 2.1250000000055946e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:11.297" endtime="20201030 15:52:11.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:11.305" level="INFO">${ACCURACY} = {'diff': [3.05600000000128e-06, 1.6809999999894965e-06, 2.068999999993437e-06, 2.777999999994951e-06, 2.124999999991717e-06, 2.1250000000055946e-06, 2.0839999999994197e-06, 1.6669999999968654e-06, 2.0...</msg>
<status status="PASS" starttime="20201030 15:52:11.302" endtime="20201030 15:52:11.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.310" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 15:52:11.309" endtime="20201030 15:52:11.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.313" level="INFO">VALUE: [3.05600000000128e-06, 1.6809999999894965e-06, 2.068999999993437e-06, 2.777999999994951e-06, 2.124999999991717e-06, 2.1250000000055946e-06, 2.0839999999994197e-06, 1.6669999999968654e-06, 2.082999999999946e-06, 2.082999999999946e-06, 1.6249999999912168e-06, 1.6530000000042344e-06, 1.6669999999968654e-06, 2.0839999999994197e-06, 2.8200000000006e-06, 1.6810000000033742e-06, 1.6390000000116034e-06, 2.833000000007635e-06, 2.1250000000055946e-06, 2.3890000000054146e-06, 2.0979999999920507e-06, 2.1120000000124373e-06, 2.110999999999086e-06, 2.4309999999971854e-06, 2.4169999999906766e-06, 2.4309999999971854e-06, 2.4439999999903428e-06, 2.4160000000050808e-06, 1.6669999999968654e-06, 1.6250000000050946e-06, 2.8200000000006e-06, 1.6109999999985858e-06, 2.124999999991717e-06, 1.6250000000050946e-06, 2.819000000001126e-06, 2.1250000000055946e-06, 2.110999999999086e-06, 2.4299999999977118e-06, 2.0839999999994197e-06, 2.4169999999906766e-06, 2.4439999999903428e-06, 2.4170000000045544e-06, 2.110999999999086e-06, 2.4029999999980456e-06, 2.4160000000050808e-06, 2.4169999999906766e-06, 2.110999999999086e-06, 2.4309999999971854e-06, 2.1250000000055946e-06, 2.110999999999086e-06]</msg>
<status status="PASS" starttime="20201030 15:52:11.311" endtime="20201030 15:52:11.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.306" endtime="20201030 15:52:11.314"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:11.317" endtime="20201030 15:52:11.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.316" endtime="20201030 15:52:11.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.315" endtime="20201030 15:52:11.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.924" endtime="20201030 15:52:11.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.923" endtime="20201030 15:52:11.338"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.347" endtime="20201030 15:52:11.360"></status>
</kw>
<msg timestamp="20201030 15:52:11.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.345" endtime="20201030 15:52:11.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.362" endtime="20201030 15:52:11.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.364" endtime="20201030 15:52:11.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.342" endtime="20201030 15:52:11.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.340" endtime="20201030 15:52:11.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.374" endtime="20201030 15:52:11.662"></status>
</kw>
<msg timestamp="20201030 15:52:11.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022151028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022154347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.372" endtime="20201030 15:52:11.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022151028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022154347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.666" endtime="20201030 15:52:11.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.674" endtime="20201030 15:52:11.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.370" endtime="20201030 15:52:11.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.368" endtime="20201030 15:52:11.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:11.688" level="INFO">${RESULT} = [{'diff': 3.319000000001626e-06}, {'diff': 2.722000000000141e-06}, {'diff': 2.708000000000571e-06}, {'diff': 3.417000000002085e-06}, {'diff': 2.7360000000031803e-06}, {'diff': 3.3329999999977267e-06},...</msg>
<status status="PASS" starttime="20201030 15:52:11.681" endtime="20201030 15:52:11.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:11.698" level="INFO">${ACCURACY} = {'diff': [3.319000000001626e-06, 2.722000000000141e-06, 2.708000000000571e-06, 3.417000000002085e-06, 2.7360000000031803e-06, 3.3329999999977267e-06, 3.3329999999977267e-06, 3.319000000001626e-06, 2.6...</msg>
<status status="PASS" starttime="20201030 15:52:11.690" endtime="20201030 15:52:11.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.708" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 15:52:11.706" endtime="20201030 15:52:11.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.713" level="INFO">VALUE: [3.319000000001626e-06, 2.722000000000141e-06, 2.708000000000571e-06, 3.417000000002085e-06, 2.7360000000031803e-06, 3.3329999999977267e-06, 3.3329999999977267e-06, 3.319000000001626e-06, 2.667000000001335e-06, 3.333000000001196e-06, 3.6389999999997258e-06, 3.6669999999988656e-06, 3.3189999999981568e-06, 3.0410000000022364e-06, 3.3200000000011e-06, 2.999999999999531e-06, 3.040999999998767e-06, 3.333000000001196e-06, 3.3199999999976304e-06, 3.347000000000766e-06, 3.6529999999992957e-06, 3.0279999999986706e-06, 3.374999999999906e-06, 2.7229999999996146e-06, 3.04200000000171e-06, 3.333000000001196e-06, 3.347000000000766e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.333000000001196e-06, 3.347000000000766e-06, 3.6389999999997258e-06, 3.333000000001196e-06, 3.0840000000004197e-06, 3.333000000001196e-06, 2.722000000000141e-06, 3.040999999998767e-06, 3.319000000001626e-06, 3.347000000000766e-06, 3.111000000000086e-06, 3.333000000001196e-06, 3.6389999999997258e-06, 3.02800000000214e-06, 3.333000000001196e-06, 3.3340000000006698e-06, 3.3329999999977267e-06, 3.02800000000214e-06, 2.7090000000000447e-06, 3.3200000000011e-06, 3.02800000000214e-06]</msg>
<status status="PASS" starttime="20201030 15:52:11.710" endtime="20201030 15:52:11.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.700" endtime="20201030 15:52:11.715"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:11.722" endtime="20201030 15:52:11.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.719" endtime="20201030 15:52:11.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.717" endtime="20201030 15:52:11.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.339" endtime="20201030 15:52:11.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.338" endtime="20201030 15:52:11.747"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.765" endtime="20201030 15:52:11.780"></status>
</kw>
<msg timestamp="20201030 15:52:11.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.761" endtime="20201030 15:52:11.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.782" endtime="20201030 15:52:11.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.785" endtime="20201030 15:52:11.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.756" endtime="20201030 15:52:11.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.752" endtime="20201030 15:52:11.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.794" endtime="20201030 15:52:12.091"></status>
</kw>
<msg timestamp="20201030 15:52:12.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035731, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035735833, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:11.792" endtime="20201030 15:52:12.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035731, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035735833, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:12.096" endtime="20201030 15:52:12.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.107" endtime="20201030 15:52:12.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.789" endtime="20201030 15:52:12.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.788" endtime="20201030 15:52:12.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:12.113" level="INFO">${RESULT} = [{'diff': 4.833000000002696e-06}, {'diff': 3.943999999998782e-06}, {'diff': 4.2360000000046805e-06}, {'diff': 4.568999999995937e-06}, {'diff': 4.263999999996881e-06}, {'diff': 3.959000000004764e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:12.110" endtime="20201030 15:52:12.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:12.118" level="INFO">${ACCURACY} = {'diff': [4.833000000002696e-06, 3.943999999998782e-06, 4.2360000000046805e-06, 4.568999999995937e-06, 4.263999999996881e-06, 3.959000000004764e-06, 4.541999999996271e-06, 4.472999999997895e-06, 3.945...</msg>
<status status="PASS" starttime="20201030 15:52:12.114" endtime="20201030 15:52:12.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.122" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 15:52:12.121" endtime="20201030 15:52:12.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.124" level="INFO">VALUE: [4.833000000002696e-06, 3.943999999998782e-06, 4.2360000000046805e-06, 4.568999999995937e-06, 4.263999999996881e-06, 3.959000000004764e-06, 4.541999999996271e-06, 4.472999999997895e-06, 3.945000000005194e-06, 4.555999999995841e-06, 4.527999999996701e-06, 3.958999999997825e-06, 4.195000000005444e-06, 4.2359999999977416e-06, 4.555999999995841e-06, 4.55600000000278e-06, 4.555999999995841e-06, 4.569000000002876e-06, 4.291999999996021e-06, 4.277999999996451e-06, 4.207999999998602e-06, 4.5410000000037365e-06, 4.2499999999973115e-06, 4.569000000002876e-06, 4.263999999996881e-06, 4.25000000000425e-06, 3.6529999999992957e-06, 4.26400000000382e-06, 4.25000000000425e-06, 4.555000000003306e-06, 3.958999999997825e-06, 4.2359999999977416e-06, 3.959000000004764e-06, 4.193999999999032e-06, 4.263999999996881e-06, 3.9449999999982555e-06, 4.555999999995841e-06, 4.2499999999973115e-06, 3.958000000005291e-06, 3.625000000000156e-06, 4.222999999997645e-06, 3.9449999999982555e-06, 4.25000000000425e-06, 4.276999999996978e-06, 4.2499999999973115e-06, 4.5549999999963675e-06, 4.541999999996271e-06, 3.943999999998782e-06, 4.27800000000339e-06, 4.2499999999973115e-06]</msg>
<status status="PASS" starttime="20201030 15:52:12.123" endtime="20201030 15:52:12.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.118" endtime="20201030 15:52:12.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:12.129" endtime="20201030 15:52:12.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.128" endtime="20201030 15:52:12.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.126" endtime="20201030 15:52:12.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.749" endtime="20201030 15:52:12.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.747" endtime="20201030 15:52:12.150"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.159" endtime="20201030 15:52:12.173"></status>
</kw>
<msg timestamp="20201030 15:52:12.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.157" endtime="20201030 15:52:12.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.176" endtime="20201030 15:52:12.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.178" endtime="20201030 15:52:12.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.154" endtime="20201030 15:52:12.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.152" endtime="20201030 15:52:12.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.187" endtime="20201030 15:52:12.473"></status>
</kw>
<msg timestamp="20201030 15:52:12.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022507694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022513167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.186" endtime="20201030 15:52:12.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022507694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022513167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.478" endtime="20201030 15:52:12.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.487" endtime="20201030 15:52:12.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.183" endtime="20201030 15:52:12.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.181" endtime="20201030 15:52:12.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:12.501" level="INFO">${RESULT} = [{'diff': 5.472999999998895e-06}, {'diff': 4.846999999998797e-06}, {'diff': 5.180999999999936e-06}, {'diff': 5.457999999999852e-06}, {'diff': 5.500000000002031e-06}, {'diff': 5.569000000000407e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:12.494" endtime="20201030 15:52:12.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:12.510" level="INFO">${ACCURACY} = {'diff': [5.472999999998895e-06, 4.846999999998797e-06, 5.180999999999936e-06, 5.457999999999852e-06, 5.500000000002031e-06, 5.569000000000407e-06, 5.514000000001601e-06, 5.471999999999422e-06, 5.4729...</msg>
<status status="PASS" starttime="20201030 15:52:12.503" endtime="20201030 15:52:12.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.519" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 15:52:12.517" endtime="20201030 15:52:12.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.524" level="INFO">VALUE: [5.472999999998895e-06, 4.846999999998797e-06, 5.180999999999936e-06, 5.457999999999852e-06, 5.500000000002031e-06, 5.569000000000407e-06, 5.514000000001601e-06, 5.471999999999422e-06, 5.472999999998895e-06, 5.180999999999936e-06, 4.555000000003306e-06, 4.555999999999311e-06, 4.58400000000192e-06, 5.180999999999936e-06, 5.167000000000366e-06, 5.167000000000366e-06, 4.555999999999311e-06, 5.180999999999936e-06, 5.167000000000366e-06, 4.846999999998797e-06, 4.889000000000976e-06, 4.5699999999988805e-06, 5.499999999998562e-06, 5.110999999998617e-06, 5.167000000000366e-06, 4.583000000002446e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.457999999999852e-06, 5.180999999999936e-06, 5.4589999999993255e-06, 5.471999999999422e-06, 5.180999999999936e-06, 5.472000000002891e-06, 4.875000000001406e-06, 4.596999999998547e-06, 5.473000000002365e-06, 5.167000000000366e-06, 5.471999999999422e-06, 5.486000000002461e-06, 5.166000000000892e-06, 5.457999999999852e-06, 5.166000000000892e-06, 5.125000000001656e-06, 4.555999999999311e-06, 5.194000000000032e-06, 5.180999999999936e-06, 5.471999999999422e-06, 5.473000000002365e-06, 5.499999999998562e-06]</msg>
<status status="PASS" starttime="20201030 15:52:12.521" endtime="20201030 15:52:12.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.511" endtime="20201030 15:52:12.528"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:12.535" endtime="20201030 15:52:12.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.532" endtime="20201030 15:52:12.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.530" endtime="20201030 15:52:12.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.151" endtime="20201030 15:52:12.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.150" endtime="20201030 15:52:12.560"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.579" endtime="20201030 15:52:12.594"></status>
</kw>
<msg timestamp="20201030 15:52:12.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.575" endtime="20201030 15:52:12.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.595" endtime="20201030 15:52:12.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.598" endtime="20201030 15:52:12.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.569" endtime="20201030 15:52:12.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.565" endtime="20201030 15:52:12.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.607" endtime="20201030 15:52:12.895"></status>
</kw>
<msg timestamp="20201030 15:52:12.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0366475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036653556, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:12.605" endtime="20201030 15:52:12.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0366475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036653556, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:12.899" endtime="20201030 15:52:12.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.908" endtime="20201030 15:52:12.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.603" endtime="20201030 15:52:12.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.601" endtime="20201030 15:52:12.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:12.914" level="INFO">${RESULT} = [{'diff': 6.055999999997341e-06}, {'diff': 5.790999999998048e-06}, {'diff': 6.0140000000055704e-06}, {'diff': 6.096999999996577e-06}, {'diff': 5.749999999998812e-06}, {'diff': 6.680000000001962e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:12.911" endtime="20201030 15:52:12.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:12.919" level="INFO">${ACCURACY} = {'diff': [6.055999999997341e-06, 5.790999999998048e-06, 6.0140000000055704e-06, 6.096999999996577e-06, 5.749999999998812e-06, 6.680000000001962e-06, 6.389000000002476e-06, 6.097000000003516e-06, 5.764...</msg>
<status status="PASS" starttime="20201030 15:52:12.915" endtime="20201030 15:52:12.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.924" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 15:52:12.923" endtime="20201030 15:52:12.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.926" level="INFO">VALUE: [6.055999999997341e-06, 5.790999999998048e-06, 6.0140000000055704e-06, 6.096999999996577e-06, 5.749999999998812e-06, 6.680000000001962e-06, 6.389000000002476e-06, 6.097000000003516e-06, 5.76400000000532e-06, 6.0829999999970075e-06, 6.374999999995967e-06, 6.417000000001616e-06, 6.0829999999970075e-06, 6.389000000002476e-06, 6.152999999994857e-06, 6.389000000002476e-06, 6.444000000001282e-06, 5.7779999999979514e-06, 6.0690000000043764e-06, 6.333999999996731e-06, 6.0829999999970075e-06, 6.458000000000852e-06, 6.083000000003946e-06, 6.083999999996481e-06, 5.7639999999983815e-06, 6.388999999995537e-06, 5.790999999998048e-06, 6.069999999996911e-06, 5.7639999999983815e-06, 6.138999999995287e-06, 6.694000000001532e-06, 6.430000000001712e-06, 6.0829999999970075e-06, 6.429999999994773e-06, 6.0829999999970075e-06, 6.681000000001436e-06, 6.09800000000299e-06, 6.388999999995537e-06, 6.05600000000428e-06, 6.374999999995967e-06, 6.403000000002046e-06, 6.430000000001712e-06, 6.111000000003086e-06, 5.485999999998992e-06, 5.7639999999983815e-06, 6.375000000002906e-06, 6.403000000002046e-06, 6.083000000003946e-06, 6.0829999999970075e-06, 6.680000000001962e-06]</msg>
<status status="PASS" starttime="20201030 15:52:12.925" endtime="20201030 15:52:12.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.920" endtime="20201030 15:52:12.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:12.931" endtime="20201030 15:52:12.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.929" endtime="20201030 15:52:12.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.928" endtime="20201030 15:52:12.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.562" endtime="20201030 15:52:12.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.561" endtime="20201030 15:52:12.952"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.960" endtime="20201030 15:52:12.974"></status>
</kw>
<msg timestamp="20201030 15:52:12.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.959" endtime="20201030 15:52:12.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.976" endtime="20201030 15:52:12.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.979" endtime="20201030 15:52:12.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.956" endtime="20201030 15:52:12.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.954" endtime="20201030 15:52:12.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.988" endtime="20201030 15:52:13.280"></status>
</kw>
<msg timestamp="20201030 15:52:13.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022233306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022240889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.986" endtime="20201030 15:52:13.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022233306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022240889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.286" endtime="20201030 15:52:13.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.295" endtime="20201030 15:52:13.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.983" endtime="20201030 15:52:13.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.982" endtime="20201030 15:52:13.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:13.301" level="INFO">${RESULT} = [{'diff': 7.582999999998508e-06}, {'diff': 6.693999999998063e-06}, {'diff': 7.290999999999548e-06}, {'diff': 7.250000000000312e-06}, {'diff': 7.304999999999118e-06}, {'diff': 7.290999999999548e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:13.298" endtime="20201030 15:52:13.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:13.306" level="INFO">${ACCURACY} = {'diff': [7.582999999998508e-06, 6.693999999998063e-06, 7.290999999999548e-06, 7.250000000000312e-06, 7.304999999999118e-06, 7.290999999999548e-06, 7.332999999998258e-06, 7.013999999999632e-06, 6.7220...</msg>
<status status="PASS" starttime="20201030 15:52:13.302" endtime="20201030 15:52:13.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.310" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 15:52:13.309" endtime="20201030 15:52:13.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.312" level="INFO">VALUE: [7.582999999998508e-06, 6.693999999998063e-06, 7.290999999999548e-06, 7.250000000000312e-06, 7.304999999999118e-06, 7.290999999999548e-06, 7.332999999998258e-06, 7.013999999999632e-06, 6.722000000000672e-06, 7.624999999997217e-06, 7.320000000001631e-06, 7.542000000002741e-06, 7.2919999999990215e-06, 7.000000000000062e-06, 6.7079999999976325e-06, 7.304999999999118e-06, 6.709000000000576e-06, 7.611000000001117e-06, 7.000000000000062e-06, 6.722000000000672e-06, 7.000000000000062e-06, 7.304999999999118e-06, 7.348000000000771e-06, 6.986000000000492e-06, 7.611000000001117e-06, 7.625000000000687e-06, 7.305000000002587e-06, 7.2919999999990215e-06, 7.320000000001631e-06, 7.624999999997217e-06, 7.318999999998688e-06, 7.304999999999118e-06, 7.306000000002061e-06, 6.7079999999976325e-06, 7.000000000000062e-06, 7.305999999998591e-06, 7.347999999997301e-06, 7.013999999999632e-06, 7.347000000001297e-06, 7.306000000002061e-06, 7.2919999999990215e-06, 7.000000000000062e-06, 7.6109999999976474e-06, 7.305999999998591e-06, 7.597000000001547e-06, 7.319999999998161e-06, 7.5969999999980775e-06, 7.305999999998591e-06, 7.000000000000062e-06, 7.6109999999976474e-06]</msg>
<status status="PASS" starttime="20201030 15:52:13.311" endtime="20201030 15:52:13.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.306" endtime="20201030 15:52:13.313"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:13.317" endtime="20201030 15:52:13.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.316" endtime="20201030 15:52:13.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.315" endtime="20201030 15:52:13.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.953" endtime="20201030 15:52:13.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.952" endtime="20201030 15:52:13.338"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.347" endtime="20201030 15:52:13.362"></status>
</kw>
<msg timestamp="20201030 15:52:13.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.345" endtime="20201030 15:52:13.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.363" endtime="20201030 15:52:13.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.366" endtime="20201030 15:52:13.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.343" endtime="20201030 15:52:13.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.341" endtime="20201030 15:52:13.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.375" endtime="20201030 15:52:13.659"></status>
</kw>
<msg timestamp="20201030 15:52:13.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022544569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022553375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.373" endtime="20201030 15:52:13.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022544569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022553375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.663" endtime="20201030 15:52:13.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.672" endtime="20201030 15:52:13.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.371" endtime="20201030 15:52:13.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.369" endtime="20201030 15:52:13.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:13.678" level="INFO">${RESULT} = [{'diff': 8.806000000000092e-06}, {'diff': 7.930999999999216e-06}, {'diff': 8.555000000000368e-06}, {'diff': 8.527000000001228e-06}, {'diff': 8.195000000002506e-06}, {'diff': 7.929999999999743e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:13.675" endtime="20201030 15:52:13.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:13.682" level="INFO">${ACCURACY} = {'diff': [8.806000000000092e-06, 7.930999999999216e-06, 8.555000000000368e-06, 8.527000000001228e-06, 8.195000000002506e-06, 7.929999999999743e-06, 8.542000000000272e-06, 8.250000000001312e-06, 8.2360...</msg>
<status status="PASS" starttime="20201030 15:52:13.679" endtime="20201030 15:52:13.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.687" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 15:52:13.686" endtime="20201030 15:52:13.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.689" level="INFO">VALUE: [8.806000000000092e-06, 7.930999999999216e-06, 8.555000000000368e-06, 8.527000000001228e-06, 8.195000000002506e-06, 7.929999999999743e-06, 8.542000000000272e-06, 8.250000000001312e-06, 8.236000000001742e-06, 8.236000000001742e-06, 7.625000000000687e-06, 8.222999999998176e-06, 8.250000000001312e-06, 8.528000000000702e-06, 8.236999999997746e-06, 8.512999999998189e-06, 8.528000000000702e-06, 7.916999999999647e-06, 8.527000000001228e-06, 7.666999999999397e-06, 8.236000000001742e-06, 8.194999999999036e-06, 7.6109999999976474e-06, 7.611000000001117e-06, 8.222999999998176e-06, 8.292000000000022e-06, 8.222000000002172e-06, 8.209000000002076e-06, 8.528000000000702e-06, 8.249999999997842e-06, 8.221999999998703e-06, 8.542000000000272e-06, 8.542000000000272e-06, 8.139000000000757e-06, 8.541999999996802e-06, 8.514000000001132e-06, 8.514000000001132e-06, 7.916000000000173e-06, 8.570000000002881e-06, 8.221999999998703e-06, 8.528000000000702e-06, 7.929999999999743e-06, 8.221999999998703e-06, 7.611000000001117e-06, 8.208999999998606e-06, 8.222000000002172e-06, 8.513999999997662e-06, 8.555000000000368e-06, 8.514000000001132e-06, 8.235999999998272e-06]</msg>
<status status="PASS" starttime="20201030 15:52:13.688" endtime="20201030 15:52:13.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.683" endtime="20201030 15:52:13.691"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:13.695" endtime="20201030 15:52:13.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.693" endtime="20201030 15:52:13.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.692" endtime="20201030 15:52:13.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.339" endtime="20201030 15:52:13.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.338" endtime="20201030 15:52:13.716"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.724" endtime="20201030 15:52:13.738"></status>
</kw>
<msg timestamp="20201030 15:52:13.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.723" endtime="20201030 15:52:13.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.740" endtime="20201030 15:52:13.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.742" endtime="20201030 15:52:13.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.720" endtime="20201030 15:52:13.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.718" endtime="20201030 15:52:13.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.751" endtime="20201030 15:52:14.035"></status>
</kw>
<msg timestamp="20201030 15:52:14.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021598528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021607625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.750" endtime="20201030 15:52:14.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021598528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021607625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.040" endtime="20201030 15:52:14.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.048" endtime="20201030 15:52:14.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.747" endtime="20201030 15:52:14.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.745" endtime="20201030 15:52:14.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:14.054" level="INFO">${RESULT} = [{'diff': 9.096999999999578e-06}, {'diff': 8.527999999997232e-06}, {'diff': 8.527999999997232e-06}, {'diff': 9.458000000000383e-06}, {'diff': 9.458999999999856e-06}, {'diff': 9.388999999998537e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:14.051" endtime="20201030 15:52:14.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:14.059" level="INFO">${ACCURACY} = {'diff': [9.096999999999578e-06, 8.527999999997232e-06, 8.527999999997232e-06, 9.458000000000383e-06, 9.458999999999856e-06, 9.388999999998537e-06, 9.124999999998717e-06, 9.457999999996913e-06, 8.8469...</msg>
<status status="PASS" starttime="20201030 15:52:14.055" endtime="20201030 15:52:14.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.064" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 15:52:14.063" endtime="20201030 15:52:14.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.066" level="INFO">VALUE: [9.096999999999578e-06, 8.527999999997232e-06, 8.527999999997232e-06, 9.458000000000383e-06, 9.458999999999856e-06, 9.388999999998537e-06, 9.124999999998717e-06, 9.457999999996913e-06, 8.846999999999328e-06, 8.833999999999231e-06, 8.8340000000027e-06, 9.194000000000563e-06, 9.444000000000813e-06, 9.444000000000813e-06, 8.819000000000188e-06, 9.179999999997523e-06, 9.153000000001327e-06, 9.124999999998717e-06, 9.458999999999856e-06, 8.500000000001562e-06, 8.555999999999842e-06, 9.152999999997857e-06, 8.500000000001562e-06, 9.444000000000813e-06, 9.194000000000563e-06, 9.458999999999856e-06, 9.402999999998107e-06, 8.528000000000702e-06, 9.139000000001757e-06, 9.431000000000717e-06, 8.514000000001132e-06, 9.445000000000286e-06, 9.458000000000383e-06, 9.471999999999953e-06, 8.486000000001992e-06, 9.444000000000813e-06, 8.514000000001132e-06, 9.445000000000286e-06, 9.458000000000383e-06, 9.458999999999856e-06, 9.443999999997343e-06, 9.458000000000383e-06, 9.458000000000383e-06, 9.444000000000813e-06, 9.458000000000383e-06, 9.472999999999426e-06, 9.056000000000342e-06, 9.445000000000286e-06, 9.430000000001243e-06, 9.138999999998287e-06]</msg>
<status status="PASS" starttime="20201030 15:52:14.065" endtime="20201030 15:52:14.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.060" endtime="20201030 15:52:14.068"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:14.071" endtime="20201030 15:52:14.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.070" endtime="20201030 15:52:14.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.069" endtime="20201030 15:52:14.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.717" endtime="20201030 15:52:14.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.716" endtime="20201030 15:52:14.092"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.101" endtime="20201030 15:52:14.115"></status>
</kw>
<msg timestamp="20201030 15:52:14.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.099" endtime="20201030 15:52:14.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.116" endtime="20201030 15:52:14.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.119" endtime="20201030 15:52:14.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.096" endtime="20201030 15:52:14.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.094" endtime="20201030 15:52:14.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.128" endtime="20201030 15:52:14.412"></status>
</kw>
<msg timestamp="20201030 15:52:14.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021592236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021603125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.126" endtime="20201030 15:52:14.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021592236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021603125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.416" endtime="20201030 15:52:14.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.425" endtime="20201030 15:52:14.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.124" endtime="20201030 15:52:14.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.122" endtime="20201030 15:52:14.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:14.431" level="INFO">${RESULT} = [{'diff': 1.0889000000000038e-05}, {'diff': 1.0082999999997538e-05}, {'diff': 1.0374999999999968e-05}, {'diff': 1.0651999999999884e-05}, {'diff': 1.0361000000000398e-05}, {'diff': 1.0348000000000301e-...</msg>
<status status="PASS" starttime="20201030 15:52:14.428" endtime="20201030 15:52:14.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:14.435" level="INFO">${ACCURACY} = {'diff': [1.0889000000000038e-05, 1.0082999999997538e-05, 1.0374999999999968e-05, 1.0651999999999884e-05, 1.0361000000000398e-05, 1.0348000000000301e-05, 1.0374999999999968e-05, 1.0348000000000301e-05...</msg>
<status status="PASS" starttime="20201030 15:52:14.432" endtime="20201030 15:52:14.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.440" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 15:52:14.439" endtime="20201030 15:52:14.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.442" level="INFO">VALUE: [1.0889000000000038e-05, 1.0082999999997538e-05, 1.0374999999999968e-05, 1.0651999999999884e-05, 1.0361000000000398e-05, 1.0348000000000301e-05, 1.0374999999999968e-05, 1.0348000000000301e-05, 1.0402999999999107e-05, 1.0348000000000301e-05, 1.0374999999999968e-05, 1.0069000000001438e-05, 9.763999999998912e-06, 1.0361000000000398e-05, 1.0304999999998649e-05, 1.0361000000000398e-05, 1.0056000000001342e-05, 1.0347000000000828e-05, 1.0361000000000398e-05, 1.0347000000000828e-05, 1.0096999999997108e-05, 1.0347000000000828e-05, 1.0652999999999357e-05, 1.0068999999997968e-05, 1.0694000000002063e-05, 1.0347000000000828e-05, 1.0679999999999024e-05, 1.0374999999999968e-05, 1.0069999999997442e-05, 1.0665999999999454e-05, 1.0374999999999968e-05, 1.0041000000002298e-05, 9.735999999999773e-06, 1.0401999999999634e-05, 1.0694000000002063e-05, 1.0388999999999537e-05, 1.0374999999999968e-05, 1.0361000000000398e-05, 1.0666999999998927e-05, 1.0361999999999871e-05, 1.0347999999996832e-05, 1.0054999999998399e-05, 1.0083000000001008e-05, 1.0443999999998343e-05, 1.0041999999998302e-05, 9.819000000001188e-06, 9.764000000002382e-06, 1.0361000000000398e-05, 1.0347000000000828e-05, 1.0069000000001438e-05]</msg>
<status status="PASS" starttime="20201030 15:52:14.441" endtime="20201030 15:52:14.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.436" endtime="20201030 15:52:14.444"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:14.447" endtime="20201030 15:52:14.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.446" endtime="20201030 15:52:14.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.445" endtime="20201030 15:52:14.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.093" endtime="20201030 15:52:14.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.092" endtime="20201030 15:52:14.468"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.477" endtime="20201030 15:52:14.493"></status>
</kw>
<msg timestamp="20201030 15:52:14.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.475" endtime="20201030 15:52:14.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.494" endtime="20201030 15:52:14.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.497" endtime="20201030 15:52:14.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.472" endtime="20201030 15:52:14.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.470" endtime="20201030 15:52:14.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.506" endtime="20201030 15:52:14.794"></status>
</kw>
<msg timestamp="20201030 15:52:14.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022997778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023009042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.504" endtime="20201030 15:52:14.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022997778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023009042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.798" endtime="20201030 15:52:14.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.807" endtime="20201030 15:52:14.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.502" endtime="20201030 15:52:14.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.500" endtime="20201030 15:52:14.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:14.813" level="INFO">${RESULT} = [{'diff': 1.1264000000000413e-05}, {'diff': 1.0985999999997553e-05}, {'diff': 1.1277999999999982e-05}, {'diff': 1.1237000000000746e-05}, {'diff': 1.0972000000001453e-05}, {'diff': 1.1569000000002938e-...</msg>
<status status="PASS" starttime="20201030 15:52:14.810" endtime="20201030 15:52:14.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:14.817" level="INFO">${ACCURACY} = {'diff': [1.1264000000000413e-05, 1.0985999999997553e-05, 1.1277999999999982e-05, 1.1237000000000746e-05, 1.0972000000001453e-05, 1.1569000000002938e-05, 1.1277999999999982e-05, 1.1597000000002078e-05...</msg>
<status status="PASS" starttime="20201030 15:52:14.814" endtime="20201030 15:52:14.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.822" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 15:52:14.821" endtime="20201030 15:52:14.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.824" level="INFO">VALUE: [1.1264000000000413e-05, 1.0985999999997553e-05, 1.1277999999999982e-05, 1.1237000000000746e-05, 1.0972000000001453e-05, 1.1569000000002938e-05, 1.1277999999999982e-05, 1.1597000000002078e-05, 1.0972000000001453e-05, 1.1304999999999649e-05, 1.1250000000000843e-05, 1.0667000000002397e-05, 1.1277999999999982e-05, 1.1583999999998512e-05, 1.0987000000000496e-05, 1.1582999999999039e-05, 1.1000000000000593e-05, 1.0680999999998497e-05, 1.0916999999999177e-05, 1.1264000000000413e-05, 1.0665999999999454e-05, 1.1596999999998608e-05, 1.1264000000000413e-05, 1.0973000000000926e-05, 1.1277000000000509e-05, 1.0959000000001357e-05, 1.1264000000000413e-05, 1.0972000000001453e-05, 1.1291999999999552e-05, 1.1000000000000593e-05, 1.0971999999997983e-05, 1.1277999999999982e-05, 1.0709000000001107e-05, 1.1596999999998608e-05, 1.1596999999998608e-05, 1.1306000000002592e-05, 1.0944000000002313e-05, 1.0638999999999788e-05, 1.1277000000000509e-05, 1.1291000000000079e-05, 1.1291999999999552e-05, 1.1597000000002078e-05, 1.1305999999999122e-05, 1.1000000000000593e-05, 1.1568999999999469e-05, 1.1236000000001273e-05, 1.1263999999996943e-05, 1.1291999999999552e-05, 1.0971999999997983e-05, 1.1639000000000788e-05]</msg>
<status status="PASS" starttime="20201030 15:52:14.823" endtime="20201030 15:52:14.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.818" endtime="20201030 15:52:14.826"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:14.830" endtime="20201030 15:52:14.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.829" endtime="20201030 15:52:14.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.827" endtime="20201030 15:52:14.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.469" endtime="20201030 15:52:14.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.468" endtime="20201030 15:52:14.851"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.859" endtime="20201030 15:52:14.874"></status>
</kw>
<msg timestamp="20201030 15:52:14.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.858" endtime="20201030 15:52:14.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.875" endtime="20201030 15:52:14.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.878" endtime="20201030 15:52:14.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.855" endtime="20201030 15:52:14.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.853" endtime="20201030 15:52:14.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.887" endtime="20201030 15:52:15.171"></status>
</kw>
<msg timestamp="20201030 15:52:15.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021833486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021845625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.885" endtime="20201030 15:52:15.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021833486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021845625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.175" endtime="20201030 15:52:15.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.184" endtime="20201030 15:52:15.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.883" endtime="20201030 15:52:15.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.881" endtime="20201030 15:52:15.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:15.190" level="INFO">${RESULT} = [{'diff': 1.2139000000001288e-05}, {'diff': 1.1901999999997664e-05}, {'diff': 1.2528000000001233e-05}, {'diff': 1.2500000000002093e-05}, {'diff': 1.1652000000000884e-05}, {'diff': 1.2194000000000094e-...</msg>
<status status="PASS" starttime="20201030 15:52:15.187" endtime="20201030 15:52:15.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:15.195" level="INFO">${ACCURACY} = {'diff': [1.2139000000001288e-05, 1.1901999999997664e-05, 1.2528000000001233e-05, 1.2500000000002093e-05, 1.1652000000000884e-05, 1.2194000000000094e-05, 1.2194000000000094e-05, 1.2208999999999137e-05...</msg>
<status status="PASS" starttime="20201030 15:52:15.191" endtime="20201030 15:52:15.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.200" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 15:52:15.199" endtime="20201030 15:52:15.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.202" level="INFO">VALUE: [1.2139000000001288e-05, 1.1901999999997664e-05, 1.2528000000001233e-05, 1.2500000000002093e-05, 1.1652000000000884e-05, 1.2194000000000094e-05, 1.2194000000000094e-05, 1.2208999999999137e-05, 1.2139000000001288e-05, 1.2207999999999664e-05, 1.2249999999998373e-05, 1.2194999999999567e-05, 1.2221999999999233e-05, 1.2514000000001663e-05, 1.1874999999997998e-05, 1.2500000000002093e-05, 1.2583000000000039e-05, 1.2194999999999567e-05, 1.1597999999998082e-05, 1.1582999999999039e-05, 1.2125000000001718e-05, 1.2499999999998623e-05, 1.2194999999999567e-05, 1.1596999999998608e-05, 1.2194000000000094e-05, 1.1596999999998608e-05, 1.2194000000000094e-05, 1.2208000000003133e-05, 1.1597000000002078e-05, 1.1653000000000358e-05, 1.2194999999999567e-05, 1.2221999999999233e-05, 1.2180000000000524e-05, 1.2457999999999914e-05, 1.2500000000002093e-05, 1.2180999999999997e-05, 1.1596999999998608e-05, 1.2499999999998623e-05, 1.2499999999998623e-05, 1.2138999999997818e-05, 1.2194000000000094e-05, 1.2457999999999914e-05, 1.2472000000002953e-05, 1.1597000000002078e-05, 1.2194000000000094e-05, 1.2528000000001233e-05, 1.2249999999998373e-05, 1.2194000000000094e-05, 1.1584000000001982e-05, 1.2514000000001663e-05]</msg>
<status status="PASS" starttime="20201030 15:52:15.201" endtime="20201030 15:52:15.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.196" endtime="20201030 15:52:15.204"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:15.207" endtime="20201030 15:52:15.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.206" endtime="20201030 15:52:15.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.205" endtime="20201030 15:52:15.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.852" endtime="20201030 15:52:15.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.851" endtime="20201030 15:52:15.228"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.237" endtime="20201030 15:52:15.252"></status>
</kw>
<msg timestamp="20201030 15:52:15.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.235" endtime="20201030 15:52:15.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.253" endtime="20201030 15:52:15.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.256" endtime="20201030 15:52:15.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.232" endtime="20201030 15:52:15.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.230" endtime="20201030 15:52:15.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.265" endtime="20201030 15:52:15.551"></status>
</kw>
<msg timestamp="20201030 15:52:15.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021695931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021709319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.263" endtime="20201030 15:52:15.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021695931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021709319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.555" endtime="20201030 15:52:15.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.563" endtime="20201030 15:52:15.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.261" endtime="20201030 15:52:15.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.259" endtime="20201030 15:52:15.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:15.570" level="INFO">${RESULT} = [{'diff': 1.3387999999999595e-05}, {'diff': 1.2791999999997583e-05}, {'diff': 1.3402999999998638e-05}, {'diff': 1.3097000000000109e-05}, {'diff': 1.3443999999997874e-05}, {'diff': 1.3124999999999248e-...</msg>
<status status="PASS" starttime="20201030 15:52:15.567" endtime="20201030 15:52:15.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:15.574" level="INFO">${ACCURACY} = {'diff': [1.3387999999999595e-05, 1.2791999999997583e-05, 1.3402999999998638e-05, 1.3097000000000109e-05, 1.3443999999997874e-05, 1.3124999999999248e-05, 1.3097000000000109e-05, 1.3124999999999248e-05...</msg>
<status status="PASS" starttime="20201030 15:52:15.571" endtime="20201030 15:52:15.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.578" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 15:52:15.577" endtime="20201030 15:52:15.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.581" level="INFO">VALUE: [1.3387999999999595e-05, 1.2791999999997583e-05, 1.3402999999998638e-05, 1.3097000000000109e-05, 1.3443999999997874e-05, 1.3124999999999248e-05, 1.3097000000000109e-05, 1.3124999999999248e-05, 1.3097000000000109e-05, 1.3124999999999248e-05, 1.3443999999997874e-05, 1.3137999999999345e-05, 1.3431000000001247e-05, 1.3097000000000109e-05, 1.3403000000002108e-05, 1.2819000000000719e-05, 1.2472999999998957e-05, 1.2485999999999053e-05, 1.3445000000000817e-05, 1.3137999999999345e-05, 1.2528000000001233e-05, 1.3430000000001774e-05, 1.3110999999999678e-05, 1.2805000000001149e-05, 1.3097000000000109e-05, 1.3124999999999248e-05, 1.3417000000001678e-05, 1.3431000000001247e-05, 1.3097999999999582e-05, 1.3430000000001774e-05, 1.3124999999999248e-05, 1.3167000000001428e-05, 1.3444000000001344e-05, 1.3124999999999248e-05, 1.3124999999999248e-05, 1.3417000000001678e-05, 1.3429999999998304e-05, 1.3374999999999498e-05, 1.3138999999998818e-05, 1.3097999999999582e-05, 1.3415999999998734e-05, 1.3430999999997778e-05, 1.3110999999999678e-05, 1.3110999999999678e-05, 1.3416999999998208e-05, 1.3431000000001247e-05, 1.3430999999997778e-05, 1.3097000000000109e-05, 1.3125000000002718e-05, 1.2500000000002093e-05]</msg>
<status status="PASS" starttime="20201030 15:52:15.579" endtime="20201030 15:52:15.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.575" endtime="20201030 15:52:15.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:15.586" endtime="20201030 15:52:15.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.584" endtime="20201030 15:52:15.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.583" endtime="20201030 15:52:15.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.229" endtime="20201030 15:52:15.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.228" endtime="20201030 15:52:15.606"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.615" endtime="20201030 15:52:15.631"></status>
</kw>
<msg timestamp="20201030 15:52:15.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.614" endtime="20201030 15:52:15.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.633" endtime="20201030 15:52:15.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.637" endtime="20201030 15:52:15.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.611" endtime="20201030 15:52:15.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.609" endtime="20201030 15:52:15.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.648" endtime="20201030 15:52:15.934"></status>
</kw>
<msg timestamp="20201030 15:52:15.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022568292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022582625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.647" endtime="20201030 15:52:15.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022568292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022582625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.938" endtime="20201030 15:52:15.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.946" endtime="20201030 15:52:15.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.644" endtime="20201030 15:52:15.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.642" endtime="20201030 15:52:15.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:15.953" level="INFO">${RESULT} = [{'diff': 1.433299999999832e-05}, {'diff': 1.402699999999979e-05}, {'diff': 1.4347000000001359e-05}, {'diff': 1.4291999999999083e-05}, {'diff': 1.4028000000002733e-05}, {'diff': 1.3749999999999873e-05...</msg>
<status status="PASS" starttime="20201030 15:52:15.950" endtime="20201030 15:52:15.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:15.957" level="INFO">${ACCURACY} = {'diff': [1.433299999999832e-05, 1.402699999999979e-05, 1.4347000000001359e-05, 1.4291999999999083e-05, 1.4028000000002733e-05, 1.3749999999999873e-05, 1.4652999999999888e-05, 1.433299999999832e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:52:15.954" endtime="20201030 15:52:15.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.961" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 15:52:15.960" endtime="20201030 15:52:15.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.965" level="INFO">VALUE: [1.433299999999832e-05, 1.402699999999979e-05, 1.4347000000001359e-05, 1.4291999999999083e-05, 1.4028000000002733e-05, 1.3749999999999873e-05, 1.4652999999999888e-05, 1.433299999999832e-05, 1.433299999999832e-05, 1.4334000000001262e-05, 1.4333000000001789e-05, 1.4583999999998043e-05, 1.4320000000001692e-05, 1.4625000000000749e-05, 1.4375000000000498e-05, 1.4320000000001692e-05, 1.3957999999997944e-05, 1.4334000000001262e-05, 1.3723000000000207e-05, 1.4415999999999735e-05, 1.433299999999832e-05, 1.4277999999999513e-05, 1.4250000000000373e-05, 1.4666999999999458e-05, 1.4374999999997029e-05, 1.4625000000000749e-05, 1.4306000000002123e-05, 1.4389000000000068e-05, 1.4639000000000318e-05, 1.433299999999832e-05, 1.4333999999997793e-05, 1.4319999999998223e-05, 1.3735999999996834e-05, 1.433299999999832e-05, 1.4652000000000415e-05, 1.434699999999789e-05, 1.4638000000000845e-05, 1.4347000000001359e-05, 1.4333000000001789e-05, 1.3986000000000554e-05, 1.433299999999832e-05, 1.4333999999997793e-05, 1.4014000000003163e-05, 1.4347000000001359e-05, 1.4334000000001262e-05, 1.4360999999997459e-05, 1.4652999999999888e-05, 1.4027999999999263e-05, 1.4639000000000318e-05, 1.4638999999996849e-05]</msg>
<status status="PASS" starttime="20201030 15:52:15.963" endtime="20201030 15:52:16.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.958" endtime="20201030 15:52:16.002"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:16.006" endtime="20201030 15:52:16.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.005" endtime="20201030 15:52:16.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.003" endtime="20201030 15:52:16.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.607" endtime="20201030 15:52:16.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.607" endtime="20201030 15:52:16.027"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.035" endtime="20201030 15:52:16.050"></status>
</kw>
<msg timestamp="20201030 15:52:16.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.034" endtime="20201030 15:52:16.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.052" endtime="20201030 15:52:16.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.054" endtime="20201030 15:52:16.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.031" endtime="20201030 15:52:16.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.029" endtime="20201030 15:52:16.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.063" endtime="20201030 15:52:16.348"></status>
</kw>
<msg timestamp="20201030 15:52:16.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021702583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021718139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.062" endtime="20201030 15:52:16.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021702583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021718139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.353" endtime="20201030 15:52:16.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.361" endtime="20201030 15:52:16.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.059" endtime="20201030 15:52:16.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.057" endtime="20201030 15:52:16.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:16.367" level="INFO">${RESULT} = [{'diff': 1.5555999999999903e-05}, {'diff': 1.4958000000002414e-05}, {'diff': 1.5583999999999043e-05}, {'diff': 1.5513999999997724e-05}, {'diff': 1.5555999999999903e-05}, {'diff': 1.4972000000001984e-...</msg>
<status status="PASS" starttime="20201030 15:52:16.364" endtime="20201030 15:52:16.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:16.372" level="INFO">${ACCURACY} = {'diff': [1.5555999999999903e-05, 1.4958000000002414e-05, 1.5583999999999043e-05, 1.5513999999997724e-05, 1.5555999999999903e-05, 1.4972000000001984e-05, 1.5570000000002943e-05, 1.5263999999997474e-05...</msg>
<status status="PASS" starttime="20201030 15:52:16.368" endtime="20201030 15:52:16.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.377" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 15:52:16.376" endtime="20201030 15:52:16.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.379" level="INFO">VALUE: [1.5555999999999903e-05, 1.4958000000002414e-05, 1.5583999999999043e-05, 1.5513999999997724e-05, 1.5555999999999903e-05, 1.4972000000001984e-05, 1.5570000000002943e-05, 1.5263999999997474e-05, 1.4625000000000749e-05, 1.5569e-05, 1.5236000000001804e-05, 1.5569999999999473e-05, 1.5250000000001374e-05, 1.527700000000104e-05, 1.5264000000000943e-05, 1.5250000000001374e-05, 1.5264000000000943e-05, 1.4639000000000318e-05, 1.5263999999997474e-05, 1.5264000000000943e-05, 1.4652999999999888e-05, 1.5500000000001624e-05, 1.4929999999999805e-05, 1.5250000000001374e-05, 1.5264000000000943e-05, 1.5263999999997474e-05, 1.4652999999999888e-05, 1.4652999999999888e-05, 1.5499999999998154e-05, 1.5249999999997904e-05, 1.5569e-05, 1.5555999999999903e-05, 1.5569999999999473e-05, 1.4944999999998848e-05, 1.4652999999999888e-05, 1.5249999999997904e-05, 1.5264000000000943e-05, 1.5250000000001374e-05, 1.4945000000002318e-05, 1.5584000000002513e-05, 1.5250000000001374e-05, 1.5250000000001374e-05, 1.5222000000002234e-05, 1.5264000000000943e-05, 1.5542000000000333e-05, 1.5250000000001374e-05, 1.5264000000000943e-05, 1.4929999999999805e-05, 1.5249999999997904e-05, 1.5263999999997474e-05]</msg>
<status status="PASS" starttime="20201030 15:52:16.378" endtime="20201030 15:52:16.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.373" endtime="20201030 15:52:16.381"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:16.384" endtime="20201030 15:52:16.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.383" endtime="20201030 15:52:16.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.382" endtime="20201030 15:52:16.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.028" endtime="20201030 15:52:16.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.027" endtime="20201030 15:52:16.405"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.414" endtime="20201030 15:52:16.429"></status>
</kw>
<msg timestamp="20201030 15:52:16.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.412" endtime="20201030 15:52:16.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.430" endtime="20201030 15:52:16.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.433" endtime="20201030 15:52:16.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.410" endtime="20201030 15:52:16.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.408" endtime="20201030 15:52:16.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.442" endtime="20201030 15:52:16.732"></status>
</kw>
<msg timestamp="20201030 15:52:16.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022095194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022112014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.440" endtime="20201030 15:52:16.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022095194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022112014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.737" endtime="20201030 15:52:16.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.747" endtime="20201030 15:52:16.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.438" endtime="20201030 15:52:16.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.436" endtime="20201030 15:52:16.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:16.755" level="INFO">${RESULT} = [{'diff': 1.6820000000000723e-05}, {'diff': 1.6181000000000528e-05}, {'diff': 1.6472000000000014e-05}, {'diff': 1.615300000000139e-05}, {'diff': 1.5569e-05}, {'diff': 1.6486999999999058e-05}, {'diff':...</msg>
<status status="PASS" starttime="20201030 15:52:16.751" endtime="20201030 15:52:16.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:16.760" level="INFO">${ACCURACY} = {'diff': [1.6820000000000723e-05, 1.6181000000000528e-05, 1.6472000000000014e-05, 1.615300000000139e-05, 1.5569e-05, 1.6486999999999058e-05, 1.6555999999997434e-05, 1.6208000000000194e-05, 1.648599999...</msg>
<status status="PASS" starttime="20201030 15:52:16.756" endtime="20201030 15:52:16.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.765" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 15:52:16.764" endtime="20201030 15:52:16.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.768" level="INFO">VALUE: [1.6820000000000723e-05, 1.6181000000000528e-05, 1.6472000000000014e-05, 1.615300000000139e-05, 1.5569e-05, 1.6486999999999058e-05, 1.6555999999997434e-05, 1.6208000000000194e-05, 1.6485999999999584e-05, 1.616700000000096e-05, 1.6166000000001485e-05, 1.6472000000000014e-05, 1.6485999999999584e-05, 1.6181000000000528e-05, 1.616700000000096e-05, 1.6472000000000014e-05, 1.6152000000001915e-05, 1.586099999999896e-05, 1.6444000000000875e-05, 1.6181000000000528e-05, 1.6221999999999764e-05, 1.6151999999998445e-05, 1.6472000000000014e-05, 1.616699999999749e-05, 1.5569e-05, 1.6472000000000014e-05, 1.616700000000096e-05, 1.5861999999998433e-05, 1.6180000000001055e-05, 1.6166000000001485e-05, 1.6473000000002957e-05, 1.5542000000000333e-05, 1.6499999999999154e-05, 1.6472999999999488e-05, 1.615300000000139e-05, 1.6194000000000625e-05, 1.587499999999853e-05, 1.6472000000000014e-05, 1.616700000000096e-05, 1.616700000000096e-05, 1.6179999999997585e-05, 1.616700000000096e-05, 1.6472000000000014e-05, 1.5542000000000333e-05, 1.6138000000002345e-05, 1.615300000000139e-05, 1.6485999999999584e-05, 1.6472000000000014e-05, 1.611099999999921e-05, 1.6195000000000098e-05]</msg>
<status status="PASS" starttime="20201030 15:52:16.766" endtime="20201030 15:52:16.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.762" endtime="20201030 15:52:16.769"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:16.773" endtime="20201030 15:52:16.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.771" endtime="20201030 15:52:16.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.770" endtime="20201030 15:52:16.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.406" endtime="20201030 15:52:16.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.406" endtime="20201030 15:52:16.793"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.802" endtime="20201030 15:52:16.817"></status>
</kw>
<msg timestamp="20201030 15:52:16.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.800" endtime="20201030 15:52:16.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.819" endtime="20201030 15:52:16.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.821" endtime="20201030 15:52:16.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.798" endtime="20201030 15:52:16.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.796" endtime="20201030 15:52:16.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.830" endtime="20201030 15:52:17.116"></status>
</kw>
<msg timestamp="20201030 15:52:17.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022584806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022602181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.829" endtime="20201030 15:52:17.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022584806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022602181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.121" endtime="20201030 15:52:17.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.129" endtime="20201030 15:52:17.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.826" endtime="20201030 15:52:17.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.825" endtime="20201030 15:52:17.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:17.136" level="INFO">${RESULT} = [{'diff': 1.737500000000003e-05}, {'diff': 1.683300000000082e-05}, {'diff': 1.7415999999999265e-05}, {'diff': 1.679099999999864e-05}, {'diff': 1.7388000000000126e-05}, {'diff': 1.7472000000001014e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:17.133" endtime="20201030 15:52:17.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:17.140" level="INFO">${ACCURACY} = {'diff': [1.737500000000003e-05, 1.683300000000082e-05, 1.7415999999999265e-05, 1.679099999999864e-05, 1.7388000000000126e-05, 1.7472000000001014e-05, 1.73889999999996e-05, 1.709700000000064e-05, 1.70...</msg>
<status status="PASS" starttime="20201030 15:52:17.137" endtime="20201030 15:52:17.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.145" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 15:52:17.144" endtime="20201030 15:52:17.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.148" level="INFO">VALUE: [1.737500000000003e-05, 1.683300000000082e-05, 1.7415999999999265e-05, 1.679099999999864e-05, 1.7388000000000126e-05, 1.7472000000001014e-05, 1.73889999999996e-05, 1.709700000000064e-05, 1.7084000000000543e-05, 1.73889999999996e-05, 1.740299999999917e-05, 1.7098000000000113e-05, 1.7084000000000543e-05, 1.7084000000000543e-05, 1.6736000000003304e-05, 1.740300000000264e-05, 1.737500000000003e-05, 1.737500000000003e-05, 1.6777999999998544e-05, 1.73889999999996e-05, 1.7401999999999695e-05, 1.6792000000001583e-05, 1.706899999999803e-05, 1.73889999999996e-05, 1.740299999999917e-05, 1.708300000000107e-05, 1.73889999999996e-05, 1.733300000000132e-05, 1.711100000000021e-05, 1.7098000000000113e-05, 1.712499999999978e-05, 1.6778000000002014e-05, 1.6778000000002014e-05, 1.7056000000001403e-05, 1.740299999999917e-05, 1.7098000000000113e-05, 1.7388000000000126e-05, 1.709699999999717e-05, 1.709700000000064e-05, 1.708300000000107e-05, 1.73889999999996e-05, 1.70829999999976e-05, 1.744500000000135e-05, 1.702699999999932e-05, 1.711100000000021e-05, 1.6777999999998544e-05, 1.73889999999996e-05, 1.737500000000003e-05, 1.708300000000107e-05, 1.740299999999917e-05]</msg>
<status status="PASS" starttime="20201030 15:52:17.146" endtime="20201030 15:52:17.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.141" endtime="20201030 15:52:17.150"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:17.154" endtime="20201030 15:52:17.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.152" endtime="20201030 15:52:17.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.151" endtime="20201030 15:52:17.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.794" endtime="20201030 15:52:17.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.794" endtime="20201030 15:52:17.175"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.184" endtime="20201030 15:52:17.198"></status>
</kw>
<msg timestamp="20201030 15:52:17.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.182" endtime="20201030 15:52:17.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.200" endtime="20201030 15:52:17.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.202" endtime="20201030 15:52:17.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.179" endtime="20201030 15:52:17.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.177" endtime="20201030 15:52:17.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.212" endtime="20201030 15:52:17.498"></status>
</kw>
<msg timestamp="20201030 15:52:17.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022201083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022219972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.210" endtime="20201030 15:52:17.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022201083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022219972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.503" endtime="20201030 15:52:17.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.511" endtime="20201030 15:52:17.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.208" endtime="20201030 15:52:17.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.206" endtime="20201030 15:52:17.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:17.518" level="INFO">${RESULT} = [{'diff': 1.88890000000011e-05}, {'diff': 1.8000000000000654e-05}, {'diff': 1.831899999999928e-05}, {'diff': 1.830499999999971e-05}, {'diff': 1.8000000000000654e-05}, {'diff': 1.830499999999971e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:17.515" endtime="20201030 15:52:17.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:17.523" level="INFO">${ACCURACY} = {'diff': [1.88890000000011e-05, 1.8000000000000654e-05, 1.831899999999928e-05, 1.830499999999971e-05, 1.8000000000000654e-05, 1.830499999999971e-05, 1.80829999999986e-05, 1.831900000000275e-05, 1.7694...</msg>
<status status="PASS" starttime="20201030 15:52:17.519" endtime="20201030 15:52:17.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.528" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 15:52:17.527" endtime="20201030 15:52:17.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.530" level="INFO">VALUE: [1.88890000000011e-05, 1.8000000000000654e-05, 1.831899999999928e-05, 1.830499999999971e-05, 1.8000000000000654e-05, 1.830499999999971e-05, 1.80829999999986e-05, 1.831900000000275e-05, 1.7694000000002125e-05, 1.861100000000171e-05, 1.8305999999999184e-05, 1.862499999999781e-05, 1.8333999999998324e-05, 1.7679999999999085e-05, 1.7999999999997185e-05, 1.8319999999998754e-05, 1.7721999999997795e-05, 1.862500000000128e-05, 1.8305999999999184e-05, 1.831899999999928e-05, 1.8319999999998754e-05, 1.8319999999998754e-05, 1.7693999999998655e-05, 1.7986000000001084e-05, 1.830499999999971e-05, 1.838899999999713e-05, 1.862500000000128e-05, 1.8291999999999614e-05, 1.863900000000085e-05, 1.833300000000232e-05, 1.794500000000185e-05, 1.8612000000001183e-05, 1.830499999999971e-05, 1.830499999999971e-05, 1.8305999999999184e-05, 1.7986000000001084e-05, 1.8319999999998754e-05, 1.861100000000171e-05, 1.861100000000171e-05, 1.830499999999971e-05, 1.862499999999781e-05, 1.830499999999971e-05, 1.830499999999971e-05, 1.8000000000000654e-05, 1.8027999999999794e-05, 1.8306000000002653e-05, 1.862500000000128e-05, 1.8014000000000224e-05, 1.831899999999928e-05, 1.831899999999928e-05]</msg>
<status status="PASS" starttime="20201030 15:52:17.529" endtime="20201030 15:52:17.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.524" endtime="20201030 15:52:17.532"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:17.537" endtime="20201030 15:52:17.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.534" endtime="20201030 15:52:17.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.533" endtime="20201030 15:52:17.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.176" endtime="20201030 15:52:17.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.175" endtime="20201030 15:52:17.562"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.582" endtime="20201030 15:52:17.600"></status>
</kw>
<msg timestamp="20201030 15:52:17.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.578" endtime="20201030 15:52:17.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.603" endtime="20201030 15:52:17.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.609" endtime="20201030 15:52:17.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.573" endtime="20201030 15:52:17.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.568" endtime="20201030 15:52:17.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.629" endtime="20201030 15:52:17.919"></status>
</kw>
<msg timestamp="20201030 15:52:17.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037857639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037876833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.626" endtime="20201030 15:52:17.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037857639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037876833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.923" endtime="20201030 15:52:17.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.932" endtime="20201030 15:52:17.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.620" endtime="20201030 15:52:17.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.616" endtime="20201030 15:52:17.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:17.939" level="INFO">${RESULT} = [{'diff': 1.9194000000000155e-05}, {'diff': 1.9541999999997395e-05}, {'diff': 1.9264000000004944e-05}, {'diff': 1.9249999999998435e-05}, {'diff': 1.9221999999999295e-05}, {'diff': 1.9221999999999295e-...</msg>
<status status="PASS" starttime="20201030 15:52:17.935" endtime="20201030 15:52:17.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:17.943" level="INFO">${ACCURACY} = {'diff': [1.9194000000000155e-05, 1.9541999999997395e-05, 1.9264000000004944e-05, 1.9249999999998435e-05, 1.9221999999999295e-05, 1.9221999999999295e-05, 1.9541999999997395e-05, 1.9221999999999295e-05...</msg>
<status status="PASS" starttime="20201030 15:52:17.940" endtime="20201030 15:52:17.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.948" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 15:52:17.947" endtime="20201030 15:52:17.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.950" level="INFO">VALUE: [1.9194000000000155e-05, 1.9541999999997395e-05, 1.9264000000004944e-05, 1.9249999999998435e-05, 1.9221999999999295e-05, 1.9221999999999295e-05, 1.9541999999997395e-05, 1.9221999999999295e-05, 1.954099999999792e-05, 1.8943999999999905e-05, 1.9514000000005194e-05, 1.9235999999998865e-05, 1.952699999999835e-05, 1.9207999999999725e-05, 1.9236000000005804e-05, 1.952700000000529e-05, 1.9541999999997395e-05, 1.926299999999853e-05, 1.952700000000529e-05, 1.9180000000000585e-05, 1.890300000000067e-05, 1.862500000000128e-05, 1.862500000000128e-05, 1.9513999999998255e-05, 1.9207999999999725e-05, 1.9221999999999295e-05, 1.9207999999999725e-05, 1.95969999999962e-05, 1.9209000000006138e-05, 1.954100000000486e-05, 1.9221999999999295e-05, 1.861100000000171e-05, 1.9264000000004944e-05, 1.916700000000049e-05, 1.9207999999999725e-05, 1.9513999999998255e-05, 1.9528000000004764e-05, 1.9527999999997825e-05, 1.9500000000005624e-05, 1.951299999999878e-05, 1.9570000000003474e-05, 1.9527999999997825e-05, 1.9207999999999725e-05, 1.9249999999998435e-05, 1.955499999999749e-05, 1.9235999999998865e-05, 1.9527999999997825e-05, 1.887500000000153e-05, 1.861099999999477e-05, 1.944499999999988e-05]</msg>
<status status="PASS" starttime="20201030 15:52:17.949" endtime="20201030 15:52:17.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.944" endtime="20201030 15:52:17.952"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:17.956" endtime="20201030 15:52:17.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.954" endtime="20201030 15:52:17.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.953" endtime="20201030 15:52:17.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.565" endtime="20201030 15:52:17.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.563" endtime="20201030 15:52:17.976"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.985" endtime="20201030 15:52:18.001"></status>
</kw>
<msg timestamp="20201030 15:52:18.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.984" endtime="20201030 15:52:18.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.003" endtime="20201030 15:52:18.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.005" endtime="20201030 15:52:18.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.981" endtime="20201030 15:52:18.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.979" endtime="20201030 15:52:18.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.015" endtime="20201030 15:52:18.302"></status>
</kw>
<msg timestamp="20201030 15:52:18.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023312208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023332625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.013" endtime="20201030 15:52:18.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023312208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023332625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.306" endtime="20201030 15:52:18.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.315" endtime="20201030 15:52:18.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.011" endtime="20201030 15:52:18.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.009" endtime="20201030 15:52:18.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:18.322" level="INFO">${RESULT} = [{'diff': 2.041699999999827e-05}, {'diff': 1.983300000000035e-05}, {'diff': 2.012499999999931e-05}, {'diff': 2.0486000000000115e-05}, {'diff': 2.0430000000001836e-05}, {'diff': 2.0444000000001405e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:18.319" endtime="20201030 15:52:18.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:18.326" level="INFO">${ACCURACY} = {'diff': [2.041699999999827e-05, 1.983300000000035e-05, 2.012499999999931e-05, 2.0486000000000115e-05, 2.0430000000001836e-05, 2.0444000000001405e-05, 2.015299999999845e-05, 2.038899999999913e-05, 1.9...</msg>
<status status="PASS" starttime="20201030 15:52:18.323" endtime="20201030 15:52:18.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.331" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 15:52:18.330" endtime="20201030 15:52:18.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.333" level="INFO">VALUE: [2.041699999999827e-05, 1.983300000000035e-05, 2.012499999999931e-05, 2.0486000000000115e-05, 2.0430000000001836e-05, 2.0444000000001405e-05, 2.015299999999845e-05, 2.038899999999913e-05, 1.984699999999992e-05, 2.0513999999999255e-05, 2.044500000000088e-05, 2.044500000000088e-05, 2.016700000000149e-05, 2.0151999999998976e-05, 2.038899999999913e-05, 1.9833999999999824e-05, 2.044500000000088e-05, 2.0443999999997936e-05, 1.954100000000139e-05, 2.016700000000149e-05, 2.012499999999931e-05, 1.955499999999749e-05, 1.9833999999999824e-05, 2.013899999999888e-05, 2.015300000000192e-05, 2.013899999999888e-05, 2.043099999999784e-05, 2.0137999999999406e-05, 2.044500000000088e-05, 2.0444000000001405e-05, 2.015300000000192e-05, 2.0165999999998546e-05, 2.0458000000000975e-05, 2.0457999999997506e-05, 1.980499999999774e-05, 2.012499999999931e-05, 2.044499999999741e-05, 2.047300000000002e-05, 2.0458000000000975e-05, 2.0152000000002446e-05, 2.0457999999997506e-05, 1.9833999999999824e-05, 2.015299999999845e-05, 2.0444000000001405e-05, 2.0429999999998366e-05, 2.015299999999845e-05, 2.0430000000001836e-05, 2.037500000000303e-05, 2.011099999999974e-05, 1.9847999999999394e-05]</msg>
<status status="PASS" starttime="20201030 15:52:18.332" endtime="20201030 15:52:18.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.327" endtime="20201030 15:52:18.336"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:18.340" endtime="20201030 15:52:18.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.338" endtime="20201030 15:52:18.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.337" endtime="20201030 15:52:18.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.977" endtime="20201030 15:52:18.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.977" endtime="20201030 15:52:18.361"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.370" endtime="20201030 15:52:18.385"></status>
</kw>
<msg timestamp="20201030 15:52:18.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.368" endtime="20201030 15:52:18.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.387" endtime="20201030 15:52:18.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.389" endtime="20201030 15:52:18.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.366" endtime="20201030 15:52:18.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.363" endtime="20201030 15:52:18.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.399" endtime="20201030 15:52:18.685"></status>
</kw>
<msg timestamp="20201030 15:52:18.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022776153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022798097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.397" endtime="20201030 15:52:18.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022776153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022798097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.689" endtime="20201030 15:52:18.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.698" endtime="20201030 15:52:18.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.394" endtime="20201030 15:52:18.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.393" endtime="20201030 15:52:18.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:18.705" level="INFO">${RESULT} = [{'diff': 2.1943999999999436e-05}, {'diff': 2.0764000000002975e-05}, {'diff': 2.1319999999998285e-05}, {'diff': 2.0722000000000795e-05}, {'diff': 2.112500000000031e-05}, {'diff': 2.0820000000001254e-0...</msg>
<status status="PASS" starttime="20201030 15:52:18.701" endtime="20201030 15:52:18.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:18.710" level="INFO">${ACCURACY} = {'diff': [2.1943999999999436e-05, 2.0764000000002975e-05, 2.1319999999998285e-05, 2.0722000000000795e-05, 2.112500000000031e-05, 2.0820000000001254e-05, 2.1362000000000464e-05, 2.136100000000099e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:18.706" endtime="20201030 15:52:18.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.715" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 15:52:18.714" endtime="20201030 15:52:18.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.717" level="INFO">VALUE: [2.1943999999999436e-05, 2.0764000000002975e-05, 2.1319999999998285e-05, 2.0722000000000795e-05, 2.112500000000031e-05, 2.0820000000001254e-05, 2.1362000000000464e-05, 2.136100000000099e-05, 2.0791999999998645e-05, 2.0735999999996896e-05, 2.106899999999856e-05, 2.137500000000056e-05, 2.108299999999813e-05, 2.137500000000056e-05, 2.1334000000001324e-05, 2.131900000000228e-05, 2.136100000000099e-05, 2.1084000000001074e-05, 2.134700000000142e-05, 2.137499999999709e-05, 2.134700000000142e-05, 2.137499999999709e-05, 2.0749999999999935e-05, 2.1041999999998895e-05, 2.1666000000000046e-05, 2.137499999999709e-05, 2.1708000000002226e-05, 2.137500000000056e-05, 2.136100000000099e-05, 2.1666000000000046e-05, 2.131899999999881e-05, 2.138900000000013e-05, 2.137500000000056e-05, 2.0749999999999935e-05, 2.136099999999752e-05, 2.133299999999838e-05, 2.134700000000142e-05, 2.1084000000001074e-05, 2.1069999999998035e-05, 2.1415999999999796e-05, 2.137500000000056e-05, 2.134700000000142e-05, 2.1070000000001504e-05, 2.136099999999752e-05, 2.112500000000031e-05, 2.0777999999999075e-05, 2.1056000000001934e-05, 2.137500000000056e-05, 2.0763999999999505e-05, 2.134699999999795e-05]</msg>
<status status="PASS" starttime="20201030 15:52:18.716" endtime="20201030 15:52:18.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.711" endtime="20201030 15:52:18.719"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:18.723" endtime="20201030 15:52:18.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.721" endtime="20201030 15:52:18.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.720" endtime="20201030 15:52:18.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.362" endtime="20201030 15:52:18.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.361" endtime="20201030 15:52:18.743"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.753" endtime="20201030 15:52:18.768"></status>
</kw>
<msg timestamp="20201030 15:52:18.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.751" endtime="20201030 15:52:18.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.769" endtime="20201030 15:52:18.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.772" endtime="20201030 15:52:18.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.748" endtime="20201030 15:52:18.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.746" endtime="20201030 15:52:18.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.782" endtime="20201030 15:52:19.070"></status>
</kw>
<msg timestamp="20201030 15:52:19.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022244847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022267722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.780" endtime="20201030 15:52:19.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022244847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022267722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.074" endtime="20201030 15:52:19.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.083" endtime="20201030 15:52:19.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.777" endtime="20201030 15:52:19.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.775" endtime="20201030 15:52:19.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:19.090" level="INFO">${RESULT} = [{'diff': 2.287499999999859e-05}, {'diff': 2.2278000000000575e-05}, {'diff': 2.2292000000000145e-05}, {'diff': 2.2250000000001435e-05}, {'diff': 2.1985999999998146e-05}, {'diff': 2.2250000000001435e-0...</msg>
<status status="PASS" starttime="20201030 15:52:19.087" endtime="20201030 15:52:19.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:19.094" level="INFO">${ACCURACY} = {'diff': [2.287499999999859e-05, 2.2278000000000575e-05, 2.2292000000000145e-05, 2.2250000000001435e-05, 2.1985999999998146e-05, 2.2250000000001435e-05, 2.2292000000000145e-05, 2.25969999999992e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:52:19.091" endtime="20201030 15:52:19.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.099" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 15:52:19.098" endtime="20201030 15:52:19.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.102" level="INFO">VALUE: [2.287499999999859e-05, 2.2278000000000575e-05, 2.2292000000000145e-05, 2.2250000000001435e-05, 2.1985999999998146e-05, 2.2250000000001435e-05, 2.2292000000000145e-05, 2.25969999999992e-05, 2.2292000000000145e-05, 2.230500000000024e-05, 2.2250000000001435e-05, 2.2278000000000575e-05, 2.258299999999963e-05, 2.258299999999963e-05, 2.2278000000000575e-05, 2.258299999999963e-05, 2.2249999999997966e-05, 2.2583999999999105e-05, 2.2276999999997632e-05, 2.2221999999998826e-05, 2.2319999999999285e-05, 2.1693999999999186e-05, 2.17090000000017e-05, 2.22770000000011e-05, 2.2278000000000575e-05, 2.1985999999998146e-05, 2.22770000000011e-05, 2.1707999999998756e-05, 2.255500000000049e-05, 2.2277999999997106e-05, 2.2000000000001185e-05, 2.2278000000000575e-05, 2.2528000000000825e-05, 2.1944000000002906e-05, 2.2278000000000575e-05, 2.25969999999992e-05, 2.2319999999999285e-05, 2.2278000000000575e-05, 2.1707999999998756e-05, 2.266700000000052e-05, 2.2292000000000145e-05, 2.2264000000001005e-05, 2.2264000000001005e-05, 2.2292000000000145e-05, 2.231899999999981e-05, 2.166699999999952e-05, 2.2278000000000575e-05, 2.1986000000001615e-05, 2.2264000000001005e-05, 2.2277999999997106e-05]</msg>
<status status="PASS" starttime="20201030 15:52:19.100" endtime="20201030 15:52:19.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.095" endtime="20201030 15:52:19.103"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:19.107" endtime="20201030 15:52:19.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.105" endtime="20201030 15:52:19.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.104" endtime="20201030 15:52:19.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.744" endtime="20201030 15:52:19.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.744" endtime="20201030 15:52:19.128"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.137" endtime="20201030 15:52:19.153"></status>
</kw>
<msg timestamp="20201030 15:52:19.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.135" endtime="20201030 15:52:19.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.155" endtime="20201030 15:52:19.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.158" endtime="20201030 15:52:19.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.133" endtime="20201030 15:52:19.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.130" endtime="20201030 15:52:19.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.167" endtime="20201030 15:52:19.453"></status>
</kw>
<msg timestamp="20201030 15:52:19.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023771778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023795333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.165" endtime="20201030 15:52:19.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023771778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023795333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.457" endtime="20201030 15:52:19.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.466" endtime="20201030 15:52:19.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.163" endtime="20201030 15:52:19.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.161" endtime="20201030 15:52:19.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:19.473" level="INFO">${RESULT} = [{'diff': 2.3554999999998022e-05}, {'diff': 2.319500000000016e-05}, {'diff': 2.3499999999999216e-05}, {'diff': 2.319500000000016e-05}, {'diff': 2.318099999999712e-05}, {'diff': 2.3208000000000256e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:19.469" endtime="20201030 15:52:19.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:19.477" level="INFO">${ACCURACY} = {'diff': [2.3554999999998022e-05, 2.319500000000016e-05, 2.3499999999999216e-05, 2.319500000000016e-05, 2.318099999999712e-05, 2.3208000000000256e-05, 2.3500000000002685e-05, 2.29030000000012e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 15:52:19.474" endtime="20201030 15:52:19.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.482" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 15:52:19.481" endtime="20201030 15:52:19.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.484" level="INFO">VALUE: [2.3554999999998022e-05, 2.319500000000016e-05, 2.3499999999999216e-05, 2.319500000000016e-05, 2.318099999999712e-05, 2.3208000000000256e-05, 2.3500000000002685e-05, 2.29030000000012e-05, 2.259700000000267e-05, 2.25830000000031e-05, 2.2665999999997577e-05, 2.3208000000000256e-05, 2.3208000000000256e-05, 2.3277999999998106e-05, 2.3485999999999646e-05, 2.25969999999992e-05, 2.3208000000000256e-05, 2.3221999999999826e-05, 2.3513999999998786e-05, 2.3180000000001116e-05, 2.3500000000002685e-05, 2.3499999999999216e-05, 2.3180000000001116e-05, 2.3500000000002685e-05, 2.3513999999998786e-05, 2.2847999999998925e-05, 2.3500000000002685e-05, 2.3263999999998536e-05, 2.3513999999998786e-05, 2.319500000000016e-05, 2.3263999999998536e-05, 2.25969999999992e-05, 2.3513999999998786e-05, 2.3292000000001145e-05, 2.320899999999973e-05, 2.3485999999999646e-05, 2.3235999999999396e-05, 2.319500000000016e-05, 2.3208000000000256e-05, 2.3278000000001575e-05, 2.320899999999973e-05, 2.319500000000016e-05, 2.2583999999999105e-05, 2.319500000000016e-05, 2.319500000000016e-05, 2.3499999999999216e-05, 2.351300000000278e-05, 2.288899999999816e-05, 2.287499999999859e-05, 2.3221999999999826e-05]</msg>
<status status="PASS" starttime="20201030 15:52:19.483" endtime="20201030 15:52:19.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.478" endtime="20201030 15:52:19.487"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:19.491" endtime="20201030 15:52:19.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.489" endtime="20201030 15:52:19.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.488" endtime="20201030 15:52:19.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.129" endtime="20201030 15:52:19.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.128" endtime="20201030 15:52:19.511"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.522" endtime="20201030 15:52:19.538"></status>
</kw>
<msg timestamp="20201030 15:52:19.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.519" endtime="20201030 15:52:19.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.540" endtime="20201030 15:52:19.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.543" endtime="20201030 15:52:19.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.516" endtime="20201030 15:52:19.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.514" endtime="20201030 15:52:19.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.552" endtime="20201030 15:52:19.839"></status>
</kw>
<msg timestamp="20201030 15:52:19.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024287931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024311958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.551" endtime="20201030 15:52:19.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024287931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024311958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.843" endtime="20201030 15:52:19.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.852" endtime="20201030 15:52:19.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.548" endtime="20201030 15:52:19.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.546" endtime="20201030 15:52:19.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:19.859" level="INFO">${RESULT} = [{'diff': 2.402700000000285e-05}, {'diff': 2.4111999999999745e-05}, {'diff': 2.415299999999898e-05}, {'diff': 2.3792000000001645e-05}, {'diff': 2.412499999999984e-05}, {'diff': 2.443100000000184e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:19.855" endtime="20201030 15:52:19.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:19.864" level="INFO">${ACCURACY} = {'diff': [2.402700000000285e-05, 2.4111999999999745e-05, 2.415299999999898e-05, 2.3792000000001645e-05, 2.412499999999984e-05, 2.443100000000184e-05, 2.4429999999998897e-05, 2.444499999999794e-05, 2.4...</msg>
<status status="PASS" starttime="20201030 15:52:19.860" endtime="20201030 15:52:19.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.869" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 15:52:19.868" endtime="20201030 15:52:19.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.871" level="INFO">VALUE: [2.402700000000285e-05, 2.4111999999999745e-05, 2.415299999999898e-05, 2.3792000000001645e-05, 2.412499999999984e-05, 2.443100000000184e-05, 2.4429999999998897e-05, 2.444499999999794e-05, 2.443099999999837e-05, 2.4721999999997857e-05, 2.40970000000007e-05, 2.437500000000009e-05, 2.3542000000001395e-05, 2.4458000000001506e-05, 2.40970000000007e-05, 2.411100000000027e-05, 2.441700000000227e-05, 2.4415999999999327e-05, 2.386100000000002e-05, 2.3804999999998272e-05, 2.412499999999984e-05, 2.4471999999997607e-05, 2.411100000000027e-05, 2.411100000000027e-05, 2.437500000000009e-05, 2.4098000000000175e-05, 2.440299999999923e-05, 2.4429999999998897e-05, 2.412499999999984e-05, 2.4415999999999327e-05, 2.443099999999837e-05, 2.4084000000000605e-05, 2.4402000000003227e-05, 2.441700000000227e-05, 2.411100000000027e-05, 2.418100000000159e-05, 2.412500000000331e-05, 2.412499999999984e-05, 2.4346999999997482e-05, 2.444500000000141e-05, 2.44169999999988e-05, 2.4777000000000132e-05, 2.4415999999999327e-05, 2.4458000000001506e-05, 2.408300000000113e-05, 2.3832999999997412e-05, 2.4513999999999786e-05, 2.4429999999998897e-05, 2.3778000000002075e-05, 2.4415999999999327e-05]</msg>
<status status="PASS" starttime="20201030 15:52:19.870" endtime="20201030 15:52:19.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.865" endtime="20201030 15:52:19.873"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:19.877" endtime="20201030 15:52:19.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.875" endtime="20201030 15:52:19.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.874" endtime="20201030 15:52:19.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.512" endtime="20201030 15:52:19.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.512" endtime="20201030 15:52:19.897"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.906" endtime="20201030 15:52:19.923"></status>
</kw>
<msg timestamp="20201030 15:52:19.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.905" endtime="20201030 15:52:19.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.924" endtime="20201030 15:52:19.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.927" endtime="20201030 15:52:19.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.902" endtime="20201030 15:52:19.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.900" endtime="20201030 15:52:19.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.937" endtime="20201030 15:52:20.225"></status>
</kw>
<msg timestamp="20201030 15:52:20.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022736958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022762583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.935" endtime="20201030 15:52:20.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022736958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022762583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.229" endtime="20201030 15:52:20.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.237" endtime="20201030 15:52:20.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.932" endtime="20201030 15:52:20.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.930" endtime="20201030 15:52:20.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:20.244" level="INFO">${RESULT} = [{'diff': 2.5624999999997872e-05}, {'diff': 2.4736000000000896e-05}, {'diff': 2.4722000000001326e-05}, {'diff': 2.534700000000195e-05}, {'diff': 2.5026999999996913e-05}, {'diff': 2.4707999999998287e-0...</msg>
<status status="PASS" starttime="20201030 15:52:20.241" endtime="20201030 15:52:20.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:20.249" level="INFO">${ACCURACY} = {'diff': [2.5624999999997872e-05, 2.4736000000000896e-05, 2.4722000000001326e-05, 2.534700000000195e-05, 2.5026999999996913e-05, 2.4707999999998287e-05, 2.5320000000002285e-05, 2.4735999999997427e-05,...</msg>
<status status="PASS" starttime="20201030 15:52:20.245" endtime="20201030 15:52:20.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.253" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 15:52:20.252" endtime="20201030 15:52:20.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.256" level="INFO">VALUE: [2.5624999999997872e-05, 2.4736000000000896e-05, 2.4722000000001326e-05, 2.534700000000195e-05, 2.5026999999996913e-05, 2.4707999999998287e-05, 2.5320000000002285e-05, 2.4735999999997427e-05, 2.5332999999998912e-05, 2.5334000000001855e-05, 2.5027999999999856e-05, 2.534700000000195e-05, 2.5027999999999856e-05, 2.5027999999999856e-05, 2.4777999999999606e-05, 2.5334000000001855e-05, 2.5027999999999856e-05, 2.562500000000134e-05, 2.5318999999999342e-05, 2.5264000000000536e-05, 2.5014000000000286e-05, 2.4749999999996997e-05, 2.55970000000022e-05, 2.5360999999998052e-05, 2.536100000000152e-05, 2.511100000000127e-05, 2.5651999999997538e-05, 2.5041999999999426e-05, 2.563900000000091e-05, 2.5332999999998912e-05, 2.565300000000048e-05, 2.5054999999999522e-05, 2.533300000000238e-05, 2.565300000000048e-05, 2.5040999999999952e-05, 2.534700000000195e-05, 2.5319999999998816e-05, 2.5346999999998482e-05, 2.537500000000109e-05, 2.4722000000001326e-05, 2.5056000000002465e-05, 2.5348000000001425e-05, 2.534700000000195e-05, 2.565300000000048e-05, 2.5027999999999856e-05, 2.538900000000066e-05, 2.5278000000000106e-05, 2.5263999999997067e-05, 2.4708000000001756e-05, 2.4736000000000896e-05]</msg>
<status status="PASS" starttime="20201030 15:52:20.255" endtime="20201030 15:52:20.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.250" endtime="20201030 15:52:20.257"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:20.261" endtime="20201030 15:52:20.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.260" endtime="20201030 15:52:20.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.258" endtime="20201030 15:52:20.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.898" endtime="20201030 15:52:20.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.898" endtime="20201030 15:52:20.282"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.291" endtime="20201030 15:52:20.307"></status>
</kw>
<msg timestamp="20201030 15:52:20.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.290" endtime="20201030 15:52:20.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.309" endtime="20201030 15:52:20.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.311" endtime="20201030 15:52:20.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.287" endtime="20201030 15:52:20.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.285" endtime="20201030 15:52:20.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.322" endtime="20201030 15:52:20.609"></status>
</kw>
<msg timestamp="20201030 15:52:20.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023373056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023399278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.320" endtime="20201030 15:52:20.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023373056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023399278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.613" endtime="20201030 15:52:20.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.622" endtime="20201030 15:52:20.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.317" endtime="20201030 15:52:20.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.315" endtime="20201030 15:52:20.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:20.629" level="INFO">${RESULT} = [{'diff': 2.6221999999999357e-05}, {'diff': 2.5930000000000397e-05}, {'diff': 2.647299999999908e-05}, {'diff': 2.6556000000000496e-05}, {'diff': 2.6249999999998497e-05}, {'diff': 2.6556000000000496e-0...</msg>
<status status="PASS" starttime="20201030 15:52:20.625" endtime="20201030 15:52:20.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:20.633" level="INFO">${ACCURACY} = {'diff': [2.6221999999999357e-05, 2.5930000000000397e-05, 2.647299999999908e-05, 2.6556000000000496e-05, 2.6249999999998497e-05, 2.6556000000000496e-05, 2.6264000000001536e-05, 2.6305000000000772e-05,...</msg>
<status status="PASS" starttime="20201030 15:52:20.630" endtime="20201030 15:52:20.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.638" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 15:52:20.637" endtime="20201030 15:52:20.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.641" level="INFO">VALUE: [2.6221999999999357e-05, 2.5930000000000397e-05, 2.647299999999908e-05, 2.6556000000000496e-05, 2.6249999999998497e-05, 2.6556000000000496e-05, 2.6264000000001536e-05, 2.6305000000000772e-05, 2.6263999999998067e-05, 2.5985999999998677e-05, 2.6264000000001536e-05, 2.6638999999998442e-05, 2.5624999999997872e-05, 2.5943999999999967e-05, 2.6542000000000926e-05, 2.62230000000023e-05, 2.6249999999998497e-05, 2.6249999999998497e-05, 2.6250000000001966e-05, 2.6568999999997123e-05, 2.6277000000001632e-05, 2.566700000000005e-05, 2.6249999999998497e-05, 2.5638000000001437e-05, 2.6556000000000496e-05, 2.6263999999998067e-05, 2.6569000000000592e-05, 2.6541000000001452e-05, 2.6194000000000217e-05, 2.6250000000001966e-05, 2.6249999999998497e-05, 2.6569000000000592e-05, 2.6263999999998067e-05, 2.595899999999901e-05, 2.6540999999997983e-05, 2.6249999999998497e-05, 2.5596999999998732e-05, 2.6569000000000592e-05, 2.5985999999998677e-05, 2.6262999999998593e-05, 2.6235999999998927e-05, 2.6236000000002396e-05, 2.6263999999998067e-05, 2.6555999999997026e-05, 2.6277999999997637e-05, 2.6250000000001966e-05, 2.6555000000001022e-05, 2.6583999999999636e-05, 2.6583000000000162e-05, 2.6556000000000496e-05]</msg>
<status status="PASS" starttime="20201030 15:52:20.639" endtime="20201030 15:52:20.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.634" endtime="20201030 15:52:20.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:20.647" endtime="20201030 15:52:20.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.645" endtime="20201030 15:52:20.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.644" endtime="20201030 15:52:20.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.283" endtime="20201030 15:52:20.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.282" endtime="20201030 15:52:20.668"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.677" endtime="20201030 15:52:20.693"></status>
</kw>
<msg timestamp="20201030 15:52:20.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.676" endtime="20201030 15:52:20.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.694" endtime="20201030 15:52:20.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.697" endtime="20201030 15:52:20.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.673" endtime="20201030 15:52:20.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.671" endtime="20201030 15:52:20.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.706" endtime="20201030 15:52:20.992"></status>
</kw>
<msg timestamp="20201030 15:52:20.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022658264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022686319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.705" endtime="20201030 15:52:20.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022658264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022686319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.997" endtime="20201030 15:52:21.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.005" endtime="20201030 15:52:21.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.702" endtime="20201030 15:52:21.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.700" endtime="20201030 15:52:21.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:21.012" level="INFO">${RESULT} = [{'diff': 2.8054999999999053e-05}, {'diff': 2.6848000000002925e-05}, {'diff': 2.716699999999808e-05}, {'diff': 2.716700000000155e-05}, {'diff': 2.719500000000069e-05}, {'diff': 2.7166000000002077e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:21.009" endtime="20201030 15:52:21.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:21.017" level="INFO">${ACCURACY} = {'diff': [2.8054999999999053e-05, 2.6848000000002925e-05, 2.716699999999808e-05, 2.716700000000155e-05, 2.719500000000069e-05, 2.7166000000002077e-05, 2.7165999999998608e-05, 2.6915999999998358e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:52:21.013" endtime="20201030 15:52:21.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.022" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 15:52:21.021" endtime="20201030 15:52:21.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.025" level="INFO">VALUE: [2.8054999999999053e-05, 2.6848000000002925e-05, 2.716699999999808e-05, 2.716700000000155e-05, 2.719500000000069e-05, 2.7166000000002077e-05, 2.7165999999998608e-05, 2.6915999999998358e-05, 2.687500000000259e-05, 2.7500000000003216e-05, 2.6556000000000496e-05, 2.7180000000001647e-05, 2.7486000000000177e-05, 2.716699999999808e-05, 2.7249999999999497e-05, 2.6555999999997026e-05, 2.747300000000008e-05, 2.716700000000155e-05, 2.7471999999997138e-05, 2.7180000000001647e-05, 2.7541000000002452e-05, 2.7472000000000607e-05, 2.7472000000000607e-05, 2.7471999999997138e-05, 2.7486000000000177e-05, 2.6861999999999026e-05, 2.6556000000000496e-05, 2.7499999999999747e-05, 2.716700000000155e-05, 2.718100000000112e-05, 2.7486000000000177e-05, 2.7499999999999747e-05, 2.7166000000002077e-05, 2.7471999999997138e-05, 2.718100000000112e-05, 2.7194000000001217e-05, 2.7486000000000177e-05, 2.7499999999999747e-05, 2.6860999999999552e-05, 2.6846999999999982e-05, 2.6874999999999122e-05, 2.7499999999999747e-05, 2.7486000000000177e-05, 2.716700000000155e-05, 2.7472000000000607e-05, 2.716699999999808e-05, 2.7499999999999747e-05, 2.716699999999808e-05, 2.6556000000000496e-05, 2.7429999999998428e-05]</msg>
<status status="PASS" starttime="20201030 15:52:21.023" endtime="20201030 15:52:21.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.018" endtime="20201030 15:52:21.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:21.035" endtime="20201030 15:52:21.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.033" endtime="20201030 15:52:21.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.031" endtime="20201030 15:52:21.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.669" endtime="20201030 15:52:21.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.669" endtime="20201030 15:52:21.055"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.065" endtime="20201030 15:52:21.080"></status>
</kw>
<msg timestamp="20201030 15:52:21.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.063" endtime="20201030 15:52:21.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.081" endtime="20201030 15:52:21.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.084" endtime="20201030 15:52:21.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.060" endtime="20201030 15:52:21.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.058" endtime="20201030 15:52:21.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.093" endtime="20201030 15:52:21.382"></status>
</kw>
<msg timestamp="20201030 15:52:21.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022298208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022327181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.092" endtime="20201030 15:52:21.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022298208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022327181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.386" endtime="20201030 15:52:21.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.395" endtime="20201030 15:52:21.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.089" endtime="20201030 15:52:21.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.087" endtime="20201030 15:52:21.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:21.402" level="INFO">${RESULT} = [{'diff': 2.897300000000158e-05}, {'diff': 2.7777999999999137e-05}, {'diff': 2.841699999999933e-05}, {'diff': 2.8443999999998998e-05}, {'diff': 2.8693999999999248e-05}, {'diff': 2.8374999999997152e-05...</msg>
<status status="PASS" starttime="20201030 15:52:21.399" endtime="20201030 15:52:21.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:21.407" level="INFO">${ACCURACY} = {'diff': [2.897300000000158e-05, 2.7777999999999137e-05, 2.841699999999933e-05, 2.8443999999998998e-05, 2.8693999999999248e-05, 2.8374999999997152e-05, 2.8402999999999762e-05, 2.8415999999999858e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:21.403" endtime="20201030 15:52:21.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.411" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 15:52:21.410" endtime="20201030 15:52:21.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.414" level="INFO">VALUE: [2.897300000000158e-05, 2.7777999999999137e-05, 2.841699999999933e-05, 2.8443999999998998e-05, 2.8693999999999248e-05, 2.8374999999997152e-05, 2.8402999999999762e-05, 2.8415999999999858e-05, 2.8402000000000288e-05, 2.8305999999998777e-05, 2.84170000000028e-05, 2.8083999999997666e-05, 2.7792000000002176e-05, 2.8097000000001232e-05, 2.8138999999999942e-05, 2.7486000000000177e-05, 2.8389000000000192e-05, 2.8457999999998568e-05, 2.8389000000000192e-05, 2.8389000000000192e-05, 2.8097000000001232e-05, 2.8083999999997666e-05, 2.841699999999933e-05, 2.8375000000000622e-05, 2.869499999999872e-05, 2.8098000000000706e-05, 2.8389000000000192e-05, 2.8375000000000622e-05, 2.8429999999999428e-05, 2.838799999999725e-05, 2.841699999999933e-05, 2.8096999999997763e-05, 2.8389000000000192e-05, 2.8389000000000192e-05, 2.8389000000000192e-05, 2.8375000000000622e-05, 2.84309999999989e-05, 2.8389000000000192e-05, 2.7763999999999567e-05, 2.8084000000001136e-05, 2.8096999999997763e-05, 2.8111000000000802e-05, 2.8375000000000622e-05, 2.8389000000000192e-05, 2.8457999999998568e-05, 2.8082999999998193e-05, 2.8388000000000718e-05, 2.7792000000002176e-05, 2.8694000000002717e-05, 2.8027999999999387e-05]</msg>
<status status="PASS" starttime="20201030 15:52:21.412" endtime="20201030 15:52:21.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.407" endtime="20201030 15:52:21.415"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:21.419" endtime="20201030 15:52:21.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.417" endtime="20201030 15:52:21.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.416" endtime="20201030 15:52:21.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.056" endtime="20201030 15:52:21.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.056" endtime="20201030 15:52:21.440"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.449" endtime="20201030 15:52:21.465"></status>
</kw>
<msg timestamp="20201030 15:52:21.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.447" endtime="20201030 15:52:21.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.466" endtime="20201030 15:52:21.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.469" endtime="20201030 15:52:21.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.445" endtime="20201030 15:52:21.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.442" endtime="20201030 15:52:21.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.478" endtime="20201030 15:52:21.764"></status>
</kw>
<msg timestamp="20201030 15:52:21.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023481681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023511236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.477" endtime="20201030 15:52:21.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023481681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023511236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.769" endtime="20201030 15:52:21.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.777" endtime="20201030 15:52:21.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.474" endtime="20201030 15:52:21.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.472" endtime="20201030 15:52:21.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:21.784" level="INFO">${RESULT} = [{'diff': 2.9555000000000553e-05}, {'diff': 2.9014000000000817e-05}, {'diff': 2.9012999999997874e-05}, {'diff': 2.9292000000000207e-05}, {'diff': 2.9318999999999873e-05}, {'diff': 2.9014000000000817e-...</msg>
<status status="PASS" starttime="20201030 15:52:21.781" endtime="20201030 15:52:21.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:21.788" level="INFO">${ACCURACY} = {'diff': [2.9555000000000553e-05, 2.9014000000000817e-05, 2.9012999999997874e-05, 2.9292000000000207e-05, 2.9318999999999873e-05, 2.9014000000000817e-05, 2.870900000000176e-05, 2.869499999999872e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:21.785" endtime="20201030 15:52:21.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.793" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 15:52:21.792" endtime="20201030 15:52:21.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.796" level="INFO">VALUE: [2.9555000000000553e-05, 2.9014000000000817e-05, 2.9012999999997874e-05, 2.9292000000000207e-05, 2.9318999999999873e-05, 2.9014000000000817e-05, 2.870900000000176e-05, 2.869499999999872e-05, 2.9000000000001247e-05, 2.9333999999998916e-05, 2.9318999999999873e-05, 2.9403000000000762e-05, 2.9305000000000303e-05, 2.9610999999998833e-05, 2.9319999999999347e-05, 2.9292000000000207e-05, 2.9305000000000303e-05, 2.9624999999998403e-05, 2.9318999999999873e-05, 2.9624999999998403e-05, 2.897299999999811e-05, 2.9318999999999873e-05, 2.9305999999999777e-05, 2.9305000000000303e-05, 2.9403000000000762e-05, 2.8986000000001677e-05, 2.9320000000002816e-05, 2.869500000000219e-05, 2.9305999999999777e-05, 2.8694000000002717e-05, 2.9610999999998833e-05, 2.9319999999999347e-05, 2.9305999999999777e-05, 2.9319999999999347e-05, 2.9332999999999443e-05, 2.8721999999998388e-05, 2.9568999999996654e-05, 2.9319999999999347e-05, 2.9319999999999347e-05, 2.9000000000001247e-05, 2.8735999999997958e-05, 2.9639000000001442e-05, 2.9305000000000303e-05, 2.9305999999999777e-05, 2.9305000000000303e-05, 2.9638999999997973e-05, 2.9028000000000387e-05, 2.9347000000002482e-05, 2.9014000000000817e-05, 2.8999999999997778e-05]</msg>
<status status="PASS" starttime="20201030 15:52:21.794" endtime="20201030 15:52:21.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.789" endtime="20201030 15:52:21.798"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:21.802" endtime="20201030 15:52:21.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.800" endtime="20201030 15:52:21.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.799" endtime="20201030 15:52:21.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.441" endtime="20201030 15:52:21.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.440" endtime="20201030 15:52:21.823"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.832" endtime="20201030 15:52:21.847"></status>
</kw>
<msg timestamp="20201030 15:52:21.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.830" endtime="20201030 15:52:21.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.849" endtime="20201030 15:52:21.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.851" endtime="20201030 15:52:21.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.828" endtime="20201030 15:52:21.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.825" endtime="20201030 15:52:21.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.861" endtime="20201030 15:52:22.147"></status>
</kw>
<msg timestamp="20201030 15:52:22.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022356139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022386347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.859" endtime="20201030 15:52:22.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022356139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022386347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.151" endtime="20201030 15:52:22.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.159" endtime="20201030 15:52:22.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.856" endtime="20201030 15:52:22.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.855" endtime="20201030 15:52:22.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:22.166" level="INFO">${RESULT} = [{'diff': 3.0208000000000318e-05}, {'diff': 2.991599999999789e-05}, {'diff': 3.0235999999999458e-05}, {'diff': 3.048699999999918e-05}, {'diff': 3.0235999999999458e-05}, {'diff': 3.0526999999998944e-05...</msg>
<status status="PASS" starttime="20201030 15:52:22.163" endtime="20201030 15:52:22.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:22.172" level="INFO">${ACCURACY} = {'diff': [3.0208000000000318e-05, 2.991599999999789e-05, 3.0235999999999458e-05, 3.048699999999918e-05, 3.0235999999999458e-05, 3.0526999999998944e-05, 3.0526999999998944e-05, 3.0167000000001082e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:22.167" endtime="20201030 15:52:22.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.176" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 15:52:22.175" endtime="20201030 15:52:22.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.179" level="INFO">VALUE: [3.0208000000000318e-05, 2.991599999999789e-05, 3.0235999999999458e-05, 3.048699999999918e-05, 3.0235999999999458e-05, 3.0526999999998944e-05, 3.0526999999998944e-05, 3.0167000000001082e-05, 3.020899999999979e-05, 3.0513999999998848e-05, 3.052799999999842e-05, 3.055600000000103e-05, 3.0249999999999028e-05, 2.9596999999999263e-05, 3.056900000000112e-05, 3.0221999999999888e-05, 3.0208000000000318e-05, 3.0472000000000138e-05, 3.0250000000002497e-05, 3.0249999999999028e-05, 3.023699999999893e-05, 3.0235999999999458e-05, 3.0249999999999028e-05, 3.0221999999999888e-05, 2.9611000000002302e-05, 3.0485999999999708e-05, 3.023699999999893e-05, 3.0235999999999458e-05, 3.056900000000112e-05, 2.9931000000000402e-05, 3.052799999999842e-05, 3.0485999999999708e-05, 3.05700000000006e-05, 3.0554999999998084e-05, 3.0221999999999888e-05, 3.054200000000146e-05, 3.0276999999998694e-05, 3.0221999999999888e-05, 2.9902999999997792e-05, 2.9610999999998833e-05, 2.9624999999998403e-05, 3.0167000000001082e-05, 3.0444000000000998e-05, 2.9611000000002302e-05, 3.054200000000146e-05, 3.0568999999997654e-05, 2.9917000000000832e-05, 3.0513999999998848e-05, 3.0554999999998084e-05, 3.0208000000000318e-05]</msg>
<status status="PASS" starttime="20201030 15:52:22.177" endtime="20201030 15:52:22.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.172" endtime="20201030 15:52:22.180"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:22.184" endtime="20201030 15:52:22.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.182" endtime="20201030 15:52:22.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.181" endtime="20201030 15:52:22.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.824" endtime="20201030 15:52:22.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.823" endtime="20201030 15:52:22.205"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.214" endtime="20201030 15:52:22.230"></status>
</kw>
<msg timestamp="20201030 15:52:22.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.212" endtime="20201030 15:52:22.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.232" endtime="20201030 15:52:22.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.234" endtime="20201030 15:52:22.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.210" endtime="20201030 15:52:22.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.208" endtime="20201030 15:52:22.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.244" endtime="20201030 15:52:22.533"></status>
</kw>
<msg timestamp="20201030 15:52:22.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022343972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02237775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:22.242" endtime="20201030 15:52:22.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022343972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02237775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:22.537" endtime="20201030 15:52:22.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.546" endtime="20201030 15:52:22.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.240" endtime="20201030 15:52:22.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.238" endtime="20201030 15:52:22.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:22.553" level="INFO">${RESULT} = [{'diff': 3.37779999999982e-05}, {'diff': 3.352800000000142e-05}, {'diff': 3.277800000000067e-05}, {'diff': 3.269400000000325e-05}, {'diff': 3.2832999999999474e-05}, {'diff': 3.3082999999999724e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:22.549" endtime="20201030 15:52:22.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:22.557" level="INFO">${ACCURACY} = {'diff': [3.37779999999982e-05, 3.352800000000142e-05, 3.277800000000067e-05, 3.269400000000325e-05, 3.2832999999999474e-05, 3.3082999999999724e-05, 3.291700000000036e-05, 3.322200000000289e-05, 3.302...</msg>
<status status="PASS" starttime="20201030 15:52:22.554" endtime="20201030 15:52:22.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.562" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 15:52:22.561" endtime="20201030 15:52:22.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.564" level="INFO">VALUE: [3.37779999999982e-05, 3.352800000000142e-05, 3.277800000000067e-05, 3.269400000000325e-05, 3.2832999999999474e-05, 3.3082999999999724e-05, 3.291700000000036e-05, 3.322200000000289e-05, 3.302799999999745e-05, 3.290300000000079e-05, 3.298599999999874e-05, 3.287500000000165e-05, 3.265299999999707e-05, 3.295899999999907e-05, 3.272299999999839e-05, 3.29449999999995e-05, 3.268099999999968e-05, 3.275000000000153e-05, 3.298599999999874e-05, 3.318100000000018e-05, 3.27640000000011e-05, 3.31250000000019e-05, 3.2860999999998614e-05, 3.3124999999998433e-05, 3.298599999999874e-05, 3.31250000000019e-05, 3.274999999999806e-05, 3.2846999999999044e-05, 3.3055000000000584e-05, 3.2763000000001624e-05, 3.290300000000079e-05, 3.3082999999999724e-05, 3.294400000000003e-05, 3.269399999999978e-05, 3.2791000000000764e-05, 3.292999999999699e-05, 3.301399999999788e-05, 3.270799999999935e-05, 3.304199999999702e-05, 3.311100000000233e-05, 3.302799999999745e-05, 3.313900000000147e-05, 3.320799999999985e-05, 3.277800000000067e-05, 3.294400000000003e-05, 3.293000000000046e-05, 3.273599999999849e-05, 3.301400000000135e-05, 3.284799999999852e-05, 3.2874999999998183e-05]</msg>
<status status="PASS" starttime="20201030 15:52:22.563" endtime="20201030 15:52:22.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.558" endtime="20201030 15:52:22.566"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:22.570" endtime="20201030 15:52:22.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.568" endtime="20201030 15:52:22.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.567" endtime="20201030 15:52:22.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.206" endtime="20201030 15:52:22.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.205" endtime="20201030 15:52:22.591"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.600" endtime="20201030 15:52:22.616"></status>
</kw>
<msg timestamp="20201030 15:52:22.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.598" endtime="20201030 15:52:22.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.618" endtime="20201030 15:52:22.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.620" endtime="20201030 15:52:22.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.595" endtime="20201030 15:52:22.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.593" endtime="20201030 15:52:22.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.630" endtime="20201030 15:52:22.916"></status>
</kw>
<msg timestamp="20201030 15:52:22.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023464153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023498361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.628" endtime="20201030 15:52:22.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023464153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023498361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.921" endtime="20201030 15:52:22.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.929" endtime="20201030 15:52:22.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.626" endtime="20201030 15:52:22.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.624" endtime="20201030 15:52:22.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:22.936" level="INFO">${RESULT} = [{'diff': 3.420799999999738e-05}, {'diff': 3.4096999999996824e-05}, {'diff': 3.397200000000017e-05}, {'diff': 3.402799999999845e-05}, {'diff': 3.4055000000001584e-05}, {'diff': 3.422200000000042e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:22.933" endtime="20201030 15:52:22.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:22.940" level="INFO">${ACCURACY} = {'diff': [3.420799999999738e-05, 3.4096999999996824e-05, 3.397200000000017e-05, 3.402799999999845e-05, 3.4055000000001584e-05, 3.422200000000042e-05, 3.390300000000179e-05, 3.399999999999931e-05, 3.42...</msg>
<status status="PASS" starttime="20201030 15:52:22.937" endtime="20201030 15:52:22.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.945" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 15:52:22.944" endtime="20201030 15:52:22.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.948" level="INFO">VALUE: [3.420799999999738e-05, 3.4096999999996824e-05, 3.397200000000017e-05, 3.402799999999845e-05, 3.4055000000001584e-05, 3.422200000000042e-05, 3.390300000000179e-05, 3.399999999999931e-05, 3.420800000000085e-05, 3.3874999999999184e-05, 3.401399999999888e-05, 3.400000000000278e-05, 3.39450000000005e-05, 3.401399999999888e-05, 3.404200000000149e-05, 3.423599999999999e-05, 3.379200000000124e-05, 3.39719999999967e-05, 3.420800000000085e-05, 3.379199999999777e-05, 3.39450000000005e-05, 3.368099999999721e-05, 3.419500000000075e-05, 3.404199999999802e-05, 3.369500000000025e-05, 3.405599999999759e-05, 3.3860999999999614e-05, 3.405599999999759e-05, 3.395900000000007e-05, 3.374999999999906e-05, 3.4069000000001154e-05, 3.419399999999781e-05, 3.390200000000232e-05, 3.394399999999756e-05, 3.388900000000222e-05, 3.391599999999842e-05, 3.3791000000001764e-05, 3.4083000000000724e-05, 3.3791000000001764e-05, 3.369400000000078e-05, 3.397200000000017e-05, 3.3805000000001334e-05, 3.390200000000232e-05, 3.392999999999799e-05, 3.3819000000000904e-05, 3.376399999999863e-05, 3.391700000000136e-05, 3.3860999999999614e-05, 3.391700000000136e-05, 3.4097000000000294e-05]</msg>
<status status="PASS" starttime="20201030 15:52:22.946" endtime="20201030 15:52:22.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.941" endtime="20201030 15:52:22.950"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:22.954" endtime="20201030 15:52:22.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.952" endtime="20201030 15:52:22.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.951" endtime="20201030 15:52:22.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.592" endtime="20201030 15:52:22.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.591" endtime="20201030 15:52:22.975"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.984" endtime="20201030 15:52:22.999"></status>
</kw>
<msg timestamp="20201030 15:52:23.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.982" endtime="20201030 15:52:23.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.001" endtime="20201030 15:52:23.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.003" endtime="20201030 15:52:23.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.979" endtime="20201030 15:52:23.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.977" endtime="20201030 15:52:23.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.013" endtime="20201030 15:52:23.299"></status>
</kw>
<msg timestamp="20201030 15:52:23.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022305639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022340944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.011" endtime="20201030 15:52:23.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022305639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022340944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.304" endtime="20201030 15:52:23.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.312" endtime="20201030 15:52:23.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.009" endtime="20201030 15:52:23.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.007" endtime="20201030 15:52:23.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:23.319" level="INFO">${RESULT} = [{'diff': 3.5305000000002834e-05}, {'diff': 3.505599999999859e-05}, {'diff': 3.4846999999997574e-05}, {'diff': 3.5125000000000434e-05}, {'diff': 3.5166999999999143e-05}, {'diff': 3.466700000000211e-05...</msg>
<status status="PASS" starttime="20201030 15:52:23.316" endtime="20201030 15:52:23.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:23.324" level="INFO">${ACCURACY} = {'diff': [3.5305000000002834e-05, 3.505599999999859e-05, 3.4846999999997574e-05, 3.5125000000000434e-05, 3.5166999999999143e-05, 3.466700000000211e-05, 3.479199999999877e-05, 3.4861000000000614e-05, 3...</msg>
<status status="PASS" starttime="20201030 15:52:23.320" endtime="20201030 15:52:23.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.329" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 15:52:23.328" endtime="20201030 15:52:23.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.332" level="INFO">VALUE: [3.5305000000002834e-05, 3.505599999999859e-05, 3.4846999999997574e-05, 3.5125000000000434e-05, 3.5166999999999143e-05, 3.466700000000211e-05, 3.479199999999877e-05, 3.4861000000000614e-05, 3.495799999999813e-05, 3.4819000000001904e-05, 3.498600000000074e-05, 3.4638999999999504e-05, 3.470799999999788e-05, 3.4875000000000184e-05, 3.465300000000254e-05, 3.470900000000082e-05, 3.483400000000095e-05, 3.4875000000000184e-05, 3.4846999999997574e-05, 3.492999999999899e-05, 3.47779999999992e-05, 3.495900000000107e-05, 3.4861000000000614e-05, 3.472300000000039e-05, 3.498600000000074e-05, 3.505599999999859e-05, 3.511200000000034e-05, 3.4818999999998435e-05, 3.497200000000117e-05, 3.518000000000271e-05, 3.4776999999999725e-05, 3.520799999999838e-05, 3.5110999999997394e-05, 3.490199999999985e-05, 3.508399999999773e-05, 3.490199999999985e-05, 3.4832999999998004e-05, 3.492999999999899e-05, 3.501399999999988e-05, 3.516599999999967e-05, 3.520799999999838e-05, 3.5082999999998254e-05, 3.5139000000000004e-05, 3.493100000000193e-05, 3.470800000000135e-05, 3.4888999999999754e-05, 3.500000000000031e-05, 3.518099999999871e-05, 3.519400000000228e-05, 3.493100000000193e-05]</msg>
<status status="PASS" starttime="20201030 15:52:23.330" endtime="20201030 15:52:23.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.325" endtime="20201030 15:52:23.333"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:23.337" endtime="20201030 15:52:23.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.335" endtime="20201030 15:52:23.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.334" endtime="20201030 15:52:23.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.976" endtime="20201030 15:52:23.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.975" endtime="20201030 15:52:23.358"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.368" endtime="20201030 15:52:23.385"></status>
</kw>
<msg timestamp="20201030 15:52:23.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.366" endtime="20201030 15:52:23.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.386" endtime="20201030 15:52:23.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.389" endtime="20201030 15:52:23.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.363" endtime="20201030 15:52:23.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.361" endtime="20201030 15:52:23.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.398" endtime="20201030 15:52:23.688"></status>
</kw>
<msg timestamp="20201030 15:52:23.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023986986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024023208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.397" endtime="20201030 15:52:23.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023986986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024023208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.693" endtime="20201030 15:52:23.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.701" endtime="20201030 15:52:23.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.394" endtime="20201030 15:52:23.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.392" endtime="20201030 15:52:23.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:23.708" level="INFO">${RESULT} = [{'diff': 3.622200000000242e-05}, {'diff': 3.6055000000000115e-05}, {'diff': 3.594399999999956e-05}, {'diff': 3.619499999999928e-05}, {'diff': 3.570799999999888e-05}, {'diff': 3.601400000000088e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:23.705" endtime="20201030 15:52:23.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:23.713" level="INFO">${ACCURACY} = {'diff': [3.622200000000242e-05, 3.6055000000000115e-05, 3.594399999999956e-05, 3.619499999999928e-05, 3.570799999999888e-05, 3.601400000000088e-05, 3.598599999999827e-05, 3.5804999999999865e-05, 3.56...</msg>
<status status="PASS" starttime="20201030 15:52:23.709" endtime="20201030 15:52:23.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.717" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 15:52:23.716" endtime="20201030 15:52:23.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.720" level="INFO">VALUE: [3.622200000000242e-05, 3.6055000000000115e-05, 3.594399999999956e-05, 3.619499999999928e-05, 3.570799999999888e-05, 3.601400000000088e-05, 3.598599999999827e-05, 3.5804999999999865e-05, 3.567999999999974e-05, 3.570799999999888e-05, 3.6096999999998824e-05, 3.57780000000002e-05, 3.5875000000001184e-05, 3.619399999999981e-05, 3.604200000000002e-05, 3.574999999999759e-05, 3.598599999999827e-05, 3.623599999999852e-05, 3.575000000000106e-05, 3.622199999999895e-05, 3.57780000000002e-05, 3.6180999999999713e-05, 3.604200000000002e-05, 3.583400000000195e-05, 3.582000000000238e-05, 3.619399999999981e-05, 3.604200000000002e-05, 3.572299999999792e-05, 3.599999999999784e-05, 3.605599999999959e-05, 3.593099999999946e-05, 3.600000000000131e-05, 3.616600000000067e-05, 3.6153000000000574e-05, 3.575000000000106e-05, 3.5625000000000934e-05, 3.6097000000002294e-05, 3.623600000000199e-05, 3.6124999999997964e-05, 3.5762999999997686e-05, 3.595799999999913e-05, 3.601400000000088e-05, 3.5818999999999435e-05, 3.592999999999999e-05, 3.601400000000088e-05, 3.602800000000045e-05, 3.5653000000000074e-05, 3.576400000000063e-05, 3.59580000000026e-05, 3.5875000000001184e-05]</msg>
<status status="PASS" starttime="20201030 15:52:23.719" endtime="20201030 15:52:23.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.713" endtime="20201030 15:52:23.721"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:23.725" endtime="20201030 15:52:23.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.724" endtime="20201030 15:52:23.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.722" endtime="20201030 15:52:23.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.359" endtime="20201030 15:52:23.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.358" endtime="20201030 15:52:23.746"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.755" endtime="20201030 15:52:23.773"></status>
</kw>
<msg timestamp="20201030 15:52:23.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.754" endtime="20201030 15:52:23.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.774" endtime="20201030 15:52:23.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.777" endtime="20201030 15:52:23.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.751" endtime="20201030 15:52:23.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.749" endtime="20201030 15:52:23.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.787" endtime="20201030 15:52:24.074"></status>
</kw>
<msg timestamp="20201030 15:52:24.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023685972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023723236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.785" endtime="20201030 15:52:24.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023685972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023723236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.079" endtime="20201030 15:52:24.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.087" endtime="20201030 15:52:24.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.782" endtime="20201030 15:52:24.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.780" endtime="20201030 15:52:24.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:24.093" level="INFO">${RESULT} = [{'diff': 3.726400000000213e-05}, {'diff': 3.691600000000142e-05}, {'diff': 3.69719999999997e-05}, {'diff': 3.7110999999999394e-05}, {'diff': 3.7096999999999825e-05}, {'diff': 3.7152999999998104e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:24.090" endtime="20201030 15:52:24.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:24.097" level="INFO">${ACCURACY} = {'diff': [3.726400000000213e-05, 3.691600000000142e-05, 3.69719999999997e-05, 3.7110999999999394e-05, 3.7096999999999825e-05, 3.7152999999998104e-05, 3.669400000000031e-05, 3.7167000000001144e-05, 3.6...</msg>
<status status="PASS" starttime="20201030 15:52:24.094" endtime="20201030 15:52:24.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.102" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 15:52:24.101" endtime="20201030 15:52:24.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.104" level="INFO">VALUE: [3.726400000000213e-05, 3.691600000000142e-05, 3.69719999999997e-05, 3.7110999999999394e-05, 3.7096999999999825e-05, 3.7152999999998104e-05, 3.669400000000031e-05, 3.7167000000001144e-05, 3.679200000000077e-05, 3.6846999999999575e-05, 3.6860999999999144e-05, 3.722199999999995e-05, 3.704200000000102e-05, 3.7096999999999825e-05, 3.7167000000001144e-05, 3.6917000000000894e-05, 3.6791000000001295e-05, 3.7153000000001574e-05, 3.670900000000282e-05, 3.67919999999973e-05, 3.683399999999948e-05, 3.693000000000099e-05, 3.698699999999874e-05, 3.70979999999993e-05, 3.684799999999905e-05, 3.688799999999881e-05, 3.673700000000196e-05, 3.688799999999881e-05, 3.693000000000099e-05, 3.715199999999863e-05, 3.673599999999902e-05, 3.720800000000038e-05, 3.7124999999998964e-05, 3.722199999999995e-05, 3.7027000000001975e-05, 3.7096999999999825e-05, 3.6777000000001725e-05, 3.7041000000001545e-05, 3.694400000000056e-05, 3.675000000000206e-05, 3.717999999999777e-05, 3.67780000000012e-05, 3.702800000000145e-05, 3.722199999999995e-05, 3.694400000000056e-05, 3.720800000000038e-05, 3.723599999999952e-05, 3.704200000000102e-05, 3.676399999999816e-05, 3.669400000000031e-05]</msg>
<status status="PASS" starttime="20201030 15:52:24.103" endtime="20201030 15:52:24.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.098" endtime="20201030 15:52:24.106"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:24.110" endtime="20201030 15:52:24.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.109" endtime="20201030 15:52:24.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.107" endtime="20201030 15:52:24.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.747" endtime="20201030 15:52:24.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.746" endtime="20201030 15:52:24.131"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.139" endtime="20201030 15:52:24.156"></status>
</kw>
<msg timestamp="20201030 15:52:24.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.138" endtime="20201030 15:52:24.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.157" endtime="20201030 15:52:24.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.160" endtime="20201030 15:52:24.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.135" endtime="20201030 15:52:24.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.133" endtime="20201030 15:52:24.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.169" endtime="20201030 15:52:24.454"></status>
</kw>
<msg timestamp="20201030 15:52:24.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021999278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022037778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.167" endtime="20201030 15:52:24.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021999278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022037778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.459" endtime="20201030 15:52:24.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.467" endtime="20201030 15:52:24.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.165" endtime="20201030 15:52:24.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.163" endtime="20201030 15:52:24.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:24.474" level="INFO">${RESULT} = [{'diff': 3.850000000000034e-05}, {'diff': 3.8138999999999534e-05}, {'diff': 3.772199999999698e-05}, {'diff': 3.80980000000003e-05}, {'diff': 3.7667000000001644e-05}, {'diff': 3.773600000000002e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:24.470" endtime="20201030 15:52:24.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:24.479" level="INFO">${ACCURACY} = {'diff': [3.850000000000034e-05, 3.8138999999999534e-05, 3.772199999999698e-05, 3.80980000000003e-05, 3.7667000000001644e-05, 3.773600000000002e-05, 3.797300000000017e-05, 3.7917000000001894e-05, 3.81...</msg>
<status status="PASS" starttime="20201030 15:52:24.475" endtime="20201030 15:52:24.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.484" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 15:52:24.483" endtime="20201030 15:52:24.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.486" level="INFO">VALUE: [3.850000000000034e-05, 3.8138999999999534e-05, 3.772199999999698e-05, 3.80980000000003e-05, 3.7667000000001644e-05, 3.773600000000002e-05, 3.797300000000017e-05, 3.7917000000001894e-05, 3.8138999999999534e-05, 3.804200000000202e-05, 3.802799999999898e-05, 3.7790999999998826e-05, 3.77780000000022e-05, 3.7902999999998854e-05, 3.8068999999998215e-05, 3.8096999999997355e-05, 3.8068999999998215e-05, 3.8068999999998215e-05, 3.8138999999999534e-05, 3.795799999999766e-05, 3.8138999999999534e-05, 3.801400000000288e-05, 3.76659999999987e-05, 3.7638999999999034e-05, 3.8124999999999964e-05, 3.802799999999898e-05, 3.820799999999791e-05, 3.794400000000156e-05, 3.8152999999999104e-05, 3.7652999999998604e-05, 3.7931000000001464e-05, 3.8111000000000395e-05, 3.776399999999916e-05, 3.798600000000027e-05, 3.7888999999999284e-05, 3.7694999999997314e-05, 3.774999999999959e-05, 3.802799999999898e-05, 3.7624999999999464e-05, 3.8138999999999534e-05, 3.772299999999992e-05, 3.7944999999997564e-05, 3.7874999999999714e-05, 3.8152999999999104e-05, 3.7888999999999284e-05, 3.7902999999998854e-05, 3.7930999999997994e-05, 3.8208999999997384e-05, 3.801399999999941e-05, 3.7846999999997105e-05]</msg>
<status status="PASS" starttime="20201030 15:52:24.485" endtime="20201030 15:52:24.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.480" endtime="20201030 15:52:24.488"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:24.492" endtime="20201030 15:52:24.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.490" endtime="20201030 15:52:24.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.489" endtime="20201030 15:52:24.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.132" endtime="20201030 15:52:24.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.131" endtime="20201030 15:52:24.512"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.522" endtime="20201030 15:52:24.537"></status>
</kw>
<msg timestamp="20201030 15:52:24.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.520" endtime="20201030 15:52:24.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.539" endtime="20201030 15:52:24.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.541" endtime="20201030 15:52:24.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.517" endtime="20201030 15:52:24.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.515" endtime="20201030 15:52:24.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.551" endtime="20201030 15:52:24.866"></status>
</kw>
<msg timestamp="20201030 15:52:24.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022346139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02238575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:24.549" endtime="20201030 15:52:24.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022346139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02238575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:24.870" endtime="20201030 15:52:24.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.879" endtime="20201030 15:52:24.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.547" endtime="20201030 15:52:24.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.545" endtime="20201030 15:52:24.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:24.886" level="INFO">${RESULT} = [{'diff': 3.9610999999998425e-05}, {'diff': 3.9208999999998384e-05}, {'diff': 3.8708999999997884e-05}, {'diff': 3.9166999999999674e-05}, {'diff': 3.873599999999755e-05}, {'diff': 3.9181000000002714e-0...</msg>
<status status="PASS" starttime="20201030 15:52:24.882" endtime="20201030 15:52:24.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:24.890" level="INFO">${ACCURACY} = {'diff': [3.9610999999998425e-05, 3.9208999999998384e-05, 3.8708999999997884e-05, 3.9166999999999674e-05, 3.873599999999755e-05, 3.9181000000002714e-05, 3.9027000000000506e-05, 3.920800000000238e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:24.887" endtime="20201030 15:52:24.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.895" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 15:52:24.894" endtime="20201030 15:52:24.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.897" level="INFO">VALUE: [3.9610999999998425e-05, 3.9208999999998384e-05, 3.8708999999997884e-05, 3.9166999999999674e-05, 3.873599999999755e-05, 3.9181000000002714e-05, 3.9027000000000506e-05, 3.920800000000238e-05, 3.9069000000002685e-05, 3.9166999999999674e-05, 3.922199999999848e-05, 3.919399999999934e-05, 3.8777000000000256e-05, 3.9041000000000076e-05, 3.915200000000063e-05, 3.89859999999978e-05, 3.8804999999999396e-05, 3.870799999999841e-05, 3.891599999999995e-05, 3.895799999999866e-05, 3.9153000000000104e-05, 3.9110999999997925e-05, 3.8666999999999174e-05, 3.8860999999997675e-05, 3.9125000000000965e-05, 3.902799999999998e-05, 3.904199999999955e-05, 3.902799999999998e-05, 3.9262999999997716e-05, 3.8916999999999424e-05, 3.9208999999998384e-05, 3.8902999999999854e-05, 3.8902999999999854e-05, 3.906999999999869e-05, 3.8846999999998105e-05, 3.922199999999848e-05, 3.8902999999999854e-05, 3.881999999999844e-05, 3.9180999999999244e-05, 3.8666999999999174e-05, 3.8930999999998994e-05, 3.8916999999999424e-05, 3.900000000000084e-05, 3.9263000000001186e-05, 3.9139000000000534e-05, 3.873600000000102e-05, 3.873700000000049e-05, 3.8790999999999826e-05, 3.9083000000002255e-05, 3.865200000000013e-05]</msg>
<status status="PASS" starttime="20201030 15:52:24.896" endtime="20201030 15:52:24.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.891" endtime="20201030 15:52:24.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:24.903" endtime="20201030 15:52:24.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.901" endtime="20201030 15:52:24.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.900" endtime="20201030 15:52:24.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.513" endtime="20201030 15:52:24.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.513" endtime="20201030 15:52:24.923"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.933" endtime="20201030 15:52:24.950"></status>
</kw>
<msg timestamp="20201030 15:52:24.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.931" endtime="20201030 15:52:24.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.951" endtime="20201030 15:52:24.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.954" endtime="20201030 15:52:24.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.928" endtime="20201030 15:52:24.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.926" endtime="20201030 15:52:24.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.964" endtime="20201030 15:52:25.249"></status>
</kw>
<msg timestamp="20201030 15:52:25.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023581389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023621764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.962" endtime="20201030 15:52:25.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023581389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023621764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:25.253" endtime="20201030 15:52:25.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.262" endtime="20201030 15:52:25.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.959" endtime="20201030 15:52:25.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.958" endtime="20201030 15:52:25.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:25.269" level="INFO">${RESULT} = [{'diff': 4.0374999999998745e-05}, {'diff': 4.0389000000001785e-05}, {'diff': 3.9875000000001715e-05}, {'diff': 3.9944999999999564e-05}, {'diff': 3.9639000000001035e-05}, {'diff': 3.97920000000003e-05...</msg>
<status status="PASS" starttime="20201030 15:52:25.265" endtime="20201030 15:52:25.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:25.273" level="INFO">${ACCURACY} = {'diff': [4.0374999999998745e-05, 4.0389000000001785e-05, 3.9875000000001715e-05, 3.9944999999999564e-05, 3.9639000000001035e-05, 3.97920000000003e-05, 3.9653000000000604e-05, 3.977800000000073e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:52:25.270" endtime="20201030 15:52:25.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.277" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 15:52:25.276" endtime="20201030 15:52:25.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.280" level="INFO">VALUE: [4.0374999999998745e-05, 4.0389000000001785e-05, 3.9875000000001715e-05, 3.9944999999999564e-05, 3.9639000000001035e-05, 3.97920000000003e-05, 3.9653000000000604e-05, 3.977800000000073e-05, 4.004200000000055e-05, 3.9638999999997565e-05, 3.9846999999999105e-05, 3.972199999999898e-05, 3.9667000000000174e-05, 4.024999999999862e-05, 3.9611000000001895e-05, 3.9846999999999105e-05, 3.9930999999999994e-05, 3.9944999999999564e-05, 3.972199999999898e-05, 4.019400000000034e-05, 3.9639000000001035e-05, 3.9861000000002145e-05, 3.975000000000159e-05, 3.965200000000113e-05, 3.9639000000001035e-05, 4.0041000000001076e-05, 3.9846999999999105e-05, 4.0082999999999785e-05, 4.015200000000163e-05, 3.9611000000001895e-05, 3.9903000000000854e-05, 3.995799999999966e-05, 3.993000000000052e-05, 3.9639000000001035e-05, 3.994400000000009e-05, 3.995799999999966e-05, 3.994400000000009e-05, 4.0125000000001965e-05, 3.994400000000009e-05, 3.9888999999997815e-05, 3.972199999999898e-05, 4.0082999999999785e-05, 3.9818999999999966e-05, 3.9666999999996705e-05, 3.97920000000003e-05, 4.009799999999883e-05, 3.9846999999999105e-05, 3.9680999999999744e-05, 3.9902999999997385e-05, 4.022199999999948e-05]</msg>
<status status="PASS" starttime="20201030 15:52:25.279" endtime="20201030 15:52:25.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.274" endtime="20201030 15:52:25.282"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:25.286" endtime="20201030 15:52:25.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.285" endtime="20201030 15:52:25.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.283" endtime="20201030 15:52:25.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.924" endtime="20201030 15:52:25.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.924" endtime="20201030 15:52:25.307"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.316" endtime="20201030 15:52:25.332"></status>
</kw>
<msg timestamp="20201030 15:52:25.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.315" endtime="20201030 15:52:25.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.333" endtime="20201030 15:52:25.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.336" endtime="20201030 15:52:25.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.312" endtime="20201030 15:52:25.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.310" endtime="20201030 15:52:25.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.346" endtime="20201030 15:52:25.632"></status>
</kw>
<msg timestamp="20201030 15:52:25.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022537472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022579431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:25.344" endtime="20201030 15:52:25.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022537472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022579431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:25.637" endtime="20201030 15:52:25.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.645" endtime="20201030 15:52:25.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.341" endtime="20201030 15:52:25.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.340" endtime="20201030 15:52:25.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:25.652" level="INFO">${RESULT} = [{'diff': 4.1959000000001134e-05}, {'diff': 4.1374999999999745e-05}, {'diff': 4.0847000000000105e-05}, {'diff': 4.1096999999996886e-05}, {'diff': 4.1209000000000384e-05}, {'diff': 4.100000000000284e-0...</msg>
<status status="PASS" starttime="20201030 15:52:25.649" endtime="20201030 15:52:25.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:25.658" level="INFO">${ACCURACY} = {'diff': [4.1959000000001134e-05, 4.1374999999999745e-05, 4.0847000000000105e-05, 4.1096999999996886e-05, 4.1209000000000384e-05, 4.100000000000284e-05, 4.1083000000000786e-05, 4.097200000000023e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:25.653" endtime="20201030 15:52:25.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.662" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 15:52:25.661" endtime="20201030 15:52:25.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.665" level="INFO">VALUE: [4.1959000000001134e-05, 4.1374999999999745e-05, 4.0847000000000105e-05, 4.1096999999996886e-05, 4.1209000000000384e-05, 4.100000000000284e-05, 4.1083000000000786e-05, 4.097200000000023e-05, 4.1195000000000814e-05, 4.1194999999997345e-05, 4.084799999999958e-05, 4.1152999999998635e-05, 4.0959000000000134e-05, 4.0930999999997525e-05, 4.0874999999999245e-05, 4.076399999999869e-05, 4.0959000000000134e-05, 4.1153000000002105e-05, 4.0903000000001855e-05, 4.0888999999998815e-05, 4.0875000000002715e-05, 4.0846999999996636e-05, 4.115200000000263e-05, 4.1097000000000355e-05, 4.075000000000259e-05, 4.11799999999983e-05, 4.116599999999873e-05, 4.065199999999866e-05, 4.09859999999998e-05, 4.1110999999999925e-05, 4.1153000000002105e-05, 4.0833000000000536e-05, 4.122199999999701e-05, 4.1069000000001216e-05, 4.1124999999999495e-05, 4.124999999999962e-05, 4.0667000000001174e-05, 4.1167000000001674e-05, 4.079199999999783e-05, 4.1069000000001216e-05, 4.074999999999912e-05, 4.070800000000041e-05, 4.1138999999999065e-05, 4.0681000000000744e-05, 4.084799999999958e-05, 4.1181000000001244e-05, 4.082000000000044e-05, 4.0931000000000994e-05, 4.0860999999999675e-05, 4.075000000000259e-05]</msg>
<status status="PASS" starttime="20201030 15:52:25.664" endtime="20201030 15:52:25.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.659" endtime="20201030 15:52:25.667"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:25.670" endtime="20201030 15:52:25.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.669" endtime="20201030 15:52:25.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.668" endtime="20201030 15:52:25.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.308" endtime="20201030 15:52:25.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.307" endtime="20201030 15:52:25.691"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.700" endtime="20201030 15:52:25.717"></status>
</kw>
<msg timestamp="20201030 15:52:25.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.699" endtime="20201030 15:52:25.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.718" endtime="20201030 15:52:25.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.721" endtime="20201030 15:52:25.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.696" endtime="20201030 15:52:25.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.694" endtime="20201030 15:52:25.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.730" endtime="20201030 15:52:26.019"></status>
</kw>
<msg timestamp="20201030 15:52:26.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022245889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:25.729" endtime="20201030 15:52:26.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022245889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.023" endtime="20201030 15:52:26.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.032" endtime="20201030 15:52:26.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.726" endtime="20201030 15:52:26.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.724" endtime="20201030 15:52:26.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:26.039" level="INFO">${RESULT} = [{'diff': 4.2096999999997886e-05}, {'diff': 4.2402999999999885e-05}, {'diff': 4.2166999999999205e-05}, {'diff': 4.177800000000273e-05}, {'diff': 4.2097000000001356e-05}, {'diff': 4.222200000000148e-05...</msg>
<status status="PASS" starttime="20201030 15:52:26.036" endtime="20201030 15:52:26.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:26.043" level="INFO">${ACCURACY} = {'diff': [4.2096999999997886e-05, 4.2402999999999885e-05, 4.2166999999999205e-05, 4.177800000000273e-05, 4.2097000000001356e-05, 4.222200000000148e-05, 4.1847000000001106e-05, 4.1888999999999815e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:26.040" endtime="20201030 15:52:26.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.048" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 15:52:26.047" endtime="20201030 15:52:26.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.051" level="INFO">VALUE: [4.2096999999997886e-05, 4.2402999999999885e-05, 4.2166999999999205e-05, 4.177800000000273e-05, 4.2097000000001356e-05, 4.222200000000148e-05, 4.1847000000001106e-05, 4.1888999999999815e-05, 4.201399999999994e-05, 4.1819000000001966e-05, 4.1902999999999385e-05, 4.2096999999997886e-05, 4.1944999999998095e-05, 4.2082999999998316e-05, 4.208400000000126e-05, 4.223600000000105e-05, 4.1916999999998955e-05, 4.2208999999997915e-05, 4.218000000000277e-05, 4.17920000000023e-05, 4.183400000000101e-05, 4.182000000000144e-05, 4.19860000000008e-05, 4.165199999999966e-05, 4.201399999999994e-05, 4.1861000000000675e-05, 4.169400000000184e-05, 4.170800000000141e-05, 4.213800000000059e-05, 4.2068999999998746e-05, 4.1875000000000245e-05, 4.1861000000000675e-05, 4.165199999999966e-05, 4.173600000000055e-05, 4.1667000000002175e-05, 4.175000000000012e-05, 4.1790999999999356e-05, 4.169400000000184e-05, 4.1875000000000245e-05, 4.201399999999994e-05, 4.204200000000255e-05, 4.1861000000000675e-05, 4.1847000000001106e-05, 4.2068999999998746e-05, 4.19999999999969e-05, 4.2139000000000065e-05, 4.1652999999999135e-05, 4.207000000000169e-05, 4.1944999999998095e-05, 4.2138999999996596e-05]</msg>
<status status="PASS" starttime="20201030 15:52:26.049" endtime="20201030 15:52:26.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.044" endtime="20201030 15:52:26.057"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:26.060" endtime="20201030 15:52:26.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.059" endtime="20201030 15:52:26.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.058" endtime="20201030 15:52:26.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.692" endtime="20201030 15:52:26.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.691" endtime="20201030 15:52:26.081"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.091" endtime="20201030 15:52:26.108"></status>
</kw>
<msg timestamp="20201030 15:52:26.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.089" endtime="20201030 15:52:26.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.110" endtime="20201030 15:52:26.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.112" endtime="20201030 15:52:26.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.086" endtime="20201030 15:52:26.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.084" endtime="20201030 15:52:26.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.122" endtime="20201030 15:52:26.408"></status>
</kw>
<msg timestamp="20201030 15:52:26.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023356097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023399083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.120" endtime="20201030 15:52:26.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023356097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023399083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.413" endtime="20201030 15:52:26.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.422" endtime="20201030 15:52:26.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.117" endtime="20201030 15:52:26.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.116" endtime="20201030 15:52:26.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:26.429" level="INFO">${RESULT} = [{'diff': 4.29860000000018e-05}, {'diff': 4.3332999999999566e-05}, {'diff': 4.273599999999808e-05}, {'diff': 4.290200000000091e-05}, {'diff': 4.323599999999858e-05}, {'diff': 4.3041000000000607e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:26.426" endtime="20201030 15:52:26.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:26.433" level="INFO">${ACCURACY} = {'diff': [4.29860000000018e-05, 4.3332999999999566e-05, 4.273599999999808e-05, 4.290200000000091e-05, 4.323599999999858e-05, 4.3041000000000607e-05, 4.295799999999919e-05, 4.300000000000137e-05, 4.311...</msg>
<status status="PASS" starttime="20201030 15:52:26.430" endtime="20201030 15:52:26.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.438" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 15:52:26.437" endtime="20201030 15:52:26.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.440" level="INFO">VALUE: [4.29860000000018e-05, 4.3332999999999566e-05, 4.273599999999808e-05, 4.290200000000091e-05, 4.323599999999858e-05, 4.3041000000000607e-05, 4.295799999999919e-05, 4.300000000000137e-05, 4.3111000000001926e-05, 4.319399999999987e-05, 4.297199999999876e-05, 4.3068999999999746e-05, 4.3096999999998886e-05, 4.283399999999854e-05, 4.2889000000000815e-05, 4.304200000000008e-05, 4.272199999999851e-05, 4.2875000000001245e-05, 4.2847000000002106e-05, 4.305599999999965e-05, 4.282000000000244e-05, 4.325000000000162e-05, 4.2708999999998415e-05, 4.311199999999793e-05, 4.2680999999999275e-05, 4.279199999999983e-05, 4.273600000000155e-05, 4.270799999999894e-05, 4.2861000000001676e-05, 4.3041000000000607e-05, 4.2861000000001676e-05, 4.298599999999833e-05, 4.323599999999858e-05, 4.302699999999757e-05, 4.294399999999962e-05, 4.275000000000112e-05, 4.320799999999944e-05, 4.277700000000079e-05, 4.2903000000000385e-05, 4.309799999999836e-05, 4.2861000000001676e-05, 4.301400000000094e-05, 4.297200000000223e-05, 4.29999999999979e-05, 4.272199999999851e-05, 4.2916999999999955e-05, 4.279199999999983e-05, 4.2916999999999955e-05, 4.2832999999999066e-05, 4.272200000000198e-05]</msg>
<status status="PASS" starttime="20201030 15:52:26.439" endtime="20201030 15:52:26.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.434" endtime="20201030 15:52:26.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:26.447" endtime="20201030 15:52:26.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.445" endtime="20201030 15:52:26.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.444" endtime="20201030 15:52:26.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.082" endtime="20201030 15:52:26.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.082" endtime="20201030 15:52:26.468"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.477" endtime="20201030 15:52:26.493"></status>
</kw>
<msg timestamp="20201030 15:52:26.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.475" endtime="20201030 15:52:26.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.495" endtime="20201030 15:52:26.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.498" endtime="20201030 15:52:26.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.473" endtime="20201030 15:52:26.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.470" endtime="20201030 15:52:26.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.507" endtime="20201030 15:52:26.796"></status>
</kw>
<msg timestamp="20201030 15:52:26.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022312056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022356, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:26.506" endtime="20201030 15:52:26.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022312056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022356, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:26.800" endtime="20201030 15:52:26.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.811" endtime="20201030 15:52:26.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.503" endtime="20201030 15:52:26.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.501" endtime="20201030 15:52:26.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:26.820" level="INFO">${RESULT} = [{'diff': 4.394400000000062e-05}, {'diff': 4.4167000000001205e-05}, {'diff': 4.4167000000001205e-05}, {'diff': 4.38060000000004e-05}, {'diff': 4.420800000000044e-05}, {'diff': 4.405600000000065e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:26.815" endtime="20201030 15:52:26.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:26.825" level="INFO">${ACCURACY} = {'diff': [4.394400000000062e-05, 4.4167000000001205e-05, 4.4167000000001205e-05, 4.38060000000004e-05, 4.420800000000044e-05, 4.405600000000065e-05, 4.3624999999998526e-05, 4.3903000000001385e-05, 4.4...</msg>
<status status="PASS" starttime="20201030 15:52:26.821" endtime="20201030 15:52:26.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.830" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 15:52:26.829" endtime="20201030 15:52:26.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.832" level="INFO">VALUE: [4.394400000000062e-05, 4.4167000000001205e-05, 4.4167000000001205e-05, 4.38060000000004e-05, 4.420800000000044e-05, 4.405600000000065e-05, 4.3624999999998526e-05, 4.3903000000001385e-05, 4.4194999999996876e-05, 4.3708999999999415e-05, 4.3917000000000955e-05, 4.3652999999997666e-05, 4.3722999999998985e-05, 4.38060000000004e-05, 4.407000000000022e-05, 4.3722999999998985e-05, 4.417999999999783e-05, 4.372199999999951e-05, 4.370799999999994e-05, 4.416599999999826e-05, 4.3805000000000927e-05, 4.380499999999746e-05, 4.419400000000087e-05, 4.375000000000212e-05, 4.367999999999733e-05, 4.379100000000136e-05, 4.401400000000194e-05, 4.402799999999804e-05, 4.366600000000123e-05, 4.4083000000000316e-05, 4.4055000000001177e-05, 4.404200000000108e-05, 4.373599999999908e-05, 4.3653000000001135e-05, 4.41939999999974e-05, 4.377800000000126e-05, 4.4069000000000746e-05, 4.3959000000003134e-05, 4.3931000000000525e-05, 4.3681000000000275e-05, 4.3638999999998096e-05, 4.402800000000151e-05, 4.4124999999999026e-05, 4.4181000000000775e-05, 4.3861000000002676e-05, 4.377799999999779e-05, 4.4138999999998596e-05, 4.401300000000247e-05, 4.3972999999999235e-05, 4.4096999999999886e-05]</msg>
<status status="PASS" starttime="20201030 15:52:26.831" endtime="20201030 15:52:26.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.826" endtime="20201030 15:52:26.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:26.837" endtime="20201030 15:52:26.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.836" endtime="20201030 15:52:26.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.835" endtime="20201030 15:52:26.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.469" endtime="20201030 15:52:26.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.468" endtime="20201030 15:52:26.858"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.867" endtime="20201030 15:52:26.884"></status>
</kw>
<msg timestamp="20201030 15:52:26.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.866" endtime="20201030 15:52:26.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.886" endtime="20201030 15:52:26.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.888" endtime="20201030 15:52:26.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.863" endtime="20201030 15:52:26.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.861" endtime="20201030 15:52:26.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.897" endtime="20201030 15:52:27.201"></status>
</kw>
<msg timestamp="20201030 15:52:27.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022371764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022416819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.896" endtime="20201030 15:52:27.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022371764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022416819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.205" endtime="20201030 15:52:27.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.213" endtime="20201030 15:52:27.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.893" endtime="20201030 15:52:27.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.891" endtime="20201030 15:52:27.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:27.220" level="INFO">${RESULT} = [{'diff': 4.505500000000218e-05}, {'diff': 4.5083000000001316e-05}, {'diff': 4.48329999999976e-05}, {'diff': 4.477699999999932e-05}, {'diff': 4.516600000000273e-05}, {'diff': 4.49999999999999e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:27.217" endtime="20201030 15:52:27.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:27.224" level="INFO">${ACCURACY} = {'diff': [4.505500000000218e-05, 4.5083000000001316e-05, 4.48329999999976e-05, 4.477699999999932e-05, 4.516600000000273e-05, 4.49999999999999e-05, 4.470800000000094e-05, 4.495800000000119e-05, 4.50140...</msg>
<status status="PASS" starttime="20201030 15:52:27.221" endtime="20201030 15:52:27.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.228" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 15:52:27.227" endtime="20201030 15:52:27.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.231" level="INFO">VALUE: [4.505500000000218e-05, 4.5083000000001316e-05, 4.48329999999976e-05, 4.477699999999932e-05, 4.516600000000273e-05, 4.49999999999999e-05, 4.470800000000094e-05, 4.495800000000119e-05, 4.501400000000294e-05, 4.5125000000000026e-05, 4.5125000000000026e-05, 4.5138999999999596e-05, 4.467999999999833e-05, 4.470800000000094e-05, 4.4638999999999096e-05, 4.505599999999818e-05, 4.501400000000294e-05, 4.4638999999999096e-05, 4.473599999999661e-05, 4.520800000000144e-05, 4.476399999999922e-05, 4.472200000000051e-05, 4.4861000000000206e-05, 4.505600000000165e-05, 4.5194999999997876e-05, 4.482000000000097e-05, 4.5138999999999596e-05, 4.4874999999999776e-05, 4.4681000000001275e-05, 4.5194999999997876e-05, 4.4638999999999096e-05, 4.522200000000101e-05, 4.476399999999922e-05, 4.4874999999999776e-05, 4.49999999999999e-05, 4.495800000000119e-05, 4.474999999999965e-05, 4.502700000000304e-05, 4.479100000000236e-05, 4.49999999999999e-05, 4.4847000000000636e-05, 4.469400000000137e-05, 4.470799999999747e-05, 4.494400000000162e-05, 4.5111000000000456e-05, 4.476399999999922e-05, 4.495800000000119e-05, 4.4917000000001955e-05, 4.504199999999861e-05, 4.48329999999976e-05]</msg>
<status status="PASS" starttime="20201030 15:52:27.229" endtime="20201030 15:52:27.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.225" endtime="20201030 15:52:27.232"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:27.236" endtime="20201030 15:52:27.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.234" endtime="20201030 15:52:27.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.233" endtime="20201030 15:52:27.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.859" endtime="20201030 15:52:27.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.859" endtime="20201030 15:52:27.257"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.266" endtime="20201030 15:52:27.283"></status>
</kw>
<msg timestamp="20201030 15:52:27.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.264" endtime="20201030 15:52:27.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.284" endtime="20201030 15:52:27.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.287" endtime="20201030 15:52:27.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.261" endtime="20201030 15:52:27.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.259" endtime="20201030 15:52:27.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.296" endtime="20201030 15:52:27.582"></status>
</kw>
<msg timestamp="20201030 15:52:27.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022798861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022845028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.295" endtime="20201030 15:52:27.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022798861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022845028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.587" endtime="20201030 15:52:27.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.595" endtime="20201030 15:52:27.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.292" endtime="20201030 15:52:27.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.290" endtime="20201030 15:52:27.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:27.601" level="INFO">${RESULT} = [{'diff': 4.6166999999999736e-05}, {'diff': 4.65000000000014e-05}, {'diff': 4.5875000000000776e-05}, {'diff': 4.5944999999998626e-05}, {'diff': 4.601400000000047e-05}, {'diff': 4.577799999999979e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:27.598" endtime="20201030 15:52:27.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:27.606" level="INFO">${ACCURACY} = {'diff': [4.6166999999999736e-05, 4.65000000000014e-05, 4.5875000000000776e-05, 4.5944999999998626e-05, 4.601400000000047e-05, 4.577799999999979e-05, 4.5930999999999056e-05, 4.5875000000000776e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:52:27.602" endtime="20201030 15:52:27.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.610" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 15:52:27.609" endtime="20201030 15:52:27.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.613" level="INFO">VALUE: [4.6166999999999736e-05, 4.65000000000014e-05, 4.5875000000000776e-05, 4.5944999999998626e-05, 4.601400000000047e-05, 4.577799999999979e-05, 4.5930999999999056e-05, 4.5875000000000776e-05, 4.583399999999807e-05, 4.6125000000001026e-05, 4.6194999999998876e-05, 4.587499999999731e-05, 4.609699999999842e-05, 4.60000000000009e-05, 4.572199999999804e-05, 4.6139000000000596e-05, 4.616599999999679e-05, 4.599999999999743e-05, 4.592999999999958e-05, 4.5639000000000096e-05, 4.6166999999999736e-05, 4.5889000000000346e-05, 4.5681000000002275e-05, 4.5833000000002067e-05, 4.6111000000001456e-05, 4.6139000000000596e-05, 4.6180999999999306e-05, 4.606899999999928e-05, 4.605599999999918e-05, 4.595799999999872e-05, 4.572199999999804e-05, 4.5847000000001636e-05, 4.611099999999799e-05, 4.5639000000000096e-05, 4.6153000000000166e-05, 4.592999999999958e-05, 4.5652999999999666e-05, 4.604100000000014e-05, 4.6097000000001886e-05, 4.584799999999764e-05, 4.5639000000000096e-05, 4.611199999999746e-05, 4.588899999999688e-05, 4.605499999999971e-05, 4.61939999999994e-05, 4.617999999999983e-05, 4.599999999999743e-05, 4.623600000000158e-05, 4.5889000000000346e-05, 4.6139000000000596e-05]</msg>
<status status="PASS" starttime="20201030 15:52:27.611" endtime="20201030 15:52:27.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.606" endtime="20201030 15:52:27.615"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:27.618" endtime="20201030 15:52:27.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.617" endtime="20201030 15:52:27.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.616" endtime="20201030 15:52:27.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.258" endtime="20201030 15:52:27.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.257" endtime="20201030 15:52:27.639"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.648" endtime="20201030 15:52:27.665"></status>
</kw>
<msg timestamp="20201030 15:52:27.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.646" endtime="20201030 15:52:27.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.666" endtime="20201030 15:52:27.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.669" endtime="20201030 15:52:27.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.644" endtime="20201030 15:52:27.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.642" endtime="20201030 15:52:27.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.678" endtime="20201030 15:52:27.964"></status>
</kw>
<msg timestamp="20201030 15:52:27.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022260514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022307917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.677" endtime="20201030 15:52:27.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022260514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022307917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.968" endtime="20201030 15:52:27.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.976" endtime="20201030 15:52:27.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.674" endtime="20201030 15:52:27.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.672" endtime="20201030 15:52:27.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:27.983" level="INFO">${RESULT} = [{'diff': 4.7403000000001416e-05}, {'diff': 4.7194999999999876e-05}, {'diff': 4.6722999999998516e-05}, {'diff': 4.711199999999846e-05}, {'diff': 4.690200000000144e-05}, {'diff': 4.677800000000079e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:27.979" endtime="20201030 15:52:27.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:27.988" level="INFO">${ACCURACY} = {'diff': [4.7403000000001416e-05, 4.7194999999999876e-05, 4.6722999999998516e-05, 4.711199999999846e-05, 4.690200000000144e-05, 4.677800000000079e-05, 4.672199999999904e-05, 4.720799999999997e-05, 4.7...</msg>
<status status="PASS" starttime="20201030 15:52:27.984" endtime="20201030 15:52:27.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.992" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 15:52:27.991" endtime="20201030 15:52:27.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.995" level="INFO">VALUE: [4.7403000000001416e-05, 4.7194999999999876e-05, 4.6722999999998516e-05, 4.711199999999846e-05, 4.690200000000144e-05, 4.677800000000079e-05, 4.672199999999904e-05, 4.720799999999997e-05, 4.71940000000004e-05, 4.698599999999886e-05, 4.670799999999947e-05, 4.672199999999904e-05, 4.705500000000071e-05, 4.7013999999998e-05, 4.7125000000002026e-05, 4.722199999999954e-05, 4.666600000000076e-05, 4.681900000000003e-05, 4.673599999999861e-05, 4.713899999999813e-05, 4.701400000000147e-05, 4.677800000000079e-05, 4.7194999999999876e-05, 4.673599999999861e-05, 4.70000000000019e-05, 4.6944999999999626e-05, 4.688899999999788e-05, 4.684699999999917e-05, 4.705600000000018e-05, 4.679200000000036e-05, 4.7222999999999016e-05, 4.690299999999745e-05, 4.7181000000000306e-05, 4.6723000000001985e-05, 4.673599999999861e-05, 4.680599999999993e-05, 4.7181000000000306e-05, 4.708299999999985e-05, 4.7013999999998e-05, 4.694400000000015e-05, 4.691600000000101e-05, 4.6639000000001096e-05, 4.697199999999929e-05, 4.690200000000144e-05, 4.697199999999929e-05, 4.680500000000046e-05, 4.713899999999813e-05, 4.723599999999911e-05, 4.666600000000076e-05, 4.708299999999985e-05]</msg>
<status status="PASS" starttime="20201030 15:52:27.993" endtime="20201030 15:52:27.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.989" endtime="20201030 15:52:27.996"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:28.000" endtime="20201030 15:52:28.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.998" endtime="20201030 15:52:28.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.997" endtime="20201030 15:52:28.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.640" endtime="20201030 15:52:28.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.640" endtime="20201030 15:52:28.021"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.029" endtime="20201030 15:52:28.046"></status>
</kw>
<msg timestamp="20201030 15:52:28.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.028" endtime="20201030 15:52:28.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.048" endtime="20201030 15:52:28.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.050" endtime="20201030 15:52:28.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.025" endtime="20201030 15:52:28.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.023" endtime="20201030 15:52:28.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.059" endtime="20201030 15:52:28.346"></status>
</kw>
<msg timestamp="20201030 15:52:28.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021784569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021832833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.058" endtime="20201030 15:52:28.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021784569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021832833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.351" endtime="20201030 15:52:28.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.359" endtime="20201030 15:52:28.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.055" endtime="20201030 15:52:28.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.053" endtime="20201030 15:52:28.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:28.366" level="INFO">${RESULT} = [{'diff': 4.826399999999925e-05}, {'diff': 4.844400000000165e-05}, {'diff': 4.797200000000029e-05}, {'diff': 4.773600000000308e-05}, {'diff': 4.820800000000097e-05}, {'diff': 4.799999999999943e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:28.362" endtime="20201030 15:52:28.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:28.370" level="INFO">${ACCURACY} = {'diff': [4.826399999999925e-05, 4.844400000000165e-05, 4.797200000000029e-05, 4.773600000000308e-05, 4.820800000000097e-05, 4.799999999999943e-05, 4.812499999999956e-05, 4.770800000000047e-05, 4.8097...</msg>
<status status="PASS" starttime="20201030 15:52:28.367" endtime="20201030 15:52:28.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.374" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 15:52:28.373" endtime="20201030 15:52:28.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.377" level="INFO">VALUE: [4.826399999999925e-05, 4.844400000000165e-05, 4.797200000000029e-05, 4.773600000000308e-05, 4.820800000000097e-05, 4.799999999999943e-05, 4.812499999999956e-05, 4.770800000000047e-05, 4.809700000000042e-05, 4.804199999999814e-05, 4.772200000000004e-05, 4.813899999999913e-05, 4.802800000000204e-05, 4.794400000000115e-05, 4.807000000000075e-05, 4.81529999999987e-05, 4.783400000000007e-05, 4.8167000000001736e-05, 4.802799999999857e-05, 4.809700000000042e-05, 4.7945000000000626e-05, 4.787499999999931e-05, 4.776299999999928e-05, 4.780600000000093e-05, 4.801299999999953e-05, 4.805500000000171e-05, 4.8195000000000876e-05, 4.784700000000017e-05, 4.766599999999829e-05, 4.777700000000232e-05, 4.766599999999829e-05, 4.784700000000017e-05, 4.772200000000004e-05, 4.812499999999956e-05, 4.776400000000222e-05, 4.795800000000072e-05, 4.779200000000136e-05, 4.780499999999799e-05, 4.78200000000005e-05, 4.780600000000093e-05, 4.779200000000136e-05, 4.820800000000097e-05, 4.78330000000006e-05, 4.787499999999931e-05, 4.788899999999888e-05, 4.820800000000097e-05, 4.82079999999975e-05, 4.772200000000004e-05, 4.779199999999789e-05, 4.809799999999989e-05]</msg>
<status status="PASS" starttime="20201030 15:52:28.375" endtime="20201030 15:52:28.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.371" endtime="20201030 15:52:28.378"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:28.382" endtime="20201030 15:52:28.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.380" endtime="20201030 15:52:28.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.379" endtime="20201030 15:52:28.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.022" endtime="20201030 15:52:28.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.021" endtime="20201030 15:52:28.403"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.411" endtime="20201030 15:52:28.429"></status>
</kw>
<msg timestamp="20201030 15:52:28.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.410" endtime="20201030 15:52:28.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.431" endtime="20201030 15:52:28.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.433" endtime="20201030 15:52:28.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.407" endtime="20201030 15:52:28.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.405" endtime="20201030 15:52:28.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.444" endtime="20201030 15:52:28.730"></status>
</kw>
<msg timestamp="20201030 15:52:28.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022883778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022933736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.442" endtime="20201030 15:52:28.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022883778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022933736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.734" endtime="20201030 15:52:28.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.742" endtime="20201030 15:52:28.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.439" endtime="20201030 15:52:28.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.437" endtime="20201030 15:52:28.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:28.749" level="INFO">${RESULT} = [{'diff': 4.995799999999925e-05}, {'diff': 4.917999999999936e-05}, {'diff': 4.870800000000147e-05}, {'diff': 4.917999999999936e-05}, {'diff': 4.895799999999825e-05}, {'diff': 4.887500000000031e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:28.746" endtime="20201030 15:52:28.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:28.753" level="INFO">${ACCURACY} = {'diff': [4.995799999999925e-05, 4.917999999999936e-05, 4.870800000000147e-05, 4.917999999999936e-05, 4.895799999999825e-05, 4.887500000000031e-05, 4.916699999999927e-05, 4.908399999999785e-05, 4.9193...</msg>
<status status="PASS" starttime="20201030 15:52:28.750" endtime="20201030 15:52:28.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.758" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 15:52:28.757" endtime="20201030 15:52:28.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.760" level="INFO">VALUE: [4.995799999999925e-05, 4.917999999999936e-05, 4.870800000000147e-05, 4.917999999999936e-05, 4.895799999999825e-05, 4.887500000000031e-05, 4.916699999999927e-05, 4.908399999999785e-05, 4.919399999999893e-05, 4.902799999999957e-05, 4.891699999999902e-05, 4.91529999999997e-05, 4.88330000000016e-05, 4.894499999999816e-05, 4.8945000000001626e-05, 4.898600000000086e-05, 4.863899999999963e-05, 4.8667000000002236e-05, 4.872200000000104e-05, 4.913900000000013e-05, 4.899999999999696e-05, 4.9014e-05, 4.880600000000193e-05, 4.884800000000064e-05, 4.863800000000015e-05, 4.88880000000004e-05, 4.894400000000215e-05, 4.897200000000129e-05, 4.920800000000197e-05, 4.862500000000006e-05, 4.91529999999997e-05, 4.908299999999838e-05, 4.911100000000099e-05, 4.9014e-05, 4.900000000000043e-05, 4.92079999999985e-05, 4.9014e-05, 4.8695000000001376e-05, 4.909700000000142e-05, 4.898600000000086e-05, 4.873600000000061e-05, 4.905599999999871e-05, 4.893099999999859e-05, 4.858299999999788e-05, 4.9014e-05, 4.8709000000000946e-05, 4.875000000000018e-05, 4.879199999999889e-05, 4.876299999999681e-05, 4.911200000000046e-05]</msg>
<status status="PASS" starttime="20201030 15:52:28.759" endtime="20201030 15:52:28.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.754" endtime="20201030 15:52:28.762"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:28.766" endtime="20201030 15:52:28.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.765" endtime="20201030 15:52:28.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.763" endtime="20201030 15:52:28.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.403" endtime="20201030 15:52:28.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.403" endtime="20201030 15:52:28.787"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.796" endtime="20201030 15:52:28.812"></status>
</kw>
<msg timestamp="20201030 15:52:28.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.794" endtime="20201030 15:52:28.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.814" endtime="20201030 15:52:28.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.817" endtime="20201030 15:52:28.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.792" endtime="20201030 15:52:28.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.789" endtime="20201030 15:52:28.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.826" endtime="20201030 15:52:29.113"></status>
</kw>
<msg timestamp="20201030 15:52:29.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021761514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021811486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.824" endtime="20201030 15:52:29.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021761514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021811486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.117" endtime="20201030 15:52:29.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.125" endtime="20201030 15:52:29.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.821" endtime="20201030 15:52:29.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.820" endtime="20201030 15:52:29.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:29.132" level="INFO">${RESULT} = [{'diff': 4.997200000000229e-05}, {'diff': 4.987499999999784e-05}, {'diff': 4.96530000000002e-05}, {'diff': 4.963900000000063e-05}, {'diff': 5.011100000000199e-05}, {'diff': 5.009700000000242e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:29.129" endtime="20201030 15:52:29.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:29.137" level="INFO">${ACCURACY} = {'diff': [4.997200000000229e-05, 4.987499999999784e-05, 4.96530000000002e-05, 4.963900000000063e-05, 5.011100000000199e-05, 5.009700000000242e-05, 4.990300000000045e-05, 4.9695000000002376e-05, 4.9846...</msg>
<status status="PASS" starttime="20201030 15:52:29.133" endtime="20201030 15:52:29.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.141" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 15:52:29.140" endtime="20201030 15:52:29.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.144" level="INFO">VALUE: [4.997200000000229e-05, 4.987499999999784e-05, 4.96530000000002e-05, 4.963900000000063e-05, 5.011100000000199e-05, 5.009700000000242e-05, 4.990300000000045e-05, 4.9695000000002376e-05, 4.98469999999987e-05, 4.972199999999857e-05, 5.011099999999852e-05, 5.008399999999885e-05, 4.968099999999934e-05, 4.991700000000002e-05, 5.006999999999928e-05, 4.976400000000075e-05, 4.976400000000075e-05, 4.965200000000072e-05, 5.001299999999806e-05, 4.979199999999989e-05, 5.0014000000001e-05, 4.972199999999857e-05, 5.0138000000001653e-05, 4.980499999999999e-05, 4.973600000000161e-05, 5.004100000000067e-05, 5.001399999999753e-05, 4.9915999999997074e-05, 5.019399999999993e-05, 4.9707999999999e-05, 5.002800000000057e-05, 5.002800000000057e-05, 4.96530000000002e-05, 4.967999999999986e-05, 4.981900000000303e-05, 5.012500000000156e-05, 4.973599999999814e-05, 5.02079999999995e-05, 4.993099999999959e-05, 4.998599999999839e-05, 4.990300000000045e-05, 4.96530000000002e-05, 4.984700000000217e-05, 4.980600000000293e-05, 4.986100000000174e-05, 4.9972999999998297e-05, 5.006999999999928e-05, 4.999999999999796e-05, 5.012499999999809e-05, 4.9737000000001086e-05]</msg>
<status status="PASS" starttime="20201030 15:52:29.143" endtime="20201030 15:52:29.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.138" endtime="20201030 15:52:29.145"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:29.149" endtime="20201030 15:52:29.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.148" endtime="20201030 15:52:29.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.146" endtime="20201030 15:52:29.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.788" endtime="20201030 15:52:29.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.787" endtime="20201030 15:52:29.170"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.179" endtime="20201030 15:52:29.195"></status>
</kw>
<msg timestamp="20201030 15:52:29.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.177" endtime="20201030 15:52:29.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.197" endtime="20201030 15:52:29.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.199" endtime="20201030 15:52:29.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.174" endtime="20201030 15:52:29.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.172" endtime="20201030 15:52:29.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.208" endtime="20201030 15:52:29.503"></status>
</kw>
<msg timestamp="20201030 15:52:29.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021915333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021967292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.207" endtime="20201030 15:52:29.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021915333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021967292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.507" endtime="20201030 15:52:29.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.516" endtime="20201030 15:52:29.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.204" endtime="20201030 15:52:29.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.202" endtime="20201030 15:52:29.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:29.522" level="INFO">${RESULT} = [{'diff': 5.195900000000073e-05}, {'diff': 5.119400000000093e-05}, {'diff': 5.099999999999896e-05}, {'diff': 5.08469999999997e-05}, {'diff': 5.086099999999927e-05}, {'diff': 5.112500000000256e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:29.519" endtime="20201030 15:52:29.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:29.527" level="INFO">${ACCURACY} = {'diff': [5.195900000000073e-05, 5.119400000000093e-05, 5.099999999999896e-05, 5.08469999999997e-05, 5.086099999999927e-05, 5.112500000000256e-05, 5.073599999999914e-05, 5.104200000000114e-05, 5.08339...</msg>
<status status="PASS" starttime="20201030 15:52:29.523" endtime="20201030 15:52:29.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.531" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 15:52:29.530" endtime="20201030 15:52:29.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.533" level="INFO">VALUE: [5.195900000000073e-05, 5.119400000000093e-05, 5.099999999999896e-05, 5.08469999999997e-05, 5.086099999999927e-05, 5.112500000000256e-05, 5.073599999999914e-05, 5.104200000000114e-05, 5.08339999999996e-05, 5.094500000000016e-05, 5.075000000000218e-05, 5.084799999999917e-05, 5.122299999999955e-05, 5.108399999999985e-05, 5.084799999999917e-05, 5.084800000000264e-05, 5.1165999999998324e-05, 5.076300000000228e-05, 5.109699999999995e-05, 5.0901999999998504e-05, 5.100000000000243e-05, 5.1165999999998324e-05, 5.086099999999927e-05, 5.11530000000017e-05, 5.06530000000012e-05, 5.1014000000002e-05, 5.069400000000043e-05, 5.091700000000102e-05, 5.074999999999871e-05, 5.068100000000034e-05, 5.073600000000261e-05, 5.086099999999927e-05, 5.124999999999921e-05, 5.086099999999927e-05, 5.084799999999917e-05, 5.108399999999985e-05, 5.072199999999957e-05, 5.116700000000127e-05, 5.0973000000002766e-05, 5.079199999999742e-05, 5.118000000000136e-05, 5.068100000000034e-05, 5.101399999999853e-05, 5.123600000000311e-05, 5.094500000000016e-05, 5.119400000000093e-05, 5.069400000000043e-05, 5.098599999999939e-05, 5.081899999999709e-05, 5.105499999999777e-05]</msg>
<status status="PASS" starttime="20201030 15:52:29.532" endtime="20201030 15:52:29.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.527" endtime="20201030 15:52:29.535"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:29.539" endtime="20201030 15:52:29.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.537" endtime="20201030 15:52:29.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.536" endtime="20201030 15:52:29.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.171" endtime="20201030 15:52:29.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.170" endtime="20201030 15:52:29.559"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.568" endtime="20201030 15:52:29.587"></status>
</kw>
<msg timestamp="20201030 15:52:29.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.567" endtime="20201030 15:52:29.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.588" endtime="20201030 15:52:29.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.591" endtime="20201030 15:52:29.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.564" endtime="20201030 15:52:29.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.562" endtime="20201030 15:52:29.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.600" endtime="20201030 15:52:29.886"></status>
</kw>
<msg timestamp="20201030 15:52:29.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023163583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023216236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.598" endtime="20201030 15:52:29.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023163583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023216236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.890" endtime="20201030 15:52:29.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.898" endtime="20201030 15:52:29.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.596" endtime="20201030 15:52:29.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.594" endtime="20201030 15:52:29.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:29.905" level="INFO">${RESULT} = [{'diff': 5.265299999999973e-05}, {'diff': 5.244400000000218e-05}, {'diff': 5.187499999999984e-05}, {'diff': 5.212500000000009e-05}, {'diff': 5.18470000000007e-05}, {'diff': 5.205599999999824e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:29.901" endtime="20201030 15:52:29.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:29.909" level="INFO">${ACCURACY} = {'diff': [5.265299999999973e-05, 5.244400000000218e-05, 5.187499999999984e-05, 5.212500000000009e-05, 5.18470000000007e-05, 5.205599999999824e-05, 5.205599999999824e-05, 5.225000000000021e-05, 5.17639...</msg>
<status status="PASS" starttime="20201030 15:52:29.906" endtime="20201030 15:52:29.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.913" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 15:52:29.912" endtime="20201030 15:52:29.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.916" level="INFO">VALUE: [5.265299999999973e-05, 5.244400000000218e-05, 5.187499999999984e-05, 5.212500000000009e-05, 5.18470000000007e-05, 5.205599999999824e-05, 5.205599999999824e-05, 5.225000000000021e-05, 5.176399999999928e-05, 5.165299999999873e-05, 5.18340000000006e-05, 5.190299999999898e-05, 5.16669999999983e-05, 5.208400000000085e-05, 5.195800000000125e-05, 5.195900000000073e-05, 5.208300000000138e-05, 5.20409999999992e-05, 5.177799999999885e-05, 5.184699999999723e-05, 5.177700000000285e-05, 5.1665999999998824e-05, 5.188899999999941e-05, 5.1902000000002974e-05, 5.2165999999999324e-05, 5.18609999999968e-05, 5.205500000000224e-05, 5.173600000000014e-05, 5.20279999999991e-05, 5.186100000000027e-05, 5.183300000000113e-05, 5.1957999999997784e-05, 5.195800000000125e-05, 5.191700000000202e-05, 5.194500000000116e-05, 5.2207999999998034e-05, 5.183300000000113e-05, 5.177799999999885e-05, 5.186100000000027e-05, 5.18340000000006e-05, 5.161100000000002e-05, 5.173600000000014e-05, 5.174999999999971e-05, 5.190299999999898e-05, 5.219499999999794e-05, 5.208400000000085e-05, 5.186100000000027e-05, 5.197200000000082e-05, 5.1915999999999074e-05, 5.173600000000014e-05]</msg>
<status status="PASS" starttime="20201030 15:52:29.915" endtime="20201030 15:52:29.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.910" endtime="20201030 15:52:29.918"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:29.922" endtime="20201030 15:52:29.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.920" endtime="20201030 15:52:29.942"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.919" endtime="20201030 15:52:29.942"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.560" endtime="20201030 15:52:29.942"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.560" endtime="20201030 15:52:29.943"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.951" endtime="20201030 15:52:29.968"></status>
</kw>
<msg timestamp="20201030 15:52:29.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.950" endtime="20201030 15:52:29.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.970" endtime="20201030 15:52:29.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.972" endtime="20201030 15:52:29.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.947" endtime="20201030 15:52:29.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.945" endtime="20201030 15:52:29.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.981" endtime="20201030 15:52:30.277"></status>
</kw>
<msg timestamp="20201030 15:52:30.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021853611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.980" endtime="20201030 15:52:30.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021853611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.287" endtime="20201030 15:52:30.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.300" endtime="20201030 15:52:30.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.977" endtime="20201030 15:52:30.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.975" endtime="20201030 15:52:30.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:30.312" level="INFO">${RESULT} = [{'diff': 5.354200000000017e-05}, {'diff': 5.30280000000001e-05}, {'diff': 5.308399999999838e-05}, {'diff': 5.311099999999805e-05}, {'diff': 5.3207999999999034e-05}, {'diff': 5.311099999999805e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:30.306" endtime="20201030 15:52:30.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:30.321" level="INFO">${ACCURACY} = {'diff': [5.354200000000017e-05, 5.30280000000001e-05, 5.308399999999838e-05, 5.311099999999805e-05, 5.3207999999999034e-05, 5.311099999999805e-05, 5.312500000000109e-05, 5.301400000000053e-05, 5.2694...</msg>
<status status="PASS" starttime="20201030 15:52:30.314" endtime="20201030 15:52:30.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.329" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 15:52:30.327" endtime="20201030 15:52:30.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.334" level="INFO">VALUE: [5.354200000000017e-05, 5.30280000000001e-05, 5.308399999999838e-05, 5.311099999999805e-05, 5.3207999999999034e-05, 5.311099999999805e-05, 5.312500000000109e-05, 5.301400000000053e-05, 5.269499999999844e-05, 5.293099999999912e-05, 5.290299999999998e-05, 5.308399999999838e-05, 5.30280000000001e-05, 5.29869999999974e-05, 5.2707999999998534e-05, 5.3193999999999464e-05, 5.2665999999999824e-05, 5.2916000000000074e-05, 5.28470000000017e-05, 5.306900000000281e-05, 5.2749999999997244e-05, 5.315299999999676e-05, 5.2971999999998354e-05, 5.306900000000281e-05, 5.272200000000157e-05, 5.272200000000157e-05, 5.31669999999998e-05, 5.273600000000114e-05, 5.277799999999985e-05, 5.287500000000084e-05, 5.319500000000241e-05, 5.284800000000117e-05, 5.319500000000241e-05, 5.280599999999899e-05, 5.298600000000139e-05, 5.295899999999826e-05, 5.312500000000109e-05, 5.298600000000139e-05, 5.2679999999999394e-05, 5.281999999999856e-05, 5.2929999999999644e-05, 5.283399999999813e-05, 5.3152000000000754e-05, 5.3152000000000754e-05, 5.280499999999952e-05, 5.3179999999999894e-05, 5.2902000000000504e-05, 5.2929999999999644e-05, 5.287500000000084e-05, 5.2679999999999394e-05]</msg>
<status status="PASS" starttime="20201030 15:52:30.331" endtime="20201030 15:52:30.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.322" endtime="20201030 15:52:30.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:30.344" endtime="20201030 15:52:30.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.341" endtime="20201030 15:52:30.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.338" endtime="20201030 15:52:30.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.943" endtime="20201030 15:52:30.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.943" endtime="20201030 15:52:30.366"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.376" endtime="20201030 15:52:30.393"></status>
</kw>
<msg timestamp="20201030 15:52:30.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.374" endtime="20201030 15:52:30.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.395" endtime="20201030 15:52:30.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.398" endtime="20201030 15:52:30.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.371" endtime="20201030 15:52:30.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.369" endtime="20201030 15:52:30.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.408" endtime="20201030 15:52:30.723"></status>
</kw>
<msg timestamp="20201030 15:52:30.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024554056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024608569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.407" endtime="20201030 15:52:30.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024554056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024608569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.727" endtime="20201030 15:52:30.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.736" endtime="20201030 15:52:30.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.404" endtime="20201030 15:52:30.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.401" endtime="20201030 15:52:30.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:30.742" level="INFO">${RESULT} = [{'diff': 5.451299999999909e-05}, {'diff': 5.4235999999999174e-05}, {'diff': 5.40280000000011e-05}, {'diff': 5.418100000000037e-05}, {'diff': 5.3680000000000394e-05}, {'diff': 5.41670000000008e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:30.739" endtime="20201030 15:52:30.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:30.746" level="INFO">${ACCURACY} = {'diff': [5.451299999999909e-05, 5.4235999999999174e-05, 5.40280000000011e-05, 5.418100000000037e-05, 5.3680000000000394e-05, 5.41670000000008e-05, 5.383299999999966e-05, 5.400000000000196e-05, 5.4068...</msg>
<status status="PASS" starttime="20201030 15:52:30.743" endtime="20201030 15:52:30.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.751" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 15:52:30.750" endtime="20201030 15:52:30.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.753" level="INFO">VALUE: [5.451299999999909e-05, 5.4235999999999174e-05, 5.40280000000011e-05, 5.418100000000037e-05, 5.3680000000000394e-05, 5.41670000000008e-05, 5.383299999999966e-05, 5.400000000000196e-05, 5.406899999999687e-05, 5.3971999999999354e-05, 5.3957999999999784e-05, 5.412500000000209e-05, 5.3679999999996925e-05, 5.40280000000011e-05, 5.391700000000055e-05, 5.4194000000000464e-05, 5.3971999999999354e-05, 5.38609999999988e-05, 5.411099999999905e-05, 5.405600000000024e-05, 5.3735999999998674e-05, 5.3749999999998244e-05, 5.412499999999862e-05, 5.390300000000098e-05, 5.419499999999994e-05, 5.4235999999999174e-05, 5.395899999999926e-05, 5.409800000000242e-05, 5.411199999999852e-05, 5.4221999999999604e-05, 5.408299999999991e-05, 5.401400000000153e-05, 5.3957999999999784e-05, 5.379100000000095e-05, 5.3957999999999784e-05, 5.409699999999948e-05, 5.4013999999998064e-05, 5.38609999999988e-05, 5.3944000000000214e-05, 5.3693999999999964e-05, 5.3944000000000214e-05, 5.3693999999999964e-05, 5.404200000000067e-05, 5.3693999999999964e-05, 5.388900000000141e-05, 5.4180000000000894e-05, 5.38470000000027e-05, 5.38609999999988e-05, 5.4013999999998064e-05, 5.3971999999999354e-05]</msg>
<status status="PASS" starttime="20201030 15:52:30.752" endtime="20201030 15:52:30.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.747" endtime="20201030 15:52:30.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:30.758" endtime="20201030 15:52:30.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.757" endtime="20201030 15:52:30.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.756" endtime="20201030 15:52:30.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.367" endtime="20201030 15:52:30.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.366" endtime="20201030 15:52:30.779"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.788" endtime="20201030 15:52:30.806"></status>
</kw>
<msg timestamp="20201030 15:52:30.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.786" endtime="20201030 15:52:30.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.807" endtime="20201030 15:52:30.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.810" endtime="20201030 15:52:30.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.783" endtime="20201030 15:52:30.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.781" endtime="20201030 15:52:30.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.819" endtime="20201030 15:52:31.104"></status>
</kw>
<msg timestamp="20201030 15:52:31.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022478028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022533597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.817" endtime="20201030 15:52:31.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022478028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022533597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.108" endtime="20201030 15:52:31.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.117" endtime="20201030 15:52:31.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.815" endtime="20201030 15:52:31.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.813" endtime="20201030 15:52:31.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:31.123" level="INFO">${RESULT} = [{'diff': 5.556899999999837e-05}, {'diff': 5.5263999999999314e-05}, {'diff': 5.463900000000216e-05}, {'diff': 5.5151999999999285e-05}, {'diff': 5.4735999999999674e-05}, {'diff': 5.4985999999999924e-05...</msg>
<status status="PASS" starttime="20201030 15:52:31.120" endtime="20201030 15:52:31.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:31.127" level="INFO">${ACCURACY} = {'diff': [5.556899999999837e-05, 5.5263999999999314e-05, 5.463900000000216e-05, 5.5151999999999285e-05, 5.4735999999999674e-05, 5.4985999999999924e-05, 5.4694000000000964e-05, 5.4929999999998175e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:31.124" endtime="20201030 15:52:31.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.132" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 15:52:31.131" endtime="20201030 15:52:31.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.134" level="INFO">VALUE: [5.556899999999837e-05, 5.5263999999999314e-05, 5.463900000000216e-05, 5.5151999999999285e-05, 5.4735999999999674e-05, 5.4985999999999924e-05, 5.4694000000000964e-05, 5.4929999999998175e-05, 5.462500000000259e-05, 5.4958000000000784e-05, 5.46809999999974e-05, 5.5013999999999064e-05, 5.5193999999997995e-05, 5.513899999999919e-05, 5.46809999999974e-05, 5.519500000000094e-05, 5.516699999999833e-05, 5.511100000000005e-05, 5.491699999999808e-05, 5.520900000000051e-05, 5.504099999999873e-05, 5.51809999999979e-05, 5.4651999999998785e-05, 5.4749999999999244e-05, 5.4637999999999215e-05, 5.49869999999994e-05, 5.4985999999999924e-05, 5.512499999999962e-05, 5.505500000000177e-05, 5.508299999999744e-05, 5.506899999999787e-05, 5.4944000000001214e-05, 5.5013999999999064e-05, 5.4999999999999494e-05, 5.513899999999919e-05, 5.4680000000001394e-05, 5.48609999999998e-05, 5.475000000000271e-05, 5.469500000000044e-05, 5.512499999999962e-05, 5.481900000000109e-05, 5.4735999999999674e-05, 5.463899999999869e-05, 5.4971999999996884e-05, 5.46670000000013e-05, 5.495900000000026e-05, 5.463900000000216e-05, 5.487500000000284e-05, 5.477800000000185e-05, 5.491699999999808e-05]</msg>
<status status="PASS" starttime="20201030 15:52:31.133" endtime="20201030 15:52:31.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.128" endtime="20201030 15:52:31.143"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:31.147" endtime="20201030 15:52:31.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.146" endtime="20201030 15:52:31.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.144" endtime="20201030 15:52:31.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.780" endtime="20201030 15:52:31.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.779" endtime="20201030 15:52:31.168"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.177" endtime="20201030 15:52:31.194"></status>
</kw>
<msg timestamp="20201030 15:52:31.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.176" endtime="20201030 15:52:31.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.196" endtime="20201030 15:52:31.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.198" endtime="20201030 15:52:31.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.173" endtime="20201030 15:52:31.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.171" endtime="20201030 15:52:31.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.208" endtime="20201030 15:52:31.519"></status>
</kw>
<msg timestamp="20201030 15:52:31.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022259153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:31.206" endtime="20201030 15:52:31.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022259153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:31.523" endtime="20201030 15:52:31.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.531" endtime="20201030 15:52:31.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.203" endtime="20201030 15:52:31.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.202" endtime="20201030 15:52:31.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:31.538" level="INFO">${RESULT} = [{'diff': 5.684699999999876e-05}, {'diff': 5.6027999999999634e-05}, {'diff': 5.6221999999998135e-05}, {'diff': 5.5986000000000924e-05}, {'diff': 5.5777999999999384e-05}, {'diff': 5.582000000000156e-05...</msg>
<status status="PASS" starttime="20201030 15:52:31.535" endtime="20201030 15:52:31.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:31.545" level="INFO">${ACCURACY} = {'diff': [5.684699999999876e-05, 5.6027999999999634e-05, 5.6221999999998135e-05, 5.5986000000000924e-05, 5.5777999999999384e-05, 5.582000000000156e-05, 5.608399999999791e-05, 5.56809999999984e-05, 5.6...</msg>
<status status="PASS" starttime="20201030 15:52:31.539" endtime="20201030 15:52:31.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.550" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 15:52:31.549" endtime="20201030 15:52:31.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.553" level="INFO">VALUE: [5.684699999999876e-05, 5.6027999999999634e-05, 5.6221999999998135e-05, 5.5986000000000924e-05, 5.5777999999999384e-05, 5.582000000000156e-05, 5.608399999999791e-05, 5.56809999999984e-05, 5.6222000000001604e-05, 5.570900000000101e-05, 5.577699999999991e-05, 5.5777999999999384e-05, 5.591699999999908e-05, 5.56809999999984e-05, 5.5750000000000244e-05, 5.586099999999733e-05, 5.5958000000001784e-05, 5.583299999999819e-05, 5.579099999999948e-05, 5.588899999999994e-05, 5.5736000000000674e-05, 5.605500000000277e-05, 5.577800000000285e-05, 5.606999999999834e-05, 5.5693999999998495e-05, 5.606899999999887e-05, 5.6041999999999204e-05, 5.5750000000000244e-05, 5.588899999999994e-05, 5.613900000000019e-05, 5.5736000000000674e-05, 5.61809999999989e-05, 5.593099999999865e-05, 5.6041999999999204e-05, 5.6152000000000285e-05, 5.6014000000000064e-05, 5.572300000000058e-05, 5.5736000000000674e-05, 5.586200000000027e-05, 5.5693999999998495e-05, 5.5986000000000924e-05, 5.5888000000000465e-05, 5.5985999999997454e-05, 5.5763999999999814e-05, 5.584700000000123e-05, 5.6152000000000285e-05, 5.608300000000191e-05, 5.563899999999969e-05, 5.5708000000001534e-05, 5.613900000000019e-05]</msg>
<status status="PASS" starttime="20201030 15:52:31.551" endtime="20201030 15:52:31.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.546" endtime="20201030 15:52:31.554"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:31.558" endtime="20201030 15:52:31.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.556" endtime="20201030 15:52:31.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.555" endtime="20201030 15:52:31.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.169" endtime="20201030 15:52:31.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.169" endtime="20201030 15:52:31.579"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.588" endtime="20201030 15:52:31.604"></status>
</kw>
<msg timestamp="20201030 15:52:31.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.586" endtime="20201030 15:52:31.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.606" endtime="20201030 15:52:31.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.609" endtime="20201030 15:52:31.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.584" endtime="20201030 15:52:31.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.581" endtime="20201030 15:52:31.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.618" endtime="20201030 15:52:31.906"></status>
</kw>
<msg timestamp="20201030 15:52:31.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022353319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.617" endtime="20201030 15:52:31.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022353319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.911" endtime="20201030 15:52:31.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.919" endtime="20201030 15:52:31.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.614" endtime="20201030 15:52:31.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.612" endtime="20201030 15:52:31.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:31.926" level="INFO">${RESULT} = [{'diff': 5.795899999999979e-05}, {'diff': 5.7556000000000274e-05}, {'diff': 5.709699999999901e-05}, {'diff': 5.7013999999997594e-05}, {'diff': 5.7055999999999774e-05}, {'diff': 5.690300000000051e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:31.923" endtime="20201030 15:52:31.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:31.931" level="INFO">${ACCURACY} = {'diff': [5.795899999999979e-05, 5.7556000000000274e-05, 5.709699999999901e-05, 5.7013999999997594e-05, 5.7055999999999774e-05, 5.690300000000051e-05, 5.6722000000002104e-05, 5.7208000000003034e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:52:31.927" endtime="20201030 15:52:31.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.935" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 15:52:31.934" endtime="20201030 15:52:31.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.938" level="INFO">VALUE: [5.795899999999979e-05, 5.7556000000000274e-05, 5.709699999999901e-05, 5.7013999999997594e-05, 5.7055999999999774e-05, 5.690300000000051e-05, 5.6722000000002104e-05, 5.7208000000003034e-05, 5.6943999999999745e-05, 5.683299999999919e-05, 5.683299999999919e-05, 5.7014000000001064e-05, 5.7069999999999343e-05, 5.6764000000000814e-05, 5.695900000000226e-05, 5.7042000000000204e-05, 5.684799999999823e-05, 5.711100000000205e-05, 5.6916000000000605e-05, 5.687500000000137e-05, 5.7180000000000425e-05, 5.6764000000000814e-05, 5.6750000000001244e-05, 5.6971999999998885e-05, 5.711099999999858e-05, 5.7013999999997594e-05, 5.6707999999999065e-05, 5.7180000000000425e-05, 5.68610000000018e-05, 5.683300000000266e-05, 5.680500000000005e-05, 5.712500000000162e-05, 5.716700000000033e-05, 5.7221999999999135e-05, 5.6707999999999065e-05, 5.684699999999876e-05, 5.7000000000001494e-05, 5.7083999999998913e-05, 5.6791999999999954e-05, 5.709800000000195e-05, 5.68749999999979e-05, 5.6791999999999954e-05, 5.690300000000051e-05, 5.683399999999866e-05, 5.715300000000076e-05, 5.6750000000001244e-05, 5.6805999999999524e-05, 5.684699999999876e-05, 5.6930000000000175e-05, 5.7013999999997594e-05]</msg>
<status status="PASS" starttime="20201030 15:52:31.936" endtime="20201030 15:52:31.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.931" endtime="20201030 15:52:31.939"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:31.943" endtime="20201030 15:52:31.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.941" endtime="20201030 15:52:31.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.940" endtime="20201030 15:52:31.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.580" endtime="20201030 15:52:31.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.579" endtime="20201030 15:52:31.964"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.973" endtime="20201030 15:52:31.991"></status>
</kw>
<msg timestamp="20201030 15:52:31.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.972" endtime="20201030 15:52:31.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.992" endtime="20201030 15:52:31.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.995" endtime="20201030 15:52:31.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.969" endtime="20201030 15:52:31.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.967" endtime="20201030 15:52:31.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.005" endtime="20201030 15:52:32.286"></status>
</kw>
<msg timestamp="20201030 15:52:32.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023589667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023648292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.003" endtime="20201030 15:52:32.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023589667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023648292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.291" endtime="20201030 15:52:32.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.299" endtime="20201030 15:52:32.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.000" endtime="20201030 15:52:32.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.998" endtime="20201030 15:52:32.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:32.306" level="INFO">${RESULT} = [{'diff': 5.862499999999965e-05}, {'diff': 5.804099999999826e-05}, {'diff': 5.816700000000133e-05}, {'diff': 5.78610000000028e-05}, {'diff': 5.7944000000000745e-05}, {'diff': 5.8222000000000135e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:32.303" endtime="20201030 15:52:32.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:32.310" level="INFO">${ACCURACY} = {'diff': [5.862499999999965e-05, 5.804099999999826e-05, 5.816700000000133e-05, 5.78610000000028e-05, 5.7944000000000745e-05, 5.8222000000000135e-05, 5.8041999999997734e-05, 5.788900000000194e-05, 5.77...</msg>
<status status="PASS" starttime="20201030 15:52:32.307" endtime="20201030 15:52:32.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.315" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 15:52:32.314" endtime="20201030 15:52:32.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.318" level="INFO">VALUE: [5.862499999999965e-05, 5.804099999999826e-05, 5.816700000000133e-05, 5.78610000000028e-05, 5.7944000000000745e-05, 5.8222000000000135e-05, 5.8041999999997734e-05, 5.788900000000194e-05, 5.770899999999954e-05, 5.8042000000001204e-05, 5.815300000000176e-05, 5.790299999999804e-05, 5.7999999999999025e-05, 5.7763999999998344e-05, 5.819500000000047e-05, 5.812499999999915e-05, 5.770899999999954e-05, 5.8028000000001634e-05, 5.818099999999743e-05, 5.7778000000001384e-05, 5.7736000000002674e-05, 5.804099999999826e-05, 5.761100000000255e-05, 5.7901999999998566e-05, 5.813900000000219e-05, 5.813899999999872e-05, 5.7735999999999205e-05, 5.7721999999999635e-05, 5.812499999999915e-05, 5.7778000000001384e-05, 5.7806000000000524e-05, 5.812499999999915e-05, 5.815300000000176e-05, 5.8013999999998594e-05, 5.7958000000000315e-05, 5.7778000000001384e-05, 5.793100000000065e-05, 5.786099999999933e-05, 5.7820000000000094e-05, 5.815300000000176e-05, 5.7764000000001814e-05, 5.797299999999936e-05, 5.765300000000126e-05, 5.833300000000069e-05, 5.795899999999979e-05, 5.811099999999958e-05, 5.7735999999999205e-05, 5.809700000000001e-05, 5.7680000000000925e-05, 5.781900000000062e-05]</msg>
<status status="PASS" starttime="20201030 15:52:32.316" endtime="20201030 15:52:32.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.311" endtime="20201030 15:52:32.320"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:32.324" endtime="20201030 15:52:32.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.322" endtime="20201030 15:52:32.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.321" endtime="20201030 15:52:32.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.965" endtime="20201030 15:52:32.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.964" endtime="20201030 15:52:32.345"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.354" endtime="20201030 15:52:32.371"></status>
</kw>
<msg timestamp="20201030 15:52:32.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.352" endtime="20201030 15:52:32.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.372" endtime="20201030 15:52:32.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.375" endtime="20201030 15:52:32.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.350" endtime="20201030 15:52:32.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.348" endtime="20201030 15:52:32.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.384" endtime="20201030 15:52:32.672"></status>
</kw>
<msg timestamp="20201030 15:52:32.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022422097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022481347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.383" endtime="20201030 15:52:32.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022422097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022481347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.676" endtime="20201030 15:52:32.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.685" endtime="20201030 15:52:32.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.380" endtime="20201030 15:52:32.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.378" endtime="20201030 15:52:32.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:32.692" level="INFO">${RESULT} = [{'diff': 5.9250000000000275e-05}, {'diff': 5.930499999999908e-05}, {'diff': 5.8930000000002175e-05}, {'diff': 5.9013999999999595e-05}, {'diff': 5.9027999999999164e-05}, {'diff': 5.912500000000015e-05...</msg>
<status status="PASS" starttime="20201030 15:52:32.688" endtime="20201030 15:52:32.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:32.697" level="INFO">${ACCURACY} = {'diff': [5.9250000000000275e-05, 5.930499999999908e-05, 5.8930000000002175e-05, 5.9013999999999595e-05, 5.9027999999999164e-05, 5.912500000000015e-05, 5.8722000000000635e-05, 5.891700000000208e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:52:32.693" endtime="20201030 15:52:32.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.702" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 15:52:32.701" endtime="20201030 15:52:32.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.704" level="INFO">VALUE: [5.9250000000000275e-05, 5.930499999999908e-05, 5.8930000000002175e-05, 5.9013999999999595e-05, 5.9027999999999164e-05, 5.912500000000015e-05, 5.8722000000000635e-05, 5.891700000000208e-05, 5.918099999999843e-05, 5.859700000000051e-05, 5.909700000000101e-05, 5.9027999999999164e-05, 5.9027999999999164e-05, 5.890299999999904e-05, 5.8957999999997845e-05, 5.8986000000000455e-05, 5.913899999999972e-05, 5.8972000000000885e-05, 5.8944000000001745e-05, 5.898699999999993e-05, 5.8679999999998456e-05, 5.863899999999922e-05, 5.863900000000269e-05, 5.9000000000000025e-05, 5.8958000000001315e-05, 5.901300000000012e-05, 5.9013999999999595e-05, 5.8693999999998026e-05, 5.913899999999972e-05, 5.90550000000023e-05, 5.8929999999998706e-05, 5.8722000000000635e-05, 5.916700000000233e-05, 5.906900000000187e-05, 5.8707999999997595e-05, 5.886100000000033e-05, 5.9208000000001565e-05, 5.8694000000001495e-05, 5.886099999999686e-05, 5.8972000000000885e-05, 5.883300000000119e-05, 5.911099999999711e-05, 5.895900000000079e-05, 5.8763999999999345e-05, 5.912500000000015e-05, 5.9098000000000483e-05, 5.9263999999999845e-05, 5.8791999999998484e-05, 5.895899999999732e-05, 5.8736000000000205e-05]</msg>
<status status="PASS" starttime="20201030 15:52:32.703" endtime="20201030 15:52:32.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.698" endtime="20201030 15:52:32.706"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:32.709" endtime="20201030 15:52:32.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.708" endtime="20201030 15:52:32.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.707" endtime="20201030 15:52:32.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.346" endtime="20201030 15:52:32.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.345" endtime="20201030 15:52:32.730"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.739" endtime="20201030 15:52:32.756"></status>
</kw>
<msg timestamp="20201030 15:52:32.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.738" endtime="20201030 15:52:32.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.758" endtime="20201030 15:52:32.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.760" endtime="20201030 15:52:32.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.735" endtime="20201030 15:52:32.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.733" endtime="20201030 15:52:32.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.770" endtime="20201030 15:52:33.058"></status>
</kw>
<msg timestamp="20201030 15:52:33.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022317583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.769" endtime="20201030 15:52:33.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022317583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.062" endtime="20201030 15:52:33.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.071" endtime="20201030 15:52:33.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.766" endtime="20201030 15:52:33.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.764" endtime="20201030 15:52:33.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:33.078" level="INFO">${RESULT} = [{'diff': 6.0263999999997375e-05}, {'diff': 6.0457999999999346e-05}, {'diff': 5.9693999999999026e-05}, {'diff': 5.9693999999999026e-05}, {'diff': 6.012500000000115e-05}, {'diff': 6.0221999999998665e-0...</msg>
<status status="PASS" starttime="20201030 15:52:33.075" endtime="20201030 15:52:33.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:33.082" level="INFO">${ACCURACY} = {'diff': [6.0263999999997375e-05, 6.0457999999999346e-05, 5.9693999999999026e-05, 5.9693999999999026e-05, 6.012500000000115e-05, 6.0221999999998665e-05, 6.005499999999983e-05, 5.987499999999743e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:52:33.079" endtime="20201030 15:52:33.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.087" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 15:52:33.086" endtime="20201030 15:52:33.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.090" level="INFO">VALUE: [6.0263999999997375e-05, 6.0457999999999346e-05, 5.9693999999999026e-05, 5.9693999999999026e-05, 6.012500000000115e-05, 6.0221999999998665e-05, 6.005499999999983e-05, 5.987499999999743e-05, 5.9721999999998165e-05, 5.9721999999998165e-05, 6.00689999999994e-05, 5.981899999999915e-05, 5.984699999999829e-05, 5.962499999999718e-05, 6.009699999999854e-05, 5.9763999999996875e-05, 5.991699999999961e-05, 5.995899999999832e-05, 5.990300000000004e-05, 6.020899999999857e-05, 5.963900000000022e-05, 5.968099999999893e-05, 6.0112000000001053e-05, 6.004099999999679e-05, 5.963900000000022e-05, 5.983300000000219e-05, 5.9637999999997277e-05, 5.9901999999997096e-05, 5.9901999999997096e-05, 5.977699999999697e-05, 5.980500000000305e-05, 6.015300000000029e-05, 6.0193999999999526e-05, 5.984700000000176e-05, 6.009700000000201e-05, 5.9958000000002315e-05, 6.0222000000002135e-05, 5.959700000000151e-05, 5.9722000000001635e-05, 5.9820000000002094e-05, 6.018099999999943e-05, 6.01810000000029e-05, 5.9820000000002094e-05, 5.970900000000154e-05, 5.9736000000001205e-05, 6.0028000000000165e-05, 5.973700000000068e-05, 5.970900000000154e-05, 6.0193999999999526e-05, 5.990300000000004e-05]</msg>
<status status="PASS" starttime="20201030 15:52:33.088" endtime="20201030 15:52:33.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.083" endtime="20201030 15:52:33.091"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:33.095" endtime="20201030 15:52:33.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.093" endtime="20201030 15:52:33.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.092" endtime="20201030 15:52:33.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.731" endtime="20201030 15:52:33.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.731" endtime="20201030 15:52:33.116"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.125" endtime="20201030 15:52:33.143"></status>
</kw>
<msg timestamp="20201030 15:52:33.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.123" endtime="20201030 15:52:33.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.145" endtime="20201030 15:52:33.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.148" endtime="20201030 15:52:33.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.121" endtime="20201030 15:52:33.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.118" endtime="20201030 15:52:33.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.157" endtime="20201030 15:52:33.444"></status>
</kw>
<msg timestamp="20201030 15:52:33.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024002931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024064556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.156" endtime="20201030 15:52:33.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024002931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024064556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.448" endtime="20201030 15:52:33.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.457" endtime="20201030 15:52:33.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.153" endtime="20201030 15:52:33.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.151" endtime="20201030 15:52:33.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:33.464" level="INFO">${RESULT} = [{'diff': 6.162499999999918e-05}, {'diff': 6.144500000000025e-05}, {'diff': 6.0819999999999624e-05}, {'diff': 6.08750000000019e-05}, {'diff': 6.101299999999865e-05}, {'diff': 6.118000000000096e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:33.460" endtime="20201030 15:52:33.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:33.468" level="INFO">${ACCURACY} = {'diff': [6.162499999999918e-05, 6.144500000000025e-05, 6.0819999999999624e-05, 6.08750000000019e-05, 6.101299999999865e-05, 6.118000000000096e-05, 6.109699999999954e-05, 6.0944000000000276e-05, 6.083...</msg>
<status status="PASS" starttime="20201030 15:52:33.465" endtime="20201030 15:52:33.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.473" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 15:52:33.472" endtime="20201030 15:52:33.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.475" level="INFO">VALUE: [6.162499999999918e-05, 6.144500000000025e-05, 6.0819999999999624e-05, 6.08750000000019e-05, 6.101299999999865e-05, 6.118000000000096e-05, 6.109699999999954e-05, 6.0944000000000276e-05, 6.083299999999972e-05, 6.083299999999972e-05, 6.08750000000019e-05, 6.0763999999997875e-05, 6.090300000000104e-05, 6.116600000000139e-05, 6.111100000000258e-05, 6.090300000000104e-05, 6.1014000000001595e-05, 6.0819999999999624e-05, 6.0791999999997015e-05, 6.072300000000211e-05, 6.1195e-05, 6.0986000000002455e-05, 6.066700000000036e-05, 6.10690000000004e-05, 6.120899999999957e-05, 6.0736000000002205e-05, 6.112499999999868e-05, 6.091700000000061e-05, 6.1000000000002025e-05, 6.07629999999984e-05, 6.090300000000104e-05, 6.1014000000001595e-05, 6.084700000000276e-05, 6.0694000000000026e-05, 6.0971999999999416e-05, 6.088900000000147e-05, 6.0708000000003065e-05, 6.122199999999967e-05, 6.061100000000208e-05, 6.066700000000036e-05, 6.122199999999967e-05, 6.113899999999825e-05, 6.1014000000001595e-05, 6.109700000000301e-05, 6.119400000000053e-05, 6.104200000000073e-05, 6.068099999999993e-05, 6.107000000000334e-05, 6.0806000000000054e-05, 6.086099999999886e-05]</msg>
<status status="PASS" starttime="20201030 15:52:33.474" endtime="20201030 15:52:33.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.469" endtime="20201030 15:52:33.478"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:33.482" endtime="20201030 15:52:33.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.480" endtime="20201030 15:52:33.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.479" endtime="20201030 15:52:33.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.117" endtime="20201030 15:52:33.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.116" endtime="20201030 15:52:33.502"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.512" endtime="20201030 15:52:33.530"></status>
</kw>
<msg timestamp="20201030 15:52:33.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.511" endtime="20201030 15:52:33.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.532" endtime="20201030 15:52:33.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.534" endtime="20201030 15:52:33.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.508" endtime="20201030 15:52:33.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.505" endtime="20201030 15:52:33.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.544" endtime="20201030 15:52:33.830"></status>
</kw>
<msg timestamp="20201030 15:52:33.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023286806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023349444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.542" endtime="20201030 15:52:33.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023286806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023349444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.834" endtime="20201030 15:52:33.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.843" endtime="20201030 15:52:33.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.540" endtime="20201030 15:52:33.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.538" endtime="20201030 15:52:33.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:33.850" level="INFO">${RESULT} = [{'diff': 6.263800000000028e-05}, {'diff': 6.195800000000085e-05}, {'diff': 6.204199999999827e-05}, {'diff': 6.213799999999978e-05}, {'diff': 6.191700000000161e-05}, {'diff': 6.22629999999999e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:33.846" endtime="20201030 15:52:33.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:33.855" level="INFO">${ACCURACY} = {'diff': [6.263800000000028e-05, 6.195800000000085e-05, 6.204199999999827e-05, 6.213799999999978e-05, 6.191700000000161e-05, 6.22629999999999e-05, 6.180600000000105e-05, 6.177799999999845e-05, 6.17090...</msg>
<status status="PASS" starttime="20201030 15:52:33.851" endtime="20201030 15:52:33.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.860" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 15:52:33.858" endtime="20201030 15:52:33.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.862" level="INFO">VALUE: [6.263800000000028e-05, 6.195800000000085e-05, 6.204199999999827e-05, 6.213799999999978e-05, 6.191700000000161e-05, 6.22629999999999e-05, 6.180600000000105e-05, 6.177799999999845e-05, 6.170900000000007e-05, 6.2195000000001e-05, 6.176400000000234e-05, 6.180600000000105e-05, 6.209699999999707e-05, 6.20690000000014e-05, 6.209700000000054e-05, 6.211100000000011e-05, 6.205499999999836e-05, 6.205500000000183e-05, 6.220799999999763e-05, 6.209700000000054e-05, 6.183300000000072e-05, 6.17499999999993e-05, 6.218100000000143e-05, 6.205499999999836e-05, 6.187499999999943e-05, 6.20279999999987e-05, 6.176400000000234e-05, 6.166700000000136e-05, 6.194499999999728e-05, 6.20560000000013e-05, 6.190299999999857e-05, 6.184700000000029e-05, 6.218099999999796e-05, 6.173599999999974e-05, 6.176399999999888e-05, 6.18620000000028e-05, 6.216699999999839e-05, 6.222200000000067e-05, 6.177700000000244e-05, 6.177699999999897e-05, 6.18340000000002e-05, 6.222200000000067e-05, 6.17219999999967e-05, 6.219399999999806e-05, 6.1888999999999e-05, 6.213899999999925e-05, 6.209700000000054e-05, 6.169400000000103e-05, 6.201399999999913e-05, 6.219400000000153e-05]</msg>
<status status="PASS" starttime="20201030 15:52:33.861" endtime="20201030 15:52:33.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.856" endtime="20201030 15:52:33.863"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:33.867" endtime="20201030 15:52:33.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.866" endtime="20201030 15:52:33.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.865" endtime="20201030 15:52:33.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.503" endtime="20201030 15:52:33.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.503" endtime="20201030 15:52:33.888"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.897" endtime="20201030 15:52:33.915"></status>
</kw>
<msg timestamp="20201030 15:52:33.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.896" endtime="20201030 15:52:33.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.916" endtime="20201030 15:52:33.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.919" endtime="20201030 15:52:33.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.893" endtime="20201030 15:52:33.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.891" endtime="20201030 15:52:33.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.928" endtime="20201030 15:52:34.218"></status>
</kw>
<msg timestamp="20201030 15:52:34.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022412444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.927" endtime="20201030 15:52:34.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022412444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.222" endtime="20201030 15:52:34.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.231" endtime="20201030 15:52:34.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.924" endtime="20201030 15:52:34.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.922" endtime="20201030 15:52:34.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:34.237" level="INFO">${RESULT} = [{'diff': 6.343099999999921e-05}, {'diff': 6.295800000000185e-05}, {'diff': 6.265299999999932e-05}, {'diff': 6.267999999999899e-05}, {'diff': 6.270799999999813e-05}, {'diff': 6.319400000000253e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:34.234" endtime="20201030 15:52:34.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:34.241" level="INFO">${ACCURACY} = {'diff': [6.343099999999921e-05, 6.295800000000185e-05, 6.265299999999932e-05, 6.267999999999899e-05, 6.270799999999813e-05, 6.319400000000253e-05, 6.304199999999927e-05, 6.318099999999896e-05, 6.3194...</msg>
<status status="PASS" starttime="20201030 15:52:34.238" endtime="20201030 15:52:34.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.246" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 15:52:34.245" endtime="20201030 15:52:34.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.248" level="INFO">VALUE: [6.343099999999921e-05, 6.295800000000185e-05, 6.265299999999932e-05, 6.267999999999899e-05, 6.270799999999813e-05, 6.319400000000253e-05, 6.304199999999927e-05, 6.318099999999896e-05, 6.319499999999853e-05, 6.319499999999853e-05, 6.2889e-05, 6.304199999999927e-05, 6.30560000000023e-05, 6.308400000000144e-05, 6.3195000000002e-05, 6.311100000000111e-05, 6.279199999999902e-05, 6.315299999999982e-05, 6.305499999999936e-05, 6.305500000000283e-05, 6.288800000000053e-05, 6.29439999999988e-05, 6.315200000000035e-05, 6.30829999999985e-05, 6.279099999999954e-05, 6.284700000000129e-05, 6.290299999999957e-05, 6.2889e-05, 6.312500000000068e-05, 6.284699999999782e-05, 6.304199999999927e-05, 6.270799999999813e-05, 6.309700000000154e-05, 6.297200000000142e-05, 6.26950000000015e-05, 6.280599999999859e-05, 6.261100000000061e-05, 6.308399999999798e-05, 6.28340000000012e-05, 6.279200000000248e-05, 6.265299999999932e-05, 6.269399999999856e-05, 6.313800000000078e-05, 6.281899999999868e-05, 6.273600000000074e-05, 6.315299999999982e-05, 6.313900000000025e-05, 6.311100000000111e-05, 6.266599999999942e-05, 6.286100000000086e-05]</msg>
<status status="PASS" starttime="20201030 15:52:34.247" endtime="20201030 15:52:34.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.242" endtime="20201030 15:52:34.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:34.254" endtime="20201030 15:52:34.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.252" endtime="20201030 15:52:34.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.251" endtime="20201030 15:52:34.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.889" endtime="20201030 15:52:34.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.889" endtime="20201030 15:52:34.274"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.283" endtime="20201030 15:52:34.304"></status>
</kw>
<msg timestamp="20201030 15:52:34.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.281" endtime="20201030 15:52:34.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.307" endtime="20201030 15:52:34.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.312" endtime="20201030 15:52:34.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.279" endtime="20201030 15:52:34.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.277" endtime="20201030 15:52:34.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.331" endtime="20201030 15:52:34.631"></status>
</kw>
<msg timestamp="20201030 15:52:34.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023174083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023238319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.328" endtime="20201030 15:52:34.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023174083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023238319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.635" endtime="20201030 15:52:34.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.644" endtime="20201030 15:52:34.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.323" endtime="20201030 15:52:34.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.319" endtime="20201030 15:52:34.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:34.650" level="INFO">${RESULT} = [{'diff': 6.423599999999877e-05}, {'diff': 6.418000000000049e-05}, {'diff': 6.398699999999799e-05}, {'diff': 6.3889000000001e-05}, {'diff': 6.366600000000042e-05}, {'diff': 6.40829999999995e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:52:34.647" endtime="20201030 15:52:34.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:34.654" level="INFO">${ACCURACY} = {'diff': [6.423599999999877e-05, 6.418000000000049e-05, 6.398699999999799e-05, 6.3889000000001e-05, 6.366600000000042e-05, 6.40829999999995e-05, 6.37080000000026e-05, 6.379100000000054e-05, 6.38610000...</msg>
<status status="PASS" starttime="20201030 15:52:34.651" endtime="20201030 15:52:34.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.659" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 15:52:34.658" endtime="20201030 15:52:34.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.661" level="INFO">VALUE: [6.423599999999877e-05, 6.418000000000049e-05, 6.398699999999799e-05, 6.3889000000001e-05, 6.366600000000042e-05, 6.40829999999995e-05, 6.37080000000026e-05, 6.379100000000054e-05, 6.386100000000186e-05, 6.365300000000032e-05, 6.369399999999956e-05, 6.383299999999925e-05, 6.369399999999956e-05, 6.39439999999998e-05, 6.39439999999998e-05, 6.380600000000305e-05, 6.368099999999946e-05, 6.39029999999971e-05, 6.362500000000118e-05, 6.368099999999946e-05, 6.386099999999839e-05, 6.368099999999946e-05, 6.401400000000113e-05, 6.380599999999959e-05, 6.369499999999903e-05, 6.37089999999986e-05, 6.381999999999916e-05, 6.411100000000211e-05, 6.366600000000042e-05, 6.387499999999796e-05, 6.405499999999689e-05, 6.413899999999778e-05, 6.376400000000088e-05, 6.365300000000032e-05, 6.418000000000049e-05, 6.365300000000032e-05, 6.379200000000002e-05, 6.379200000000002e-05, 6.42219999999992e-05, 6.373599999999827e-05, 6.391700000000014e-05, 6.365300000000032e-05, 6.369499999999903e-05, 6.3889000000001e-05, 6.379100000000054e-05, 6.37080000000026e-05, 6.394499999999928e-05, 6.395899999999885e-05, 6.406899999999993e-05, 6.388800000000153e-05]</msg>
<status status="PASS" starttime="20201030 15:52:34.660" endtime="20201030 15:52:34.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.655" endtime="20201030 15:52:34.663"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:34.667" endtime="20201030 15:52:34.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.666" endtime="20201030 15:52:34.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.665" endtime="20201030 15:52:34.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.275" endtime="20201030 15:52:34.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.275" endtime="20201030 15:52:34.688"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.697" endtime="20201030 15:52:34.713"></status>
</kw>
<msg timestamp="20201030 15:52:34.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.695" endtime="20201030 15:52:34.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.715" endtime="20201030 15:52:34.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.718" endtime="20201030 15:52:34.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.693" endtime="20201030 15:52:34.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.690" endtime="20201030 15:52:34.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.727" endtime="20201030 15:52:35.012"></status>
</kw>
<msg timestamp="20201030 15:52:35.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021905625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219715, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:34.725" endtime="20201030 15:52:35.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021905625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219715, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:35.016" endtime="20201030 15:52:35.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.025" endtime="20201030 15:52:35.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.723" endtime="20201030 15:52:35.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.721" endtime="20201030 15:52:35.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:35.031" level="INFO">${RESULT} = [{'diff': 6.587499999999996e-05}, {'diff': 6.516699999999792e-05}, {'diff': 6.48479999999993e-05}, {'diff': 6.488799999999906e-05}, {'diff': 6.499999999999909e-05}, {'diff': 6.473600000000274e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:35.028" endtime="20201030 15:52:35.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:35.036" level="INFO">${ACCURACY} = {'diff': [6.587499999999996e-05, 6.516699999999792e-05, 6.48479999999993e-05, 6.488799999999906e-05, 6.499999999999909e-05, 6.473600000000274e-05, 6.473599999999927e-05, 6.47219999999997e-05, 6.466700...</msg>
<status status="PASS" starttime="20201030 15:52:35.032" endtime="20201030 15:52:35.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.041" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 15:52:35.040" endtime="20201030 15:52:35.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.043" level="INFO">VALUE: [6.587499999999996e-05, 6.516699999999792e-05, 6.48479999999993e-05, 6.488799999999906e-05, 6.499999999999909e-05, 6.473600000000274e-05, 6.473599999999927e-05, 6.47219999999997e-05, 6.466700000000089e-05, 6.520800000000063e-05, 6.491700000000114e-05, 6.499999999999909e-05, 6.512500000000268e-05, 6.505599999999737e-05, 6.509700000000007e-05, 6.481899999999721e-05, 6.484699999999982e-05, 6.487500000000243e-05, 6.477799999999798e-05, 6.479200000000102e-05, 6.479199999999755e-05, 6.515300000000182e-05, 6.484800000000276e-05, 6.50700000000004e-05, 6.472300000000264e-05, 6.498699999999899e-05, 6.469400000000056e-05, 6.502699999999875e-05, 6.49440000000008e-05, 6.523600000000324e-05, 6.480500000000111e-05, 6.487500000000243e-05, 6.50830000000005e-05, 6.501400000000213e-05, 6.465299999999785e-05, 6.501400000000213e-05, 6.498600000000299e-05, 6.469500000000003e-05, 6.520800000000063e-05, 6.49029999999981e-05, 6.477800000000145e-05, 6.484699999999982e-05, 6.474999999999884e-05, 6.480600000000059e-05, 6.483399999999973e-05, 6.518100000000096e-05, 6.479199999999755e-05, 6.472299999999917e-05, 6.495799999999691e-05, 6.519500000000053e-05]</msg>
<status status="PASS" starttime="20201030 15:52:35.042" endtime="20201030 15:52:35.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.037" endtime="20201030 15:52:35.045"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:35.048" endtime="20201030 15:52:35.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.047" endtime="20201030 15:52:35.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.046" endtime="20201030 15:52:35.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.689" endtime="20201030 15:52:35.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.688" endtime="20201030 15:52:35.069"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.078" endtime="20201030 15:52:35.095"></status>
</kw>
<msg timestamp="20201030 15:52:35.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.077" endtime="20201030 15:52:35.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.096" endtime="20201030 15:52:35.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.099" endtime="20201030 15:52:35.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.074" endtime="20201030 15:52:35.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.072" endtime="20201030 15:52:35.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.108" endtime="20201030 15:52:35.395"></status>
</kw>
<msg timestamp="20201030 15:52:35.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021925431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021991736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.106" endtime="20201030 15:52:35.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021925431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021991736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.400" endtime="20201030 15:52:35.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.408" endtime="20201030 15:52:35.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.104" endtime="20201030 15:52:35.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.102" endtime="20201030 15:52:35.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:35.414" level="INFO">${RESULT} = [{'diff': 6.630500000000261e-05}, {'diff': 6.645899999999788e-05}, {'diff': 6.613800000000031e-05}, {'diff': 6.598699999999999e-05}, {'diff': 6.569399999999809e-05}, {'diff': 6.581899999999821e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:35.411" endtime="20201030 15:52:35.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:35.419" level="INFO">${ACCURACY} = {'diff': [6.630500000000261e-05, 6.645899999999788e-05, 6.613800000000031e-05, 6.598699999999999e-05, 6.569399999999809e-05, 6.581899999999821e-05, 6.615199999999988e-05, 6.601399999999966e-05, 6.6125...</msg>
<status status="PASS" starttime="20201030 15:52:35.415" endtime="20201030 15:52:35.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.423" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 15:52:35.422" endtime="20201030 15:52:35.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.426" level="INFO">VALUE: [6.630500000000261e-05, 6.645899999999788e-05, 6.613800000000031e-05, 6.598699999999999e-05, 6.569399999999809e-05, 6.581899999999821e-05, 6.615199999999988e-05, 6.601399999999966e-05, 6.612500000000021e-05, 6.583299999999778e-05, 6.57639999999994e-05, 6.565299999999885e-05, 6.62359999999973e-05, 6.568100000000146e-05, 6.594399999999834e-05, 6.569399999999809e-05, 6.580599999999812e-05, 6.601399999999966e-05, 6.577799999999898e-05, 6.60700000000014e-05, 6.625000000000034e-05, 6.574999999999984e-05, 6.574999999999984e-05, 6.604200000000227e-05, 6.570800000000113e-05, 6.587499999999996e-05, 6.600000000000009e-05, 6.583300000000125e-05, 6.587499999999996e-05, 6.604099999999932e-05, 6.609700000000107e-05, 6.62220000000012e-05, 6.611100000000064e-05, 6.615299999999935e-05, 6.587499999999996e-05, 6.602799999999923e-05, 6.570799999999766e-05, 6.616699999999892e-05, 6.57220000000007e-05, 6.622199999999773e-05, 6.57639999999994e-05, 6.584700000000082e-05, 6.600000000000009e-05, 6.600000000000009e-05, 6.59440000000018e-05, 6.597300000000042e-05, 6.563899999999928e-05, 6.616700000000239e-05, 6.590199999999963e-05, 6.592999999999877e-05]</msg>
<status status="PASS" starttime="20201030 15:52:35.424" endtime="20201030 15:52:35.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.419" endtime="20201030 15:52:35.427"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:35.431" endtime="20201030 15:52:35.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.429" endtime="20201030 15:52:35.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.428" endtime="20201030 15:52:35.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.070" endtime="20201030 15:52:35.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.070" endtime="20201030 15:52:35.451"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.460" endtime="20201030 15:52:35.479"></status>
</kw>
<msg timestamp="20201030 15:52:35.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.459" endtime="20201030 15:52:35.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.480" endtime="20201030 15:52:35.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.483" endtime="20201030 15:52:35.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.456" endtime="20201030 15:52:35.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.454" endtime="20201030 15:52:35.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.492" endtime="20201030 15:52:35.778"></status>
</kw>
<msg timestamp="20201030 15:52:35.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023160958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023228389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.490" endtime="20201030 15:52:35.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023160958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023228389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.782" endtime="20201030 15:52:35.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.790" endtime="20201030 15:52:35.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.488" endtime="20201030 15:52:35.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.486" endtime="20201030 15:52:35.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:35.797" level="INFO">${RESULT} = [{'diff': 6.743099999999974e-05}, {'diff': 6.70969999999986e-05}, {'diff': 6.695799999999891e-05}, {'diff': 6.679199999999955e-05}, {'diff': 6.670899999999813e-05}, {'diff': 6.695899999999838e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:35.793" endtime="20201030 15:52:35.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:35.801" level="INFO">${ACCURACY} = {'diff': [6.743099999999974e-05, 6.70969999999986e-05, 6.695799999999891e-05, 6.679199999999955e-05, 6.670899999999813e-05, 6.695899999999838e-05, 6.668099999999899e-05, 6.719499999999906e-05, 6.69999...</msg>
<status status="PASS" starttime="20201030 15:52:35.798" endtime="20201030 15:52:35.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.806" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 15:52:35.804" endtime="20201030 15:52:35.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.808" level="INFO">VALUE: [6.743099999999974e-05, 6.70969999999986e-05, 6.695799999999891e-05, 6.679199999999955e-05, 6.670899999999813e-05, 6.695899999999838e-05, 6.668099999999899e-05, 6.719499999999906e-05, 6.699999999999762e-05, 6.686099999999792e-05, 6.70969999999986e-05, 6.683399999999826e-05, 6.722199999999873e-05, 6.669399999999909e-05, 6.67770000000005e-05, 6.712500000000121e-05, 6.694399999999934e-05, 6.692999999999977e-05, 6.665299999999985e-05, 6.694399999999934e-05, 6.686099999999792e-05, 6.708299999999903e-05, 6.687500000000096e-05, 6.672199999999823e-05, 6.719499999999906e-05, 6.669499999999856e-05, 6.70419999999998e-05, 6.672199999999823e-05, 6.67640000000004e-05, 6.677799999999998e-05, 6.687500000000096e-05, 6.680599999999912e-05, 6.698599999999805e-05, 6.666699999999942e-05, 6.713800000000131e-05, 6.702700000000075e-05, 6.72359999999983e-05, 6.720799999999916e-05, 6.713900000000078e-05, 6.683299999999878e-05, 6.694399999999934e-05, 6.680499999999964e-05, 6.669399999999909e-05, 6.711099999999817e-05, 6.672199999999823e-05, 6.669399999999909e-05, 6.716699999999992e-05, 6.701400000000066e-05, 6.668099999999899e-05, 6.69030000000001e-05]</msg>
<status status="PASS" starttime="20201030 15:52:35.807" endtime="20201030 15:52:35.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.802" endtime="20201030 15:52:35.810"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:35.814" endtime="20201030 15:52:35.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.812" endtime="20201030 15:52:35.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.811" endtime="20201030 15:52:35.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.452" endtime="20201030 15:52:35.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.452" endtime="20201030 15:52:35.835"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.843" endtime="20201030 15:52:35.861"></status>
</kw>
<msg timestamp="20201030 15:52:35.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.842" endtime="20201030 15:52:35.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.863" endtime="20201030 15:52:35.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.865" endtime="20201030 15:52:35.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.839" endtime="20201030 15:52:35.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.837" endtime="20201030 15:52:35.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.875" endtime="20201030 15:52:36.161"></status>
</kw>
<msg timestamp="20201030 15:52:36.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021912444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.873" endtime="20201030 15:52:36.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021912444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.165" endtime="20201030 15:52:36.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.174" endtime="20201030 15:52:36.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.870" endtime="20201030 15:52:36.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.869" endtime="20201030 15:52:36.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:36.180" level="INFO">${RESULT} = [{'diff': 6.888899999999906e-05}, {'diff': 6.812500000000221e-05}, {'diff': 6.799999999999862e-05}, {'diff': 6.804099999999785e-05}, {'diff': 6.815300000000135e-05}, {'diff': 6.798600000000252e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:36.177" endtime="20201030 15:52:36.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:36.185" level="INFO">${ACCURACY} = {'diff': [6.888899999999906e-05, 6.812500000000221e-05, 6.799999999999862e-05, 6.804099999999785e-05, 6.815300000000135e-05, 6.798600000000252e-05, 6.790299999999763e-05, 6.780600000000012e-05, 6.8139...</msg>
<status status="PASS" starttime="20201030 15:52:36.181" endtime="20201030 15:52:36.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.190" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 15:52:36.189" endtime="20201030 15:52:36.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.192" level="INFO">VALUE: [6.888899999999906e-05, 6.812500000000221e-05, 6.799999999999862e-05, 6.804099999999785e-05, 6.815300000000135e-05, 6.798600000000252e-05, 6.790299999999763e-05, 6.780600000000012e-05, 6.813900000000178e-05, 6.767999999999705e-05, 6.80420000000008e-05, 6.806999999999994e-05, 6.80839999999995e-05, 6.8277000000002e-05, 6.80969999999996e-05, 6.80969999999996e-05, 6.768099999999999e-05, 6.781999999999969e-05, 6.763900000000128e-05, 6.766700000000042e-05, 6.80559999999969e-05, 6.795799999999991e-05, 6.802700000000175e-05, 6.806899999999699e-05, 6.766600000000095e-05, 6.80969999999996e-05, 6.808300000000003e-05, 6.772199999999923e-05, 6.772199999999923e-05, 6.781900000000021e-05, 6.777800000000098e-05, 6.783299999999978e-05, 6.768000000000052e-05, 6.798600000000252e-05, 6.80969999999996e-05, 6.820800000000016e-05, 6.801400000000166e-05, 6.761099999999867e-05, 6.815299999999788e-05, 6.800000000000209e-05, 6.809800000000255e-05, 6.827800000000148e-05, 6.812499999999874e-05, 6.801300000000218e-05, 6.804100000000132e-05, 6.805500000000089e-05, 6.806900000000046e-05, 6.819399999999712e-05, 6.794400000000034e-05, 6.790200000000163e-05]</msg>
<status status="PASS" starttime="20201030 15:52:36.191" endtime="20201030 15:52:36.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.186" endtime="20201030 15:52:36.199"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:36.202" endtime="20201030 15:52:36.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.201" endtime="20201030 15:52:36.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.200" endtime="20201030 15:52:36.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.836" endtime="20201030 15:52:36.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.835" endtime="20201030 15:52:36.223"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.232" endtime="20201030 15:52:36.250"></status>
</kw>
<msg timestamp="20201030 15:52:36.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.230" endtime="20201030 15:52:36.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.251" endtime="20201030 15:52:36.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.254" endtime="20201030 15:52:36.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.228" endtime="20201030 15:52:36.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.226" endtime="20201030 15:52:36.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.263" endtime="20201030 15:52:36.550"></status>
</kw>
<msg timestamp="20201030 15:52:36.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022227139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022296306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.261" endtime="20201030 15:52:36.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022227139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022296306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.555" endtime="20201030 15:52:36.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.564" endtime="20201030 15:52:36.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.259" endtime="20201030 15:52:36.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.257" endtime="20201030 15:52:36.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:36.570" level="INFO">${RESULT} = [{'diff': 6.916699999999845e-05}, {'diff': 6.937499999999999e-05}, {'diff': 6.867999999999805e-05}, {'diff': 6.902699999999928e-05}, {'diff': 6.92360000000003e-05}, {'diff': 6.908299999999756e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:36.567" endtime="20201030 15:52:36.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:36.575" level="INFO">${ACCURACY} = {'diff': [6.916699999999845e-05, 6.937499999999999e-05, 6.867999999999805e-05, 6.902699999999928e-05, 6.92360000000003e-05, 6.908299999999756e-05, 6.886099999999992e-05, 6.879200000000155e-05, 6.89720...</msg>
<status status="PASS" starttime="20201030 15:52:36.571" endtime="20201030 15:52:36.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.579" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 15:52:36.578" endtime="20201030 15:52:36.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.582" level="INFO">VALUE: [6.916699999999845e-05, 6.937499999999999e-05, 6.867999999999805e-05, 6.902699999999928e-05, 6.92360000000003e-05, 6.908299999999756e-05, 6.886099999999992e-05, 6.879200000000155e-05, 6.897200000000048e-05, 6.863899999999881e-05, 6.895799999999744e-05, 6.874999999999937e-05, 6.883300000000078e-05, 6.886099999999992e-05, 6.905600000000137e-05, 6.87359999999998e-05, 6.87359999999998e-05, 6.904199999999833e-05, 6.895800000000091e-05, 6.894500000000081e-05, 6.872200000000023e-05, 6.89169999999982e-05, 6.888899999999906e-05, 6.87229999999997e-05, 6.872200000000023e-05, 6.909800000000008e-05, 6.917999999999855e-05, 6.89160000000022e-05, 6.906900000000146e-05, 6.887499999999949e-05, 6.920800000000116e-05, 6.89299999999983e-05, 6.881900000000121e-05, 6.894399999999787e-05, 6.919400000000159e-05, 6.893000000000177e-05, 6.879199999999808e-05, 6.877800000000198e-05, 6.92360000000003e-05, 6.879200000000155e-05, 6.894500000000081e-05, 6.894400000000134e-05, 6.905600000000137e-05, 6.897299999999995e-05, 6.876399999999894e-05, 6.869500000000056e-05, 6.870900000000013e-05, 6.866700000000142e-05, 6.899999999999962e-05, 6.912499999999974e-05]</msg>
<status status="PASS" starttime="20201030 15:52:36.580" endtime="20201030 15:52:36.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.576" endtime="20201030 15:52:36.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:36.587" endtime="20201030 15:52:36.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.585" endtime="20201030 15:52:36.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.584" endtime="20201030 15:52:36.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.224" endtime="20201030 15:52:36.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.223" endtime="20201030 15:52:36.608"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.616" endtime="20201030 15:52:36.635"></status>
</kw>
<msg timestamp="20201030 15:52:36.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.615" endtime="20201030 15:52:36.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.636" endtime="20201030 15:52:36.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.639" endtime="20201030 15:52:36.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.612" endtime="20201030 15:52:36.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.610" endtime="20201030 15:52:36.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.648" endtime="20201030 15:52:36.935"></status>
</kw>
<msg timestamp="20201030 15:52:36.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023046722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02311725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:36.646" endtime="20201030 15:52:36.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023046722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02311725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:36.939" endtime="20201030 15:52:36.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.947" endtime="20201030 15:52:36.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.644" endtime="20201030 15:52:36.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.642" endtime="20201030 15:52:36.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:36.954" level="INFO">${RESULT} = [{'diff': 7.052800000000026e-05}, {'diff': 7.054199999999983e-05}, {'diff': 7.00559999999989e-05}, {'diff': 7.009800000000108e-05}, {'diff': 6.998600000000105e-05}, {'diff': 7.012500000000074e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:36.951" endtime="20201030 15:52:36.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:36.958" level="INFO">${ACCURACY} = {'diff': [7.052800000000026e-05, 7.054199999999983e-05, 7.00559999999989e-05, 7.009800000000108e-05, 6.998600000000105e-05, 7.012500000000074e-05, 6.988900000000006e-05, 7.004199999999933e-05, 7.02089...</msg>
<status status="PASS" starttime="20201030 15:52:36.955" endtime="20201030 15:52:36.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.963" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 15:52:36.962" endtime="20201030 15:52:36.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.965" level="INFO">VALUE: [7.052800000000026e-05, 7.054199999999983e-05, 7.00559999999989e-05, 7.009800000000108e-05, 6.998600000000105e-05, 7.012500000000074e-05, 6.988900000000006e-05, 7.004199999999933e-05, 7.020899999999816e-05, 6.993099999999877e-05, 6.987500000000049e-05, 6.970800000000166e-05, 6.979200000000255e-05, 7.012500000000074e-05, 6.980499999999917e-05, 6.997200000000148e-05, 6.97909999999996e-05, 7.023599999999783e-05, 6.976399999999994e-05, 7.011100000000117e-05, 6.976399999999994e-05, 6.963899999999981e-05, 7.008299999999856e-05, 7.000000000000062e-05, 6.986099999999745e-05, 7.012499999999727e-05, 7.000000000000062e-05, 6.980600000000212e-05, 6.99169999999992e-05, 6.966699999999895e-05, 7.004199999999933e-05, 6.995899999999791e-05, 6.994499999999834e-05, 6.972200000000123e-05, 6.976399999999994e-05, 6.994399999999887e-05, 7.000000000000062e-05, 6.980499999999917e-05, 6.991599999999973e-05, 6.977700000000003e-05, 6.97499999999969e-05, 6.965299999999938e-05, 6.97360000000008e-05, 7.023599999999783e-05, 7.015299999999988e-05, 6.988900000000006e-05, 7.012500000000074e-05, 6.999999999999715e-05, 7.012500000000074e-05, 7.02360000000013e-05]</msg>
<status status="PASS" starttime="20201030 15:52:36.964" endtime="20201030 15:52:36.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.959" endtime="20201030 15:52:36.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:36.971" endtime="20201030 15:52:36.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.970" endtime="20201030 15:52:36.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.968" endtime="20201030 15:52:36.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.608" endtime="20201030 15:52:36.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.608" endtime="20201030 15:52:36.992"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.001" endtime="20201030 15:52:37.017"></status>
</kw>
<msg timestamp="20201030 15:52:37.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.999" endtime="20201030 15:52:37.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.019" endtime="20201030 15:52:37.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.022" endtime="20201030 15:52:37.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.996" endtime="20201030 15:52:37.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.994" endtime="20201030 15:52:37.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.031" endtime="20201030 15:52:37.317"></status>
</kw>
<msg timestamp="20201030 15:52:37.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021955528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022026556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.029" endtime="20201030 15:52:37.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021955528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022026556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.321" endtime="20201030 15:52:37.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.329" endtime="20201030 15:52:37.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.027" endtime="20201030 15:52:37.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.025" endtime="20201030 15:52:37.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:37.336" level="INFO">${RESULT} = [{'diff': 7.102800000000076e-05}, {'diff': 7.138800000000209e-05}, {'diff': 7.120900000000263e-05}, {'diff': 7.094499999999934e-05}, {'diff': 7.109699999999913e-05}, {'diff': 7.113799999999837e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:37.333" endtime="20201030 15:52:37.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:37.341" level="INFO">${ACCURACY} = {'diff': [7.102800000000076e-05, 7.138800000000209e-05, 7.120900000000263e-05, 7.094499999999934e-05, 7.109699999999913e-05, 7.113799999999837e-05, 7.12499999999984e-05, 7.081999999999922e-05, 7.08610...</msg>
<status status="PASS" starttime="20201030 15:52:37.337" endtime="20201030 15:52:37.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.346" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 15:52:37.345" endtime="20201030 15:52:37.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.348" level="INFO">VALUE: [7.102800000000076e-05, 7.138800000000209e-05, 7.120900000000263e-05, 7.094499999999934e-05, 7.109699999999913e-05, 7.113799999999837e-05, 7.12499999999984e-05, 7.081999999999922e-05, 7.086100000000192e-05, 7.097299999999848e-05, 7.098599999999858e-05, 7.120799999999969e-05, 7.062500000000124e-05, 7.120799999999969e-05, 7.097299999999848e-05, 7.09170000000002e-05, 7.12499999999984e-05, 7.076399999999747e-05, 7.068099999999952e-05, 7.120899999999916e-05, 7.106999999999947e-05, 7.086100000000192e-05, 7.10840000000025e-05, 7.120899999999916e-05, 7.068099999999952e-05, 7.072199999999876e-05, 7.109699999999913e-05, 7.113800000000184e-05, 7.090199999999769e-05, 7.068000000000005e-05, 7.088900000000106e-05, 7.073599999999833e-05, 7.075000000000137e-05, 7.104200000000033e-05, 7.104200000000033e-05, 7.119399999999665e-05, 7.07360000000018e-05, 7.082000000000269e-05, 7.101400000000119e-05, 7.109699999999913e-05, 7.111100000000217e-05, 7.106999999999947e-05, 7.088899999999759e-05, 7.097199999999901e-05, 7.11109999999987e-05, 7.081999999999922e-05, 7.098700000000152e-05, 7.075000000000137e-05, 7.090200000000116e-05, 7.090199999999769e-05]</msg>
<status status="PASS" starttime="20201030 15:52:37.347" endtime="20201030 15:52:37.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.342" endtime="20201030 15:52:37.350"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:37.353" endtime="20201030 15:52:37.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.352" endtime="20201030 15:52:37.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.351" endtime="20201030 15:52:37.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.993" endtime="20201030 15:52:37.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.992" endtime="20201030 15:52:37.374"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.383" endtime="20201030 15:52:37.401"></status>
</kw>
<msg timestamp="20201030 15:52:37.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.381" endtime="20201030 15:52:37.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.403" endtime="20201030 15:52:37.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.405" endtime="20201030 15:52:37.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.379" endtime="20201030 15:52:37.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.377" endtime="20201030 15:52:37.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.415" endtime="20201030 15:52:37.704"></status>
</kw>
<msg timestamp="20201030 15:52:37.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022307625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022380306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.413" endtime="20201030 15:52:37.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022307625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022380306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.708" endtime="20201030 15:52:37.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.717" endtime="20201030 15:52:37.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.410" endtime="20201030 15:52:37.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.409" endtime="20201030 15:52:37.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:37.723" level="INFO">${RESULT} = [{'diff': 7.268099999999805e-05}, {'diff': 7.244400000000137e-05}, {'diff': 7.17499999999989e-05}, {'diff': 7.187500000000249e-05}, {'diff': 7.194400000000087e-05}, {'diff': 7.168100000000052e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:37.720" endtime="20201030 15:52:37.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:37.727" level="INFO">${ACCURACY} = {'diff': [7.268099999999805e-05, 7.244400000000137e-05, 7.17499999999989e-05, 7.187500000000249e-05, 7.194400000000087e-05, 7.168100000000052e-05, 7.2069000000001e-05, 7.183300000000031e-05, 7.1889000...</msg>
<status status="PASS" starttime="20201030 15:52:37.724" endtime="20201030 15:52:37.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.732" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 15:52:37.731" endtime="20201030 15:52:37.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.734" level="INFO">VALUE: [7.268099999999805e-05, 7.244400000000137e-05, 7.17499999999989e-05, 7.187500000000249e-05, 7.194400000000087e-05, 7.168100000000052e-05, 7.2069000000001e-05, 7.183300000000031e-05, 7.188900000000206e-05, 7.180500000000117e-05, 7.201399999999872e-05, 7.182000000000022e-05, 7.202799999999829e-05, 7.187499999999902e-05, 7.207000000000047e-05, 7.166700000000095e-05, 7.184699999999988e-05, 7.21109999999997e-05, 7.231899999999777e-05, 7.19170000000012e-05, 7.195800000000044e-05, 7.220900000000016e-05, 7.166700000000095e-05, 7.20560000000009e-05, 7.227699999999906e-05, 7.169500000000009e-05, 7.198599999999958e-05, 7.170899999999966e-05, 7.198599999999958e-05, 7.202699999999881e-05, 7.220800000000069e-05, 7.186099999999945e-05, 7.193100000000077e-05, 7.179099999999813e-05, 7.173599999999933e-05, 7.215300000000188e-05, 7.177800000000151e-05, 7.183399999999979e-05, 7.165299999999791e-05, 7.175000000000237e-05, 7.216699999999798e-05, 7.208300000000056e-05, 7.222200000000026e-05, 7.173599999999933e-05, 7.201399999999872e-05, 7.197299999999948e-05, 7.168100000000052e-05, 7.223599999999983e-05, 7.201300000000271e-05, 7.215199999999894e-05]</msg>
<status status="PASS" starttime="20201030 15:52:37.733" endtime="20201030 15:52:37.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.728" endtime="20201030 15:52:37.736"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:37.739" endtime="20201030 15:52:37.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.738" endtime="20201030 15:52:37.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.737" endtime="20201030 15:52:37.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.375" endtime="20201030 15:52:37.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.374" endtime="20201030 15:52:37.760"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.769" endtime="20201030 15:52:37.788"></status>
</kw>
<msg timestamp="20201030 15:52:37.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.767" endtime="20201030 15:52:37.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.790" endtime="20201030 15:52:37.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.792" endtime="20201030 15:52:37.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.765" endtime="20201030 15:52:37.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.762" endtime="20201030 15:52:37.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.801" endtime="20201030 15:52:38.087"></status>
</kw>
<msg timestamp="20201030 15:52:38.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023009583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023082708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.800" endtime="20201030 15:52:38.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023009583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023082708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.091" endtime="20201030 15:52:38.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.099" endtime="20201030 15:52:38.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.797" endtime="20201030 15:52:38.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.795" endtime="20201030 15:52:38.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:38.106" level="INFO">${RESULT} = [{'diff': 7.312500000000027e-05}, {'diff': 7.304199999999886e-05}, {'diff': 7.312500000000027e-05}, {'diff': 7.277699999999956e-05}, {'diff': 7.272200000000076e-05}, {'diff': 7.301399999999972e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:38.103" endtime="20201030 15:52:38.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:38.110" level="INFO">${ACCURACY} = {'diff': [7.312500000000027e-05, 7.304199999999886e-05, 7.312500000000027e-05, 7.277699999999956e-05, 7.272200000000076e-05, 7.301399999999972e-05, 7.265299999999891e-05, 7.300000000000015e-05, 7.2861...</msg>
<status status="PASS" starttime="20201030 15:52:38.107" endtime="20201030 15:52:38.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.115" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 15:52:38.114" endtime="20201030 15:52:38.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.117" level="INFO">VALUE: [7.312500000000027e-05, 7.304199999999886e-05, 7.312500000000027e-05, 7.277699999999956e-05, 7.272200000000076e-05, 7.301399999999972e-05, 7.265299999999891e-05, 7.300000000000015e-05, 7.286100000000045e-05, 7.270800000000119e-05, 7.309699999999766e-05, 7.272200000000076e-05, 7.304200000000233e-05, 7.319499999999812e-05, 7.265300000000238e-05, 7.298600000000058e-05, 7.294500000000134e-05, 7.3069999999998e-05, 7.268100000000152e-05, 7.279200000000208e-05, 7.316599999999951e-05, 7.318100000000202e-05, 7.300000000000015e-05, 7.268000000000205e-05, 7.284700000000088e-05, 7.276399999999947e-05, 7.262500000000324e-05, 7.283300000000131e-05, 7.287500000000002e-05, 7.265299999999891e-05, 7.281900000000174e-05, 7.320799999999822e-05, 7.301399999999972e-05, 7.300000000000015e-05, 7.288899999999959e-05, 7.319499999999812e-05, 7.272199999999729e-05, 7.266700000000195e-05, 7.307000000000147e-05, 7.270900000000066e-05, 7.319500000000159e-05, 7.29170000000022e-05, 7.269500000000109e-05, 7.288800000000012e-05, 7.298600000000058e-05, 7.27910000000026e-05, 7.29439999999984e-05, 7.291599999999926e-05, 7.284700000000088e-05, 7.309700000000113e-05]</msg>
<status status="PASS" starttime="20201030 15:52:38.116" endtime="20201030 15:52:38.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.111" endtime="20201030 15:52:38.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:38.123" endtime="20201030 15:52:38.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.121" endtime="20201030 15:52:38.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.120" endtime="20201030 15:52:38.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.761" endtime="20201030 15:52:38.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.760" endtime="20201030 15:52:38.144"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.152" endtime="20201030 15:52:38.170"></status>
</kw>
<msg timestamp="20201030 15:52:38.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.151" endtime="20201030 15:52:38.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.172" endtime="20201030 15:52:38.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.174" endtime="20201030 15:52:38.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.148" endtime="20201030 15:52:38.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.146" endtime="20201030 15:52:38.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.183" endtime="20201030 15:52:38.470"></status>
</kw>
<msg timestamp="20201030 15:52:38.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022087375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022161514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.182" endtime="20201030 15:52:38.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022087375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022161514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.474" endtime="20201030 15:52:38.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.482" endtime="20201030 15:52:38.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.179" endtime="20201030 15:52:38.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.177" endtime="20201030 15:52:38.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:38.489" level="INFO">${RESULT} = [{'diff': 7.413900000000084e-05}, {'diff': 7.436100000000195e-05}, {'diff': 7.408300000000256e-05}, {'diff': 7.408300000000256e-05}, {'diff': 7.4069999999999e-05}, {'diff': 7.41110000000017e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:52:38.486" endtime="20201030 15:52:38.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:38.494" level="INFO">${ACCURACY} = {'diff': [7.413900000000084e-05, 7.436100000000195e-05, 7.408300000000256e-05, 7.408300000000256e-05, 7.4069999999999e-05, 7.41110000000017e-05, 7.384800000000136e-05, 7.415300000000041e-05, 7.3999999...</msg>
<status status="PASS" starttime="20201030 15:52:38.490" endtime="20201030 15:52:38.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.499" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 15:52:38.498" endtime="20201030 15:52:38.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.501" level="INFO">VALUE: [7.413900000000084e-05, 7.436100000000195e-05, 7.408300000000256e-05, 7.408300000000256e-05, 7.4069999999999e-05, 7.41110000000017e-05, 7.384800000000136e-05, 7.415300000000041e-05, 7.399999999999768e-05, 7.413899999999737e-05, 7.377799999999657e-05, 7.3763999999997e-05, 7.366600000000001e-05, 7.388899999999712e-05, 7.416699999999998e-05, 7.367999999999958e-05, 7.369399999999915e-05, 7.394500000000234e-05, 7.387499999999755e-05, 7.373599999999786e-05, 7.402800000000029e-05, 7.401400000000072e-05, 7.422199999999879e-05, 7.376400000000047e-05, 7.370799999999872e-05, 7.402800000000029e-05, 7.4069999999999e-05, 7.368099999999905e-05, 7.4069999999999e-05, 7.416699999999998e-05, 7.377800000000004e-05, 7.381999999999875e-05, 7.366600000000001e-05, 7.415200000000094e-05, 7.413900000000084e-05, 7.41110000000017e-05, 7.383299999999884e-05, 7.398599999999811e-05, 7.391699999999973e-05, 7.392999999999983e-05, 7.379199999999961e-05, 7.380599999999918e-05, 7.369499999999862e-05, 7.400000000000115e-05, 7.39309999999993e-05, 7.386099999999798e-05, 7.390300000000016e-05, 7.416699999999998e-05, 7.412500000000127e-05, 7.387500000000102e-05]</msg>
<status status="PASS" starttime="20201030 15:52:38.500" endtime="20201030 15:52:38.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.495" endtime="20201030 15:52:38.502"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:38.506" endtime="20201030 15:52:38.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.505" endtime="20201030 15:52:38.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.503" endtime="20201030 15:52:38.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.145" endtime="20201030 15:52:38.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.144" endtime="20201030 15:52:38.527"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.536" endtime="20201030 15:52:38.554"></status>
</kw>
<msg timestamp="20201030 15:52:38.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.534" endtime="20201030 15:52:38.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.555" endtime="20201030 15:52:38.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.558" endtime="20201030 15:52:38.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.532" endtime="20201030 15:52:38.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.529" endtime="20201030 15:52:38.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.567" endtime="20201030 15:52:38.855"></status>
</kw>
<msg timestamp="20201030 15:52:38.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022009958, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:38.565" endtime="20201030 15:52:38.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022009958, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:38.859" endtime="20201030 15:52:38.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.867" endtime="20201030 15:52:38.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.563" endtime="20201030 15:52:38.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.561" endtime="20201030 15:52:38.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:38.874" level="INFO">${RESULT} = [{'diff': 7.595800000000097e-05}, {'diff': 7.549999999999918e-05}, {'diff': 7.486099999999898e-05}, {'diff': 7.490300000000116e-05}, {'diff': 7.50830000000001e-05}, {'diff': 7.483299999999984e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:38.871" endtime="20201030 15:52:38.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:38.878" level="INFO">${ACCURACY} = {'diff': [7.595800000000097e-05, 7.549999999999918e-05, 7.486099999999898e-05, 7.490300000000116e-05, 7.50830000000001e-05, 7.483299999999984e-05, 7.474999999999843e-05, 7.511099999999923e-05, 7.47780...</msg>
<status status="PASS" starttime="20201030 15:52:38.875" endtime="20201030 15:52:38.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.883" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 15:52:38.882" endtime="20201030 15:52:38.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.885" level="INFO">VALUE: [7.595800000000097e-05, 7.549999999999918e-05, 7.486099999999898e-05, 7.490300000000116e-05, 7.50830000000001e-05, 7.483299999999984e-05, 7.474999999999843e-05, 7.511099999999923e-05, 7.477800000000104e-05, 7.504200000000086e-05, 7.511099999999923e-05, 7.518100000000055e-05, 7.484699999999941e-05, 7.491599999999779e-05, 7.508399999999957e-05, 7.481999999999975e-05, 7.497299999999901e-05, 7.484800000000236e-05, 7.497199999999954e-05, 7.51379999999989e-05, 7.470799999999972e-05, 7.519399999999718e-05, 7.473599999999886e-05, 7.483299999999984e-05, 7.486100000000245e-05, 7.467999999999711e-05, 7.513899999999837e-05, 7.498600000000258e-05, 7.466700000000048e-05, 7.491700000000073e-05, 7.47500000000019e-05, 7.520800000000022e-05, 7.507e-05, 7.518100000000055e-05, 7.47500000000019e-05, 7.501400000000172e-05, 7.491700000000073e-05, 7.505600000000043e-05, 7.518099999999708e-05, 7.476299999999853e-05, 7.481999999999975e-05, 7.480499999999723e-05, 7.493000000000083e-05, 7.509699999999966e-05, 7.499999999999868e-05, 7.491699999999726e-05, 7.497199999999954e-05, 7.520800000000022e-05, 7.511099999999923e-05, 7.487499999999855e-05]</msg>
<status status="PASS" starttime="20201030 15:52:38.884" endtime="20201030 15:52:38.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.879" endtime="20201030 15:52:38.887"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:38.890" endtime="20201030 15:52:38.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.889" endtime="20201030 15:52:38.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.888" endtime="20201030 15:52:38.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.528" endtime="20201030 15:52:38.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.527" endtime="20201030 15:52:38.911"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.920" endtime="20201030 15:52:38.939"></status>
</kw>
<msg timestamp="20201030 15:52:38.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.918" endtime="20201030 15:52:38.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.940" endtime="20201030 15:52:38.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.943" endtime="20201030 15:52:38.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.916" endtime="20201030 15:52:38.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.913" endtime="20201030 15:52:38.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.952" endtime="20201030 15:52:39.237"></status>
</kw>
<msg timestamp="20201030 15:52:39.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022868958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022945167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.950" endtime="20201030 15:52:39.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022868958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022945167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.241" endtime="20201030 15:52:39.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.249" endtime="20201030 15:52:39.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.948" endtime="20201030 15:52:39.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.946" endtime="20201030 15:52:39.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:39.256" level="INFO">${RESULT} = [{'diff': 7.620899999999722e-05}, {'diff': 7.597300000000001e-05}, {'diff': 7.595800000000097e-05}, {'diff': 7.586099999999998e-05}, {'diff': 7.588799999999965e-05}, {'diff': 7.620800000000122e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:39.252" endtime="20201030 15:52:39.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:39.260" level="INFO">${ACCURACY} = {'diff': [7.620899999999722e-05, 7.597300000000001e-05, 7.595800000000097e-05, 7.586099999999998e-05, 7.588799999999965e-05, 7.620800000000122e-05, 7.597199999999707e-05, 7.579099999999866e-05, 7.5846...</msg>
<status status="PASS" starttime="20201030 15:52:39.257" endtime="20201030 15:52:39.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.264" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 15:52:39.263" endtime="20201030 15:52:39.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.267" level="INFO">VALUE: [7.620899999999722e-05, 7.597300000000001e-05, 7.595800000000097e-05, 7.586099999999998e-05, 7.588799999999965e-05, 7.620800000000122e-05, 7.597199999999707e-05, 7.579099999999866e-05, 7.584699999999694e-05, 7.601400000000272e-05, 7.5763999999999e-05, 7.613899999999937e-05, 7.566600000000201e-05, 7.619399999999818e-05, 7.61249999999998e-05, 7.605599999999796e-05, 7.580600000000118e-05, 7.609700000000066e-05, 7.59579999999975e-05, 7.598600000000011e-05, 7.609700000000066e-05, 7.583400000000032e-05, 7.59310000000013e-05, 7.56249999999993e-05, 7.594500000000087e-05, 7.586199999999946e-05, 7.579200000000161e-05, 7.606900000000152e-05, 7.574999999999943e-05, 7.570800000000072e-05, 7.620799999999775e-05, 7.563900000000234e-05, 7.597200000000054e-05, 7.565299999999844e-05, 7.616700000000198e-05, 7.617999999999861e-05, 7.615299999999894e-05, 7.568099999999758e-05, 7.623600000000036e-05, 7.582000000000075e-05, 7.604199999999839e-05, 7.569500000000062e-05, 7.568100000000105e-05, 7.602800000000229e-05, 7.588899999999912e-05, 7.616599999999904e-05, 7.608400000000057e-05, 7.605499999999848e-05, 7.615199999999947e-05, 7.58189999999978e-05]</msg>
<status status="PASS" starttime="20201030 15:52:39.265" endtime="20201030 15:52:39.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.261" endtime="20201030 15:52:39.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:39.273" endtime="20201030 15:52:39.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.271" endtime="20201030 15:52:39.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.270" endtime="20201030 15:52:39.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.912" endtime="20201030 15:52:39.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.911" endtime="20201030 15:52:39.293"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.302" endtime="20201030 15:52:39.319"></status>
</kw>
<msg timestamp="20201030 15:52:39.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.301" endtime="20201030 15:52:39.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.321" endtime="20201030 15:52:39.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.323" endtime="20201030 15:52:39.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.298" endtime="20201030 15:52:39.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.296" endtime="20201030 15:52:39.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.333" endtime="20201030 15:52:39.626"></status>
</kw>
<msg timestamp="20201030 15:52:39.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021819819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021897069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.331" endtime="20201030 15:52:39.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021819819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021897069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.630" endtime="20201030 15:52:39.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.639" endtime="20201030 15:52:39.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.328" endtime="20201030 15:52:39.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.327" endtime="20201030 15:52:39.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:39.645" level="INFO">${RESULT} = [{'diff': 7.725000000000093e-05}, {'diff': 7.702700000000035e-05}, {'diff': 7.716600000000004e-05}, {'diff': 7.706900000000252e-05}, {'diff': 7.711100000000123e-05}, {'diff': 7.698600000000111e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:39.642" endtime="20201030 15:52:39.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:39.650" level="INFO">${ACCURACY} = {'diff': [7.725000000000093e-05, 7.702700000000035e-05, 7.716600000000004e-05, 7.706900000000252e-05, 7.711100000000123e-05, 7.698600000000111e-05, 7.722199999999832e-05, 7.692999999999936e-05, 7.6875...</msg>
<status status="PASS" starttime="20201030 15:52:39.646" endtime="20201030 15:52:39.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.655" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 15:52:39.654" endtime="20201030 15:52:39.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.658" level="INFO">VALUE: [7.725000000000093e-05, 7.702700000000035e-05, 7.716600000000004e-05, 7.706900000000252e-05, 7.711100000000123e-05, 7.698600000000111e-05, 7.722199999999832e-05, 7.692999999999936e-05, 7.687500000000055e-05, 7.720799999999875e-05, 7.715299999999994e-05, 7.715299999999994e-05, 7.70830000000021e-05, 7.718099999999908e-05, 7.709700000000166e-05, 7.679199999999914e-05, 7.69029999999997e-05, 7.695899999999797e-05, 7.702800000000329e-05, 7.715200000000047e-05, 7.672300000000076e-05, 7.673600000000086e-05, 7.693099999999883e-05, 7.690200000000022e-05, 7.720800000000222e-05, 7.713900000000037e-05, 7.694399999999893e-05, 7.679100000000313e-05, 7.673600000000086e-05, 7.717999999999961e-05, 7.705599999999896e-05, 7.708299999999862e-05, 7.679199999999914e-05, 7.699999999999721e-05, 7.675000000000043e-05, 7.697300000000101e-05, 7.691700000000273e-05, 7.716699999999951e-05, 7.682000000000175e-05, 7.672300000000076e-05, 7.720799999999875e-05, 7.709799999999767e-05, 7.679099999999967e-05, 7.715200000000047e-05, 7.665299999999944e-05, 7.668000000000258e-05, 7.675000000000043e-05, 7.711100000000123e-05, 7.723599999999789e-05, 7.672199999999782e-05]</msg>
<status status="PASS" starttime="20201030 15:52:39.656" endtime="20201030 15:52:39.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.651" endtime="20201030 15:52:39.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:39.663" endtime="20201030 15:52:39.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.661" endtime="20201030 15:52:39.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.660" endtime="20201030 15:52:39.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.294" endtime="20201030 15:52:39.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.294" endtime="20201030 15:52:39.683"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.692" endtime="20201030 15:52:39.709"></status>
</kw>
<msg timestamp="20201030 15:52:39.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.691" endtime="20201030 15:52:39.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.711" endtime="20201030 15:52:39.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.713" endtime="20201030 15:52:39.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.688" endtime="20201030 15:52:39.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.686" endtime="20201030 15:52:39.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.723" endtime="20201030 15:52:40.009"></status>
</kw>
<msg timestamp="20201030 15:52:40.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021986819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02206525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:39.721" endtime="20201030 15:52:40.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021986819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02206525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:40.013" endtime="20201030 15:52:40.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.022" endtime="20201030 15:52:40.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.718" endtime="20201030 15:52:40.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.717" endtime="20201030 15:52:40.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:40.028" level="INFO">${RESULT} = [{'diff': 7.843100000000033e-05}, {'diff': 7.798599999999864e-05}, {'diff': 7.784699999999894e-05}, {'diff': 7.79449999999994e-05}, {'diff': 7.79169999999968e-05}, {'diff': 7.809800000000214e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:40.025" endtime="20201030 15:52:40.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:40.032" level="INFO">${ACCURACY} = {'diff': [7.843100000000033e-05, 7.798599999999864e-05, 7.784699999999894e-05, 7.79449999999994e-05, 7.79169999999968e-05, 7.809800000000214e-05, 7.76389999999974e-05, 7.816700000000051e-05, 7.7958999...</msg>
<status status="PASS" starttime="20201030 15:52:40.029" endtime="20201030 15:52:40.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.037" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 15:52:40.036" endtime="20201030 15:52:40.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.039" level="INFO">VALUE: [7.843100000000033e-05, 7.798599999999864e-05, 7.784699999999894e-05, 7.79449999999994e-05, 7.79169999999968e-05, 7.809800000000214e-05, 7.76389999999974e-05, 7.816700000000051e-05, 7.795899999999897e-05, 7.800000000000168e-05, 7.801400000000125e-05, 7.79169999999968e-05, 7.769499999999915e-05, 7.819400000000018e-05, 7.819400000000018e-05, 7.82640000000015e-05, 7.797200000000254e-05, 7.788899999999765e-05, 7.812499999999833e-05, 7.788900000000112e-05, 7.811099999999876e-05, 7.793000000000036e-05, 7.80969999999992e-05, 7.793099999999983e-05, 7.811099999999876e-05, 7.779200000000014e-05, 7.773599999999839e-05, 7.79449999999994e-05, 7.783400000000232e-05, 7.81389999999979e-05, 7.779200000000014e-05, 7.769499999999915e-05, 7.816700000000051e-05, 7.76250000000013e-05, 7.77770000000011e-05, 7.76519999999975e-05, 7.769400000000315e-05, 7.804100000000092e-05, 7.797199999999907e-05, 7.766700000000001e-05, 7.806900000000006e-05, 7.765300000000044e-05, 7.806900000000006e-05, 7.819499999999965e-05, 7.786100000000198e-05, 7.804200000000039e-05, 7.825000000000193e-05, 7.81250000000018e-05, 7.765300000000044e-05, 7.799999999999821e-05]</msg>
<status status="PASS" starttime="20201030 15:52:40.038" endtime="20201030 15:52:40.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.033" endtime="20201030 15:52:40.041"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:40.045" endtime="20201030 15:52:40.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.043" endtime="20201030 15:52:40.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.042" endtime="20201030 15:52:40.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.684" endtime="20201030 15:52:40.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.684" endtime="20201030 15:52:40.065"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.074" endtime="20201030 15:52:40.093"></status>
</kw>
<msg timestamp="20201030 15:52:40.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.073" endtime="20201030 15:52:40.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.094" endtime="20201030 15:52:40.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.097" endtime="20201030 15:52:40.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.070" endtime="20201030 15:52:40.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.068" endtime="20201030 15:52:40.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.106" endtime="20201030 15:52:40.392"></status>
</kw>
<msg timestamp="20201030 15:52:40.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022772819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022852097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.104" endtime="20201030 15:52:40.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022772819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022852097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.396" endtime="20201030 15:52:40.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.404" endtime="20201030 15:52:40.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.102" endtime="20201030 15:52:40.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.100" endtime="20201030 15:52:40.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:40.411" level="INFO">${RESULT} = [{'diff': 7.92779999999986e-05}, {'diff': 7.938899999999915e-05}, {'diff': 7.911099999999976e-05}, {'diff': 7.870800000000025e-05}, {'diff': 7.899999999999921e-05}, {'diff': 7.877800000000157e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:40.408" endtime="20201030 15:52:40.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:40.415" level="INFO">${ACCURACY} = {'diff': [7.92779999999986e-05, 7.938899999999915e-05, 7.911099999999976e-05, 7.870800000000025e-05, 7.899999999999921e-05, 7.877800000000157e-05, 7.90970000000002e-05, 7.919500000000065e-05, 7.901400...</msg>
<status status="PASS" starttime="20201030 15:52:40.412" endtime="20201030 15:52:40.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.420" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 15:52:40.419" endtime="20201030 15:52:40.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.422" level="INFO">VALUE: [7.92779999999986e-05, 7.938899999999915e-05, 7.911099999999976e-05, 7.870800000000025e-05, 7.899999999999921e-05, 7.877800000000157e-05, 7.90970000000002e-05, 7.919500000000065e-05, 7.901400000000225e-05, 7.883400000000332e-05, 7.882000000000028e-05, 7.911099999999976e-05, 7.927699999999913e-05, 7.866699999999754e-05, 7.907000000000053e-05, 7.883399999999985e-05, 7.920800000000075e-05, 7.899999999999921e-05, 7.883300000000037e-05, 7.888899999999865e-05, 7.883300000000037e-05, 7.922200000000032e-05, 7.887499999999908e-05, 7.919400000000118e-05, 7.880599999999724e-05, 7.897200000000007e-05, 7.913900000000237e-05, 7.890299999999822e-05, 7.920800000000075e-05, 7.91389999999989e-05, 7.877800000000157e-05, 7.920900000000022e-05, 7.879200000000114e-05, 7.919499999999718e-05, 7.88190000000008e-05, 7.922200000000032e-05, 7.888899999999865e-05, 7.898599999999964e-05, 7.897200000000007e-05, 7.888900000000212e-05, 7.911099999999976e-05, 7.880500000000124e-05, 7.867999999999764e-05, 7.904200000000139e-05, 7.887499999999908e-05, 7.866700000000101e-05, 7.897200000000007e-05, 7.927699999999913e-05, 7.895799999999703e-05, 7.888899999999865e-05]</msg>
<status status="PASS" starttime="20201030 15:52:40.421" endtime="20201030 15:52:40.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.416" endtime="20201030 15:52:40.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:40.428" endtime="20201030 15:52:40.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.427" endtime="20201030 15:52:40.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.426" endtime="20201030 15:52:40.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.066" endtime="20201030 15:52:40.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.066" endtime="20201030 15:52:40.449"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.458" endtime="20201030 15:52:40.476"></status>
</kw>
<msg timestamp="20201030 15:52:40.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.456" endtime="20201030 15:52:40.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.478" endtime="20201030 15:52:40.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.480" endtime="20201030 15:52:40.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.454" endtime="20201030 15:52:40.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.451" endtime="20201030 15:52:40.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.490" endtime="20201030 15:52:40.790"></status>
</kw>
<msg timestamp="20201030 15:52:40.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021961389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.488" endtime="20201030 15:52:40.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021961389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.800" endtime="20201030 15:52:40.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.819" endtime="20201030 15:52:40.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.485" endtime="20201030 15:52:40.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.484" endtime="20201030 15:52:40.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:40.834" level="INFO">${RESULT} = [{'diff': 8.005600000000196e-05}, {'diff': 8.058299999999866e-05}, {'diff': 7.987500000000008e-05}, {'diff': 8.02369999999969e-05}, {'diff': 7.99589999999975e-05}, {'diff': 7.987500000000008e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:40.827" endtime="20201030 15:52:40.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:40.846" level="INFO">${ACCURACY} = {'diff': [8.005600000000196e-05, 8.058299999999866e-05, 7.987500000000008e-05, 8.02369999999969e-05, 7.99589999999975e-05, 7.987500000000008e-05, 7.988899999999965e-05, 7.993099999999836e-05, 7.993099...</msg>
<status status="PASS" starttime="20201030 15:52:40.837" endtime="20201030 15:52:40.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.851" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 15:52:40.850" endtime="20201030 15:52:40.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.854" level="INFO">VALUE: [8.005600000000196e-05, 8.058299999999866e-05, 7.987500000000008e-05, 8.02369999999969e-05, 7.99589999999975e-05, 7.987500000000008e-05, 7.988899999999965e-05, 7.993099999999836e-05, 7.993099999999836e-05, 7.993000000000236e-05, 7.991599999999932e-05, 8.000000000000021e-05, 7.988899999999965e-05, 7.970800000000125e-05, 7.965299999999897e-05, 7.987500000000008e-05, 7.972199999999735e-05, 8.007000000000153e-05, 8.004199999999892e-05, 7.966699999999854e-05, 7.973600000000039e-05, 8.012500000000033e-05, 7.99450000000014e-05, 7.995900000000097e-05, 7.984700000000094e-05, 7.97230000000003e-05, 7.977800000000257e-05, 8.004199999999892e-05, 7.99030000000027e-05, 7.988800000000018e-05, 8.000000000000021e-05, 8.012500000000033e-05, 7.972200000000082e-05, 8.011100000000076e-05, 7.984699999999748e-05, 8.023599999999742e-05, 8.005500000000249e-05, 8.012500000000033e-05, 7.97779999999991e-05, 7.984699999999748e-05, 8.000000000000021e-05, 7.984700000000094e-05, 8.022299999999732e-05, 8.001399999999978e-05, 8.01389999999999e-05, 7.986100000000051e-05, 8.012500000000033e-05, 8.011100000000076e-05, 7.993099999999836e-05, 7.969400000000168e-05]</msg>
<status status="PASS" starttime="20201030 15:52:40.852" endtime="20201030 15:52:40.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.847" endtime="20201030 15:52:40.855"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:40.859" endtime="20201030 15:52:40.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.857" endtime="20201030 15:52:40.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.856" endtime="20201030 15:52:40.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.450" endtime="20201030 15:52:40.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.449" endtime="20201030 15:52:40.880"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.889" endtime="20201030 15:52:40.907"></status>
</kw>
<msg timestamp="20201030 15:52:40.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.888" endtime="20201030 15:52:40.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.909" endtime="20201030 15:52:40.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.911" endtime="20201030 15:52:40.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.885" endtime="20201030 15:52:40.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.883" endtime="20201030 15:52:40.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.921" endtime="20201030 15:52:41.210"></status>
</kw>
<msg timestamp="20201030 15:52:41.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022811417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022892569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.919" endtime="20201030 15:52:41.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022811417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022892569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.214" endtime="20201030 15:52:41.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.223" endtime="20201030 15:52:41.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.917" endtime="20201030 15:52:41.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.915" endtime="20201030 15:52:41.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:41.230" level="INFO">${RESULT} = [{'diff': 8.1152000000001e-05}, {'diff': 8.134700000000245e-05}, {'diff': 8.093099999999936e-05}, {'diff': 8.083300000000238e-05}, {'diff': 8.075000000000096e-05}, {'diff': 8.098600000000164e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:41.226" endtime="20201030 15:52:41.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:41.234" level="INFO">${ACCURACY} = {'diff': [8.1152000000001e-05, 8.134700000000245e-05, 8.093099999999936e-05, 8.083300000000238e-05, 8.075000000000096e-05, 8.098600000000164e-05, 8.108299999999916e-05, 8.105599999999949e-05, 8.077800...</msg>
<status status="PASS" starttime="20201030 15:52:41.231" endtime="20201030 15:52:41.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.239" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 15:52:41.238" endtime="20201030 15:52:41.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.241" level="INFO">VALUE: [8.1152000000001e-05, 8.134700000000245e-05, 8.093099999999936e-05, 8.083300000000238e-05, 8.075000000000096e-05, 8.098600000000164e-05, 8.108299999999916e-05, 8.105599999999949e-05, 8.07780000000001e-05, 8.093100000000283e-05, 8.07230000000013e-05, 8.07780000000001e-05, 8.076399999999706e-05, 8.07910000000002e-05, 8.070799999999878e-05, 8.109699999999873e-05, 8.081899999999934e-05, 8.088900000000065e-05, 8.101400000000078e-05, 8.094399999999946e-05, 8.101399999999731e-05, 8.104199999999992e-05, 8.106899999999959e-05, 8.070799999999878e-05, 8.072199999999835e-05, 8.09589999999985e-05, 8.075000000000096e-05, 8.069499999999868e-05, 8.101400000000078e-05, 8.101400000000078e-05, 8.094499999999893e-05, 8.092999999999989e-05, 8.094399999999946e-05, 8.069399999999921e-05, 8.067999999999964e-05, 8.116600000000057e-05, 8.09169999999998e-05, 8.095799999999903e-05, 8.111100000000177e-05, 8.116700000000004e-05, 8.108300000000263e-05, 8.068100000000258e-05, 8.080600000000271e-05, 8.072200000000182e-05, 8.127700000000113e-05, 8.068100000000258e-05, 8.069500000000215e-05, 8.10840000000021e-05, 8.068100000000258e-05, 8.073600000000139e-05]</msg>
<status status="PASS" starttime="20201030 15:52:41.240" endtime="20201030 15:52:41.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.235" endtime="20201030 15:52:41.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:41.250" endtime="20201030 15:52:41.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.249" endtime="20201030 15:52:41.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.247" endtime="20201030 15:52:41.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.881" endtime="20201030 15:52:41.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.880" endtime="20201030 15:52:41.271"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.280" endtime="20201030 15:52:41.300"></status>
</kw>
<msg timestamp="20201030 15:52:41.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.279" endtime="20201030 15:52:41.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.301" endtime="20201030 15:52:41.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.304" endtime="20201030 15:52:41.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.276" endtime="20201030 15:52:41.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.274" endtime="20201030 15:52:41.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.313" endtime="20201030 15:52:41.599"></status>
</kw>
<msg timestamp="20201030 15:52:41.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023392944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023475861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.312" endtime="20201030 15:52:41.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023392944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023475861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.603" endtime="20201030 15:52:41.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.612" endtime="20201030 15:52:41.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.309" endtime="20201030 15:52:41.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.307" endtime="20201030 15:52:41.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:41.618" level="INFO">${RESULT} = [{'diff': 8.29170000000018e-05}, {'diff': 8.206900000000059e-05}, {'diff': 8.202800000000135e-05}, {'diff': 8.19170000000008e-05}, {'diff': 8.207000000000006e-05}, {'diff': 8.202800000000135e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:41.615" endtime="20201030 15:52:41.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:41.623" level="INFO">${ACCURACY} = {'diff': [8.29170000000018e-05, 8.206900000000059e-05, 8.202800000000135e-05, 8.19170000000008e-05, 8.207000000000006e-05, 8.202800000000135e-05, 8.166700000000054e-05, 8.19719999999996e-05, 8.1874999...</msg>
<status status="PASS" starttime="20201030 15:52:41.619" endtime="20201030 15:52:41.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.628" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 15:52:41.627" endtime="20201030 15:52:41.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.631" level="INFO">VALUE: [8.29170000000018e-05, 8.206900000000059e-05, 8.202800000000135e-05, 8.19170000000008e-05, 8.207000000000006e-05, 8.202800000000135e-05, 8.166700000000054e-05, 8.19719999999996e-05, 8.187499999999862e-05, 8.183399999999938e-05, 8.169499999999968e-05, 8.179099999999773e-05, 8.204200000000092e-05, 8.194499999999993e-05, 8.186199999999852e-05, 8.187500000000208e-05, 8.174999999999849e-05, 8.206900000000059e-05, 8.175000000000196e-05, 8.188899999999819e-05, 8.223599999999942e-05, 8.179200000000067e-05, 8.192999999999742e-05, 8.208300000000016e-05, 8.193100000000036e-05, 8.174999999999849e-05, 8.16529999999975e-05, 8.180600000000024e-05, 8.215300000000147e-05, 8.19719999999996e-05, 8.20979999999992e-05, 8.199999999999874e-05, 8.20979999999992e-05, 8.188899999999819e-05, 8.2152000000002e-05, 8.201299999999884e-05, 8.212499999999887e-05, 8.226399999999856e-05, 8.215300000000147e-05, 8.2152999999998e-05, 8.186099999999905e-05, 8.17919999999972e-05, 8.201399999999831e-05, 8.206900000000059e-05, 8.179200000000067e-05, 8.169499999999968e-05, 8.209699999999973e-05, 8.208399999999963e-05, 8.209699999999973e-05, 8.194400000000046e-05]</msg>
<status status="PASS" starttime="20201030 15:52:41.629" endtime="20201030 15:52:41.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.624" endtime="20201030 15:52:41.633"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:41.638" endtime="20201030 15:52:41.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.636" endtime="20201030 15:52:41.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.634" endtime="20201030 15:52:41.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.272" endtime="20201030 15:52:41.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.272" endtime="20201030 15:52:41.659"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.668" endtime="20201030 15:52:41.686"></status>
</kw>
<msg timestamp="20201030 15:52:41.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.666" endtime="20201030 15:52:41.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.687" endtime="20201030 15:52:41.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.690" endtime="20201030 15:52:41.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.663" endtime="20201030 15:52:41.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.661" endtime="20201030 15:52:41.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.699" endtime="20201030 15:52:41.986"></status>
</kw>
<msg timestamp="20201030 15:52:41.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022682806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022766458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.698" endtime="20201030 15:52:41.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022682806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022766458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.990" endtime="20201030 15:52:41.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.999" endtime="20201030 15:52:42.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.695" endtime="20201030 15:52:42.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.693" endtime="20201030 15:52:42.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:42.006" level="INFO">${RESULT} = [{'diff': 8.365200000000003e-05}, {'diff': 8.317999999999867e-05}, {'diff': 8.301399999999931e-05}, {'diff': 8.319400000000171e-05}, {'diff': 8.322200000000085e-05}, {'diff': 8.31390000000029e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:42.002" endtime="20201030 15:52:42.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:42.011" level="INFO">${ACCURACY} = {'diff': [8.365200000000003e-05, 8.317999999999867e-05, 8.301399999999931e-05, 8.319400000000171e-05, 8.322200000000085e-05, 8.31390000000029e-05, 8.298600000000017e-05, 8.274999999999949e-05, 8.28610...</msg>
<status status="PASS" starttime="20201030 15:52:42.007" endtime="20201030 15:52:42.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.016" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 15:52:42.015" endtime="20201030 15:52:42.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.018" level="INFO">VALUE: [8.365200000000003e-05, 8.317999999999867e-05, 8.301399999999931e-05, 8.319400000000171e-05, 8.322200000000085e-05, 8.31390000000029e-05, 8.298600000000017e-05, 8.274999999999949e-05, 8.286100000000005e-05, 8.284700000000048e-05, 8.294400000000146e-05, 8.302799999999888e-05, 8.306999999999759e-05, 8.272200000000035e-05, 8.29590000000005e-05, 8.270800000000078e-05, 8.292999999999842e-05, 8.308399999999716e-05, 8.302800000000235e-05, 8.298600000000017e-05, 8.277700000000263e-05, 8.306900000000159e-05, 8.29170000000018e-05, 8.277700000000263e-05, 8.29720000000006e-05, 8.280500000000177e-05, 8.284700000000048e-05, 8.29720000000006e-05, 8.272200000000035e-05, 8.290300000000222e-05, 8.295800000000103e-05, 8.3152999999999e-05, 8.316699999999858e-05, 8.280600000000124e-05, 8.274999999999949e-05, 8.29170000000018e-05, 8.302799999999888e-05, 8.28049999999983e-05, 8.319500000000118e-05, 8.286100000000005e-05, 8.295799999999756e-05, 8.26659999999986e-05, 8.301400000000278e-05, 8.322200000000085e-05, 8.302799999999888e-05, 8.312499999999987e-05, 8.269400000000121e-05, 8.27910000000022e-05, 8.320800000000128e-05, 8.288899999999919e-05]</msg>
<status status="PASS" starttime="20201030 15:52:42.017" endtime="20201030 15:52:42.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.012" endtime="20201030 15:52:42.020"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:42.023" endtime="20201030 15:52:42.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.022" endtime="20201030 15:52:42.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.021" endtime="20201030 15:52:42.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.660" endtime="20201030 15:52:42.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.659" endtime="20201030 15:52:42.044"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.053" endtime="20201030 15:52:42.072"></status>
</kw>
<msg timestamp="20201030 15:52:42.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.052" endtime="20201030 15:52:42.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.074" endtime="20201030 15:52:42.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.076" endtime="20201030 15:52:42.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.049" endtime="20201030 15:52:42.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.047" endtime="20201030 15:52:42.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.086" endtime="20201030 15:52:42.373"></status>
</kw>
<msg timestamp="20201030 15:52:42.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022646389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022730694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.084" endtime="20201030 15:52:42.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022646389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022730694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.378" endtime="20201030 15:52:42.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.386" endtime="20201030 15:52:42.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.082" endtime="20201030 15:52:42.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.080" endtime="20201030 15:52:42.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:42.393" level="INFO">${RESULT} = [{'diff': 8.43049999999998e-05}, {'diff': 8.400000000000074e-05}, {'diff': 8.391699999999933e-05}, {'diff': 8.41110000000013e-05}, {'diff': 8.381999999999834e-05}, {'diff': 8.411099999999783e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:42.390" endtime="20201030 15:52:42.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:42.397" level="INFO">${ACCURACY} = {'diff': [8.43049999999998e-05, 8.400000000000074e-05, 8.391699999999933e-05, 8.41110000000013e-05, 8.381999999999834e-05, 8.411099999999783e-05, 8.37919999999992e-05, 8.408300000000216e-05, 8.3818999...</msg>
<status status="PASS" starttime="20201030 15:52:42.394" endtime="20201030 15:52:42.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.402" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 15:52:42.401" endtime="20201030 15:52:42.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.405" level="INFO">VALUE: [8.43049999999998e-05, 8.400000000000074e-05, 8.391699999999933e-05, 8.41110000000013e-05, 8.381999999999834e-05, 8.411099999999783e-05, 8.37919999999992e-05, 8.408300000000216e-05, 8.381899999999887e-05, 8.425000000000099e-05, 8.416699999999958e-05, 8.41660000000001e-05, 8.401400000000031e-05, 8.405499999999955e-05, 8.395799999999856e-05, 8.369399999999874e-05, 8.4153e-05, 8.39170000000028e-05, 8.4153e-05, 8.384700000000148e-05, 8.398600000000117e-05, 8.381999999999834e-05, 8.383399999999791e-05, 8.39309999999989e-05, 8.41119999999973e-05, 8.377700000000016e-05, 8.387499999999715e-05, 8.375000000000049e-05, 8.388900000000019e-05, 8.402799999999988e-05, 8.413900000000044e-05, 8.412500000000087e-05, 8.388900000000019e-05, 8.425000000000099e-05, 8.402800000000335e-05, 8.370799999999831e-05, 8.369500000000168e-05, 8.397300000000107e-05, 8.397300000000107e-05, 8.416699999999958e-05, 8.425000000000099e-05, 8.369399999999874e-05, 8.383299999999844e-05, 8.381999999999834e-05, 8.419400000000271e-05, 8.37910000000032e-05, 8.388900000000019e-05, 8.401400000000031e-05, 8.392999999999942e-05, 8.390299999999976e-05]</msg>
<status status="PASS" starttime="20201030 15:52:42.403" endtime="20201030 15:52:42.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.398" endtime="20201030 15:52:42.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:42.410" endtime="20201030 15:52:42.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.408" endtime="20201030 15:52:42.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.407" endtime="20201030 15:52:42.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.045" endtime="20201030 15:52:42.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.045" endtime="20201030 15:52:42.431"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.440" endtime="20201030 15:52:42.460"></status>
</kw>
<msg timestamp="20201030 15:52:42.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.439" endtime="20201030 15:52:42.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.462" endtime="20201030 15:52:42.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.464" endtime="20201030 15:52:42.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.436" endtime="20201030 15:52:42.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.433" endtime="20201030 15:52:42.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.474" endtime="20201030 15:52:42.760"></status>
</kw>
<msg timestamp="20201030 15:52:42.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023703653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023789194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.472" endtime="20201030 15:52:42.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023703653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023789194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.764" endtime="20201030 15:52:42.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.773" endtime="20201030 15:52:42.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.469" endtime="20201030 15:52:42.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.467" endtime="20201030 15:52:42.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:42.780" level="INFO">${RESULT} = [{'diff': 8.554099999999801e-05}, {'diff': 8.500000000000174e-05}, {'diff': 8.481899999999987e-05}, {'diff': 8.495799999999956e-05}, {'diff': 8.526400000000156e-05}, {'diff': 8.472199999999888e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:42.777" endtime="20201030 15:52:42.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:42.784" level="INFO">${ACCURACY} = {'diff': [8.554099999999801e-05, 8.500000000000174e-05, 8.481899999999987e-05, 8.495799999999956e-05, 8.526400000000156e-05, 8.472199999999888e-05, 8.484700000000248e-05, 8.488900000000119e-05, 8.4707...</msg>
<status status="PASS" starttime="20201030 15:52:42.781" endtime="20201030 15:52:42.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.789" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 15:52:42.788" endtime="20201030 15:52:42.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.792" level="INFO">VALUE: [8.554099999999801e-05, 8.500000000000174e-05, 8.481899999999987e-05, 8.495799999999956e-05, 8.526400000000156e-05, 8.472199999999888e-05, 8.484700000000248e-05, 8.488900000000119e-05, 8.470799999999931e-05, 8.472199999999888e-05, 8.483299999999944e-05, 8.486199999999805e-05, 8.49309999999999e-05, 8.523600000000242e-05, 8.491700000000033e-05, 8.493000000000042e-05, 8.473599999999845e-05, 8.516700000000058e-05, 8.500000000000174e-05, 8.483299999999944e-05, 8.502800000000088e-05, 8.505500000000055e-05, 8.48050000000003e-05, 8.51110000000023e-05, 8.506900000000012e-05, 8.515299999999754e-05, 8.470799999999931e-05, 8.486099999999858e-05, 8.483399999999891e-05, 8.48330000000029e-05, 8.508399999999916e-05, 8.461099999999833e-05, 8.459699999999876e-05, 8.490300000000076e-05, 8.522199999999938e-05, 8.531900000000037e-05, 8.46249999999979e-05, 8.502699999999794e-05, 8.475000000000149e-05, 8.501400000000131e-05, 8.470800000000278e-05, 8.51110000000023e-05, 8.473599999999845e-05, 8.473599999999845e-05, 8.504200000000045e-05, 8.513900000000144e-05, 8.506900000000012e-05, 8.491700000000033e-05, 8.48050000000003e-05, 8.506999999999959e-05]</msg>
<status status="PASS" starttime="20201030 15:52:42.790" endtime="20201030 15:52:42.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.785" endtime="20201030 15:52:42.794"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:42.798" endtime="20201030 15:52:42.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.796" endtime="20201030 15:52:42.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.795" endtime="20201030 15:52:42.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.432" endtime="20201030 15:52:42.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.431" endtime="20201030 15:52:42.819"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.828" endtime="20201030 15:52:42.845"></status>
</kw>
<msg timestamp="20201030 15:52:42.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.826" endtime="20201030 15:52:42.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.847" endtime="20201030 15:52:42.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.850" endtime="20201030 15:52:42.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.823" endtime="20201030 15:52:42.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.821" endtime="20201030 15:52:42.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.859" endtime="20201030 15:52:43.146"></status>
</kw>
<msg timestamp="20201030 15:52:43.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022323, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022409583, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:42.858" endtime="20201030 15:52:43.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022323, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022409583, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:43.150" endtime="20201030 15:52:43.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.158" endtime="20201030 15:52:43.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.855" endtime="20201030 15:52:43.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.853" endtime="20201030 15:52:43.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:43.165" level="INFO">${RESULT} = [{'diff': 8.658300000000119e-05}, {'diff': 8.615199999999906e-05}, {'diff': 8.613899999999897e-05}, {'diff': 8.604099999999851e-05}, {'diff': 8.619499999999725e-05}, {'diff': 8.606899999999765e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:43.162" endtime="20201030 15:52:43.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:43.171" level="INFO">${ACCURACY} = {'diff': [8.658300000000119e-05, 8.615199999999906e-05, 8.613899999999897e-05, 8.604099999999851e-05, 8.619499999999725e-05, 8.606899999999765e-05, 8.619400000000124e-05, 8.59310000000009e-05, 8.60420...</msg>
<status status="PASS" starttime="20201030 15:52:43.167" endtime="20201030 15:52:43.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.175" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 15:52:43.174" endtime="20201030 15:52:43.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.178" level="INFO">VALUE: [8.658300000000119e-05, 8.615199999999906e-05, 8.613899999999897e-05, 8.604099999999851e-05, 8.619499999999725e-05, 8.606899999999765e-05, 8.619400000000124e-05, 8.59310000000009e-05, 8.604200000000145e-05, 8.594500000000047e-05, 8.601399999999884e-05, 8.619500000000072e-05, 8.605600000000102e-05, 8.588900000000219e-05, 8.599999999999927e-05, 8.57920000000012e-05, 8.595800000000056e-05, 8.588800000000271e-05, 8.616599999999863e-05, 8.572199999999988e-05, 8.566599999999813e-05, 8.599999999999927e-05, 8.613899999999897e-05, 8.5847e-05, 8.569400000000074e-05, 8.572199999999988e-05, 8.5847e-05, 8.595800000000056e-05, 8.609700000000026e-05, 8.602799999999841e-05, 8.570899999999979e-05, 8.606900000000112e-05, 8.583399999999991e-05, 8.622299999999986e-05, 8.608300000000069e-05, 8.619399999999777e-05, 8.613899999999897e-05, 8.611099999999983e-05, 8.597200000000013e-05, 8.61249999999994e-05, 8.579100000000173e-05, 8.587499999999915e-05, 8.611099999999983e-05, 8.583300000000044e-05, 8.618100000000115e-05, 8.586099999999958e-05, 8.573599999999945e-05, 8.591700000000133e-05, 8.583300000000044e-05, 8.59310000000009e-05]</msg>
<status status="PASS" starttime="20201030 15:52:43.177" endtime="20201030 15:52:43.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.172" endtime="20201030 15:52:43.179"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:43.183" endtime="20201030 15:52:43.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.182" endtime="20201030 15:52:43.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.180" endtime="20201030 15:52:43.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.820" endtime="20201030 15:52:43.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.819" endtime="20201030 15:52:43.204"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.213" endtime="20201030 15:52:43.232"></status>
</kw>
<msg timestamp="20201030 15:52:43.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.211" endtime="20201030 15:52:43.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.234" endtime="20201030 15:52:43.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.237" endtime="20201030 15:52:43.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.209" endtime="20201030 15:52:43.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.207" endtime="20201030 15:52:43.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.246" endtime="20201030 15:52:43.534"></status>
</kw>
<msg timestamp="20201030 15:52:43.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022811694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022899375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.244" endtime="20201030 15:52:43.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022811694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022899375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.538" endtime="20201030 15:52:43.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.547" endtime="20201030 15:52:43.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.242" endtime="20201030 15:52:43.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.240" endtime="20201030 15:52:43.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:43.554" level="INFO">${RESULT} = [{'diff': 8.768099999999918e-05}, {'diff': 8.711100000000083e-05}, {'diff': 8.700000000000027e-05}, {'diff': 8.713899999999997e-05}, {'diff': 8.701399999999984e-05}, {'diff': 8.665299999999904e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:43.550" endtime="20201030 15:52:43.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:43.558" level="INFO">${ACCURACY} = {'diff': [8.768099999999918e-05, 8.711100000000083e-05, 8.700000000000027e-05, 8.713899999999997e-05, 8.701399999999984e-05, 8.665299999999904e-05, 8.720899999999782e-05, 8.7153000000003e-05, 8.691700...</msg>
<status status="PASS" starttime="20201030 15:52:43.555" endtime="20201030 15:52:43.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.564" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 15:52:43.562" endtime="20201030 15:52:43.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.568" level="INFO">VALUE: [8.768099999999918e-05, 8.711100000000083e-05, 8.700000000000027e-05, 8.713899999999997e-05, 8.701399999999984e-05, 8.665299999999904e-05, 8.720899999999782e-05, 8.7153000000003e-05, 8.691700000000233e-05, 8.679199999999873e-05, 8.719399999999877e-05, 8.668000000000217e-05, 8.66660000000026e-05, 8.720799999999834e-05, 8.669399999999827e-05, 8.691600000000285e-05, 8.679100000000273e-05, 8.706899999999865e-05, 8.691699999999886e-05, 8.677800000000263e-05, 8.725000000000052e-05, 8.69860000000007e-05, 8.669499999999775e-05, 8.700000000000027e-05, 8.695900000000104e-05, 8.725000000000052e-05, 8.686100000000058e-05, 8.675000000000002e-05, 8.677699999999969e-05, 8.680499999999883e-05, 8.673600000000045e-05, 8.688899999999972e-05, 8.6847000000001e-05, 8.701399999999984e-05, 8.708299999999822e-05, 8.676399999999959e-05, 8.720800000000181e-05, 8.686100000000058e-05, 8.673600000000045e-05, 8.669500000000122e-05, 8.672200000000088e-05, 8.725000000000052e-05, 8.695900000000104e-05, 8.705599999999855e-05, 8.676399999999959e-05, 8.702699999999994e-05, 8.688899999999972e-05, 8.6847000000001e-05, 8.673600000000045e-05, 8.680499999999883e-05]</msg>
<status status="PASS" starttime="20201030 15:52:43.565" endtime="20201030 15:52:43.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.559" endtime="20201030 15:52:43.569"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:43.573" endtime="20201030 15:52:43.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.571" endtime="20201030 15:52:43.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.570" endtime="20201030 15:52:43.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.205" endtime="20201030 15:52:43.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.204" endtime="20201030 15:52:43.594"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.603" endtime="20201030 15:52:43.622"></status>
</kw>
<msg timestamp="20201030 15:52:43.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.601" endtime="20201030 15:52:43.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.624" endtime="20201030 15:52:43.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.627" endtime="20201030 15:52:43.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.599" endtime="20201030 15:52:43.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.596" endtime="20201030 15:52:43.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.636" endtime="20201030 15:52:43.923"></status>
</kw>
<msg timestamp="20201030 15:52:43.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023473806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023561806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.635" endtime="20201030 15:52:43.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023473806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023561806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.927" endtime="20201030 15:52:43.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.936" endtime="20201030 15:52:43.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.632" endtime="20201030 15:52:43.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.630" endtime="20201030 15:52:43.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:43.943" level="INFO">${RESULT} = [{'diff': 8.800000000000127e-05}, {'diff': 8.824999999999805e-05}, {'diff': 8.772199999999841e-05}, {'diff': 8.809699999999879e-05}, {'diff': 8.786099999999811e-05}, {'diff': 8.806899999999965e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:43.939" endtime="20201030 15:52:43.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:43.947" level="INFO">${ACCURACY} = {'diff': [8.800000000000127e-05, 8.824999999999805e-05, 8.772199999999841e-05, 8.809699999999879e-05, 8.786099999999811e-05, 8.806899999999965e-05, 8.784699999999854e-05, 8.811099999999836e-05, 8.7707...</msg>
<status status="PASS" starttime="20201030 15:52:43.944" endtime="20201030 15:52:43.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.952" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 15:52:43.951" endtime="20201030 15:52:43.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.954" level="INFO">VALUE: [8.800000000000127e-05, 8.824999999999805e-05, 8.772199999999841e-05, 8.809699999999879e-05, 8.786099999999811e-05, 8.806899999999965e-05, 8.784699999999854e-05, 8.811099999999836e-05, 8.770799999999884e-05, 8.783299999999897e-05, 8.806899999999965e-05, 8.797200000000213e-05, 8.81670000000001e-05, 8.765300000000004e-05, 8.811099999999836e-05, 8.76669999999996e-05, 8.820900000000229e-05, 8.782000000000234e-05, 8.81670000000001e-05, 8.81120000000013e-05, 8.788900000000072e-05, 8.795799999999909e-05, 8.78189999999994e-05, 8.809699999999879e-05, 8.788899999999725e-05, 8.798599999999823e-05, 8.790300000000029e-05, 8.770799999999884e-05, 8.804199999999998e-05, 8.777800000000016e-05, 8.787499999999768e-05, 8.76669999999996e-05, 8.81670000000001e-05, 8.769499999999875e-05, 8.779199999999973e-05, 8.806999999999912e-05, 8.815200000000106e-05, 8.79730000000016e-05, 8.78189999999994e-05, 8.797200000000213e-05, 8.779100000000026e-05, 8.769400000000274e-05, 8.802800000000041e-05, 8.772199999999841e-05, 8.822200000000238e-05, 8.786099999999811e-05, 8.788900000000072e-05, 8.793099999999943e-05, 8.762499999999743e-05, 8.797199999999866e-05]</msg>
<status status="PASS" starttime="20201030 15:52:43.953" endtime="20201030 15:52:43.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.948" endtime="20201030 15:52:43.957"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:43.961" endtime="20201030 15:52:43.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.959" endtime="20201030 15:52:43.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.958" endtime="20201030 15:52:43.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.595" endtime="20201030 15:52:43.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.594" endtime="20201030 15:52:43.981"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.991" endtime="20201030 15:52:44.009"></status>
</kw>
<msg timestamp="20201030 15:52:44.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.989" endtime="20201030 15:52:44.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.011" endtime="20201030 15:52:44.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.014" endtime="20201030 15:52:44.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.986" endtime="20201030 15:52:44.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.984" endtime="20201030 15:52:44.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.023" endtime="20201030 15:52:44.310"></status>
</kw>
<msg timestamp="20201030 15:52:44.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022519639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022609153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.021" endtime="20201030 15:52:44.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022519639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022609153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.314" endtime="20201030 15:52:44.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.323" endtime="20201030 15:52:44.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.019" endtime="20201030 15:52:44.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.017" endtime="20201030 15:52:44.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:44.330" level="INFO">${RESULT} = [{'diff': 8.951399999999887e-05}, {'diff': 8.919499999999678e-05}, {'diff': 8.897299999999914e-05}, {'diff': 8.879200000000073e-05}, {'diff': 8.908400000000316e-05}, {'diff': 8.897299999999914e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:44.326" endtime="20201030 15:52:44.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:44.335" level="INFO">${ACCURACY} = {'diff': [8.951399999999887e-05, 8.919499999999678e-05, 8.897299999999914e-05, 8.879200000000073e-05, 8.908400000000316e-05, 8.897299999999914e-05, 8.887499999999868e-05, 8.91519999999986e-05, 8.88749...</msg>
<status status="PASS" starttime="20201030 15:52:44.331" endtime="20201030 15:52:44.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.340" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 15:52:44.339" endtime="20201030 15:52:44.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.342" level="INFO">VALUE: [8.951399999999887e-05, 8.919499999999678e-05, 8.897299999999914e-05, 8.879200000000073e-05, 8.908400000000316e-05, 8.897299999999914e-05, 8.887499999999868e-05, 8.91519999999986e-05, 8.887499999999868e-05, 8.901400000000184e-05, 8.867999999999723e-05, 8.893000000000095e-05, 8.88190000000004e-05, 8.924999999999905e-05, 8.902799999999794e-05, 8.879200000000073e-05, 8.915299999999807e-05, 8.868100000000018e-05, 8.925000000000252e-05, 8.89860000000027e-05, 8.865299999999757e-05, 8.918100000000068e-05, 8.909699999999979e-05, 8.898599999999923e-05, 8.876400000000159e-05, 8.870800000000331e-05, 8.865200000000156e-05, 8.902700000000194e-05, 8.862499999999843e-05, 8.919400000000077e-05, 8.91800000000012e-05, 8.877800000000116e-05, 8.89860000000027e-05, 8.877800000000116e-05, 8.879200000000073e-05, 8.8945e-05, 8.877800000000116e-05, 8.907000000000012e-05, 8.893099999999696e-05, 8.922299999999939e-05, 8.877700000000169e-05, 8.912499999999893e-05, 8.877700000000169e-05, 8.913799999999902e-05, 8.884699999999954e-05, 8.897199999999966e-05, 8.88190000000004e-05, 8.888899999999825e-05, 8.873599999999898e-05, 8.875000000000202e-05]</msg>
<status status="PASS" starttime="20201030 15:52:44.341" endtime="20201030 15:52:44.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.336" endtime="20201030 15:52:44.344"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:44.348" endtime="20201030 15:52:44.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.346" endtime="20201030 15:52:44.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.345" endtime="20201030 15:52:44.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.982" endtime="20201030 15:52:44.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.982" endtime="20201030 15:52:44.369"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.378" endtime="20201030 15:52:44.397"></status>
</kw>
<msg timestamp="20201030 15:52:44.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.376" endtime="20201030 15:52:44.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.399" endtime="20201030 15:52:44.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.402" endtime="20201030 15:52:44.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.373" endtime="20201030 15:52:44.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.371" endtime="20201030 15:52:44.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.424" endtime="20201030 15:52:44.713"></status>
</kw>
<msg timestamp="20201030 15:52:44.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022754181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022844986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.421" endtime="20201030 15:52:44.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022754181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022844986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.717" endtime="20201030 15:52:44.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.726" endtime="20201030 15:52:44.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.415" endtime="20201030 15:52:44.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.410" endtime="20201030 15:52:44.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:44.732" level="INFO">${RESULT} = [{'diff': 9.080500000000283e-05}, {'diff': 9.036100000000061e-05}, {'diff': 8.99999999999998e-05}, {'diff': 9.001399999999937e-05}, {'diff': 9.011100000000036e-05}, {'diff': 9.01389999999995e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:44.729" endtime="20201030 15:52:44.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:44.737" level="INFO">${ACCURACY} = {'diff': [9.080500000000283e-05, 9.036100000000061e-05, 8.99999999999998e-05, 9.001399999999937e-05, 9.011100000000036e-05, 9.01389999999995e-05, 9.011100000000036e-05, 8.969500000000075e-05, 9.002799...</msg>
<status status="PASS" starttime="20201030 15:52:44.733" endtime="20201030 15:52:44.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.742" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 15:52:44.740" endtime="20201030 15:52:44.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.744" level="INFO">VALUE: [9.080500000000283e-05, 9.036100000000061e-05, 8.99999999999998e-05, 9.001399999999937e-05, 9.011100000000036e-05, 9.01389999999995e-05, 9.011100000000036e-05, 8.969500000000075e-05, 9.002799999999894e-05, 8.998600000000023e-05, 8.99589999999971e-05, 9.008400000000069e-05, 9.01939999999983e-05, 8.96519999999991e-05, 8.995800000000109e-05, 9.01519999999996e-05, 9.023600000000048e-05, 9.027799999999919e-05, 8.986100000000011e-05, 9.019400000000177e-05, 9.002799999999894e-05, 9.002799999999894e-05, 8.962499999999943e-05, 8.966699999999814e-05, 9.012499999999993e-05, 9.005600000000155e-05, 9.01389999999995e-05, 8.972299999999989e-05, 8.9638999999999e-05, 8.970800000000084e-05, 8.991700000000186e-05, 9.017999999999873e-05, 8.976400000000259e-05, 9.004099999999904e-05, 9.002699999999947e-05, 9.020800000000134e-05, 9.015299999999907e-05, 8.977799999999869e-05, 9.001399999999937e-05, 8.99999999999998e-05, 8.970800000000084e-05, 8.990299999999882e-05, 8.9638999999999e-05, 8.983400000000044e-05, 9.006999999999765e-05, 8.96670000000016e-05, 9.011100000000036e-05, 8.990299999999882e-05, 9.020800000000134e-05, 8.969400000000127e-05]</msg>
<status status="PASS" starttime="20201030 15:52:44.743" endtime="20201030 15:52:44.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.738" endtime="20201030 15:52:44.746"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:44.749" endtime="20201030 15:52:44.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.748" endtime="20201030 15:52:44.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.747" endtime="20201030 15:52:44.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.370" endtime="20201030 15:52:44.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.369" endtime="20201030 15:52:44.770"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.779" endtime="20201030 15:52:44.798"></status>
</kw>
<msg timestamp="20201030 15:52:44.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.778" endtime="20201030 15:52:44.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.800" endtime="20201030 15:52:44.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.803" endtime="20201030 15:52:44.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.775" endtime="20201030 15:52:44.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.773" endtime="20201030 15:52:44.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.812" endtime="20201030 15:52:45.098"></status>
</kw>
<msg timestamp="20201030 15:52:45.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023105792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023196875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.810" endtime="20201030 15:52:45.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023105792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023196875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.102" endtime="20201030 15:52:45.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.111" endtime="20201030 15:52:45.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.808" endtime="20201030 15:52:45.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.806" endtime="20201030 15:52:45.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:45.118" level="INFO">${RESULT} = [{'diff': 9.108299999999875e-05}, {'diff': 9.111100000000136e-05}, {'diff': 9.076400000000012e-05}, {'diff': 9.084700000000154e-05}, {'diff': 9.080499999999936e-05}, {'diff': 9.088800000000077e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:45.115" endtime="20201030 15:52:45.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:45.122" level="INFO">${ACCURACY} = {'diff': [9.108299999999875e-05, 9.111100000000136e-05, 9.076400000000012e-05, 9.084700000000154e-05, 9.080499999999936e-05, 9.088800000000077e-05, 9.117999999999973e-05, 9.113899999999703e-05, 9.0846...</msg>
<status status="PASS" starttime="20201030 15:52:45.119" endtime="20201030 15:52:45.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.127" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 15:52:45.126" endtime="20201030 15:52:45.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.129" level="INFO">VALUE: [9.108299999999875e-05, 9.111100000000136e-05, 9.076400000000012e-05, 9.084700000000154e-05, 9.080499999999936e-05, 9.088800000000077e-05, 9.117999999999973e-05, 9.113899999999703e-05, 9.084699999999807e-05, 9.06939999999988e-05, 9.098599999999776e-05, 9.084699999999807e-05, 9.118099999999921e-05, 9.086100000000111e-05, 9.072200000000141e-05, 9.076400000000012e-05, 9.112500000000093e-05, 9.091699999999939e-05, 9.0639e-05, 9.083399999999797e-05, 9.069499999999828e-05, 9.063799999999705e-05, 9.095800000000209e-05, 9.11520000000006e-05, 9.116600000000016e-05, 9.125000000000105e-05, 9.101400000000037e-05, 9.120799999999887e-05, 9.077799999999969e-05, 9.090299999999982e-05, 9.124999999999758e-05, 9.061099999999739e-05, 9.088899999999678e-05, 9.122200000000191e-05, 9.06670000000026e-05, 9.120900000000182e-05, 9.116699999999964e-05, 9.112500000000093e-05, 9.06939999999988e-05, 9.102700000000047e-05, 9.08329999999985e-05, 9.08329999999985e-05, 9.102700000000047e-05, 9.086100000000111e-05, 9.108300000000222e-05, 9.072200000000141e-05, 9.122200000000191e-05, 9.097199999999819e-05, 9.081899999999893e-05, 9.070799999999837e-05]</msg>
<status status="PASS" starttime="20201030 15:52:45.128" endtime="20201030 15:52:45.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.123" endtime="20201030 15:52:45.132"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:45.136" endtime="20201030 15:52:45.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.134" endtime="20201030 15:52:45.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.133" endtime="20201030 15:52:45.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.771" endtime="20201030 15:52:45.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.771" endtime="20201030 15:52:45.157"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.166" endtime="20201030 15:52:45.185"></status>
</kw>
<msg timestamp="20201030 15:52:45.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.164" endtime="20201030 15:52:45.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.187" endtime="20201030 15:52:45.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.189" endtime="20201030 15:52:45.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.161" endtime="20201030 15:52:45.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.159" endtime="20201030 15:52:45.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.199" endtime="20201030 15:52:45.485"></status>
</kw>
<msg timestamp="20201030 15:52:45.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022809083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022902014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.198" endtime="20201030 15:52:45.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022809083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022902014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.490" endtime="20201030 15:52:45.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.499" endtime="20201030 15:52:45.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.195" endtime="20201030 15:52:45.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.193" endtime="20201030 15:52:45.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:45.506" level="INFO">${RESULT} = [{'diff': 9.293099999999749e-05}, {'diff': 9.205499999999714e-05}, {'diff': 9.176400000000112e-05}, {'diff': 9.202800000000094e-05}, {'diff': 9.194499999999953e-05}, {'diff': 9.223699999999849e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:45.502" endtime="20201030 15:52:45.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:45.511" level="INFO">${ACCURACY} = {'diff': [9.293099999999749e-05, 9.205499999999714e-05, 9.176400000000112e-05, 9.202800000000094e-05, 9.194499999999953e-05, 9.223699999999849e-05, 9.184699999999907e-05, 9.180500000000036e-05, 9.1889...</msg>
<status status="PASS" starttime="20201030 15:52:45.507" endtime="20201030 15:52:45.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.516" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 15:52:45.515" endtime="20201030 15:52:45.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.518" level="INFO">VALUE: [9.293099999999749e-05, 9.205499999999714e-05, 9.176400000000112e-05, 9.202800000000094e-05, 9.194499999999953e-05, 9.223699999999849e-05, 9.184699999999907e-05, 9.180500000000036e-05, 9.188900000000125e-05, 9.206900000000018e-05, 9.187499999999821e-05, 9.20130000000019e-05, 9.16939999999998e-05, 9.16939999999998e-05, 9.177800000000069e-05, 9.205500000000061e-05, 9.216700000000064e-05, 9.222199999999944e-05, 9.169499999999928e-05, 9.194400000000005e-05, 9.176399999999765e-05, 9.198599999999876e-05, 9.206999999999965e-05, 9.183400000000244e-05, 9.182000000000287e-05, 9.163899999999753e-05, 9.199999999999833e-05, 9.187499999999821e-05, 9.16520000000011e-05, 9.212500000000193e-05, 9.193000000000048e-05, 9.220799999999987e-05, 9.187499999999821e-05, 9.16939999999998e-05, 9.212499999999846e-05, 9.19719999999992e-05, 9.205600000000008e-05, 9.180599999999983e-05, 9.18329999999995e-05, 9.216700000000064e-05, 9.16529999999971e-05, 9.198600000000223e-05, 9.191600000000091e-05, 9.21390000000015e-05, 9.169500000000275e-05, 9.220799999999987e-05, 9.186099999999864e-05, 9.21520000000016e-05, 9.180500000000036e-05, 9.201400000000137e-05]</msg>
<status status="PASS" starttime="20201030 15:52:45.517" endtime="20201030 15:52:45.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.512" endtime="20201030 15:52:45.520"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:45.524" endtime="20201030 15:52:45.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.522" endtime="20201030 15:52:45.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.521" endtime="20201030 15:52:45.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.157" endtime="20201030 15:52:45.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.157" endtime="20201030 15:52:45.544"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.553" endtime="20201030 15:52:45.572"></status>
</kw>
<msg timestamp="20201030 15:52:45.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.552" endtime="20201030 15:52:45.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.574" endtime="20201030 15:52:45.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.576" endtime="20201030 15:52:45.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.549" endtime="20201030 15:52:45.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.547" endtime="20201030 15:52:45.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.586" endtime="20201030 15:52:45.874"></status>
</kw>
<msg timestamp="20201030 15:52:45.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022737153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0228305, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:45.584" endtime="20201030 15:52:45.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022737153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0228305, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:45.878" endtime="20201030 15:52:45.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.887" endtime="20201030 15:52:45.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.581" endtime="20201030 15:52:45.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.580" endtime="20201030 15:52:45.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:45.894" level="INFO">${RESULT} = [{'diff': 9.334700000000057e-05}, {'diff': 9.290299999999835e-05}, {'diff': 9.277800000000169e-05}, {'diff': 9.276399999999865e-05}, {'diff': 9.287499999999921e-05}, {'diff': 9.284700000000007e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:45.890" endtime="20201030 15:52:45.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:45.898" level="INFO">${ACCURACY} = {'diff': [9.334700000000057e-05, 9.290299999999835e-05, 9.277800000000169e-05, 9.276399999999865e-05, 9.287499999999921e-05, 9.284700000000007e-05, 9.283399999999997e-05, 9.281999999999693e-05, 9.3193...</msg>
<status status="PASS" starttime="20201030 15:52:45.895" endtime="20201030 15:52:45.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.903" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 15:52:45.902" endtime="20201030 15:52:45.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.906" level="INFO">VALUE: [9.334700000000057e-05, 9.290299999999835e-05, 9.277800000000169e-05, 9.276399999999865e-05, 9.287499999999921e-05, 9.284700000000007e-05, 9.283399999999997e-05, 9.281999999999693e-05, 9.319399999999783e-05, 9.287499999999921e-05, 9.277700000000222e-05, 9.308300000000075e-05, 9.26940000000008e-05, 9.277799999999822e-05, 9.29720000000002e-05, 9.31390000000025e-05, 9.306900000000118e-05, 9.317999999999826e-05, 9.313899999999903e-05, 9.316700000000164e-05, 9.288899999999878e-05, 9.319500000000078e-05, 9.311099999999989e-05, 9.291700000000139e-05, 9.31529999999986e-05, 9.294500000000053e-05, 9.313799999999955e-05, 9.294500000000053e-05, 9.317999999999826e-05, 9.312500000000293e-05, 9.286099999999964e-05, 9.270800000000037e-05, 9.267999999999776e-05, 9.31940000000013e-05, 9.28330000000005e-05, 9.287499999999921e-05, 9.306899999999771e-05, 9.313899999999903e-05, 9.291699999999792e-05, 9.29720000000002e-05, 9.293099999999749e-05, 9.26529999999981e-05, 9.322200000000044e-05, 9.315199999999912e-05, 9.268100000000071e-05, 9.309700000000032e-05, 9.311099999999989e-05, 9.270800000000037e-05, 9.304100000000204e-05, 9.312499999999946e-05]</msg>
<status status="PASS" starttime="20201030 15:52:45.904" endtime="20201030 15:52:45.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.899" endtime="20201030 15:52:45.907"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:45.911" endtime="20201030 15:52:45.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.909" endtime="20201030 15:52:45.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.908" endtime="20201030 15:52:45.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.545" endtime="20201030 15:52:45.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.545" endtime="20201030 15:52:45.932"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.941" endtime="20201030 15:52:45.961"></status>
</kw>
<msg timestamp="20201030 15:52:45.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.939" endtime="20201030 15:52:45.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.963" endtime="20201030 15:52:45.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.965" endtime="20201030 15:52:45.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.936" endtime="20201030 15:52:45.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.934" endtime="20201030 15:52:45.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.975" endtime="20201030 15:52:46.261"></status>
</kw>
<msg timestamp="20201030 15:52:46.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023525764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023620083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.973" endtime="20201030 15:52:46.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023525764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023620083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.265" endtime="20201030 15:52:46.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.274" endtime="20201030 15:52:46.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.970" endtime="20201030 15:52:46.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.969" endtime="20201030 15:52:46.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:46.281" level="INFO">${RESULT} = [{'diff': 9.431899999999896e-05}, {'diff': 9.408300000000175e-05}, {'diff': 9.367999999999876e-05}, {'diff': 9.413900000000003e-05}, {'diff': 9.422200000000144e-05}, {'diff': 9.367999999999876e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:46.278" endtime="20201030 15:52:46.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:46.286" level="INFO">${ACCURACY} = {'diff': [9.431899999999896e-05, 9.408300000000175e-05, 9.367999999999876e-05, 9.413900000000003e-05, 9.422200000000144e-05, 9.367999999999876e-05, 9.393099999999849e-05, 9.390299999999935e-05, 9.3875...</msg>
<status status="PASS" starttime="20201030 15:52:46.282" endtime="20201030 15:52:46.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.293" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 15:52:46.290" endtime="20201030 15:52:46.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.295" level="INFO">VALUE: [9.431899999999896e-05, 9.408300000000175e-05, 9.367999999999876e-05, 9.413900000000003e-05, 9.422200000000144e-05, 9.367999999999876e-05, 9.393099999999849e-05, 9.390299999999935e-05, 9.387500000000021e-05, 9.402799999999947e-05, 9.409699999999785e-05, 9.377799999999922e-05, 9.407000000000165e-05, 9.412500000000046e-05, 9.401300000000043e-05, 9.394399999999858e-05, 9.411100000000089e-05, 9.377699999999975e-05, 9.422200000000144e-05, 9.394399999999858e-05, 9.376399999999965e-05, 9.388899999999978e-05, 9.40139999999999e-05, 9.368099999999824e-05, 9.42079999999984e-05, 9.39720000000012e-05, 9.402799999999947e-05, 9.384800000000054e-05, 9.416699999999917e-05, 9.423700000000049e-05, 9.394500000000153e-05, 9.391599999999944e-05, 9.368099999999824e-05, 9.375000000000008e-05, 9.36940000000018e-05, 9.38330000000015e-05, 9.41529999999996e-05, 9.367999999999876e-05, 9.393000000000248e-05, 9.384700000000107e-05, 9.394399999999858e-05, 9.386100000000064e-05, 9.38330000000015e-05, 9.413900000000003e-05, 9.422200000000144e-05, 9.368099999999824e-05, 9.419499999999831e-05, 9.379200000000226e-05, 9.380499999999889e-05, 9.419399999999883e-05]</msg>
<status status="PASS" starttime="20201030 15:52:46.294" endtime="20201030 15:52:46.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.287" endtime="20201030 15:52:46.304"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:46.308" endtime="20201030 15:52:46.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.307" endtime="20201030 15:52:46.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.305" endtime="20201030 15:52:46.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.933" endtime="20201030 15:52:46.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.932" endtime="20201030 15:52:46.329"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.338" endtime="20201030 15:52:46.358"></status>
</kw>
<msg timestamp="20201030 15:52:46.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.337" endtime="20201030 15:52:46.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.359" endtime="20201030 15:52:46.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.362" endtime="20201030 15:52:46.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.334" endtime="20201030 15:52:46.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.332" endtime="20201030 15:52:46.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.371" endtime="20201030 15:52:46.677"></status>
</kw>
<msg timestamp="20201030 15:52:46.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022007056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022102569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.369" endtime="20201030 15:52:46.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022007056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022102569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.681" endtime="20201030 15:52:46.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.690" endtime="20201030 15:52:46.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.367" endtime="20201030 15:52:46.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.365" endtime="20201030 15:52:46.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:46.697" level="INFO">${RESULT} = [{'diff': 9.551299999999846e-05}, {'diff': 9.55140000000014e-05}, {'diff': 9.490300000000035e-05}, {'diff': 9.488899999999731e-05}, {'diff': 9.481899999999946e-05}, {'diff': 9.51530000000006e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:46.693" endtime="20201030 15:52:46.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:46.709" level="INFO">${ACCURACY} = {'diff': [9.551299999999846e-05, 9.55140000000014e-05, 9.490300000000035e-05, 9.488899999999731e-05, 9.481899999999946e-05, 9.51530000000006e-05, 9.504200000000004e-05, 9.522200000000244e-05, 9.501400...</msg>
<status status="PASS" starttime="20201030 15:52:46.705" endtime="20201030 15:52:46.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.714" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 15:52:46.713" endtime="20201030 15:52:46.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.716" level="INFO">VALUE: [9.551299999999846e-05, 9.55140000000014e-05, 9.490300000000035e-05, 9.488899999999731e-05, 9.481899999999946e-05, 9.51530000000006e-05, 9.504200000000004e-05, 9.522200000000244e-05, 9.50140000000009e-05, 9.463899999999706e-05, 9.49720000000022e-05, 9.463900000000053e-05, 9.46530000000001e-05, 9.516700000000017e-05, 9.509699999999885e-05, 9.504200000000004e-05, 9.519499999999931e-05, 9.494499999999906e-05, 9.522299999999845e-05, 9.504100000000057e-05, 9.513800000000155e-05, 9.476400000000065e-05, 9.504100000000057e-05, 9.509700000000232e-05, 9.480499999999989e-05, 9.520800000000287e-05, 9.519499999999931e-05, 9.49859999999983e-05, 9.52079999999994e-05, 9.505599999999961e-05, 9.497199999999872e-05, 9.495899999999863e-05, 9.508399999999875e-05, 9.520899999999888e-05, 9.462500000000096e-05, 9.472199999999847e-05, 9.472199999999847e-05, 9.463800000000105e-05, 9.51660000000007e-05, 9.501399999999743e-05, 9.477800000000022e-05, 9.518000000000026e-05, 9.46530000000001e-05, 9.508300000000275e-05, 9.488899999999731e-05, 9.474999999999761e-05, 9.479199999999979e-05, 9.506999999999918e-05, 9.476400000000065e-05, 9.51530000000006e-05]</msg>
<status status="PASS" starttime="20201030 15:52:46.715" endtime="20201030 15:52:46.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.710" endtime="20201030 15:52:46.718"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:46.721" endtime="20201030 15:52:46.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.720" endtime="20201030 15:52:46.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.719" endtime="20201030 15:52:46.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.330" endtime="20201030 15:52:46.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.330" endtime="20201030 15:52:46.742"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.751" endtime="20201030 15:52:46.770"></status>
</kw>
<msg timestamp="20201030 15:52:46.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.749" endtime="20201030 15:52:46.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.771" endtime="20201030 15:52:46.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.774" endtime="20201030 15:52:46.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.747" endtime="20201030 15:52:46.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.745" endtime="20201030 15:52:46.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.783" endtime="20201030 15:52:47.071"></status>
</kw>
<msg timestamp="20201030 15:52:47.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021875333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021972, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:46.782" endtime="20201030 15:52:47.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021875333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021972, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:47.075" endtime="20201030 15:52:47.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.084" endtime="20201030 15:52:47.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.779" endtime="20201030 15:52:47.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.777" endtime="20201030 15:52:47.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:47.091" level="INFO">${RESULT} = [{'diff': 9.66669999999982e-05}, {'diff': 9.638899999999881e-05}, {'diff': 9.613899999999856e-05}, {'diff': 9.597199999999972e-05}, {'diff': 9.61669999999977e-05}, {'diff': 9.576399999999818e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:47.087" endtime="20201030 15:52:47.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:47.095" level="INFO">${ACCURACY} = {'diff': [9.66669999999982e-05, 9.638899999999881e-05, 9.613899999999856e-05, 9.597199999999972e-05, 9.61669999999977e-05, 9.576399999999818e-05, 9.602800000000147e-05, 9.56530000000011e-05, 9.5833999...</msg>
<status status="PASS" starttime="20201030 15:52:47.092" endtime="20201030 15:52:47.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.100" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 15:52:47.099" endtime="20201030 15:52:47.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.102" level="INFO">VALUE: [9.66669999999982e-05, 9.638899999999881e-05, 9.613899999999856e-05, 9.597199999999972e-05, 9.61669999999977e-05, 9.576399999999818e-05, 9.602800000000147e-05, 9.56530000000011e-05, 9.58339999999995e-05, 9.607000000000018e-05, 9.609800000000279e-05, 9.605600000000061e-05, 9.579200000000079e-05, 9.58339999999995e-05, 9.608300000000028e-05, 9.575000000000208e-05, 9.565199999999816e-05, 9.611099999999942e-05, 9.595800000000015e-05, 9.572199999999947e-05, 9.583300000000003e-05, 9.623599999999954e-05, 9.622199999999997e-05, 9.576400000000165e-05, 9.605600000000061e-05, 9.594500000000006e-05, 9.622199999999997e-05, 9.580600000000036e-05, 9.591600000000144e-05, 9.572299999999895e-05, 9.612500000000246e-05, 9.612499999999899e-05, 9.576400000000165e-05, 9.595800000000015e-05, 9.568000000000076e-05, 9.619400000000083e-05, 9.59859999999993e-05, 9.563899999999806e-05, 9.609699999999985e-05, 9.574999999999861e-05, 9.572199999999947e-05, 9.618100000000074e-05, 9.562500000000196e-05, 9.626299999999921e-05, 9.563900000000153e-05, 9.625000000000258e-05, 9.569400000000033e-05, 9.568100000000024e-05, 9.576299999999871e-05, 9.577700000000175e-05]</msg>
<status status="PASS" starttime="20201030 15:52:47.101" endtime="20201030 15:52:47.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.096" endtime="20201030 15:52:47.104"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:47.108" endtime="20201030 15:52:47.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.106" endtime="20201030 15:52:47.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.105" endtime="20201030 15:52:47.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.743" endtime="20201030 15:52:47.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.742" endtime="20201030 15:52:47.128"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.138" endtime="20201030 15:52:47.157"></status>
</kw>
<msg timestamp="20201030 15:52:47.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.136" endtime="20201030 15:52:47.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.158" endtime="20201030 15:52:47.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.161" endtime="20201030 15:52:47.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.133" endtime="20201030 15:52:47.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.131" endtime="20201030 15:52:47.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.171" endtime="20201030 15:52:47.482"></status>
</kw>
<msg timestamp="20201030 15:52:47.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023269319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0233665, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:47.169" endtime="20201030 15:52:47.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023269319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0233665, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:47.486" endtime="20201030 15:52:47.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.495" endtime="20201030 15:52:47.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.167" endtime="20201030 15:52:47.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.165" endtime="20201030 15:52:47.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:47.502" level="INFO">${RESULT} = [{'diff': 9.718099999999827e-05}, {'diff': 9.709800000000032e-05}, {'diff': 9.715199999999966e-05}, {'diff': 9.708300000000128e-05}, {'diff': 9.706900000000171e-05}, {'diff': 9.663900000000253e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:47.499" endtime="20201030 15:52:47.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:47.506" level="INFO">${ACCURACY} = {'diff': [9.718099999999827e-05, 9.709800000000032e-05, 9.715199999999966e-05, 9.708300000000128e-05, 9.706900000000171e-05, 9.663900000000253e-05, 9.71669999999987e-05, 9.711100000000042e-05, 9.71110...</msg>
<status status="PASS" starttime="20201030 15:52:47.503" endtime="20201030 15:52:47.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.511" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 15:52:47.510" endtime="20201030 15:52:47.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.514" level="INFO">VALUE: [9.718099999999827e-05, 9.709800000000032e-05, 9.715199999999966e-05, 9.708300000000128e-05, 9.706900000000171e-05, 9.663900000000253e-05, 9.71669999999987e-05, 9.711100000000042e-05, 9.711100000000042e-05, 9.67080000000009e-05, 9.712499999999999e-05, 9.697200000000072e-05, 9.701399999999943e-05, 9.687499999999974e-05, 9.697200000000072e-05, 9.668100000000124e-05, 9.682000000000093e-05, 9.687499999999974e-05, 9.674999999999961e-05, 9.66660000000022e-05, 9.722200000000097e-05, 9.720799999999793e-05, 9.715299999999913e-05, 9.680499999999842e-05, 9.691599999999898e-05, 9.687499999999974e-05, 9.690299999999888e-05, 9.67080000000009e-05, 9.699999999999986e-05, 9.674999999999961e-05, 9.67920000000018e-05, 9.68340000000005e-05, 9.704100000000257e-05, 9.718100000000174e-05, 9.67080000000009e-05, 9.67080000000009e-05, 9.68470000000006e-05, 9.66799999999983e-05, 9.711100000000042e-05, 9.709700000000085e-05, 9.72219999999975e-05, 9.694400000000158e-05, 9.683300000000103e-05, 9.694500000000106e-05, 9.683300000000103e-05, 9.686100000000017e-05, 9.71530000000026e-05, 9.673600000000004e-05, 9.708399999999728e-05, 9.699999999999986e-05]</msg>
<status status="PASS" starttime="20201030 15:52:47.512" endtime="20201030 15:52:47.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.507" endtime="20201030 15:52:47.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:47.520" endtime="20201030 15:52:47.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.518" endtime="20201030 15:52:47.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.517" endtime="20201030 15:52:47.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.129" endtime="20201030 15:52:47.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.129" endtime="20201030 15:52:47.540"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.550" endtime="20201030 15:52:47.569"></status>
</kw>
<msg timestamp="20201030 15:52:47.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.548" endtime="20201030 15:52:47.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.571" endtime="20201030 15:52:47.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.573" endtime="20201030 15:52:47.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.545" endtime="20201030 15:52:47.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.543" endtime="20201030 15:52:47.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.583" endtime="20201030 15:52:47.869"></status>
</kw>
<msg timestamp="20201030 15:52:47.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022461583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022559611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.581" endtime="20201030 15:52:47.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022461583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022559611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.874" endtime="20201030 15:52:47.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.882" endtime="20201030 15:52:47.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.578" endtime="20201030 15:52:47.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.577" endtime="20201030 15:52:47.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:47.889" level="INFO">${RESULT} = [{'diff': 9.8028e-05}, {'diff': 9.837499999999777e-05}, {'diff': 9.793000000000301e-05}, {'diff': 9.791699999999945e-05}, {'diff': 9.773600000000104e-05}, {'diff': 9.762500000000049e-05}, {'diff': 9.7...</msg>
<status status="PASS" starttime="20201030 15:52:47.886" endtime="20201030 15:52:47.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:47.894" level="INFO">${ACCURACY} = {'diff': [9.8028e-05, 9.837499999999777e-05, 9.793000000000301e-05, 9.791699999999945e-05, 9.773600000000104e-05, 9.762500000000049e-05, 9.797200000000172e-05, 9.79860000000013e-05, 9.791599999999998e...</msg>
<status status="PASS" starttime="20201030 15:52:47.890" endtime="20201030 15:52:47.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.899" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 15:52:47.898" endtime="20201030 15:52:47.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.901" level="INFO">VALUE: [9.8028e-05, 9.837499999999777e-05, 9.793000000000301e-05, 9.791699999999945e-05, 9.773600000000104e-05, 9.762500000000049e-05, 9.797200000000172e-05, 9.79860000000013e-05, 9.791599999999998e-05, 9.820899999999841e-05, 9.793099999999902e-05, 9.76669999999992e-05, 9.777799999999975e-05, 9.822300000000145e-05, 9.76799999999993e-05, 9.79020000000004e-05, 9.763800000000059e-05, 9.801400000000043e-05, 9.776400000000018e-05, 9.78470000000016e-05, 9.783299999999856e-05, 9.823599999999807e-05, 9.798599999999782e-05, 9.809699999999838e-05, 9.791699999999945e-05, 9.809699999999838e-05, 9.815300000000013e-05, 9.820900000000188e-05, 9.818099999999927e-05, 9.813900000000056e-05, 9.811200000000089e-05, 9.800000000000086e-05, 9.811100000000142e-05, 9.800000000000086e-05, 9.792999999999955e-05, 9.781899999999899e-05, 9.76799999999993e-05, 9.76530000000031e-05, 9.81799999999998e-05, 9.8028e-05, 9.783300000000203e-05, 9.808300000000228e-05, 9.808400000000175e-05, 9.819499999999884e-05, 9.781999999999846e-05, 9.806999999999871e-05, 9.783399999999803e-05, 9.795799999999869e-05, 9.784699999999813e-05, 9.766599999999973e-05]</msg>
<status status="PASS" starttime="20201030 15:52:47.900" endtime="20201030 15:52:47.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.895" endtime="20201030 15:52:47.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:47.907" endtime="20201030 15:52:47.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.905" endtime="20201030 15:52:47.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.904" endtime="20201030 15:52:47.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.541" endtime="20201030 15:52:47.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.541" endtime="20201030 15:52:47.928"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.937" endtime="20201030 15:52:47.956"></status>
</kw>
<msg timestamp="20201030 15:52:47.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.935" endtime="20201030 15:52:47.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.958" endtime="20201030 15:52:47.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.960" endtime="20201030 15:52:47.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.933" endtime="20201030 15:52:47.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.930" endtime="20201030 15:52:47.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.970" endtime="20201030 15:52:48.259"></status>
</kw>
<msg timestamp="20201030 15:52:48.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022596583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.968" endtime="20201030 15:52:48.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022596583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.264" endtime="20201030 15:52:48.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.272" endtime="20201030 15:52:48.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.966" endtime="20201030 15:52:48.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.964" endtime="20201030 15:52:48.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:48.279" level="INFO">${RESULT} = [{'diff': 9.93060000000004e-05}, {'diff': 9.944400000000062e-05}, {'diff': 9.88059999999999e-05}, {'diff': 9.888900000000131e-05}, {'diff': 9.88059999999999e-05}, {'diff': 9.876300000000171e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:52:48.275" endtime="20201030 15:52:48.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:48.283" level="INFO">${ACCURACY} = {'diff': [9.93060000000004e-05, 9.944400000000062e-05, 9.88059999999999e-05, 9.888900000000131e-05, 9.88059999999999e-05, 9.876300000000171e-05, 9.88059999999999e-05, 9.911099999999895e-05, 9.91949999...</msg>
<status status="PASS" starttime="20201030 15:52:48.280" endtime="20201030 15:52:48.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.288" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 15:52:48.287" endtime="20201030 15:52:48.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.290" level="INFO">VALUE: [9.93060000000004e-05, 9.944400000000062e-05, 9.88059999999999e-05, 9.888900000000131e-05, 9.88059999999999e-05, 9.876300000000171e-05, 9.88059999999999e-05, 9.911099999999895e-05, 9.919499999999984e-05, 9.86800000000003e-05, 9.88059999999999e-05, 9.8721999999999e-05, 9.859699999999888e-05, 9.909699999999938e-05, 9.893000000000055e-05, 9.911100000000242e-05, 9.912499999999852e-05, 9.915300000000113e-05, 9.9028000000001e-05, 9.884699999999913e-05, 9.920799999999994e-05, 9.915200000000166e-05, 9.897199999999926e-05, 9.902700000000153e-05, 9.916699999999723e-05, 9.88479999999986e-05, 9.909799999999885e-05, 9.911100000000242e-05, 9.897200000000272e-05, 9.901400000000143e-05, 9.920799999999994e-05, 9.916600000000123e-05, 9.8721999999999e-05, 9.923600000000254e-05, 9.883299999999956e-05, 9.909699999999938e-05, 9.912499999999852e-05, 9.912500000000199e-05, 9.868099999999977e-05, 9.909699999999938e-05, 9.911199999999842e-05, 9.883399999999903e-05, 9.89999999999984e-05, 9.908299999999981e-05, 9.915199999999819e-05, 9.908299999999981e-05, 9.909699999999938e-05, 9.904200000000057e-05, 9.911100000000242e-05, 9.884699999999913e-05]</msg>
<status status="PASS" starttime="20201030 15:52:48.289" endtime="20201030 15:52:48.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.284" endtime="20201030 15:52:48.292"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:48.296" endtime="20201030 15:52:48.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.294" endtime="20201030 15:52:48.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.293" endtime="20201030 15:52:48.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.929" endtime="20201030 15:52:48.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.928" endtime="20201030 15:52:48.317"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.326" endtime="20201030 15:52:48.346"></status>
</kw>
<msg timestamp="20201030 15:52:48.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.324" endtime="20201030 15:52:48.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.347" endtime="20201030 15:52:48.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.350" endtime="20201030 15:52:48.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.321" endtime="20201030 15:52:48.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.319" endtime="20201030 15:52:48.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.359" endtime="20201030 15:52:48.646"></status>
</kw>
<msg timestamp="20201030 15:52:48.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0230855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023186069, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:48.358" endtime="20201030 15:52:48.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0230855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023186069, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:48.651" endtime="20201030 15:52:48.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.659" endtime="20201030 15:52:48.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.355" endtime="20201030 15:52:48.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.353" endtime="20201030 15:52:48.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:48.666" level="INFO">${RESULT} = [{'diff': 0.00010056900000000174}, {'diff': 0.00010045799999999772}, {'diff': 0.00010016600000000223}, {'diff': 0.00010006899999999777}, {'diff': 9.990300000000188e-05}, {'diff': 9.970800000000044e-05...</msg>
<status status="PASS" starttime="20201030 15:52:48.663" endtime="20201030 15:52:48.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:48.670" level="INFO">${ACCURACY} = {'diff': [0.00010056900000000174, 0.00010045799999999772, 0.00010016600000000223, 0.00010006899999999777, 9.990300000000188e-05, 9.970800000000044e-05, 0.00010026399999999921, 0.00010002799999999853, ...</msg>
<status status="PASS" starttime="20201030 15:52:48.667" endtime="20201030 15:52:48.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.675" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 15:52:48.674" endtime="20201030 15:52:48.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.678" level="INFO">VALUE: [0.00010056900000000174, 0.00010045799999999772, 0.00010016600000000223, 0.00010006899999999777, 9.990300000000188e-05, 9.970800000000044e-05, 0.00010026399999999921, 0.00010002799999999853, 9.991700000000145e-05, 9.99999999999994e-05, 0.00010007000000000071, 0.00010002799999999853, 9.99999999999994e-05, 0.00010022299999999998, 0.00010004200000000157, 9.979199999999785e-05, 9.997200000000026e-05, 0.00010006899999999777, 9.96800000000013e-05, 9.977699999999881e-05, 0.00010026399999999921, 9.961099999999945e-05, 9.993099999999755e-05, 9.980599999999742e-05, 9.963900000000206e-05, 9.986100000000317e-05, 0.00010018100000000127, 0.00010016699999999823, 0.00010012499999999952, 9.974999999999914e-05, 9.973699999999905e-05, 0.00010000000000000286, 9.974999999999914e-05, 0.00010001400000000243, 0.00010008400000000028, 9.987500000000274e-05, 0.00010005500000000167, 0.0001001800000000018, 0.00010006900000000124, 9.993100000000102e-05, 9.994400000000112e-05, 9.997200000000026e-05, 9.988899999999884e-05, 9.98479999999996e-05, 9.98060000000009e-05, 9.979200000000132e-05, 9.979199999999785e-05, 0.00010001300000000296, 9.99159999999985e-05, 0.00010011099999999995]</msg>
<status status="PASS" starttime="20201030 15:52:48.676" endtime="20201030 15:52:48.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.671" endtime="20201030 15:52:48.680"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:48.684" endtime="20201030 15:52:48.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.682" endtime="20201030 15:52:48.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.681" endtime="20201030 15:52:48.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.318" endtime="20201030 15:52:48.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.317" endtime="20201030 15:52:48.705"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.714" endtime="20201030 15:52:48.733"></status>
</kw>
<msg timestamp="20201030 15:52:48.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.712" endtime="20201030 15:52:48.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.735" endtime="20201030 15:52:48.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.738" endtime="20201030 15:52:48.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.710" endtime="20201030 15:52:48.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.707" endtime="20201030 15:52:48.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.748" endtime="20201030 15:52:49.035"></status>
</kw>
<msg timestamp="20201030 15:52:49.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022579278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022680264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.747" endtime="20201030 15:52:49.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022579278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022680264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.039" endtime="20201030 15:52:49.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.047" endtime="20201030 15:52:49.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.744" endtime="20201030 15:52:49.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.742" endtime="20201030 15:52:49.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:49.054" level="INFO">${RESULT} = [{'diff': 0.00010098599999999736}, {'diff': 0.00010131899999999902}, {'diff': 0.00010105600000000214}, {'diff': 0.00010068100000000177}, {'diff': 0.0001010419999999991}, {'diff': 0.0001011669999999992...</msg>
<status status="PASS" starttime="20201030 15:52:49.051" endtime="20201030 15:52:49.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:49.059" level="INFO">${ACCURACY} = {'diff': [0.00010098599999999736, 0.00010131899999999902, 0.00010105600000000214, 0.00010068100000000177, 0.0001010419999999991, 0.00010116699999999923, 0.00010098599999999736, 0.00010069500000000134,...</msg>
<status status="PASS" starttime="20201030 15:52:49.055" endtime="20201030 15:52:49.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.064" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 15:52:49.063" endtime="20201030 15:52:49.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.067" level="INFO">VALUE: [0.00010098599999999736, 0.00010131899999999902, 0.00010105600000000214, 0.00010068100000000177, 0.0001010419999999991, 0.00010116699999999923, 0.00010098599999999736, 0.00010069500000000134, 0.00010119500000000184, 0.00010066599999999926, 0.0001012359999999976, 0.0001010419999999991, 0.00010075000000000014, 0.00010101399999999996, 0.00010115299999999966, 0.00010116699999999923, 0.00010113900000000009, 0.00010070800000000144, 0.00010088899999999984, 0.000100722000000001, 0.00010109699999999791, 0.00010083400000000103, 0.00010108299999999834, 0.0001008610000000007, 0.00010101399999999996, 0.00010083300000000156, 0.00010115200000000019, 0.00010097200000000126, 0.00010067999999999883, 0.00010122199999999804, 0.00010118100000000227, 0.00010106900000000224, 0.00010098600000000083, 0.00010115299999999966, 0.00010111099999999748, 0.0001006670000000022, 0.00010087500000000027, 0.0001010000000000004, 0.0001008480000000006, 0.00010097200000000126, 0.00010116699999999923, 0.00010073600000000058, 0.0001010549999999992, 0.00010081899999999852, 0.000100722000000001, 0.0001010000000000004, 0.00010070800000000144, 0.0001012359999999976, 0.00010070900000000091, 0.00010075000000000014]</msg>
<status status="PASS" starttime="20201030 15:52:49.065" endtime="20201030 15:52:49.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.060" endtime="20201030 15:52:49.068"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:49.072" endtime="20201030 15:52:49.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.070" endtime="20201030 15:52:49.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.069" endtime="20201030 15:52:49.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.706" endtime="20201030 15:52:49.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.705" endtime="20201030 15:52:49.093"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.102" endtime="20201030 15:52:49.121"></status>
</kw>
<msg timestamp="20201030 15:52:49.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.100" endtime="20201030 15:52:49.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.122" endtime="20201030 15:52:49.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.125" endtime="20201030 15:52:49.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.097" endtime="20201030 15:52:49.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.095" endtime="20201030 15:52:49.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.135" endtime="20201030 15:52:49.422"></status>
</kw>
<msg timestamp="20201030 15:52:49.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022548444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.133" endtime="20201030 15:52:49.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022548444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.426" endtime="20201030 15:52:49.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.434" endtime="20201030 15:52:49.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.130" endtime="20201030 15:52:49.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.128" endtime="20201030 15:52:49.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:49.441" level="INFO">${RESULT} = [{'diff': 0.00010259699999999941}, {'diff': 0.00010227700000000131}, {'diff': 0.00010223600000000208}, {'diff': 0.0001021809999999998}, {'diff': 0.00010219400000000337}, {'diff': 0.0001016799999999998...</msg>
<status status="PASS" starttime="20201030 15:52:49.438" endtime="20201030 15:52:49.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:49.445" level="INFO">${ACCURACY} = {'diff': [0.00010259699999999941, 0.00010227700000000131, 0.00010223600000000208, 0.0001021809999999998, 0.00010219400000000337, 0.00010167999999999983, 0.00010218000000000033, 0.00010166699999999973,...</msg>
<status status="PASS" starttime="20201030 15:52:49.442" endtime="20201030 15:52:49.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.450" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 15:52:49.449" endtime="20201030 15:52:49.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.453" level="INFO">VALUE: [0.00010259699999999941, 0.00010227700000000131, 0.00010223600000000208, 0.0001021809999999998, 0.00010219400000000337, 0.00010167999999999983, 0.00010218000000000033, 0.00010166699999999973, 0.00010213900000000109, 0.00010193099999999955, 0.00010216700000000023, 0.00010169499999999887, 0.00010163900000000059, 0.00010195900000000216, 0.00010194500000000259, 0.00010168100000000277, 0.00010213799999999815, 0.0001020550000000002, 0.00010195800000000269, 0.00010204100000000063, 0.0001016939999999994, 0.00010202800000000053, 0.00010177800000000028, 0.00010177699999999734, 0.00010222199999999904, 0.00010165300000000016, 0.00010222199999999904, 0.0001021939999999999, 0.00010188900000000084, 0.00010177800000000028, 0.00010201300000000149, 0.00010190199999999747, 0.00010170799999999897, 0.00010198599999999836, 0.00010184699999999866, 0.00010204100000000063, 0.0001016939999999994, 0.00010209699999999891, 0.0001018610000000017, 0.00010208299999999934, 0.0001016809999999993, 0.00010166699999999973, 0.00010213900000000109, 0.00010168100000000277, 0.00010182000000000246, 0.00010183399999999856, 0.00010170799999999897, 0.00010183299999999909, 0.0001018749999999978, 0.0001016939999999994]</msg>
<status status="PASS" starttime="20201030 15:52:49.451" endtime="20201030 15:52:49.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.446" endtime="20201030 15:52:49.454"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:49.458" endtime="20201030 15:52:49.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.456" endtime="20201030 15:52:49.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.455" endtime="20201030 15:52:49.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.094" endtime="20201030 15:52:49.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.093" endtime="20201030 15:52:49.479"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.488" endtime="20201030 15:52:49.508"></status>
</kw>
<msg timestamp="20201030 15:52:49.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.486" endtime="20201030 15:52:49.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.510" endtime="20201030 15:52:49.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.512" endtime="20201030 15:52:49.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.483" endtime="20201030 15:52:49.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.481" endtime="20201030 15:52:49.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.522" endtime="20201030 15:52:49.809"></status>
</kw>
<msg timestamp="20201030 15:52:49.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023903944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024007556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.520" endtime="20201030 15:52:49.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023903944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024007556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.813" endtime="20201030 15:52:49.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.822" endtime="20201030 15:52:49.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.518" endtime="20201030 15:52:49.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.516" endtime="20201030 15:52:49.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:49.828" level="INFO">${RESULT} = [{'diff': 0.00010361199999999945}, {'diff': 0.00010294500000000012}, {'diff': 0.0001026810000000003}, {'diff': 0.00010309699999999991}, {'diff': 0.00010291700000000098}, {'diff': 0.0001028330000000000...</msg>
<status status="PASS" starttime="20201030 15:52:49.825" endtime="20201030 15:52:49.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:49.832" level="INFO">${ACCURACY} = {'diff': [0.00010361199999999945, 0.00010294500000000012, 0.0001026810000000003, 0.00010309699999999991, 0.00010291700000000098, 0.00010283300000000009, 0.00010290300000000141, 0.00010295800000000022,...</msg>
<status status="PASS" starttime="20201030 15:52:49.829" endtime="20201030 15:52:49.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.837" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 15:52:49.836" endtime="20201030 15:52:49.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.840" level="INFO">VALUE: [0.00010361199999999945, 0.00010294500000000012, 0.0001026810000000003, 0.00010309699999999991, 0.00010291700000000098, 0.00010283300000000009, 0.00010290300000000141, 0.00010295800000000022, 0.00010295800000000022, 0.0001030420000000011, 0.00010280600000000042, 0.00010291700000000098, 0.00010280600000000042, 0.00010313899999999862, 0.00010312499999999905, 0.00010283400000000303, 0.00010317999999999786, 0.00010291700000000098, 0.00010286099999999923, 0.00010276299999999877, 0.00010302799999999807, 0.00010277799999999782, 0.00010279200000000085, 0.0001030000000000024, 0.00010311099999999948, 0.00010281900000000052, 0.00010316699999999776, 0.00010297199999999979, 0.0001031810000000008, 0.0001027359999999991, 0.00010274999999999868, 0.00010306900000000077, 0.00010315299999999819, 0.00010290199999999847, 0.00010265200000000169, 0.00010279099999999791, 0.00010283300000000009, 0.00010309699999999991, 0.00010317999999999786, 0.00010277800000000128, 0.00010295800000000022, 0.00010263899999999812, 0.00010311099999999948, 0.000102722000000003, 0.00010319500000000037, 0.00010293100000000055, 0.00010297299999999926, 0.00010322200000000004, 0.00010308399999999981, 0.0001026940000000004]</msg>
<status status="PASS" starttime="20201030 15:52:49.838" endtime="20201030 15:52:49.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.833" endtime="20201030 15:52:49.842"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:49.846" endtime="20201030 15:52:49.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.844" endtime="20201030 15:52:49.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.843" endtime="20201030 15:52:49.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.480" endtime="20201030 15:52:49.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.479" endtime="20201030 15:52:49.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.922" endtime="20201030 15:52:49.867"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 15:52:10.820" endtime="20201030 15:52:49.868" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:49.875" endtime="20201030 15:52:49.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.873" endtime="20201030 15:52:49.895"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.908" endtime="20201030 15:52:49.922"></status>
</kw>
<msg timestamp="20201030 15:52:49.923" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.907" endtime="20201030 15:52:49.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.926" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.924" endtime="20201030 15:52:49.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.929" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:49.927" endtime="20201030 15:52:49.929"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:49.904" endtime="20201030 15:52:49.930"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:49.902" endtime="20201030 15:52:49.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.900" endtime="20201030 15:52:49.931"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:49.935" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:49.934" endtime="20201030 15:52:49.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.932" endtime="20201030 15:52:49.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.899" endtime="20201030 15:52:49.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.899" endtime="20201030 15:52:49.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.936" endtime="20201030 15:52:49.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.897" endtime="20201030 15:52:49.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.895" endtime="20201030 15:52:49.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.872" endtime="20201030 15:52:49.939"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.951" endtime="20201030 15:52:49.965"></status>
</kw>
<msg timestamp="20201030 15:52:49.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.949" endtime="20201030 15:52:49.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.967" endtime="20201030 15:52:49.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.970" endtime="20201030 15:52:49.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.945" endtime="20201030 15:52:49.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.943" endtime="20201030 15:52:49.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.980" endtime="20201030 15:52:50.266"></status>
</kw>
<msg timestamp="20201030 15:52:50.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068491431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068496403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.978" endtime="20201030 15:52:50.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068491431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068496403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.270" endtime="20201030 15:52:50.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.278" endtime="20201030 15:52:50.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.975" endtime="20201030 15:52:50.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.973" endtime="20201030 15:52:50.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:50.285" level="INFO">${RESULT} = [{'diff': 4.971999999991983e-06}, {'diff': 3.79200000000246e-06}, {'diff': 3.0410000000091753e-06}, {'diff': 3.02800000000214e-06}, {'diff': 3.041999999994771e-06}, {'diff': 4.139000000000226e-06}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:50.282" endtime="20201030 15:52:50.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:50.290" level="INFO">${ACCURACY} = {'diff': [4.971999999991983e-06, 3.79200000000246e-06, 3.0410000000091753e-06, 3.02800000000214e-06, 3.041999999994771e-06, 4.139000000000226e-06, 3.4859999999969915e-06, 3.042000000008649e-06, 3.5550...</msg>
<status status="PASS" starttime="20201030 15:52:50.286" endtime="20201030 15:52:50.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.295" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 15:52:50.294" endtime="20201030 15:52:50.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.298" level="INFO">VALUE: [4.971999999991983e-06, 3.79200000000246e-06, 3.0410000000091753e-06, 3.02800000000214e-06, 3.041999999994771e-06, 4.139000000000226e-06, 3.4859999999969915e-06, 3.042000000008649e-06, 3.5550000000023063e-06, 3.55600000000178e-06, 3.583000000001446e-06, 3.5700000000082888e-06, 3.5700000000082888e-06, 3.5700000000082888e-06, 3.0279999999882623e-06, 4.151999999993383e-06, 3.473000000003834e-06, 3.487000000010343e-06, 3.4720000000043605e-06, 3.4859999999969915e-06, 3.79200000000246e-06, 3.487000000010343e-06, 3.0409999999952975e-06, 3.569000000008815e-06, 3.55600000000178e-06, 3.583000000001446e-06, 3.5689999999949373e-06, 3.569000000008815e-06, 3.0269999999887887e-06, 3.569999999994411e-06, 3.569999999994411e-06, 3.569000000008815e-06, 3.55600000000178e-06, 3.5550000000023063e-06, 3.569000000008815e-06, 3.0129999999961576e-06, 3.0270000000026664e-06, 3.5840000000009198e-06, 3.569000000008815e-06, 3.5829999999875684e-06, 3.5700000000082888e-06, 3.5840000000009198e-06, 3.569000000008815e-06, 3.569999999994411e-06, 3.583000000001446e-06, 3.5689999999949373e-06, 3.0409999999952975e-06, 3.5700000000082888e-06, 4.139000000000226e-06, 3.0410000000091753e-06]</msg>
<status status="PASS" starttime="20201030 15:52:50.296" endtime="20201030 15:52:50.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.291" endtime="20201030 15:52:50.299"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:50.303" endtime="20201030 15:52:50.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.301" endtime="20201030 15:52:50.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.300" endtime="20201030 15:52:50.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.941" endtime="20201030 15:52:50.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.940" endtime="20201030 15:52:50.324"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.333" endtime="20201030 15:52:50.347"></status>
</kw>
<msg timestamp="20201030 15:52:50.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.331" endtime="20201030 15:52:50.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.349" endtime="20201030 15:52:50.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.351" endtime="20201030 15:52:50.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.328" endtime="20201030 15:52:50.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.326" endtime="20201030 15:52:50.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.361" endtime="20201030 15:52:50.643"></status>
</kw>
<msg timestamp="20201030 15:52:50.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022857958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02286325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:50.359" endtime="20201030 15:52:50.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022857958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02286325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:50.648" endtime="20201030 15:52:50.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.656" endtime="20201030 15:52:50.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.357" endtime="20201030 15:52:50.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.355" endtime="20201030 15:52:50.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:50.663" level="INFO">${RESULT} = [{'diff': 5.292000000000491e-06}, {'diff': 4.9999999999980616e-06}, {'diff': 4.08399999999795e-06}, {'diff': 4.652999999996826e-06}, {'diff': 4.679999999999962e-06}, {'diff': 4.679999999999962e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:50.660" endtime="20201030 15:52:50.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:50.669" level="INFO">${ACCURACY} = {'diff': [5.292000000000491e-06, 4.9999999999980616e-06, 4.08399999999795e-06, 4.652999999996826e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.139000000000226e-06, 4.7089999999985754e-06, 4.709...</msg>
<status status="PASS" starttime="20201030 15:52:50.664" endtime="20201030 15:52:50.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.674" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 15:52:50.672" endtime="20201030 15:52:50.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.676" level="INFO">VALUE: [5.292000000000491e-06, 4.9999999999980616e-06, 4.08399999999795e-06, 4.652999999996826e-06, 4.679999999999962e-06, 4.679999999999962e-06, 4.139000000000226e-06, 4.7089999999985754e-06, 4.709000000002045e-06, 4.041999999999241e-06, 4.694000000003001e-06, 4.693999999999532e-06, 4.096999999998047e-06, 4.6949999999990055e-06, 4.653000000000296e-06, 4.443999999999282e-06, 4.6949999999990055e-06, 4.1109999999976166e-06, 4.679999999999962e-06, 4.709000000002045e-06, 4.09800000000099e-06, 5.0139999999976315e-06, 4.443999999999282e-06, 4.388000000001002e-06, 4.653000000000296e-06, 4.6949999999990055e-06, 4.403000000000046e-06, 4.7089999999985754e-06, 4.7089999999985754e-06, 4.9999999999980616e-06, 4.721999999998672e-06, 4.693999999999532e-06, 4.375000000000906e-06, 5.000000000001531e-06, 4.375000000000906e-06, 4.389000000000476e-06, 4.416000000000142e-06, 4.707999999999102e-06, 4.097000000001516e-06, 4.693999999999532e-06, 4.403000000000046e-06, 4.707999999999102e-06, 4.707999999999102e-06, 4.7089999999985754e-06, 4.403000000000046e-06, 4.416999999999616e-06, 4.389000000000476e-06, 4.707999999999102e-06, 4.416999999999616e-06, 4.707999999999102e-06]</msg>
<status status="PASS" starttime="20201030 15:52:50.675" endtime="20201030 15:52:50.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.670" endtime="20201030 15:52:50.677"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:50.681" endtime="20201030 15:52:50.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.679" endtime="20201030 15:52:50.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.678" endtime="20201030 15:52:50.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.325" endtime="20201030 15:52:50.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.324" endtime="20201030 15:52:50.702"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.711" endtime="20201030 15:52:50.726"></status>
</kw>
<msg timestamp="20201030 15:52:50.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.710" endtime="20201030 15:52:50.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.727" endtime="20201030 15:52:50.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.730" endtime="20201030 15:52:50.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.707" endtime="20201030 15:52:50.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.704" endtime="20201030 15:52:50.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.739" endtime="20201030 15:52:51.029"></status>
</kw>
<msg timestamp="20201030 15:52:51.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023044417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023051556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.738" endtime="20201030 15:52:51.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023044417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023051556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.033" endtime="20201030 15:52:51.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.042" endtime="20201030 15:52:51.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.735" endtime="20201030 15:52:51.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.733" endtime="20201030 15:52:51.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:51.049" level="INFO">${RESULT} = [{'diff': 7.138999999999757e-06}, {'diff': 5.639000000001726e-06}, {'diff': 5.306000000000061e-06}, {'diff': 5.624999999998687e-06}, {'diff': 5.903000000001546e-06}, {'diff': 5.0139999999976315e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:51.046" endtime="20201030 15:52:51.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:51.053" level="INFO">${ACCURACY} = {'diff': [7.138999999999757e-06, 5.639000000001726e-06, 5.306000000000061e-06, 5.624999999998687e-06, 5.903000000001546e-06, 5.0139999999976315e-06, 5.945000000000256e-06, 5.569000000000407e-06, 5.319...</msg>
<status status="PASS" starttime="20201030 15:52:51.050" endtime="20201030 15:52:51.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.058" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 15:52:51.057" endtime="20201030 15:52:51.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.061" level="INFO">VALUE: [7.138999999999757e-06, 5.639000000001726e-06, 5.306000000000061e-06, 5.624999999998687e-06, 5.903000000001546e-06, 5.0139999999976315e-06, 5.945000000000256e-06, 5.569000000000407e-06, 5.319000000000157e-06, 5.639000000001726e-06, 5.610999999999117e-06, 5.610999999999117e-06, 5.931000000000686e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.319000000000157e-06, 5.306000000000061e-06, 5.624999999998687e-06, 5.931000000000686e-06, 5.319999999999631e-06, 5.319999999999631e-06, 5.332999999999727e-06, 5.569999999999881e-06, 5.306000000000061e-06, 5.624999999998687e-06, 5.306000000000061e-06, 5.596999999999547e-06, 5.917000000001116e-06, 5.6389999999982565e-06, 5.305000000000587e-06, 5.6389999999982565e-06, 5.681000000000436e-06, 5.610999999999117e-06, 5.319999999999631e-06, 4.985999999998492e-06, 5.333000000003196e-06, 5.931000000000686e-06, 5.3339999999992005e-06, 5.596999999999547e-06, 5.61199999999859e-06, 5.639000000001726e-06, 5.3339999999992005e-06, 5.306000000000061e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.306000000000061e-06, 5.971999999999922e-06, 5.305000000000587e-06, 5.332999999999727e-06, 5.610999999999117e-06]</msg>
<status status="PASS" starttime="20201030 15:52:51.059" endtime="20201030 15:52:51.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.054" endtime="20201030 15:52:51.062"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:51.066" endtime="20201030 15:52:51.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.064" endtime="20201030 15:52:51.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.063" endtime="20201030 15:52:51.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.703" endtime="20201030 15:52:51.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.702" endtime="20201030 15:52:51.087"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.097" endtime="20201030 15:52:51.111"></status>
</kw>
<msg timestamp="20201030 15:52:51.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.094" endtime="20201030 15:52:51.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.113" endtime="20201030 15:52:51.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.115" endtime="20201030 15:52:51.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.092" endtime="20201030 15:52:51.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.089" endtime="20201030 15:52:51.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.125" endtime="20201030 15:52:51.412"></status>
</kw>
<msg timestamp="20201030 15:52:51.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023870972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023878069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.123" endtime="20201030 15:52:51.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023870972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023878069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.417" endtime="20201030 15:52:51.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.425" endtime="20201030 15:52:51.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.121" endtime="20201030 15:52:51.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.119" endtime="20201030 15:52:51.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:51.432" level="INFO">${RESULT} = [{'diff': 7.0969999999975775e-06}, {'diff': 6.819000000001657e-06}, {'diff': 6.526999999999228e-06}, {'diff': 6.541999999998271e-06}, {'diff': 6.222000000000172e-06}, {'diff': 6.1939999999975626e-06},...</msg>
<status status="PASS" starttime="20201030 15:52:51.429" endtime="20201030 15:52:51.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:51.436" level="INFO">${ACCURACY} = {'diff': [7.0969999999975775e-06, 6.819000000001657e-06, 6.526999999999228e-06, 6.541999999998271e-06, 6.222000000000172e-06, 6.1939999999975626e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.5...</msg>
<status status="PASS" starttime="20201030 15:52:51.433" endtime="20201030 15:52:51.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.442" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 15:52:51.440" endtime="20201030 15:52:51.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.448" level="INFO">VALUE: [7.0969999999975775e-06, 6.819000000001657e-06, 6.526999999999228e-06, 6.541999999998271e-06, 6.222000000000172e-06, 6.1939999999975626e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.556000000001311e-06, 6.874999999999937e-06, 6.541999999998271e-06, 6.541999999998271e-06, 6.804999999998618e-06, 6.222000000000172e-06, 6.556000000001311e-06, 6.208000000000602e-06, 6.541999999998271e-06, 6.847000000000797e-06, 6.222000000000172e-06, 6.541999999998271e-06, 6.514000000002601e-06, 6.540999999998798e-06, 6.847000000000797e-06, 6.235999999999742e-06, 6.540999999998798e-06, 6.8469999999973274e-06, 6.611000000000117e-06, 6.541999999998271e-06, 6.235999999999742e-06, 6.763999999999382e-06, 6.542000000001741e-06, 6.541999999998271e-06, 6.527000000002697e-06, 6.583000000000977e-06, 6.221999999996702e-06, 6.555000000001837e-06, 6.542000000001741e-06, 6.542000000001741e-06, 6.555000000001837e-06, 6.222000000000172e-06, 6.8469999999973274e-06, 6.235999999999742e-06, 6.8469999999973274e-06, 6.542000000001741e-06, 6.526999999999228e-06, 6.528000000002171e-06, 6.528000000002171e-06, 6.556000000001311e-06, 6.555000000001837e-06, 6.5279999999987015e-06]</msg>
<status status="PASS" starttime="20201030 15:52:51.446" endtime="20201030 15:52:51.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.437" endtime="20201030 15:52:51.463"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:51.471" endtime="20201030 15:52:51.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.466" endtime="20201030 15:52:51.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.464" endtime="20201030 15:52:51.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.088" endtime="20201030 15:52:51.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.087" endtime="20201030 15:52:51.492"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.501" endtime="20201030 15:52:51.515"></status>
</kw>
<msg timestamp="20201030 15:52:51.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.499" endtime="20201030 15:52:51.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.516" endtime="20201030 15:52:51.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.519" endtime="20201030 15:52:51.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.497" endtime="20201030 15:52:51.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.494" endtime="20201030 15:52:51.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.528" endtime="20201030 15:52:51.820"></status>
</kw>
<msg timestamp="20201030 15:52:51.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022249194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022257486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.527" endtime="20201030 15:52:51.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022249194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022257486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.825" endtime="20201030 15:52:51.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.833" endtime="20201030 15:52:51.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.524" endtime="20201030 15:52:51.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.522" endtime="20201030 15:52:51.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:51.840" level="INFO">${RESULT} = [{'diff': 8.292000000000022e-06}, {'diff': 7.125000000000187e-06}, {'diff': 7.458000000001852e-06}, {'diff': 7.444000000002282e-06}, {'diff': 7.457999999998383e-06}, {'diff': 7.151999999999853e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:51.836" endtime="20201030 15:52:51.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:51.845" level="INFO">${ACCURACY} = {'diff': [8.292000000000022e-06, 7.125000000000187e-06, 7.458000000001852e-06, 7.444000000002282e-06, 7.457999999998383e-06, 7.151999999999853e-06, 7.764000000000382e-06, 7.458999999997856e-06, 7.4450...</msg>
<status status="PASS" starttime="20201030 15:52:51.841" endtime="20201030 15:52:51.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.849" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 15:52:51.848" endtime="20201030 15:52:51.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.852" level="INFO">VALUE: [8.292000000000022e-06, 7.125000000000187e-06, 7.458000000001852e-06, 7.444000000002282e-06, 7.457999999998383e-06, 7.151999999999853e-06, 7.764000000000382e-06, 7.458999999997856e-06, 7.445000000001756e-06, 7.151999999999853e-06, 7.750000000000812e-06, 7.402000000000103e-06, 7.736000000001242e-06, 7.151999999999853e-06, 7.749999999997342e-06, 7.1529999999993266e-06, 7.736000000001242e-06, 7.457999999998383e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.459000000001326e-06, 7.500000000000562e-06, 7.763000000000908e-06, 7.764000000000382e-06, 7.458000000001852e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.736000000001242e-06, 7.459000000001326e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.472000000001422e-06, 7.443999999998813e-06, 7.444999999998286e-06, 7.777999999999952e-06, 7.459000000001326e-06, 7.444000000002282e-06, 7.429999999999243e-06, 7.165999999999423e-06, 7.764000000000382e-06, 7.236000000000742e-06, 7.457999999998383e-06, 7.486000000000992e-06, 7.445000000001756e-06, 7.485999999997522e-06, 7.4719999999979525e-06, 7.458999999997856e-06, 7.459000000001326e-06, 7.459000000001326e-06, 7.443999999998813e-06]</msg>
<status status="PASS" starttime="20201030 15:52:51.850" endtime="20201030 15:52:51.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.845" endtime="20201030 15:52:51.853"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:51.857" endtime="20201030 15:52:51.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.855" endtime="20201030 15:52:51.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.854" endtime="20201030 15:52:51.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.493" endtime="20201030 15:52:51.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.492" endtime="20201030 15:52:51.878"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.886" endtime="20201030 15:52:51.901"></status>
</kw>
<msg timestamp="20201030 15:52:51.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.885" endtime="20201030 15:52:51.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.903" endtime="20201030 15:52:51.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.905" endtime="20201030 15:52:51.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.882" endtime="20201030 15:52:51.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.880" endtime="20201030 15:52:51.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.914" endtime="20201030 15:52:52.205"></status>
</kw>
<msg timestamp="20201030 15:52:52.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022238361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.913" endtime="20201030 15:52:52.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022238361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.210" endtime="20201030 15:52:52.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.219" endtime="20201030 15:52:52.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.910" endtime="20201030 15:52:52.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.909" endtime="20201030 15:52:52.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:52.226" level="INFO">${RESULT} = [{'diff': 9.875000000002937e-06}, {'diff': 8.667000000000397e-06}, {'diff': 8.346999999998828e-06}, {'diff': 8.653000000000827e-06}, {'diff': 8.375000000001437e-06}, {'diff': 8.653000000000827e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:52.222" endtime="20201030 15:52:52.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:52.230" level="INFO">${ACCURACY} = {'diff': [9.875000000002937e-06, 8.667000000000397e-06, 8.346999999998828e-06, 8.653000000000827e-06, 8.375000000001437e-06, 8.653000000000827e-06, 8.374999999997967e-06, 8.36200000000134e-06, 8.69499...</msg>
<status status="PASS" starttime="20201030 15:52:52.227" endtime="20201030 15:52:52.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.234" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 15:52:52.233" endtime="20201030 15:52:52.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.237" level="INFO">VALUE: [9.875000000002937e-06, 8.667000000000397e-06, 8.346999999998828e-06, 8.653000000000827e-06, 8.375000000001437e-06, 8.653000000000827e-06, 8.374999999997967e-06, 8.36200000000134e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.361000000001867e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.375000000001437e-06, 8.680999999999967e-06, 8.389000000001007e-06, 8.361000000001867e-06, 8.375000000001437e-06, 8.388999999997537e-06, 8.333000000002727e-06, 8.679999999997023e-06, 8.430999999999716e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.374999999997967e-06, 8.680999999999967e-06, 8.056000000002811e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.388999999997537e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.985999999999023e-06, 8.374999999997967e-06, 8.667000000000397e-06, 9.000000000002062e-06, 8.360999999998397e-06, 8.735999999998773e-06, 8.374999999997967e-06, 8.041000000000298e-06, 8.695000000003006e-06, 8.068999999999438e-06, 8.680999999999967e-06, 8.375000000001437e-06, 8.375000000001437e-06, 8.667000000000397e-06, 8.069999999998911e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.667000000000397e-06]</msg>
<status status="PASS" starttime="20201030 15:52:52.235" endtime="20201030 15:52:52.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.231" endtime="20201030 15:52:52.238"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:52.242" endtime="20201030 15:52:52.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.240" endtime="20201030 15:52:52.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.239" endtime="20201030 15:52:52.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.878" endtime="20201030 15:52:52.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.878" endtime="20201030 15:52:52.262"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.271" endtime="20201030 15:52:52.287"></status>
</kw>
<msg timestamp="20201030 15:52:52.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.270" endtime="20201030 15:52:52.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.288" endtime="20201030 15:52:52.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.291" endtime="20201030 15:52:52.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.267" endtime="20201030 15:52:52.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.265" endtime="20201030 15:52:52.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.300" endtime="20201030 15:52:52.603"></status>
</kw>
<msg timestamp="20201030 15:52:52.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022863542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022874347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.298" endtime="20201030 15:52:52.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022863542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022874347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.608" endtime="20201030 15:52:52.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.616" endtime="20201030 15:52:52.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.296" endtime="20201030 15:52:52.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.294" endtime="20201030 15:52:52.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:52.623" level="INFO">${RESULT} = [{'diff': 1.0804999999999149e-05}, {'diff': 9.888999999999037e-06}, {'diff': 9.597000000000078e-06}, {'diff': 9.583999999999981e-06}, {'diff': 9.291000000001548e-06}, {'diff': 9.291999999997552e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:52.620" endtime="20201030 15:52:52.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:52.627" level="INFO">${ACCURACY} = {'diff': [1.0804999999999149e-05, 9.888999999999037e-06, 9.597000000000078e-06, 9.583999999999981e-06, 9.291000000001548e-06, 9.291999999997552e-06, 9.292000000001022e-06, 9.625000000002687e-06, 9.290...</msg>
<status status="PASS" starttime="20201030 15:52:52.624" endtime="20201030 15:52:52.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.631" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 15:52:52.630" endtime="20201030 15:52:52.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.634" level="INFO">VALUE: [1.0804999999999149e-05, 9.888999999999037e-06, 9.597000000000078e-06, 9.583999999999981e-06, 9.291000000001548e-06, 9.291999999997552e-06, 9.292000000001022e-06, 9.625000000002687e-06, 9.290999999998079e-06, 9.610999999999648e-06, 9.292000000001022e-06, 9.874999999999468e-06, 9.277000000001978e-06, 9.624999999999218e-06, 9.597000000000078e-06, 9.276999999998509e-06, 9.569000000000938e-06, 9.263999999998412e-06, 9.291999999997552e-06, 9.306000000000592e-06, 9.276999999998509e-06, 9.570000000000412e-06, 9.597000000000078e-06, 9.277999999997982e-06, 9.597000000000078e-06, 9.888999999999037e-06, 9.597000000000078e-06, 9.833000000000758e-06, 9.597000000000078e-06, 9.277999999997982e-06, 9.930999999997747e-06, 9.597000000000078e-06, 9.611999999999121e-06, 9.597999999999551e-06, 9.959000000000356e-06, 9.291000000001548e-06, 9.583999999999981e-06, 9.583000000000508e-06, 9.652999999998357e-06, 9.888999999999037e-06, 9.597000000000078e-06, 9.903000000002077e-06, 9.59800000000302e-06, 9.610999999999648e-06, 9.610999999999648e-06, 9.901999999999134e-06, 9.916999999998177e-06, 9.277000000001978e-06, 9.278000000001452e-06, 9.291999999997552e-06]</msg>
<status status="PASS" starttime="20201030 15:52:52.633" endtime="20201030 15:52:52.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.628" endtime="20201030 15:52:52.636"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:52.640" endtime="20201030 15:52:52.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.638" endtime="20201030 15:52:52.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.637" endtime="20201030 15:52:52.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.263" endtime="20201030 15:52:52.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.263" endtime="20201030 15:52:52.661"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.674" endtime="20201030 15:52:52.690"></status>
</kw>
<msg timestamp="20201030 15:52:52.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.672" endtime="20201030 15:52:52.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.691" endtime="20201030 15:52:52.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.694" endtime="20201030 15:52:52.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.668" endtime="20201030 15:52:52.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.665" endtime="20201030 15:52:52.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.703" endtime="20201030 15:52:52.990"></status>
</kw>
<msg timestamp="20201030 15:52:52.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027759736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027771111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.702" endtime="20201030 15:52:52.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027759736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027771111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.995" endtime="20201030 15:52:53.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.003" endtime="20201030 15:52:53.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.699" endtime="20201030 15:52:53.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.697" endtime="20201030 15:52:53.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:53.010" level="INFO">${RESULT} = [{'diff': 1.1375000000000968e-05}, {'diff': 1.0193999999998093e-05}, {'diff': 1.0805000000002618e-05}, {'diff': 1.0500000000000093e-05}, {'diff': 1.0833000000001758e-05}, {'diff': 1.0526999999999759e-...</msg>
<status status="PASS" starttime="20201030 15:52:53.006" endtime="20201030 15:52:53.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:53.015" level="INFO">${ACCURACY} = {'diff': [1.1375000000000968e-05, 1.0193999999998093e-05, 1.0805000000002618e-05, 1.0500000000000093e-05, 1.0833000000001758e-05, 1.0526999999999759e-05, 1.0804999999999149e-05, 1.0208000000001133e-05...</msg>
<status status="PASS" starttime="20201030 15:52:53.011" endtime="20201030 15:52:53.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.019" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 15:52:53.018" endtime="20201030 15:52:53.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.022" level="INFO">VALUE: [1.1375000000000968e-05, 1.0193999999998093e-05, 1.0805000000002618e-05, 1.0500000000000093e-05, 1.0833000000001758e-05, 1.0526999999999759e-05, 1.0804999999999149e-05, 1.0208000000001133e-05, 1.0818999999998719e-05, 1.0526999999999759e-05, 1.0485999999997053e-05, 1.0790999999999579e-05, 1.0195000000001037e-05, 1.0180000000001993e-05, 1.0526999999999759e-05, 1.0818999999998719e-05, 1.0513999999999663e-05, 1.0513999999999663e-05, 1.0806000000002092e-05, 1.0500000000000093e-05, 1.0179999999998524e-05, 1.0818999999998719e-05, 1.0193999999998093e-05, 1.0834000000001232e-05, 1.0195000000001037e-05, 1.0818999999998719e-05, 1.0819999999998192e-05, 1.0513999999999663e-05, 1.0166999999998427e-05, 1.0541999999998802e-05, 1.0528000000002702e-05, 1.0513999999999663e-05, 1.0542000000002272e-05, 1.0208000000001133e-05, 1.0804999999999149e-05, 1.0805999999998622e-05, 1.0527999999999232e-05, 1.0526999999999759e-05, 1.0513000000000189e-05, 1.051299999999672e-05, 1.0514000000003132e-05, 9.820000000000662e-06, 1.0236000000000273e-05, 1.0181000000001467e-05, 1.0805999999998622e-05, 1.0514000000003132e-05, 1.0486000000000523e-05, 1.0486000000000523e-05, 1.0486000000000523e-05, 1.0458000000001383e-05]</msg>
<status status="PASS" starttime="20201030 15:52:53.020" endtime="20201030 15:52:53.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.016" endtime="20201030 15:52:53.023"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:53.027" endtime="20201030 15:52:53.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.025" endtime="20201030 15:52:53.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.024" endtime="20201030 15:52:53.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.663" endtime="20201030 15:52:53.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.662" endtime="20201030 15:52:53.047"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.056" endtime="20201030 15:52:53.071"></status>
</kw>
<msg timestamp="20201030 15:52:53.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.055" endtime="20201030 15:52:53.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.073" endtime="20201030 15:52:53.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.075" endtime="20201030 15:52:53.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.052" endtime="20201030 15:52:53.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.050" endtime="20201030 15:52:53.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.085" endtime="20201030 15:52:53.373"></status>
</kw>
<msg timestamp="20201030 15:52:53.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022073014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022085042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.083" endtime="20201030 15:52:53.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022073014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022085042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.377" endtime="20201030 15:52:53.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.385" endtime="20201030 15:52:53.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.080" endtime="20201030 15:52:53.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.079" endtime="20201030 15:52:53.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:53.392" level="INFO">${RESULT} = [{'diff': 1.2028000000000733e-05}, {'diff': 1.1403000000000107e-05}, {'diff': 1.1707999999999164e-05}, {'diff': 1.1430999999999247e-05}, {'diff': 1.1707999999999164e-05}, {'diff': 1.1723000000001677e-...</msg>
<status status="PASS" starttime="20201030 15:52:53.389" endtime="20201030 15:52:53.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:53.396" level="INFO">${ACCURACY} = {'diff': [1.2028000000000733e-05, 1.1403000000000107e-05, 1.1707999999999164e-05, 1.1430999999999247e-05, 1.1707999999999164e-05, 1.1723000000001677e-05, 1.1721999999998733e-05, 1.1735999999998303e-05...</msg>
<status status="PASS" starttime="20201030 15:52:53.393" endtime="20201030 15:52:53.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.401" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 15:52:53.400" endtime="20201030 15:52:53.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.403" level="INFO">VALUE: [1.2028000000000733e-05, 1.1403000000000107e-05, 1.1707999999999164e-05, 1.1430999999999247e-05, 1.1707999999999164e-05, 1.1723000000001677e-05, 1.1721999999998733e-05, 1.1735999999998303e-05, 1.1110999999997678e-05, 1.1735999999998303e-05, 1.1737000000001246e-05, 1.1749999999997873e-05, 1.1416999999999677e-05, 1.1416999999999677e-05, 1.1430999999999247e-05, 1.1430999999999247e-05, 1.1138000000000814e-05, 1.2041999999996833e-05, 1.1125000000000718e-05, 1.1735999999998303e-05, 1.1165999999999954e-05, 1.1735999999998303e-05, 1.1431000000002717e-05, 1.1680999999999497e-05, 1.1403000000000107e-05, 1.1721999999998733e-05, 1.1416999999999677e-05, 1.2028000000000733e-05, 1.1417000000003147e-05, 1.1736000000001773e-05, 1.1737000000001246e-05, 1.1111000000001148e-05, 1.1737000000001246e-05, 1.1736000000001773e-05, 1.1680999999999497e-05, 1.1707999999999164e-05, 1.1388000000001064e-05, 1.1723000000001677e-05, 1.1722000000002203e-05, 1.1708999999998637e-05, 1.1416999999999677e-05, 1.1416999999999677e-05, 1.1735999999998303e-05, 1.1707999999999164e-05, 1.1430999999999247e-05, 1.1403000000000107e-05, 1.1666999999999927e-05, 1.1736000000001773e-05, 1.1723000000001677e-05, 1.1735999999998303e-05]</msg>
<status status="PASS" starttime="20201030 15:52:53.402" endtime="20201030 15:52:53.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.397" endtime="20201030 15:52:53.405"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:53.408" endtime="20201030 15:52:53.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.407" endtime="20201030 15:52:53.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.406" endtime="20201030 15:52:53.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.048" endtime="20201030 15:52:53.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.048" endtime="20201030 15:52:53.429"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.438" endtime="20201030 15:52:53.454"></status>
</kw>
<msg timestamp="20201030 15:52:53.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.436" endtime="20201030 15:52:53.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.455" endtime="20201030 15:52:53.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.458" endtime="20201030 15:52:53.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.434" endtime="20201030 15:52:53.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.432" endtime="20201030 15:52:53.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.467" endtime="20201030 15:52:53.754"></status>
</kw>
<msg timestamp="20201030 15:52:53.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023084931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023098181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.466" endtime="20201030 15:52:53.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023084931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023098181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.759" endtime="20201030 15:52:53.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.767" endtime="20201030 15:52:53.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.463" endtime="20201030 15:52:53.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.461" endtime="20201030 15:52:53.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:53.774" level="INFO">${RESULT} = [{'diff': 1.3249999999999373e-05}, {'diff': 1.2055000000000399e-05}, {'diff': 1.2346999999999358e-05}, {'diff': 1.2653000000001358e-05}, {'diff': 1.2945000000000317e-05}, {'diff': 1.2374999999998498e-...</msg>
<status status="PASS" starttime="20201030 15:52:53.770" endtime="20201030 15:52:53.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:53.778" level="INFO">${ACCURACY} = {'diff': [1.3249999999999373e-05, 1.2055000000000399e-05, 1.2346999999999358e-05, 1.2653000000001358e-05, 1.2945000000000317e-05, 1.2374999999998498e-05, 1.2583000000000039e-05, 1.2361000000002398e-05...</msg>
<status status="PASS" starttime="20201030 15:52:53.775" endtime="20201030 15:52:53.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.782" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 15:52:53.781" endtime="20201030 15:52:53.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.785" level="INFO">VALUE: [1.3249999999999373e-05, 1.2055000000000399e-05, 1.2346999999999358e-05, 1.2653000000001358e-05, 1.2945000000000317e-05, 1.2374999999998498e-05, 1.2583000000000039e-05, 1.2361000000002398e-05, 1.2652999999997888e-05, 1.2389000000001538e-05, 1.2332999999999789e-05, 1.2360999999998928e-05, 1.2346999999999358e-05, 1.2680000000001024e-05, 1.2652999999997888e-05, 1.2027999999997263e-05, 1.2638999999998318e-05, 1.2652000000001884e-05, 1.2346999999999358e-05, 1.2346999999999358e-05, 1.2652000000001884e-05, 1.2346999999999358e-05, 1.2653000000001358e-05, 1.2346999999999358e-05, 1.2333999999999262e-05, 1.2639000000001788e-05, 1.2361000000002398e-05, 1.2653000000001358e-05, 1.2652000000001884e-05, 1.2624999999998748e-05, 1.2346999999999358e-05, 1.2945000000000317e-05, 1.2972999999999457e-05, 1.2388999999998068e-05, 1.2347999999998832e-05, 1.2931000000000747e-05, 1.2347000000002828e-05, 1.2319999999999692e-05, 1.2346999999999358e-05, 1.2929999999997804e-05, 1.2653000000001358e-05, 1.2375000000001968e-05, 1.2652999999997888e-05, 1.2638999999998318e-05, 1.2653000000001358e-05, 1.2346999999999358e-05, 1.2958000000000414e-05, 1.2694000000000594e-05, 1.2346999999999358e-05, 1.2348000000002302e-05]</msg>
<status status="PASS" starttime="20201030 15:52:53.783" endtime="20201030 15:52:53.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.779" endtime="20201030 15:52:53.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:53.791" endtime="20201030 15:52:53.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.789" endtime="20201030 15:52:53.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.788" endtime="20201030 15:52:53.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.430" endtime="20201030 15:52:53.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.430" endtime="20201030 15:52:53.812"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.821" endtime="20201030 15:52:53.836"></status>
</kw>
<msg timestamp="20201030 15:52:53.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.820" endtime="20201030 15:52:53.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.837" endtime="20201030 15:52:53.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.840" endtime="20201030 15:52:53.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.817" endtime="20201030 15:52:53.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.814" endtime="20201030 15:52:53.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.849" endtime="20201030 15:52:54.136"></status>
</kw>
<msg timestamp="20201030 15:52:54.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022994625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023008792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.848" endtime="20201030 15:52:54.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022994625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023008792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.141" endtime="20201030 15:52:54.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.149" endtime="20201030 15:52:54.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.845" endtime="20201030 15:52:54.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.843" endtime="20201030 15:52:54.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:54.156" level="INFO">${RESULT} = [{'diff': 1.4166999999998958e-05}, {'diff': 1.3888999999999568e-05}, {'diff': 1.3513999999999193e-05}, {'diff': 1.3874999999999998e-05}, {'diff': 1.3263999999998943e-05}, {'diff': 1.3848000000000332e-...</msg>
<status status="PASS" starttime="20201030 15:52:54.153" endtime="20201030 15:52:54.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:54.161" level="INFO">${ACCURACY} = {'diff': [1.4166999999998958e-05, 1.3888999999999568e-05, 1.3513999999999193e-05, 1.3874999999999998e-05, 1.3263999999998943e-05, 1.3848000000000332e-05, 1.3570000000000942e-05, 1.3874999999999998e-05...</msg>
<status status="PASS" starttime="20201030 15:52:54.157" endtime="20201030 15:52:54.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.166" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 15:52:54.165" endtime="20201030 15:52:54.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.168" level="INFO">VALUE: [1.4166999999998958e-05, 1.3888999999999568e-05, 1.3513999999999193e-05, 1.3874999999999998e-05, 1.3263999999998943e-05, 1.3848000000000332e-05, 1.3570000000000942e-05, 1.3874999999999998e-05, 1.3570000000000942e-05, 1.384699999999739e-05, 1.355499999999843e-05, 1.3569999999997473e-05, 1.3263999999998943e-05, 1.3527999999998763e-05, 1.3263999999998943e-05, 1.3472000000000484e-05, 1.3263999999998943e-05, 1.3888999999999568e-05, 1.3292000000001553e-05, 1.3874999999999998e-05, 1.355499999999843e-05, 1.3264000000002413e-05, 1.3263999999998943e-05, 1.3569000000001469e-05, 1.3568999999998e-05, 1.3874999999999998e-05, 1.3570000000000942e-05, 1.3556000000001373e-05, 1.3556000000001373e-05, 1.3833999999997293e-05, 1.3570000000000942e-05, 1.3235999999999803e-05, 1.3584000000000512e-05, 1.3624999999999748e-05, 1.3584000000000512e-05, 1.3569000000001469e-05, 1.3249999999999373e-05, 1.3499999999999623e-05, 1.3555999999997903e-05, 1.3568999999998e-05, 1.3222000000000234e-05, 1.3888999999999568e-05, 1.3180000000001524e-05, 1.3901999999999665e-05, 1.358299999999757e-05, 1.3568999999998e-05, 1.3555999999997903e-05, 1.3569000000001469e-05, 1.3277000000002509e-05, 1.3833000000001289e-05]</msg>
<status status="PASS" starttime="20201030 15:52:54.167" endtime="20201030 15:52:54.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.162" endtime="20201030 15:52:54.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:54.173" endtime="20201030 15:52:54.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.172" endtime="20201030 15:52:54.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.171" endtime="20201030 15:52:54.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.813" endtime="20201030 15:52:54.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.812" endtime="20201030 15:52:54.194"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.203" endtime="20201030 15:52:54.218"></status>
</kw>
<msg timestamp="20201030 15:52:54.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.201" endtime="20201030 15:52:54.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.219" endtime="20201030 15:52:54.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.222" endtime="20201030 15:52:54.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.199" endtime="20201030 15:52:54.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.197" endtime="20201030 15:52:54.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.231" endtime="20201030 15:52:54.518"></status>
</kw>
<msg timestamp="20201030 15:52:54.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022082958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022098639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.229" endtime="20201030 15:52:54.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022082958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022098639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.523" endtime="20201030 15:52:54.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.531" endtime="20201030 15:52:54.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.227" endtime="20201030 15:52:54.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.225" endtime="20201030 15:52:54.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:54.538" level="INFO">${RESULT} = [{'diff': 1.5681000000000028e-05}, {'diff': 1.3874999999999998e-05}, {'diff': 1.4486999999997058e-05}, {'diff': 1.4472000000001484e-05}, {'diff': 1.4500000000000624e-05}, {'diff': 1.4458999999997918e-...</msg>
<status status="PASS" starttime="20201030 15:52:54.534" endtime="20201030 15:52:54.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:54.542" level="INFO">${ACCURACY} = {'diff': [1.5681000000000028e-05, 1.3874999999999998e-05, 1.4486999999997058e-05, 1.4472000000001484e-05, 1.4500000000000624e-05, 1.4458999999997918e-05, 1.4457999999998444e-05, 1.4179999999999054e-05...</msg>
<status status="PASS" starttime="20201030 15:52:54.538" endtime="20201030 15:52:54.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.546" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 15:52:54.545" endtime="20201030 15:52:54.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.549" level="INFO">VALUE: [1.5681000000000028e-05, 1.3874999999999998e-05, 1.4486999999997058e-05, 1.4472000000001484e-05, 1.4500000000000624e-05, 1.4458999999997918e-05, 1.4457999999998444e-05, 1.4179999999999054e-05, 1.4472000000001484e-05, 1.477700000000054e-05, 1.4472000000001484e-05, 1.4194000000002094e-05, 1.454099999999986e-05, 1.4500000000000624e-05, 1.4764000000000443e-05, 1.508299999999907e-05, 1.4152999999999388e-05, 1.479100000000011e-05, 1.4473000000000957e-05, 1.4152999999999388e-05, 1.4791999999999583e-05, 1.4458000000001914e-05, 1.4778000000000013e-05, 1.4500000000000624e-05, 1.4472000000001484e-05, 1.4791999999999583e-05, 1.4195000000001567e-05, 1.479100000000011e-05, 1.4194999999998098e-05, 1.4472000000001484e-05, 1.484699999999839e-05, 1.4486000000001054e-05, 1.4487000000000527e-05, 1.4500000000000624e-05, 1.477700000000054e-05, 1.4457999999998444e-05, 1.477700000000054e-05, 1.4471999999998014e-05, 1.4514000000000193e-05, 1.480499999999968e-05, 1.4805999999999153e-05, 1.4791999999999583e-05, 1.4471999999998014e-05, 1.4500000000000624e-05, 1.4806000000002623e-05, 1.4485999999997584e-05, 1.4166999999998958e-05, 1.4820000000002193e-05, 1.4527999999999763e-05, 1.5111000000001679e-05]</msg>
<status status="PASS" starttime="20201030 15:52:54.547" endtime="20201030 15:52:54.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.543" endtime="20201030 15:52:54.550"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:54.554" endtime="20201030 15:52:54.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.552" endtime="20201030 15:52:54.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.551" endtime="20201030 15:52:54.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.195" endtime="20201030 15:52:54.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.194" endtime="20201030 15:52:54.575"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.583" endtime="20201030 15:52:54.599"></status>
</kw>
<msg timestamp="20201030 15:52:54.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.582" endtime="20201030 15:52:54.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.601" endtime="20201030 15:52:54.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.603" endtime="20201030 15:52:54.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.579" endtime="20201030 15:52:54.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.577" endtime="20201030 15:52:54.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.613" endtime="20201030 15:52:54.899"></status>
</kw>
<msg timestamp="20201030 15:52:54.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023047903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0230645, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:54.611" endtime="20201030 15:52:54.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023047903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0230645, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:54.904" endtime="20201030 15:52:54.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.912" endtime="20201030 15:52:54.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.608" endtime="20201030 15:52:54.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.607" endtime="20201030 15:52:54.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:54.919" level="INFO">${RESULT} = [{'diff': 1.659700000000014e-05}, {'diff': 1.5709000000002638e-05}, {'diff': 1.6000000000002124e-05}, {'diff': 1.540300000000064e-05}, {'diff': 1.5694000000000125e-05}, {'diff': 1.5416000000000735e-05...</msg>
<status status="PASS" starttime="20201030 15:52:54.915" endtime="20201030 15:52:54.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:54.923" level="INFO">${ACCURACY} = {'diff': [1.659700000000014e-05, 1.5709000000002638e-05, 1.6000000000002124e-05, 1.540300000000064e-05, 1.5694000000000125e-05, 1.5416000000000735e-05, 1.5708999999999168e-05, 1.53889999999976e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:52:54.920" endtime="20201030 15:52:54.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.927" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 15:52:54.926" endtime="20201030 15:52:54.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.933" level="INFO">VALUE: [1.659700000000014e-05, 1.5709000000002638e-05, 1.6000000000002124e-05, 1.540300000000064e-05, 1.5694000000000125e-05, 1.5416000000000735e-05, 1.5708999999999168e-05, 1.53889999999976e-05, 1.5125000000001249e-05, 1.540300000000064e-05, 1.53889999999976e-05, 1.5721999999999264e-05, 1.5707999999999694e-05, 1.538900000000107e-05, 1.538900000000107e-05, 1.5681000000000028e-05, 1.5097999999998113e-05, 1.5707999999999694e-05, 1.541700000000021e-05, 1.5750000000001874e-05, 1.5707999999999694e-05, 1.565299999999742e-05, 1.5320000000002693e-05, 1.541700000000021e-05, 1.5708999999999168e-05, 1.6028000000001263e-05, 1.5153000000000388e-05, 1.540299999999717e-05, 1.540299999999717e-05, 1.5707999999999694e-05, 1.541699999999674e-05, 1.533299999999932e-05, 1.5707999999999694e-05, 1.5721999999999264e-05, 1.5681000000000028e-05, 1.537499999999803e-05, 1.5694000000000125e-05, 1.5722999999998738e-05, 1.5083000000002539e-05, 1.5721999999999264e-05, 1.5708999999999168e-05, 1.5402000000001165e-05, 1.5694999999999598e-05, 1.5708999999999168e-05, 1.5736000000002304e-05, 1.538900000000107e-05, 1.5694000000000125e-05, 1.538900000000107e-05, 1.5695000000003068e-05, 1.5709000000002638e-05]</msg>
<status status="PASS" starttime="20201030 15:52:54.928" endtime="20201030 15:52:54.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.924" endtime="20201030 15:52:54.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:54.938" endtime="20201030 15:52:54.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.937" endtime="20201030 15:52:54.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.936" endtime="20201030 15:52:54.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.575" endtime="20201030 15:52:54.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.575" endtime="20201030 15:52:54.959"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.968" endtime="20201030 15:52:54.983"></status>
</kw>
<msg timestamp="20201030 15:52:54.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.966" endtime="20201030 15:52:54.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.984" endtime="20201030 15:52:54.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.987" endtime="20201030 15:52:54.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.964" endtime="20201030 15:52:54.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.962" endtime="20201030 15:52:54.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.996" endtime="20201030 15:52:55.282"></status>
</kw>
<msg timestamp="20201030 15:52:55.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022124347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.995" endtime="20201030 15:52:55.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022124347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.286" endtime="20201030 15:52:55.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.294" endtime="20201030 15:52:55.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.992" endtime="20201030 15:52:55.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.990" endtime="20201030 15:52:55.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:55.301" level="INFO">${RESULT} = [{'diff': 1.7820000000001723e-05}, {'diff': 1.662499999999928e-05}, {'diff': 1.6666000000001985e-05}, {'diff': 1.659700000000014e-05}, {'diff': 1.6569000000001e-05}, {'diff': 1.693099999999781e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:55.298" endtime="20201030 15:52:55.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:55.306" level="INFO">${ACCURACY} = {'diff': [1.7820000000001723e-05, 1.662499999999928e-05, 1.6666000000001985e-05, 1.659700000000014e-05, 1.6569000000001e-05, 1.693099999999781e-05, 1.662499999999928e-05, 1.6611999999999183e-05, 1.661...</msg>
<status status="PASS" starttime="20201030 15:52:55.302" endtime="20201030 15:52:55.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.310" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 15:52:55.309" endtime="20201030 15:52:55.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.313" level="INFO">VALUE: [1.7820000000001723e-05, 1.662499999999928e-05, 1.6666000000001985e-05, 1.659700000000014e-05, 1.6569000000001e-05, 1.693099999999781e-05, 1.662499999999928e-05, 1.6611999999999183e-05, 1.661099999999971e-05, 1.661100000000318e-05, 1.661099999999971e-05, 1.662500000000275e-05, 1.662499999999928e-05, 1.6637999999999376e-05, 1.6292000000001083e-05, 1.662499999999928e-05, 1.694499999999738e-05, 1.661099999999971e-05, 1.631899999999728e-05, 1.6320000000000223e-05, 1.6263999999998474e-05, 1.665300000000189e-05, 1.693099999999781e-05, 1.661099999999971e-05, 1.662500000000275e-05, 1.6320000000000223e-05, 1.686099999999996e-05, 1.63889999999986e-05, 1.662499999999928e-05, 1.662499999999928e-05, 1.6292000000001083e-05, 1.6235999999999334e-05, 1.631900000000075e-05, 1.659700000000014e-05, 1.661099999999971e-05, 1.63750000000025e-05, 1.691699999999824e-05, 1.661099999999971e-05, 1.666700000000146e-05, 1.631900000000075e-05, 1.636099999999946e-05, 1.690300000000214e-05, 1.668100000000103e-05, 1.631900000000075e-05, 1.629099999999814e-05, 1.661099999999971e-05, 1.662499999999928e-05, 1.6901999999999195e-05, 1.631900000000075e-05, 1.633300000000032e-05]</msg>
<status status="PASS" starttime="20201030 15:52:55.312" endtime="20201030 15:52:55.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.307" endtime="20201030 15:52:55.314"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:55.318" endtime="20201030 15:52:55.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.316" endtime="20201030 15:52:55.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.315" endtime="20201030 15:52:55.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.960" endtime="20201030 15:52:55.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.959" endtime="20201030 15:52:55.339"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.347" endtime="20201030 15:52:55.362"></status>
</kw>
<msg timestamp="20201030 15:52:55.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.346" endtime="20201030 15:52:55.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.364" endtime="20201030 15:52:55.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.366" endtime="20201030 15:52:55.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.343" endtime="20201030 15:52:55.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.341" endtime="20201030 15:52:55.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.375" endtime="20201030 15:52:55.675"></status>
</kw>
<msg timestamp="20201030 15:52:55.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022071722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022089861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.374" endtime="20201030 15:52:55.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022071722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022089861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.679" endtime="20201030 15:52:55.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.687" endtime="20201030 15:52:55.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.371" endtime="20201030 15:52:55.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.369" endtime="20201030 15:52:55.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:55.694" level="INFO">${RESULT} = [{'diff': 1.813900000000035e-05}, {'diff': 1.694499999999738e-05}, {'diff': 1.7473000000000488e-05}, {'diff': 1.7848000000000863e-05}, {'diff': 1.7235999999996865e-05}, {'diff': 1.715299999999892e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:55.691" endtime="20201030 15:52:55.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:55.698" level="INFO">${ACCURACY} = {'diff': [1.813900000000035e-05, 1.694499999999738e-05, 1.7473000000000488e-05, 1.7848000000000863e-05, 1.7235999999996865e-05, 1.715299999999892e-05, 1.7541999999998864e-05, 1.754099999999939e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:52:55.695" endtime="20201030 15:52:55.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.702" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 15:52:55.701" endtime="20201030 15:52:55.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.705" level="INFO">VALUE: [1.813900000000035e-05, 1.694499999999738e-05, 1.7473000000000488e-05, 1.7848000000000863e-05, 1.7235999999996865e-05, 1.715299999999892e-05, 1.7541999999998864e-05, 1.754099999999939e-05, 1.7541999999998864e-05, 1.7457999999997975e-05, 1.7542000000002334e-05, 1.7236000000000334e-05, 1.7263999999999474e-05, 1.786100000000096e-05, 1.784700000000139e-05, 1.7236000000000334e-05, 1.7514000000003194e-05, 1.7848000000000863e-05, 1.7236000000000334e-05, 1.784699999999792e-05, 1.754099999999939e-05, 1.791699999999924e-05, 1.7541999999998864e-05, 1.7541999999998864e-05, 1.755500000000243e-05, 1.7527999999999294e-05, 1.755499999999896e-05, 1.784699999999792e-05, 1.7541999999998864e-05, 1.786100000000096e-05, 1.783299999999835e-05, 1.7569000000002e-05, 1.786099999999749e-05, 1.7236000000000334e-05, 1.7500000000000154e-05, 1.7514000000003194e-05, 1.783299999999835e-05, 1.7236000000000334e-05, 1.7513999999999724e-05, 1.7236000000000334e-05, 1.7249999999999904e-05, 1.7848000000000863e-05, 1.7556000000001903e-05, 1.754099999999939e-05, 1.7485999999997115e-05, 1.783299999999835e-05, 1.783300000000182e-05, 1.7222000000000764e-05, 1.7528000000002764e-05, 1.7222000000000764e-05]</msg>
<status status="PASS" starttime="20201030 15:52:55.704" endtime="20201030 15:52:55.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.699" endtime="20201030 15:52:55.706"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:55.710" endtime="20201030 15:52:55.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.709" endtime="20201030 15:52:55.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.707" endtime="20201030 15:52:55.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.340" endtime="20201030 15:52:55.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.339" endtime="20201030 15:52:55.731"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.740" endtime="20201030 15:52:55.756"></status>
</kw>
<msg timestamp="20201030 15:52:55.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.738" endtime="20201030 15:52:55.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.757" endtime="20201030 15:52:55.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.760" endtime="20201030 15:52:55.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.735" endtime="20201030 15:52:55.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.733" endtime="20201030 15:52:55.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.786" endtime="20201030 15:52:56.079"></status>
</kw>
<msg timestamp="20201030 15:52:56.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023100639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023119694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.782" endtime="20201030 15:52:56.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023100639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023119694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.084" endtime="20201030 15:52:56.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.092" endtime="20201030 15:52:56.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.771" endtime="20201030 15:52:56.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.763" endtime="20201030 15:52:56.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:56.099" level="INFO">${RESULT} = [{'diff': 1.905500000000046e-05}, {'diff': 1.9014000000001224e-05}, {'diff': 1.8486000000001584e-05}, {'diff': 1.8763999999997505e-05}, {'diff': 1.8152000000000446e-05}, {'diff': 1.8443999999999405e-0...</msg>
<status status="PASS" starttime="20201030 15:52:56.095" endtime="20201030 15:52:56.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:56.103" level="INFO">${ACCURACY} = {'diff': [1.905500000000046e-05, 1.9014000000001224e-05, 1.8486000000001584e-05, 1.8763999999997505e-05, 1.8152000000000446e-05, 1.8443999999999405e-05, 1.816699999999949e-05, 1.8763999999997505e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:56.100" endtime="20201030 15:52:56.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.107" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 15:52:56.106" endtime="20201030 15:52:56.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.110" level="INFO">VALUE: [1.905500000000046e-05, 1.9014000000001224e-05, 1.8486000000001584e-05, 1.8763999999997505e-05, 1.8152000000000446e-05, 1.8443999999999405e-05, 1.816699999999949e-05, 1.8763999999997505e-05, 1.8749999999997935e-05, 1.8457999999998975e-05, 1.8222000000001765e-05, 1.9055999999999934e-05, 1.815299999999992e-05, 1.841699999999974e-05, 1.8764000000000974e-05, 1.8458000000002445e-05, 1.8457999999998975e-05, 1.8471999999998545e-05, 1.845899999999845e-05, 1.8472000000002015e-05, 1.8763999999997505e-05, 1.877700000000107e-05, 1.87089999999987e-05, 1.815299999999992e-05, 1.845899999999845e-05, 1.877700000000107e-05, 1.8764000000000974e-05, 1.8152000000000446e-05, 1.8749999999997935e-05, 1.87630000000015e-05, 1.815299999999992e-05, 1.8443999999999405e-05, 1.815299999999992e-05, 1.8764000000000974e-05, 1.8749999999997935e-05, 1.8500000000001154e-05, 1.844499999999888e-05, 1.845900000000192e-05, 1.8416000000000265e-05, 1.847299999999802e-05, 1.8763999999997505e-05, 1.815299999999992e-05, 1.8457999999998975e-05, 1.8458000000002445e-05, 1.8500000000001154e-05, 1.847299999999802e-05, 1.813900000000035e-05, 1.844499999999888e-05, 1.87769999999976e-05, 1.8764000000000974e-05]</msg>
<status status="PASS" starttime="20201030 15:52:56.108" endtime="20201030 15:52:56.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.104" endtime="20201030 15:52:56.112"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:56.116" endtime="20201030 15:52:56.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.114" endtime="20201030 15:52:56.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.113" endtime="20201030 15:52:56.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.732" endtime="20201030 15:52:56.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.731" endtime="20201030 15:52:56.136"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.145" endtime="20201030 15:52:56.160"></status>
</kw>
<msg timestamp="20201030 15:52:56.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.144" endtime="20201030 15:52:56.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.162" endtime="20201030 15:52:56.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.164" endtime="20201030 15:52:56.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.141" endtime="20201030 15:52:56.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.139" endtime="20201030 15:52:56.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.173" endtime="20201030 15:52:56.459"></status>
</kw>
<msg timestamp="20201030 15:52:56.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022390222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.172" endtime="20201030 15:52:56.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022390222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.463" endtime="20201030 15:52:56.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.472" endtime="20201030 15:52:56.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.169" endtime="20201030 15:52:56.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.167" endtime="20201030 15:52:56.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:56.478" level="INFO">${RESULT} = [{'diff': 2.059700000000067e-05}, {'diff': 1.9069999999999504e-05}, {'diff': 1.968100000000056e-05}, {'diff': 1.965299999999795e-05}, {'diff': 1.943100000000031e-05}, {'diff': 1.968100000000056e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:56.475" endtime="20201030 15:52:56.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:56.483" level="INFO">${ACCURACY} = {'diff': [2.059700000000067e-05, 1.9069999999999504e-05, 1.968100000000056e-05, 1.965299999999795e-05, 1.943100000000031e-05, 1.968100000000056e-05, 1.9679999999997616e-05, 1.937500000000203e-05, 1.90...</msg>
<status status="PASS" starttime="20201030 15:52:56.479" endtime="20201030 15:52:56.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.488" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 15:52:56.487" endtime="20201030 15:52:56.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.490" level="INFO">VALUE: [2.059700000000067e-05, 1.9069999999999504e-05, 1.968100000000056e-05, 1.965299999999795e-05, 1.943100000000031e-05, 1.968100000000056e-05, 1.9679999999997616e-05, 1.937500000000203e-05, 1.9055999999999934e-05, 1.966700000000099e-05, 1.9679999999997616e-05, 1.9680000000001086e-05, 1.937500000000203e-05, 1.937499999999856e-05, 1.9944000000000905e-05, 1.9985999999999615e-05, 1.965299999999795e-05, 1.968100000000056e-05, 1.937499999999856e-05, 1.966700000000099e-05, 1.937499999999856e-05, 1.937499999999856e-05, 1.9665999999998046e-05, 1.9749999999998935e-05, 1.90829999999996e-05, 1.968100000000056e-05, 1.966700000000099e-05, 1.944499999999988e-05, 1.937500000000203e-05, 1.941699999999727e-05, 1.9972000000000045e-05, 1.966700000000099e-05, 1.966700000000099e-05, 1.938899999999813e-05, 1.9915999999998296e-05, 1.9361999999998464e-05, 1.933299999999985e-05, 1.966700000000099e-05, 1.9387999999998656e-05, 1.937499999999856e-05, 1.969500000000013e-05, 1.936099999999899e-05, 1.9333999999999324e-05, 1.968100000000056e-05, 1.937499999999856e-05, 1.9707999999996756e-05, 1.93890000000016e-05, 1.9958000000000475e-05, 1.937499999999856e-05, 1.9666000000001516e-05]</msg>
<status status="PASS" starttime="20201030 15:52:56.489" endtime="20201030 15:52:56.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.484" endtime="20201030 15:52:56.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:56.499" endtime="20201030 15:52:56.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.498" endtime="20201030 15:52:56.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.496" endtime="20201030 15:52:56.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.137" endtime="20201030 15:52:56.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.137" endtime="20201030 15:52:56.520"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.529" endtime="20201030 15:52:56.544"></status>
</kw>
<msg timestamp="20201030 15:52:56.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.527" endtime="20201030 15:52:56.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.545" endtime="20201030 15:52:56.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.548" endtime="20201030 15:52:56.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.524" endtime="20201030 15:52:56.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.522" endtime="20201030 15:52:56.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.557" endtime="20201030 15:52:56.845"></status>
</kw>
<msg timestamp="20201030 15:52:56.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022186375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022208153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.556" endtime="20201030 15:52:56.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022186375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022208153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.849" endtime="20201030 15:52:56.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.858" endtime="20201030 15:52:56.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.553" endtime="20201030 15:52:56.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.551" endtime="20201030 15:52:56.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:56.865" level="INFO">${RESULT} = [{'diff': 2.1778000000000075e-05}, {'diff': 2.0888000000000156e-05}, {'diff': 2.05969999999972e-05}, {'diff': 2.0277999999998575e-05}, {'diff': 2.0888000000000156e-05}, {'diff': 2.059700000000067e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:56.862" endtime="20201030 15:52:56.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:56.869" level="INFO">${ACCURACY} = {'diff': [2.1778000000000075e-05, 2.0888000000000156e-05, 2.05969999999972e-05, 2.0277999999998575e-05, 2.0888000000000156e-05, 2.059700000000067e-05, 2.0291999999998145e-05, 2.063899999999938e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:52:56.866" endtime="20201030 15:52:56.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.874" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 15:52:56.873" endtime="20201030 15:52:56.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.876" level="INFO">VALUE: [2.1778000000000075e-05, 2.0888000000000156e-05, 2.05969999999972e-05, 2.0277999999998575e-05, 2.0888000000000156e-05, 2.059700000000067e-05, 2.0291999999998145e-05, 2.063899999999938e-05, 2.0291999999998145e-05, 2.0292000000001614e-05, 2.061100000000024e-05, 2.059700000000067e-05, 2.0305999999997715e-05, 2.056900000000153e-05, 2.0306000000001184e-05, 2.058299999999763e-05, 2.0334000000000324e-05, 2.059700000000067e-05, 2.0666000000002516e-05, 2.031899999999781e-05, 2.0235999999999865e-05, 2.059700000000067e-05, 2.0235999999999865e-05, 2.059700000000067e-05, 2.029100000000214e-05, 2.088899999999963e-05, 2.0584000000000574e-05, 2.0292000000001614e-05, 2.0292000000001614e-05, 2.029100000000214e-05, 2.061100000000024e-05, 2.0598000000000144e-05, 2.030500000000171e-05, 2.088899999999963e-05, 2.0291999999998145e-05, 2.09029999999992e-05, 2.0570000000001004e-05, 2.09029999999992e-05, 2.0277999999998575e-05, 2.0584000000000574e-05, 2.0598000000000144e-05, 2.059700000000067e-05, 2.088899999999963e-05, 2.029099999999867e-05, 2.0915999999999296e-05, 2.030499999999824e-05, 2.0264000000002474e-05, 2.090300000000267e-05, 2.0598000000000144e-05, 2.059700000000067e-05]</msg>
<status status="PASS" starttime="20201030 15:52:56.875" endtime="20201030 15:52:56.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.870" endtime="20201030 15:52:56.878"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:56.881" endtime="20201030 15:52:56.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.880" endtime="20201030 15:52:56.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.878" endtime="20201030 15:52:56.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.521" endtime="20201030 15:52:56.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.520" endtime="20201030 15:52:56.902"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.911" endtime="20201030 15:52:56.926"></status>
</kw>
<msg timestamp="20201030 15:52:56.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.909" endtime="20201030 15:52:56.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.928" endtime="20201030 15:52:56.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.931" endtime="20201030 15:52:56.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.907" endtime="20201030 15:52:56.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.904" endtime="20201030 15:52:56.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.940" endtime="20201030 15:52:57.225"></status>
</kw>
<msg timestamp="20201030 15:52:57.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023002764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023025208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.938" endtime="20201030 15:52:57.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023002764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023025208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.229" endtime="20201030 15:52:57.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.238" endtime="20201030 15:52:57.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.936" endtime="20201030 15:52:57.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.934" endtime="20201030 15:52:57.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:57.244" level="INFO">${RESULT} = [{'diff': 2.2443999999999936e-05}, {'diff': 2.116699999999902e-05}, {'diff': 2.1514000000000255e-05}, {'diff': 2.122300000000077e-05}, {'diff': 2.181899999999931e-05}, {'diff': 2.119499999999816e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:57.241" endtime="20201030 15:52:57.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:57.249" level="INFO">${ACCURACY} = {'diff': [2.2443999999999936e-05, 2.116699999999902e-05, 2.1514000000000255e-05, 2.122300000000077e-05, 2.181899999999931e-05, 2.119499999999816e-05, 2.186099999999802e-05, 2.181899999999931e-05, 2.18...</msg>
<status status="PASS" starttime="20201030 15:52:57.245" endtime="20201030 15:52:57.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.253" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 15:52:57.252" endtime="20201030 15:52:57.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.256" level="INFO">VALUE: [2.2443999999999936e-05, 2.116699999999902e-05, 2.1514000000000255e-05, 2.122300000000077e-05, 2.181899999999931e-05, 2.119499999999816e-05, 2.186099999999802e-05, 2.181899999999931e-05, 2.181900000000278e-05, 2.1514000000000255e-05, 2.1500000000000685e-05, 2.1486000000001115e-05, 2.1514000000000255e-05, 2.1514000000000255e-05, 2.1193999999998686e-05, 2.1236000000000865e-05, 2.181900000000278e-05, 2.1806000000002684e-05, 2.1194000000002156e-05, 2.151300000000078e-05, 2.1527999999999825e-05, 2.1486000000001115e-05, 2.1527999999999825e-05, 2.1514000000000255e-05, 2.122300000000077e-05, 2.1500000000000685e-05, 2.1527999999999825e-05, 2.180499999999974e-05, 2.1514000000000255e-05, 2.1207999999998256e-05, 2.1791999999999645e-05, 2.181899999999931e-05, 2.1138000000000406e-05, 2.118099999999859e-05, 2.1819999999998785e-05, 2.1805999999999215e-05, 2.1819999999998785e-05, 2.1514000000000255e-05, 2.1500000000000685e-05, 2.181899999999931e-05, 2.1805999999999215e-05, 2.1207999999998256e-05, 2.1541999999999395e-05, 2.186099999999802e-05, 2.1207999999998256e-05, 2.180499999999974e-05, 2.120899999999773e-05, 2.181899999999931e-05, 2.1861999999997495e-05, 2.1514000000000255e-05]</msg>
<status status="PASS" starttime="20201030 15:52:57.254" endtime="20201030 15:52:57.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.249" endtime="20201030 15:52:57.258"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:57.262" endtime="20201030 15:52:57.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.260" endtime="20201030 15:52:57.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.259" endtime="20201030 15:52:57.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.903" endtime="20201030 15:52:57.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.902" endtime="20201030 15:52:57.282"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.291" endtime="20201030 15:52:57.306"></status>
</kw>
<msg timestamp="20201030 15:52:57.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.289" endtime="20201030 15:52:57.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.308" endtime="20201030 15:52:57.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.310" endtime="20201030 15:52:57.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.287" endtime="20201030 15:52:57.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.285" endtime="20201030 15:52:57.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.319" endtime="20201030 15:52:57.606"></status>
</kw>
<msg timestamp="20201030 15:52:57.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022104611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022128222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.318" endtime="20201030 15:52:57.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022104611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022128222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.610" endtime="20201030 15:52:57.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.618" endtime="20201030 15:52:57.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.315" endtime="20201030 15:52:57.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.313" endtime="20201030 15:52:57.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:57.625" level="INFO">${RESULT} = [{'diff': 2.361099999999977e-05}, {'diff': 2.2749999999998466e-05}, {'diff': 2.2430000000000366e-05}, {'diff': 2.2416000000000796e-05}, {'diff': 2.3042000000000895e-05}, {'diff': 2.2430000000000366e-0...</msg>
<status status="PASS" starttime="20201030 15:52:57.622" endtime="20201030 15:52:57.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:57.630" level="INFO">${ACCURACY} = {'diff': [2.361099999999977e-05, 2.2749999999998466e-05, 2.2430000000000366e-05, 2.2416000000000796e-05, 2.3042000000000895e-05, 2.2430000000000366e-05, 2.2443999999999936e-05, 2.2749999999998466e-05,...</msg>
<status status="PASS" starttime="20201030 15:52:57.626" endtime="20201030 15:52:57.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.635" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 15:52:57.634" endtime="20201030 15:52:57.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.637" level="INFO">VALUE: [2.361099999999977e-05, 2.2749999999998466e-05, 2.2430000000000366e-05, 2.2416000000000796e-05, 2.3042000000000895e-05, 2.2430000000000366e-05, 2.2443999999999936e-05, 2.2749999999998466e-05, 2.24030000000007e-05, 2.241700000000027e-05, 2.305500000000099e-05, 2.243099999999984e-05, 2.243099999999984e-05, 2.241700000000027e-05, 2.2443999999999936e-05, 2.2471999999999076e-05, 2.212500000000131e-05, 2.2721999999999326e-05, 2.241700000000027e-05, 2.27229999999988e-05, 2.245899999999898e-05, 2.2749999999998466e-05, 2.2707999999999756e-05, 2.241700000000027e-05, 2.243099999999984e-05, 2.2348000000001894e-05, 2.2348000000001894e-05, 2.243099999999984e-05, 2.2430000000000366e-05, 2.2416000000000796e-05, 2.241700000000027e-05, 2.27229999999988e-05, 2.2430000000000366e-05, 2.2443999999999936e-05, 2.2735999999998896e-05, 2.2721999999999326e-05, 2.2471999999999076e-05, 2.2735999999998896e-05, 2.243099999999984e-05, 2.302700000000185e-05, 2.2707999999999756e-05, 2.241700000000027e-05, 2.245899999999898e-05, 2.241700000000027e-05, 2.2721999999999326e-05, 2.2430000000000366e-05, 2.236099999999852e-05, 2.2735999999998896e-05, 2.2443999999999936e-05, 2.2736000000002365e-05]</msg>
<status status="PASS" starttime="20201030 15:52:57.636" endtime="20201030 15:52:57.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.631" endtime="20201030 15:52:57.639"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:57.642" endtime="20201030 15:52:57.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.641" endtime="20201030 15:52:57.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.640" endtime="20201030 15:52:57.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.283" endtime="20201030 15:52:57.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.283" endtime="20201030 15:52:57.663"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.672" endtime="20201030 15:52:57.687"></status>
</kw>
<msg timestamp="20201030 15:52:57.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.670" endtime="20201030 15:52:57.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.689" endtime="20201030 15:52:57.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.691" endtime="20201030 15:52:57.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.668" endtime="20201030 15:52:57.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.666" endtime="20201030 15:52:57.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.700" endtime="20201030 15:52:57.988"></status>
</kw>
<msg timestamp="20201030 15:52:57.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022170125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022194667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.699" endtime="20201030 15:52:57.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022170125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022194667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.993" endtime="20201030 15:52:58.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.001" endtime="20201030 15:52:58.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.696" endtime="20201030 15:52:58.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.694" endtime="20201030 15:52:58.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:58.008" level="INFO">${RESULT} = [{'diff': 2.4542000000002395e-05}, {'diff': 2.394500000000091e-05}, {'diff': 2.3944000000001436e-05}, {'diff': 2.365300000000195e-05}, {'diff': 2.356900000000106e-05}, {'diff': 2.338900000000213e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:58.005" endtime="20201030 15:52:58.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:58.012" level="INFO">${ACCURACY} = {'diff': [2.4542000000002395e-05, 2.394500000000091e-05, 2.3944000000001436e-05, 2.365300000000195e-05, 2.356900000000106e-05, 2.338900000000213e-05, 2.336100000000299e-05, 2.3930000000001866e-05, 2.3...</msg>
<status status="PASS" starttime="20201030 15:52:58.009" endtime="20201030 15:52:58.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.017" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 15:52:58.015" endtime="20201030 15:52:58.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.019" level="INFO">VALUE: [2.4542000000002395e-05, 2.394500000000091e-05, 2.3944000000001436e-05, 2.365300000000195e-05, 2.356900000000106e-05, 2.338900000000213e-05, 2.336100000000299e-05, 2.3930000000001866e-05, 2.334699999999995e-05, 2.365300000000195e-05, 2.366699999999805e-05, 2.3693999999997717e-05, 2.366700000000152e-05, 2.365300000000195e-05, 2.3347999999999425e-05, 2.334699999999995e-05, 2.394500000000091e-05, 2.334699999999995e-05, 2.358300000000063e-05, 2.3666000000002047e-05, 2.365299999999848e-05, 2.3291999999997676e-05, 2.366699999999805e-05, 2.336100000000299e-05, 2.3693999999997717e-05, 2.334699999999995e-05, 2.3333999999999855e-05, 2.4013999999999286e-05, 2.334699999999995e-05, 2.366699999999805e-05, 2.333300000000038e-05, 2.334699999999995e-05, 2.3665999999998577e-05, 2.3278000000001575e-05, 2.3694000000001186e-05, 2.334699999999995e-05, 2.363899999999891e-05, 2.365299999999848e-05, 2.397300000000005e-05, 2.365300000000195e-05, 2.333300000000038e-05, 2.363900000000238e-05, 2.362499999999934e-05, 2.365299999999848e-05, 2.3666000000002047e-05, 2.3958000000001006e-05, 2.334699999999995e-05, 2.334699999999995e-05, 2.3347999999999425e-05, 2.365299999999848e-05]</msg>
<status status="PASS" starttime="20201030 15:52:58.018" endtime="20201030 15:52:58.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.013" endtime="20201030 15:52:58.020"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:58.024" endtime="20201030 15:52:58.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.023" endtime="20201030 15:52:58.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.021" endtime="20201030 15:52:58.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.664" endtime="20201030 15:52:58.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.663" endtime="20201030 15:52:58.046"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.059" endtime="20201030 15:52:58.076"></status>
</kw>
<msg timestamp="20201030 15:52:58.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.056" endtime="20201030 15:52:58.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.078" endtime="20201030 15:52:58.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.080" endtime="20201030 15:52:58.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.053" endtime="20201030 15:52:58.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.050" endtime="20201030 15:52:58.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.090" endtime="20201030 15:52:58.375"></status>
</kw>
<msg timestamp="20201030 15:52:58.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028994611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029020389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.088" endtime="20201030 15:52:58.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028994611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029020389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.379" endtime="20201030 15:52:58.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.387" endtime="20201030 15:52:58.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.085" endtime="20201030 15:52:58.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.084" endtime="20201030 15:52:58.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:58.394" level="INFO">${RESULT} = [{'diff': 2.5778000000000606e-05}, {'diff': 2.4276999999999632e-05}, {'diff': 2.4568999999998592e-05}, {'diff': 2.4569999999998066e-05}, {'diff': 2.4263999999999536e-05}, {'diff': 2.4582999999998162e-...</msg>
<status status="PASS" starttime="20201030 15:52:58.391" endtime="20201030 15:52:58.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:58.398" level="INFO">${ACCURACY} = {'diff': [2.5778000000000606e-05, 2.4276999999999632e-05, 2.4568999999998592e-05, 2.4569999999998066e-05, 2.4263999999999536e-05, 2.4582999999998162e-05, 2.4915999999999827e-05, 2.394500000000091e-05,...</msg>
<status status="PASS" starttime="20201030 15:52:58.395" endtime="20201030 15:52:58.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.403" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 15:52:58.402" endtime="20201030 15:52:58.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.408" level="INFO">VALUE: [2.5778000000000606e-05, 2.4276999999999632e-05, 2.4568999999998592e-05, 2.4569999999998066e-05, 2.4263999999999536e-05, 2.4582999999998162e-05, 2.4915999999999827e-05, 2.394500000000091e-05, 2.4832999999998412e-05, 2.4278000000002575e-05, 2.4541999999998926e-05, 2.4278000000002575e-05, 2.488900000000016e-05, 2.4568999999998592e-05, 2.4263999999999536e-05, 2.4541999999998926e-05, 2.4568999999998592e-05, 2.461100000000077e-05, 2.487500000000059e-05, 2.486100000000102e-05, 2.4249999999999966e-05, 2.4263999999999536e-05, 2.4555999999998496e-05, 2.4263999999999536e-05, 2.487500000000059e-05, 2.4332999999997912e-05, 2.4555999999998496e-05, 2.4848000000000925e-05, 2.4944000000002436e-05, 2.4570000000001535e-05, 2.4264000000003005e-05, 2.4570000000001535e-05, 2.4263999999999536e-05, 2.4568999999998592e-05, 2.4264000000003005e-05, 2.4249999999999966e-05, 2.4222000000000826e-05, 2.4249999999999966e-05, 2.4582999999998162e-05, 2.4263000000000062e-05, 2.4555999999998496e-05, 2.4554999999999022e-05, 2.423699999999987e-05, 2.4513999999999786e-05, 2.487499999999712e-05, 2.4582999999998162e-05, 2.4582999999998162e-05, 2.4249999999999966e-05, 2.4180000000002116e-05, 2.4860999999997552e-05]</msg>
<status status="PASS" starttime="20201030 15:52:58.404" endtime="20201030 15:52:58.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.399" endtime="20201030 15:52:58.410"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:58.414" endtime="20201030 15:52:58.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.412" endtime="20201030 15:52:58.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.411" endtime="20201030 15:52:58.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.047" endtime="20201030 15:52:58.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.047" endtime="20201030 15:52:58.434"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.443" endtime="20201030 15:52:58.459"></status>
</kw>
<msg timestamp="20201030 15:52:58.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.441" endtime="20201030 15:52:58.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.460" endtime="20201030 15:52:58.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.463" endtime="20201030 15:52:58.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.439" endtime="20201030 15:52:58.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.437" endtime="20201030 15:52:58.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.472" endtime="20201030 15:52:58.758"></status>
</kw>
<msg timestamp="20201030 15:52:58.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022014375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022041361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.470" endtime="20201030 15:52:58.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022014375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022041361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.762" endtime="20201030 15:52:58.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.770" endtime="20201030 15:52:58.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.468" endtime="20201030 15:52:58.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.466" endtime="20201030 15:52:58.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:58.777" level="INFO">${RESULT} = [{'diff': 2.6985999999999677e-05}, {'diff': 2.5778000000000606e-05}, {'diff': 2.5764000000001036e-05}, {'diff': 2.5485999999998177e-05}, {'diff': 2.5485999999998177e-05}, {'diff': 2.5792000000000176e-...</msg>
<status status="PASS" starttime="20201030 15:52:58.774" endtime="20201030 15:52:58.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:58.782" level="INFO">${ACCURACY} = {'diff': [2.6985999999999677e-05, 2.5778000000000606e-05, 2.5764000000001036e-05, 2.5485999999998177e-05, 2.5485999999998177e-05, 2.5792000000000176e-05, 2.5179999999999647e-05, 2.5776999999997663e-05...</msg>
<status status="PASS" starttime="20201030 15:52:58.778" endtime="20201030 15:52:58.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.787" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 15:52:58.786" endtime="20201030 15:52:58.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.789" level="INFO">VALUE: [2.6985999999999677e-05, 2.5778000000000606e-05, 2.5764000000001036e-05, 2.5485999999998177e-05, 2.5485999999998177e-05, 2.5792000000000176e-05, 2.5179999999999647e-05, 2.5776999999997663e-05, 2.515299999999998e-05, 2.5818999999999842e-05, 2.5528000000000356e-05, 2.587500000000159e-05, 2.5471999999998607e-05, 2.5179999999999647e-05, 2.5499999999997747e-05, 2.5791999999996706e-05, 2.5764000000001036e-05, 2.5500000000001216e-05, 2.5792000000000176e-05, 2.5778000000000606e-05, 2.5472000000002076e-05, 2.5528000000000356e-05, 2.5792000000000176e-05, 2.5193999999999217e-05, 2.5778000000000606e-05, 2.5500000000001216e-05, 2.5486000000001646e-05, 2.5778000000000606e-05, 2.5457999999999037e-05, 2.5471999999998607e-05, 2.548699999999765e-05, 2.5778000000000606e-05, 2.512500000000084e-05, 2.5778000000000606e-05, 2.5500000000001216e-05, 2.5166000000000077e-05, 2.545899999999851e-05, 2.5457999999999037e-05, 2.5792000000000176e-05, 2.5792000000000176e-05, 2.5528000000000356e-05, 2.5250000000000966e-05, 2.5193999999999217e-05, 2.5792000000000176e-05, 2.5471999999998607e-05, 2.5485999999998177e-05, 2.5777000000001132e-05, 2.5500000000001216e-05, 2.5485999999998177e-05, 2.5832999999999412e-05]</msg>
<status status="PASS" starttime="20201030 15:52:58.788" endtime="20201030 15:52:58.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.783" endtime="20201030 15:52:58.791"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:58.794" endtime="20201030 15:52:58.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.793" endtime="20201030 15:52:58.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.792" endtime="20201030 15:52:58.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.435" endtime="20201030 15:52:58.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.435" endtime="20201030 15:52:58.815"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.824" endtime="20201030 15:52:58.840"></status>
</kw>
<msg timestamp="20201030 15:52:58.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.822" endtime="20201030 15:52:58.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.842" endtime="20201030 15:52:58.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.844" endtime="20201030 15:52:58.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.820" endtime="20201030 15:52:58.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.818" endtime="20201030 15:52:58.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.853" endtime="20201030 15:52:59.146"></status>
</kw>
<msg timestamp="20201030 15:52:59.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022552111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022579111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.852" endtime="20201030 15:52:59.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022552111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022579111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.150" endtime="20201030 15:52:59.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.158" endtime="20201030 15:52:59.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.849" endtime="20201030 15:52:59.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.847" endtime="20201030 15:52:59.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:59.165" level="INFO">${RESULT} = [{'diff': 2.6999999999999247e-05}, {'diff': 2.6083999999999136e-05}, {'diff': 2.6721999999999857e-05}, {'diff': 2.6374999999998622e-05}, {'diff': 2.6708000000000287e-05}, {'diff': 2.7027000000002382e-...</msg>
<status status="PASS" starttime="20201030 15:52:59.162" endtime="20201030 15:52:59.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:59.169" level="INFO">${ACCURACY} = {'diff': [2.6999999999999247e-05, 2.6083999999999136e-05, 2.6721999999999857e-05, 2.6374999999998622e-05, 2.6708000000000287e-05, 2.7027000000002382e-05, 2.638899999999819e-05, 2.670899999999976e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:59.166" endtime="20201030 15:52:59.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.174" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 15:52:59.173" endtime="20201030 15:52:59.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.176" level="INFO">VALUE: [2.6999999999999247e-05, 2.6083999999999136e-05, 2.6721999999999857e-05, 2.6374999999998622e-05, 2.6708000000000287e-05, 2.7027000000002382e-05, 2.638899999999819e-05, 2.670899999999976e-05, 2.638899999999819e-05, 2.670899999999976e-05, 2.669500000000019e-05, 2.6708000000000287e-05, 2.640299999999776e-05, 2.6444000000000467e-05, 2.6708000000000287e-05, 2.7013999999998817e-05, 2.638900000000166e-05, 2.638900000000166e-05, 2.6708000000000287e-05, 2.638900000000166e-05, 2.6721999999999857e-05, 2.6999999999999247e-05, 2.640299999999776e-05, 2.6401999999998288e-05, 2.6735999999999427e-05, 2.613900000000141e-05, 2.6401999999998288e-05, 2.640300000000123e-05, 2.6708000000000287e-05, 2.7012999999999343e-05, 2.6110999999998802e-05, 2.637500000000209e-05, 2.6721999999999857e-05, 2.640300000000123e-05, 2.6096999999999232e-05, 2.6708000000000287e-05, 2.6694000000000717e-05, 2.638900000000166e-05, 2.670899999999976e-05, 2.640299999999776e-05, 2.6708000000000287e-05, 2.6749999999998997e-05, 2.640299999999776e-05, 2.6416000000001327e-05, 2.64170000000008e-05, 2.6694000000000717e-05, 2.643100000000037e-05, 2.64170000000008e-05, 2.6416000000001327e-05, 2.669500000000019e-05]</msg>
<status status="PASS" starttime="20201030 15:52:59.175" endtime="20201030 15:52:59.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.170" endtime="20201030 15:52:59.177"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:59.181" endtime="20201030 15:52:59.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.180" endtime="20201030 15:52:59.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.178" endtime="20201030 15:52:59.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.816" endtime="20201030 15:52:59.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.815" endtime="20201030 15:52:59.202"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.211" endtime="20201030 15:52:59.227"></status>
</kw>
<msg timestamp="20201030 15:52:59.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.209" endtime="20201030 15:52:59.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.228" endtime="20201030 15:52:59.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.231" endtime="20201030 15:52:59.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.207" endtime="20201030 15:52:59.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.204" endtime="20201030 15:52:59.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.240" endtime="20201030 15:52:59.526"></status>
</kw>
<msg timestamp="20201030 15:52:59.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023032708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023061208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.238" endtime="20201030 15:52:59.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023032708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023061208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.530" endtime="20201030 15:52:59.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.539" endtime="20201030 15:52:59.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.236" endtime="20201030 15:52:59.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.234" endtime="20201030 15:52:59.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:59.545" level="INFO">${RESULT} = [{'diff': 2.8500000000000747e-05}, {'diff': 2.7388999999999192e-05}, {'diff': 2.762500000000334e-05}, {'diff': 2.7318999999997873e-05}, {'diff': 2.7333999999996916e-05}, {'diff': 2.7319000000001342e-0...</msg>
<status status="PASS" starttime="20201030 15:52:59.542" endtime="20201030 15:52:59.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:59.549" level="INFO">${ACCURACY} = {'diff': [2.8500000000000747e-05, 2.7388999999999192e-05, 2.762500000000334e-05, 2.7318999999997873e-05, 2.7333999999996916e-05, 2.7319000000001342e-05, 2.7320000000000816e-05, 2.7624999999999872e-05,...</msg>
<status status="PASS" starttime="20201030 15:52:59.546" endtime="20201030 15:52:59.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.554" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 15:52:59.553" endtime="20201030 15:52:59.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.556" level="INFO">VALUE: [2.8500000000000747e-05, 2.7388999999999192e-05, 2.762500000000334e-05, 2.7318999999997873e-05, 2.7333999999996916e-05, 2.7319000000001342e-05, 2.7320000000000816e-05, 2.7624999999999872e-05, 2.7320000000000816e-05, 2.7319000000001342e-05, 2.7320000000000816e-05, 2.7262999999999593e-05, 2.7333000000000912e-05, 2.7637999999999968e-05, 2.7318999999997873e-05, 2.7624999999999872e-05, 2.7306000000001246e-05, 2.7624999999999872e-05, 2.7611000000000302e-05, 2.7555999999998027e-05, 2.7679999999998678e-05, 2.7611000000000302e-05, 2.7320000000000816e-05, 2.7624999999999872e-05, 2.7611000000000302e-05, 2.7624999999999872e-05, 2.798700000000015e-05, 2.7611000000000302e-05, 2.7318999999997873e-05, 2.79309999999984e-05, 2.7028000000001856e-05, 2.7611000000000302e-05, 2.7597000000000732e-05, 2.7374999999999622e-05, 2.7305999999997776e-05, 2.7333000000000912e-05, 2.7611000000000302e-05, 2.7319000000001342e-05, 2.791699999999883e-05, 2.7320000000000816e-05, 2.7944000000001967e-05, 2.7624999999999872e-05, 2.7624999999999872e-05, 2.7624999999999872e-05, 2.79309999999984e-05, 2.7320000000000816e-05, 2.7624999999999872e-05, 2.7638999999999442e-05, 2.7638999999999442e-05, 2.7277000000002632e-05]</msg>
<status status="PASS" starttime="20201030 15:52:59.555" endtime="20201030 15:52:59.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.550" endtime="20201030 15:52:59.559"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:59.562" endtime="20201030 15:52:59.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.561" endtime="20201030 15:52:59.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.560" endtime="20201030 15:52:59.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.203" endtime="20201030 15:52:59.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.202" endtime="20201030 15:52:59.583"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.592" endtime="20201030 15:52:59.608"></status>
</kw>
<msg timestamp="20201030 15:52:59.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.590" endtime="20201030 15:52:59.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.610" endtime="20201030 15:52:59.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.612" endtime="20201030 15:52:59.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.588" endtime="20201030 15:52:59.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.586" endtime="20201030 15:52:59.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.621" endtime="20201030 15:52:59.913"></status>
</kw>
<msg timestamp="20201030 15:52:59.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022327972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022357681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.620" endtime="20201030 15:52:59.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022327972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022357681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.917" endtime="20201030 15:52:59.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.926" endtime="20201030 15:52:59.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.617" endtime="20201030 15:52:59.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.615" endtime="20201030 15:52:59.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:59.932" level="INFO">${RESULT} = [{'diff': 2.970899999999929e-05}, {'diff': 2.8249999999997027e-05}, {'diff': 2.8486000000001177e-05}, {'diff': 2.8834000000001886e-05}, {'diff': 2.8541999999999457e-05}, {'diff': 2.82370000000004e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:59.929" endtime="20201030 15:52:59.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:59.937" level="INFO">${ACCURACY} = {'diff': [2.970899999999929e-05, 2.8249999999997027e-05, 2.8486000000001177e-05, 2.8834000000001886e-05, 2.8541999999999457e-05, 2.82370000000004e-05, 2.8611000000001302e-05, 2.8541999999999457e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:52:59.933" endtime="20201030 15:52:59.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.942" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 15:52:59.941" endtime="20201030 15:52:59.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.944" level="INFO">VALUE: [2.970899999999929e-05, 2.8249999999997027e-05, 2.8486000000001177e-05, 2.8834000000001886e-05, 2.8541999999999457e-05, 2.82370000000004e-05, 2.8611000000001302e-05, 2.8541999999999457e-05, 2.8277999999999637e-05, 2.8847000000001982e-05, 2.845899999999804e-05, 2.8818999999999373e-05, 2.8569000000002592e-05, 2.8832999999998943e-05, 2.8527999999999887e-05, 2.8832999999998943e-05, 2.8610999999997833e-05, 2.8486000000001177e-05, 2.8208000000001787e-05, 2.8848000000001456e-05, 2.8611000000001302e-05, 2.8513000000000843e-05, 2.8222000000001357e-05, 2.8541999999999457e-05, 2.8554999999999553e-05, 2.8848000000001456e-05, 2.8541999999999457e-05, 2.890199999999732e-05, 2.8540999999999983e-05, 2.8846999999998513e-05, 2.8236000000000927e-05, 2.8527999999999887e-05, 2.8846999999998513e-05, 2.819500000000169e-05, 2.8848000000001456e-05, 2.8527999999999887e-05, 2.8861000000001552e-05, 2.8556000000002496e-05, 2.8846999999998513e-05, 2.8236000000000927e-05, 2.8249999999997027e-05, 2.8527999999999887e-05, 2.8848000000001456e-05, 2.8612000000000776e-05, 2.8847999999997986e-05, 2.8236000000000927e-05, 2.8527999999999887e-05, 2.8540999999999983e-05, 2.8540999999999983e-05, 2.8222000000001357e-05]</msg>
<status status="PASS" starttime="20201030 15:52:59.943" endtime="20201030 15:52:59.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.938" endtime="20201030 15:52:59.946"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:59.949" endtime="20201030 15:52:59.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.948" endtime="20201030 15:52:59.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.947" endtime="20201030 15:52:59.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.584" endtime="20201030 15:52:59.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.583" endtime="20201030 15:52:59.970"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.979" endtime="20201030 15:52:59.995"></status>
</kw>
<msg timestamp="20201030 15:52:59.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.978" endtime="20201030 15:52:59.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.996" endtime="20201030 15:52:59.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.999" endtime="20201030 15:53:00.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.975" endtime="20201030 15:53:00.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.973" endtime="20201030 15:53:00.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.008" endtime="20201030 15:53:00.296"></status>
</kw>
<msg timestamp="20201030 15:53:00.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022174417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022204472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.006" endtime="20201030 15:53:00.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022174417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022204472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.300" endtime="20201030 15:53:00.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.308" endtime="20201030 15:53:00.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.004" endtime="20201030 15:53:00.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.002" endtime="20201030 15:53:00.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:00.315" level="INFO">${RESULT} = [{'diff': 3.0055000000001053e-05}, {'diff': 2.9097000000002232e-05}, {'diff': 2.9471999999999138e-05}, {'diff': 2.9806000000000277e-05}, {'diff': 2.9763999999998098e-05}, {'diff': 2.9457999999999568e-...</msg>
<status status="PASS" starttime="20201030 15:53:00.312" endtime="20201030 15:53:00.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:00.319" level="INFO">${ACCURACY} = {'diff': [3.0055000000001053e-05, 2.9097000000002232e-05, 2.9471999999999138e-05, 2.9806000000000277e-05, 2.9763999999998098e-05, 2.9457999999999568e-05, 2.9457999999999568e-05, 2.9763999999998098e-05...</msg>
<status status="PASS" starttime="20201030 15:53:00.316" endtime="20201030 15:53:00.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.324" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 15:53:00.323" endtime="20201030 15:53:00.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.326" level="INFO">VALUE: [3.0055000000001053e-05, 2.9097000000002232e-05, 2.9471999999999138e-05, 2.9806000000000277e-05, 2.9763999999998098e-05, 2.9457999999999568e-05, 2.9457999999999568e-05, 2.9763999999998098e-05, 2.9750000000001997e-05, 2.9472000000002607e-05, 2.9166000000000608e-05, 2.9471999999999138e-05, 2.9750000000001997e-05, 2.9777000000001663e-05, 2.9430000000000428e-05, 2.9749999999998528e-05, 2.9193999999999748e-05, 2.8875000000001122e-05, 2.969499999999972e-05, 2.9083000000002662e-05, 2.9764000000001567e-05, 2.9153000000000512e-05, 3.0069000000000623e-05, 2.9749999999998528e-05, 2.9735999999998958e-05, 2.9180000000000178e-05, 2.9443999999999998e-05, 2.944499999999947e-05, 2.9458000000003037e-05, 2.945899999999904e-05, 2.94309999999999e-05, 2.9763999999998098e-05, 2.9763999999998098e-05, 2.9750000000001997e-05, 2.9443999999999998e-05, 2.9472000000002607e-05, 2.9764000000001567e-05, 2.945899999999904e-05, 2.945900000000251e-05, 2.945899999999904e-05, 2.945900000000251e-05, 2.9153000000000512e-05, 2.945900000000251e-05, 2.94309999999999e-05, 2.9749999999998528e-05, 2.9124999999997903e-05, 2.9457999999999568e-05, 2.9749999999998528e-05, 2.9778000000001137e-05, 2.9457999999999568e-05]</msg>
<status status="PASS" starttime="20201030 15:53:00.325" endtime="20201030 15:53:00.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.320" endtime="20201030 15:53:00.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:00.331" endtime="20201030 15:53:00.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.330" endtime="20201030 15:53:00.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.328" endtime="20201030 15:53:00.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.971" endtime="20201030 15:53:00.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.971" endtime="20201030 15:53:00.352"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.361" endtime="20201030 15:53:00.377"></status>
</kw>
<msg timestamp="20201030 15:53:00.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.359" endtime="20201030 15:53:00.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.379" endtime="20201030 15:53:00.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.381" endtime="20201030 15:53:00.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.357" endtime="20201030 15:53:00.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.354" endtime="20201030 15:53:00.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.391" endtime="20201030 15:53:00.676"></status>
</kw>
<msg timestamp="20201030 15:53:00.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023013833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023045375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.389" endtime="20201030 15:53:00.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023013833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023045375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.680" endtime="20201030 15:53:00.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.689" endtime="20201030 15:53:00.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.386" endtime="20201030 15:53:00.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.385" endtime="20201030 15:53:00.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:00.695" level="INFO">${RESULT} = [{'diff': 3.154199999999899e-05}, {'diff': 3.097300000000011e-05}, {'diff': 3.068099999999768e-05}, {'diff': 3.0375000000002622e-05}, {'diff': 3.066699999999811e-05}, {'diff': 3.067999999999821e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:53:00.692" endtime="20201030 15:53:00.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:00.700" level="INFO">${ACCURACY} = {'diff': [3.154199999999899e-05, 3.097300000000011e-05, 3.068099999999768e-05, 3.0375000000002622e-05, 3.066699999999811e-05, 3.067999999999821e-05, 3.0375000000002622e-05, 3.0388999999998723e-05, 3.0...</msg>
<status status="PASS" starttime="20201030 15:53:00.696" endtime="20201030 15:53:00.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.704" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 15:53:00.703" endtime="20201030 15:53:00.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.707" level="INFO">VALUE: [3.154199999999899e-05, 3.097300000000011e-05, 3.068099999999768e-05, 3.0375000000002622e-05, 3.066699999999811e-05, 3.067999999999821e-05, 3.0375000000002622e-05, 3.0388999999998723e-05, 3.0360999999999583e-05, 3.068000000000168e-05, 3.070900000000029e-05, 3.0360999999999583e-05, 3.067999999999821e-05, 3.0374999999999153e-05, 3.0360999999999583e-05, 3.069399999999778e-05, 3.0360999999999583e-05, 3.069400000000125e-05, 3.069400000000125e-05, 3.0389000000002192e-05, 3.066699999999811e-05, 3.0388999999998723e-05, 3.0389000000002192e-05, 3.066599999999864e-05, 3.070900000000029e-05, 3.0291999999997737e-05, 3.0388999999998723e-05, 3.0360999999999583e-05, 3.0360999999999583e-05, 3.06379999999995e-05, 3.0374999999999153e-05, 3.068100000000115e-05, 3.069500000000072e-05, 3.06249999999994e-05, 3.0362000000002526e-05, 3.066600000000211e-05, 3.0375000000002622e-05, 3.067999999999821e-05, 3.068100000000115e-05, 3.0305000000001303e-05, 3.068099999999768e-05, 3.0389000000002192e-05, 3.0360999999999583e-05, 3.070800000000082e-05, 3.068000000000168e-05, 3.059700000000026e-05, 3.0388999999998723e-05, 3.066700000000158e-05, 3.0347000000000013e-05, 3.0431000000000902e-05]</msg>
<status status="PASS" starttime="20201030 15:53:00.705" endtime="20201030 15:53:00.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.700" endtime="20201030 15:53:00.709"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:00.712" endtime="20201030 15:53:00.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.711" endtime="20201030 15:53:00.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.710" endtime="20201030 15:53:00.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.353" endtime="20201030 15:53:00.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.352" endtime="20201030 15:53:00.733"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.742" endtime="20201030 15:53:00.758"></status>
</kw>
<msg timestamp="20201030 15:53:00.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.740" endtime="20201030 15:53:00.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.759" endtime="20201030 15:53:00.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.762" endtime="20201030 15:53:00.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.738" endtime="20201030 15:53:00.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.736" endtime="20201030 15:53:00.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.771" endtime="20201030 15:53:01.059"></status>
</kw>
<msg timestamp="20201030 15:53:01.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021976528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022009319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.769" endtime="20201030 15:53:01.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021976528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022009319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.063" endtime="20201030 15:53:01.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.071" endtime="20201030 15:53:01.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.767" endtime="20201030 15:53:01.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.765" endtime="20201030 15:53:01.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:01.078" level="INFO">${RESULT} = [{'diff': 3.2791000000000764e-05}, {'diff': 3.129199999999874e-05}, {'diff': 3.133300000000144e-05}, {'diff': 3.190200000000032e-05}, {'diff': 3.158400000000117e-05}, {'diff': 3.130600000000178e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:53:01.075" endtime="20201030 15:53:01.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:01.083" level="INFO">${ACCURACY} = {'diff': [3.2791000000000764e-05, 3.129199999999874e-05, 3.133300000000144e-05, 3.190200000000032e-05, 3.158400000000117e-05, 3.130600000000178e-05, 3.131900000000187e-05, 3.158300000000169e-05, 3.154...</msg>
<status status="PASS" starttime="20201030 15:53:01.079" endtime="20201030 15:53:01.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.088" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 15:53:01.086" endtime="20201030 15:53:01.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.090" level="INFO">VALUE: [3.2791000000000764e-05, 3.129199999999874e-05, 3.133300000000144e-05, 3.190200000000032e-05, 3.158400000000117e-05, 3.130600000000178e-05, 3.131900000000187e-05, 3.158300000000169e-05, 3.1540999999999514e-05, 3.129200000000221e-05, 3.194399999999903e-05, 3.1596999999997794e-05, 3.188900000000022e-05, 3.15700000000016e-05, 3.125000000000003e-05, 3.159700000000126e-05, 3.127799999999917e-05, 3.159700000000126e-05, 3.15700000000016e-05, 3.12639999999996e-05, 3.122199999999742e-05, 3.161100000000083e-05, 3.129199999999874e-05, 3.155500000000255e-05, 3.1290999999999264e-05, 3.1596999999997794e-05, 3.1582999999998224e-05, 3.161100000000083e-05, 3.1596999999997794e-05, 3.129200000000221e-05, 3.1596999999997794e-05, 3.127799999999917e-05, 3.1598000000000737e-05, 3.127799999999917e-05, 3.129199999999874e-05, 3.187499999999718e-05, 3.129199999999874e-05, 3.16250000000004e-05, 3.158400000000117e-05, 3.136100000000058e-05, 3.159700000000126e-05, 3.161100000000083e-05, 3.129199999999874e-05, 3.159700000000126e-05, 3.188800000000075e-05, 3.186100000000108e-05, 3.13050000000023e-05, 3.129199999999874e-05, 3.156999999999813e-05, 3.1596999999997794e-05]</msg>
<status status="PASS" starttime="20201030 15:53:01.089" endtime="20201030 15:53:01.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.084" endtime="20201030 15:53:01.091"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:01.095" endtime="20201030 15:53:01.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.093" endtime="20201030 15:53:01.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.092" endtime="20201030 15:53:01.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.734" endtime="20201030 15:53:01.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.733" endtime="20201030 15:53:01.116"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.125" endtime="20201030 15:53:01.141"></status>
</kw>
<msg timestamp="20201030 15:53:01.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.123" endtime="20201030 15:53:01.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.143" endtime="20201030 15:53:01.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.145" endtime="20201030 15:53:01.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.120" endtime="20201030 15:53:01.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.118" endtime="20201030 15:53:01.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.154" endtime="20201030 15:53:01.442"></status>
</kw>
<msg timestamp="20201030 15:53:01.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022190625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022232708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.153" endtime="20201030 15:53:01.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022190625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022232708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.446" endtime="20201030 15:53:01.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.455" endtime="20201030 15:53:01.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.150" endtime="20201030 15:53:01.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.148" endtime="20201030 15:53:01.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:01.461" level="INFO">${RESULT} = [{'diff': 4.2083000000001786e-05}, {'diff': 4.170799999999794e-05}, {'diff': 4.2375000000000745e-05}, {'diff': 4.2277000000000287e-05}, {'diff': 4.21799999999993e-05}, {'diff': 4.219399999999887e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:01.458" endtime="20201030 15:53:01.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:01.466" level="INFO">${ACCURACY} = {'diff': [4.2083000000001786e-05, 4.170799999999794e-05, 4.2375000000000745e-05, 4.2277000000000287e-05, 4.21799999999993e-05, 4.219399999999887e-05, 4.242999999999955e-05, 4.2554999999999676e-05, 4.2...</msg>
<status status="PASS" starttime="20201030 15:53:01.462" endtime="20201030 15:53:01.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.470" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 15:53:01.469" endtime="20201030 15:53:01.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.473" level="INFO">VALUE: [4.2083000000001786e-05, 4.170799999999794e-05, 4.2375000000000745e-05, 4.2277000000000287e-05, 4.21799999999993e-05, 4.219399999999887e-05, 4.242999999999955e-05, 4.2554999999999676e-05, 4.2555000000003146e-05, 4.244400000000259e-05, 4.2568999999999246e-05, 4.242999999999955e-05, 4.2347000000001606e-05, 4.2318999999998996e-05, 4.251400000000044e-05, 4.2333000000002036e-05, 4.242999999999955e-05, 4.24860000000013e-05, 4.2541000000000107e-05, 4.2416999999999455e-05, 4.256999999999872e-05, 4.2416999999999455e-05, 4.2277000000000287e-05, 4.2194999999998345e-05, 4.2166999999999205e-05, 4.2181000000002244e-05, 4.230600000000237e-05, 4.2611000000001426e-05, 4.232000000000194e-05, 4.2347000000001606e-05, 4.234800000000108e-05, 4.257000000000219e-05, 4.233400000000151e-05, 4.251400000000044e-05, 4.19999999999969e-05, 4.1959000000001134e-05, 4.2152999999999635e-05, 4.16799999999988e-05, 4.225000000000062e-05, 4.250000000000087e-05, 4.215200000000016e-05, 4.238800000000084e-05, 4.2610999999997956e-05, 4.2402999999999885e-05, 4.2610999999997956e-05, 4.223599999999758e-05, 4.24860000000013e-05, 4.2167000000002675e-05, 4.1597000000000856e-05, 4.2333000000002036e-05]</msg>
<status status="PASS" starttime="20201030 15:53:01.471" endtime="20201030 15:53:01.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.466" endtime="20201030 15:53:01.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:01.480" endtime="20201030 15:53:01.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.478" endtime="20201030 15:53:01.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.476" endtime="20201030 15:53:01.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.117" endtime="20201030 15:53:01.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.116" endtime="20201030 15:53:01.504"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.518" endtime="20201030 15:53:01.536"></status>
</kw>
<msg timestamp="20201030 15:53:01.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.515" endtime="20201030 15:53:01.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.538" endtime="20201030 15:53:01.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.541" endtime="20201030 15:53:01.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.512" endtime="20201030 15:53:01.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.509" endtime="20201030 15:53:01.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.554" endtime="20201030 15:53:01.840"></status>
</kw>
<msg timestamp="20201030 15:53:01.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031776528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031819819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.551" endtime="20201030 15:53:01.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031776528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031819819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.844" endtime="20201030 15:53:01.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.852" endtime="20201030 15:53:01.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.548" endtime="20201030 15:53:01.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.546" endtime="20201030 15:53:01.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:01.859" level="INFO">${RESULT} = [{'diff': 4.3291000000000857e-05}, {'diff': 4.365199999999819e-05}, {'diff': 4.3638999999998096e-05}, {'diff': 4.3487000000001774e-05}, {'diff': 4.3291000000000857e-05}, {'diff': 4.354200000000058e-05...</msg>
<status status="PASS" starttime="20201030 15:53:01.856" endtime="20201030 15:53:01.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:01.863" level="INFO">${ACCURACY} = {'diff': [4.3291000000000857e-05, 4.365199999999819e-05, 4.3638999999998096e-05, 4.3487000000001774e-05, 4.3291000000000857e-05, 4.354200000000058e-05, 4.272199999999504e-05, 4.2959000000002134e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:53:01.860" endtime="20201030 15:53:01.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.868" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 15:53:01.867" endtime="20201030 15:53:01.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.873" level="INFO">VALUE: [4.3291000000000857e-05, 4.365199999999819e-05, 4.3638999999998096e-05, 4.3487000000001774e-05, 4.3291000000000857e-05, 4.354200000000058e-05, 4.272199999999504e-05, 4.2959000000002134e-05, 4.358399999999929e-05, 4.3209000000002384e-05, 4.327800000000076e-05, 4.355499999999374e-05, 4.365199999999819e-05, 4.325000000000162e-05, 4.351300000000197e-05, 4.3291000000000857e-05, 4.3360999999998706e-05, 4.343000000000402e-05, 4.3346999999999136e-05, 4.322200000000248e-05, 4.2652999999996666e-05, 4.351400000000144e-05, 4.268000000000327e-05, 4.268000000000327e-05, 4.3305000000000426e-05, 4.327800000000076e-05, 4.34860000000023e-05, 4.3569000000000246e-05, 4.3596999999999386e-05, 4.3167000000003675e-05, 4.3152999999997166e-05, 4.322200000000248e-05, 4.350000000000187e-05, 4.3360999999998706e-05, 4.34860000000023e-05, 4.33059999999999e-05, 4.333400000000598e-05, 4.327800000000076e-05, 4.3124999999998026e-05, 4.354200000000058e-05, 4.350000000000187e-05, 4.35139999999945e-05, 4.3209000000002384e-05, 4.3610999999998956e-05, 4.333400000000598e-05, 4.329200000000033e-05, 4.3236999999994585e-05, 4.295800000000266e-05, 4.3596999999999386e-05, 4.26660000000037e-05]</msg>
<status status="PASS" starttime="20201030 15:53:01.869" endtime="20201030 15:53:01.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.864" endtime="20201030 15:53:01.875"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:01.879" endtime="20201030 15:53:01.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.877" endtime="20201030 15:53:01.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.876" endtime="20201030 15:53:01.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.506" endtime="20201030 15:53:01.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.505" endtime="20201030 15:53:01.900"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.909" endtime="20201030 15:53:01.925"></status>
</kw>
<msg timestamp="20201030 15:53:01.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.907" endtime="20201030 15:53:01.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.927" endtime="20201030 15:53:01.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.929" endtime="20201030 15:53:01.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.904" endtime="20201030 15:53:01.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.902" endtime="20201030 15:53:01.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.939" endtime="20201030 15:53:02.226"></status>
</kw>
<msg timestamp="20201030 15:53:02.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022202653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022246486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.938" endtime="20201030 15:53:02.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022202653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022246486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.230" endtime="20201030 15:53:02.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.238" endtime="20201030 15:53:02.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.935" endtime="20201030 15:53:02.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.933" endtime="20201030 15:53:02.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:02.245" level="INFO">${RESULT} = [{'diff': 4.3833000000000066e-05}, {'diff': 4.4569000000001247e-05}, {'diff': 4.4347000000000136e-05}, {'diff': 4.4153000000001635e-05}, {'diff': 4.4333000000000566e-05}, {'diff': 4.375000000000212e-0...</msg>
<status status="PASS" starttime="20201030 15:53:02.242" endtime="20201030 15:53:02.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:02.250" level="INFO">${ACCURACY} = {'diff': [4.3833000000000066e-05, 4.4569000000001247e-05, 4.4347000000000136e-05, 4.4153000000001635e-05, 4.4333000000000566e-05, 4.375000000000212e-05, 4.426400000000219e-05, 4.422200000000001e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:53:02.246" endtime="20201030 15:53:02.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.255" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 15:53:02.253" endtime="20201030 15:53:02.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.257" level="INFO">VALUE: [4.3833000000000066e-05, 4.4569000000001247e-05, 4.4347000000000136e-05, 4.4153000000001635e-05, 4.4333000000000566e-05, 4.375000000000212e-05, 4.426400000000219e-05, 4.422200000000001e-05, 4.427799999999829e-05, 4.452800000000201e-05, 4.422200000000001e-05, 4.3667000000000705e-05, 4.4389000000002315e-05, 4.432000000000047e-05, 4.458400000000029e-05, 4.3708999999999415e-05, 4.4417000000001455e-05, 4.4152999999998166e-05, 4.4445000000000595e-05, 4.426399999999872e-05, 4.443000000000155e-05, 4.452699999999907e-05, 4.445800000000069e-05, 4.423599999999958e-05, 4.419400000000087e-05, 4.44999999999994e-05, 4.3639000000001565e-05, 4.422200000000001e-05, 4.370799999999994e-05, 4.425000000000262e-05, 4.4402999999998416e-05, 4.452800000000201e-05, 4.395800000000019e-05, 4.420800000000044e-05, 4.429200000000133e-05, 4.429200000000133e-05, 4.420800000000044e-05, 4.3681000000000275e-05, 4.420799999999697e-05, 4.3681000000000275e-05, 4.422200000000001e-05, 4.3639000000001565e-05, 4.4638999999999096e-05, 4.459699999999692e-05, 4.4416999999997986e-05, 4.372199999999951e-05, 4.4459000000000165e-05, 4.454200000000158e-05, 4.4360999999999706e-05, 4.4153000000001635e-05]</msg>
<status status="PASS" starttime="20201030 15:53:02.256" endtime="20201030 15:53:02.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.251" endtime="20201030 15:53:02.258"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:02.262" endtime="20201030 15:53:02.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.261" endtime="20201030 15:53:02.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.259" endtime="20201030 15:53:02.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.901" endtime="20201030 15:53:02.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.900" endtime="20201030 15:53:02.283"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.292" endtime="20201030 15:53:02.308"></status>
</kw>
<msg timestamp="20201030 15:53:02.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.290" endtime="20201030 15:53:02.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.310" endtime="20201030 15:53:02.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.312" endtime="20201030 15:53:02.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.288" endtime="20201030 15:53:02.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.285" endtime="20201030 15:53:02.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.321" endtime="20201030 15:53:02.609"></status>
</kw>
<msg timestamp="20201030 15:53:02.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022552222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.320" endtime="20201030 15:53:02.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022552222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.613" endtime="20201030 15:53:02.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.621" endtime="20201030 15:53:02.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.317" endtime="20201030 15:53:02.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.316" endtime="20201030 15:53:02.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:02.628" level="INFO">${RESULT} = [{'diff': 4.58199999999985e-05}, {'diff': 4.5138999999999596e-05}, {'diff': 4.525000000000015e-05}, {'diff': 4.558299999999835e-05}, {'diff': 4.525000000000015e-05}, {'diff': 4.544400000000212e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:02.625" endtime="20201030 15:53:02.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:02.632" level="INFO">${ACCURACY} = {'diff': [4.58199999999985e-05, 4.5138999999999596e-05, 4.525000000000015e-05, 4.558299999999835e-05, 4.525000000000015e-05, 4.544400000000212e-05, 4.527799999999929e-05, 4.5430999999998556e-05, 4.538...</msg>
<status status="PASS" starttime="20201030 15:53:02.629" endtime="20201030 15:53:02.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.637" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 15:53:02.636" endtime="20201030 15:53:02.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.639" level="INFO">VALUE: [4.58199999999985e-05, 4.5138999999999596e-05, 4.525000000000015e-05, 4.558299999999835e-05, 4.525000000000015e-05, 4.544400000000212e-05, 4.527799999999929e-05, 4.5430999999998556e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.547200000000126e-05, 4.532000000000147e-05, 4.472199999999704e-05, 4.5167000000002205e-05, 4.5597000000001386e-05, 4.532000000000147e-05, 4.472199999999704e-05, 4.5139000000003066e-05, 4.53060000000019e-05, 4.5444999999998126e-05, 4.5361000000000706e-05, 4.554200000000258e-05, 4.523600000000058e-05, 4.536200000000018e-05, 4.534800000000061e-05, 4.5223000000000485e-05, 4.519400000000187e-05, 4.5111000000000456e-05, 4.522200000000101e-05, 4.516599999999926e-05, 4.473599999999661e-05, 4.5569000000002247e-05, 4.516599999999926e-05, 4.525000000000015e-05, 4.552700000000007e-05, 4.5416999999998986e-05, 4.545800000000169e-05, 4.529199999999886e-05, 4.5361000000000706e-05, 4.532000000000147e-05, 4.547199999999779e-05, 4.551399999999997e-05, 4.525000000000015e-05, 4.470799999999747e-05, 4.542999999999908e-05, 4.4624999999999526e-05, 4.4666999999998236e-05, 4.547200000000126e-05, 4.5125000000000026e-05, 4.470800000000094e-05]</msg>
<status status="PASS" starttime="20201030 15:53:02.638" endtime="20201030 15:53:02.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.633" endtime="20201030 15:53:02.640"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:02.644" endtime="20201030 15:53:02.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.643" endtime="20201030 15:53:02.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.641" endtime="20201030 15:53:02.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.284" endtime="20201030 15:53:02.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.283" endtime="20201030 15:53:02.665"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.674" endtime="20201030 15:53:02.691"></status>
</kw>
<msg timestamp="20201030 15:53:02.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.672" endtime="20201030 15:53:02.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.692" endtime="20201030 15:53:02.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.695" endtime="20201030 15:53:02.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.670" endtime="20201030 15:53:02.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.667" endtime="20201030 15:53:02.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.704" endtime="20201030 15:53:02.990"></status>
</kw>
<msg timestamp="20201030 15:53:02.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022904833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022950653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.702" endtime="20201030 15:53:02.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022904833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022950653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.995" endtime="20201030 15:53:03.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.003" endtime="20201030 15:53:03.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.700" endtime="20201030 15:53:03.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.698" endtime="20201030 15:53:03.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:03.010" level="INFO">${RESULT} = [{'diff': 4.582000000000197e-05}, {'diff': 4.638899999999738e-05}, {'diff': 4.6319999999999e-05}, {'diff': 4.625000000000115e-05}, {'diff': 4.6458999999998696e-05}, {'diff': 4.6403000000000416e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:03.006" endtime="20201030 15:53:03.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:03.014" level="INFO">${ACCURACY} = {'diff': [4.582000000000197e-05, 4.638899999999738e-05, 4.6319999999999e-05, 4.625000000000115e-05, 4.6458999999998696e-05, 4.6403000000000416e-05, 4.6625000000001526e-05, 4.652800000000054e-05, 4.630...</msg>
<status status="PASS" starttime="20201030 15:53:03.011" endtime="20201030 15:53:03.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.018" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 15:53:03.017" endtime="20201030 15:53:03.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.021" level="INFO">VALUE: [4.582000000000197e-05, 4.638899999999738e-05, 4.6319999999999e-05, 4.625000000000115e-05, 4.6458999999998696e-05, 4.6403000000000416e-05, 4.6625000000001526e-05, 4.652800000000054e-05, 4.630599999999943e-05, 4.632000000000247e-05, 4.6153000000000166e-05, 4.6430999999999556e-05, 4.616600000000026e-05, 4.626400000000072e-05, 4.630499999999996e-05, 4.65000000000014e-05, 4.652700000000107e-05, 4.613800000000112e-05, 4.565200000000019e-05, 4.630499999999996e-05, 4.643000000000008e-05, 4.575000000000065e-05, 4.615200000000069e-05, 4.5666999999999236e-05, 4.647199999999879e-05, 4.625000000000115e-05, 4.5611000000000956e-05, 4.623599999999811e-05, 4.644399999999965e-05, 4.567999999999933e-05, 4.622200000000201e-05, 4.6611000000001956e-05, 4.655599999999968e-05, 4.647200000000226e-05, 4.597200000000176e-05, 4.623599999999811e-05, 4.627800000000029e-05, 4.657000000000272e-05, 4.648600000000183e-05, 4.656999999999925e-05, 4.637499999999781e-05, 4.648599999999836e-05, 4.648599999999836e-05, 4.6430999999999556e-05, 4.6139000000000596e-05, 4.6459000000002165e-05, 4.6459000000002165e-05, 4.652700000000107e-05, 4.6403000000000416e-05, 4.665200000000119e-05]</msg>
<status status="PASS" starttime="20201030 15:53:03.019" endtime="20201030 15:53:03.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.015" endtime="20201030 15:53:03.023"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:03.027" endtime="20201030 15:53:03.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.025" endtime="20201030 15:53:03.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.024" endtime="20201030 15:53:03.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.666" endtime="20201030 15:53:03.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.665" endtime="20201030 15:53:03.048"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.056" endtime="20201030 15:53:03.073"></status>
</kw>
<msg timestamp="20201030 15:53:03.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.055" endtime="20201030 15:53:03.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.075" endtime="20201030 15:53:03.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.077" endtime="20201030 15:53:03.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.052" endtime="20201030 15:53:03.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.050" endtime="20201030 15:53:03.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.087" endtime="20201030 15:53:03.374"></status>
</kw>
<msg timestamp="20201030 15:53:03.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022062111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022109417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.085" endtime="20201030 15:53:03.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022062111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022109417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.379" endtime="20201030 15:53:03.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.387" endtime="20201030 15:53:03.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.082" endtime="20201030 15:53:03.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.081" endtime="20201030 15:53:03.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:03.394" level="INFO">${RESULT} = [{'diff': 4.730600000000043e-05}, {'diff': 4.752800000000154e-05}, {'diff': 4.733399999999957e-05}, {'diff': 4.7431000000000556e-05}, {'diff': 4.75000000000024e-05}, {'diff': 4.724999999999868e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:03.390" endtime="20201030 15:53:03.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:03.399" level="INFO">${ACCURACY} = {'diff': [4.730600000000043e-05, 4.752800000000154e-05, 4.733399999999957e-05, 4.7431000000000556e-05, 4.75000000000024e-05, 4.724999999999868e-05, 4.6667000000000236e-05, 4.7431000000000556e-05, 4.74...</msg>
<status status="PASS" starttime="20201030 15:53:03.395" endtime="20201030 15:53:03.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.403" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 15:53:03.402" endtime="20201030 15:53:03.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.406" level="INFO">VALUE: [4.730600000000043e-05, 4.752800000000154e-05, 4.733399999999957e-05, 4.7431000000000556e-05, 4.75000000000024e-05, 4.724999999999868e-05, 4.6667000000000236e-05, 4.7431000000000556e-05, 4.749999999999893e-05, 4.745800000000022e-05, 4.745799999999675e-05, 4.751299999999903e-05, 4.66939999999999e-05, 4.740200000000194e-05, 4.75139999999985e-05, 4.747199999999979e-05, 4.75139999999985e-05, 4.748599999999936e-05, 4.761099999999949e-05, 4.730499999999749e-05, 4.763899999999863e-05, 4.66939999999999e-05, 4.6680999999999806e-05, 4.727800000000129e-05, 4.748599999999936e-05, 4.759699999999992e-05, 4.76529999999982e-05, 4.726400000000172e-05, 4.7389000000001846e-05, 4.7153000000001166e-05, 4.754200000000111e-05, 4.738899999999838e-05, 4.6708999999998946e-05, 4.755600000000068e-05, 4.6709000000002415e-05, 4.730600000000043e-05, 4.663899999999763e-05, 4.720799999999997e-05, 4.7361000000002706e-05, 4.758399999999982e-05, 4.731900000000053e-05, 4.758399999999982e-05, 4.658399999999882e-05, 4.744400000000065e-05, 4.668000000000033e-05, 4.756900000000078e-05, 4.730500000000096e-05, 4.7375000000002276e-05, 4.724999999999868e-05, 4.744400000000065e-05]</msg>
<status status="PASS" starttime="20201030 15:53:03.404" endtime="20201030 15:53:03.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.400" endtime="20201030 15:53:03.407"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:03.411" endtime="20201030 15:53:03.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.409" endtime="20201030 15:53:03.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.408" endtime="20201030 15:53:03.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.049" endtime="20201030 15:53:03.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.048" endtime="20201030 15:53:03.431"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.440" endtime="20201030 15:53:03.457"></status>
</kw>
<msg timestamp="20201030 15:53:03.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.439" endtime="20201030 15:53:03.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.459" endtime="20201030 15:53:03.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.461" endtime="20201030 15:53:03.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.436" endtime="20201030 15:53:03.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.434" endtime="20201030 15:53:03.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.470" endtime="20201030 15:53:03.758"></status>
</kw>
<msg timestamp="20201030 15:53:03.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022105292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022153667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.469" endtime="20201030 15:53:03.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022105292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022153667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.762" endtime="20201030 15:53:03.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.770" endtime="20201030 15:53:03.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.466" endtime="20201030 15:53:03.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.464" endtime="20201030 15:53:03.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:03.777" level="INFO">${RESULT} = [{'diff': 4.837499999999981e-05}, {'diff': 4.861100000000049e-05}, {'diff': 4.8223000000000016e-05}, {'diff': 4.838899999999938e-05}, {'diff': 4.849999999999993e-05}, {'diff': 4.858300000000135e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:53:03.773" endtime="20201030 15:53:03.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:03.781" level="INFO">${ACCURACY} = {'diff': [4.837499999999981e-05, 4.861100000000049e-05, 4.8223000000000016e-05, 4.838899999999938e-05, 4.849999999999993e-05, 4.858300000000135e-05, 4.834800000000014e-05, 4.856900000000178e-05, 4.841...</msg>
<status status="PASS" starttime="20201030 15:53:03.778" endtime="20201030 15:53:03.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.785" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 15:53:03.784" endtime="20201030 15:53:03.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.788" level="INFO">VALUE: [4.837499999999981e-05, 4.861100000000049e-05, 4.8223000000000016e-05, 4.838899999999938e-05, 4.849999999999993e-05, 4.858300000000135e-05, 4.834800000000014e-05, 4.856900000000178e-05, 4.841699999999852e-05, 4.855499999999874e-05, 4.81940000000014e-05, 4.81940000000014e-05, 4.8389000000002846e-05, 4.766600000000176e-05, 4.76940000000009e-05, 4.856900000000178e-05, 4.841699999999852e-05, 4.829200000000186e-05, 4.840299999999895e-05, 4.759699999999992e-05, 4.848600000000036e-05, 4.824999999999968e-05, 4.81529999999987e-05, 4.8153000000002166e-05, 4.774999999999918e-05, 4.862500000000006e-05, 4.826399999999925e-05, 4.822199999999707e-05, 4.854200000000211e-05, 4.840299999999895e-05, 4.81529999999987e-05, 4.76529999999982e-05, 4.863899999999963e-05, 4.8445000000001126e-05, 4.766699999999777e-05, 4.8459000000000696e-05, 4.827699999999935e-05, 4.8194999999997407e-05, 4.862500000000006e-05, 4.8486999999999836e-05, 4.767999999999786e-05, 4.826399999999925e-05, 4.765199999999872e-05, 4.856900000000178e-05, 4.842999999999861e-05, 4.822199999999707e-05, 4.820800000000097e-05, 4.855599999999821e-05, 4.855499999999874e-05, 4.831900000000153e-05]</msg>
<status status="PASS" starttime="20201030 15:53:03.787" endtime="20201030 15:53:03.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.782" endtime="20201030 15:53:03.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:03.793" endtime="20201030 15:53:03.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.791" endtime="20201030 15:53:03.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.790" endtime="20201030 15:53:03.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.432" endtime="20201030 15:53:03.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.432" endtime="20201030 15:53:03.814"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.822" endtime="20201030 15:53:03.840"></status>
</kw>
<msg timestamp="20201030 15:53:03.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.821" endtime="20201030 15:53:03.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.842" endtime="20201030 15:53:03.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.844" endtime="20201030 15:53:03.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.818" endtime="20201030 15:53:03.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.816" endtime="20201030 15:53:03.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.853" endtime="20201030 15:53:04.141"></status>
</kw>
<msg timestamp="20201030 15:53:04.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023029028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023078264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.852" endtime="20201030 15:53:04.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023029028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023078264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.145" endtime="20201030 15:53:04.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.153" endtime="20201030 15:53:04.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.849" endtime="20201030 15:53:04.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.847" endtime="20201030 15:53:04.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:04.160" level="INFO">${RESULT} = [{'diff': 4.923600000000111e-05}, {'diff': 4.931999999999853e-05}, {'diff': 4.918099999999884e-05}, {'diff': 4.9320000000002e-05}, {'diff': 4.925000000000068e-05}, {'diff': 4.931999999999853e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:04.157" endtime="20201030 15:53:04.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:04.164" level="INFO">${ACCURACY} = {'diff': [4.923600000000111e-05, 4.931999999999853e-05, 4.918099999999884e-05, 4.9320000000002e-05, 4.925000000000068e-05, 4.931999999999853e-05, 4.86529999999992e-05, 4.952800000000007e-05, 4.8653000...</msg>
<status status="PASS" starttime="20201030 15:53:04.161" endtime="20201030 15:53:04.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.169" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 15:53:04.168" endtime="20201030 15:53:04.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.171" level="INFO">VALUE: [4.923600000000111e-05, 4.931999999999853e-05, 4.918099999999884e-05, 4.9320000000002e-05, 4.925000000000068e-05, 4.931999999999853e-05, 4.86529999999992e-05, 4.952800000000007e-05, 4.8653000000002666e-05, 4.942999999999961e-05, 4.870800000000147e-05, 4.931999999999853e-05, 4.872199999999757e-05, 4.958299999999888e-05, 4.956899999999931e-05, 4.866600000000276e-05, 4.940299999999995e-05, 4.862500000000006e-05, 4.919399999999893e-05, 4.927799999999982e-05, 4.941699999999952e-05, 4.956899999999931e-05, 4.958299999999888e-05, 4.956899999999931e-05, 4.951399999999703e-05, 4.947199999999832e-05, 4.937500000000081e-05, 4.9431000000002556e-05, 4.91940000000024e-05, 4.933400000000157e-05, 4.923600000000111e-05, 4.962500000000106e-05, 4.931899999999906e-05, 4.918099999999884e-05, 4.933400000000157e-05, 4.9209000000001446e-05, 4.937500000000081e-05, 4.863899999999963e-05, 4.941699999999952e-05, 4.945800000000222e-05, 4.941699999999952e-05, 4.8709000000000946e-05, 4.9209000000001446e-05, 4.938900000000038e-05, 4.916599999999979e-05, 4.945799999999875e-05, 4.919399999999893e-05, 4.866599999999929e-05, 4.897200000000129e-05, 4.923600000000111e-05]</msg>
<status status="PASS" starttime="20201030 15:53:04.170" endtime="20201030 15:53:04.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.165" endtime="20201030 15:53:04.173"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:04.177" endtime="20201030 15:53:04.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.176" endtime="20201030 15:53:04.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.174" endtime="20201030 15:53:04.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.815" endtime="20201030 15:53:04.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.814" endtime="20201030 15:53:04.198"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.207" endtime="20201030 15:53:04.224"></status>
</kw>
<msg timestamp="20201030 15:53:04.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.205" endtime="20201030 15:53:04.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.226" endtime="20201030 15:53:04.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.228" endtime="20201030 15:53:04.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.202" endtime="20201030 15:53:04.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.200" endtime="20201030 15:53:04.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.237" endtime="20201030 15:53:04.523"></status>
</kw>
<msg timestamp="20201030 15:53:04.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022463778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022514319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.236" endtime="20201030 15:53:04.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022463778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022514319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.527" endtime="20201030 15:53:04.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.535" endtime="20201030 15:53:04.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.233" endtime="20201030 15:53:04.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.231" endtime="20201030 15:53:04.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:04.542" level="INFO">${RESULT} = [{'diff': 5.054100000000117e-05}, {'diff': 4.966600000000029e-05}, {'diff': 5.05409999999977e-05}, {'diff': 4.9707999999999e-05}, {'diff': 5.056900000000031e-05}, {'diff': 5.061099999999902e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:53:04.538" endtime="20201030 15:53:04.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:04.547" level="INFO">${ACCURACY} = {'diff': [5.054100000000117e-05, 4.966600000000029e-05, 5.05409999999977e-05, 4.9707999999999e-05, 5.056900000000031e-05, 5.061099999999902e-05, 4.96530000000002e-05, 5.03469999999992e-05, 5.015299999...</msg>
<status status="PASS" starttime="20201030 15:53:04.543" endtime="20201030 15:53:04.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.551" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 15:53:04.550" endtime="20201030 15:53:04.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.554" level="INFO">VALUE: [5.054100000000117e-05, 4.966600000000029e-05, 5.05409999999977e-05, 4.9707999999999e-05, 5.056900000000031e-05, 5.061099999999902e-05, 4.96530000000002e-05, 5.03469999999992e-05, 5.015299999999723e-05, 5.027799999999735e-05, 5.030500000000049e-05, 5.055500000000074e-05, 4.96530000000002e-05, 5.043100000000009e-05, 5.043100000000009e-05, 4.962499999999759e-05, 5.037499999999834e-05, 5.031900000000006e-05, 4.969499999999891e-05, 5.048600000000236e-05, 5.01530000000007e-05, 5.036099999999877e-05, 5.011099999999852e-05, 4.962500000000106e-05, 4.9722999999998047e-05, 5.041700000000052e-05, 5.044400000000018e-05, 5.059799999999892e-05, 5.0637999999998684e-05, 5.031999999999953e-05, 5.022200000000254e-05, 5.018000000000036e-05, 5.056900000000031e-05, 4.966600000000029e-05, 4.998600000000186e-05, 5.048599999999889e-05, 5.026400000000125e-05, 5.051399999999803e-05, 5.038899999999791e-05, 5.041600000000104e-05, 4.9723000000001516e-05, 5.0222999999998547e-05, 5.05140000000015e-05, 5.048599999999889e-05, 5.045799999999975e-05, 4.977700000000085e-05, 5.030599999999996e-05, 5.023600000000211e-05, 5.036099999999877e-05, 5.038900000000138e-05]</msg>
<status status="PASS" starttime="20201030 15:53:04.552" endtime="20201030 15:53:04.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.548" endtime="20201030 15:53:04.555"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:04.559" endtime="20201030 15:53:04.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.557" endtime="20201030 15:53:04.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.556" endtime="20201030 15:53:04.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.199" endtime="20201030 15:53:04.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.198" endtime="20201030 15:53:04.580"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.588" endtime="20201030 15:53:04.605"></status>
</kw>
<msg timestamp="20201030 15:53:04.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.587" endtime="20201030 15:53:04.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.607" endtime="20201030 15:53:04.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.609" endtime="20201030 15:53:04.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.584" endtime="20201030 15:53:04.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.582" endtime="20201030 15:53:04.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.620" endtime="20201030 15:53:04.907"></status>
</kw>
<msg timestamp="20201030 15:53:04.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022306819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022358264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.619" endtime="20201030 15:53:04.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022306819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022358264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.912" endtime="20201030 15:53:04.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.920" endtime="20201030 15:53:04.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.616" endtime="20201030 15:53:04.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.614" endtime="20201030 15:53:04.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:04.927" level="INFO">${RESULT} = [{'diff': 5.144500000000066e-05}, {'diff': 5.1193999999997464e-05}, {'diff': 5.149999999999946e-05}, {'diff': 5.155500000000174e-05}, {'diff': 5.15409999999987e-05}, {'diff': 5.0637999999998684e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:53:04.923" endtime="20201030 15:53:04.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:04.931" level="INFO">${ACCURACY} = {'diff': [5.144500000000066e-05, 5.1193999999997464e-05, 5.149999999999946e-05, 5.155500000000174e-05, 5.15409999999987e-05, 5.0637999999998684e-05, 5.124999999999921e-05, 5.1165999999998324e-05, 5.06...</msg>
<status status="PASS" starttime="20201030 15:53:04.927" endtime="20201030 15:53:04.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.935" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 15:53:04.934" endtime="20201030 15:53:04.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.938" level="INFO">VALUE: [5.144500000000066e-05, 5.1193999999997464e-05, 5.149999999999946e-05, 5.155500000000174e-05, 5.15409999999987e-05, 5.0637999999998684e-05, 5.124999999999921e-05, 5.1165999999998324e-05, 5.063900000000163e-05, 5.066600000000129e-05, 5.12080000000005e-05, 5.147200000000032e-05, 5.158300000000088e-05, 5.158299999999741e-05, 5.149999999999946e-05, 5.137499999999934e-05, 5.072199999999957e-05, 5.12080000000005e-05, 5.151399999999903e-05, 5.126400000000225e-05, 5.15279999999986e-05, 5.130599999999749e-05, 5.072199999999957e-05, 5.127800000000182e-05, 5.132000000000053e-05, 5.116700000000127e-05, 5.159700000000045e-05, 5.122299999999955e-05, 5.161199999999949e-05, 5.1487000000002836e-05, 5.112499999999909e-05, 5.1471999999996854e-05, 5.152699999999913e-05, 5.14729999999998e-05, 5.151399999999903e-05, 5.152699999999913e-05, 5.155599999999774e-05, 5.1471999999996854e-05, 5.130500000000149e-05, 5.136099999999977e-05, 5.1152000000002223e-05, 5.122200000000007e-05, 5.118000000000136e-05, 5.068000000000086e-05, 5.13470000000002e-05, 5.154199999999817e-05, 5.116700000000127e-05, 5.06669999999973e-05, 5.165299999999873e-05, 5.126400000000225e-05]</msg>
<status status="PASS" starttime="20201030 15:53:04.936" endtime="20201030 15:53:04.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.932" endtime="20201030 15:53:04.939"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:04.943" endtime="20201030 15:53:04.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.941" endtime="20201030 15:53:04.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.940" endtime="20201030 15:53:04.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.580" endtime="20201030 15:53:04.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.580" endtime="20201030 15:53:04.963"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.973" endtime="20201030 15:53:04.991"></status>
</kw>
<msg timestamp="20201030 15:53:04.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.971" endtime="20201030 15:53:04.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.992" endtime="20201030 15:53:04.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.995" endtime="20201030 15:53:04.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.968" endtime="20201030 15:53:04.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.966" endtime="20201030 15:53:04.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.004" endtime="20201030 15:53:05.290"></status>
</kw>
<msg timestamp="20201030 15:53:05.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023987597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024039403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.003" endtime="20201030 15:53:05.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023987597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024039403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.294" endtime="20201030 15:53:05.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.302" endtime="20201030 15:53:05.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.000" endtime="20201030 15:53:05.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.998" endtime="20201030 15:53:05.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:05.309" level="INFO">${RESULT} = [{'diff': 5.180600000000146e-05}, {'diff': 5.227799999999935e-05}, {'diff': 5.225000000000021e-05}, {'diff': 5.172300000000005e-05}, {'diff': 5.250000000000046e-05}, {'diff': 5.248600000000089e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:05.306" endtime="20201030 15:53:05.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:05.313" level="INFO">${ACCURACY} = {'diff': [5.180600000000146e-05, 5.227799999999935e-05, 5.225000000000021e-05, 5.172300000000005e-05, 5.250000000000046e-05, 5.248600000000089e-05, 5.161100000000002e-05, 5.166700000000177e-05, 5.2306...</msg>
<status status="PASS" starttime="20201030 15:53:05.310" endtime="20201030 15:53:05.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.318" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 15:53:05.317" endtime="20201030 15:53:05.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.323" level="INFO">VALUE: [5.180600000000146e-05, 5.227799999999935e-05, 5.225000000000021e-05, 5.172300000000005e-05, 5.250000000000046e-05, 5.248600000000089e-05, 5.161100000000002e-05, 5.166700000000177e-05, 5.230600000000196e-05, 5.163899999999916e-05, 5.226300000000031e-05, 5.258400000000135e-05, 5.1665999999998824e-05, 5.225000000000021e-05, 5.2165999999999324e-05, 5.256899999999884e-05, 5.247200000000132e-05, 5.238899999999991e-05, 5.2457999999998284e-05, 5.26530000000032e-05, 5.222200000000107e-05, 5.240299999999948e-05, 5.1679999999998394e-05, 5.250000000000046e-05, 5.233300000000163e-05, 5.225000000000021e-05, 5.226399999999978e-05, 5.233299999999816e-05, 5.166700000000177e-05, 5.232000000000153e-05, 5.244500000000166e-05, 5.169499999999744e-05, 5.223600000000064e-05, 5.245900000000123e-05, 5.257000000000178e-05, 5.245899999999776e-05, 5.237500000000034e-05, 5.226400000000325e-05, 5.23340000000011e-05, 5.222300000000055e-05, 5.227699999999988e-05, 5.225000000000021e-05, 5.245899999999776e-05, 5.1666000000002293e-05, 5.225000000000021e-05, 5.230499999999902e-05, 5.250000000000046e-05, 5.1901999999999504e-05, 5.223600000000064e-05, 5.230499999999902e-05]</msg>
<status status="PASS" starttime="20201030 15:53:05.319" endtime="20201030 15:53:05.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.314" endtime="20201030 15:53:05.325"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:05.329" endtime="20201030 15:53:05.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.327" endtime="20201030 15:53:05.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.326" endtime="20201030 15:53:05.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.964" endtime="20201030 15:53:05.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.964" endtime="20201030 15:53:05.350"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.358" endtime="20201030 15:53:05.375"></status>
</kw>
<msg timestamp="20201030 15:53:05.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.357" endtime="20201030 15:53:05.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.376" endtime="20201030 15:53:05.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.379" endtime="20201030 15:53:05.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.354" endtime="20201030 15:53:05.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.352" endtime="20201030 15:53:05.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.388" endtime="20201030 15:53:05.675"></status>
</kw>
<msg timestamp="20201030 15:53:05.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022024194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022077194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.387" endtime="20201030 15:53:05.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022024194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022077194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.679" endtime="20201030 15:53:05.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.687" endtime="20201030 15:53:05.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.384" endtime="20201030 15:53:05.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.382" endtime="20201030 15:53:05.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:05.694" level="INFO">${RESULT} = [{'diff': 5.300000000000096e-05}, {'diff': 5.3443999999999714e-05}, {'diff': 5.3401999999997535e-05}, {'diff': 5.3152000000000754e-05}, {'diff': 5.2707999999998534e-05}, {'diff': 5.33609999999983e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:05.691" endtime="20201030 15:53:05.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:05.744" level="INFO">${ACCURACY} = {'diff': [5.300000000000096e-05, 5.3443999999999714e-05, 5.3401999999997535e-05, 5.3152000000000754e-05, 5.2707999999998534e-05, 5.33609999999983e-05, 5.3221999999998604e-05, 5.3471999999998854e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:53:05.695" endtime="20201030 15:53:05.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.749" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 15:53:05.748" endtime="20201030 15:53:05.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.752" level="INFO">VALUE: [5.300000000000096e-05, 5.3443999999999714e-05, 5.3401999999997535e-05, 5.3152000000000754e-05, 5.2707999999998534e-05, 5.33609999999983e-05, 5.3221999999998604e-05, 5.3471999999998854e-05, 5.341700000000005e-05, 5.330500000000002e-05, 5.33470000000022e-05, 5.2707999999998534e-05, 5.313900000000066e-05, 5.356899999999984e-05, 5.348600000000189e-05, 5.316700000000327e-05, 5.340299999999701e-05, 5.338899999999744e-05, 5.356999999999931e-05, 5.31669999999998e-05, 5.337500000000134e-05, 5.333399999999863e-05, 5.362500000000159e-05, 5.340300000000048e-05, 5.359700000000245e-05, 5.3277999999996883e-05, 5.3263999999997313e-05, 5.3249999999997744e-05, 5.265299999999973e-05, 5.263900000000016e-05, 5.356899999999984e-05, 5.3471999999998854e-05, 5.329100000000045e-05, 5.3402000000001004e-05, 5.2985999999997924e-05, 5.272200000000157e-05, 5.273600000000114e-05, 5.2665999999999824e-05, 5.359699999999898e-05, 5.319400000000293e-05, 5.359799999999845e-05, 5.3235999999998174e-05, 5.3235999999998174e-05, 5.315300000000023e-05, 5.3235999999998174e-05, 5.362499999999812e-05, 5.323600000000164e-05, 5.354200000000017e-05, 5.32080000000025e-05, 5.33470000000022e-05]</msg>
<status status="PASS" starttime="20201030 15:53:05.750" endtime="20201030 15:53:05.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.745" endtime="20201030 15:53:05.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:05.757" endtime="20201030 15:53:05.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.755" endtime="20201030 15:53:05.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.754" endtime="20201030 15:53:05.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.350" endtime="20201030 15:53:05.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.350" endtime="20201030 15:53:05.777"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.786" endtime="20201030 15:53:05.803"></status>
</kw>
<msg timestamp="20201030 15:53:05.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.785" endtime="20201030 15:53:05.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.805" endtime="20201030 15:53:05.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.807" endtime="20201030 15:53:05.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.782" endtime="20201030 15:53:05.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.780" endtime="20201030 15:53:05.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.816" endtime="20201030 15:53:06.104"></status>
</kw>
<msg timestamp="20201030 15:53:06.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021979306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022033333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.815" endtime="20201030 15:53:06.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021979306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022033333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.108" endtime="20201030 15:53:06.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.116" endtime="20201030 15:53:06.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.812" endtime="20201030 15:53:06.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.811" endtime="20201030 15:53:06.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:06.123" level="INFO">${RESULT} = [{'diff': 5.402699999999816e-05}, {'diff': 5.3651999999997785e-05}, {'diff': 5.430500000000102e-05}, {'diff': 5.4457999999996815e-05}, {'diff': 5.3693999999999964e-05}, {'diff': 5.370900000000248e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:06.120" endtime="20201030 15:53:06.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:06.127" level="INFO">${ACCURACY} = {'diff': [5.402699999999816e-05, 5.3651999999997785e-05, 5.430500000000102e-05, 5.4457999999996815e-05, 5.3693999999999964e-05, 5.370900000000248e-05, 5.36670000000003e-05, 5.454200000000117e-05, 5.36...</msg>
<status status="PASS" starttime="20201030 15:53:06.124" endtime="20201030 15:53:06.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.133" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 15:53:06.131" endtime="20201030 15:53:06.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.135" level="INFO">VALUE: [5.402699999999816e-05, 5.3651999999997785e-05, 5.430500000000102e-05, 5.4457999999996815e-05, 5.3693999999999964e-05, 5.370900000000248e-05, 5.36670000000003e-05, 5.454200000000117e-05, 5.36670000000003e-05, 5.441699999999758e-05, 5.4499999999998994e-05, 5.461099999999955e-05, 5.4471999999999854e-05, 5.368099999999987e-05, 5.4458000000000284e-05, 5.4208000000000034e-05, 5.457000000000031e-05, 5.4541999999997703e-05, 5.459799999999945e-05, 5.397299999999883e-05, 5.430600000000049e-05, 5.370900000000248e-05, 5.370899999999901e-05, 5.454200000000117e-05, 5.373600000000214e-05, 5.4165999999997855e-05, 5.3680000000000394e-05, 5.430500000000102e-05, 5.4208000000000034e-05, 5.461099999999955e-05, 5.430500000000102e-05, 5.43609999999993e-05, 5.463900000000216e-05, 5.433300000000016e-05, 5.3680000000000394e-05, 5.462499999999912e-05, 5.437500000000234e-05, 5.458300000000041e-05, 5.365300000000073e-05, 5.451400000000203e-05, 5.4235999999999174e-05, 5.465300000000173e-05, 5.440300000000148e-05, 5.4513999999998564e-05, 5.437500000000234e-05, 5.43609999999993e-05, 5.444500000000019e-05, 5.455599999999727e-05, 5.433399999999963e-05, 5.444500000000019e-05]</msg>
<status status="PASS" starttime="20201030 15:53:06.134" endtime="20201030 15:53:06.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.128" endtime="20201030 15:53:06.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:06.140" endtime="20201030 15:53:06.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.139" endtime="20201030 15:53:06.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.137" endtime="20201030 15:53:06.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.778" endtime="20201030 15:53:06.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.778" endtime="20201030 15:53:06.161"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.170" endtime="20201030 15:53:06.186"></status>
</kw>
<msg timestamp="20201030 15:53:06.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.168" endtime="20201030 15:53:06.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.188" endtime="20201030 15:53:06.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.190" endtime="20201030 15:53:06.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.166" endtime="20201030 15:53:06.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.163" endtime="20201030 15:53:06.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.200" endtime="20201030 15:53:06.489"></status>
</kw>
<msg timestamp="20201030 15:53:06.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022084056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022139694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.198" endtime="20201030 15:53:06.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022084056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022139694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.493" endtime="20201030 15:53:06.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.502" endtime="20201030 15:53:06.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.196" endtime="20201030 15:53:06.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.194" endtime="20201030 15:53:06.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:06.509" level="INFO">${RESULT} = [{'diff': 5.5638000000000215e-05}, {'diff': 5.5263999999999314e-05}, {'diff': 5.531899999999812e-05}, {'diff': 5.562500000000012e-05}, {'diff': 5.533300000000116e-05}, {'diff': 5.5277999999998884e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:06.505" endtime="20201030 15:53:06.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:06.514" level="INFO">${ACCURACY} = {'diff': [5.5638000000000215e-05, 5.5263999999999314e-05, 5.531899999999812e-05, 5.562500000000012e-05, 5.533300000000116e-05, 5.5277999999998884e-05, 5.461099999999955e-05, 5.556899999999837e-05, 5.5...</msg>
<status status="PASS" starttime="20201030 15:53:06.510" endtime="20201030 15:53:06.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.519" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 15:53:06.518" endtime="20201030 15:53:06.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.522" level="INFO">VALUE: [5.5638000000000215e-05, 5.5263999999999314e-05, 5.531899999999812e-05, 5.562500000000012e-05, 5.533300000000116e-05, 5.5277999999998884e-05, 5.461099999999955e-05, 5.556899999999837e-05, 5.5443999999998245e-05, 5.530500000000202e-05, 5.5236000000000174e-05, 5.5207999999997565e-05, 5.5236000000000174e-05, 5.5527999999999134e-05, 5.5457999999997815e-05, 5.532000000000106e-05, 5.5236000000000174e-05, 5.544500000000119e-05, 5.469500000000044e-05, 5.533300000000116e-05, 5.5222000000000604e-05, 5.563899999999969e-05, 5.50410000000022e-05, 5.5513999999999564e-05, 5.51809999999979e-05, 5.519499999999747e-05, 5.554200000000217e-05, 5.4665999999998355e-05, 5.538900000000291e-05, 5.529099999999898e-05, 5.5165999999998855e-05, 5.4694000000000964e-05, 5.53610000000003e-05, 5.556900000000184e-05, 5.5430000000002144e-05, 5.533300000000116e-05, 5.5249999999999744e-05, 5.5236000000000174e-05, 5.530499999999855e-05, 5.4791999999997953e-05, 5.5499999999999994e-05, 5.46670000000013e-05, 5.5236000000000174e-05, 5.5457999999997815e-05, 5.563900000000316e-05, 5.543100000000162e-05, 5.5472000000000854e-05, 5.5236000000000174e-05, 5.543100000000162e-05, 5.562500000000012e-05]</msg>
<status status="PASS" starttime="20201030 15:53:06.520" endtime="20201030 15:53:06.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.515" endtime="20201030 15:53:06.532"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:06.536" endtime="20201030 15:53:06.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.535" endtime="20201030 15:53:06.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.533" endtime="20201030 15:53:06.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.162" endtime="20201030 15:53:06.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.161" endtime="20201030 15:53:06.557"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.572" endtime="20201030 15:53:06.597"></status>
</kw>
<msg timestamp="20201030 15:53:06.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.569" endtime="20201030 15:53:06.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.601" endtime="20201030 15:53:06.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.608" endtime="20201030 15:53:06.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.564" endtime="20201030 15:53:06.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.560" endtime="20201030 15:53:06.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.628" endtime="20201030 15:53:06.923"></status>
</kw>
<msg timestamp="20201030 15:53:06.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03131025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031366514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:06.624" endtime="20201030 15:53:06.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03131025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031366514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:06.928" endtime="20201030 15:53:06.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.936" endtime="20201030 15:53:06.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.619" endtime="20201030 15:53:06.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.615" endtime="20201030 15:53:06.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:06.942" level="INFO">${RESULT} = [{'diff': 5.6264000000000314e-05}, {'diff': 5.63749999999974e-05}, {'diff': 5.656900000000631e-05}, {'diff': 5.6222000000001604e-05}, {'diff': 5.6194999999995e-05}, {'diff': 5.5680000000002394e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:06.939" endtime="20201030 15:53:06.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:06.947" level="INFO">${ACCURACY} = {'diff': [5.6264000000000314e-05, 5.63749999999974e-05, 5.656900000000631e-05, 5.6222000000001604e-05, 5.6194999999995e-05, 5.5680000000002394e-05, 5.657000000000578e-05, 5.6264000000000314e-05, 5.630...</msg>
<status status="PASS" starttime="20201030 15:53:06.943" endtime="20201030 15:53:06.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.951" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 15:53:06.950" endtime="20201030 15:53:06.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.954" level="INFO">VALUE: [5.6264000000000314e-05, 5.63749999999974e-05, 5.656900000000631e-05, 5.6222000000001604e-05, 5.6194999999995e-05, 5.5680000000002394e-05, 5.657000000000578e-05, 5.6264000000000314e-05, 5.630600000000596e-05, 5.618100000000237e-05, 5.626300000000084e-05, 5.631899999999912e-05, 5.654100000000023e-05, 5.629099999999998e-05, 5.6208000000002034e-05, 5.656899999999937e-05, 5.6500000000000994e-05, 5.658299999999894e-05, 5.63470000000052e-05, 5.6528000000000134e-05, 5.659700000000545e-05, 5.633299999999869e-05, 5.63470000000052e-05, 5.6486000000001424e-05, 5.638900000000391e-05, 5.644499999999525e-05, 5.66670000000033e-05, 5.6514000000000564e-05, 5.6222000000001604e-05, 5.568100000000187e-05, 5.662499999999765e-05, 5.647300000000133e-05, 5.6236000000001174e-05, 5.56670000000023e-05, 5.6264000000000314e-05, 5.570900000000101e-05, 5.6165999999996385e-05, 5.659699999999851e-05, 5.613899999999672e-05, 5.6250000000000744e-05, 5.6443999999995775e-05, 5.658299999999894e-05, 5.6165999999996385e-05, 5.633299999999869e-05, 5.615299999999629e-05, 5.5972000000001354e-05, 5.6208000000002034e-05, 5.6277999999999884e-05, 5.638900000000391e-05, 5.562499999999665e-05]</msg>
<status status="PASS" starttime="20201030 15:53:06.952" endtime="20201030 15:53:06.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.948" endtime="20201030 15:53:06.955"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:06.959" endtime="20201030 15:53:06.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.957" endtime="20201030 15:53:06.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.956" endtime="20201030 15:53:06.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.558" endtime="20201030 15:53:06.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.557" endtime="20201030 15:53:06.979"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.988" endtime="20201030 15:53:07.008"></status>
</kw>
<msg timestamp="20201030 15:53:07.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.987" endtime="20201030 15:53:07.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.010" endtime="20201030 15:53:07.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.013" endtime="20201030 15:53:07.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.984" endtime="20201030 15:53:07.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.982" endtime="20201030 15:53:07.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.022" endtime="20201030 15:53:07.307"></status>
</kw>
<msg timestamp="20201030 15:53:07.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023094444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023151792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.020" endtime="20201030 15:53:07.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023094444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023151792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.311" endtime="20201030 15:53:07.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.320" endtime="20201030 15:53:07.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.018" endtime="20201030 15:53:07.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.016" endtime="20201030 15:53:07.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:07.326" level="INFO">${RESULT} = [{'diff': 5.73480000000022e-05}, {'diff': 5.738900000000144e-05}, {'diff': 5.7471999999999385e-05}, {'diff': 5.722299999999861e-05}, {'diff': 5.7486000000002424e-05}, {'diff': 5.6972000000002354e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:07.323" endtime="20201030 15:53:07.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:07.331" level="INFO">${ACCURACY} = {'diff': [5.73480000000022e-05, 5.738900000000144e-05, 5.7471999999999385e-05, 5.722299999999861e-05, 5.7486000000002424e-05, 5.6972000000002354e-05, 5.6652000000000785e-05, 5.729099999999751e-05, 5.7...</msg>
<status status="PASS" starttime="20201030 15:53:07.327" endtime="20201030 15:53:07.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.335" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 15:53:07.334" endtime="20201030 15:53:07.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.338" level="INFO">VALUE: [5.73480000000022e-05, 5.738900000000144e-05, 5.7471999999999385e-05, 5.722299999999861e-05, 5.7486000000002424e-05, 5.6972000000002354e-05, 5.6652000000000785e-05, 5.729099999999751e-05, 5.737500000000187e-05, 5.7292000000000454e-05, 5.730500000000055e-05, 5.7513999999998094e-05, 5.661099999999808e-05, 5.7000000000001494e-05, 5.7514000000001564e-05, 5.733299999999969e-05, 5.6707999999999065e-05, 5.7444000000000245e-05, 5.743099999999668e-05, 5.7513999999998094e-05, 5.7292000000000454e-05, 5.761100000000255e-05, 5.738900000000144e-05, 5.7306000000000024e-05, 5.666699999999983e-05, 5.7485999999998955e-05, 5.7583999999999413e-05, 5.7583999999999413e-05, 5.7249999999998274e-05, 5.7193999999999995e-05, 5.73749999999984e-05, 5.761199999999855e-05, 5.7444000000000245e-05, 5.7264000000001314e-05, 5.754100000000123e-05, 5.7457999999999815e-05, 5.759699999999951e-05, 5.727700000000141e-05, 5.6707999999999065e-05, 5.734700000000273e-05, 5.7277999999997414e-05, 5.708299999999944e-05, 5.763900000000169e-05, 5.731900000000012e-05, 5.741700000000058e-05, 5.7542000000000704e-05, 5.741700000000058e-05, 5.716699999999686e-05, 5.763899999999822e-05, 5.7319999999999593e-05]</msg>
<status status="PASS" starttime="20201030 15:53:07.336" endtime="20201030 15:53:07.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.331" endtime="20201030 15:53:07.340"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:07.343" endtime="20201030 15:53:07.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.342" endtime="20201030 15:53:07.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.341" endtime="20201030 15:53:07.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.980" endtime="20201030 15:53:07.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.980" endtime="20201030 15:53:07.364"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.373" endtime="20201030 15:53:07.390"></status>
</kw>
<msg timestamp="20201030 15:53:07.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.371" endtime="20201030 15:53:07.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.391" endtime="20201030 15:53:07.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.394" endtime="20201030 15:53:07.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.369" endtime="20201030 15:53:07.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.367" endtime="20201030 15:53:07.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.403" endtime="20201030 15:53:07.689"></status>
</kw>
<msg timestamp="20201030 15:53:07.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022071069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022128944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.402" endtime="20201030 15:53:07.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022071069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022128944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.694" endtime="20201030 15:53:07.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.702" endtime="20201030 15:53:07.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.399" endtime="20201030 15:53:07.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.397" endtime="20201030 15:53:07.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:07.709" level="INFO">${RESULT} = [{'diff': 5.787500000000237e-05}, {'diff': 5.840299999999854e-05}, {'diff': 5.852700000000266e-05}, {'diff': 5.836099999999983e-05}, {'diff': 5.859700000000051e-05}, {'diff': 5.8222000000000135e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:53:07.705" endtime="20201030 15:53:07.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:07.714" level="INFO">${ACCURACY} = {'diff': [5.787500000000237e-05, 5.840299999999854e-05, 5.852700000000266e-05, 5.836099999999983e-05, 5.859700000000051e-05, 5.8222000000000135e-05, 5.863900000000269e-05, 5.831900000000112e-05, 5.847...</msg>
<status status="PASS" starttime="20201030 15:53:07.710" endtime="20201030 15:53:07.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.718" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 15:53:07.717" endtime="20201030 15:53:07.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.721" level="INFO">VALUE: [5.787500000000237e-05, 5.840299999999854e-05, 5.852700000000266e-05, 5.836099999999983e-05, 5.859700000000051e-05, 5.8222000000000135e-05, 5.863900000000269e-05, 5.831900000000112e-05, 5.847299999999986e-05, 5.840299999999854e-05, 5.8207999999997095e-05, 5.8499999999999525e-05, 5.8249999999999275e-05, 5.840300000000201e-05, 5.818099999999743e-05, 5.8472000000000385e-05, 5.844500000000072e-05, 5.841700000000158e-05, 5.815299999999829e-05, 5.763900000000169e-05, 5.8499999999999525e-05, 5.816700000000133e-05, 5.8444000000001245e-05, 5.836200000000277e-05, 5.8485999999999955e-05, 5.829099999999851e-05, 5.8249999999999275e-05, 5.8499999999999525e-05, 5.772300000000258e-05, 5.861100000000008e-05, 5.85550000000018e-05, 5.8263999999998844e-05, 5.8444000000001245e-05, 5.8222000000000135e-05, 5.862499999999965e-05, 5.8541999999998234e-05, 5.838900000000244e-05, 5.8320000000000594e-05, 5.766700000000083e-05, 5.844500000000072e-05, 5.838900000000244e-05, 5.765299999999779e-05, 5.81810000000009e-05, 5.83749999999994e-05, 5.8485999999999955e-05, 5.841699999999811e-05, 5.8249999999999275e-05, 5.8319999999997124e-05, 5.847299999999986e-05, 5.8443999999997776e-05]</msg>
<status status="PASS" starttime="20201030 15:53:07.719" endtime="20201030 15:53:07.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.714" endtime="20201030 15:53:07.722"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:07.726" endtime="20201030 15:53:07.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.724" endtime="20201030 15:53:07.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.723" endtime="20201030 15:53:07.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.365" endtime="20201030 15:53:07.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.365" endtime="20201030 15:53:07.746"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.755" endtime="20201030 15:53:07.772"></status>
</kw>
<msg timestamp="20201030 15:53:07.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.754" endtime="20201030 15:53:07.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.774" endtime="20201030 15:53:07.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.776" endtime="20201030 15:53:07.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.751" endtime="20201030 15:53:07.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.749" endtime="20201030 15:53:07.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.785" endtime="20201030 15:53:08.075"></status>
</kw>
<msg timestamp="20201030 15:53:08.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022088, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022146944, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:07.784" endtime="20201030 15:53:08.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022088, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022146944, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:08.079" endtime="20201030 15:53:08.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.087" endtime="20201030 15:53:08.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.781" endtime="20201030 15:53:08.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.779" endtime="20201030 15:53:08.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:08.094" level="INFO">${RESULT} = [{'diff': 5.8943999999998276e-05}, {'diff': 5.8972000000000885e-05}, {'diff': 5.9263999999999845e-05}, {'diff': 5.963900000000022e-05}, {'diff': 5.965299999999979e-05}, {'diff': 5.938899999999997e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:08.091" endtime="20201030 15:53:08.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:08.098" level="INFO">${ACCURACY} = {'diff': [5.8943999999998276e-05, 5.8972000000000885e-05, 5.9263999999999845e-05, 5.963900000000022e-05, 5.965299999999979e-05, 5.938899999999997e-05, 5.9277999999999414e-05, 5.9471999999997915e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:53:08.095" endtime="20201030 15:53:08.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.103" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 15:53:08.102" endtime="20201030 15:53:08.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.105" level="INFO">VALUE: [5.8943999999998276e-05, 5.8972000000000885e-05, 5.9263999999999845e-05, 5.963900000000022e-05, 5.965299999999979e-05, 5.938899999999997e-05, 5.9277999999999414e-05, 5.9471999999997915e-05, 5.8707999999997595e-05, 5.9556000000002274e-05, 5.865299999999879e-05, 5.958299999999847e-05, 5.958299999999847e-05, 5.936100000000083e-05, 5.93750000000004e-05, 5.869500000000097e-05, 5.959700000000151e-05, 5.963900000000022e-05, 5.943100000000215e-05, 5.938899999999997e-05, 5.940299999999954e-05, 5.943099999999868e-05, 5.918099999999843e-05, 5.9236000000000705e-05, 5.9415999999999636e-05, 5.9429999999999206e-05, 5.929099999999951e-05, 5.9472000000001385e-05, 5.95689999999989e-05, 5.9514000000000095e-05, 5.933300000000169e-05, 5.913899999999972e-05, 5.95689999999989e-05, 5.9457999999998346e-05, 5.9250000000000275e-05, 5.913899999999972e-05, 5.96949999999985e-05, 5.9583999999997944e-05, 5.866699999999836e-05, 5.95689999999989e-05, 5.934700000000126e-05, 5.9527999999999665e-05, 5.9263999999999845e-05, 5.865299999999879e-05, 5.945900000000129e-05, 5.9472000000001385e-05, 5.962500000000065e-05, 5.9291999999998984e-05, 5.9472000000001385e-05, 5.862499999999965e-05]</msg>
<status status="PASS" starttime="20201030 15:53:08.104" endtime="20201030 15:53:08.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.099" endtime="20201030 15:53:08.107"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:08.110" endtime="20201030 15:53:08.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.109" endtime="20201030 15:53:08.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.108" endtime="20201030 15:53:08.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.747" endtime="20201030 15:53:08.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.747" endtime="20201030 15:53:08.131"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.140" endtime="20201030 15:53:08.157"></status>
</kw>
<msg timestamp="20201030 15:53:08.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.138" endtime="20201030 15:53:08.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.159" endtime="20201030 15:53:08.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.161" endtime="20201030 15:53:08.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.136" endtime="20201030 15:53:08.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.133" endtime="20201030 15:53:08.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.170" endtime="20201030 15:53:08.456"></status>
</kw>
<msg timestamp="20201030 15:53:08.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022876264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022936375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.169" endtime="20201030 15:53:08.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022876264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022936375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.460" endtime="20201030 15:53:08.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.468" endtime="20201030 15:53:08.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.166" endtime="20201030 15:53:08.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.164" endtime="20201030 15:53:08.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:08.475" level="INFO">${RESULT} = [{'diff': 6.011099999999811e-05}, {'diff': 6.0278000000000415e-05}, {'diff': 6.040300000000054e-05}, {'diff': 6.0264000000000845e-05}, {'diff': 6.062500000000165e-05}, {'diff': 6.034700000000226e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:08.472" endtime="20201030 15:53:08.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:08.479" level="INFO">${ACCURACY} = {'diff': [6.011099999999811e-05, 6.0278000000000415e-05, 6.040300000000054e-05, 6.0264000000000845e-05, 6.062500000000165e-05, 6.034700000000226e-05, 5.966699999999936e-05, 6.0528000000000665e-05, 6.0...</msg>
<status status="PASS" starttime="20201030 15:53:08.476" endtime="20201030 15:53:08.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.484" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 15:53:08.483" endtime="20201030 15:53:08.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.487" level="INFO">VALUE: [6.011099999999811e-05, 6.0278000000000415e-05, 6.040300000000054e-05, 6.0264000000000845e-05, 6.062500000000165e-05, 6.034700000000226e-05, 5.966699999999936e-05, 6.0528000000000665e-05, 6.018099999999943e-05, 6.0235999999998235e-05, 6.047300000000186e-05, 6.0249999999997805e-05, 6.0513999999997625e-05, 6.0555999999999804e-05, 6.023700000000118e-05, 6.0193999999999526e-05, 6.05689999999999e-05, 6.05689999999999e-05, 6.059699999999904e-05, 6.0471999999998916e-05, 6.0527999999997195e-05, 5.9971999999998415e-05, 6.034699999999879e-05, 6.0221999999998665e-05, 6.0500000000001525e-05, 6.0555999999999804e-05, 6.031899999999965e-05, 5.9943999999999276e-05, 6.0569999999999374e-05, 6.0569999999999374e-05, 6.0264000000000845e-05, 5.970900000000154e-05, 6.0528000000000665e-05, 6.0528000000000665e-05, 6.0513999999997625e-05, 6.0430000000000206e-05, 6.040300000000054e-05, 6.0291999999999984e-05, 5.963900000000022e-05, 6.0387999999998027e-05, 5.972299999999764e-05, 6.0430000000000206e-05, 6.0291999999999984e-05, 6.027700000000094e-05, 6.054100000000076e-05, 6.0041999999999734e-05, 6.0193999999999526e-05, 6.0430000000000206e-05, 6.013899999999725e-05, 6.0528000000000665e-05]</msg>
<status status="PASS" starttime="20201030 15:53:08.485" endtime="20201030 15:53:08.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.480" endtime="20201030 15:53:08.489"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:08.492" endtime="20201030 15:53:08.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.491" endtime="20201030 15:53:08.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.489" endtime="20201030 15:53:08.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.132" endtime="20201030 15:53:08.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.131" endtime="20201030 15:53:08.513"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.522" endtime="20201030 15:53:08.539"></status>
</kw>
<msg timestamp="20201030 15:53:08.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.520" endtime="20201030 15:53:08.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.540" endtime="20201030 15:53:08.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.543" endtime="20201030 15:53:08.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.517" endtime="20201030 15:53:08.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.515" endtime="20201030 15:53:08.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.552" endtime="20201030 15:53:08.837"></status>
</kw>
<msg timestamp="20201030 15:53:08.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022064944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022126556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.550" endtime="20201030 15:53:08.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022064944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022126556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.842" endtime="20201030 15:53:08.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.850" endtime="20201030 15:53:08.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.548" endtime="20201030 15:53:08.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.546" endtime="20201030 15:53:08.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:08.857" level="INFO">${RESULT} = [{'diff': 6.161199999999908e-05}, {'diff': 6.118000000000096e-05}, {'diff': 6.144400000000078e-05}, {'diff': 6.152699999999872e-05}, {'diff': 6.0666000000000886e-05}, {'diff': 6.14439999999973e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:08.853" endtime="20201030 15:53:08.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:08.862" level="INFO">${ACCURACY} = {'diff': [6.161199999999908e-05, 6.118000000000096e-05, 6.144400000000078e-05, 6.152699999999872e-05, 6.0666000000000886e-05, 6.14439999999973e-05, 6.142999999999774e-05, 6.140300000000154e-05, 6.1276...</msg>
<status status="PASS" starttime="20201030 15:53:08.858" endtime="20201030 15:53:08.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.866" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 15:53:08.865" endtime="20201030 15:53:08.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.869" level="INFO">VALUE: [6.161199999999908e-05, 6.118000000000096e-05, 6.144400000000078e-05, 6.152699999999872e-05, 6.0666000000000886e-05, 6.14439999999973e-05, 6.142999999999774e-05, 6.140300000000154e-05, 6.127699999999847e-05, 6.144400000000078e-05, 6.0721999999999166e-05, 6.15279999999982e-05, 6.158300000000047e-05, 6.123599999999924e-05, 6.130600000000055e-05, 6.0707999999999596e-05, 6.129200000000098e-05, 6.126399999999838e-05, 6.122199999999967e-05, 6.068099999999993e-05, 6.134799999999926e-05, 6.154200000000123e-05, 6.112499999999868e-05, 6.156899999999743e-05, 6.133400000000316e-05, 6.132000000000012e-05, 6.152800000000166e-05, 6.122299999999914e-05, 6.148699999999896e-05, 6.130600000000055e-05, 6.14300000000012e-05, 6.151300000000262e-05, 6.162500000000265e-05, 6.130500000000108e-05, 6.159700000000004e-05, 6.062499999999818e-05, 6.158300000000047e-05, 6.162499999999918e-05, 6.155500000000133e-05, 6.125000000000227e-05, 6.140300000000154e-05, 6.159700000000004e-05, 6.066700000000036e-05, 6.155599999999734e-05, 6.130600000000055e-05, 6.162500000000265e-05, 6.1195e-05, 6.144400000000078e-05, 6.162499999999918e-05, 6.130600000000055e-05]</msg>
<status status="PASS" starttime="20201030 15:53:08.867" endtime="20201030 15:53:08.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.863" endtime="20201030 15:53:08.870"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:08.874" endtime="20201030 15:53:08.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.872" endtime="20201030 15:53:08.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.871" endtime="20201030 15:53:08.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.514" endtime="20201030 15:53:08.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.513" endtime="20201030 15:53:08.895"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.903" endtime="20201030 15:53:08.921"></status>
</kw>
<msg timestamp="20201030 15:53:08.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.902" endtime="20201030 15:53:08.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.923" endtime="20201030 15:53:08.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.925" endtime="20201030 15:53:08.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.899" endtime="20201030 15:53:08.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.897" endtime="20201030 15:53:08.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.934" endtime="20201030 15:53:09.223"></status>
</kw>
<msg timestamp="20201030 15:53:09.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022068875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022131069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.933" endtime="20201030 15:53:09.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022068875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022131069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.227" endtime="20201030 15:53:09.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.236" endtime="20201030 15:53:09.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.930" endtime="20201030 15:53:09.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.928" endtime="20201030 15:53:09.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:09.242" level="INFO">${RESULT} = [{'diff': 6.219399999999806e-05}, {'diff': 6.234700000000079e-05}, {'diff': 6.259700000000104e-05}, {'diff': 6.266700000000236e-05}, {'diff': 6.25690000000019e-05}, {'diff': 6.23889999999995e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:09.239" endtime="20201030 15:53:09.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:09.247" level="INFO">${ACCURACY} = {'diff': [6.219399999999806e-05, 6.234700000000079e-05, 6.259700000000104e-05, 6.266700000000236e-05, 6.25690000000019e-05, 6.23889999999995e-05, 6.223600000000024e-05, 6.22499999999998e-05, 6.2513999...</msg>
<status status="PASS" starttime="20201030 15:53:09.243" endtime="20201030 15:53:09.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.251" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 15:53:09.250" endtime="20201030 15:53:09.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.254" level="INFO">VALUE: [6.219399999999806e-05, 6.234700000000079e-05, 6.259700000000104e-05, 6.266700000000236e-05, 6.25690000000019e-05, 6.23889999999995e-05, 6.223600000000024e-05, 6.22499999999998e-05, 6.251399999999963e-05, 6.254199999999877e-05, 6.240299999999907e-05, 6.236100000000036e-05, 6.245900000000082e-05, 6.170900000000007e-05, 6.243100000000168e-05, 6.169499999999703e-05, 6.245900000000082e-05, 6.218100000000143e-05, 6.247300000000039e-05, 6.232000000000112e-05, 6.213899999999925e-05, 6.247200000000092e-05, 6.259699999999757e-05, 6.215300000000229e-05, 6.172200000000017e-05, 6.262499999999671e-05, 6.169400000000103e-05, 6.24019999999996e-05, 6.247200000000092e-05, 6.230499999999861e-05, 6.216599999999892e-05, 6.227800000000241e-05, 6.166699999999789e-05, 6.227800000000241e-05, 6.222200000000067e-05, 6.219400000000153e-05, 6.240299999999907e-05, 6.161099999999961e-05, 6.218100000000143e-05, 6.237499999999993e-05, 6.23889999999995e-05, 6.248600000000049e-05, 6.254200000000223e-05, 6.248600000000049e-05, 6.170900000000007e-05, 6.241699999999864e-05, 6.16950000000005e-05, 6.258400000000094e-05, 6.229099999999904e-05, 6.248600000000049e-05]</msg>
<status status="PASS" starttime="20201030 15:53:09.252" endtime="20201030 15:53:09.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.247" endtime="20201030 15:53:09.255"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:09.259" endtime="20201030 15:53:09.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.257" endtime="20201030 15:53:09.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.256" endtime="20201030 15:53:09.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.896" endtime="20201030 15:53:09.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.895" endtime="20201030 15:53:09.279"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.288" endtime="20201030 15:53:09.307"></status>
</kw>
<msg timestamp="20201030 15:53:09.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.287" endtime="20201030 15:53:09.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.308" endtime="20201030 15:53:09.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.310" endtime="20201030 15:53:09.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.284" endtime="20201030 15:53:09.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.282" endtime="20201030 15:53:09.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.320" endtime="20201030 15:53:09.606"></status>
</kw>
<msg timestamp="20201030 15:53:09.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023228986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023292319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.318" endtime="20201030 15:53:09.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023228986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023292319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.610" endtime="20201030 15:53:09.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.619" endtime="20201030 15:53:09.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.316" endtime="20201030 15:53:09.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.314" endtime="20201030 15:53:09.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:09.625" level="INFO">${RESULT} = [{'diff': 6.333299999999875e-05}, {'diff': 6.329100000000004e-05}, {'diff': 6.330499999999961e-05}, {'diff': 6.329100000000004e-05}, {'diff': 6.326400000000038e-05}, {'diff': 6.334699999999832e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:09.622" endtime="20201030 15:53:09.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:09.630" level="INFO">${ACCURACY} = {'diff': [6.333299999999875e-05, 6.329100000000004e-05, 6.330499999999961e-05, 6.329100000000004e-05, 6.326400000000038e-05, 6.334699999999832e-05, 6.323599999999777e-05, 6.359699999999857e-05, 6.3152...</msg>
<status status="PASS" starttime="20201030 15:53:09.626" endtime="20201030 15:53:09.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.634" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 15:53:09.633" endtime="20201030 15:53:09.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.637" level="INFO">VALUE: [6.333299999999875e-05, 6.329100000000004e-05, 6.330499999999961e-05, 6.329100000000004e-05, 6.326400000000038e-05, 6.334699999999832e-05, 6.323599999999777e-05, 6.359699999999857e-05, 6.315299999999982e-05, 6.318100000000243e-05, 6.351399999999716e-05, 6.32219999999982e-05, 6.265299999999932e-05, 6.266699999999889e-05, 6.319499999999853e-05, 6.266699999999889e-05, 6.35280000000002e-05, 6.351400000000063e-05, 6.362500000000118e-05, 6.362500000000118e-05, 6.326400000000038e-05, 6.27219999999977e-05, 6.361100000000161e-05, 6.318099999999896e-05, 6.366600000000042e-05, 6.32500000000008e-05, 6.363800000000128e-05, 6.266599999999942e-05, 6.27500000000003e-05, 6.354099999999682e-05, 6.323600000000124e-05, 6.262500000000018e-05, 6.331899999999918e-05, 6.319399999999906e-05, 6.359700000000204e-05, 6.354199999999977e-05, 6.361100000000161e-05, 6.326400000000038e-05, 6.3582999999999e-05, 6.326299999999743e-05, 6.27219999999977e-05, 6.359699999999857e-05, 6.343100000000268e-05, 6.265300000000279e-05, 6.326400000000038e-05, 6.354199999999977e-05, 6.359800000000151e-05, 6.312500000000068e-05, 6.319399999999906e-05, 6.347300000000139e-05]</msg>
<status status="PASS" starttime="20201030 15:53:09.635" endtime="20201030 15:53:09.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.630" endtime="20201030 15:53:09.639"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:09.643" endtime="20201030 15:53:09.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.641" endtime="20201030 15:53:09.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.640" endtime="20201030 15:53:09.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.280" endtime="20201030 15:53:09.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.280" endtime="20201030 15:53:09.663"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.672" endtime="20201030 15:53:09.689"></status>
</kw>
<msg timestamp="20201030 15:53:09.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.670" endtime="20201030 15:53:09.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.691" endtime="20201030 15:53:09.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.693" endtime="20201030 15:53:09.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.668" endtime="20201030 15:53:09.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.666" endtime="20201030 15:53:09.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.703" endtime="20201030 15:53:09.988"></status>
</kw>
<msg timestamp="20201030 15:53:09.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02234475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022409347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:09.701" endtime="20201030 15:53:09.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02234475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022409347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:09.992" endtime="20201030 15:53:10.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.001" endtime="20201030 15:53:10.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.699" endtime="20201030 15:53:10.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.697" endtime="20201030 15:53:10.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:10.009" level="INFO">${RESULT} = [{'diff': 6.459699999999957e-05}, {'diff': 6.4583e-05}, {'diff': 6.436099999999889e-05}, {'diff': 6.423599999999877e-05}, {'diff': 6.420799999999963e-05}, {'diff': 6.373600000000174e-05}, {'diff': 6.4...</msg>
<status status="PASS" starttime="20201030 15:53:10.005" endtime="20201030 15:53:10.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:10.016" level="INFO">${ACCURACY} = {'diff': [6.459699999999957e-05, 6.4583e-05, 6.436099999999889e-05, 6.423599999999877e-05, 6.420799999999963e-05, 6.373600000000174e-05, 6.437500000000193e-05, 6.463899999999828e-05, 6.441700000000064...</msg>
<status status="PASS" starttime="20201030 15:53:10.010" endtime="20201030 15:53:10.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.023" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 15:53:10.021" endtime="20201030 15:53:10.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.026" level="INFO">VALUE: [6.459699999999957e-05, 6.4583e-05, 6.436099999999889e-05, 6.423599999999877e-05, 6.420799999999963e-05, 6.373600000000174e-05, 6.437500000000193e-05, 6.463899999999828e-05, 6.441700000000064e-05, 6.368099999999946e-05, 6.429200000000052e-05, 6.4583e-05, 6.441700000000064e-05, 6.370799999999913e-05, 6.459699999999957e-05, 6.368099999999946e-05, 6.447199999999945e-05, 6.368099999999946e-05, 6.413899999999778e-05, 6.451399999999816e-05, 6.424999999999834e-05, 6.362500000000118e-05, 6.449999999999859e-05, 6.461199999999861e-05, 6.418000000000049e-05, 6.398599999999852e-05, 6.433299999999975e-05, 6.37080000000026e-05, 6.465300000000132e-05, 6.434699999999932e-05, 6.365300000000032e-05, 6.456900000000043e-05, 6.370799999999913e-05, 6.459799999999905e-05, 6.42500000000018e-05, 6.438899999999803e-05, 6.427800000000095e-05, 6.427800000000095e-05, 6.416700000000039e-05, 6.415300000000082e-05, 6.462499999999871e-05, 6.434699999999932e-05, 6.468000000000099e-05, 6.451400000000163e-05, 6.45280000000012e-05, 6.451300000000215e-05, 6.37219999999987e-05, 6.448699999999849e-05, 6.37089999999986e-05, 6.45699999999999e-05]</msg>
<status status="PASS" starttime="20201030 15:53:10.024" endtime="20201030 15:53:10.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.018" endtime="20201030 15:53:10.027"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:10.031" endtime="20201030 15:53:10.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.029" endtime="20201030 15:53:10.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.028" endtime="20201030 15:53:10.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.664" endtime="20201030 15:53:10.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.664" endtime="20201030 15:53:10.053"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.062" endtime="20201030 15:53:10.080"></status>
</kw>
<msg timestamp="20201030 15:53:10.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.061" endtime="20201030 15:53:10.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.081" endtime="20201030 15:53:10.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.084" endtime="20201030 15:53:10.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.058" endtime="20201030 15:53:10.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.056" endtime="20201030 15:53:10.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.093" endtime="20201030 15:53:10.381"></status>
</kw>
<msg timestamp="20201030 15:53:10.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023724444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023789403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.091" endtime="20201030 15:53:10.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023724444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023789403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.385" endtime="20201030 15:53:10.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.394" endtime="20201030 15:53:10.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.089" endtime="20201030 15:53:10.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.087" endtime="20201030 15:53:10.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:10.400" level="INFO">${RESULT} = [{'diff': 6.495899999999985e-05}, {'diff': 6.547299999999992e-05}, {'diff': 6.52220000000002e-05}, {'diff': 6.466699999999742e-05}, {'diff': 6.466700000000089e-05}, {'diff': 6.559800000000005e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:10.397" endtime="20201030 15:53:10.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:10.404" level="INFO">${ACCURACY} = {'diff': [6.495899999999985e-05, 6.547299999999992e-05, 6.52220000000002e-05, 6.466699999999742e-05, 6.466700000000089e-05, 6.559800000000005e-05, 6.544500000000078e-05, 6.517999999999802e-05, 6.55970...</msg>
<status status="PASS" starttime="20201030 15:53:10.401" endtime="20201030 15:53:10.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.409" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 15:53:10.408" endtime="20201030 15:53:10.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.411" level="INFO">VALUE: [6.495899999999985e-05, 6.547299999999992e-05, 6.52220000000002e-05, 6.466699999999742e-05, 6.466700000000089e-05, 6.559800000000005e-05, 6.544500000000078e-05, 6.517999999999802e-05, 6.559700000000057e-05, 6.549999999999959e-05, 6.519400000000106e-05, 6.52639999999989e-05, 6.547200000000045e-05, 6.463899999999828e-05, 6.554100000000229e-05, 6.533300000000075e-05, 6.527800000000195e-05, 6.466599999999795e-05, 6.527800000000195e-05, 6.466699999999742e-05, 6.548600000000002e-05, 6.47219999999997e-05, 6.555600000000134e-05, 6.466700000000089e-05, 6.548600000000002e-05, 6.530500000000161e-05, 6.524999999999934e-05, 6.523599999999977e-05, 6.533400000000023e-05, 6.519500000000053e-05, 6.562499999999971e-05, 6.461200000000208e-05, 6.530499999999814e-05, 6.545799999999741e-05, 6.548600000000002e-05, 6.516599999999845e-05, 6.552700000000272e-05, 6.519400000000106e-05, 6.548600000000002e-05, 6.555499999999839e-05, 6.531899999999771e-05, 6.538899999999903e-05, 6.516699999999792e-05, 6.468000000000099e-05, 6.463900000000175e-05, 6.561100000000014e-05, 6.529200000000152e-05, 6.543100000000121e-05, 6.516700000000139e-05, 6.538899999999903e-05]</msg>
<status status="PASS" starttime="20201030 15:53:10.410" endtime="20201030 15:53:10.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.405" endtime="20201030 15:53:10.413"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:10.416" endtime="20201030 15:53:10.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.415" endtime="20201030 15:53:10.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.414" endtime="20201030 15:53:10.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.054" endtime="20201030 15:53:10.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.053" endtime="20201030 15:53:10.437"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.446" endtime="20201030 15:53:10.464"></status>
</kw>
<msg timestamp="20201030 15:53:10.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.444" endtime="20201030 15:53:10.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.466" endtime="20201030 15:53:10.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.468" endtime="20201030 15:53:10.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.442" endtime="20201030 15:53:10.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.440" endtime="20201030 15:53:10.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.477" endtime="20201030 15:53:10.763"></status>
</kw>
<msg timestamp="20201030 15:53:10.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023034375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023101083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.476" endtime="20201030 15:53:10.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023034375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023101083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.768" endtime="20201030 15:53:10.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.776" endtime="20201030 15:53:10.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.473" endtime="20201030 15:53:10.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.471" endtime="20201030 15:53:10.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:10.783" level="INFO">${RESULT} = [{'diff': 6.670800000000213e-05}, {'diff': 6.640200000000013e-05}, {'diff': 6.613899999999978e-05}, {'diff': 6.663900000000028e-05}, {'diff': 6.661100000000114e-05}, {'diff': 6.629099999999957e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:10.779" endtime="20201030 15:53:10.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:10.787" level="INFO">${ACCURACY} = {'diff': [6.670800000000213e-05, 6.640200000000013e-05, 6.613899999999978e-05, 6.663900000000028e-05, 6.661100000000114e-05, 6.629099999999957e-05, 6.622199999999773e-05, 6.566600000000242e-05, 6.5651...</msg>
<status status="PASS" starttime="20201030 15:53:10.784" endtime="20201030 15:53:10.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.791" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 15:53:10.790" endtime="20201030 15:53:10.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.794" level="INFO">VALUE: [6.670800000000213e-05, 6.640200000000013e-05, 6.613899999999978e-05, 6.663900000000028e-05, 6.661100000000114e-05, 6.629099999999957e-05, 6.622199999999773e-05, 6.566600000000242e-05, 6.565199999999938e-05, 6.644399999999884e-05, 6.641700000000264e-05, 6.568000000000199e-05, 6.617999999999902e-05, 6.563899999999928e-05, 6.625000000000034e-05, 6.650000000000059e-05, 6.565299999999885e-05, 6.629199999999905e-05, 6.658400000000148e-05, 6.648600000000102e-05, 6.637500000000046e-05, 6.630599999999862e-05, 6.629199999999905e-05, 6.638900000000003e-05, 6.62359999999973e-05, 6.574999999999984e-05, 6.563899999999928e-05, 6.563899999999928e-05, 6.643100000000221e-05, 6.620799999999816e-05, 6.629099999999957e-05, 6.597200000000095e-05, 6.570800000000113e-05, 6.567999999999852e-05, 6.568000000000199e-05, 6.567999999999852e-05, 6.618100000000196e-05, 6.651400000000016e-05, 6.630500000000261e-05, 6.634700000000132e-05, 6.637500000000046e-05, 6.643099999999874e-05, 6.57220000000007e-05, 6.652799999999973e-05, 6.667999999999952e-05, 6.638900000000003e-05, 6.565300000000232e-05, 6.650000000000059e-05, 6.637500000000046e-05, 6.619500000000153e-05]</msg>
<status status="PASS" starttime="20201030 15:53:10.792" endtime="20201030 15:53:10.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.788" endtime="20201030 15:53:10.796"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:10.800" endtime="20201030 15:53:10.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.798" endtime="20201030 15:53:10.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.797" endtime="20201030 15:53:10.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.438" endtime="20201030 15:53:10.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.437" endtime="20201030 15:53:10.820"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.829" endtime="20201030 15:53:10.847"></status>
</kw>
<msg timestamp="20201030 15:53:10.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.828" endtime="20201030 15:53:10.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.848" endtime="20201030 15:53:10.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.851" endtime="20201030 15:53:10.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.825" endtime="20201030 15:53:10.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.823" endtime="20201030 15:53:10.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.860" endtime="20201030 15:53:11.146"></status>
</kw>
<msg timestamp="20201030 15:53:11.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022045069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022112125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.858" endtime="20201030 15:53:11.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022045069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022112125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:11.150" endtime="20201030 15:53:11.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.158" endtime="20201030 15:53:11.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.856" endtime="20201030 15:53:11.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.854" endtime="20201030 15:53:11.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:11.165" level="INFO">${RESULT} = [{'diff': 6.705599999999937e-05}, {'diff': 6.716600000000045e-05}, {'diff': 6.668000000000299e-05}, {'diff': 6.747199999999898e-05}, {'diff': 6.718000000000002e-05}, {'diff': 6.72359999999983e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:11.162" endtime="20201030 15:53:11.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:11.170" level="INFO">${ACCURACY} = {'diff': [6.705599999999937e-05, 6.716600000000045e-05, 6.668000000000299e-05, 6.747199999999898e-05, 6.718000000000002e-05, 6.72359999999983e-05, 6.751400000000116e-05, 6.744399999999984e-05, 6.74719...</msg>
<status status="PASS" starttime="20201030 15:53:11.166" endtime="20201030 15:53:11.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.174" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 15:53:11.173" endtime="20201030 15:53:11.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.177" level="INFO">VALUE: [6.705599999999937e-05, 6.716600000000045e-05, 6.668000000000299e-05, 6.747199999999898e-05, 6.718000000000002e-05, 6.72359999999983e-05, 6.751400000000116e-05, 6.744399999999984e-05, 6.747199999999898e-05, 6.723600000000177e-05, 6.716699999999992e-05, 6.751400000000116e-05, 6.727799999999701e-05, 6.669500000000203e-05, 6.73480000000018e-05, 6.74030000000006e-05, 6.720799999999916e-05, 6.745899999999888e-05, 6.751400000000116e-05, 6.737500000000146e-05, 6.723700000000124e-05, 6.718000000000002e-05, 6.718000000000002e-05, 6.670799999999866e-05, 6.718000000000002e-05, 6.697199999999848e-05, 6.738900000000103e-05, 6.697199999999848e-05, 6.720799999999916e-05, 6.743000000000027e-05, 6.667999999999952e-05, 6.747199999999898e-05, 6.75420000000003e-05, 6.751400000000116e-05, 6.725000000000134e-05, 6.736100000000189e-05, 6.765300000000085e-05, 6.7583999999999e-05, 6.729200000000005e-05, 6.731999999999919e-05, 6.719499999999906e-05, 6.759800000000205e-05, 6.755599999999987e-05, 6.738800000000156e-05, 6.668100000000246e-05, 6.674999999999737e-05, 6.723600000000177e-05, 6.670800000000213e-05, 6.758299999999953e-05, 6.758299999999953e-05]</msg>
<status status="PASS" starttime="20201030 15:53:11.176" endtime="20201030 15:53:11.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.171" endtime="20201030 15:53:11.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:11.182" endtime="20201030 15:53:11.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.180" endtime="20201030 15:53:11.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.179" endtime="20201030 15:53:11.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.821" endtime="20201030 15:53:11.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.821" endtime="20201030 15:53:11.203"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.211" endtime="20201030 15:53:11.228"></status>
</kw>
<msg timestamp="20201030 15:53:11.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.210" endtime="20201030 15:53:11.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.230" endtime="20201030 15:53:11.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.232" endtime="20201030 15:53:11.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.207" endtime="20201030 15:53:11.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.205" endtime="20201030 15:53:11.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.241" endtime="20201030 15:53:11.530"></status>
</kw>
<msg timestamp="20201030 15:53:11.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022024056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022092736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:11.240" endtime="20201030 15:53:11.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022024056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022092736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:11.534" endtime="20201030 15:53:11.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.542" endtime="20201030 15:53:11.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.237" endtime="20201030 15:53:11.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.235" endtime="20201030 15:53:11.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:11.549" level="INFO">${RESULT} = [{'diff': 6.868000000000152e-05}, {'diff': 6.862499999999924e-05}, {'diff': 6.851400000000216e-05}, {'diff': 6.813899999999831e-05}, {'diff': 6.770799999999966e-05}, {'diff': 6.845899999999988e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:11.546" endtime="20201030 15:53:11.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:11.553" level="INFO">${ACCURACY} = {'diff': [6.868000000000152e-05, 6.862499999999924e-05, 6.851400000000216e-05, 6.813899999999831e-05, 6.770799999999966e-05, 6.845899999999988e-05, 6.863800000000281e-05, 6.770899999999913e-05, 6.8221...</msg>
<status status="PASS" starttime="20201030 15:53:11.550" endtime="20201030 15:53:11.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.557" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 15:53:11.556" endtime="20201030 15:53:11.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.560" level="INFO">VALUE: [6.868000000000152e-05, 6.862499999999924e-05, 6.851400000000216e-05, 6.813899999999831e-05, 6.770799999999966e-05, 6.845899999999988e-05, 6.863800000000281e-05, 6.770899999999913e-05, 6.822199999999973e-05, 6.851299999999921e-05, 6.862499999999924e-05, 6.848700000000249e-05, 6.829200000000105e-05, 6.826300000000243e-05, 6.847299999999945e-05, 6.845800000000041e-05, 6.765200000000138e-05, 6.819400000000059e-05, 6.768000000000052e-05, 6.819400000000059e-05, 6.830499999999767e-05, 6.837500000000246e-05, 6.841599999999823e-05, 6.824999999999887e-05, 6.824999999999887e-05, 6.818100000000049e-05, 6.854099999999835e-05, 6.866700000000142e-05, 6.862499999999924e-05, 6.773600000000227e-05, 6.8277000000002e-05, 6.841700000000117e-05, 6.840299999999813e-05, 6.765299999999738e-05, 6.843100000000074e-05, 6.832000000000019e-05, 6.832000000000019e-05, 6.833300000000028e-05, 6.818100000000049e-05, 6.84160000000017e-05, 6.863899999999881e-05, 6.852700000000225e-05, 6.844500000000031e-05, 6.82640000000019e-05, 6.843000000000127e-05, 6.862499999999924e-05, 6.849999999999912e-05, 6.766700000000042e-05, 6.856900000000096e-05, 6.827800000000148e-05]</msg>
<status status="PASS" starttime="20201030 15:53:11.559" endtime="20201030 15:53:11.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.554" endtime="20201030 15:53:11.567"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:11.571" endtime="20201030 15:53:11.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.569" endtime="20201030 15:53:11.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.568" endtime="20201030 15:53:11.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.204" endtime="20201030 15:53:11.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.203" endtime="20201030 15:53:11.591"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.600" endtime="20201030 15:53:11.619"></status>
</kw>
<msg timestamp="20201030 15:53:11.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.599" endtime="20201030 15:53:11.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.620" endtime="20201030 15:53:11.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.623" endtime="20201030 15:53:11.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.596" endtime="20201030 15:53:11.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.594" endtime="20201030 15:53:11.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.632" endtime="20201030 15:53:11.919"></status>
</kw>
<msg timestamp="20201030 15:53:11.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023380875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023450042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:11.630" endtime="20201030 15:53:11.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023380875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023450042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:11.923" endtime="20201030 15:53:11.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.931" endtime="20201030 15:53:11.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.628" endtime="20201030 15:53:11.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.626" endtime="20201030 15:53:11.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:11.938" level="INFO">${RESULT} = [{'diff': 6.916700000000192e-05}, {'diff': 6.929199999999858e-05}, {'diff': 6.958399999999754e-05}, {'diff': 6.961100000000067e-05}, {'diff': 6.918000000000202e-05}, {'diff': 6.965299999999938e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:11.935" endtime="20201030 15:53:11.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:11.942" level="INFO">${ACCURACY} = {'diff': [6.916700000000192e-05, 6.929199999999858e-05, 6.958399999999754e-05, 6.961100000000067e-05, 6.918000000000202e-05, 6.965299999999938e-05, 6.872200000000023e-05, 6.872200000000023e-05, 6.9403...</msg>
<status status="PASS" starttime="20201030 15:53:11.939" endtime="20201030 15:53:11.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.946" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 15:53:11.945" endtime="20201030 15:53:11.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.950" level="INFO">VALUE: [6.916700000000192e-05, 6.929199999999858e-05, 6.958399999999754e-05, 6.961100000000067e-05, 6.918000000000202e-05, 6.965299999999938e-05, 6.872200000000023e-05, 6.872200000000023e-05, 6.94030000000026e-05, 6.862499999999924e-05, 6.931900000000171e-05, 6.954100000000282e-05, 6.934800000000033e-05, 6.951399999999969e-05, 6.872200000000023e-05, 6.922200000000073e-05, 6.865300000000185e-05, 6.926399999999944e-05, 6.945800000000141e-05, 6.944500000000131e-05, 6.952799999999926e-05, 6.951399999999969e-05, 6.937499999999999e-05, 6.944399999999837e-05, 6.932000000000119e-05, 6.916699999999845e-05, 6.92360000000003e-05, 6.919400000000159e-05, 6.94169999999987e-05, 6.950000000000012e-05, 6.954100000000282e-05, 6.940199999999966e-05, 6.922200000000073e-05, 6.872200000000023e-05, 6.931899999999824e-05, 6.934699999999738e-05, 6.865299999999838e-05, 6.952799999999926e-05, 6.945800000000141e-05, 6.937499999999999e-05, 6.943099999999827e-05, 6.947200000000098e-05, 6.918100000000149e-05, 6.919500000000106e-05, 6.936099999999695e-05, 6.922200000000073e-05, 6.940299999999913e-05, 6.954199999999883e-05, 6.947300000000045e-05, 6.92360000000003e-05]</msg>
<status status="PASS" starttime="20201030 15:53:11.948" endtime="20201030 15:53:11.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.943" endtime="20201030 15:53:11.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:11.955" endtime="20201030 15:53:11.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.953" endtime="20201030 15:53:11.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.952" endtime="20201030 15:53:11.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.592" endtime="20201030 15:53:11.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.592" endtime="20201030 15:53:11.976"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.984" endtime="20201030 15:53:12.002"></status>
</kw>
<msg timestamp="20201030 15:53:12.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.983" endtime="20201030 15:53:12.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.004" endtime="20201030 15:53:12.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.006" endtime="20201030 15:53:12.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.980" endtime="20201030 15:53:12.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.978" endtime="20201030 15:53:12.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.015" endtime="20201030 15:53:12.301"></status>
</kw>
<msg timestamp="20201030 15:53:12.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022009083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022078944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:12.014" endtime="20201030 15:53:12.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022009083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022078944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:12.305" endtime="20201030 15:53:12.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.314" endtime="20201030 15:53:12.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.011" endtime="20201030 15:53:12.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.009" endtime="20201030 15:53:12.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:12.320" level="INFO">${RESULT} = [{'diff': 6.986100000000092e-05}, {'diff': 7.055499999999992e-05}, {'diff': 7.050000000000112e-05}, {'diff': 7.033299999999881e-05}, {'diff': 7.055499999999992e-05}, {'diff': 7.048599999999808e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:12.317" endtime="20201030 15:53:12.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:12.325" level="INFO">${ACCURACY} = {'diff': [6.986100000000092e-05, 7.055499999999992e-05, 7.050000000000112e-05, 7.033299999999881e-05, 7.055499999999992e-05, 7.048599999999808e-05, 7.013900000000031e-05, 7.047199999999851e-05, 7.0264...</msg>
<status status="PASS" starttime="20201030 15:53:12.321" endtime="20201030 15:53:12.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.330" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 15:53:12.329" endtime="20201030 15:53:12.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.332" level="INFO">VALUE: [6.986100000000092e-05, 7.055499999999992e-05, 7.050000000000112e-05, 7.033299999999881e-05, 7.055499999999992e-05, 7.048599999999808e-05, 7.013900000000031e-05, 7.047199999999851e-05, 7.026400000000044e-05, 7.029199999999958e-05, 7.047199999999851e-05, 6.97909999999996e-05, 7.030600000000262e-05, 7.054199999999983e-05, 6.970900000000113e-05, 7.04169999999997e-05, 7.047300000000145e-05, 7.059800000000158e-05, 7.02360000000013e-05, 7.059800000000158e-05, 7.043099999999927e-05, 7.023700000000077e-05, 7.04299999999998e-05, 7.040200000000066e-05, 7.027800000000001e-05, 7.038900000000056e-05, 7.055499999999992e-05, 6.965299999999938e-05, 7.052800000000026e-05, 7.019399999999912e-05, 7.015299999999988e-05, 6.962500000000024e-05, 7.048599999999808e-05, 6.962500000000024e-05, 7.033300000000228e-05, 7.037500000000099e-05, 7.048600000000155e-05, 7.036100000000142e-05, 7.052800000000026e-05, 7.054100000000035e-05, 6.963899999999981e-05, 7.038900000000056e-05, 7.05559999999994e-05, 7.022199999999826e-05, 6.965199999999991e-05, 7.054100000000035e-05, 7.015200000000041e-05, 7.02910000000001e-05, 6.967999999999905e-05, 7.058299999999906e-05]</msg>
<status status="PASS" starttime="20201030 15:53:12.331" endtime="20201030 15:53:12.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.326" endtime="20201030 15:53:12.334"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:12.337" endtime="20201030 15:53:12.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.336" endtime="20201030 15:53:12.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.335" endtime="20201030 15:53:12.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.977" endtime="20201030 15:53:12.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.976" endtime="20201030 15:53:12.358"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.367" endtime="20201030 15:53:12.385"></status>
</kw>
<msg timestamp="20201030 15:53:12.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.365" endtime="20201030 15:53:12.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.386" endtime="20201030 15:53:12.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.389" endtime="20201030 15:53:12.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.363" endtime="20201030 15:53:12.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.361" endtime="20201030 15:53:12.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.398" endtime="20201030 15:53:12.688"></status>
</kw>
<msg timestamp="20201030 15:53:12.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022307458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022378403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:12.397" endtime="20201030 15:53:12.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022307458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022378403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:12.692" endtime="20201030 15:53:12.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.701" endtime="20201030 15:53:12.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.394" endtime="20201030 15:53:12.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.392" endtime="20201030 15:53:12.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:12.707" level="INFO">${RESULT} = [{'diff': 7.094500000000281e-05}, {'diff': 7.068100000000299e-05}, {'diff': 7.068100000000299e-05}, {'diff': 7.151399999999822e-05}, {'diff': 7.119499999999959e-05}, {'diff': 7.112500000000174e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:12.704" endtime="20201030 15:53:12.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:12.712" level="INFO">${ACCURACY} = {'diff': [7.094500000000281e-05, 7.068100000000299e-05, 7.068100000000299e-05, 7.151399999999822e-05, 7.119499999999959e-05, 7.112500000000174e-05, 7.072200000000223e-05, 7.14439999999969e-05, 7.14999...</msg>
<status status="PASS" starttime="20201030 15:53:12.708" endtime="20201030 15:53:12.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.716" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 15:53:12.715" endtime="20201030 15:53:12.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.719" level="INFO">VALUE: [7.094500000000281e-05, 7.068100000000299e-05, 7.068100000000299e-05, 7.151399999999822e-05, 7.119499999999959e-05, 7.112500000000174e-05, 7.072200000000223e-05, 7.14439999999969e-05, 7.149999999999865e-05, 7.16109999999992e-05, 7.145799999999994e-05, 7.070799999999919e-05, 7.159699999999963e-05, 7.120799999999969e-05, 7.134700000000285e-05, 7.072200000000223e-05, 7.127799999999754e-05, 7.068099999999952e-05, 7.148599999999908e-05, 7.147199999999951e-05, 7.118099999999655e-05, 7.168000000000105e-05, 7.149999999999865e-05, 7.163900000000181e-05, 7.115299999999741e-05, 7.122299999999873e-05, 7.098699999999805e-05, 7.123700000000177e-05, 7.148700000000202e-05, 7.152799999999779e-05, 7.069399999999962e-05, 7.140200000000166e-05, 7.126400000000144e-05, 7.120799999999969e-05, 7.130500000000067e-05, 7.14300000000008e-05, 7.158399999999954e-05, 7.136099999999895e-05, 7.072199999999876e-05, 7.138900000000156e-05, 7.122199999999926e-05, 7.113899999999784e-05, 7.130600000000015e-05, 7.151400000000169e-05, 7.145900000000288e-05, 7.126399999999797e-05, 7.115300000000088e-05, 7.144499999999984e-05, 7.137499999999852e-05, 7.069499999999909e-05]</msg>
<status status="PASS" starttime="20201030 15:53:12.717" endtime="20201030 15:53:12.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.712" endtime="20201030 15:53:12.720"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:12.724" endtime="20201030 15:53:12.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.722" endtime="20201030 15:53:12.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.721" endtime="20201030 15:53:12.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.359" endtime="20201030 15:53:12.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.358" endtime="20201030 15:53:12.744"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.753" endtime="20201030 15:53:12.771"></status>
</kw>
<msg timestamp="20201030 15:53:12.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.752" endtime="20201030 15:53:12.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.773" endtime="20201030 15:53:12.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.775" endtime="20201030 15:53:12.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.749" endtime="20201030 15:53:12.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.747" endtime="20201030 15:53:12.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.784" endtime="20201030 15:53:13.069"></status>
</kw>
<msg timestamp="20201030 15:53:13.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022977236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023049208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:12.783" endtime="20201030 15:53:13.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022977236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023049208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:13.074" endtime="20201030 15:53:13.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.082" endtime="20201030 15:53:13.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.780" endtime="20201030 15:53:13.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.778" endtime="20201030 15:53:13.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:13.089" level="INFO">${RESULT} = [{'diff': 7.197200000000001e-05}, {'diff': 7.245800000000094e-05}, {'diff': 7.242999999999833e-05}, {'diff': 7.265300000000238e-05}, {'diff': 7.226399999999897e-05}, {'diff': 7.233300000000081e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:13.085" endtime="20201030 15:53:13.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:13.093" level="INFO">${ACCURACY} = {'diff': [7.197200000000001e-05, 7.245800000000094e-05, 7.242999999999833e-05, 7.265300000000238e-05, 7.226399999999897e-05, 7.233300000000081e-05, 7.248600000000008e-05, 7.255499999999845e-05, 7.2222...</msg>
<status status="PASS" starttime="20201030 15:53:13.090" endtime="20201030 15:53:13.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.098" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 15:53:13.097" endtime="20201030 15:53:13.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.101" level="INFO">VALUE: [7.197200000000001e-05, 7.245800000000094e-05, 7.242999999999833e-05, 7.265300000000238e-05, 7.226399999999897e-05, 7.233300000000081e-05, 7.248600000000008e-05, 7.255499999999845e-05, 7.222200000000026e-05, 7.236099999999995e-05, 7.22499999999994e-05, 7.251399999999922e-05, 7.22499999999994e-05, 7.222299999999973e-05, 7.215299999999841e-05, 7.216700000000145e-05, 7.262500000000324e-05, 7.227800000000201e-05, 7.254199999999836e-05, 7.170800000000019e-05, 7.223599999999983e-05, 7.249999999999965e-05, 7.248600000000008e-05, 7.168000000000105e-05, 7.252699999999931e-05, 7.226400000000244e-05, 7.247200000000051e-05, 7.248599999999661e-05, 7.240300000000213e-05, 7.176399999999847e-05, 7.197200000000001e-05, 7.169400000000062e-05, 7.166700000000095e-05, 7.226399999999897e-05, 7.247200000000051e-05, 7.219500000000059e-05, 7.229200000000158e-05, 7.232000000000072e-05, 7.219500000000059e-05, 7.242999999999833e-05, 7.263899999999934e-05, 7.240300000000213e-05, 7.26110000000002e-05, 7.258399999999707e-05, 7.247200000000051e-05, 7.242999999999833e-05, 7.25690000000015e-05, 7.229099999999863e-05, 7.169400000000062e-05, 7.252800000000226e-05]</msg>
<status status="PASS" starttime="20201030 15:53:13.099" endtime="20201030 15:53:13.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.094" endtime="20201030 15:53:13.103"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:13.107" endtime="20201030 15:53:13.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.105" endtime="20201030 15:53:13.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.104" endtime="20201030 15:53:13.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.745" endtime="20201030 15:53:13.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.745" endtime="20201030 15:53:13.128"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.136" endtime="20201030 15:53:13.155"></status>
</kw>
<msg timestamp="20201030 15:53:13.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:13.135" endtime="20201030 15:53:13.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:13.157" endtime="20201030 15:53:13.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.159" endtime="20201030 15:53:13.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.132" endtime="20201030 15:53:13.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.130" endtime="20201030 15:53:13.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.168" endtime="20201030 15:53:13.455"></status>
</kw>
<msg timestamp="20201030 15:53:13.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022432972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:13.167" endtime="20201030 15:53:13.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022432972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:13.459" endtime="20201030 15:53:13.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.467" endtime="20201030 15:53:13.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.164" endtime="20201030 15:53:13.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.162" endtime="20201030 15:53:13.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:13.474" level="INFO">${RESULT} = [{'diff': 7.279099999999913e-05}, {'diff': 7.322300000000073e-05}, {'diff': 7.318000000000255e-05}, {'diff': 7.359799999999764e-05}, {'diff': 7.330599999999868e-05}, {'diff': 7.356899999999902e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:13.471" endtime="20201030 15:53:13.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:13.479" level="INFO">${ACCURACY} = {'diff': [7.279099999999913e-05, 7.322300000000073e-05, 7.318000000000255e-05, 7.359799999999764e-05, 7.330599999999868e-05, 7.356899999999902e-05, 7.365299999999991e-05, 7.361099999999773e-05, 7.3457...</msg>
<status status="PASS" starttime="20201030 15:53:13.475" endtime="20201030 15:53:13.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.483" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 15:53:13.482" endtime="20201030 15:53:13.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.486" level="INFO">VALUE: [7.279099999999913e-05, 7.322300000000073e-05, 7.318000000000255e-05, 7.359799999999764e-05, 7.330599999999868e-05, 7.356899999999902e-05, 7.365299999999991e-05, 7.361099999999773e-05, 7.345799999999847e-05, 7.316700000000245e-05, 7.337500000000052e-05, 7.337500000000052e-05, 7.338900000000009e-05, 7.269400000000162e-05, 7.32500000000004e-05, 7.342999999999933e-05, 7.356899999999902e-05, 7.342999999999933e-05, 7.362500000000077e-05, 7.33049999999992e-05, 7.327799999999954e-05, 7.351400000000022e-05, 7.354199999999936e-05, 7.362500000000077e-05, 7.359700000000163e-05, 7.347200000000151e-05, 7.333299999999834e-05, 7.359699999999816e-05, 7.36110000000012e-05, 7.338900000000009e-05, 7.322200000000126e-05, 7.337500000000052e-05, 7.323599999999736e-05, 7.318099999999855e-05, 7.366699999999948e-05, 7.354199999999936e-05, 7.323600000000083e-05, 7.318100000000202e-05, 7.269399999999815e-05, 7.272200000000076e-05, 7.337500000000052e-05, 7.322200000000126e-05, 7.363900000000034e-05, 7.350000000000065e-05, 7.269400000000162e-05, 7.331900000000224e-05, 7.319400000000212e-05, 7.336100000000095e-05, 7.330599999999868e-05, 7.323600000000083e-05]</msg>
<status status="PASS" starttime="20201030 15:53:13.485" endtime="20201030 15:53:13.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.480" endtime="20201030 15:53:13.487"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:13.491" endtime="20201030 15:53:13.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.490" endtime="20201030 15:53:13.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.488" endtime="20201030 15:53:13.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.129" endtime="20201030 15:53:13.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.128" endtime="20201030 15:53:13.512"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.521" endtime="20201030 15:53:13.539"></status>
</kw>
<msg timestamp="20201030 15:53:13.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:13.519" endtime="20201030 15:53:13.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:13.541" endtime="20201030 15:53:13.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.543" endtime="20201030 15:53:13.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.516" endtime="20201030 15:53:13.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.514" endtime="20201030 15:53:13.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.552" endtime="20201030 15:53:13.839"></status>
</kw>
<msg timestamp="20201030 15:53:13.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022197611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022271389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:13.551" endtime="20201030 15:53:13.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022197611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022271389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:13.844" endtime="20201030 15:53:13.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.852" endtime="20201030 15:53:13.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.548" endtime="20201030 15:53:13.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.546" endtime="20201030 15:53:13.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:13.859" level="INFO">${RESULT} = [{'diff': 7.377800000000004e-05}, {'diff': 7.422199999999879e-05}, {'diff': 7.431999999999925e-05}, {'diff': 7.45699999999995e-05}, {'diff': 7.433400000000229e-05}, {'diff': 7.434699999999891e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:13.855" endtime="20201030 15:53:13.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:13.863" level="INFO">${ACCURACY} = {'diff': [7.377800000000004e-05, 7.422199999999879e-05, 7.431999999999925e-05, 7.45699999999995e-05, 7.433400000000229e-05, 7.434699999999891e-05, 7.423599999999836e-05, 7.418099999999955e-05, 7.43890...</msg>
<status status="PASS" starttime="20201030 15:53:13.860" endtime="20201030 15:53:13.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.867" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 15:53:13.866" endtime="20201030 15:53:13.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.870" level="INFO">VALUE: [7.377800000000004e-05, 7.422199999999879e-05, 7.431999999999925e-05, 7.45699999999995e-05, 7.433400000000229e-05, 7.434699999999891e-05, 7.423599999999836e-05, 7.418099999999955e-05, 7.438900000000109e-05, 7.463900000000134e-05, 7.422200000000226e-05, 7.363900000000034e-05, 7.463900000000134e-05, 7.450000000000165e-05, 7.377800000000004e-05, 7.449999999999818e-05, 7.44439999999999e-05, 7.413900000000084e-05, 7.454100000000088e-05, 7.455599999999993e-05, 7.42500000000014e-05, 7.418100000000302e-05, 7.455599999999993e-05, 7.422199999999879e-05, 7.44309999999998e-05, 7.44309999999998e-05, 7.445899999999894e-05, 7.451400000000122e-05, 7.415300000000041e-05, 7.429200000000011e-05, 7.426400000000097e-05, 7.458399999999907e-05, 7.448700000000155e-05, 7.397199999999854e-05, 7.437500000000152e-05, 7.447200000000251e-05, 7.422199999999879e-05, 7.415199999999747e-05, 7.44029999999972e-05, 7.44439999999999e-05, 7.440300000000066e-05, 7.420799999999922e-05, 7.447200000000251e-05, 7.452800000000079e-05, 7.434699999999891e-05, 7.454200000000036e-05, 7.434699999999891e-05, 7.372299999999776e-05, 7.397199999999854e-05, 7.461099999999873e-05]</msg>
<status status="PASS" starttime="20201030 15:53:13.868" endtime="20201030 15:53:13.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.864" endtime="20201030 15:53:13.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:13.875" endtime="20201030 15:53:13.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.873" endtime="20201030 15:53:13.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.872" endtime="20201030 15:53:13.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.513" endtime="20201030 15:53:13.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.512" endtime="20201030 15:53:13.896"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.904" endtime="20201030 15:53:13.923"></status>
</kw>
<msg timestamp="20201030 15:53:13.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:13.903" endtime="20201030 15:53:13.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:13.925" endtime="20201030 15:53:13.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.927" endtime="20201030 15:53:13.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.900" endtime="20201030 15:53:13.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.898" endtime="20201030 15:53:13.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.936" endtime="20201030 15:53:14.224"></status>
</kw>
<msg timestamp="20201030 15:53:14.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022935111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02301075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:13.935" endtime="20201030 15:53:14.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022935111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02301075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:14.228" endtime="20201030 15:53:14.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.236" endtime="20201030 15:53:14.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.932" endtime="20201030 15:53:14.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.931" endtime="20201030 15:53:14.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:14.243" level="INFO">${RESULT} = [{'diff': 7.563899999999887e-05}, {'diff': 7.55700000000005e-05}, {'diff': 7.522199999999979e-05}, {'diff': 7.545800000000047e-05}, {'diff': 7.56249999999993e-05}, {'diff': 7.530600000000068e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:14.240" endtime="20201030 15:53:14.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:14.247" level="INFO">${ACCURACY} = {'diff': [7.563899999999887e-05, 7.55700000000005e-05, 7.522199999999979e-05, 7.545800000000047e-05, 7.56249999999993e-05, 7.530600000000068e-05, 7.543099999999733e-05, 7.529200000000111e-05, 7.548600...</msg>
<status status="PASS" starttime="20201030 15:53:14.244" endtime="20201030 15:53:14.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.251" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 15:53:14.250" endtime="20201030 15:53:14.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.254" level="INFO">VALUE: [7.563899999999887e-05, 7.55700000000005e-05, 7.522199999999979e-05, 7.545800000000047e-05, 7.56249999999993e-05, 7.530600000000068e-05, 7.543099999999733e-05, 7.529200000000111e-05, 7.548600000000308e-05, 7.547299999999951e-05, 7.537499999999905e-05, 7.534799999999939e-05, 7.552700000000231e-05, 7.524999999999893e-05, 7.463899999999787e-05, 7.548599999999961e-05, 7.524999999999893e-05, 7.497199999999954e-05, 7.545800000000047e-05, 7.565299999999844e-05, 7.519400000000065e-05, 7.466700000000048e-05, 7.470799999999972e-05, 7.472199999999929e-05, 7.530600000000068e-05, 7.472199999999929e-05, 7.533399999999982e-05, 7.532000000000025e-05, 7.536100000000295e-05, 7.536099999999948e-05, 7.533399999999982e-05, 7.473600000000233e-05, 7.549999999999918e-05, 7.534699999999991e-05, 7.468000000000058e-05, 7.53050000000012e-05, 7.468000000000058e-05, 7.551399999999875e-05, 7.552799999999832e-05, 7.54310000000008e-05, 7.552800000000179e-05, 7.472199999999929e-05, 7.541699999999776e-05, 7.545800000000047e-05, 7.533300000000034e-05, 7.54029999999982e-05, 7.541700000000123e-05, 7.516700000000098e-05, 7.519500000000012e-05, 7.536099999999948e-05]</msg>
<status status="PASS" starttime="20201030 15:53:14.253" endtime="20201030 15:53:14.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.248" endtime="20201030 15:53:14.256"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:14.260" endtime="20201030 15:53:14.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.258" endtime="20201030 15:53:14.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.257" endtime="20201030 15:53:14.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.896" endtime="20201030 15:53:14.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.896" endtime="20201030 15:53:14.281"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.289" endtime="20201030 15:53:14.307"></status>
</kw>
<msg timestamp="20201030 15:53:14.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.288" endtime="20201030 15:53:14.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.309" endtime="20201030 15:53:14.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.311" endtime="20201030 15:53:14.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.285" endtime="20201030 15:53:14.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.283" endtime="20201030 15:53:14.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.320" endtime="20201030 15:53:14.606"></status>
</kw>
<msg timestamp="20201030 15:53:14.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022229972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022306528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.319" endtime="20201030 15:53:14.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022229972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022306528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.611" endtime="20201030 15:53:14.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.619" endtime="20201030 15:53:14.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.316" endtime="20201030 15:53:14.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.315" endtime="20201030 15:53:14.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:14.626" level="INFO">${RESULT} = [{'diff': 7.655599999999846e-05}, {'diff': 7.624999999999993e-05}, {'diff': 7.652799999999932e-05}, {'diff': 7.647300000000051e-05}, {'diff': 7.620799999999775e-05}, {'diff': 7.569500000000062e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:14.622" endtime="20201030 15:53:14.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:14.631" level="INFO">${ACCURACY} = {'diff': [7.655599999999846e-05, 7.624999999999993e-05, 7.652799999999932e-05, 7.647300000000051e-05, 7.620799999999775e-05, 7.569500000000062e-05, 7.651399999999975e-05, 7.569400000000115e-05, 7.6347...</msg>
<status status="PASS" starttime="20201030 15:53:14.627" endtime="20201030 15:53:14.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.635" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 15:53:14.634" endtime="20201030 15:53:14.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.638" level="INFO">VALUE: [7.655599999999846e-05, 7.624999999999993e-05, 7.652799999999932e-05, 7.647300000000051e-05, 7.620799999999775e-05, 7.569500000000062e-05, 7.651399999999975e-05, 7.569400000000115e-05, 7.634700000000091e-05, 7.613899999999937e-05, 7.640199999999972e-05, 7.643000000000233e-05, 7.64029999999992e-05, 7.650000000000018e-05, 7.622200000000079e-05, 7.650000000000018e-05, 7.619399999999818e-05, 7.651399999999975e-05, 7.650000000000018e-05, 7.627799999999907e-05, 7.66250000000003e-05, 7.623600000000036e-05, 7.624999999999993e-05, 7.643099999999833e-05, 7.641699999999876e-05, 7.568100000000105e-05, 7.659800000000064e-05, 7.619399999999818e-05, 7.654099999999942e-05, 7.654099999999942e-05, 7.626400000000297e-05, 7.619400000000165e-05, 7.630499999999873e-05, 7.663899999999987e-05, 7.654200000000236e-05, 7.654200000000236e-05, 7.598600000000011e-05, 7.629200000000211e-05, 7.636100000000048e-05, 7.650000000000018e-05, 7.616699999999851e-05, 7.641700000000223e-05, 7.64310000000018e-05, 7.623600000000036e-05, 7.637499999999658e-05, 7.644500000000137e-05, 7.627799999999907e-05, 7.647300000000051e-05, 7.570900000000019e-05, 7.629099999999917e-05]</msg>
<status status="PASS" starttime="20201030 15:53:14.636" endtime="20201030 15:53:14.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.631" endtime="20201030 15:53:14.639"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:14.643" endtime="20201030 15:53:14.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.641" endtime="20201030 15:53:14.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.640" endtime="20201030 15:53:14.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.281" endtime="20201030 15:53:14.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.281" endtime="20201030 15:53:14.663"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.672" endtime="20201030 15:53:14.690"></status>
</kw>
<msg timestamp="20201030 15:53:14.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.671" endtime="20201030 15:53:14.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.691" endtime="20201030 15:53:14.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.694" endtime="20201030 15:53:14.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.668" endtime="20201030 15:53:14.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.666" endtime="20201030 15:53:14.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.703" endtime="20201030 15:53:14.991"></status>
</kw>
<msg timestamp="20201030 15:53:14.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021979306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.701" endtime="20201030 15:53:14.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021979306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.995" endtime="20201030 15:53:15.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.003" endtime="20201030 15:53:15.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.699" endtime="20201030 15:53:15.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.697" endtime="20201030 15:53:15.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:15.010" level="INFO">${RESULT} = [{'diff': 7.741600000000029e-05}, {'diff': 7.743099999999933e-05}, {'diff': 7.730499999999974e-05}, {'diff': 7.74440000000029e-05}, {'diff': 7.76250000000013e-05}, {'diff': 7.75129999999978e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:53:15.007" endtime="20201030 15:53:15.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:15.014" level="INFO">${ACCURACY} = {'diff': [7.741600000000029e-05, 7.743099999999933e-05, 7.730499999999974e-05, 7.74440000000029e-05, 7.76250000000013e-05, 7.75129999999978e-05, 7.741700000000323e-05, 7.723600000000136e-05, 7.7152999...</msg>
<status status="PASS" starttime="20201030 15:53:15.011" endtime="20201030 15:53:15.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.019" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 15:53:15.018" endtime="20201030 15:53:15.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.021" level="INFO">VALUE: [7.741600000000029e-05, 7.743099999999933e-05, 7.730499999999974e-05, 7.74440000000029e-05, 7.76250000000013e-05, 7.75129999999978e-05, 7.741700000000323e-05, 7.723600000000136e-05, 7.715299999999994e-05, 7.668100000000205e-05, 7.70830000000021e-05, 7.74030000000002e-05, 7.761100000000173e-05, 7.737500000000105e-05, 7.669499999999815e-05, 7.723700000000083e-05, 7.747199999999857e-05, 7.758299999999912e-05, 7.737500000000105e-05, 7.754100000000042e-05, 7.742999999999986e-05, 7.744399999999943e-05, 7.72640000000005e-05, 7.729100000000017e-05, 7.727800000000007e-05, 7.734699999999844e-05, 7.733299999999887e-05, 7.759700000000216e-05, 7.741699999999976e-05, 7.734700000000191e-05, 7.752800000000032e-05, 7.709700000000166e-05, 7.72640000000005e-05, 7.670899999999772e-05, 7.729199999999964e-05, 7.72640000000005e-05, 7.756999999999903e-05, 7.720899999999822e-05, 7.726300000000103e-05, 7.666599999999954e-05, 7.7457999999999e-05, 7.736099999999801e-05, 7.725000000000093e-05, 7.742999999999986e-05, 7.729100000000017e-05, 7.755499999999999e-05, 7.756899999999955e-05, 7.716699999999951e-05, 7.748599999999814e-05, 7.733299999999887e-05]</msg>
<status status="PASS" starttime="20201030 15:53:15.020" endtime="20201030 15:53:15.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.015" endtime="20201030 15:53:15.023"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:15.026" endtime="20201030 15:53:15.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.025" endtime="20201030 15:53:15.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.024" endtime="20201030 15:53:15.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.664" endtime="20201030 15:53:15.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.664" endtime="20201030 15:53:15.047"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.056" endtime="20201030 15:53:15.075"></status>
</kw>
<msg timestamp="20201030 15:53:15.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.054" endtime="20201030 15:53:15.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.076" endtime="20201030 15:53:15.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.079" endtime="20201030 15:53:15.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.052" endtime="20201030 15:53:15.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.050" endtime="20201030 15:53:15.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.088" endtime="20201030 15:53:15.373"></status>
</kw>
<msg timestamp="20201030 15:53:15.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022868333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022946486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.086" endtime="20201030 15:53:15.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022868333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022946486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.378" endtime="20201030 15:53:15.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.386" endtime="20201030 15:53:15.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.084" endtime="20201030 15:53:15.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.082" endtime="20201030 15:53:15.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:15.393" level="INFO">${RESULT} = [{'diff': 7.815299999999747e-05}, {'diff': 7.855500000000099e-05}, {'diff': 7.834699999999944e-05}, {'diff': 7.802800000000082e-05}, {'diff': 7.816600000000104e-05}, {'diff': 7.816700000000051e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:15.390" endtime="20201030 15:53:15.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:15.397" level="INFO">${ACCURACY} = {'diff': [7.815299999999747e-05, 7.855500000000099e-05, 7.834699999999944e-05, 7.802800000000082e-05, 7.816600000000104e-05, 7.816700000000051e-05, 7.768000000000011e-05, 7.83190000000003e-05, 7.84999...</msg>
<status status="PASS" starttime="20201030 15:53:15.394" endtime="20201030 15:53:15.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.401" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 15:53:15.400" endtime="20201030 15:53:15.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.405" level="INFO">VALUE: [7.815299999999747e-05, 7.855500000000099e-05, 7.834699999999944e-05, 7.802800000000082e-05, 7.816600000000104e-05, 7.816700000000051e-05, 7.768000000000011e-05, 7.83190000000003e-05, 7.849999999999871e-05, 7.815300000000094e-05, 7.847200000000304e-05, 7.770900000000219e-05, 7.822199999999932e-05, 7.861099999999926e-05, 7.765300000000044e-05, 7.86389999999984e-05, 7.840200000000172e-05, 7.772300000000176e-05, 7.844400000000043e-05, 7.861099999999926e-05, 7.86389999999984e-05, 7.836099999999901e-05, 7.819400000000018e-05, 7.798599999999864e-05, 7.855499999999752e-05, 7.824999999999846e-05, 7.772199999999882e-05, 7.819400000000018e-05, 7.83190000000003e-05, 7.844399999999696e-05, 7.838899999999815e-05, 7.850000000000218e-05, 7.851399999999828e-05, 7.85969999999997e-05, 7.773600000000186e-05, 7.822199999999932e-05, 7.84030000000012e-05, 7.862499999999883e-05, 7.818100000000008e-05, 7.845899999999947e-05, 7.769500000000262e-05, 7.772200000000229e-05, 7.820799999999975e-05, 7.862499999999883e-05, 7.865300000000144e-05, 7.838899999999815e-05, 7.86389999999984e-05, 7.841600000000129e-05, 7.833299999999987e-05, 7.824999999999846e-05]</msg>
<status status="PASS" starttime="20201030 15:53:15.403" endtime="20201030 15:53:15.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.398" endtime="20201030 15:53:15.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:15.410" endtime="20201030 15:53:15.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.408" endtime="20201030 15:53:15.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.407" endtime="20201030 15:53:15.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.048" endtime="20201030 15:53:15.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.047" endtime="20201030 15:53:15.431"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.439" endtime="20201030 15:53:15.457"></status>
</kw>
<msg timestamp="20201030 15:53:15.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.438" endtime="20201030 15:53:15.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.459" endtime="20201030 15:53:15.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.461" endtime="20201030 15:53:15.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.435" endtime="20201030 15:53:15.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.433" endtime="20201030 15:53:15.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.471" endtime="20201030 15:53:15.756"></status>
</kw>
<msg timestamp="20201030 15:53:15.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022068639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022147347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.469" endtime="20201030 15:53:15.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022068639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022147347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.761" endtime="20201030 15:53:15.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.769" endtime="20201030 15:53:15.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.466" endtime="20201030 15:53:15.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.465" endtime="20201030 15:53:15.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:15.776" level="INFO">${RESULT} = [{'diff': 7.870800000000025e-05}, {'diff': 7.949999999999971e-05}, {'diff': 7.959699999999723e-05}, {'diff': 7.861099999999926e-05}, {'diff': 7.951399999999928e-05}, {'diff': 7.96389999999994e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:15.772" endtime="20201030 15:53:15.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:15.781" level="INFO">${ACCURACY} = {'diff': [7.870800000000025e-05, 7.949999999999971e-05, 7.959699999999723e-05, 7.861099999999926e-05, 7.951399999999928e-05, 7.96389999999994e-05, 7.932000000000078e-05, 7.866700000000101e-05, 7.94720...</msg>
<status status="PASS" starttime="20201030 15:53:15.777" endtime="20201030 15:53:15.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.785" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 15:53:15.784" endtime="20201030 15:53:15.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.788" level="INFO">VALUE: [7.870800000000025e-05, 7.949999999999971e-05, 7.959699999999723e-05, 7.861099999999926e-05, 7.951399999999928e-05, 7.96389999999994e-05, 7.932000000000078e-05, 7.866700000000101e-05, 7.947200000000057e-05, 7.913799999999943e-05, 7.922200000000032e-05, 7.938899999999915e-05, 7.919499999999718e-05, 7.929200000000164e-05, 7.932000000000078e-05, 7.920800000000075e-05, 7.868000000000111e-05, 7.940200000000272e-05, 7.94169999999983e-05, 7.866700000000101e-05, 7.948600000000014e-05, 7.954200000000189e-05, 7.869400000000068e-05, 7.920800000000075e-05, 7.919400000000118e-05, 7.956899999999809e-05, 7.932000000000078e-05, 7.868100000000058e-05, 7.868100000000058e-05, 7.945900000000047e-05, 7.943099999999786e-05, 7.930599999999774e-05, 7.94450000000009e-05, 7.865300000000144e-05, 7.957000000000103e-05, 7.937499999999958e-05, 7.95129999999998e-05, 7.916599999999857e-05, 7.962499999999983e-05, 7.952699999999938e-05, 7.957000000000103e-05, 7.952800000000232e-05, 7.929199999999817e-05, 7.94450000000009e-05, 7.919400000000118e-05, 7.952800000000232e-05, 7.870800000000025e-05, 7.924999999999946e-05, 7.924999999999946e-05, 7.916700000000151e-05]</msg>
<status status="PASS" starttime="20201030 15:53:15.786" endtime="20201030 15:53:15.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.781" endtime="20201030 15:53:15.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:15.793" endtime="20201030 15:53:15.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.791" endtime="20201030 15:53:15.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.790" endtime="20201030 15:53:15.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.432" endtime="20201030 15:53:15.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.431" endtime="20201030 15:53:15.813"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.822" endtime="20201030 15:53:15.840"></status>
</kw>
<msg timestamp="20201030 15:53:15.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.821" endtime="20201030 15:53:15.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.842" endtime="20201030 15:53:15.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.844" endtime="20201030 15:53:15.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.818" endtime="20201030 15:53:15.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.816" endtime="20201030 15:53:15.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.853" endtime="20201030 15:53:16.142"></status>
</kw>
<msg timestamp="20201030 15:53:16.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022272528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.852" endtime="20201030 15:53:16.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022272528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:16.147" endtime="20201030 15:53:16.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.155" endtime="20201030 15:53:16.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.849" endtime="20201030 15:53:16.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.848" endtime="20201030 15:53:16.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:16.162" level="INFO">${RESULT} = [{'diff': 8.054199999999942e-05}, {'diff': 8.052799999999985e-05}, {'diff': 8.031999999999831e-05}, {'diff': 8.047299999999757e-05}, {'diff': 8.023700000000036e-05}, {'diff': 8.022200000000132e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:16.158" endtime="20201030 15:53:16.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:16.166" level="INFO">${ACCURACY} = {'diff': [8.054199999999942e-05, 8.052799999999985e-05, 8.031999999999831e-05, 8.047299999999757e-05, 8.023700000000036e-05, 8.022200000000132e-05, 7.967999999999864e-05, 8.048600000000114e-05, 8.0639...</msg>
<status status="PASS" starttime="20201030 15:53:16.163" endtime="20201030 15:53:16.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.170" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 15:53:16.169" endtime="20201030 15:53:16.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.173" level="INFO">VALUE: [8.054199999999942e-05, 8.052799999999985e-05, 8.031999999999831e-05, 8.047299999999757e-05, 8.023700000000036e-05, 8.022200000000132e-05, 7.967999999999864e-05, 8.048600000000114e-05, 8.06390000000004e-05, 8.052700000000038e-05, 8.038900000000015e-05, 8.055499999999952e-05, 7.972200000000082e-05, 8.06390000000004e-05, 7.963900000000287e-05, 7.970800000000125e-05, 8.054199999999942e-05, 7.997200000000107e-05, 8.025000000000046e-05, 8.034700000000145e-05, 8.054199999999942e-05, 8.038900000000015e-05, 8.056999999999856e-05, 8.034799999999745e-05, 8.062500000000083e-05, 8.026400000000003e-05, 8.058300000000213e-05, 8.016599999999957e-05, 8.023600000000089e-05, 8.016599999999957e-05, 8.045799999999853e-05, 8.031899999999884e-05, 8.023599999999742e-05, 7.970800000000125e-05, 8.06109999999978e-05, 8.06390000000004e-05, 8.015299999999947e-05, 7.965300000000244e-05, 8.05970000000017e-05, 7.997200000000107e-05, 8.037500000000058e-05, 8.023599999999742e-05, 8.041599999999982e-05, 8.062500000000083e-05, 8.043100000000233e-05, 8.031899999999884e-05, 8.029199999999917e-05, 8.047200000000157e-05, 8.051400000000028e-05, 8.031899999999884e-05]</msg>
<status status="PASS" starttime="20201030 15:53:16.171" endtime="20201030 15:53:16.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.167" endtime="20201030 15:53:16.174"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:16.178" endtime="20201030 15:53:16.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.176" endtime="20201030 15:53:16.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.175" endtime="20201030 15:53:16.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.814" endtime="20201030 15:53:16.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.814" endtime="20201030 15:53:16.199"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.207" endtime="20201030 15:53:16.226"></status>
</kw>
<msg timestamp="20201030 15:53:16.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.206" endtime="20201030 15:53:16.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.227" endtime="20201030 15:53:16.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.230" endtime="20201030 15:53:16.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.203" endtime="20201030 15:53:16.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.201" endtime="20201030 15:53:16.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.239" endtime="20201030 15:53:16.525"></status>
</kw>
<msg timestamp="20201030 15:53:16.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022872125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022953486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:16.238" endtime="20201030 15:53:16.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022872125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022953486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:16.529" endtime="20201030 15:53:16.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.537" endtime="20201030 15:53:16.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.235" endtime="20201030 15:53:16.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.233" endtime="20201030 15:53:16.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:16.544" level="INFO">${RESULT} = [{'diff': 8.136099999999855e-05}, {'diff': 8.154200000000042e-05}, {'diff': 8.145799999999953e-05}, {'diff': 8.155599999999999e-05}, {'diff': 8.152800000000085e-05}, {'diff': 8.136100000000202e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:16.541" endtime="20201030 15:53:16.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:16.548" level="INFO">${ACCURACY} = {'diff': [8.136099999999855e-05, 8.154200000000042e-05, 8.145799999999953e-05, 8.155599999999999e-05, 8.152800000000085e-05, 8.136100000000202e-05, 8.14170000000003e-05, 8.123600000000189e-05, 8.12640...</msg>
<status status="PASS" starttime="20201030 15:53:16.545" endtime="20201030 15:53:16.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.553" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 15:53:16.552" endtime="20201030 15:53:16.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.555" level="INFO">VALUE: [8.136099999999855e-05, 8.154200000000042e-05, 8.145799999999953e-05, 8.155599999999999e-05, 8.152800000000085e-05, 8.136100000000202e-05, 8.14170000000003e-05, 8.123600000000189e-05, 8.126400000000103e-05, 8.073599999999792e-05, 8.072299999999782e-05, 8.131899999999984e-05, 8.119399999999971e-05, 8.150000000000171e-05, 8.158299999999966e-05, 8.122199999999885e-05, 8.122199999999885e-05, 8.143000000000039e-05, 8.152800000000085e-05, 8.162500000000183e-05, 8.155500000000052e-05, 8.136100000000202e-05, 8.119500000000265e-05, 8.118099999999961e-05, 8.115300000000047e-05, 8.154200000000042e-05, 8.130599999999974e-05, 8.062500000000083e-05, 8.120899999999875e-05, 8.126400000000103e-05, 8.148600000000214e-05, 8.129200000000017e-05, 8.14719999999991e-05, 8.159699999999923e-05, 8.151400000000128e-05, 8.12780000000006e-05, 8.149999999999824e-05, 8.151399999999781e-05, 8.143000000000039e-05, 8.158299999999966e-05, 8.12780000000006e-05, 8.162500000000183e-05, 8.140299999999726e-05, 8.122199999999885e-05, 8.134699999999898e-05, 8.123599999999842e-05, 8.138900000000115e-05, 8.147200000000257e-05, 8.149999999999824e-05, 8.138899999999769e-05]</msg>
<status status="PASS" starttime="20201030 15:53:16.554" endtime="20201030 15:53:16.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.549" endtime="20201030 15:53:16.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:16.565" endtime="20201030 15:53:16.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.563" endtime="20201030 15:53:16.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.562" endtime="20201030 15:53:16.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.200" endtime="20201030 15:53:16.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.199" endtime="20201030 15:53:16.585"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.594" endtime="20201030 15:53:16.613"></status>
</kw>
<msg timestamp="20201030 15:53:16.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.593" endtime="20201030 15:53:16.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.614" endtime="20201030 15:53:16.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.617" endtime="20201030 15:53:16.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.590" endtime="20201030 15:53:16.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.588" endtime="20201030 15:53:16.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.626" endtime="20201030 15:53:16.912"></status>
</kw>
<msg timestamp="20201030 15:53:16.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022177542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022259778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:16.624" endtime="20201030 15:53:16.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022177542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022259778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:16.916" endtime="20201030 15:53:16.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.925" endtime="20201030 15:53:16.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.622" endtime="20201030 15:53:16.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.620" endtime="20201030 15:53:16.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:16.931" level="INFO">${RESULT} = [{'diff': 8.223599999999942e-05}, {'diff': 8.227799999999813e-05}, {'diff': 8.215300000000147e-05}, {'diff': 8.168100000000011e-05}, {'diff': 8.2152999999998e-05}, {'diff': 8.247299999999957e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:16.928" endtime="20201030 15:53:16.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:16.936" level="INFO">${ACCURACY} = {'diff': [8.223599999999942e-05, 8.227799999999813e-05, 8.215300000000147e-05, 8.168100000000011e-05, 8.2152999999998e-05, 8.247299999999957e-05, 8.224999999999899e-05, 8.244400000000096e-05, 8.258300...</msg>
<status status="PASS" starttime="20201030 15:53:16.932" endtime="20201030 15:53:16.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.941" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 15:53:16.940" endtime="20201030 15:53:16.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.943" level="INFO">VALUE: [8.223599999999942e-05, 8.227799999999813e-05, 8.215300000000147e-05, 8.168100000000011e-05, 8.2152999999998e-05, 8.247299999999957e-05, 8.224999999999899e-05, 8.244400000000096e-05, 8.258300000000066e-05, 8.259700000000023e-05, 8.251399999999881e-05, 8.220800000000028e-05, 8.245799999999706e-05, 8.176400000000153e-05, 8.255600000000099e-05, 8.257000000000056e-05, 8.254200000000142e-05, 8.22780000000016e-05, 8.176400000000153e-05, 8.220800000000028e-05, 8.230500000000127e-05, 8.248599999999967e-05, 8.243100000000086e-05, 8.244500000000043e-05, 8.240300000000172e-05, 8.166700000000054e-05, 8.229200000000117e-05, 8.266600000000207e-05, 8.24720000000001e-05, 8.231900000000084e-05, 8.165300000000097e-05, 8.226399999999856e-05, 8.243000000000139e-05, 8.249999999999924e-05, 8.166700000000054e-05, 8.209699999999973e-05, 8.2152999999998e-05, 8.26529999999985e-05, 8.24309999999974e-05, 8.216700000000104e-05, 8.165300000000097e-05, 8.24720000000001e-05, 8.236099999999955e-05, 8.231900000000084e-05, 8.22369999999989e-05, 8.213799999999896e-05, 8.258300000000066e-05, 8.255499999999805e-05, 8.165199999999803e-05, 8.237500000000259e-05]</msg>
<status status="PASS" starttime="20201030 15:53:16.942" endtime="20201030 15:53:16.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.937" endtime="20201030 15:53:16.945"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:16.948" endtime="20201030 15:53:16.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.947" endtime="20201030 15:53:16.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.946" endtime="20201030 15:53:16.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.586" endtime="20201030 15:53:16.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.586" endtime="20201030 15:53:16.969"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.978" endtime="20201030 15:53:16.996"></status>
</kw>
<msg timestamp="20201030 15:53:16.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.976" endtime="20201030 15:53:16.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.997" endtime="20201030 15:53:16.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.000" endtime="20201030 15:53:17.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.974" endtime="20201030 15:53:17.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.972" endtime="20201030 15:53:17.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.009" endtime="20201030 15:53:17.296"></status>
</kw>
<msg timestamp="20201030 15:53:17.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022070694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022153653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:17.008" endtime="20201030 15:53:17.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022070694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022153653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:17.300" endtime="20201030 15:53:17.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.308" endtime="20201030 15:53:17.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.005" endtime="20201030 15:53:17.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.003" endtime="20201030 15:53:17.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:17.315" level="INFO">${RESULT} = [{'diff': 8.29590000000005e-05}, {'diff': 8.320900000000075e-05}, {'diff': 8.357000000000156e-05}, {'diff': 8.316699999999858e-05}, {'diff': 8.318099999999815e-05}, {'diff': 8.355600000000199e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:17.312" endtime="20201030 15:53:17.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:17.319" level="INFO">${ACCURACY} = {'diff': [8.29590000000005e-05, 8.320900000000075e-05, 8.357000000000156e-05, 8.316699999999858e-05, 8.318099999999815e-05, 8.355600000000199e-05, 8.358400000000113e-05, 8.323600000000042e-05, 8.35419...</msg>
<status status="PASS" starttime="20201030 15:53:17.316" endtime="20201030 15:53:17.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.324" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 15:53:17.323" endtime="20201030 15:53:17.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.326" level="INFO">VALUE: [8.29590000000005e-05, 8.320900000000075e-05, 8.357000000000156e-05, 8.316699999999858e-05, 8.318099999999815e-05, 8.355600000000199e-05, 8.358400000000113e-05, 8.323600000000042e-05, 8.354199999999895e-05, 8.319499999999772e-05, 8.268000000000164e-05, 8.319399999999824e-05, 8.354099999999948e-05, 8.340199999999978e-05, 8.327799999999913e-05, 8.345799999999806e-05, 8.329099999999923e-05, 8.362500000000037e-05, 8.316699999999858e-05, 8.327799999999913e-05, 8.33330000000014e-05, 8.36110000000008e-05, 8.319499999999772e-05, 8.323599999999695e-05, 8.362500000000037e-05, 8.336100000000055e-05, 8.358399999999766e-05, 8.363799999999699e-05, 8.341699999999883e-05, 8.320900000000075e-05, 8.354099999999948e-05, 8.273599999999992e-05, 8.342999999999892e-05, 8.352699999999991e-05, 8.295800000000103e-05, 8.324999999999999e-05, 8.350000000000024e-05, 8.36110000000008e-05, 8.358300000000166e-05, 8.276400000000253e-05, 8.32780000000026e-05, 8.354199999999895e-05, 8.34720000000011e-05, 8.323599999999695e-05, 8.36110000000008e-05, 8.320900000000075e-05, 8.320899999999729e-05, 8.262499999999937e-05, 8.351399999999981e-05, 8.350000000000024e-05]</msg>
<status status="PASS" starttime="20201030 15:53:17.325" endtime="20201030 15:53:17.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.320" endtime="20201030 15:53:17.328"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:17.331" endtime="20201030 15:53:17.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.330" endtime="20201030 15:53:17.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.329" endtime="20201030 15:53:17.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.970" endtime="20201030 15:53:17.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.969" endtime="20201030 15:53:17.352"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.361" endtime="20201030 15:53:17.380"></status>
</kw>
<msg timestamp="20201030 15:53:17.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.359" endtime="20201030 15:53:17.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.382" endtime="20201030 15:53:17.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.385" endtime="20201030 15:53:17.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.357" endtime="20201030 15:53:17.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.354" endtime="20201030 15:53:17.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.394" endtime="20201030 15:53:17.680"></status>
</kw>
<msg timestamp="20201030 15:53:17.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022938375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023022819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:17.392" endtime="20201030 15:53:17.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022938375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023022819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:17.684" endtime="20201030 15:53:17.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.692" endtime="20201030 15:53:17.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.390" endtime="20201030 15:53:17.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.388" endtime="20201030 15:53:17.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:17.699" level="INFO">${RESULT} = [{'diff': 8.444399999999949e-05}, {'diff': 8.447300000000157e-05}, {'diff': 8.445799999999906e-05}, {'diff': 8.43049999999998e-05}, {'diff': 8.44309999999994e-05}, {'diff': 8.462500000000137e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:17.696" endtime="20201030 15:53:17.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:17.703" level="INFO">${ACCURACY} = {'diff': [8.444399999999949e-05, 8.447300000000157e-05, 8.445799999999906e-05, 8.43049999999998e-05, 8.44309999999994e-05, 8.462500000000137e-05, 8.456999999999909e-05, 8.444399999999949e-05, 8.441699...</msg>
<status status="PASS" starttime="20201030 15:53:17.700" endtime="20201030 15:53:17.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.708" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 15:53:17.707" endtime="20201030 15:53:17.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.710" level="INFO">VALUE: [8.444399999999949e-05, 8.447300000000157e-05, 8.445799999999906e-05, 8.43049999999998e-05, 8.44309999999994e-05, 8.462500000000137e-05, 8.456999999999909e-05, 8.444399999999949e-05, 8.441699999999983e-05, 8.452800000000038e-05, 8.445800000000253e-05, 8.419500000000218e-05, 8.398600000000117e-05, 8.368099999999865e-05, 8.463900000000094e-05, 8.416699999999958e-05, 8.44309999999994e-05, 8.444499999999897e-05, 8.423600000000142e-05, 8.372299999999736e-05, 8.458399999999866e-05, 8.370799999999831e-05, 8.423599999999795e-05, 8.424999999999752e-05, 8.43469999999985e-05, 8.365200000000003e-05, 8.422200000000185e-05, 8.395800000000203e-05, 8.376400000000006e-05, 8.456899999999962e-05, 8.454199999999995e-05, 8.430599999999927e-05, 8.447199999999863e-05, 8.440300000000026e-05, 8.418099999999915e-05, 8.46249999999979e-05, 8.373600000000092e-05, 8.42919999999997e-05, 8.451400000000081e-05, 8.426299999999762e-05, 8.436099999999808e-05, 8.429100000000023e-05, 8.441600000000035e-05, 8.426400000000056e-05, 8.423600000000142e-05, 8.444399999999949e-05, 8.440300000000026e-05, 8.43469999999985e-05, 8.368099999999865e-05, 8.430599999999927e-05]</msg>
<status status="PASS" starttime="20201030 15:53:17.709" endtime="20201030 15:53:17.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.704" endtime="20201030 15:53:17.712"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:17.716" endtime="20201030 15:53:17.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.715" endtime="20201030 15:53:17.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.713" endtime="20201030 15:53:17.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.353" endtime="20201030 15:53:17.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.352" endtime="20201030 15:53:17.737"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.746" endtime="20201030 15:53:17.764"></status>
</kw>
<msg timestamp="20201030 15:53:17.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.744" endtime="20201030 15:53:17.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.766" endtime="20201030 15:53:17.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.768" endtime="20201030 15:53:17.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.741" endtime="20201030 15:53:17.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.739" endtime="20201030 15:53:17.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.778" endtime="20201030 15:53:18.065"></status>
</kw>
<msg timestamp="20201030 15:53:18.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022136875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:17.776" endtime="20201030 15:53:18.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022136875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.069" endtime="20201030 15:53:18.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.077" endtime="20201030 15:53:18.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.773" endtime="20201030 15:53:18.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.772" endtime="20201030 15:53:18.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:18.084" level="INFO">${RESULT} = [{'diff': 8.495799999999956e-05}, {'diff': 8.538899999999822e-05}, {'diff': 8.522199999999938e-05}, {'diff': 8.54310000000004e-05}, {'diff': 8.520799999999981e-05}, {'diff': 8.53469999999995e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:18.081" endtime="20201030 15:53:18.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:18.089" level="INFO">${ACCURACY} = {'diff': [8.495799999999956e-05, 8.538899999999822e-05, 8.522199999999938e-05, 8.54310000000004e-05, 8.520799999999981e-05, 8.53469999999995e-05, 8.536099999999908e-05, 8.533299999999994e-05, 8.497199...</msg>
<status status="PASS" starttime="20201030 15:53:18.085" endtime="20201030 15:53:18.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.093" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 15:53:18.092" endtime="20201030 15:53:18.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.096" level="INFO">VALUE: [8.495799999999956e-05, 8.538899999999822e-05, 8.522199999999938e-05, 8.54310000000004e-05, 8.520799999999981e-05, 8.53469999999995e-05, 8.536099999999908e-05, 8.533299999999994e-05, 8.497199999999913e-05, 8.558399999999966e-05, 8.562500000000237e-05, 8.468099999999965e-05, 8.54729999999991e-05, 8.530600000000027e-05, 8.530600000000027e-05, 8.540199999999831e-05, 8.537499999999865e-05, 8.552800000000138e-05, 8.470799999999931e-05, 8.556900000000062e-05, 8.527800000000113e-05, 8.512500000000187e-05, 8.472199999999888e-05, 8.555499999999758e-05, 8.545800000000006e-05, 8.540300000000126e-05, 8.537500000000212e-05, 8.549999999999877e-05, 8.533399999999941e-05, 8.537500000000212e-05, 8.538800000000221e-05, 8.519499999999972e-05, 8.526399999999809e-05, 8.519400000000024e-05, 8.541599999999788e-05, 8.558300000000019e-05, 8.537499999999865e-05, 8.470799999999931e-05, 8.543000000000092e-05, 8.525000000000199e-05, 8.557000000000009e-05, 8.537499999999865e-05, 8.519400000000024e-05, 8.544400000000049e-05, 8.54310000000004e-05, 8.527800000000113e-05, 8.468099999999965e-05, 8.538900000000169e-05, 8.551399999999834e-05, 8.547199999999963e-05]</msg>
<status status="PASS" starttime="20201030 15:53:18.094" endtime="20201030 15:53:18.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.090" endtime="20201030 15:53:18.097"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:18.101" endtime="20201030 15:53:18.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.099" endtime="20201030 15:53:18.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.098" endtime="20201030 15:53:18.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.738" endtime="20201030 15:53:18.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.737" endtime="20201030 15:53:18.122"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.130" endtime="20201030 15:53:18.148"></status>
</kw>
<msg timestamp="20201030 15:53:18.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.129" endtime="20201030 15:53:18.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.150" endtime="20201030 15:53:18.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.152" endtime="20201030 15:53:18.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.126" endtime="20201030 15:53:18.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.124" endtime="20201030 15:53:18.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.162" endtime="20201030 15:53:18.447"></status>
</kw>
<msg timestamp="20201030 15:53:18.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022054944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022141361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.160" endtime="20201030 15:53:18.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022054944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022141361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.452" endtime="20201030 15:53:18.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.460" endtime="20201030 15:53:18.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.157" endtime="20201030 15:53:18.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.155" endtime="20201030 15:53:18.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:18.467" level="INFO">${RESULT} = [{'diff': 8.641699999999836e-05}, {'diff': 8.63470000000005e-05}, {'diff': 8.624999999999952e-05}, {'diff': 8.624999999999952e-05}, {'diff': 8.66249999999999e-05}, {'diff': 8.657000000000109e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:18.463" endtime="20201030 15:53:18.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:18.471" level="INFO">${ACCURACY} = {'diff': [8.641699999999836e-05, 8.63470000000005e-05, 8.624999999999952e-05, 8.624999999999952e-05, 8.66249999999999e-05, 8.657000000000109e-05, 8.644500000000097e-05, 8.63059999999978e-05, 8.5667000...</msg>
<status status="PASS" starttime="20201030 15:53:18.468" endtime="20201030 15:53:18.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.475" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 15:53:18.474" endtime="20201030 15:53:18.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.478" level="INFO">VALUE: [8.641699999999836e-05, 8.63470000000005e-05, 8.624999999999952e-05, 8.624999999999952e-05, 8.66249999999999e-05, 8.657000000000109e-05, 8.644500000000097e-05, 8.63059999999978e-05, 8.566700000000108e-05, 8.655499999999858e-05, 8.634799999999998e-05, 8.63189999999979e-05, 8.644400000000149e-05, 8.640299999999879e-05, 8.623599999999995e-05, 8.640300000000226e-05, 8.641699999999836e-05, 8.651399999999934e-05, 8.565299999999804e-05, 8.618100000000115e-05, 8.63059999999978e-05, 8.619399999999777e-05, 8.569500000000022e-05, 8.619500000000072e-05, 8.56669999999976e-05, 8.612500000000287e-05, 8.655499999999858e-05, 8.641699999999836e-05, 8.637499999999965e-05, 8.64730000000001e-05, 8.627800000000213e-05, 8.640199999999931e-05, 8.634699999999704e-05, 8.565199999999856e-05, 8.620800000000081e-05, 8.644400000000149e-05, 8.629199999999823e-05, 8.568000000000117e-05, 8.619500000000072e-05, 8.651399999999934e-05, 8.632000000000084e-05, 8.626399999999909e-05, 8.618100000000115e-05, 8.638799999999974e-05, 8.645900000000054e-05, 8.668000000000217e-05, 8.62370000000029e-05, 8.572199999999988e-05, 8.625000000000299e-05, 8.619500000000072e-05]</msg>
<status status="PASS" starttime="20201030 15:53:18.477" endtime="20201030 15:53:18.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.472" endtime="20201030 15:53:18.479"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:18.483" endtime="20201030 15:53:18.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.481" endtime="20201030 15:53:18.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.480" endtime="20201030 15:53:18.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.123" endtime="20201030 15:53:18.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.122" endtime="20201030 15:53:18.504"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.512" endtime="20201030 15:53:18.532"></status>
</kw>
<msg timestamp="20201030 15:53:18.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.511" endtime="20201030 15:53:18.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.534" endtime="20201030 15:53:18.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.536" endtime="20201030 15:53:18.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.508" endtime="20201030 15:53:18.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.506" endtime="20201030 15:53:18.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.546" endtime="20201030 15:53:18.834"></status>
</kw>
<msg timestamp="20201030 15:53:18.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023039722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023127097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.544" endtime="20201030 15:53:18.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023039722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023127097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.838" endtime="20201030 15:53:18.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.850" endtime="20201030 15:53:18.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.541" endtime="20201030 15:53:18.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.540" endtime="20201030 15:53:18.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:18.857" level="INFO">${RESULT} = [{'diff': 8.737500000000065e-05}, {'diff': 8.747200000000163e-05}, {'diff': 8.758299999999872e-05}, {'diff': 8.676399999999959e-05}, {'diff': 8.756900000000262e-05}, {'diff': 8.756899999999915e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:18.853" endtime="20201030 15:53:18.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:18.861" level="INFO">${ACCURACY} = {'diff': [8.737500000000065e-05, 8.747200000000163e-05, 8.758299999999872e-05, 8.676399999999959e-05, 8.756900000000262e-05, 8.756899999999915e-05, 8.71799999999992e-05, 8.74860000000012e-05, 8.715299...</msg>
<status status="PASS" starttime="20201030 15:53:18.858" endtime="20201030 15:53:18.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.865" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 15:53:18.864" endtime="20201030 15:53:18.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.869" level="INFO">VALUE: [8.737500000000065e-05, 8.747200000000163e-05, 8.758299999999872e-05, 8.676399999999959e-05, 8.756900000000262e-05, 8.756899999999915e-05, 8.71799999999992e-05, 8.74860000000012e-05, 8.715299999999954e-05, 8.748700000000068e-05, 8.740299999999979e-05, 8.744500000000197e-05, 8.726400000000009e-05, 8.730600000000227e-05, 8.669500000000122e-05, 8.743099999999893e-05, 8.741699999999936e-05, 8.741700000000283e-05, 8.668100000000165e-05, 8.727700000000019e-05, 8.737500000000065e-05, 8.725000000000052e-05, 8.748599999999773e-05, 8.727799999999966e-05, 8.719399999999877e-05, 8.73470000000015e-05, 8.713899999999997e-05, 8.730499999999933e-05, 8.752799999999991e-05, 8.750000000000077e-05, 8.723600000000095e-05, 8.748599999999773e-05, 8.737499999999718e-05, 8.66530000000025e-05, 8.743099999999893e-05, 8.734800000000098e-05, 8.74860000000012e-05, 8.71669999999991e-05, 8.713800000000049e-05, 8.669400000000174e-05, 8.69860000000007e-05, 8.756899999999915e-05, 8.755499999999958e-05, 8.736100000000108e-05, 8.73470000000015e-05, 8.74860000000012e-05, 8.727799999999966e-05, 8.761100000000133e-05, 8.758299999999872e-05, 8.720800000000181e-05]</msg>
<status status="PASS" starttime="20201030 15:53:18.867" endtime="20201030 15:53:18.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.862" endtime="20201030 15:53:18.870"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:18.874" endtime="20201030 15:53:18.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.872" endtime="20201030 15:53:18.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.871" endtime="20201030 15:53:18.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.505" endtime="20201030 15:53:18.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.504" endtime="20201030 15:53:18.895"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.903" endtime="20201030 15:53:18.922"></status>
</kw>
<msg timestamp="20201030 15:53:18.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.902" endtime="20201030 15:53:18.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.924" endtime="20201030 15:53:18.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.926" endtime="20201030 15:53:18.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.899" endtime="20201030 15:53:18.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.897" endtime="20201030 15:53:18.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.936" endtime="20201030 15:53:19.221"></status>
</kw>
<msg timestamp="20201030 15:53:19.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022069722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022158028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.934" endtime="20201030 15:53:19.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022069722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022158028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:19.226" endtime="20201030 15:53:19.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.234" endtime="20201030 15:53:19.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.931" endtime="20201030 15:53:19.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.930" endtime="20201030 15:53:19.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:19.241" level="INFO">${RESULT} = [{'diff': 8.83059999999998e-05}, {'diff': 8.852800000000091e-05}, {'diff': 8.857000000000309e-05}, {'diff': 8.855600000000005e-05}, {'diff': 8.837499999999818e-05}, {'diff': 8.855600000000005e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:19.237" endtime="20201030 15:53:19.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:19.246" level="INFO">${ACCURACY} = {'diff': [8.83059999999998e-05, 8.852800000000091e-05, 8.857000000000309e-05, 8.855600000000005e-05, 8.837499999999818e-05, 8.855600000000005e-05, 8.863900000000147e-05, 8.86250000000019e-05, 8.779199...</msg>
<status status="PASS" starttime="20201030 15:53:19.242" endtime="20201030 15:53:19.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.250" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 15:53:19.249" endtime="20201030 15:53:19.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.253" level="INFO">VALUE: [8.83059999999998e-05, 8.852800000000091e-05, 8.857000000000309e-05, 8.855600000000005e-05, 8.837499999999818e-05, 8.855600000000005e-05, 8.863900000000147e-05, 8.86250000000019e-05, 8.779199999999973e-05, 8.858299999999972e-05, 8.844400000000002e-05, 8.824999999999805e-05, 8.862499999999843e-05, 8.81800000000002e-05, 8.847200000000263e-05, 8.847200000000263e-05, 8.854199999999701e-05, 8.847199999999916e-05, 8.809699999999879e-05, 8.815300000000054e-05, 8.833399999999894e-05, 8.826400000000109e-05, 8.822299999999839e-05, 8.855600000000005e-05, 8.837499999999818e-05, 8.84860000000022e-05, 8.769500000000222e-05, 8.816600000000063e-05, 8.766600000000013e-05, 8.851400000000134e-05, 8.823599999999848e-05, 8.820800000000281e-05, 8.840300000000079e-05, 8.861099999999886e-05, 8.852800000000091e-05, 8.851400000000134e-05, 8.834699999999904e-05, 8.843099999999993e-05, 8.851400000000134e-05, 8.850000000000177e-05, 8.81670000000001e-05, 8.825000000000152e-05, 8.84999999999983e-05, 8.859699999999929e-05, 8.825000000000152e-05, 8.852700000000144e-05, 8.765200000000056e-05, 8.829200000000023e-05, 8.820799999999934e-05, 8.81389999999975e-05]</msg>
<status status="PASS" starttime="20201030 15:53:19.251" endtime="20201030 15:53:19.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.247" endtime="20201030 15:53:19.254"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:19.258" endtime="20201030 15:53:19.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.256" endtime="20201030 15:53:19.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.255" endtime="20201030 15:53:19.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.896" endtime="20201030 15:53:19.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.895" endtime="20201030 15:53:19.279"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.287" endtime="20201030 15:53:19.306"></status>
</kw>
<msg timestamp="20201030 15:53:19.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:19.286" endtime="20201030 15:53:19.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:19.308" endtime="20201030 15:53:19.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.310" endtime="20201030 15:53:19.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.283" endtime="20201030 15:53:19.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.281" endtime="20201030 15:53:19.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.319" endtime="20201030 15:53:19.609"></status>
</kw>
<msg timestamp="20201030 15:53:19.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022090319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022179528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:19.318" endtime="20201030 15:53:19.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022090319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022179528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:19.613" endtime="20201030 15:53:19.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.621" endtime="20201030 15:53:19.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.315" endtime="20201030 15:53:19.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.314" endtime="20201030 15:53:19.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:19.628" level="INFO">${RESULT} = [{'diff': 8.920899999999982e-05}, {'diff': 8.933399999999994e-05}, {'diff': 8.943100000000093e-05}, {'diff': 8.929100000000176e-05}, {'diff': 8.920800000000034e-05}, {'diff': 8.91939999999973e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:19.625" endtime="20201030 15:53:19.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:19.632" level="INFO">${ACCURACY} = {'diff': [8.920899999999982e-05, 8.933399999999994e-05, 8.943100000000093e-05, 8.929100000000176e-05, 8.920800000000034e-05, 8.91939999999973e-05, 8.94999999999993e-05, 8.947200000000016e-05, 8.952699...</msg>
<status status="PASS" starttime="20201030 15:53:19.629" endtime="20201030 15:53:19.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.637" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 15:53:19.635" endtime="20201030 15:53:19.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.641" level="INFO">VALUE: [8.920899999999982e-05, 8.933399999999994e-05, 8.943100000000093e-05, 8.929100000000176e-05, 8.920800000000034e-05, 8.91939999999973e-05, 8.94999999999993e-05, 8.947200000000016e-05, 8.952699999999897e-05, 8.961099999999986e-05, 8.93190000000009e-05, 8.927800000000166e-05, 8.945799999999712e-05, 8.919500000000025e-05, 8.929199999999776e-05, 8.962499999999943e-05, 8.959700000000029e-05, 8.926399999999862e-05, 8.943099999999746e-05, 8.951399999999887e-05, 8.945900000000007e-05, 8.961199999999933e-05, 8.952800000000191e-05, 8.873599999999898e-05, 8.955500000000158e-05, 8.956899999999768e-05, 8.952699999999897e-05, 8.91800000000012e-05, 8.916599999999816e-05, 8.923600000000295e-05, 8.951400000000234e-05, 8.86670000000006e-05, 8.918100000000068e-05, 8.918100000000068e-05, 8.924999999999905e-05, 8.938899999999875e-05, 8.961099999999986e-05, 8.929199999999776e-05, 8.936099999999961e-05, 8.865300000000104e-05, 8.932000000000037e-05, 8.934700000000004e-05, 8.91519999999986e-05, 8.955500000000158e-05, 8.91389999999985e-05, 8.947200000000016e-05, 8.926399999999862e-05, 8.955500000000158e-05, 8.86800000000007e-05, 8.954199999999801e-05]</msg>
<status status="PASS" starttime="20201030 15:53:19.638" endtime="20201030 15:53:19.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.633" endtime="20201030 15:53:19.642"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:19.646" endtime="20201030 15:53:19.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.644" endtime="20201030 15:53:19.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.643" endtime="20201030 15:53:19.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.279" endtime="20201030 15:53:19.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.279" endtime="20201030 15:53:19.667"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.676" endtime="20201030 15:53:19.695"></status>
</kw>
<msg timestamp="20201030 15:53:19.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:19.674" endtime="20201030 15:53:19.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:19.697" endtime="20201030 15:53:19.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.699" endtime="20201030 15:53:19.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.671" endtime="20201030 15:53:19.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.669" endtime="20201030 15:53:19.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.709" endtime="20201030 15:53:19.995"></status>
</kw>
<msg timestamp="20201030 15:53:19.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022969389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023059667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:19.707" endtime="20201030 15:53:19.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022969389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023059667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:19.999" endtime="20201030 15:53:20.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.007" endtime="20201030 15:53:20.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.704" endtime="20201030 15:53:20.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.703" endtime="20201030 15:53:20.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:20.014" level="INFO">${RESULT} = [{'diff': 9.027799999999919e-05}, {'diff': 8.96670000000016e-05}, {'diff': 8.965299999999857e-05}, {'diff': 9.020900000000082e-05}, {'diff': 9.058300000000172e-05}, {'diff': 9.038800000000027e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:20.011" endtime="20201030 15:53:20.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:20.018" level="INFO">${ACCURACY} = {'diff': [9.027799999999919e-05, 8.96670000000016e-05, 8.965299999999857e-05, 9.020900000000082e-05, 9.058300000000172e-05, 9.038800000000027e-05, 9.042999999999898e-05, 9.020800000000134e-05, 9.02779...</msg>
<status status="PASS" starttime="20201030 15:53:20.015" endtime="20201030 15:53:20.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.023" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 15:53:20.021" endtime="20201030 15:53:20.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.025" level="INFO">VALUE: [9.027799999999919e-05, 8.96670000000016e-05, 8.965299999999857e-05, 9.020900000000082e-05, 9.058300000000172e-05, 9.038800000000027e-05, 9.042999999999898e-05, 9.020800000000134e-05, 9.027799999999919e-05, 8.970799999999737e-05, 8.969400000000127e-05, 8.966699999999814e-05, 8.969400000000127e-05, 9.029199999999876e-05, 9.020799999999787e-05, 9.025000000000005e-05, 9.06520000000001e-05, 9.061100000000086e-05, 9.052799999999944e-05, 9.026399999999962e-05, 9.04450000000015e-05, 9.055599999999858e-05, 8.970800000000084e-05, 9.023600000000048e-05, 9.058299999999825e-05, 9.016599999999916e-05, 9.052799999999944e-05, 9.025000000000005e-05, 9.008299999999775e-05, 9.051399999999987e-05, 9.034700000000104e-05, 9.025000000000005e-05, 9.026399999999962e-05, 9.056999999999815e-05, 9.018100000000168e-05, 8.972200000000041e-05, 9.043099999999846e-05, 8.972299999999989e-05, 8.965300000000204e-05, 9.015300000000254e-05, 9.020799999999787e-05, 9.063800000000052e-05, 9.043100000000193e-05, 9.055500000000258e-05, 8.96939999999978e-05, 9.056900000000215e-05, 9.058300000000172e-05, 9.048600000000073e-05, 9.041699999999889e-05, 9.025000000000005e-05]</msg>
<status status="PASS" starttime="20201030 15:53:20.024" endtime="20201030 15:53:20.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.019" endtime="20201030 15:53:20.027"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:20.031" endtime="20201030 15:53:20.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.029" endtime="20201030 15:53:20.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.028" endtime="20201030 15:53:20.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.668" endtime="20201030 15:53:20.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.667" endtime="20201030 15:53:20.052"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.060" endtime="20201030 15:53:20.079"></status>
</kw>
<msg timestamp="20201030 15:53:20.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.059" endtime="20201030 15:53:20.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.081" endtime="20201030 15:53:20.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.083" endtime="20201030 15:53:20.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.056" endtime="20201030 15:53:20.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.054" endtime="20201030 15:53:20.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.093" endtime="20201030 15:53:20.378"></status>
</kw>
<msg timestamp="20201030 15:53:20.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022104653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022196208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:20.091" endtime="20201030 15:53:20.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022104653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022196208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:20.382" endtime="20201030 15:53:20.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.391" endtime="20201030 15:53:20.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.088" endtime="20201030 15:53:20.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.087" endtime="20201030 15:53:20.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:20.397" level="INFO">${RESULT} = [{'diff': 9.155500000000011e-05}, {'diff': 9.13190000000029e-05}, {'diff': 9.141600000000041e-05}, {'diff': 9.136099999999814e-05}, {'diff': 9.120799999999887e-05}, {'diff': 9.122199999999844e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:20.394" endtime="20201030 15:53:20.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:20.402" level="INFO">${ACCURACY} = {'diff': [9.155500000000011e-05, 9.13190000000029e-05, 9.141600000000041e-05, 9.136099999999814e-05, 9.120799999999887e-05, 9.122199999999844e-05, 9.118099999999921e-05, 9.059699999999782e-05, 9.15139...</msg>
<status status="PASS" starttime="20201030 15:53:20.398" endtime="20201030 15:53:20.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.407" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 15:53:20.406" endtime="20201030 15:53:20.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.409" level="INFO">VALUE: [9.155500000000011e-05, 9.13190000000029e-05, 9.141600000000041e-05, 9.136099999999814e-05, 9.120799999999887e-05, 9.122199999999844e-05, 9.118099999999921e-05, 9.059699999999782e-05, 9.15139999999974e-05, 9.152799999999697e-05, 9.120899999999835e-05, 9.06670000000026e-05, 9.144399999999955e-05, 9.072300000000089e-05, 9.117999999999973e-05, 9.130599999999933e-05, 9.144399999999955e-05, 9.072200000000141e-05, 9.115300000000007e-05, 9.148600000000173e-05, 9.122200000000191e-05, 9.118099999999921e-05, 9.137500000000118e-05, 9.115300000000007e-05, 9.1639000000001e-05, 9.115300000000007e-05, 9.095800000000209e-05, 9.162500000000143e-05, 9.116699999999964e-05, 9.165300000000057e-05, 9.140300000000032e-05, 9.068099999999871e-05, 9.162500000000143e-05, 9.122199999999844e-05, 9.070799999999837e-05, 9.122199999999844e-05, 9.06939999999988e-05, 9.138900000000075e-05, 9.120799999999887e-05, 9.142999999999998e-05, 9.149999999999783e-05, 9.14719999999987e-05, 9.1332999999999e-05, 9.148599999999826e-05, 9.140300000000032e-05, 9.147200000000216e-05, 9.145900000000207e-05, 9.116699999999964e-05, 9.148600000000173e-05, 9.161200000000133e-05]</msg>
<status status="PASS" starttime="20201030 15:53:20.408" endtime="20201030 15:53:20.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.403" endtime="20201030 15:53:20.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:20.415" endtime="20201030 15:53:20.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.413" endtime="20201030 15:53:20.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.412" endtime="20201030 15:53:20.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.053" endtime="20201030 15:53:20.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.052" endtime="20201030 15:53:20.435"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.444" endtime="20201030 15:53:20.463"></status>
</kw>
<msg timestamp="20201030 15:53:20.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.442" endtime="20201030 15:53:20.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.465" endtime="20201030 15:53:20.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.467" endtime="20201030 15:53:20.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.440" endtime="20201030 15:53:20.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.438" endtime="20201030 15:53:20.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.477" endtime="20201030 15:53:20.763"></status>
</kw>
<msg timestamp="20201030 15:53:20.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022057736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022149889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:20.475" endtime="20201030 15:53:20.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022057736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022149889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:20.768" endtime="20201030 15:53:20.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.776" endtime="20201030 15:53:20.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.472" endtime="20201030 15:53:20.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.471" endtime="20201030 15:53:20.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:20.783" level="INFO">${RESULT} = [{'diff': 9.21529999999976e-05}, {'diff': 9.219499999999978e-05}, {'diff': 9.259699999999982e-05}, {'diff': 9.169500000000275e-05}, {'diff': 9.172300000000189e-05}, {'diff': 9.241700000000089e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:20.779" endtime="20201030 15:53:20.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:20.787" level="INFO">${ACCURACY} = {'diff': [9.21529999999976e-05, 9.219499999999978e-05, 9.259699999999982e-05, 9.169500000000275e-05, 9.172300000000189e-05, 9.241700000000089e-05, 9.226299999999868e-05, 9.237500000000218e-05, 9.22219...</msg>
<status status="PASS" starttime="20201030 15:53:20.784" endtime="20201030 15:53:20.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.791" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 15:53:20.790" endtime="20201030 15:53:20.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.794" level="INFO">VALUE: [9.21529999999976e-05, 9.219499999999978e-05, 9.259699999999982e-05, 9.169500000000275e-05, 9.172300000000189e-05, 9.241700000000089e-05, 9.226299999999868e-05, 9.237500000000218e-05, 9.222199999999944e-05, 9.237500000000218e-05, 9.25139999999984e-05, 9.234699999999957e-05, 9.265300000000157e-05, 9.237500000000218e-05, 9.24719999999997e-05, 9.215300000000107e-05, 9.25000000000023e-05, 9.218100000000021e-05, 9.23199999999999e-05, 9.240300000000132e-05, 9.23199999999999e-05, 9.249999999999883e-05, 9.234800000000251e-05, 9.24589999999996e-05, 9.236099999999914e-05, 9.225000000000205e-05, 9.249999999999883e-05, 9.168000000000023e-05, 9.222199999999944e-05, 9.16939999999998e-05, 9.244399999999708e-05, 9.248599999999926e-05, 9.252800000000144e-05, 9.262499999999896e-05, 9.230600000000033e-05, 9.259699999999982e-05, 9.2333e-05, 9.241700000000089e-05, 9.1639000000001e-05, 9.255600000000058e-05, 9.215300000000107e-05, 9.172300000000189e-05, 9.220899999999935e-05, 9.225000000000205e-05, 9.234699999999957e-05, 9.2333e-05, 9.238900000000175e-05, 9.234700000000304e-05, 9.249999999999883e-05, 9.24719999999997e-05]</msg>
<status status="PASS" starttime="20201030 15:53:20.792" endtime="20201030 15:53:20.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.788" endtime="20201030 15:53:20.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:20.799" endtime="20201030 15:53:20.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.797" endtime="20201030 15:53:20.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.796" endtime="20201030 15:53:20.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.436" endtime="20201030 15:53:20.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.436" endtime="20201030 15:53:20.819"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.828" endtime="20201030 15:53:20.847"></status>
</kw>
<msg timestamp="20201030 15:53:20.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.827" endtime="20201030 15:53:20.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.849" endtime="20201030 15:53:20.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.851" endtime="20201030 15:53:20.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.824" endtime="20201030 15:53:20.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.822" endtime="20201030 15:53:20.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.860" endtime="20201030 15:53:21.146"></status>
</kw>
<msg timestamp="20201030 15:53:21.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022930875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023023944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:20.859" endtime="20201030 15:53:21.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022930875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023023944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.151" endtime="20201030 15:53:21.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.159" endtime="20201030 15:53:21.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.856" endtime="20201030 15:53:21.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.854" endtime="20201030 15:53:21.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:21.166" level="INFO">${RESULT} = [{'diff': 9.306900000000118e-05}, {'diff': 9.320900000000035e-05}, {'diff': 9.340299999999885e-05}, {'diff': 9.348600000000026e-05}, {'diff': 9.342999999999851e-05}, {'diff': 9.337499999999971e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:21.162" endtime="20201030 15:53:21.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:21.170" level="INFO">${ACCURACY} = {'diff': [9.306900000000118e-05, 9.320900000000035e-05, 9.340299999999885e-05, 9.348600000000026e-05, 9.342999999999851e-05, 9.337499999999971e-05, 9.359700000000082e-05, 9.341599999999894e-05, 9.2721...</msg>
<status status="PASS" starttime="20201030 15:53:21.167" endtime="20201030 15:53:21.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.174" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 15:53:21.173" endtime="20201030 15:53:21.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.177" level="INFO">VALUE: [9.306900000000118e-05, 9.320900000000035e-05, 9.340299999999885e-05, 9.348600000000026e-05, 9.342999999999851e-05, 9.337499999999971e-05, 9.359700000000082e-05, 9.341599999999894e-05, 9.272199999999994e-05, 9.358299999999778e-05, 9.349999999999983e-05, 9.322200000000044e-05, 9.325000000000305e-05, 9.361100000000039e-05, 9.341699999999842e-05, 9.352800000000244e-05, 9.334800000000004e-05, 9.357000000000115e-05, 9.316700000000164e-05, 9.270899999999985e-05, 9.272199999999994e-05, 9.345799999999765e-05, 9.336100000000014e-05, 9.340299999999885e-05, 9.358300000000125e-05, 9.338899999999928e-05, 9.338899999999928e-05, 9.370899999999738e-05, 9.337499999999971e-05, 9.351400000000287e-05, 9.345799999999765e-05, 9.340299999999885e-05, 9.354200000000201e-05, 9.318099999999774e-05, 9.36659999999992e-05, 9.266700000000114e-05, 9.318000000000173e-05, 9.348600000000026e-05, 9.329099999999882e-05, 9.318000000000173e-05, 9.318000000000173e-05, 9.36529999999991e-05, 9.352800000000244e-05, 9.362499999999996e-05, 9.366700000000214e-05, 9.358300000000125e-05, 9.336099999999667e-05, 9.316700000000164e-05, 9.34590000000006e-05, 9.340199999999937e-05]</msg>
<status status="PASS" starttime="20201030 15:53:21.175" endtime="20201030 15:53:21.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.171" endtime="20201030 15:53:21.179"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:21.183" endtime="20201030 15:53:21.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.181" endtime="20201030 15:53:21.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.180" endtime="20201030 15:53:21.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.820" endtime="20201030 15:53:21.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.820" endtime="20201030 15:53:21.203"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.213" endtime="20201030 15:53:21.232"></status>
</kw>
<msg timestamp="20201030 15:53:21.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.211" endtime="20201030 15:53:21.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.234" endtime="20201030 15:53:21.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.237" endtime="20201030 15:53:21.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.208" endtime="20201030 15:53:21.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.206" endtime="20201030 15:53:21.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.246" endtime="20201030 15:53:21.532"></status>
</kw>
<msg timestamp="20201030 15:53:21.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023142611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023236431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.244" endtime="20201030 15:53:21.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023142611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023236431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.537" endtime="20201030 15:53:21.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.545" endtime="20201030 15:53:21.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.241" endtime="20201030 15:53:21.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.240" endtime="20201030 15:53:21.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:21.551" level="INFO">${RESULT} = [{'diff': 9.381999999999793e-05}, {'diff': 9.454100000000007e-05}, {'diff': 9.440200000000037e-05}, {'diff': 9.422200000000144e-05}, {'diff': 9.459700000000182e-05}, {'diff': 9.436100000000114e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:21.548" endtime="20201030 15:53:21.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:21.557" level="INFO">${ACCURACY} = {'diff': [9.381999999999793e-05, 9.454100000000007e-05, 9.440200000000037e-05, 9.422200000000144e-05, 9.459700000000182e-05, 9.436100000000114e-05, 9.436100000000114e-05, 9.36940000000018e-05, 9.41939...</msg>
<status status="PASS" starttime="20201030 15:53:21.552" endtime="20201030 15:53:21.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.561" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 15:53:21.560" endtime="20201030 15:53:21.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.564" level="INFO">VALUE: [9.381999999999793e-05, 9.454100000000007e-05, 9.440200000000037e-05, 9.422200000000144e-05, 9.459700000000182e-05, 9.436100000000114e-05, 9.436100000000114e-05, 9.36940000000018e-05, 9.419399999999883e-05, 9.436100000000114e-05, 9.441700000000289e-05, 9.368099999999824e-05, 9.452799999999997e-05, 9.449999999999736e-05, 9.438899999999681e-05, 9.416699999999917e-05, 9.433299999999853e-05, 9.370900000000085e-05, 9.45270000000005e-05, 9.456899999999921e-05, 9.426400000000015e-05, 9.419399999999883e-05, 9.44720000000017e-05, 9.440299999999985e-05, 9.36940000000018e-05, 9.440299999999985e-05, 9.372199999999747e-05, 9.452799999999997e-05, 9.437500000000071e-05, 9.420800000000187e-05, 9.418099999999874e-05, 9.450000000000083e-05, 9.463900000000053e-05, 9.447300000000117e-05, 9.436099999999767e-05, 9.425000000000058e-05, 9.41659999999997e-05, 9.437500000000071e-05, 9.427700000000025e-05, 9.41659999999997e-05, 9.431900000000243e-05, 9.423600000000101e-05, 9.431899999999896e-05, 9.423600000000101e-05, 9.454199999999954e-05, 9.373600000000051e-05, 9.426400000000015e-05, 9.423700000000049e-05, 9.436100000000114e-05, 9.433400000000147e-05]</msg>
<status status="PASS" starttime="20201030 15:53:21.562" endtime="20201030 15:53:21.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.557" endtime="20201030 15:53:21.570"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:21.574" endtime="20201030 15:53:21.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.572" endtime="20201030 15:53:21.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.571" endtime="20201030 15:53:21.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.204" endtime="20201030 15:53:21.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.204" endtime="20201030 15:53:21.594"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.603" endtime="20201030 15:53:21.621"></status>
</kw>
<msg timestamp="20201030 15:53:21.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.602" endtime="20201030 15:53:21.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.623" endtime="20201030 15:53:21.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.625" endtime="20201030 15:53:21.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.599" endtime="20201030 15:53:21.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.597" endtime="20201030 15:53:21.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.634" endtime="20201030 15:53:21.921"></status>
</kw>
<msg timestamp="20201030 15:53:21.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022020236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022115958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.633" endtime="20201030 15:53:21.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022020236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022115958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.925" endtime="20201030 15:53:21.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.933" endtime="20201030 15:53:21.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.630" endtime="20201030 15:53:21.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.629" endtime="20201030 15:53:21.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:21.940" level="INFO">${RESULT} = [{'diff': 9.572200000000294e-05}, {'diff': 9.563899999999806e-05}, {'diff': 9.536099999999867e-05}, {'diff': 9.538899999999781e-05}, {'diff': 9.530599999999986e-05}, {'diff': 9.5333999999999e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:21.937" endtime="20201030 15:53:21.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:21.944" level="INFO">${ACCURACY} = {'diff': [9.572200000000294e-05, 9.563899999999806e-05, 9.536099999999867e-05, 9.538899999999781e-05, 9.530599999999986e-05, 9.5333999999999e-05, 9.527800000000072e-05, 9.544400000000008e-05, 9.526399...</msg>
<status status="PASS" starttime="20201030 15:53:21.941" endtime="20201030 15:53:21.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.949" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 15:53:21.948" endtime="20201030 15:53:21.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.951" level="INFO">VALUE: [9.572200000000294e-05, 9.563899999999806e-05, 9.536099999999867e-05, 9.538899999999781e-05, 9.530599999999986e-05, 9.5333999999999e-05, 9.527800000000072e-05, 9.544400000000008e-05, 9.526399999999768e-05, 9.55140000000014e-05, 9.550000000000183e-05, 9.527799999999725e-05, 9.529200000000029e-05, 9.511199999999789e-05, 9.543099999999999e-05, 9.520900000000235e-05, 9.563900000000153e-05, 9.467999999999976e-05, 9.467999999999976e-05, 9.558299999999978e-05, 9.549999999999836e-05, 9.555500000000064e-05, 9.504200000000004e-05, 9.561099999999892e-05, 9.543099999999999e-05, 9.476299999999771e-05, 9.537500000000171e-05, 9.548600000000226e-05, 9.520899999999888e-05, 9.526399999999768e-05, 9.543099999999999e-05, 9.468099999999924e-05, 9.525000000000158e-05, 9.472200000000194e-05, 9.562500000000196e-05, 9.46660000000002e-05, 9.515200000000112e-05, 9.526400000000115e-05, 9.469399999999933e-05, 9.537499999999824e-05, 9.53469999999991e-05, 9.552800000000097e-05, 9.545799999999965e-05, 9.46530000000001e-05, 9.51530000000006e-05, 9.541700000000042e-05, 9.466699999999967e-05, 9.538900000000128e-05, 9.555600000000011e-05, 9.516700000000017e-05]</msg>
<status status="PASS" starttime="20201030 15:53:21.950" endtime="20201030 15:53:21.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.945" endtime="20201030 15:53:21.953"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:21.956" endtime="20201030 15:53:21.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.955" endtime="20201030 15:53:21.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.954" endtime="20201030 15:53:21.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.595" endtime="20201030 15:53:21.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.595" endtime="20201030 15:53:21.977"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.986" endtime="20201030 15:53:22.006"></status>
</kw>
<msg timestamp="20201030 15:53:22.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.984" endtime="20201030 15:53:22.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.008" endtime="20201030 15:53:22.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.010" endtime="20201030 15:53:22.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.982" endtime="20201030 15:53:22.013"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.980" endtime="20201030 15:53:22.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.020" endtime="20201030 15:53:22.305"></status>
</kw>
<msg timestamp="20201030 15:53:22.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022987903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023083694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.018" endtime="20201030 15:53:22.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022987903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023083694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.310" endtime="20201030 15:53:22.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.318" endtime="20201030 15:53:22.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.015" endtime="20201030 15:53:22.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.014" endtime="20201030 15:53:22.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:22.324" level="INFO">${RESULT} = [{'diff': 9.579099999999785e-05}, {'diff': 9.572199999999947e-05}, {'diff': 9.572199999999947e-05}, {'diff': 9.63470000000001e-05}, {'diff': 9.662499999999949e-05}, {'diff': 9.661099999999992e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:22.321" endtime="20201030 15:53:22.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:22.329" level="INFO">${ACCURACY} = {'diff': [9.579099999999785e-05, 9.572199999999947e-05, 9.572199999999947e-05, 9.63470000000001e-05, 9.662499999999949e-05, 9.661099999999992e-05, 9.633300000000053e-05, 9.644400000000108e-05, 9.64440...</msg>
<status status="PASS" starttime="20201030 15:53:22.325" endtime="20201030 15:53:22.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.333" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 15:53:22.332" endtime="20201030 15:53:22.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.336" level="INFO">VALUE: [9.579099999999785e-05, 9.572199999999947e-05, 9.572199999999947e-05, 9.63470000000001e-05, 9.662499999999949e-05, 9.661099999999992e-05, 9.633300000000053e-05, 9.644400000000108e-05, 9.644400000000108e-05, 9.65140000000024e-05, 9.64859999999998e-05, 9.637499999999924e-05, 9.569500000000328e-05, 9.651399999999893e-05, 9.619500000000031e-05, 9.657000000000068e-05, 9.626400000000215e-05, 9.663899999999906e-05, 9.572199999999947e-05, 9.57079999999999e-05, 9.644399999999761e-05, 9.612500000000246e-05, 9.630499999999792e-05, 9.652800000000197e-05, 9.662499999999949e-05, 9.638900000000228e-05, 9.662500000000296e-05, 9.644400000000108e-05, 9.611100000000289e-05, 9.624999999999911e-05, 9.622200000000344e-05, 9.630600000000086e-05, 9.613900000000203e-05, 9.661199999999939e-05, 9.620899999999988e-05, 9.570899999999938e-05, 9.655500000000164e-05, 9.62080000000004e-05, 9.624999999999911e-05, 9.662499999999949e-05, 9.658300000000078e-05, 9.630499999999792e-05, 9.62080000000004e-05, 9.648600000000326e-05, 9.647200000000022e-05, 9.597199999999972e-05, 9.662499999999949e-05, 9.56669999999972e-05, 9.641700000000142e-05, 9.632000000000043e-05]</msg>
<status status="PASS" starttime="20201030 15:53:22.334" endtime="20201030 15:53:22.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.329" endtime="20201030 15:53:22.338"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:22.342" endtime="20201030 15:53:22.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.340" endtime="20201030 15:53:22.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.339" endtime="20201030 15:53:22.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.978" endtime="20201030 15:53:22.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.977" endtime="20201030 15:53:22.362"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.371" endtime="20201030 15:53:22.390"></status>
</kw>
<msg timestamp="20201030 15:53:22.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.369" endtime="20201030 15:53:22.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.392" endtime="20201030 15:53:22.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.394" endtime="20201030 15:53:22.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.367" endtime="20201030 15:53:22.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.365" endtime="20201030 15:53:22.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.404" endtime="20201030 15:53:22.690"></status>
</kw>
<msg timestamp="20201030 15:53:22.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021970111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022067431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.402" endtime="20201030 15:53:22.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021970111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022067431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.695" endtime="20201030 15:53:22.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.703" endtime="20201030 15:53:22.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.399" endtime="20201030 15:53:22.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.398" endtime="20201030 15:53:22.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:22.710" level="INFO">${RESULT} = [{'diff': 9.731999999999796e-05}, {'diff': 9.750000000000036e-05}, {'diff': 9.756899999999874e-05}, {'diff': 9.723600000000054e-05}, {'diff': 9.72219999999975e-05}, {'diff': 9.745800000000165e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:22.706" endtime="20201030 15:53:22.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:22.715" level="INFO">${ACCURACY} = {'diff': [9.731999999999796e-05, 9.750000000000036e-05, 9.756899999999874e-05, 9.723600000000054e-05, 9.72219999999975e-05, 9.745800000000165e-05, 9.745800000000165e-05, 9.763900000000006e-05, 9.75829...</msg>
<status status="PASS" starttime="20201030 15:53:22.711" endtime="20201030 15:53:22.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.719" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 15:53:22.718" endtime="20201030 15:53:22.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.722" level="INFO">VALUE: [9.731999999999796e-05, 9.750000000000036e-05, 9.756899999999874e-05, 9.723600000000054e-05, 9.72219999999975e-05, 9.745800000000165e-05, 9.745800000000165e-05, 9.763900000000006e-05, 9.758299999999831e-05, 9.727799999999925e-05, 9.738899999999981e-05, 9.736100000000067e-05, 9.729199999999882e-05, 9.733299999999806e-05, 9.74730000000007e-05, 9.765200000000016e-05, 9.729199999999882e-05, 9.669500000000081e-05, 9.736100000000067e-05, 9.727699999999978e-05, 9.762500000000049e-05, 9.736100000000067e-05, 9.718000000000226e-05, 9.745799999999818e-05, 9.761100000000092e-05, 9.755600000000211e-05, 9.752800000000297e-05, 9.738899999999981e-05, 9.720799999999793e-05, 9.75279999999995e-05, 9.736100000000067e-05, 9.668099999999777e-05, 9.663900000000253e-05, 9.734800000000057e-05, 9.669499999999734e-05, 9.740300000000285e-05, 9.674999999999961e-05, 9.716599999999923e-05, 9.726400000000315e-05, 9.715299999999913e-05, 9.716599999999923e-05, 9.720799999999793e-05, 9.74860000000008e-05, 9.733300000000153e-05, 9.725000000000011e-05, 9.756999999999821e-05, 9.726399999999968e-05, 9.765299999999963e-05, 9.726399999999968e-05, 9.763900000000006e-05]</msg>
<status status="PASS" starttime="20201030 15:53:22.720" endtime="20201030 15:53:22.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.716" endtime="20201030 15:53:22.723"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:22.727" endtime="20201030 15:53:22.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.725" endtime="20201030 15:53:22.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.724" endtime="20201030 15:53:22.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.363" endtime="20201030 15:53:22.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.363" endtime="20201030 15:53:22.748"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.756" endtime="20201030 15:53:22.775"></status>
</kw>
<msg timestamp="20201030 15:53:22.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.755" endtime="20201030 15:53:22.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.777" endtime="20201030 15:53:22.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.779" endtime="20201030 15:53:22.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.752" endtime="20201030 15:53:22.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.750" endtime="20201030 15:53:22.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.789" endtime="20201030 15:53:23.077"></status>
</kw>
<msg timestamp="20201030 15:53:23.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022095125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022193264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.787" endtime="20201030 15:53:23.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022095125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022193264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:23.081" endtime="20201030 15:53:23.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.089" endtime="20201030 15:53:23.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.784" endtime="20201030 15:53:23.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.783" endtime="20201030 15:53:23.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:23.096" level="INFO">${RESULT} = [{'diff': 9.813900000000056e-05}, {'diff': 9.859699999999888e-05}, {'diff': 9.766700000000267e-05}, {'diff': 9.85549999999967e-05}, {'diff': 9.852799999999703e-05}, {'diff': 9.83059999999994e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:23.093" endtime="20201030 15:53:23.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:23.100" level="INFO">${ACCURACY} = {'diff': [9.813900000000056e-05, 9.859699999999888e-05, 9.766700000000267e-05, 9.85549999999967e-05, 9.852799999999703e-05, 9.83059999999994e-05, 9.858299999999931e-05, 9.859699999999888e-05, 9.769500...</msg>
<status status="PASS" starttime="20201030 15:53:23.097" endtime="20201030 15:53:23.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.105" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 15:53:23.104" endtime="20201030 15:53:23.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.107" level="INFO">VALUE: [9.813900000000056e-05, 9.859699999999888e-05, 9.766700000000267e-05, 9.85549999999967e-05, 9.852799999999703e-05, 9.83059999999994e-05, 9.858299999999931e-05, 9.859699999999888e-05, 9.769500000000181e-05, 9.830600000000286e-05, 9.758400000000125e-05, 9.840300000000038e-05, 9.819500000000231e-05, 9.772300000000095e-05, 9.812500000000099e-05, 9.833299999999906e-05, 9.815200000000066e-05, 9.769399999999887e-05, 9.845799999999919e-05, 9.822299999999798e-05, 9.833299999999906e-05, 9.823600000000154e-05, 9.856900000000321e-05, 9.838899999999734e-05, 9.838899999999734e-05, 9.838900000000081e-05, 9.841699999999995e-05, 9.844499999999909e-05, 9.847299999999823e-05, 9.844499999999909e-05, 9.843099999999952e-05, 9.841600000000048e-05, 9.833299999999906e-05, 9.845799999999919e-05, 9.816600000000023e-05, 9.815300000000013e-05, 9.819399999999937e-05, 9.819399999999937e-05, 9.833299999999906e-05, 9.823700000000102e-05, 9.838900000000081e-05, 9.837500000000124e-05, 9.768099999999877e-05, 9.822300000000145e-05, 9.851400000000093e-05, 9.843100000000299e-05, 9.816600000000023e-05, 9.823599999999807e-05, 9.861099999999845e-05, 9.861099999999845e-05]</msg>
<status status="PASS" starttime="20201030 15:53:23.106" endtime="20201030 15:53:23.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.101" endtime="20201030 15:53:23.108"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:23.112" endtime="20201030 15:53:23.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.111" endtime="20201030 15:53:23.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.109" endtime="20201030 15:53:23.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.749" endtime="20201030 15:53:23.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.748" endtime="20201030 15:53:23.133"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.142" endtime="20201030 15:53:23.162"></status>
</kw>
<msg timestamp="20201030 15:53:23.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.140" endtime="20201030 15:53:23.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.163" endtime="20201030 15:53:23.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.166" endtime="20201030 15:53:23.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.138" endtime="20201030 15:53:23.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.136" endtime="20201030 15:53:23.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.175" endtime="20201030 15:53:23.460"></status>
</kw>
<msg timestamp="20201030 15:53:23.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022865778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022964569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:23.173" endtime="20201030 15:53:23.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022865778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022964569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:23.464" endtime="20201030 15:53:23.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.473" endtime="20201030 15:53:23.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.171" endtime="20201030 15:53:23.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.169" endtime="20201030 15:53:23.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:23.479" level="INFO">${RESULT} = [{'diff': 9.879100000000085e-05}, {'diff': 9.922200000000297e-05}, {'diff': 9.959699999999988e-05}, {'diff': 9.927700000000178e-05}, {'diff': 9.9415999999998e-05}, {'diff': 9.91670000000007e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:53:23.476" endtime="20201030 15:53:23.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:23.483" level="INFO">${ACCURACY} = {'diff': [9.879100000000085e-05, 9.922200000000297e-05, 9.959699999999988e-05, 9.927700000000178e-05, 9.9415999999998e-05, 9.91670000000007e-05, 9.936100000000267e-05, 9.95549999999977e-05, 9.95139999...</msg>
<status status="PASS" starttime="20201030 15:53:23.480" endtime="20201030 15:53:23.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.488" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 15:53:23.487" endtime="20201030 15:53:23.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.490" level="INFO">VALUE: [9.879100000000085e-05, 9.922200000000297e-05, 9.959699999999988e-05, 9.927700000000178e-05, 9.9415999999998e-05, 9.91670000000007e-05, 9.936100000000267e-05, 9.95549999999977e-05, 9.951399999999846e-05, 9.943100000000052e-05, 9.959699999999988e-05, 9.944500000000009e-05, 9.923600000000254e-05, 9.94999999999989e-05, 9.93479999999991e-05, 9.961099999999945e-05, 9.94999999999989e-05, 9.929100000000135e-05, 9.961100000000292e-05, 9.966599999999826e-05, 9.959699999999988e-05, 9.916600000000123e-05, 9.916699999999723e-05, 9.897199999999926e-05, 9.869399999999987e-05, 9.962499999999902e-05, 9.955600000000064e-05, 9.944399999999715e-05, 9.959699999999988e-05, 9.95280000000015e-05, 9.929199999999735e-05, 9.920899999999941e-05, 9.956899999999727e-05, 9.926399999999821e-05, 9.950000000000236e-05, 9.94999999999989e-05, 9.897199999999926e-05, 9.952799999999803e-05, 9.86800000000003e-05, 9.933300000000006e-05, 9.867999999999683e-05, 9.951399999999846e-05, 9.931900000000049e-05, 9.869499999999934e-05, 9.872200000000247e-05, 9.923599999999907e-05, 9.934699999999963e-05, 9.863900000000106e-05, 9.919499999999984e-05, 9.916599999999776e-05]</msg>
<status status="PASS" starttime="20201030 15:53:23.489" endtime="20201030 15:53:23.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.484" endtime="20201030 15:53:23.493"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:23.496" endtime="20201030 15:53:23.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.495" endtime="20201030 15:53:23.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.494" endtime="20201030 15:53:23.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.134" endtime="20201030 15:53:23.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.133" endtime="20201030 15:53:23.517"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.526" endtime="20201030 15:53:23.545"></status>
</kw>
<msg timestamp="20201030 15:53:23.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.524" endtime="20201030 15:53:23.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.546" endtime="20201030 15:53:23.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.549" endtime="20201030 15:53:23.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.522" endtime="20201030 15:53:23.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.520" endtime="20201030 15:53:23.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.558" endtime="20201030 15:53:23.843"></status>
</kw>
<msg timestamp="20201030 15:53:23.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022300792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022400569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:23.556" endtime="20201030 15:53:23.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022300792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022400569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:23.847" endtime="20201030 15:53:23.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.855" endtime="20201030 15:53:23.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.554" endtime="20201030 15:53:23.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.552" endtime="20201030 15:53:23.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:23.861" level="INFO">${RESULT} = [{'diff': 9.977699999999881e-05}, {'diff': 0.00010041600000000248}, {'diff': 0.00010034700000000063}, {'diff': 0.00010022199999999704}, {'diff': 0.00010026399999999921}, {'diff': 0.0001003330000000010...</msg>
<status status="PASS" starttime="20201030 15:53:23.858" endtime="20201030 15:53:23.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:23.866" level="INFO">${ACCURACY} = {'diff': [9.977699999999881e-05, 0.00010041600000000248, 0.00010034700000000063, 0.00010022199999999704, 0.00010026399999999921, 0.00010033300000000106, 0.00010059700000000088, 0.00010024999999999964,...</msg>
<status status="PASS" starttime="20201030 15:53:23.862" endtime="20201030 15:53:23.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.871" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 15:53:23.870" endtime="20201030 15:53:23.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.873" level="INFO">VALUE: [9.977699999999881e-05, 0.00010041600000000248, 0.00010034700000000063, 0.00010022199999999704, 0.00010026399999999921, 0.00010033300000000106, 0.00010059700000000088, 0.00010024999999999964, 9.96670000000012e-05, 0.00010043100000000152, 0.00010056999999999774, 0.00010057000000000121, 0.00010029199999999835, 0.00010012499999999952, 0.00010044500000000109, 0.00010052799999999903, 0.0001004999999999999, 0.00010023600000000008, 0.0001002220000000005, 0.00010019400000000137, 0.00010052699999999956, 0.00010033299999999759, 0.00010038899999999934, 0.00010011099999999995, 9.965300000000163e-05, 9.966699999999773e-05, 0.00010033300000000106, 0.00010048600000000033, 0.0001003610000000002, 0.00010047300000000023, 0.00010022299999999998, 0.00010052699999999956, 0.00010026399999999921, 0.00010052699999999956, 0.00010016600000000223, 0.00010057000000000121, 0.0001003610000000002, 0.00010056900000000174, 0.00010033299999999759, 0.00010026400000000268, 0.00010029200000000182, 0.0001001809999999978, 9.96670000000012e-05, 0.00010045900000000066, 9.969500000000034e-05, 9.99869999999993e-05, 0.00010047300000000023, 0.00010036200000000314, 9.969500000000034e-05, 0.00010043099999999805]</msg>
<status status="PASS" starttime="20201030 15:53:23.872" endtime="20201030 15:53:23.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.867" endtime="20201030 15:53:23.875"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:23.878" endtime="20201030 15:53:23.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.877" endtime="20201030 15:53:23.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.876" endtime="20201030 15:53:23.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.518" endtime="20201030 15:53:23.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.517" endtime="20201030 15:53:23.899"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.908" endtime="20201030 15:53:23.926"></status>
</kw>
<msg timestamp="20201030 15:53:23.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.906" endtime="20201030 15:53:23.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.928" endtime="20201030 15:53:23.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.930" endtime="20201030 15:53:23.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.904" endtime="20201030 15:53:23.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.902" endtime="20201030 15:53:23.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.939" endtime="20201030 15:53:24.226"></status>
</kw>
<msg timestamp="20201030 15:53:24.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022150944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022252181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:23.938" endtime="20201030 15:53:24.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022150944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022252181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:24.230" endtime="20201030 15:53:24.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.239" endtime="20201030 15:53:24.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.935" endtime="20201030 15:53:24.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.933" endtime="20201030 15:53:24.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:24.245" level="INFO">${RESULT} = [{'diff': 0.00010123700000000055}, {'diff': 0.00010122199999999804}, {'diff': 0.00010061099999999698}, {'diff': 0.00010145800000000219}, {'diff': 0.00010144399999999915}, {'diff': 0.000101541999999999...</msg>
<status status="PASS" starttime="20201030 15:53:24.242" endtime="20201030 15:53:24.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:24.249" level="INFO">${ACCURACY} = {'diff': [0.00010123700000000055, 0.00010122199999999804, 0.00010061099999999698, 0.00010145800000000219, 0.00010144399999999915, 0.0001015419999999996, 0.00010122199999999804, 0.0001015549999999997, ...</msg>
<status status="PASS" starttime="20201030 15:53:24.246" endtime="20201030 15:53:24.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.254" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 15:53:24.253" endtime="20201030 15:53:24.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.257" level="INFO">VALUE: [0.00010123700000000055, 0.00010122199999999804, 0.00010061099999999698, 0.00010145800000000219, 0.00010144399999999915, 0.0001015419999999996, 0.00010122199999999804, 0.0001015549999999997, 0.00010134699999999816, 0.00010152800000000003, 0.00010163900000000059, 0.00010143099999999905, 0.000100722000000001, 0.00010147199999999829, 0.00010143099999999905, 0.00010109800000000085, 0.00010151400000000046, 0.00010098599999999736, 0.00010066699999999873, 0.00010123600000000108, 0.00010138900000000034, 0.00010133299999999859, 0.00010147199999999829, 0.00010145799999999872, 0.00010127799999999978, 0.00010120799999999847, 0.0001013199999999985, 0.00010156999999999874, 0.00010132000000000196, 0.00010066699999999873, 0.00010138900000000034, 0.00010162500000000102, 0.00010144499999999862, 0.00010142999999999958, 0.00010115200000000019, 0.00010156899999999927, 0.0001015549999999997, 0.00010120899999999794, 0.00010154100000000013, 0.00010115299999999966, 0.00010131900000000249, 0.00010159700000000188, 0.00010152800000000003, 0.00010065299999999916, 0.00010143100000000252, 0.00010157000000000221, 0.00010158400000000178, 0.0001013480000000011, 0.00010115200000000019, 0.00010072300000000048]</msg>
<status status="PASS" starttime="20201030 15:53:24.255" endtime="20201030 15:53:24.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.250" endtime="20201030 15:53:24.258"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:24.263" endtime="20201030 15:53:24.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.261" endtime="20201030 15:53:24.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.259" endtime="20201030 15:53:24.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.900" endtime="20201030 15:53:24.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.899" endtime="20201030 15:53:24.283"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.292" endtime="20201030 15:53:24.313"></status>
</kw>
<msg timestamp="20201030 15:53:24.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:24.291" endtime="20201030 15:53:24.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:24.314" endtime="20201030 15:53:24.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.317" endtime="20201030 15:53:24.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.288" endtime="20201030 15:53:24.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.286" endtime="20201030 15:53:24.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.326" endtime="20201030 15:53:24.617"></status>
</kw>
<msg timestamp="20201030 15:53:24.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023153861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023256236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:24.324" endtime="20201030 15:53:24.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023153861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023256236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:24.621" endtime="20201030 15:53:24.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.630" endtime="20201030 15:53:24.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.322" endtime="20201030 15:53:24.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.320" endtime="20201030 15:53:24.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:24.636" level="INFO">${RESULT} = [{'diff': 0.0001023749999999983}, {'diff': 0.00010166600000000026}, {'diff': 0.00010165200000000069}, {'diff': 0.00010238900000000134}, {'diff': 0.00010244400000000015}, {'diff': 0.0001024999999999984...</msg>
<status status="PASS" starttime="20201030 15:53:24.633" endtime="20201030 15:53:24.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:24.640" level="INFO">${ACCURACY} = {'diff': [0.0001023749999999983, 0.00010166600000000026, 0.00010165200000000069, 0.00010238900000000134, 0.00010244400000000015, 0.00010249999999999843, 0.00010166699999999973, 0.00010224999999999818,...</msg>
<status status="PASS" starttime="20201030 15:53:24.637" endtime="20201030 15:53:24.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.645" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 15:53:24.644" endtime="20201030 15:53:24.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.647" level="INFO">VALUE: [0.0001023749999999983, 0.00010166600000000026, 0.00010165200000000069, 0.00010238900000000134, 0.00010244400000000015, 0.00010249999999999843, 0.00010166699999999973, 0.00010224999999999818, 0.00010170799999999897, 0.00010241700000000048, 0.00010252800000000103, 0.00010223600000000208, 0.0001023749999999983, 0.00010227799999999732, 0.00010166699999999973, 0.00010213900000000109, 0.00010243000000000058, 0.00010252700000000156, 0.00010223600000000208, 0.00010167999999999983, 0.00010258299999999984, 0.00010245799999999972, 0.00010215300000000066, 0.00010240300000000091, 0.00010248600000000233, 0.0001022359999999986, 0.00010248599999999886, 0.0001021809999999998, 0.00010248600000000233, 0.00010238900000000134, 0.00010259799999999888, 0.00010243100000000005, 0.00010238900000000134, 0.00010195799999999922, 0.00010166600000000026, 0.00010230500000000045, 0.00010251400000000147, 0.00010263899999999812, 0.0001016800000000033, 0.00010218000000000033, 0.00010265300000000116, 0.0001021809999999998, 0.00010237500000000177, 0.00010251400000000147, 0.00010229200000000035, 0.00010241700000000048, 0.0001023199999999995, 0.00010167999999999983, 0.00010255600000000017, 0.00010247199999999929]</msg>
<status status="PASS" starttime="20201030 15:53:24.646" endtime="20201030 15:53:24.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.641" endtime="20201030 15:53:24.649"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:24.653" endtime="20201030 15:53:24.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.651" endtime="20201030 15:53:24.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.650" endtime="20201030 15:53:24.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.284" endtime="20201030 15:53:24.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.284" endtime="20201030 15:53:24.674"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.682" endtime="20201030 15:53:24.702"></status>
</kw>
<msg timestamp="20201030 15:53:24.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:24.681" endtime="20201030 15:53:24.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:24.704" endtime="20201030 15:53:24.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.706" endtime="20201030 15:53:24.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.678" endtime="20201030 15:53:24.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.676" endtime="20201030 15:53:24.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.715" endtime="20201030 15:53:25.001"></status>
</kw>
<msg timestamp="20201030 15:53:25.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022017347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022120889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:24.714" endtime="20201030 15:53:25.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022017347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022120889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:25.005" endtime="20201030 15:53:25.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.013" endtime="20201030 15:53:25.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.711" endtime="20201030 15:53:25.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.709" endtime="20201030 15:53:25.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:25.020" level="INFO">${RESULT} = [{'diff': 0.0001035420000000016}, {'diff': 0.00010320800000000047}, {'diff': 0.00010358300000000084}, {'diff': 0.00010338899999999887}, {'diff': 0.0001033200000000005}, {'diff': 0.00010269499999999987...</msg>
<status status="PASS" starttime="20201030 15:53:25.017" endtime="20201030 15:53:25.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:25.025" level="INFO">${ACCURACY} = {'diff': [0.0001035420000000016, 0.00010320800000000047, 0.00010358300000000084, 0.00010338899999999887, 0.0001033200000000005, 0.00010269499999999987, 0.0001035420000000016, 0.00010354100000000213, 0...</msg>
<status status="PASS" starttime="20201030 15:53:25.021" endtime="20201030 15:53:25.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.030" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 15:53:25.028" endtime="20201030 15:53:25.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.032" level="INFO">VALUE: [0.0001035420000000016, 0.00010320800000000047, 0.00010358300000000084, 0.00010338899999999887, 0.0001033200000000005, 0.00010269499999999987, 0.0001035420000000016, 0.00010354100000000213, 0.00010355600000000117, 0.00010345800000000072, 0.0001031940000000009, 0.00010327699999999884, 0.00010322200000000004, 0.00010326399999999875, 0.00010352799999999857, 0.00010313899999999862, 0.00010266700000000073, 0.00010320800000000047, 0.00010333300000000059, 0.0001033200000000005, 0.00010336099999999973, 0.00010322299999999951, 0.000103513999999999, 0.00010316700000000123, 0.0001033200000000005, 0.00010363899999999912, 0.00010355499999999823, 0.0001035550000000017, 0.00010270799999999997, 0.00010297199999999979, 0.00010320800000000047, 0.00010297200000000326, 0.00010365299999999869, 0.00010266700000000073, 0.00010357000000000074, 0.0001032359999999996, 0.00010318099999999733, 0.0001033749999999993, 0.0001027359999999991, 0.00010333300000000059, 0.00010265300000000116, 0.00010266600000000126, 0.00010266599999999779, 0.00010352699999999909, 0.00010352700000000256, 0.00010348599999999986, 0.00010266600000000126, 0.00010354199999999814, 0.00010309699999999991, 0.00010352800000000204]</msg>
<status status="PASS" starttime="20201030 15:53:25.031" endtime="20201030 15:53:25.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.026" endtime="20201030 15:53:25.033"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:25.037" endtime="20201030 15:53:25.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.036" endtime="20201030 15:53:25.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.034" endtime="20201030 15:53:25.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.675" endtime="20201030 15:53:25.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.674" endtime="20201030 15:53:25.058"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.067" endtime="20201030 15:53:25.086"></status>
</kw>
<msg timestamp="20201030 15:53:25.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.065" endtime="20201030 15:53:25.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.087" endtime="20201030 15:53:25.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.090" endtime="20201030 15:53:25.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.062" endtime="20201030 15:53:25.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.060" endtime="20201030 15:53:25.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.099" endtime="20201030 15:53:25.387"></status>
</kw>
<msg timestamp="20201030 15:53:25.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022006958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022110833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:25.098" endtime="20201030 15:53:25.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022006958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022110833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:25.391" endtime="20201030 15:53:25.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.399" endtime="20201030 15:53:25.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.095" endtime="20201030 15:53:25.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.093" endtime="20201030 15:53:25.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:25.406" level="INFO">${RESULT} = [{'diff': 0.0001038749999999998}, {'diff': 0.00010427799999999932}, {'diff': 0.00010433299999999812}, {'diff': 0.0001041940000000019}, {'diff': 0.00010442999999999911}, {'diff': 0.00010454199999999914...</msg>
<status status="PASS" starttime="20201030 15:53:25.402" endtime="20201030 15:53:25.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:25.410" level="INFO">${ACCURACY} = {'diff': [0.0001038749999999998, 0.00010427799999999932, 0.00010433299999999812, 0.0001041940000000019, 0.00010442999999999911, 0.00010454199999999914, 0.0001036810000000013, 0.00010397200000000079, 0...</msg>
<status status="PASS" starttime="20201030 15:53:25.407" endtime="20201030 15:53:25.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.414" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 15:53:25.413" endtime="20201030 15:53:25.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.417" level="INFO">VALUE: [0.0001038749999999998, 0.00010427799999999932, 0.00010433299999999812, 0.0001041940000000019, 0.00010442999999999911, 0.00010454199999999914, 0.0001036810000000013, 0.00010397200000000079, 0.00010448599999999739, 0.00010366700000000173, 0.00010372299999999654, 0.00010436100000000073, 0.00010367999999999836, 0.00010425000000000018, 0.00010366700000000173, 0.00010417999999999886, 0.00010419399999999843, 0.00010397200000000079, 0.00010430499999999898, 0.00010397199999999732, 0.0001045420000000026, 0.00010401400000000297, 0.00010441699999999901, 0.00010445800000000172, 0.00010416700000000223, 0.00010443099999999858, 0.00010399999999999993, 0.00010458299999999837, 0.00010415299999999919, 0.00010417999999999886, 0.00010425000000000018, 0.00010376399999999925, 0.00010397199999999732, 0.00010430500000000245, 0.00010466699999999926, 0.00010436100000000073, 0.00010437499999999683, 0.0001043750000000003, 0.00010425000000000018, 0.00010366699999999826, 0.00010447200000000129, 0.00010426399999999975, 0.00010433299999999812, 0.00010462500000000055, 0.00010463900000000012, 0.00010438899999999987, 0.00010461200000000045, 0.00010440299999999944, 0.00010425000000000018, 0.00010455499999999923]</msg>
<status status="PASS" starttime="20201030 15:53:25.415" endtime="20201030 15:53:25.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.411" endtime="20201030 15:53:25.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:25.422" endtime="20201030 15:53:25.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.420" endtime="20201030 15:53:25.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.419" endtime="20201030 15:53:25.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.059" endtime="20201030 15:53:25.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.058" endtime="20201030 15:53:25.443"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.451" endtime="20201030 15:53:25.472"></status>
</kw>
<msg timestamp="20201030 15:53:25.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.450" endtime="20201030 15:53:25.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.473" endtime="20201030 15:53:25.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.476" endtime="20201030 15:53:25.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.447" endtime="20201030 15:53:25.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.445" endtime="20201030 15:53:25.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.485" endtime="20201030 15:53:25.771"></status>
</kw>
<msg timestamp="20201030 15:53:25.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023054097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023159014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:25.483" endtime="20201030 15:53:25.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023054097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023159014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:25.775" endtime="20201030 15:53:25.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.783" endtime="20201030 15:53:25.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.481" endtime="20201030 15:53:25.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.479" endtime="20201030 15:53:25.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:25.790" level="INFO">${RESULT} = [{'diff': 0.00010491699999999951}, {'diff': 0.00010466699999999926}, {'diff': 0.00010555500000000023}, {'diff': 0.0001053200000000025}, {'diff': 0.0001053750000000013}, {'diff': 0.00010561099999999851...</msg>
<status status="PASS" starttime="20201030 15:53:25.787" endtime="20201030 15:53:25.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:25.794" level="INFO">${ACCURACY} = {'diff': [0.00010491699999999951, 0.00010466699999999926, 0.00010555500000000023, 0.0001053200000000025, 0.0001053750000000013, 0.00010561099999999851, 0.00010463800000000065, 0.00010563900000000112, ...</msg>
<status status="PASS" starttime="20201030 15:53:25.791" endtime="20201030 15:53:25.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.798" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 15:53:25.797" endtime="20201030 15:53:25.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.802" level="INFO">VALUE: [0.00010491699999999951, 0.00010466699999999926, 0.00010555500000000023, 0.0001053200000000025, 0.0001053750000000013, 0.00010561099999999851, 0.00010463800000000065, 0.00010563900000000112, 0.00010541700000000001, 0.00010466599999999979, 0.0001051940000000029, 0.0001051940000000029, 0.00010561100000000198, 0.00010518099999999933, 0.00010545799999999925, 0.0001055279999999971, 0.00010540300000000044, 0.00010538900000000087, 0.00010497299999999779, 0.00010527800000000032, 0.00010537499999999783, 0.00010467999999999936, 0.0001052629999999978, 0.00010531899999999955, 0.00010541700000000001, 0.00010563900000000112, 0.00010497199999999832, 0.00010531899999999955, 0.00010552800000000057, 0.00010522199999999857, 0.00010515300000000019, 0.00010523599999999814, 0.00010529199999999989, 0.00010552800000000057, 0.00010538900000000087, 0.00010541700000000001, 0.00010520800000000247, 0.00010558300000000284, 0.00010552699999999762, 0.00010554099999999719, 0.00010529099999999694, 0.00010559699999999894, 0.00010529199999999989, 0.00010523599999999814, 0.00010530599999999946, 0.00010531899999999955, 0.00010552800000000057, 0.00010561099999999851, 0.0001051949999999989, 0.00010473599999999764]</msg>
<status status="PASS" starttime="20201030 15:53:25.800" endtime="20201030 15:53:25.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.795" endtime="20201030 15:53:25.803"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:25.807" endtime="20201030 15:53:25.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.805" endtime="20201030 15:53:25.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.804" endtime="20201030 15:53:25.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.443" endtime="20201030 15:53:25.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.443" endtime="20201030 15:53:25.828"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.836" endtime="20201030 15:53:25.856"></status>
</kw>
<msg timestamp="20201030 15:53:25.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.835" endtime="20201030 15:53:25.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.857" endtime="20201030 15:53:25.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.860" endtime="20201030 15:53:25.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.832" endtime="20201030 15:53:25.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.830" endtime="20201030 15:53:25.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.869" endtime="20201030 15:53:26.154"></status>
</kw>
<msg timestamp="20201030 15:53:26.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022158236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022264903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:25.867" endtime="20201030 15:53:26.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022158236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022264903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:26.159" endtime="20201030 15:53:26.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.167" endtime="20201030 15:53:26.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.865" endtime="20201030 15:53:26.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.863" endtime="20201030 15:53:26.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:26.173" level="INFO">${RESULT} = [{'diff': 0.00010666699999999779}, {'diff': 0.00010659799999999942}, {'diff': 0.00010659699999999994}, {'diff': 0.00010663899999999865}, {'diff': 0.000106514000000002}, {'diff': 0.00010630499999999751...</msg>
<status status="PASS" starttime="20201030 15:53:26.170" endtime="20201030 15:53:26.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:26.178" level="INFO">${ACCURACY} = {'diff': [0.00010666699999999779, 0.00010659799999999942, 0.00010659699999999994, 0.00010663899999999865, 0.000106514000000002, 0.00010630499999999751, 0.00010633300000000012, 0.00010561100000000198, ...</msg>
<status status="PASS" starttime="20201030 15:53:26.174" endtime="20201030 15:53:26.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.184" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 15:53:26.182" endtime="20201030 15:53:26.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.187" level="INFO">VALUE: [0.00010666699999999779, 0.00010659799999999942, 0.00010659699999999994, 0.00010663899999999865, 0.000106514000000002, 0.00010630499999999751, 0.00010633300000000012, 0.00010561100000000198, 0.00010645800000000025, 0.00010645800000000025, 0.00010558299999999937, 0.00010661099999999951, 0.00010619399999999696, 0.00010572300000000201, 0.00010643100000000058, 0.0001061949999999999, 0.00010622199999999957, 0.0001063339999999996, 0.00010637499999999883, 0.00010626399999999828, 0.00010637499999999883, 0.00010645900000000319, 0.00010641599999999807, 0.00010659699999999994, 0.00010626399999999828, 0.00010643000000000111, 0.00010630500000000098, 0.00010617999999999739, 0.00010608299999999987, 0.00010565300000000069, 0.00010658399999999985, 0.00010644500000000015, 0.00010634799999999917, 0.00010599999999999846, 0.00010666700000000126, 0.00010627800000000132, 0.000106208, 0.00010649999999999896, 0.00010616600000000129, 0.00010631900000000055, 0.00010652800000000157, 0.00010643000000000111, 0.00010643000000000111, 0.00010570800000000297, 0.00010632000000000003, 0.00010648599999999939, 0.0001062499999999987, 0.0001057360000000021, 0.00010629200000000089, 0.00010626400000000175]</msg>
<status status="PASS" starttime="20201030 15:53:26.186" endtime="20201030 15:53:26.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.179" endtime="20201030 15:53:26.189"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:26.193" endtime="20201030 15:53:26.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.191" endtime="20201030 15:53:26.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.190" endtime="20201030 15:53:26.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.829" endtime="20201030 15:53:26.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.828" endtime="20201030 15:53:26.213"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.223" endtime="20201030 15:53:26.241"></status>
</kw>
<msg timestamp="20201030 15:53:26.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:26.221" endtime="20201030 15:53:26.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:26.243" endtime="20201030 15:53:26.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.246" endtime="20201030 15:53:26.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.218" endtime="20201030 15:53:26.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.216" endtime="20201030 15:53:26.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.255" endtime="20201030 15:53:26.572"></status>
</kw>
<msg timestamp="20201030 15:53:26.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022677958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:26.253" endtime="20201030 15:53:26.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022677958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:26.576" endtime="20201030 15:53:26.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.584" endtime="20201030 15:53:26.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.251" endtime="20201030 15:53:26.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.249" endtime="20201030 15:53:26.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:26.590" level="INFO">${RESULT} = [{'diff': 0.00010700000000000293}, {'diff': 0.00010743000000000211}, {'diff': 0.00010715299999999872}, {'diff': 0.00010745900000000072}, {'diff': 0.00010747200000000082}, {'diff': 0.000107541999999998...</msg>
<status status="PASS" starttime="20201030 15:53:26.587" endtime="20201030 15:53:26.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:26.595" level="INFO">${ACCURACY} = {'diff': [0.00010700000000000293, 0.00010743000000000211, 0.00010715299999999872, 0.00010745900000000072, 0.00010747200000000082, 0.00010754199999999867, 0.00010668100000000083, 0.00010726400000000275...</msg>
<status status="PASS" starttime="20201030 15:53:26.591" endtime="20201030 15:53:26.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.600" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 15:53:26.599" endtime="20201030 15:53:26.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.603" level="INFO">VALUE: [0.00010700000000000293, 0.00010743000000000211, 0.00010715299999999872, 0.00010745900000000072, 0.00010747200000000082, 0.00010754199999999867, 0.00010668100000000083, 0.00010726400000000275, 0.00010754200000000214, 0.00010736100000000026, 0.00010730600000000146, 0.00010720900000000047, 0.00010745900000000072, 0.00010668100000000083, 0.0001072499999999997, 0.0001075829999999979, 0.00010669400000000093, 0.00010719400000000143, 0.00010744500000000115, 0.00010734700000000069, 0.00010747199999999735, 0.00010733300000000112, 0.00010761099999999704, 0.00010668100000000083, 0.00010748599999999692, 0.00010726400000000275, 0.00010716699999999829, 0.00010730599999999799, 0.00010759800000000042, 0.00010723600000000014, 0.0001067080000000005, 0.00010758300000000137, 0.00010745799999999778, 0.00010716700000000176, 0.00010669399999999746, 0.00010748600000000039, 0.00010733300000000112, 0.0001073750000000033, 0.00010745800000000125, 0.00010673599999999964, 0.00010723600000000014, 0.00010734800000000017, 0.00010741700000000201, 0.00010729200000000189, 0.000107208000000001, 0.0001072629999999998, 0.00010747199999999735, 0.00010756899999999833, 0.00010663899999999865, 0.00010759700000000094]</msg>
<status status="PASS" starttime="20201030 15:53:26.602" endtime="20201030 15:53:26.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.596" endtime="20201030 15:53:26.609"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:26.613" endtime="20201030 15:53:26.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.611" endtime="20201030 15:53:26.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.610" endtime="20201030 15:53:26.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.214" endtime="20201030 15:53:26.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.214" endtime="20201030 15:53:26.634"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.643" endtime="20201030 15:53:26.664"></status>
</kw>
<msg timestamp="20201030 15:53:26.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:26.641" endtime="20201030 15:53:26.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:26.665" endtime="20201030 15:53:26.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.668" endtime="20201030 15:53:26.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.639" endtime="20201030 15:53:26.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.637" endtime="20201030 15:53:26.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.677" endtime="20201030 15:53:26.963"></status>
</kw>
<msg timestamp="20201030 15:53:26.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023227681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023336236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:26.675" endtime="20201030 15:53:26.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023227681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023336236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:26.967" endtime="20201030 15:53:26.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.975" endtime="20201030 15:53:26.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.673" endtime="20201030 15:53:26.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.671" endtime="20201030 15:53:26.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:26.981" level="INFO">${RESULT} = [{'diff': 0.00010855499999999976}, {'diff': 0.00010854199999999967}, {'diff': 0.0001082219999999981}, {'diff': 0.00010849999999999749}, {'diff': 0.00010848700000000086}, {'diff': 0.0001084310000000025...</msg>
<status status="PASS" starttime="20201030 15:53:26.978" endtime="20201030 15:53:26.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:26.985" level="INFO">${ACCURACY} = {'diff': [0.00010855499999999976, 0.00010854199999999967, 0.0001082219999999981, 0.00010849999999999749, 0.00010848700000000086, 0.00010843100000000258, 0.00010836100000000126, 0.00010850000000000096,...</msg>
<status status="PASS" starttime="20201030 15:53:26.982" endtime="20201030 15:53:26.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.990" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 15:53:26.989" endtime="20201030 15:53:26.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.992" level="INFO">VALUE: [0.00010855499999999976, 0.00010854199999999967, 0.0001082219999999981, 0.00010849999999999749, 0.00010848700000000086, 0.00010843100000000258, 0.00010836100000000126, 0.00010850000000000096, 0.00010826400000000028, 0.00010841600000000007, 0.0001082219999999981, 0.00010795800000000175, 0.0001085829999999989, 0.00010769399999999846, 0.0001085280000000001, 0.00010765299999999922, 0.00010854199999999967, 0.00010818099999999886, 0.00010856899999999933, 0.00010827799999999985, 0.00010845899999999825, 0.00010834699999999822, 0.00010861099999999804, 0.00010847299999999782, 0.0001082630000000008, 0.00010848600000000139, 0.0001082630000000008, 0.00010841600000000007, 0.00010816599999999982, 0.0001083890000000004, 0.00010855499999999976, 0.00010819399999999896, 0.00010856899999999933, 0.00010850000000000096, 0.00010816699999999929, 0.0001085280000000001, 0.00010861099999999804, 0.00010862499999999761, 0.00010836099999999779, 0.00010834800000000117, 0.00010848700000000086, 0.00010854100000000019, 0.00010766599999999932, 0.00010826400000000028, 0.00010854100000000019, 0.00010830499999999951, 0.00010826400000000028, 0.00010822200000000157, 0.00010847199999999835, 0.00010862500000000108]</msg>
<status status="PASS" starttime="20201030 15:53:26.991" endtime="20201030 15:53:26.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.986" endtime="20201030 15:53:26.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:26.998" endtime="20201030 15:53:27.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.996" endtime="20201030 15:53:27.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.995" endtime="20201030 15:53:27.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.635" endtime="20201030 15:53:27.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.635" endtime="20201030 15:53:27.019"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.029" endtime="20201030 15:53:27.048"></status>
</kw>
<msg timestamp="20201030 15:53:27.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:27.027" endtime="20201030 15:53:27.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:27.049" endtime="20201030 15:53:27.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.052" endtime="20201030 15:53:27.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.023" endtime="20201030 15:53:27.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.021" endtime="20201030 15:53:27.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.061" endtime="20201030 15:53:27.347"></status>
</kw>
<msg timestamp="20201030 15:53:27.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023049472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023158972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:27.059" endtime="20201030 15:53:27.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023049472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023158972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:27.351" endtime="20201030 15:53:27.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.359" endtime="20201030 15:53:27.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.057" endtime="20201030 15:53:27.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.055" endtime="20201030 15:53:27.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:27.366" level="INFO">${RESULT} = [{'diff': 0.00010949999999999849}, {'diff': 0.00010961100000000251}, {'diff': 0.00010916700000000029}, {'diff': 0.00010866699999999979}, {'diff': 0.00010916699999999682}, {'diff': 0.000109292000000000...</msg>
<status status="PASS" starttime="20201030 15:53:27.363" endtime="20201030 15:53:27.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:27.371" level="INFO">${ACCURACY} = {'diff': [0.00010949999999999849, 0.00010961100000000251, 0.00010916700000000029, 0.00010866699999999979, 0.00010916699999999682, 0.00010929200000000042, 0.00010965199999999828, 0.00010895899999999875...</msg>
<status status="PASS" starttime="20201030 15:53:27.367" endtime="20201030 15:53:27.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.375" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 15:53:27.374" endtime="20201030 15:53:27.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.378" level="INFO">VALUE: [0.00010949999999999849, 0.00010961100000000251, 0.00010916700000000029, 0.00010866699999999979, 0.00010916699999999682, 0.00010929200000000042, 0.00010965199999999828, 0.00010895899999999875, 0.00010898599999999842, 0.00010927800000000085, 0.00010954200000000067, 0.00010923599999999867, 0.00010947199999999935, 0.00010959699999999947, 0.00010918000000000039, 0.00010950000000000196, 0.00010923599999999867, 0.00010945799999999978, 0.00010959699999999947, 0.0001093890000000014, 0.00010931999999999956, 0.00010949999999999849, 0.00010913900000000115, 0.00010951399999999806, 0.00010934800000000217, 0.00010920799999999953, 0.00010897299999999832, 0.00010929100000000094, 0.00010954100000000119, 0.00010925000000000171, 0.00010941600000000107, 0.00010920799999999953, 0.00010947199999999935, 0.00010940300000000097, 0.00010919499999999943, 0.00010954200000000067, 0.00010897200000000232, 0.00010930599999999999, 0.0001092219999999991, 0.00010865300000000022, 0.00010918000000000039, 0.00010961200000000199, 0.00010927800000000085, 0.00010927800000000085, 0.00010963899999999818, 0.00010961099999999904, 0.00010933300000000312, 0.00010959700000000294, 0.00010952799999999763, 0.00010936099999999879]</msg>
<status status="PASS" starttime="20201030 15:53:27.376" endtime="20201030 15:53:27.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.372" endtime="20201030 15:53:27.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:27.383" endtime="20201030 15:53:27.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.381" endtime="20201030 15:53:27.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.380" endtime="20201030 15:53:27.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.020" endtime="20201030 15:53:27.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.019" endtime="20201030 15:53:27.403"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.412" endtime="20201030 15:53:27.432"></status>
</kw>
<msg timestamp="20201030 15:53:27.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:27.410" endtime="20201030 15:53:27.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:27.433" endtime="20201030 15:53:27.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.436" endtime="20201030 15:53:27.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.408" endtime="20201030 15:53:27.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.406" endtime="20201030 15:53:27.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.445" endtime="20201030 15:53:27.731"></status>
</kw>
<msg timestamp="20201030 15:53:27.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022208403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022318264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:27.443" endtime="20201030 15:53:27.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022208403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022318264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:27.735" endtime="20201030 15:53:27.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.743" endtime="20201030 15:53:27.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.441" endtime="20201030 15:53:27.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.439" endtime="20201030 15:53:27.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:27.750" level="INFO">${RESULT} = [{'diff': 0.00010986099999999929}, {'diff': 0.00011038899999999893}, {'diff': 0.00011030499999999804}, {'diff': 0.00011015300000000172}, {'diff': 0.00011026399999999881}, {'diff': 0.000109721999999999...</msg>
<status status="PASS" starttime="20201030 15:53:27.747" endtime="20201030 15:53:27.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:27.754" level="INFO">${ACCURACY} = {'diff': [0.00010986099999999929, 0.00011038899999999893, 0.00011030499999999804, 0.00011015300000000172, 0.00011026399999999881, 0.0001097219999999996, 0.00011026399999999881, 0.00011047200000000035,...</msg>
<status status="PASS" starttime="20201030 15:53:27.751" endtime="20201030 15:53:27.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.758" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 15:53:27.757" endtime="20201030 15:53:27.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.761" level="INFO">VALUE: [0.00010986099999999929, 0.00011038899999999893, 0.00011030499999999804, 0.00011015300000000172, 0.00011026399999999881, 0.0001097219999999996, 0.00011026399999999881, 0.00011047200000000035, 0.00011020799999999706, 0.00011024999999999924, 0.00011025000000000271, 0.00011044500000000068, 0.000110209, 0.00010968100000000036, 0.00011054100000000219, 0.00011024999999999924, 0.00011049999999999949, 0.00011024999999999924, 0.00011061100000000004, 0.00010969400000000046, 0.00010970900000000297, 0.00011016700000000129, 0.00011045900000000025, 0.00011034700000000022, 0.00011024999999999924, 0.00011027800000000185, 0.00011032000000000056, 0.00010968000000000089, 0.00011044400000000121, 0.00011062499999999961, 0.00011017999999999792, 0.00011026399999999881, 0.00011024999999999924, 0.00011045800000000078, 0.00011036099999999979, 0.00011033400000000013, 0.0001105280000000021, 0.00011063899999999918, 0.00011029199999999795, 0.00011036099999999979, 0.0001104020000000025, 0.00011059799999999995, 0.00011059799999999995, 0.00011061100000000004, 0.00011037500000000283, 0.00011038899999999893, 0.00011016599999999835, 0.00011015300000000172, 0.00011031899999999761, 0.00010969400000000046]</msg>
<status status="PASS" starttime="20201030 15:53:27.759" endtime="20201030 15:53:27.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.755" endtime="20201030 15:53:27.762"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:27.766" endtime="20201030 15:53:27.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.764" endtime="20201030 15:53:27.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.763" endtime="20201030 15:53:27.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.404" endtime="20201030 15:53:27.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.404" endtime="20201030 15:53:27.786"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.795" endtime="20201030 15:53:27.816"></status>
</kw>
<msg timestamp="20201030 15:53:27.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:27.793" endtime="20201030 15:53:27.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:27.817" endtime="20201030 15:53:27.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.820" endtime="20201030 15:53:27.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.791" endtime="20201030 15:53:27.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.789" endtime="20201030 15:53:27.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.830" endtime="20201030 15:53:28.115"></status>
</kw>
<msg timestamp="20201030 15:53:28.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023053139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023164667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:27.829" endtime="20201030 15:53:28.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023053139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023164667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:28.119" endtime="20201030 15:53:28.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.127" endtime="20201030 15:53:28.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.826" endtime="20201030 15:53:28.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.823" endtime="20201030 15:53:28.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:28.133" level="INFO">${RESULT} = [{'diff': 0.00011152799999999963}, {'diff': 0.00011125000000000024}, {'diff': 0.00011115199999999978}, {'diff': 0.00011133300000000165}, {'diff': 0.0001115830000000019}, {'diff': 0.0001113889999999999...</msg>
<status status="PASS" starttime="20201030 15:53:28.130" endtime="20201030 15:53:28.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:28.137" level="INFO">${ACCURACY} = {'diff': [0.00011152799999999963, 0.00011125000000000024, 0.00011115199999999978, 0.00011133300000000165, 0.0001115830000000019, 0.00011138899999999993, 0.00011125000000000024, 0.0001107220000000006, ...</msg>
<status status="PASS" starttime="20201030 15:53:28.134" endtime="20201030 15:53:28.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.142" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 15:53:28.141" endtime="20201030 15:53:28.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.144" level="INFO">VALUE: [0.00011152799999999963, 0.00011125000000000024, 0.00011115199999999978, 0.00011133300000000165, 0.0001115830000000019, 0.00011138899999999993, 0.00011125000000000024, 0.0001107220000000006, 0.0001115419999999992, 0.00011122199999999763, 0.00011125000000000024, 0.00011073600000000017, 0.00011116699999999882, 0.00011068100000000136, 0.00011112500000000011, 0.00011152700000000015, 0.00011130599999999852, 0.00011126399999999981, 0.00011113799999999674, 0.00011159700000000147, 0.00011130499999999904, 0.00011144399999999874, 0.00011129199999999895, 0.00011063899999999918, 0.00011069499999999746, 0.00011133300000000165, 0.00011132000000000156, 0.00011073600000000017, 0.000111596999999998, 0.0001107090000000005, 0.00011130499999999904, 0.00011113899999999968, 0.00011118000000000239, 0.0001115549999999993, 0.00011129199999999895, 0.00011129199999999895, 0.00011152799999999963, 0.00011143100000000211, 0.00011127799999999938, 0.00011159700000000147, 0.00011145899999999778, 0.0001107090000000005, 0.00011144499999999821, 0.00011162500000000061, 0.00011133399999999766, 0.0001107220000000006, 0.00011142999999999917, 0.00011126399999999981, 0.00011129099999999947, 0.00011119400000000196]</msg>
<status status="PASS" starttime="20201030 15:53:28.143" endtime="20201030 15:53:28.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.138" endtime="20201030 15:53:28.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:28.150" endtime="20201030 15:53:28.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.148" endtime="20201030 15:53:28.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.147" endtime="20201030 15:53:28.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.787" endtime="20201030 15:53:28.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.787" endtime="20201030 15:53:28.171"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.179" endtime="20201030 15:53:28.199"></status>
</kw>
<msg timestamp="20201030 15:53:28.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:28.178" endtime="20201030 15:53:28.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:28.201" endtime="20201030 15:53:28.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.203" endtime="20201030 15:53:28.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.175" endtime="20201030 15:53:28.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.173" endtime="20201030 15:53:28.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.212" endtime="20201030 15:53:28.498"></status>
</kw>
<msg timestamp="20201030 15:53:28.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022238139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:28.211" endtime="20201030 15:53:28.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022238139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:28.502" endtime="20201030 15:53:28.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.511" endtime="20201030 15:53:28.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.208" endtime="20201030 15:53:28.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.206" endtime="20201030 15:53:28.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:28.517" level="INFO">${RESULT} = [{'diff': 0.00011275000000000174}, {'diff': 0.00011170800000000203}, {'diff': 0.00011252800000000063}, {'diff': 0.00011231999999999909}, {'diff': 0.00011252800000000063}, {'diff': 0.000112584000000002...</msg>
<status status="PASS" starttime="20201030 15:53:28.514" endtime="20201030 15:53:28.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:28.522" level="INFO">${ACCURACY} = {'diff': [0.00011275000000000174, 0.00011170800000000203, 0.00011252800000000063, 0.00011231999999999909, 0.00011252800000000063, 0.00011258400000000238, 0.00011258399999999891, 0.00011165299999999975...</msg>
<status status="PASS" starttime="20201030 15:53:28.518" endtime="20201030 15:53:28.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.526" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 15:53:28.525" endtime="20201030 15:53:28.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.529" level="INFO">VALUE: [0.00011275000000000174, 0.00011170800000000203, 0.00011252800000000063, 0.00011231999999999909, 0.00011252800000000063, 0.00011258400000000238, 0.00011258399999999891, 0.00011165299999999975, 0.00011167999999999942, 0.00011263900000000118, 0.00011250000000000149, 0.00011233300000000265, 0.00011243099999999964, 0.00011167999999999942, 0.00011238900000000093, 0.0001124030000000005, 0.00011230599999999952, 0.00011216699999999982, 0.00011222199999999863, 0.00011248700000000139, 0.00011248599999999845, 0.00011225000000000124, 0.00011225000000000124, 0.00011254100000000072, 0.00011216600000000035, 0.00011236100000000179, 0.000112596999999999, 0.00011166699999999932, 0.00011256899999999986, 0.00011225000000000124, 0.00011247200000000235, 0.00011218099999999939, 0.00011227800000000038, 0.000112209000000002, 0.00011166700000000279, 0.00011237500000000136, 0.00011236200000000127, 0.0001122229999999981, 0.00011254100000000072, 0.00011230500000000004, 0.00011252700000000115, 0.00011263900000000118, 0.00011241700000000007, 0.00011226400000000081, 0.00011219499999999896, 0.0001124030000000005, 0.00011219500000000243, 0.00011258400000000238, 0.00011197200000000185, 0.00011166699999999932]</msg>
<status status="PASS" starttime="20201030 15:53:28.527" endtime="20201030 15:53:28.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.523" endtime="20201030 15:53:28.530"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:28.534" endtime="20201030 15:53:28.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.532" endtime="20201030 15:53:28.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.531" endtime="20201030 15:53:28.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.171" endtime="20201030 15:53:28.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.171" endtime="20201030 15:53:28.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.940" endtime="20201030 15:53:28.555"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 15:52:49.869" endtime="20201030 15:53:28.555" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:52:09.359" endtime="20201030 15:53:28.559"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.612" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:53:28.620" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:53:29.787" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:53:28.610" endtime="20201030 15:53:29.788"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.790" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:53:29.789" endtime="20201030 15:53:29.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.609" endtime="20201030 15:53:29.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:29.793" endtime="20201030 15:53:29.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.792" endtime="20201030 15:53:29.978"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.991" endtime="20201030 15:53:30.006"></status>
</kw>
<msg timestamp="20201030 15:53:30.006" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:29.989" endtime="20201030 15:53:30.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:30.009" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:30.007" endtime="20201030 15:53:30.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:30.012" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:30.010" endtime="20201030 15:53:30.012"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:29.987" endtime="20201030 15:53:30.013"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:29.984" endtime="20201030 15:53:30.013"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.983" endtime="20201030 15:53:30.013"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:30.017" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:30.017" endtime="20201030 15:53:30.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.014" endtime="20201030 15:53:30.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.982" endtime="20201030 15:53:30.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.982" endtime="20201030 15:53:30.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:30.019" endtime="20201030 15:53:30.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.980" endtime="20201030 15:53:30.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:30.022" endtime="20201030 15:53:30.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.979" endtime="20201030 15:53:30.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.608" endtime="20201030 15:53:30.024"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:30.031" endtime="20201030 15:53:30.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.030" endtime="20201030 15:53:30.051"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:30.064" endtime="20201030 15:53:30.078"></status>
</kw>
<msg timestamp="20201030 15:53:30.078" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:30.062" endtime="20201030 15:53:30.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:30.081" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:30.079" endtime="20201030 15:53:30.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:30.084" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:30.082" endtime="20201030 15:53:30.085"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:30.060" endtime="20201030 15:53:30.086"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:30.058" endtime="20201030 15:53:30.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.056" endtime="20201030 15:53:30.086"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:30.090" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:30.089" endtime="20201030 15:53:30.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.087" endtime="20201030 15:53:30.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.055" endtime="20201030 15:53:30.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.055" endtime="20201030 15:53:30.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:30.092" endtime="20201030 15:53:30.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.053" endtime="20201030 15:53:30.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.052" endtime="20201030 15:53:30.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.028" endtime="20201030 15:53:30.095"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:30.111" endtime="20201030 15:53:36.235"></status>
</kw>
<msg timestamp="20201030 15:53:36.236" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:30.108" endtime="20201030 15:53:36.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.241" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:36.238" endtime="20201030 15:53:36.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.243" endtime="20201030 15:53:36.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.103" endtime="20201030 15:53:36.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.099" endtime="20201030 15:53:36.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:36.253" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 0, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 15:53:36.250" endtime="20201030 15:53:36.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.263" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:36.261" endtime="20201030 15:53:36.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.267" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:36.265" endtime="20201030 15:53:36.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.255" endtime="20201030 15:53:36.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.277" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:36.275" endtime="20201030 15:53:36.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.281" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:36.279" endtime="20201030 15:53:36.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.270" endtime="20201030 15:53:36.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.290" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:36.289" endtime="20201030 15:53:36.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.292" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 15:53:36.291" endtime="20201030 15:53:36.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.284" endtime="20201030 15:53:36.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.300" endtime="20201030 15:53:36.586"></status>
</kw>
<msg timestamp="20201030 15:53:36.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07187575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.171895736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:36.298" endtime="20201030 15:53:36.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07187575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.171895736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:36.589" endtime="20201030 15:53:36.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.595" endtime="20201030 15:53:36.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.296" endtime="20201030 15:53:36.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.294" endtime="20201030 15:53:36.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:36.602" level="INFO">${FILTERED} = [{'diff': 0.10001998599999999}, {'diff': 5.419999999922709e-07}, {'diff': 0.10000741700000004}, {'diff': 0.10000683400000004}, {'diff': 0.10000737500000001}, {'diff': 0.10000736200000004}, {'diff': 5....</msg>
<status status="PASS" starttime="20201030 15:53:36.599" endtime="20201030 15:53:36.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:36.605" level="INFO">${RESULT} = {'diff': [0.10001998599999999, 5.419999999922709e-07, 0.10000741700000004, 0.10000683400000004, 0.10000737500000001, 0.10000736200000004, 5.419999999922709e-07, 0.100007403, 0.10000684699999995, 0.100...</msg>
<status status="PASS" starttime="20201030 15:53:36.603" endtime="20201030 15:53:36.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.610" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:36.609" endtime="20201030 15:53:36.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.612" level="INFO">VALUE: [0.10001998599999999, 5.419999999922709e-07, 0.10000741700000004, 0.10000683400000004, 0.10000737500000001, 0.10000736200000004, 5.419999999922709e-07, 0.100007403, 0.10000684699999995, 0.10000736100000007, 0.10000687500000005, 5.419999999922709e-07, 0.10000736100000007, 0.10000687500000005, 0.10000741700000004, 0.10000738899999995, 0.10000740299999977, 0.10000684800000004, 5.410000003536197e-07, 0.10000740200000013, 0.10000683300000013, 0.10000736099999985, 0.10000687500000005, 0.10000740299999977, 0.10000741599999996, 0.10000738899999995, 0.10000683300000013, 0.1000073610000003, 0.1000073610000003, 0.10000737499999968, 0.1000073610000003, 0.10000738899999995]</msg>
<status status="PASS" starttime="20201030 15:53:36.611" endtime="20201030 15:53:36.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.606" endtime="20201030 15:53:36.613"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:36.617" endtime="20201030 15:53:36.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.615" endtime="20201030 15:53:36.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.614" endtime="20201030 15:53:36.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.096" endtime="20201030 15:53:36.638"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:30.026" endtime="20201030 15:53:36.638" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:36.645" endtime="20201030 15:53:36.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.644" endtime="20201030 15:53:36.665"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.680" endtime="20201030 15:53:36.694"></status>
</kw>
<msg timestamp="20201030 15:53:36.695" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:36.678" endtime="20201030 15:53:36.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.697" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:36.696" endtime="20201030 15:53:36.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.700" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:36.698" endtime="20201030 15:53:36.701"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:36.675" endtime="20201030 15:53:36.701"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:36.672" endtime="20201030 15:53:36.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.671" endtime="20201030 15:53:36.702"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:36.706" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:36.705" endtime="20201030 15:53:36.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.703" endtime="20201030 15:53:36.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.670" endtime="20201030 15:53:36.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.669" endtime="20201030 15:53:36.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.708" endtime="20201030 15:53:36.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.668" endtime="20201030 15:53:36.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.666" endtime="20201030 15:53:36.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.642" endtime="20201030 15:53:36.711"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.719" endtime="20201030 15:53:42.842"></status>
</kw>
<msg timestamp="20201030 15:53:42.843" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:36.718" endtime="20201030 15:53:42.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.849" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:42.846" endtime="20201030 15:53:42.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:42.851" endtime="20201030 15:53:42.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.715" endtime="20201030 15:53:42.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.713" endtime="20201030 15:53:42.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:42.863" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 5, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 15:53:42.859" endtime="20201030 15:53:42.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.873" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:42.870" endtime="20201030 15:53:42.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.877" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:42.875" endtime="20201030 15:53:42.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.865" endtime="20201030 15:53:42.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.888" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:42.886" endtime="20201030 15:53:42.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.892" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:42.890" endtime="20201030 15:53:42.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.880" endtime="20201030 15:53:42.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.903" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:42.901" endtime="20201030 15:53:42.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.908" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 15:53:42.906" endtime="20201030 15:53:42.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.896" endtime="20201030 15:53:42.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:42.916" endtime="20201030 15:53:43.194"></status>
</kw>
<msg timestamp="20201030 15:53:43.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064167458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164221556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:42.915" endtime="20201030 15:53:43.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064167458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164221556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:43.197" endtime="20201030 15:53:43.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:43.203" endtime="20201030 15:53:43.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.911" endtime="20201030 15:53:43.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.909" endtime="20201030 15:53:43.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:43.210" level="INFO">${FILTERED} = [{'diff': 0.100054098}, {'diff': 5.410000000205528e-07}, {'diff': 5.410000000205528e-07}, {'diff': 0.100007348}, {'diff': 0.10000688899999999}, {'diff': 0.10000741700000004}, {'diff': 5.41999999992270...</msg>
<status status="PASS" starttime="20201030 15:53:43.207" endtime="20201030 15:53:43.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:43.213" level="INFO">${RESULT} = {'diff': [0.100054098, 5.410000000205528e-07, 5.410000000205528e-07, 0.100007348, 0.10000688899999999, 0.10000741700000004, 5.419999999922709e-07, 0.10000733400000006, 0.1000073749999999, 0.1000073749...</msg>
<status status="PASS" starttime="20201030 15:53:43.211" endtime="20201030 15:53:43.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.217" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:43.216" endtime="20201030 15:53:43.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.220" level="INFO">VALUE: [0.100054098, 5.410000000205528e-07, 5.410000000205528e-07, 0.100007348, 0.10000688899999999, 0.10000741700000004, 5.419999999922709e-07, 0.10000733400000006, 0.1000073749999999, 0.1000073749999999, 0.10000738899999995, 0.10000738899999995, 0.10000744400000006, 0.10000737500000012, 0.10000741700000004, 0.10000737499999968, 0.10000738799999986, 5.419999999922709e-07, 5.419999999922709e-07, 0.1000073610000003, 0.1000073610000003, 0.1000068749999996, 0.1000068470000004, 0.10000736200000038, 0.1000073609999994, 5.419999995481817e-07, 0.1000073610000003, 0.10000734700000002, 0.10000688899999943, 0.10000738899999995, 0.10000737500000056]</msg>
<status status="PASS" starttime="20201030 15:53:43.218" endtime="20201030 15:53:43.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.214" endtime="20201030 15:53:43.221"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:43.225" endtime="20201030 15:53:43.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.223" endtime="20201030 15:53:43.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.222" endtime="20201030 15:53:43.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.711" endtime="20201030 15:53:43.246"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:36.640" endtime="20201030 15:53:43.246" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:43.253" endtime="20201030 15:53:43.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.251" endtime="20201030 15:53:43.273"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:43.288" endtime="20201030 15:53:43.302"></status>
</kw>
<msg timestamp="20201030 15:53:43.302" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:43.286" endtime="20201030 15:53:43.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.305" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:43.303" endtime="20201030 15:53:43.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.308" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:43.306" endtime="20201030 15:53:43.309"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:43.283" endtime="20201030 15:53:43.309"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:43.281" endtime="20201030 15:53:43.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.278" endtime="20201030 15:53:43.310"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:43.314" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:43.313" endtime="20201030 15:53:43.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.311" endtime="20201030 15:53:43.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.278" endtime="20201030 15:53:43.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.277" endtime="20201030 15:53:43.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:43.316" endtime="20201030 15:53:43.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.275" endtime="20201030 15:53:43.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.274" endtime="20201030 15:53:43.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.250" endtime="20201030 15:53:43.319"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:43.327" endtime="20201030 15:53:49.451"></status>
</kw>
<msg timestamp="20201030 15:53:49.452" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:43.326" endtime="20201030 15:53:49.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.457" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:49.454" endtime="20201030 15:53:49.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:49.461" endtime="20201030 15:53:49.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.323" endtime="20201030 15:53:49.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.321" endtime="20201030 15:53:49.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:49.472" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 10, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 15:53:49.468" endtime="20201030 15:53:49.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.481" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:49.479" endtime="20201030 15:53:49.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.486" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:49.484" endtime="20201030 15:53:49.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.474" endtime="20201030 15:53:49.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.496" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:49.494" endtime="20201030 15:53:49.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.501" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:49.499" endtime="20201030 15:53:49.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.489" endtime="20201030 15:53:49.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.514" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:49.512" endtime="20201030 15:53:49.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.518" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 15:53:49.516" endtime="20201030 15:53:49.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.507" endtime="20201030 15:53:49.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:49.528" endtime="20201030 15:53:49.808"></status>
</kw>
<msg timestamp="20201030 15:53:49.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064807278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164894319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:49.527" endtime="20201030 15:53:49.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064807278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164894319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:49.811" endtime="20201030 15:53:49.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:49.817" endtime="20201030 15:53:49.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.524" endtime="20201030 15:53:49.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.522" endtime="20201030 15:53:49.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:49.823" level="INFO">${FILTERED} = [{'diff': 0.10008704100000002}, {'diff': 0.09991947200000001}, {'diff': 0.100008402}, {'diff': 0.10000840300000002}, {'diff': 0.10000840300000002}, {'diff': 0.10000580599999986}, {'diff': 0.1000063469...</msg>
<status status="PASS" starttime="20201030 15:53:49.820" endtime="20201030 15:53:49.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:49.827" level="INFO">${RESULT} = {'diff': [0.10008704100000002, 0.09991947200000001, 0.100008402, 0.10000840300000002, 0.10000840300000002, 0.10000580599999986, 0.10000634699999988, 0.10000634699999988, 0.100006292, 0.100006346999999...</msg>
<status status="PASS" starttime="20201030 15:53:49.824" endtime="20201030 15:53:49.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.831" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:49.830" endtime="20201030 15:53:49.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.834" level="INFO">VALUE: [0.10008704100000002, 0.09991947200000001, 0.100008402, 0.10000840300000002, 0.10000840300000002, 0.10000580599999986, 0.10000634699999988, 0.10000634699999988, 0.100006292, 0.10000634699999988, 0.1000063470000001, 5.409999999095305e-07, 0.10000841700000018, 0.10000840300000036, 0.10000840299999991, 5.419999999922709e-07, 0.10000636100000015, 5.409999999095305e-07, 0.10000849999999994, 0.10000833399999998, 0.10000586100000008, 0.10000633400000014, 0.10000787500000019, 0.10000580599999997, 0.10000632000000031, 0.1000063339999997, 0.10000632000000031, 0.10000787500000019, 0.10000580499999945, 0.10000634699999988]</msg>
<status status="PASS" starttime="20201030 15:53:49.832" endtime="20201030 15:53:49.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.828" endtime="20201030 15:53:49.835"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:49.839" endtime="20201030 15:53:49.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.837" endtime="20201030 15:53:49.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.836" endtime="20201030 15:53:49.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.319" endtime="20201030 15:53:49.859"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:43.248" endtime="20201030 15:53:49.860" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:49.868" endtime="20201030 15:53:49.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.865" endtime="20201030 15:53:49.888"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:49.901" endtime="20201030 15:53:49.915"></status>
</kw>
<msg timestamp="20201030 15:53:49.915" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:49.900" endtime="20201030 15:53:49.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.918" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:49.916" endtime="20201030 15:53:49.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.921" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:49.919" endtime="20201030 15:53:49.921"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:49.897" endtime="20201030 15:53:49.922"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:49.895" endtime="20201030 15:53:49.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.893" endtime="20201030 15:53:49.923"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:49.927" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:49.926" endtime="20201030 15:53:49.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.924" endtime="20201030 15:53:49.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.892" endtime="20201030 15:53:49.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.892" endtime="20201030 15:53:49.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:49.929" endtime="20201030 15:53:49.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.890" endtime="20201030 15:53:49.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.889" endtime="20201030 15:53:49.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.864" endtime="20201030 15:53:49.932"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:49.940" endtime="20201030 15:53:56.064"></status>
</kw>
<msg timestamp="20201030 15:53:56.065" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:49.939" endtime="20201030 15:53:56.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.071" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:56.067" endtime="20201030 15:53:56.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.074" endtime="20201030 15:53:56.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.936" endtime="20201030 15:53:56.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.934" endtime="20201030 15:53:56.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:56.085" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 15, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 15:53:56.081" endtime="20201030 15:53:56.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.097" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:56.094" endtime="20201030 15:53:56.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.101" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:56.099" endtime="20201030 15:53:56.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.087" endtime="20201030 15:53:56.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.112" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:56.109" endtime="20201030 15:53:56.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.116" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:56.114" endtime="20201030 15:53:56.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.104" endtime="20201030 15:53:56.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.127" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:56.124" endtime="20201030 15:53:56.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.132" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 15:53:56.130" endtime="20201030 15:53:56.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.119" endtime="20201030 15:53:56.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.151" endtime="20201030 15:53:56.438"></status>
</kw>
<msg timestamp="20201030 15:53:56.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063241319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163384125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:56.147" endtime="20201030 15:53:56.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063241319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163384125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:56.441" endtime="20201030 15:53:56.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.447" endtime="20201030 15:53:56.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.140" endtime="20201030 15:53:56.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.136" endtime="20201030 15:53:56.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:56.453" level="INFO">${FILTERED} = [{'diff': 0.10014280599999999}, {'diff': 0.099862375}, {'diff': 0.10000744400000006}, {'diff': 0.100007403}, {'diff': 0.10000736099999996}, {'diff': 5.419999999922709e-07}, {'diff': 0.100007403}, {'di...</msg>
<status status="PASS" starttime="20201030 15:53:56.450" endtime="20201030 15:53:56.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:56.457" level="INFO">${RESULT} = {'diff': [0.10014280599999999, 0.099862375, 0.10000744400000006, 0.100007403, 0.10000736099999996, 5.419999999922709e-07, 0.100007403, 0.10000684800000004, 0.10000737500000012, 5.419999999922709e-07, ...</msg>
<status status="PASS" starttime="20201030 15:53:56.454" endtime="20201030 15:53:56.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.462" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:56.460" endtime="20201030 15:53:56.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.464" level="INFO">VALUE: [0.10014280599999999, 0.099862375, 0.10000744400000006, 0.100007403, 0.10000736099999996, 5.419999999922709e-07, 0.100007403, 0.10000684800000004, 0.10000737500000012, 5.419999999922709e-07, 0.100007403, 0.10000740299999977, 0.10000683399999977, 0.10000736199999993, 0.10000694499999963, 0.10000738899999995, 0.10000740299999977, 0.10000741599999996, 0.10000740299999977, 0.1000074169999996, 0.10000743000000023, 0.10000743099999987, 0.10000743099999987, 0.10000738899999995, 0.1000068470000004, 5.419999995481817e-07, 0.10000740300000022, 0.10000740300000022, 0.10000684699999951, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201030 15:53:56.463" endtime="20201030 15:53:56.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.457" endtime="20201030 15:53:56.466"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:56.469" endtime="20201030 15:53:56.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.468" endtime="20201030 15:53:56.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.467" endtime="20201030 15:53:56.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.932" endtime="20201030 15:53:56.490"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:49.862" endtime="20201030 15:53:56.491" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:56.497" endtime="20201030 15:53:56.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.496" endtime="20201030 15:53:56.517"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.531" endtime="20201030 15:53:56.545"></status>
</kw>
<msg timestamp="20201030 15:53:56.546" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:56.529" endtime="20201030 15:53:56.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.548" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:56.547" endtime="20201030 15:53:56.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.551" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:56.549" endtime="20201030 15:53:56.552"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:56.527" endtime="20201030 15:53:56.552"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:56.524" endtime="20201030 15:53:56.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.523" endtime="20201030 15:53:56.553"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:56.557" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:56.556" endtime="20201030 15:53:56.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.554" endtime="20201030 15:53:56.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.522" endtime="20201030 15:53:56.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.521" endtime="20201030 15:53:56.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.559" endtime="20201030 15:53:56.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.520" endtime="20201030 15:53:56.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.518" endtime="20201030 15:53:56.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.494" endtime="20201030 15:53:56.562"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.572" endtime="20201030 15:54:02.696"></status>
</kw>
<msg timestamp="20201030 15:54:02.697" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:56.570" endtime="20201030 15:54:02.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:02.703" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:02.699" endtime="20201030 15:54:02.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:02.706" endtime="20201030 15:54:02.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.566" endtime="20201030 15:54:02.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.564" endtime="20201030 15:54:02.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:02.717" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 20, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 15:54:02.714" endtime="20201030 15:54:02.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:02.726" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:02.724" endtime="20201030 15:54:02.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:02.731" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:54:02.729" endtime="20201030 15:54:02.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.719" endtime="20201030 15:54:02.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:02.741" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:02.739" endtime="20201030 15:54:02.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:02.746" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:54:02.744" endtime="20201030 15:54:02.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.734" endtime="20201030 15:54:02.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:02.757" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:54:02.755" endtime="20201030 15:54:02.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:02.761" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 15:54:02.759" endtime="20201030 15:54:02.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.749" endtime="20201030 15:54:02.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:02.778" endtime="20201030 15:54:03.064"></status>
</kw>
<msg timestamp="20201030 15:54:03.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064701722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164910458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:02.774" endtime="20201030 15:54:03.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064701722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164910458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:03.067" endtime="20201030 15:54:03.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.073" endtime="20201030 15:54:03.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.768" endtime="20201030 15:54:03.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.765" endtime="20201030 15:54:03.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:54:03.080" level="INFO">${FILTERED} = [{'diff': 0.100208736}, {'diff': 0.09979425000000003}, {'diff': 0.10000737499999995}, {'diff': 0.10000736100000007}, {'diff': 0.10000731899999993}, {'diff': 0.10000690200000006}, {'diff': 0.1000075000...</msg>
<status status="PASS" starttime="20201030 15:54:03.077" endtime="20201030 15:54:03.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:03.084" level="INFO">${RESULT} = {'diff': [0.100208736, 0.09979425000000003, 0.10000737499999995, 0.10000736100000007, 0.10000731899999993, 0.10000690200000006, 0.10000750000000003, 0.10000744499999992, 0.10000745799999988, 0.1000074...</msg>
<status status="PASS" starttime="20201030 15:54:03.081" endtime="20201030 15:54:03.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.089" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:54:03.087" endtime="20201030 15:54:03.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.091" level="INFO">VALUE: [0.100208736, 0.09979425000000003, 0.10000737499999995, 0.10000736100000007, 0.10000731899999993, 0.10000690200000006, 0.10000750000000003, 0.10000744499999992, 0.10000745799999988, 0.10000743100000009, 0.1000068329999999, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 0.10000744400000006, 5.409999999095305e-07, 0.10000736099999985, 0.10000690300000015, 0.10000745800000033, 0.10000744500000014, 5.419999999922709e-07, 0.1000073330000002, 0.1000069029999997, 0.10000744400000006, 5.409999999095305e-07, 5.420000004363601e-07, 0.10000741700000049, 0.1000068470000004, 0.1000073610000003, 0.10000691599999989, 5.410000003536197e-07, 5.420000004363601e-07, 0.10000744499999925]</msg>
<status status="PASS" starttime="20201030 15:54:03.090" endtime="20201030 15:54:03.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.085" endtime="20201030 15:54:03.092"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:03.096" endtime="20201030 15:54:03.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.095" endtime="20201030 15:54:03.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.093" endtime="20201030 15:54:03.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.562" endtime="20201030 15:54:03.117"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:56.492" endtime="20201030 15:54:03.118" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:03.124" endtime="20201030 15:54:03.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.123" endtime="20201030 15:54:03.144"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.158" endtime="20201030 15:54:03.172"></status>
</kw>
<msg timestamp="20201030 15:54:03.173" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:03.156" endtime="20201030 15:54:03.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.175" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:03.174" endtime="20201030 15:54:03.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.178" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:03.176" endtime="20201030 15:54:03.179"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:03.154" endtime="20201030 15:54:03.179"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:03.151" endtime="20201030 15:54:03.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.150" endtime="20201030 15:54:03.180"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:03.184" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:03.183" endtime="20201030 15:54:03.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.181" endtime="20201030 15:54:03.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.149" endtime="20201030 15:54:03.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.148" endtime="20201030 15:54:03.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.187" endtime="20201030 15:54:03.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.147" endtime="20201030 15:54:03.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.145" endtime="20201030 15:54:03.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.121" endtime="20201030 15:54:03.190"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.199" endtime="20201030 15:54:09.322"></status>
</kw>
<msg timestamp="20201030 15:54:09.323" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:03.197" endtime="20201030 15:54:09.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.330" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:09.326" endtime="20201030 15:54:09.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:09.334" endtime="20201030 15:54:09.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.194" endtime="20201030 15:54:09.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.192" endtime="20201030 15:54:09.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:09.345" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 25, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 15:54:09.341" endtime="20201030 15:54:09.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.354" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:09.352" endtime="20201030 15:54:09.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.359" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:54:09.356" endtime="20201030 15:54:09.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.347" endtime="20201030 15:54:09.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.369" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:09.367" endtime="20201030 15:54:09.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.374" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:54:09.372" endtime="20201030 15:54:09.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.362" endtime="20201030 15:54:09.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.384" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:54:09.382" endtime="20201030 15:54:09.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.389" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 15:54:09.387" endtime="20201030 15:54:09.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.377" endtime="20201030 15:54:09.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:09.405" endtime="20201030 15:54:09.686"></status>
</kw>
<msg timestamp="20201030 15:54:09.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064831917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165128264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:09.402" endtime="20201030 15:54:09.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064831917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165128264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:09.689" endtime="20201030 15:54:09.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:09.695" endtime="20201030 15:54:09.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.396" endtime="20201030 15:54:09.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.392" endtime="20201030 15:54:09.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:54:09.701" level="INFO">${FILTERED} = [{'diff': 0.100296347}, {'diff': 0.09970490300000001}, {'diff': 5.410000000205528e-07}, {'diff': 0.100006402}, {'diff': 0.100007403}, {'diff': 5.419999999922709e-07}, {'diff': 0.10000736100000007}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:09.698" endtime="20201030 15:54:09.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:09.704" level="INFO">${RESULT} = {'diff': [0.100296347, 0.09970490300000001, 5.410000000205528e-07, 0.100006402, 0.100007403, 5.419999999922709e-07, 0.10000736100000007, 0.10000734700000002, 0.10000736100000007, 0.10000736100000007, ...</msg>
<status status="PASS" starttime="20201030 15:54:09.701" endtime="20201030 15:54:09.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.708" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:54:09.707" endtime="20201030 15:54:09.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.710" level="INFO">VALUE: [0.100296347, 0.09970490300000001, 5.410000000205528e-07, 0.100006402, 0.100007403, 5.419999999922709e-07, 0.10000736100000007, 0.10000734700000002, 0.10000736100000007, 0.10000736100000007, 0.10000738899999995, 0.10000736099999985, 5.409999999095305e-07, 0.1000073480000001, 0.10000683400000021, 5.419999999922709e-07, 0.10000738899999995, 0.10000740299999977, 0.10000740299999977, 0.10000683399999977, 0.10000687500000005, 0.10000740299999977, 0.10000684699999995, 0.1000073610000003, 0.10000738799999986, 0.1000073610000003, 0.10000695799999981, 0.10000743099999987, 0.10000743099999987, 0.1000073610000003]</msg>
<status status="PASS" starttime="20201030 15:54:09.709" endtime="20201030 15:54:09.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.705" endtime="20201030 15:54:09.711"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:09.715" endtime="20201030 15:54:09.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.714" endtime="20201030 15:54:09.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.712" endtime="20201030 15:54:09.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.191" endtime="20201030 15:54:09.736"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:03.119" endtime="20201030 15:54:09.736" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:53:28.567" endtime="20201030 15:54:09.743"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 15:51:26.627" endtime="20201030 15:54:09.775"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
