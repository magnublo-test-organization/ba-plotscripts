<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 18:17:30.518" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.145" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:17:31.155" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:17:32.368" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:17:31.143" endtime="20201029 18:17:32.369"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.372" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:17:32.370" endtime="20201029 18:17:32.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.141" endtime="20201029 18:17:32.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:32.375" endtime="20201029 18:17:32.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.373" endtime="20201029 18:17:32.561"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.574" endtime="20201029 18:17:32.588"></status>
</kw>
<msg timestamp="20201029 18:17:32.588" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:32.572" endtime="20201029 18:17:32.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.591" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:32.589" endtime="20201029 18:17:32.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.594" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:32.592" endtime="20201029 18:17:32.594"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:32.570" endtime="20201029 18:17:32.595"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:32.567" endtime="20201029 18:17:32.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.566" endtime="20201029 18:17:32.596"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:32.600" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:32.599" endtime="20201029 18:17:32.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.597" endtime="20201029 18:17:32.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.565" endtime="20201029 18:17:32.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.564" endtime="20201029 18:17:32.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.603" endtime="20201029 18:17:32.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.563" endtime="20201029 18:17:32.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.605" endtime="20201029 18:17:32.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.562" endtime="20201029 18:17:32.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.138" endtime="20201029 18:17:32.608"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:32.614" endtime="20201029 18:17:32.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.613" endtime="20201029 18:17:32.634"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.649" endtime="20201029 18:17:32.663"></status>
</kw>
<msg timestamp="20201029 18:17:32.663" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:32.647" endtime="20201029 18:17:32.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.666" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:32.665" endtime="20201029 18:17:32.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.669" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:32.667" endtime="20201029 18:17:32.670"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:32.644" endtime="20201029 18:17:32.670"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:32.642" endtime="20201029 18:17:32.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.640" endtime="20201029 18:17:32.671"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:32.675" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:32.674" endtime="20201029 18:17:32.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.672" endtime="20201029 18:17:32.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.639" endtime="20201029 18:17:32.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.638" endtime="20201029 18:17:32.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.677" endtime="20201029 18:17:32.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.637" endtime="20201029 18:17:32.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.635" endtime="20201029 18:17:32.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.612" endtime="20201029 18:17:32.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.688" endtime="20201029 18:17:32.698"></status>
</kw>
<msg timestamp="20201029 18:17:32.699" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:32.685" endtime="20201029 18:17:32.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.701" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:32.700" endtime="20201029 18:17:32.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.702" endtime="20201029 18:17:32.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.682" endtime="20201029 18:17:32.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.680" endtime="20201029 18:17:32.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.709" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 18:17:32.708" endtime="20201029 18:17:32.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.711" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201029 18:17:32.710" endtime="20201029 18:17:32.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.705" endtime="20201029 18:17:32.712"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:32.609" endtime="20201029 18:17:32.712" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:17:30.645" endtime="20201029 18:17:32.715"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.771" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:17:32.780" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:17:34.008" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:17:32.770" endtime="20201029 18:17:34.009"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.011" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:17:34.010" endtime="20201029 18:17:34.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.768" endtime="20201029 18:17:34.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:34.014" endtime="20201029 18:17:34.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.013" endtime="20201029 18:17:34.240"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.253" endtime="20201029 18:17:34.268"></status>
</kw>
<msg timestamp="20201029 18:17:34.269" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:34.251" endtime="20201029 18:17:34.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.273" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:34.270" endtime="20201029 18:17:34.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.278" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:34.275" endtime="20201029 18:17:34.278"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:34.248" endtime="20201029 18:17:34.280"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:34.246" endtime="20201029 18:17:34.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.245" endtime="20201029 18:17:34.282"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:34.287" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:34.286" endtime="20201029 18:17:34.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.284" endtime="20201029 18:17:34.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.244" endtime="20201029 18:17:34.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.243" endtime="20201029 18:17:34.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.289" endtime="20201029 18:17:34.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.242" endtime="20201029 18:17:34.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.292" endtime="20201029 18:17:34.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.240" endtime="20201029 18:17:34.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.766" endtime="20201029 18:17:34.294"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:34.301" endtime="20201029 18:17:34.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.299" endtime="20201029 18:17:34.321"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.334" endtime="20201029 18:17:34.348"></status>
</kw>
<msg timestamp="20201029 18:17:34.349" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:34.333" endtime="20201029 18:17:34.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.352" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:34.350" endtime="20201029 18:17:34.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.355" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:34.353" endtime="20201029 18:17:34.355"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:34.330" endtime="20201029 18:17:34.356"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:34.328" endtime="20201029 18:17:34.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.326" endtime="20201029 18:17:34.357"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:34.361" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:34.360" endtime="20201029 18:17:34.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.358" endtime="20201029 18:17:34.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.326" endtime="20201029 18:17:34.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.325" endtime="20201029 18:17:34.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.363" endtime="20201029 18:17:34.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.324" endtime="20201029 18:17:34.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.322" endtime="20201029 18:17:34.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.297" endtime="20201029 18:17:34.365"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.374" endtime="20201029 18:17:34.385"></status>
</kw>
<msg timestamp="20201029 18:17:34.386" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:34.373" endtime="20201029 18:17:34.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.388" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:34.387" endtime="20201029 18:17:34.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.389" endtime="20201029 18:17:34.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.370" endtime="20201029 18:17:34.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.368" endtime="20201029 18:17:34.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.399" endtime="20201029 18:17:34.696"></status>
</kw>
<msg timestamp="20201029 18:17:34.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064114722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064115264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:34.397" endtime="20201029 18:17:34.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064114722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064115264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:34.699" endtime="20201029 18:17:34.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.705" endtime="20201029 18:17:34.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.395" endtime="20201029 18:17:34.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.393" endtime="20201029 18:17:34.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:34.711" level="INFO">${RESULT} = [{'diff': 5.420000000061487e-07}, {'diff': 3.0139999999956313e-06}, {'diff': 3.0139999999956313e-06}, {'diff': 3.7919999999885823e-06}, {'diff': 3.9170000000060545e-06}, {'diff': 3.597000000007955e-06...</msg>
<status status="PASS" starttime="20201029 18:17:34.708" endtime="20201029 18:17:34.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:34.715" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.420000000061487e-07, 3.0139999999956313e-06, 3.0139999999956313e-06, 3.7919999999885823e-06, 3.9170000000060545e-06, 3.597000000007955e-06, 3.5139999999961313e-06, 3.2080000000045406e-06, ...</msg>
<status status="PASS" starttime="20201029 18:17:34.712" endtime="20201029 18:17:34.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.719" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:34.718" endtime="20201029 18:17:34.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.721" level="INFO">VALUE: [5.420000000061487e-07, 3.0139999999956313e-06, 3.0139999999956313e-06, 3.7919999999885823e-06, 3.9170000000060545e-06, 3.597000000007955e-06, 3.5139999999961313e-06, 3.2080000000045406e-06, 3.2779999999954512e-06, 3.875000000000406e-06, 3.2080000000045406e-06, 3.7500000000106892e-06, 3.096999999993577e-06, 3.79200000000246e-06, 2.596999999993077e-06, 3.5269999999892887e-06, 3.819000000002126e-06, 3.347000000000766e-06, 3.1389999999992257e-06, 3.9170000000060545e-06, 3.319000000001626e-06, 2.888999999992037e-06, 3.875000000000406e-06, 2.819000000001126e-06, 3.124999999992717e-06]</msg>
<status status="PASS" starttime="20201029 18:17:34.720" endtime="20201029 18:17:34.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.716" endtime="20201029 18:17:34.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.367" endtime="20201029 18:17:34.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.366" endtime="20201029 18:17:34.723"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.731" endtime="20201029 18:17:34.741"></status>
</kw>
<msg timestamp="20201029 18:17:34.742" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:34.730" endtime="20201029 18:17:34.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.744" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:34.743" endtime="20201029 18:17:34.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.745" endtime="20201029 18:17:34.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.727" endtime="20201029 18:17:34.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.725" endtime="20201029 18:17:34.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.756" endtime="20201029 18:17:35.048"></status>
</kw>
<msg timestamp="20201029 18:17:35.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064114722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064115264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:34.754" endtime="20201029 18:17:35.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064114722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064115264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:35.052" endtime="20201029 18:17:35.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.061" endtime="20201029 18:17:35.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.751" endtime="20201029 18:17:35.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.750" endtime="20201029 18:17:35.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:35.068" level="INFO">${RESULT} = [{'diff': 5.420000000061487e-07}, {'diff': 3.0139999999956313e-06}, {'diff': 3.0139999999956313e-06}, {'diff': 3.7919999999885823e-06}, {'diff': 3.9170000000060545e-06}, {'diff': 3.597000000007955e-06...</msg>
<status status="PASS" starttime="20201029 18:17:35.065" endtime="20201029 18:17:35.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:35.072" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.420000000061487e-07, 3.0139999999956313e-06, 3.0139999999956313e-06, 3.7919999999885823e-06, 3.9170000000060545e-06, 3.597000000007955e-06, 3.5139999999961313e-06, 3.2080000000045406e-06, ...</msg>
<status status="PASS" starttime="20201029 18:17:35.069" endtime="20201029 18:17:35.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.077" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:35.076" endtime="20201029 18:17:35.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.081" level="INFO">VALUE: [5.420000000061487e-07, 3.0139999999956313e-06, 3.0139999999956313e-06, 3.7919999999885823e-06, 3.9170000000060545e-06, 3.597000000007955e-06, 3.5139999999961313e-06, 3.2080000000045406e-06, 3.2779999999954512e-06, 3.875000000000406e-06, 3.2080000000045406e-06, 3.7500000000106892e-06, 3.096999999993577e-06, 3.79200000000246e-06, 2.596999999993077e-06, 3.5269999999892887e-06, 3.819000000002126e-06, 3.347000000000766e-06, 3.1389999999992257e-06, 3.9170000000060545e-06, 3.319000000001626e-06, 2.888999999992037e-06, 3.875000000000406e-06, 2.819000000001126e-06, 3.124999999992717e-06, 0.345590764, 3.3060000000362244e-06, 3.3329999999942572e-06, 3.722000000039305e-06, 2.9999999999752447e-06, 3.083000000014824e-06, 3.3890000000202924e-06, 3.68100000003313e-06, 3.250000000010189e-06, 2.444999999962061e-06, 3.903000000027301e-06, 3.3329999999942572e-06, 2.8340000000071086e-06, 3.319000000001626e-06, 3.4999999999896225e-06, 3.708000000046674e-06, 3.4170000000055545e-06, 3.111000000000086e-06, 3.05600000000128e-06, 3.848000000028495e-06, 2.7640000000439535e-06, 3.805000000023373e-06, 3.2919999999880822e-06, 3.111000000000086e-06, 2.8750000000132836e-06, 3.597999999993551e-06]</msg>
<status status="PASS" starttime="20201029 18:17:35.078" endtime="20201029 18:17:35.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.073" endtime="20201029 18:17:35.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.724" endtime="20201029 18:17:35.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.723" endtime="20201029 18:17:35.082"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.090" endtime="20201029 18:17:35.102"></status>
</kw>
<msg timestamp="20201029 18:17:35.103" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:35.089" endtime="20201029 18:17:35.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.106" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:35.104" endtime="20201029 18:17:35.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.108" endtime="20201029 18:17:35.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.086" endtime="20201029 18:17:35.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.084" endtime="20201029 18:17:35.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.122" endtime="20201029 18:17:35.438"></status>
</kw>
<msg timestamp="20201029 18:17:35.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064195139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.064198861, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:35.120" endtime="20201029 18:17:35.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064195139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.064198861, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:35.445" endtime="20201029 18:17:35.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.456" endtime="20201029 18:17:35.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.117" endtime="20201029 18:17:35.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.113" endtime="20201029 18:17:35.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:35.463" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.79200000000246e-06}, {'diff': 2.596999999993077e-06}, {'diff': 3.5269999999892887e-06}, {'diff': 3.819000000002126e-06}, {'diff': 3.347000000000766e-06}, {'diff': 3.1389999999...</msg>
<status status="PASS" starttime="20201029 18:17:35.459" endtime="20201029 18:17:35.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:35.469" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.79200000000246e-06, 2.596999999993077e-06, 3.5269999999892887e-06, 3.819000000002126e-06, 3.347000000000766e-06, 3.1389999999992257e-06, 3.9170000000060545e-06, 3.319000000001626e-06, 2...</msg>
<status status="PASS" starttime="20201029 18:17:35.464" endtime="20201029 18:17:35.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.473" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:35.472" endtime="20201029 18:17:35.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.476" level="INFO">VALUE: [0, 3.79200000000246e-06, 2.596999999993077e-06, 3.5269999999892887e-06, 3.819000000002126e-06, 3.347000000000766e-06, 3.1389999999992257e-06, 3.9170000000060545e-06, 3.319000000001626e-06, 2.888999999992037e-06, 3.875000000000406e-06, 2.819000000001126e-06, 3.124999999992717e-06, 0.345590764, 3.3060000000362244e-06, 3.3329999999942572e-06, 3.722000000039305e-06, 2.9999999999752447e-06, 3.083000000014824e-06, 3.3890000000202924e-06, 3.68100000003313e-06, 3.250000000010189e-06, 2.444999999962061e-06, 3.903000000027301e-06, 3.3329999999942572e-06, 2.8340000000071086e-06, 3.319000000001626e-06, 3.4999999999896225e-06, 3.708000000046674e-06, 3.4170000000055545e-06, 3.111000000000086e-06, 3.05600000000128e-06, 3.848000000028495e-06, 2.7640000000439535e-06, 3.805000000023373e-06, 3.2919999999880822e-06, 3.111000000000086e-06, 2.8750000000132836e-06, 3.597999999993551e-06, 5.419999999922709e-07, 3.3620000000622596e-06, 2.6250000000338503e-06, 3.6799999999503896e-06, 2.959000000024581e-06, 3.2640000000583314e-06, 2.917000000102199e-06, 3.221999999913905e-06, 3.5829999999181794e-06, 4.01399999994112e-06, 2.583000000000446e-06, 3.4439999999635873e-06, 2.9169999999911767e-06, 2.7639999999884424e-06, 3.0559999999457688e-06, 3.3750000000276614e-06, 3.6389999999997258e-06, 3.832999999953124e-06, 3.917000000019932e-06, 2.8890000000059146e-06, 3.069999999993911e-06, 3.514000000093276e-06, 3.68100000003313e-06, 2.7229999999267562e-06, 2.9440000000047206e-06]</msg>
<status status="PASS" starttime="20201029 18:17:35.474" endtime="20201029 18:17:35.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.469" endtime="20201029 18:17:35.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.083" endtime="20201029 18:17:35.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.082" endtime="20201029 18:17:35.477"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.485" endtime="20201029 18:17:35.495"></status>
</kw>
<msg timestamp="20201029 18:17:35.496" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:35.484" endtime="20201029 18:17:35.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.498" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:35.497" endtime="20201029 18:17:35.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.499" endtime="20201029 18:17:35.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.481" endtime="20201029 18:17:35.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.479" endtime="20201029 18:17:35.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.509" endtime="20201029 18:17:35.810"></status>
</kw>
<msg timestamp="20201029 18:17:35.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.409949403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.409952722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:35.507" endtime="20201029 18:17:35.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.409949403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.409952722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:35.815" endtime="20201029 18:17:35.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.825" endtime="20201029 18:17:35.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.504" endtime="20201029 18:17:35.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.503" endtime="20201029 18:17:35.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:35.832" level="INFO">${RESULT} = [{'diff': 3.319000000001626e-06}, {'diff': 3.4999999999896225e-06}, {'diff': 3.708000000046674e-06}, {'diff': 3.4170000000055545e-06}, {'diff': 3.111000000000086e-06}, {'diff': 3.05600000000128e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:17:35.829" endtime="20201029 18:17:35.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:35.837" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.319000000001626e-06, 3.4999999999896225e-06, 3.708000000046674e-06, 3.4170000000055545e-06, 3.111000000000086e-06, 3.05600000000128e-06, 3.848000000028495e-06, 2.7640000000439535e-06, 3.80...</msg>
<status status="PASS" starttime="20201029 18:17:35.833" endtime="20201029 18:17:35.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.842" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:35.841" endtime="20201029 18:17:35.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.845" level="INFO">VALUE: [3.319000000001626e-06, 3.4999999999896225e-06, 3.708000000046674e-06, 3.4170000000055545e-06, 3.111000000000086e-06, 3.05600000000128e-06, 3.848000000028495e-06, 2.7640000000439535e-06, 3.805000000023373e-06, 3.2919999999880822e-06, 3.111000000000086e-06, 2.8750000000132836e-06, 3.597999999993551e-06, 5.419999999922709e-07, 3.3620000000622596e-06, 2.6250000000338503e-06, 3.6799999999503896e-06, 2.959000000024581e-06, 3.2640000000583314e-06, 2.917000000102199e-06, 3.221999999913905e-06, 3.5829999999181794e-06, 4.01399999994112e-06, 2.583000000000446e-06, 3.4439999999635873e-06, 2.9169999999911767e-06, 2.7639999999884424e-06, 3.0559999999457688e-06, 3.3750000000276614e-06, 3.6389999999997258e-06, 3.832999999953124e-06, 3.917000000019932e-06, 2.8890000000059146e-06, 3.069999999993911e-06, 3.514000000093276e-06, 3.68100000003313e-06, 2.7229999999267562e-06, 2.9440000000047206e-06, 0.381902917, 3.3200000000288554e-06, 3.069999999993911e-06, 3.167000000026121e-06, 3.152999999977979e-06, 3.6939999998875095e-06, 3.721999999983794e-06, 3.7639999999061757e-06, 2.8889999998948923e-06, 2.4439999999348316e-06, 3.111000000055597e-06, 3.4440000000746096e-06, 2.7780000000365845e-06, 3.5419999999675156e-06, 3.6660000000132698e-06, 3.7639999999061757e-06, 3.3200000000288554e-06, 2.5840000001942087e-06, 3.0409999998148862e-06, 3.5279999999193734e-06, 2.721999999844016e-06, 3.152999999977979e-06, 3.6669999998739655e-06, 3.917000000130955e-06, 3.028000000071529e-06, 3.014000000023387e-06]</msg>
<status status="PASS" starttime="20201029 18:17:35.843" endtime="20201029 18:17:35.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.838" endtime="20201029 18:17:35.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.478" endtime="20201029 18:17:35.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.478" endtime="20201029 18:17:35.846"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.855" endtime="20201029 18:17:35.865"></status>
</kw>
<msg timestamp="20201029 18:17:35.866" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:35.853" endtime="20201029 18:17:35.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.868" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:35.867" endtime="20201029 18:17:35.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.869" endtime="20201029 18:17:35.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.850" endtime="20201029 18:17:35.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.848" endtime="20201029 18:17:35.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.878" endtime="20201029 18:17:36.180"></status>
</kw>
<msg timestamp="20201029 18:17:36.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.7602175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.760220597, 'source': 'DUT_IC', 'event': 'RISI...</msg>
<status status="PASS" starttime="20201029 18:17:35.877" endtime="20201029 18:17:36.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.7602175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.760220597, 'source': 'DUT_IC', 'event': 'RISI...</msg>
<status status="PASS" starttime="20201029 18:17:36.185" endtime="20201029 18:17:36.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.195" endtime="20201029 18:17:36.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.874" endtime="20201029 18:17:36.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.873" endtime="20201029 18:17:36.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:36.202" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.7639999999884424e-06}, {'diff': 3.0559999999457688e-06}, {'diff': 3.3750000000276614e-06}, {'diff': 3.6389999999997258e-06}, {'diff': 3.832999999953124e-06}, {'diff': 3.917000...</msg>
<status status="PASS" starttime="20201029 18:17:36.198" endtime="20201029 18:17:36.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:36.207" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.7639999999884424e-06, 3.0559999999457688e-06, 3.3750000000276614e-06, 3.6389999999997258e-06, 3.832999999953124e-06, 3.917000000019932e-06, 2.8890000000059146e-06, 3.069999999993911e-06...</msg>
<status status="PASS" starttime="20201029 18:17:36.203" endtime="20201029 18:17:36.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.219" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:36.218" endtime="20201029 18:17:36.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.222" level="INFO">VALUE: [0, 2.7639999999884424e-06, 3.0559999999457688e-06, 3.3750000000276614e-06, 3.6389999999997258e-06, 3.832999999953124e-06, 3.917000000019932e-06, 2.8890000000059146e-06, 3.069999999993911e-06, 3.514000000093276e-06, 3.68100000003313e-06, 2.7229999999267562e-06, 2.9440000000047206e-06, 0.381902917, 3.3200000000288554e-06, 3.069999999993911e-06, 3.167000000026121e-06, 3.152999999977979e-06, 3.6939999998875095e-06, 3.721999999983794e-06, 3.7639999999061757e-06, 2.8889999998948923e-06, 2.4439999999348316e-06, 3.111000000055597e-06, 3.4440000000746096e-06, 2.7780000000365845e-06, 3.5419999999675156e-06, 3.6660000000132698e-06, 3.7639999999061757e-06, 3.3200000000288554e-06, 2.5840000001942087e-06, 3.0409999998148862e-06, 3.5279999999193734e-06, 2.721999999844016e-06, 3.152999999977979e-06, 3.6669999998739655e-06, 3.917000000130955e-06, 3.028000000071529e-06, 3.014000000023387e-06, 5.409999999095305e-07, 3.2639999998362867e-06, 3.943999999922454e-06, 3.014000000023387e-06, 3.318999999946115e-06, 3.5700000000638e-06, 2.8610000000206526e-06, 3.499999999823089e-06, 3.999999999892978e-06, 2.5970000001596105e-06, 2.638999999859948e-06, 2.8469999999725104e-06, 3.430999999887163e-06, 2.87499999984675e-06, 3.1249999998816946e-06, 3.736000000031936e-06, 2.945000000087461e-06, 2.9159999999084363e-06, 3.262999999975591e-06, 3.2229999999966452e-06, 2.776999999953844e-06, 3.1250000001037392e-06, 2.972000000101005e-06, 2.9440000000047206e-06, 3.930999999957052e-06]</msg>
<status status="PASS" starttime="20201029 18:17:36.220" endtime="20201029 18:17:36.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.216" endtime="20201029 18:17:36.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.847" endtime="20201029 18:17:36.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.847" endtime="20201029 18:17:36.223"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.231" endtime="20201029 18:17:36.242"></status>
</kw>
<msg timestamp="20201029 18:17:36.242" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:36.230" endtime="20201029 18:17:36.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.244" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:36.243" endtime="20201029 18:17:36.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.245" endtime="20201029 18:17:36.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.227" endtime="20201029 18:17:36.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.225" endtime="20201029 18:17:36.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.255" endtime="20201029 18:17:36.552"></status>
</kw>
<msg timestamp="20201029 18:17:36.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.142280097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.142283639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:36.253" endtime="20201029 18:17:36.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.142280097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.142283639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:36.557" endtime="20201029 18:17:36.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.567" endtime="20201029 18:17:36.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.251" endtime="20201029 18:17:36.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.249" endtime="20201029 18:17:36.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:36.574" level="INFO">${RESULT} = [{'diff': 3.5419999999675156e-06}, {'diff': 3.6660000000132698e-06}, {'diff': 3.7639999999061757e-06}, {'diff': 3.3200000000288554e-06}, {'diff': 2.5840000001942087e-06}, {'diff': 3.0409999998148862e-...</msg>
<status status="PASS" starttime="20201029 18:17:36.570" endtime="20201029 18:17:36.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:36.581" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.5419999999675156e-06, 3.6660000000132698e-06, 3.7639999999061757e-06, 3.3200000000288554e-06, 2.5840000001942087e-06, 3.0409999998148862e-06, 3.5279999999193734e-06, 2.721999999844016e-06,...</msg>
<status status="PASS" starttime="20201029 18:17:36.575" endtime="20201029 18:17:36.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.585" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:36.584" endtime="20201029 18:17:36.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.588" level="INFO">VALUE: [3.5419999999675156e-06, 3.6660000000132698e-06, 3.7639999999061757e-06, 3.3200000000288554e-06, 2.5840000001942087e-06, 3.0409999998148862e-06, 3.5279999999193734e-06, 2.721999999844016e-06, 3.152999999977979e-06, 3.6669999998739655e-06, 3.917000000130955e-06, 3.028000000071529e-06, 3.014000000023387e-06, 5.409999999095305e-07, 3.2639999998362867e-06, 3.943999999922454e-06, 3.014000000023387e-06, 3.318999999946115e-06, 3.5700000000638e-06, 2.8610000000206526e-06, 3.499999999823089e-06, 3.999999999892978e-06, 2.5970000001596105e-06, 2.638999999859948e-06, 2.8469999999725104e-06, 3.430999999887163e-06, 2.87499999984675e-06, 3.1249999998816946e-06, 3.736000000031936e-06, 2.945000000087461e-06, 2.9159999999084363e-06, 3.262999999975591e-06, 3.2229999999966452e-06, 2.776999999953844e-06, 3.1250000001037392e-06, 2.972000000101005e-06, 2.9440000000047206e-06, 3.930999999957052e-06, 0.36610279099999987, 3.374999999916639e-06, 2.9999999999752447e-06, 2.7360000001142026e-06, 2.7080000000179183e-06, 3.750000000080078e-06, 2.818999999876226e-06, 3.5279999999193734e-06, 3.487000000079732e-06, 2.6810000000043743e-06, 4.01399999994112e-06, 3.597000000077344e-06, 3.79200000000246e-06, 3.1109999998335525e-06, 3.680000000061412e-06, 3.041000000036931e-06, 3.069999999993911e-06, 3.360999999868497e-06, 2.87499999984675e-06, 3.208999999948503e-06, 3.1659999999433808e-06, 2.986000000149147e-06, 3.5830000000292017e-06, 3.6109999999034414e-06, 3.4859999999969915e-06, 2.9859999999271025e-06]</msg>
<status status="PASS" starttime="20201029 18:17:36.587" endtime="20201029 18:17:36.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.582" endtime="20201029 18:17:36.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.224" endtime="20201029 18:17:36.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.224" endtime="20201029 18:17:36.590"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.598" endtime="20201029 18:17:36.608"></status>
</kw>
<msg timestamp="20201029 18:17:36.608" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:36.596" endtime="20201029 18:17:36.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.611" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:36.609" endtime="20201029 18:17:36.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.612" endtime="20201029 18:17:36.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.594" endtime="20201029 18:17:36.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.592" endtime="20201029 18:17:36.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.621" endtime="20201029 18:17:36.917"></status>
</kw>
<msg timestamp="20201029 18:17:36.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.502039014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.502042292, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:36.619" endtime="20201029 18:17:36.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.502039014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.502042292, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:36.922" endtime="20201029 18:17:36.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.932" endtime="20201029 18:17:36.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.617" endtime="20201029 18:17:36.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.615" endtime="20201029 18:17:36.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:36.939" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.87499999984675e-06}, {'diff': 3.1249999998816946e-06}, {'diff': 3.736000000031936e-06}, {'diff': 2.945000000087461e-06}, {'diff': 2.9159999999084363e-06}, {'diff': 3.262999999...</msg>
<status status="PASS" starttime="20201029 18:17:36.936" endtime="20201029 18:17:36.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:36.944" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.87499999984675e-06, 3.1249999998816946e-06, 3.736000000031936e-06, 2.945000000087461e-06, 2.9159999999084363e-06, 3.262999999975591e-06, 3.2229999999966452e-06, 2.776999999953844e-06, 3...</msg>
<status status="PASS" starttime="20201029 18:17:36.940" endtime="20201029 18:17:36.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.949" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:36.947" endtime="20201029 18:17:36.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.951" level="INFO">VALUE: [0, 2.87499999984675e-06, 3.1249999998816946e-06, 3.736000000031936e-06, 2.945000000087461e-06, 2.9159999999084363e-06, 3.262999999975591e-06, 3.2229999999966452e-06, 2.776999999953844e-06, 3.1250000001037392e-06, 2.972000000101005e-06, 2.9440000000047206e-06, 3.930999999957052e-06, 0.36610279099999987, 3.374999999916639e-06, 2.9999999999752447e-06, 2.7360000001142026e-06, 2.7080000000179183e-06, 3.750000000080078e-06, 2.818999999876226e-06, 3.5279999999193734e-06, 3.487000000079732e-06, 2.6810000000043743e-06, 4.01399999994112e-06, 3.597000000077344e-06, 3.79200000000246e-06, 3.1109999998335525e-06, 3.680000000061412e-06, 3.041000000036931e-06, 3.069999999993911e-06, 3.360999999868497e-06, 2.87499999984675e-06, 3.208999999948503e-06, 3.1659999999433808e-06, 2.986000000149147e-06, 3.5830000000292017e-06, 3.6109999999034414e-06, 3.4859999999969915e-06, 2.9859999999271025e-06, 5.419999999922709e-07, 2.9580000000528628e-06, 2.6110000002077527e-06, 3.6950000001922945e-06, 3.4719999999488493e-06, 3.167000000026121e-06, 3.2640000000583314e-06, 2.6940000004138653e-06, 3.304999999897973e-06, 3.5000000000451337e-06, 3.847999999972984e-06, 3.1380000002911856e-06, 3.819000000238049e-06, 3.401999999930183e-06, 3.8199999998767e-06, 3.2919999997105265e-06, 3.4030000000129235e-06, 3.431000000109208e-06, 2.8329999999243682e-06, 3.0560000001678134e-06, 3.777999999954318e-06, 3.708000000379741e-06, 3.6250000001736282e-06, 3.972000000018738e-06, 3.958000000192641e-06]</msg>
<status status="PASS" starttime="20201029 18:17:36.950" endtime="20201029 18:17:36.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.945" endtime="20201029 18:17:36.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.590" endtime="20201029 18:17:36.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.590" endtime="20201029 18:17:36.953"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.961" endtime="20201029 18:17:36.971"></status>
</kw>
<msg timestamp="20201029 18:17:36.972" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:36.960" endtime="20201029 18:17:36.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.974" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:36.973" endtime="20201029 18:17:36.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.975" endtime="20201029 18:17:36.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.956" endtime="20201029 18:17:36.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.955" endtime="20201029 18:17:36.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.987" endtime="20201029 18:17:37.290"></status>
</kw>
<msg timestamp="20201029 18:17:37.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.86830025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.868303361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:36.985" endtime="20201029 18:17:37.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:37.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.86830025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.868303361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:37.295" endtime="20201029 18:17:37.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:37.305" endtime="20201029 18:17:37.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.982" endtime="20201029 18:17:37.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.980" endtime="20201029 18:17:37.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:37.312" level="INFO">${RESULT} = [{'diff': 3.1109999998335525e-06}, {'diff': 3.680000000061412e-06}, {'diff': 3.041000000036931e-06}, {'diff': 3.069999999993911e-06}, {'diff': 3.360999999868497e-06}, {'diff': 2.87499999984675e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:17:37.309" endtime="20201029 18:17:37.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:37.318" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.1109999998335525e-06, 3.680000000061412e-06, 3.041000000036931e-06, 3.069999999993911e-06, 3.360999999868497e-06, 2.87499999984675e-06, 3.208999999948503e-06, 3.1659999999433808e-06, 2.986...</msg>
<status status="PASS" starttime="20201029 18:17:37.313" endtime="20201029 18:17:37.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:37.322" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:37.321" endtime="20201029 18:17:37.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:37.325" level="INFO">VALUE: [3.1109999998335525e-06, 3.680000000061412e-06, 3.041000000036931e-06, 3.069999999993911e-06, 3.360999999868497e-06, 2.87499999984675e-06, 3.208999999948503e-06, 3.1659999999433808e-06, 2.986000000149147e-06, 3.5830000000292017e-06, 3.6109999999034414e-06, 3.4859999999969915e-06, 2.9859999999271025e-06, 5.419999999922709e-07, 2.9580000000528628e-06, 2.6110000002077527e-06, 3.6950000001922945e-06, 3.4719999999488493e-06, 3.167000000026121e-06, 3.2640000000583314e-06, 2.6940000004138653e-06, 3.304999999897973e-06, 3.5000000000451337e-06, 3.847999999972984e-06, 3.1380000002911856e-06, 3.819000000238049e-06, 3.401999999930183e-06, 3.8199999998767e-06, 3.2919999997105265e-06, 3.4030000000129235e-06, 3.431000000109208e-06, 2.8329999999243682e-06, 3.0560000001678134e-06, 3.777999999954318e-06, 3.708000000379741e-06, 3.6250000001736282e-06, 3.972000000018738e-06, 3.958000000192641e-06, 0.3525930690000001, 2.847000000194555e-06, 2.847000000194555e-06, 3.4309999996651186e-06, 3.4030000000129235e-06, 3.820000000320789e-06, 2.8340000000071086e-06, 3.597000000077344e-06, 3.401999999930183e-06, 4.070000000133689e-06, 3.1659999999433808e-06, 4.027000000128567e-06, 3.485999999774947e-06, 3.7920000002245047e-06, 3.804999999967862e-06, 3.41600000020037e-06, 2.916999999769132e-06, 2.5410000001890864e-06, 3.028000000071529e-06, 3.2499999997881446e-06, 3.624999999729539e-06, 3.277999999884429e-06, 3.304999999897973e-06, 3.2920000001546157e-06, 3.374999999916639e-06, 3.0419999998976266e-06]</msg>
<status status="PASS" starttime="20201029 18:17:37.323" endtime="20201029 18:17:37.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.319" endtime="20201029 18:17:37.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.953" endtime="20201029 18:17:37.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.953" endtime="20201029 18:17:37.326"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:37.334" endtime="20201029 18:17:37.344"></status>
</kw>
<msg timestamp="20201029 18:17:37.345" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:37.333" endtime="20201029 18:17:37.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:37.347" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:37.346" endtime="20201029 18:17:37.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:37.348" endtime="20201029 18:17:37.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.330" endtime="20201029 18:17:37.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.328" endtime="20201029 18:17:37.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:37.357" endtime="20201029 18:17:37.668"></status>
</kw>
<msg timestamp="20201029 18:17:37.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.225696194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.225699556, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:37.356" endtime="20201029 18:17:37.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:37.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.225696194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.225699556, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:37.674" endtime="20201029 18:17:37.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:37.686" endtime="20201029 18:17:37.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.353" endtime="20201029 18:17:37.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.351" endtime="20201029 18:17:37.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:37.692" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.401999999930183e-06}, {'diff': 3.8199999998767e-06}, {'diff': 3.2919999997105265e-06}, {'diff': 3.4030000000129235e-06}, {'diff': 3.431000000109208e-06}, {'diff': 2.8329999999...</msg>
<status status="PASS" starttime="20201029 18:17:37.689" endtime="20201029 18:17:37.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:37.698" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.401999999930183e-06, 3.8199999998767e-06, 3.2919999997105265e-06, 3.4030000000129235e-06, 3.431000000109208e-06, 2.8329999999243682e-06, 3.0560000001678134e-06, 3.777999999954318e-06, 3...</msg>
<status status="PASS" starttime="20201029 18:17:37.694" endtime="20201029 18:17:37.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:37.703" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:37.702" endtime="20201029 18:17:37.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:37.705" level="INFO">VALUE: [0, 3.401999999930183e-06, 3.8199999998767e-06, 3.2919999997105265e-06, 3.4030000000129235e-06, 3.431000000109208e-06, 2.8329999999243682e-06, 3.0560000001678134e-06, 3.777999999954318e-06, 3.708000000379741e-06, 3.6250000001736282e-06, 3.972000000018738e-06, 3.958000000192641e-06, 0.3525930690000001, 2.847000000194555e-06, 2.847000000194555e-06, 3.4309999996651186e-06, 3.4030000000129235e-06, 3.820000000320789e-06, 2.8340000000071086e-06, 3.597000000077344e-06, 3.401999999930183e-06, 4.070000000133689e-06, 3.1659999999433808e-06, 4.027000000128567e-06, 3.485999999774947e-06, 3.7920000002245047e-06, 3.804999999967862e-06, 3.41600000020037e-06, 2.916999999769132e-06, 2.5410000001890864e-06, 3.028000000071529e-06, 3.2499999997881446e-06, 3.624999999729539e-06, 3.277999999884429e-06, 3.304999999897973e-06, 3.2920000001546157e-06, 3.374999999916639e-06, 3.0419999998976266e-06, 5.419999999922709e-07, 3.2229999997746006e-06, 3.2769999998016885e-06, 3.6250000001736282e-06, 3.5419999999675156e-06, 3.4580000001227518e-06, 3.4580000001227518e-06, 3.5419999999675156e-06, 3.3059999999807133e-06, 3.6389999999997258e-06, 2.9029999999430345e-06, 3.1250000001037392e-06, 3.847000000334333e-06, 3.2499999997881446e-06, 3.6389999999997258e-06, 3.3329999999942572e-06, 3.0549999996409838e-06, 3.528000000141418e-06, 3.5689999999810595e-06, 2.889000000116937e-06, 2.569000000285371e-06, 3.7769999998715775e-06, 3.6800000002834565e-06, 3.069999999993911e-06, 2.416999999699243e-06]</msg>
<status status="PASS" starttime="20201029 18:17:37.704" endtime="20201029 18:17:37.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.699" endtime="20201029 18:17:37.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.327" endtime="20201029 18:17:37.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.327" endtime="20201029 18:17:37.707"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:37.714" endtime="20201029 18:17:37.724"></status>
</kw>
<msg timestamp="20201029 18:17:37.725" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:37.713" endtime="20201029 18:17:37.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:37.727" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:37.726" endtime="20201029 18:17:37.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:37.728" endtime="20201029 18:17:37.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.710" endtime="20201029 18:17:37.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.709" endtime="20201029 18:17:37.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:37.738" endtime="20201029 18:17:38.050"></status>
</kw>
<msg timestamp="20201029 18:17:38.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.578453958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.57845775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:37.736" endtime="20201029 18:17:38.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.578453958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.57845775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:38.056" endtime="20201029 18:17:38.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.067" endtime="20201029 18:17:38.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.733" endtime="20201029 18:17:38.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.731" endtime="20201029 18:17:38.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:38.075" level="INFO">${RESULT} = [{'diff': 3.7920000002245047e-06}, {'diff': 3.804999999967862e-06}, {'diff': 3.41600000020037e-06}, {'diff': 2.916999999769132e-06}, {'diff': 2.5410000001890864e-06}, {'diff': 3.028000000071529e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:17:38.071" endtime="20201029 18:17:38.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:38.081" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.7920000002245047e-06, 3.804999999967862e-06, 3.41600000020037e-06, 2.916999999769132e-06, 2.5410000001890864e-06, 3.028000000071529e-06, 3.2499999997881446e-06, 3.624999999729539e-06, 3.27...</msg>
<status status="PASS" starttime="20201029 18:17:38.077" endtime="20201029 18:17:38.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.085" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:38.084" endtime="20201029 18:17:38.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.089" level="INFO">VALUE: [3.7920000002245047e-06, 3.804999999967862e-06, 3.41600000020037e-06, 2.916999999769132e-06, 2.5410000001890864e-06, 3.028000000071529e-06, 3.2499999997881446e-06, 3.624999999729539e-06, 3.277999999884429e-06, 3.304999999897973e-06, 3.2920000001546157e-06, 3.374999999916639e-06, 3.0419999998976266e-06, 5.419999999922709e-07, 3.2229999997746006e-06, 3.2769999998016885e-06, 3.6250000001736282e-06, 3.5419999999675156e-06, 3.4580000001227518e-06, 3.4580000001227518e-06, 3.5419999999675156e-06, 3.3059999999807133e-06, 3.6389999999997258e-06, 2.9029999999430345e-06, 3.1250000001037392e-06, 3.847000000334333e-06, 3.2499999997881446e-06, 3.6389999999997258e-06, 3.3329999999942572e-06, 3.0549999996409838e-06, 3.528000000141418e-06, 3.5689999999810595e-06, 2.889000000116937e-06, 2.569000000285371e-06, 3.7769999998715775e-06, 3.6800000002834565e-06, 3.069999999993911e-06, 2.416999999699243e-06, 0.36919652800000025, 3.5270000000586776e-06, 3.694000000109554e-06, 2.8480000002772954e-06, 3.694000000109554e-06, 3.5000000000451337e-06, 3.972000000018738e-06, 3.819000000238049e-06, 3.1529999997559344e-06, 3.290999999627786e-06, 2.6250000000338503e-06, 3.152000000117283e-06, 3.5139999998712312e-06, 3.5700000000638e-06, 3.4449999999353054e-06, 3.4870000003017765e-06, 3.4450000003793946e-06, 2.708000000239963e-06, 3.0830000001813573e-06, 3.2500000002322338e-06, 3.235999999962047e-06, 2.889000000116937e-06, 3.1809999998522187e-06, 3.4159999997562807e-06, 2.9999999999752447e-06, 3.4030000000129235e-06]</msg>
<status status="PASS" starttime="20201029 18:17:38.086" endtime="20201029 18:17:38.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.082" endtime="20201029 18:17:38.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.707" endtime="20201029 18:17:38.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.707" endtime="20201029 18:17:38.090"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.099" endtime="20201029 18:17:38.109"></status>
</kw>
<msg timestamp="20201029 18:17:38.110" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.097" endtime="20201029 18:17:38.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.112" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.111" endtime="20201029 18:17:38.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.114" endtime="20201029 18:17:38.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.095" endtime="20201029 18:17:38.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.092" endtime="20201029 18:17:38.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.123" endtime="20201029 18:17:38.452"></status>
</kw>
<msg timestamp="20201029 18:17:38.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.940311014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.940313972, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:38.121" endtime="20201029 18:17:38.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.940311014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.940313972, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:38.457" endtime="20201029 18:17:38.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.467" endtime="20201029 18:17:38.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.119" endtime="20201029 18:17:38.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.117" endtime="20201029 18:17:38.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:38.474" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.2499999997881446e-06}, {'diff': 3.6389999999997258e-06}, {'diff': 3.3329999999942572e-06}, {'diff': 3.0549999996409838e-06}, {'diff': 3.528000000141418e-06}, {'diff': 3.568999...</msg>
<status status="PASS" starttime="20201029 18:17:38.471" endtime="20201029 18:17:38.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:38.480" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.2499999997881446e-06, 3.6389999999997258e-06, 3.3329999999942572e-06, 3.0549999996409838e-06, 3.528000000141418e-06, 3.5689999999810595e-06, 2.889000000116937e-06, 2.569000000285371e-06...</msg>
<status status="PASS" starttime="20201029 18:17:38.475" endtime="20201029 18:17:38.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.484" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:38.483" endtime="20201029 18:17:38.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.487" level="INFO">VALUE: [0, 3.2499999997881446e-06, 3.6389999999997258e-06, 3.3329999999942572e-06, 3.0549999996409838e-06, 3.528000000141418e-06, 3.5689999999810595e-06, 2.889000000116937e-06, 2.569000000285371e-06, 3.7769999998715775e-06, 3.6800000002834565e-06, 3.069999999993911e-06, 2.416999999699243e-06, 0.36919652800000025, 3.5270000000586776e-06, 3.694000000109554e-06, 2.8480000002772954e-06, 3.694000000109554e-06, 3.5000000000451337e-06, 3.972000000018738e-06, 3.819000000238049e-06, 3.1529999997559344e-06, 3.290999999627786e-06, 2.6250000000338503e-06, 3.152000000117283e-06, 3.5139999998712312e-06, 3.5700000000638e-06, 3.4449999999353054e-06, 3.4870000003017765e-06, 3.4450000003793946e-06, 2.708000000239963e-06, 3.0830000001813573e-06, 3.2500000002322338e-06, 3.235999999962047e-06, 2.889000000116937e-06, 3.1809999998522187e-06, 3.4159999997562807e-06, 2.9999999999752447e-06, 3.4030000000129235e-06, 5.409999999095305e-07, 2.846999999750466e-06, 3.8199999998767e-06, 3.4159999997562807e-06, 2.8750000002908394e-06, 3.2220000001359494e-06, 3.527999999697329e-06, 3.485999999774947e-06, 3.0140000002454315e-06, 3.0690000003552598e-06, 2.87499999984675e-06, 3.709000000018392e-06, 3.1109999998335525e-06, 3.138999999929837e-06, 3.6530000002699126e-06, 3.2770000002457778e-06, 3.2500000002322338e-06, 3.138999999929837e-06, 2.8329999999243682e-06, 3.4719999999488493e-06, 3.6389999999997258e-06, 3.1529999997559344e-06, 2.8329999999243682e-06, 3.597000000077344e-06, 3.0830000001813573e-06]</msg>
<status status="PASS" starttime="20201029 18:17:38.485" endtime="20201029 18:17:38.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.481" endtime="20201029 18:17:38.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.091" endtime="20201029 18:17:38.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.091" endtime="20201029 18:17:38.488"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.496" endtime="20201029 18:17:38.506"></status>
</kw>
<msg timestamp="20201029 18:17:38.507" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.495" endtime="20201029 18:17:38.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.509" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.508" endtime="20201029 18:17:38.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.510" endtime="20201029 18:17:38.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.492" endtime="20201029 18:17:38.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.490" endtime="20201029 18:17:38.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.519" endtime="20201029 18:17:38.837"></status>
</kw>
<msg timestamp="20201029 18:17:38.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.309668708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.309672278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:38.518" endtime="20201029 18:17:38.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.309668708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.309672278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:38.842" endtime="20201029 18:17:38.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.852" endtime="20201029 18:17:38.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.515" endtime="20201029 18:17:38.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.513" endtime="20201029 18:17:38.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:38.859" level="INFO">${RESULT} = [{'diff': 3.5700000000638e-06}, {'diff': 3.4449999999353054e-06}, {'diff': 3.4870000003017765e-06}, {'diff': 3.4450000003793946e-06}, {'diff': 2.708000000239963e-06}, {'diff': 3.0830000001813573e-06},...</msg>
<status status="PASS" starttime="20201029 18:17:38.855" endtime="20201029 18:17:38.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:38.864" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.5700000000638e-06, 3.4449999999353054e-06, 3.4870000003017765e-06, 3.4450000003793946e-06, 2.708000000239963e-06, 3.0830000001813573e-06, 3.2500000002322338e-06, 3.235999999962047e-06, 2.8...</msg>
<status status="PASS" starttime="20201029 18:17:38.860" endtime="20201029 18:17:38.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.868" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:38.867" endtime="20201029 18:17:38.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.871" level="INFO">VALUE: [3.5700000000638e-06, 3.4449999999353054e-06, 3.4870000003017765e-06, 3.4450000003793946e-06, 2.708000000239963e-06, 3.0830000001813573e-06, 3.2500000002322338e-06, 3.235999999962047e-06, 2.889000000116937e-06, 3.1809999998522187e-06, 3.4159999997562807e-06, 2.9999999999752447e-06, 3.4030000000129235e-06, 5.409999999095305e-07, 2.846999999750466e-06, 3.8199999998767e-06, 3.4159999997562807e-06, 2.8750000002908394e-06, 3.2220000001359494e-06, 3.527999999697329e-06, 3.485999999774947e-06, 3.0140000002454315e-06, 3.0690000003552598e-06, 2.87499999984675e-06, 3.709000000018392e-06, 3.1109999998335525e-06, 3.138999999929837e-06, 3.6530000002699126e-06, 3.2770000002457778e-06, 3.2500000002322338e-06, 3.138999999929837e-06, 2.8329999999243682e-06, 3.4719999999488493e-06, 3.6389999999997258e-06, 3.1529999997559344e-06, 2.8329999999243682e-06, 3.597000000077344e-06, 3.0830000001813573e-06, 0.3873545550000004, 3.7500000003021228e-06, 3.1529999997559344e-06, 2.8469999993063766e-06, 3.3879999996599963e-06, 3.0689999999111706e-06, 3.179999999325389e-06, 2.638999999859948e-06, 3.7910000001417643e-06, 3.6530000002699126e-06, 3.2229999993305114e-06, 3.3610000000905416e-06, 2.819999999736922e-06, 3.3610000000905416e-06, 3.3059999999807133e-06, 3.5419999999675156e-06, 3.3190000001681597e-06, 3.181000000296308e-06, 3.278000000328518e-06, 3.221999999247771e-06, 3.2640000000583314e-06, 2.87499999984675e-06, 4.1109999999733304e-06, 2.986000000149147e-06, 3.3469999998203548e-06, 3.097000000451544e-06]</msg>
<status status="PASS" starttime="20201029 18:17:38.870" endtime="20201029 18:17:38.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.865" endtime="20201029 18:17:38.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.489" endtime="20201029 18:17:38.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.489" endtime="20201029 18:17:38.873"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.881" endtime="20201029 18:17:38.891"></status>
</kw>
<msg timestamp="20201029 18:17:38.892" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.879" endtime="20201029 18:17:38.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.894" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.893" endtime="20201029 18:17:38.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.895" endtime="20201029 18:17:38.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.876" endtime="20201029 18:17:38.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.875" endtime="20201029 18:17:38.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.905" endtime="20201029 18:17:39.231"></status>
</kw>
<msg timestamp="20201029 18:17:39.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.682470542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.682473778, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:38.903" endtime="20201029 18:17:39.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.682470542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.682473778, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:39.236" endtime="20201029 18:17:39.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.246" endtime="20201029 18:17:39.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.900" endtime="20201029 18:17:39.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.899" endtime="20201029 18:17:39.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:39.254" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.138999999929837e-06}, {'diff': 3.6530000002699126e-06}, {'diff': 3.2770000002457778e-06}, {'diff': 3.2500000002322338e-06}, {'diff': 3.138999999929837e-06}, {'diff': 2.8329999...</msg>
<status status="PASS" starttime="20201029 18:17:39.250" endtime="20201029 18:17:39.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:39.259" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.138999999929837e-06, 3.6530000002699126e-06, 3.2770000002457778e-06, 3.2500000002322338e-06, 3.138999999929837e-06, 2.8329999999243682e-06, 3.4719999999488493e-06, 3.6389999999997258e-0...</msg>
<status status="PASS" starttime="20201029 18:17:39.255" endtime="20201029 18:17:39.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.263" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:39.262" endtime="20201029 18:17:39.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.266" level="INFO">VALUE: [0, 3.138999999929837e-06, 3.6530000002699126e-06, 3.2770000002457778e-06, 3.2500000002322338e-06, 3.138999999929837e-06, 2.8329999999243682e-06, 3.4719999999488493e-06, 3.6389999999997258e-06, 3.1529999997559344e-06, 2.8329999999243682e-06, 3.597000000077344e-06, 3.0830000001813573e-06, 0.3873545550000004, 3.7500000003021228e-06, 3.1529999997559344e-06, 2.8469999993063766e-06, 3.3879999996599963e-06, 3.0689999999111706e-06, 3.179999999325389e-06, 2.638999999859948e-06, 3.7910000001417643e-06, 3.6530000002699126e-06, 3.2229999993305114e-06, 3.3610000000905416e-06, 2.819999999736922e-06, 3.3610000000905416e-06, 3.3059999999807133e-06, 3.5419999999675156e-06, 3.3190000001681597e-06, 3.181000000296308e-06, 3.278000000328518e-06, 3.221999999247771e-06, 3.2640000000583314e-06, 2.87499999984675e-06, 4.1109999999733304e-06, 2.986000000149147e-06, 3.3469999998203548e-06, 3.097000000451544e-06, 5.420000004363601e-07, 3.931000000179097e-06, 3.1250000001037392e-06, 3.833000000064146e-06, 3.3610000000905416e-06, 3.694000000109554e-06, 3.3469999998203548e-06, 3.3610000000905416e-06, 2.5140000001755425e-06, 3.763000000489569e-06, 3.2640000000583314e-06, 2.596999999937566e-06, 3.3889999997427367e-06, 3.86100000060452e-06, 3.485999999774947e-06, 3.5690000004251488e-06, 2.8329999999243682e-06, 3.6670000005400993e-06, 2.7090000003227033e-06, 3.111000000721731e-06, 2.8610000004647418e-06, 3.485999999774947e-06, 3.5140000003153204e-06, 3.4449999999353054e-06, 3.777999999954318e-06]</msg>
<status status="PASS" starttime="20201029 18:17:39.264" endtime="20201029 18:17:39.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.260" endtime="20201029 18:17:39.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.873" endtime="20201029 18:17:39.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.873" endtime="20201029 18:17:39.267"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.275" endtime="20201029 18:17:39.285"></status>
</kw>
<msg timestamp="20201029 18:17:39.286" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:39.274" endtime="20201029 18:17:39.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.288" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:39.287" endtime="20201029 18:17:39.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.289" endtime="20201029 18:17:39.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.271" endtime="20201029 18:17:39.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.269" endtime="20201029 18:17:39.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.298" endtime="20201029 18:17:39.613"></status>
</kw>
<msg timestamp="20201029 18:17:39.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.069983722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.069987083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:39.297" endtime="20201029 18:17:39.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.069983722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.069987083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:39.618" endtime="20201029 18:17:39.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.628" endtime="20201029 18:17:39.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.294" endtime="20201029 18:17:39.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.292" endtime="20201029 18:17:39.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:39.636" level="INFO">${RESULT} = [{'diff': 3.3610000000905416e-06}, {'diff': 3.3059999999807133e-06}, {'diff': 3.5419999999675156e-06}, {'diff': 3.3190000001681597e-06}, {'diff': 3.181000000296308e-06}, {'diff': 3.278000000328518e-06...</msg>
<status status="PASS" starttime="20201029 18:17:39.632" endtime="20201029 18:17:39.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:39.642" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.3610000000905416e-06, 3.3059999999807133e-06, 3.5419999999675156e-06, 3.3190000001681597e-06, 3.181000000296308e-06, 3.278000000328518e-06, 3.221999999247771e-06, 3.2640000000583314e-06, 2...</msg>
<status status="PASS" starttime="20201029 18:17:39.637" endtime="20201029 18:17:39.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.647" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:39.645" endtime="20201029 18:17:39.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.650" level="INFO">VALUE: [3.3610000000905416e-06, 3.3059999999807133e-06, 3.5419999999675156e-06, 3.3190000001681597e-06, 3.181000000296308e-06, 3.278000000328518e-06, 3.221999999247771e-06, 3.2640000000583314e-06, 2.87499999984675e-06, 4.1109999999733304e-06, 2.986000000149147e-06, 3.3469999998203548e-06, 3.097000000451544e-06, 5.420000004363601e-07, 3.931000000179097e-06, 3.1250000001037392e-06, 3.833000000064146e-06, 3.3610000000905416e-06, 3.694000000109554e-06, 3.3469999998203548e-06, 3.3610000000905416e-06, 2.5140000001755425e-06, 3.763000000489569e-06, 3.2640000000583314e-06, 2.596999999937566e-06, 3.3889999997427367e-06, 3.86100000060452e-06, 3.485999999774947e-06, 3.5690000004251488e-06, 2.8329999999243682e-06, 3.6670000005400993e-06, 2.7090000003227033e-06, 3.111000000721731e-06, 2.8610000004647418e-06, 3.485999999774947e-06, 3.5140000003153204e-06, 3.4449999999353054e-06, 3.777999999954318e-06, 0.38177590199999933, 2.9579999996087736e-06, 3.4309999996651186e-06, 4.040999999510575e-06, 2.416000000060592e-06, 3.3059999999807133e-06, 3.5140000003153204e-06, 3.304999999897973e-06, 3.5280000005855072e-06, 3.5419999999675156e-06, 3.2499999997881446e-06, 3.652999999381734e-06, 2.77799999981454e-06, 3.929999999208178e-06, 3.860999999716341e-06, 2.9999999995311555e-06, 2.7640000004325316e-06, 3.6109999994593522e-06, 3.040999999370797e-06, 2.763999999544353e-06, 3.3879999996599963e-06, 3.944000000366543e-06, 2.6110000002077527e-06, 3.5689999995369703e-06, 3.3610000000905416e-06, 3.7920000002245047e-06]</msg>
<status status="PASS" starttime="20201029 18:17:39.648" endtime="20201029 18:17:39.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.643" endtime="20201029 18:17:39.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.268" endtime="20201029 18:17:39.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.268" endtime="20201029 18:17:39.651"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.660" endtime="20201029 18:17:39.669"></status>
</kw>
<msg timestamp="20201029 18:17:39.670" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:39.658" endtime="20201029 18:17:39.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.673" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:39.671" endtime="20201029 18:17:39.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.674" endtime="20201029 18:17:39.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.655" endtime="20201029 18:17:39.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.654" endtime="20201029 18:17:39.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.683" endtime="20201029 18:17:40.024"></status>
</kw>
<msg timestamp="20201029 18:17:40.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.444880361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.444883264, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:39.681" endtime="20201029 18:17:40.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.444880361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.444883264, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:40.029" endtime="20201029 18:17:40.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.040" endtime="20201029 18:17:40.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.679" endtime="20201029 18:17:40.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.677" endtime="20201029 18:17:40.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:40.047" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.86100000060452e-06}, {'diff': 3.485999999774947e-06}, {'diff': 3.5690000004251488e-06}, {'diff': 2.8329999999243682e-06}, {'diff': 3.6670000005400993e-06}, {'diff': 2.70900000...</msg>
<status status="PASS" starttime="20201029 18:17:40.043" endtime="20201029 18:17:40.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:40.052" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.86100000060452e-06, 3.485999999774947e-06, 3.5690000004251488e-06, 2.8329999999243682e-06, 3.6670000005400993e-06, 2.7090000003227033e-06, 3.111000000721731e-06, 2.8610000004647418e-06,...</msg>
<status status="PASS" starttime="20201029 18:17:40.048" endtime="20201029 18:17:40.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.056" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:40.055" endtime="20201029 18:17:40.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.059" level="INFO">VALUE: [0, 3.86100000060452e-06, 3.485999999774947e-06, 3.5690000004251488e-06, 2.8329999999243682e-06, 3.6670000005400993e-06, 2.7090000003227033e-06, 3.111000000721731e-06, 2.8610000004647418e-06, 3.485999999774947e-06, 3.5140000003153204e-06, 3.4449999999353054e-06, 3.777999999954318e-06, 0.38177590199999933, 2.9579999996087736e-06, 3.4309999996651186e-06, 4.040999999510575e-06, 2.416000000060592e-06, 3.3059999999807133e-06, 3.5140000003153204e-06, 3.304999999897973e-06, 3.5280000005855072e-06, 3.5419999999675156e-06, 3.2499999997881446e-06, 3.652999999381734e-06, 2.77799999981454e-06, 3.929999999208178e-06, 3.860999999716341e-06, 2.9999999995311555e-06, 2.7640000004325316e-06, 3.6109999994593522e-06, 3.040999999370797e-06, 2.763999999544353e-06, 3.3879999996599963e-06, 3.944000000366543e-06, 2.6110000002077527e-06, 3.5689999995369703e-06, 3.3610000000905416e-06, 3.7920000002245047e-06, 5.410000003536197e-07, 2.9719999998789604e-06, 3.332999999550168e-06, 3.0139999998013423e-06, 3.443999999852565e-06, 3.582999999807157e-06, 3.1949999996783163e-06, 2.8340000000071086e-06, 3.5689999995369703e-06, 3.8889999993685365e-06, 3.3059999999807133e-06, 3.41600000020037e-06, 3.4449999999353054e-06, 3.082999999293179e-06, 3.805999999606513e-06, 3.666999999651921e-06, 3.763999999684131e-06, 2.7499999992741664e-06, 2.8340000000071086e-06, 2.8329999999243682e-06, 3.6250000006177174e-06, 3.6799999998393673e-06, 2.889000000116937e-06, 3.5699999996197107e-06, 3.0269999999887887e-06]</msg>
<status status="PASS" starttime="20201029 18:17:40.057" endtime="20201029 18:17:40.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.052" endtime="20201029 18:17:40.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.652" endtime="20201029 18:17:40.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.652" endtime="20201029 18:17:40.060"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.069" endtime="20201029 18:17:40.079"></status>
</kw>
<msg timestamp="20201029 18:17:40.079" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:40.068" endtime="20201029 18:17:40.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.082" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:40.080" endtime="20201029 18:17:40.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.083" endtime="20201029 18:17:40.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.064" endtime="20201029 18:17:40.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.062" endtime="20201029 18:17:40.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.092" endtime="20201029 18:17:40.401"></status>
</kw>
<msg timestamp="20201029 18:17:40.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.826818903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.826822833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:40.091" endtime="20201029 18:17:40.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.826818903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.826822833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:40.407" endtime="20201029 18:17:40.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.417" endtime="20201029 18:17:40.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.088" endtime="20201029 18:17:40.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.086" endtime="20201029 18:17:40.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:40.424" level="INFO">${RESULT} = [{'diff': 3.929999999208178e-06}, {'diff': 3.860999999716341e-06}, {'diff': 2.9999999995311555e-06}, {'diff': 2.7640000004325316e-06}, {'diff': 3.6109999994593522e-06}, {'diff': 3.040999999370797e-06}...</msg>
<status status="PASS" starttime="20201029 18:17:40.421" endtime="20201029 18:17:40.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:40.430" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.929999999208178e-06, 3.860999999716341e-06, 2.9999999995311555e-06, 2.7640000004325316e-06, 3.6109999994593522e-06, 3.040999999370797e-06, 2.763999999544353e-06, 3.3879999996599963e-06, 3....</msg>
<status status="PASS" starttime="20201029 18:17:40.425" endtime="20201029 18:17:40.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.434" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:40.433" endtime="20201029 18:17:40.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.437" level="INFO">VALUE: [3.929999999208178e-06, 3.860999999716341e-06, 2.9999999995311555e-06, 2.7640000004325316e-06, 3.6109999994593522e-06, 3.040999999370797e-06, 2.763999999544353e-06, 3.3879999996599963e-06, 3.944000000366543e-06, 2.6110000002077527e-06, 3.5689999995369703e-06, 3.3610000000905416e-06, 3.7920000002245047e-06, 5.410000003536197e-07, 2.9719999998789604e-06, 3.332999999550168e-06, 3.0139999998013423e-06, 3.443999999852565e-06, 3.582999999807157e-06, 3.1949999996783163e-06, 2.8340000000071086e-06, 3.5689999995369703e-06, 3.8889999993685365e-06, 3.3059999999807133e-06, 3.41600000020037e-06, 3.4449999999353054e-06, 3.082999999293179e-06, 3.805999999606513e-06, 3.666999999651921e-06, 3.763999999684131e-06, 2.7499999992741664e-06, 2.8340000000071086e-06, 2.8329999999243682e-06, 3.6250000006177174e-06, 3.6799999998393673e-06, 2.889000000116937e-06, 3.5699999996197107e-06, 3.0269999999887887e-06, 0.3983197780000003, 3.22300000021869e-06, 2.750000000162345e-06, 3.1949999996783163e-06, 3.6530000002699126e-06, 2.8480000002772954e-06, 3.9579999997485515e-06, 2.958000000496952e-06, 3.7500000003021228e-06, 3.2220000001359494e-06, 3.0969999995633657e-06, 2.527000000362989e-06, 3.4580000001227518e-06, 3.901999999555983e-06, 3.4309999996651186e-06, 3.4580000001227518e-06, 3.179999999325389e-06, 3.3200000002509e-06, 3.5560000002377024e-06, 3.2499999997881446e-06, 3.0139999998013423e-06, 3.6119999995420926e-06, 4.040999999510575e-06, 2.6379999997772074e-06, 3.055999999723724e-06, 3.6109999994593522e-06]</msg>
<status status="PASS" starttime="20201029 18:17:40.435" endtime="20201029 18:17:40.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.431" endtime="20201029 18:17:40.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.061" endtime="20201029 18:17:40.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.061" endtime="20201029 18:17:40.439"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.447" endtime="20201029 18:17:40.458"></status>
</kw>
<msg timestamp="20201029 18:17:40.459" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:40.445" endtime="20201029 18:17:40.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.462" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:40.460" endtime="20201029 18:17:40.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.464" endtime="20201029 18:17:40.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.442" endtime="20201029 18:17:40.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.441" endtime="20201029 18:17:40.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.477" endtime="20201029 18:17:40.810"></status>
</kw>
<msg timestamp="20201029 18:17:40.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.202490056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.202493375, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:40.475" endtime="20201029 18:17:40.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.202490056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.202493375, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:40.816" endtime="20201029 18:17:40.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.827" endtime="20201029 18:17:40.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.472" endtime="20201029 18:17:40.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.470" endtime="20201029 18:17:40.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:40.836" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.082999999293179e-06}, {'diff': 3.805999999606513e-06}, {'diff': 3.666999999651921e-06}, {'diff': 3.763999999684131e-06}, {'diff': 2.7499999992741664e-06}, {'diff': 2.834000000...</msg>
<status status="PASS" starttime="20201029 18:17:40.831" endtime="20201029 18:17:40.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:40.842" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.082999999293179e-06, 3.805999999606513e-06, 3.666999999651921e-06, 3.763999999684131e-06, 2.7499999992741664e-06, 2.8340000000071086e-06, 2.8329999999243682e-06, 3.6250000006177174e-06,...</msg>
<status status="PASS" starttime="20201029 18:17:40.837" endtime="20201029 18:17:40.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.846" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:40.845" endtime="20201029 18:17:40.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.848" level="INFO">VALUE: [0, 3.082999999293179e-06, 3.805999999606513e-06, 3.666999999651921e-06, 3.763999999684131e-06, 2.7499999992741664e-06, 2.8340000000071086e-06, 2.8329999999243682e-06, 3.6250000006177174e-06, 3.6799999998393673e-06, 2.889000000116937e-06, 3.5699999996197107e-06, 3.0269999999887887e-06, 0.3983197780000003, 3.22300000021869e-06, 2.750000000162345e-06, 3.1949999996783163e-06, 3.6530000002699126e-06, 2.8480000002772954e-06, 3.9579999997485515e-06, 2.958000000496952e-06, 3.7500000003021228e-06, 3.2220000001359494e-06, 3.0969999995633657e-06, 2.527000000362989e-06, 3.4580000001227518e-06, 3.901999999555983e-06, 3.4309999996651186e-06, 3.4580000001227518e-06, 3.179999999325389e-06, 3.3200000002509e-06, 3.5560000002377024e-06, 3.2499999997881446e-06, 3.0139999998013423e-06, 3.6119999995420926e-06, 4.040999999510575e-06, 2.6379999997772074e-06, 3.055999999723724e-06, 3.6109999994593522e-06, 5.409999994654413e-07, 2.9299999999565784e-06, 3.6659999995691805e-06, 3.708000000379741e-06, 2.943999999338587e-06, 3.000000000419334e-06, 3.736000000031936e-06, 3.5000000000451337e-06, 3.2220000001359494e-06, 3.513999999427142e-06, 3.5129999993444017e-06, 2.958000000496952e-06, 3.290999999627786e-06, 2.596999999937566e-06, 3.208999999948503e-06, 2.6809999997823297e-06, 3.139000000373926e-06, 2.9440000002267652e-06, 3.2779999994403397e-06, 3.151999999673194e-06, 3.833000000064146e-06, 3.332999999550168e-06, 3.2919999997105265e-06, 2.9029999994989453e-06, 2.9870000002318875e-06]</msg>
<status status="PASS" starttime="20201029 18:17:40.847" endtime="20201029 18:17:40.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.843" endtime="20201029 18:17:40.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.439" endtime="20201029 18:17:40.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.439" endtime="20201029 18:17:40.850"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.858" endtime="20201029 18:17:40.868"></status>
</kw>
<msg timestamp="20201029 18:17:40.869" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:40.856" endtime="20201029 18:17:40.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.871" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:40.870" endtime="20201029 18:17:40.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.873" endtime="20201029 18:17:40.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.854" endtime="20201029 18:17:40.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.852" endtime="20201029 18:17:40.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.883" endtime="20201029 18:17:41.193"></status>
</kw>
<msg timestamp="20201029 18:17:41.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.600970181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.600974083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:40.881" endtime="20201029 18:17:41.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.600970181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.600974083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:41.198" endtime="20201029 18:17:41.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.209" endtime="20201029 18:17:41.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.878" endtime="20201029 18:17:41.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.876" endtime="20201029 18:17:41.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:41.216" level="INFO">${RESULT} = [{'diff': 3.901999999555983e-06}, {'diff': 3.4309999996651186e-06}, {'diff': 3.4580000001227518e-06}, {'diff': 3.179999999325389e-06}, {'diff': 3.3200000002509e-06}, {'diff': 3.5560000002377024e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:17:41.212" endtime="20201029 18:17:41.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:41.221" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.901999999555983e-06, 3.4309999996651186e-06, 3.4580000001227518e-06, 3.179999999325389e-06, 3.3200000002509e-06, 3.5560000002377024e-06, 3.2499999997881446e-06, 3.0139999998013423e-06, 3.6...</msg>
<status status="PASS" starttime="20201029 18:17:41.217" endtime="20201029 18:17:41.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.226" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:41.224" endtime="20201029 18:17:41.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.229" level="INFO">VALUE: [3.901999999555983e-06, 3.4309999996651186e-06, 3.4580000001227518e-06, 3.179999999325389e-06, 3.3200000002509e-06, 3.5560000002377024e-06, 3.2499999997881446e-06, 3.0139999998013423e-06, 3.6119999995420926e-06, 4.040999999510575e-06, 2.6379999997772074e-06, 3.055999999723724e-06, 3.6109999994593522e-06, 5.409999994654413e-07, 2.9299999999565784e-06, 3.6659999995691805e-06, 3.708000000379741e-06, 2.943999999338587e-06, 3.000000000419334e-06, 3.736000000031936e-06, 3.5000000000451337e-06, 3.2220000001359494e-06, 3.513999999427142e-06, 3.5129999993444017e-06, 2.958000000496952e-06, 3.290999999627786e-06, 2.596999999937566e-06, 3.208999999948503e-06, 2.6809999997823297e-06, 3.139000000373926e-06, 2.9440000002267652e-06, 3.2779999994403397e-06, 3.151999999673194e-06, 3.833000000064146e-06, 3.332999999550168e-06, 3.2919999997105265e-06, 2.9029999994989453e-06, 2.9870000002318875e-06, 0.40097766700000026, 2.931000000039319e-06, 3.292000000598705e-06, 3.7219999997617492e-06, 3.7500000003021228e-06, 2.8329999999243682e-06, 3.362000000173282e-06, 3.8889999993685365e-06, 2.9170000006573105e-06, 3.181000000296308e-06, 3.2079999998657627e-06, 3.0969999995633657e-06, 2.5699999994799327e-06, 3.097000000451544e-06, 2.4720000002531606e-06, 3.5980000001600843e-06, 3.2640000000583314e-06, 3.278000000328518e-06, 3.3889999997427367e-06, 3.5549999992667836e-06, 3.874999999986528e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.028000000071529e-06, 2.9579999996087736e-06, 2.9440000002267652e-06]</msg>
<status status="PASS" starttime="20201029 18:17:41.227" endtime="20201029 18:17:41.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.222" endtime="20201029 18:17:41.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.851" endtime="20201029 18:17:41.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.850" endtime="20201029 18:17:41.231"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.239" endtime="20201029 18:17:41.249"></status>
</kw>
<msg timestamp="20201029 18:17:41.249" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:41.237" endtime="20201029 18:17:41.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.252" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:41.250" endtime="20201029 18:17:41.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.253" endtime="20201029 18:17:41.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.235" endtime="20201029 18:17:41.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.233" endtime="20201029 18:17:41.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.262" endtime="20201029 18:17:41.578"></status>
</kw>
<msg timestamp="20201029 18:17:41.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.966906306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.966909597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:41.260" endtime="20201029 18:17:41.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.966906306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.966909597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:41.583" endtime="20201029 18:17:41.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.593" endtime="20201029 18:17:41.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.258" endtime="20201029 18:17:41.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.256" endtime="20201029 18:17:41.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:41.600" level="INFO">${RESULT} = [{'diff': 3.290999999627786e-06}, {'diff': 2.596999999937566e-06}, {'diff': 3.208999999948503e-06}, {'diff': 2.6809999997823297e-06}, {'diff': 3.139000000373926e-06}, {'diff': 2.9440000002267652e-06},...</msg>
<status status="PASS" starttime="20201029 18:17:41.597" endtime="20201029 18:17:41.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:41.606" level="INFO">${GPIO_OVERHEAD} = {'diff': [3.290999999627786e-06, 2.596999999937566e-06, 3.208999999948503e-06, 2.6809999997823297e-06, 3.139000000373926e-06, 2.9440000002267652e-06, 3.2779999994403397e-06, 3.151999999673194e-06, 3.8...</msg>
<status status="PASS" starttime="20201029 18:17:41.601" endtime="20201029 18:17:41.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.610" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:41.609" endtime="20201029 18:17:41.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.612" level="INFO">VALUE: [3.290999999627786e-06, 2.596999999937566e-06, 3.208999999948503e-06, 2.6809999997823297e-06, 3.139000000373926e-06, 2.9440000002267652e-06, 3.2779999994403397e-06, 3.151999999673194e-06, 3.833000000064146e-06, 3.332999999550168e-06, 3.2919999997105265e-06, 2.9029999994989453e-06, 2.9870000002318875e-06, 0.40097766700000026, 2.931000000039319e-06, 3.292000000598705e-06, 3.7219999997617492e-06, 3.7500000003021228e-06, 2.8329999999243682e-06, 3.362000000173282e-06, 3.8889999993685365e-06, 2.9170000006573105e-06, 3.181000000296308e-06, 3.2079999998657627e-06, 3.0969999995633657e-06, 2.5699999994799327e-06, 3.097000000451544e-06, 2.4720000002531606e-06, 3.5980000001600843e-06, 3.2640000000583314e-06, 3.278000000328518e-06, 3.3889999997427367e-06, 3.5549999992667836e-06, 3.874999999986528e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.028000000071529e-06, 2.9579999996087736e-06, 2.9440000002267652e-06, 2.9029999994989453e-06, 3.612000000430271e-06, 3.930000000096356e-06, 3.2220000001359494e-06, 3.028000000071529e-06, 3.6809999999221077e-06, 2.596999999937566e-06, 2.986000000149147e-06, 3.250000000676323e-06, 3.263999999170153e-06, 3.4170000002831102e-06, 3.7499999994139444e-06, 3.4580000001227518e-06, 3.4030000000129235e-06, 3.2360000004061362e-06, 3.37499999947255e-06, 3.7229999998444896e-06, 2.693999999969776e-06, 3.6809999999221077e-06, 3.304999999897973e-06, 3.5140000003153204e-06, 3.0969999995633657e-06, 2.8060000003549135e-06, 3.652000000187172e-06, 2.8609999995765634e-06]</msg>
<status status="PASS" starttime="20201029 18:17:41.611" endtime="20201029 18:17:41.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.607" endtime="20201029 18:17:41.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.232" endtime="20201029 18:17:41.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.231" endtime="20201029 18:17:41.614"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.622" endtime="20201029 18:17:41.632"></status>
</kw>
<msg timestamp="20201029 18:17:41.633" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:41.620" endtime="20201029 18:17:41.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.635" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:41.634" endtime="20201029 18:17:41.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.636" endtime="20201029 18:17:41.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.618" endtime="20201029 18:17:41.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.616" endtime="20201029 18:17:41.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.646" endtime="20201029 18:17:41.967"></status>
</kw>
<msg timestamp="20201029 18:17:41.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.368044917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.368048847, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:41.644" endtime="20201029 18:17:41.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.368044917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.368048847, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:41.972" endtime="20201029 18:17:41.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.982" endtime="20201029 18:17:41.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.641" endtime="20201029 18:17:41.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.640" endtime="20201029 18:17:41.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:41.989" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 3.097000000451544e-06}, {'diff': 2.4720000002531606e-06}, {'diff': 3.5980000001600843e-06}, {'diff': 3.2640000000583314e-06}, {'diff': 3.278000000328518e-06}, {'diff': 3.3889999...</msg>
<status status="PASS" starttime="20201029 18:17:41.986" endtime="20201029 18:17:41.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:41.994" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 3.097000000451544e-06, 2.4720000002531606e-06, 3.5980000001600843e-06, 3.2640000000583314e-06, 3.278000000328518e-06, 3.3889999997427367e-06, 3.5549999992667836e-06, 3.874999999986528e-06...</msg>
<status status="PASS" starttime="20201029 18:17:41.990" endtime="20201029 18:17:41.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.998" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:41.997" endtime="20201029 18:17:41.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.001" level="INFO">VALUE: [0, 3.097000000451544e-06, 2.4720000002531606e-06, 3.5980000001600843e-06, 3.2640000000583314e-06, 3.278000000328518e-06, 3.3889999997427367e-06, 3.5549999992667836e-06, 3.874999999986528e-06, 3.042000000341716e-06, 3.028000000071529e-06, 3.028000000071529e-06, 2.9579999996087736e-06, 2.9440000002267652e-06, 2.9029999994989453e-06, 3.612000000430271e-06, 3.930000000096356e-06, 3.2220000001359494e-06, 3.028000000071529e-06, 3.6809999999221077e-06, 2.596999999937566e-06, 2.986000000149147e-06, 3.250000000676323e-06, 3.263999999170153e-06, 3.4170000002831102e-06, 3.7499999994139444e-06, 3.4580000001227518e-06, 3.4030000000129235e-06, 3.2360000004061362e-06, 3.37499999947255e-06, 3.7229999998444896e-06, 2.693999999969776e-06, 3.6809999999221077e-06, 3.304999999897973e-06, 3.5140000003153204e-06, 3.0969999995633657e-06, 2.8060000003549135e-06, 3.652000000187172e-06, 2.8609999995765634e-06, 5.419999995481817e-07, 3.3469999998203548e-06, 3.7079999994915624e-06, 3.1940000004837543e-06, 3.1659999999433808e-06, 3.459000000205492e-06, 3.7920000002245047e-06, 3.958999999831292e-06, 2.708000000239963e-06, 3.347999999903095e-06, 4.055999999863502e-06, 3.332999999550168e-06, 2.4999999999053557e-06, 3.1389999994857476e-06, 3.624999999729539e-06, 2.9450000003095056e-06, 3.3610000000905416e-06, 3.4309999996651186e-06, 3.3750000003607283e-06, 3.3750000003607283e-06, 2.735999999892158e-06, 3.431000000553297e-06, 2.7910000000019863e-06, 2.735999999892158e-06, 3.2640000000583314e-06]</msg>
<status status="PASS" starttime="20201029 18:17:41.999" endtime="20201029 18:17:42.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.995" endtime="20201029 18:17:42.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.615" endtime="20201029 18:17:42.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.614" endtime="20201029 18:17:42.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.366" endtime="20201029 18:17:42.003"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:34.295" endtime="20201029 18:17:42.003" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:42.010" endtime="20201029 18:17:42.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.009" endtime="20201029 18:17:42.030"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.044" endtime="20201029 18:17:42.057"></status>
</kw>
<msg timestamp="20201029 18:17:42.058" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:42.042" endtime="20201029 18:17:42.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.061" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:42.059" endtime="20201029 18:17:42.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.064" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:42.062" endtime="20201029 18:17:42.064"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:42.040" endtime="20201029 18:17:42.065"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:42.037" endtime="20201029 18:17:42.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.036" endtime="20201029 18:17:42.066"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:42.070" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:42.069" endtime="20201029 18:17:42.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.067" endtime="20201029 18:17:42.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.035" endtime="20201029 18:17:42.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.035" endtime="20201029 18:17:42.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.071" endtime="20201029 18:17:42.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.032" endtime="20201029 18:17:42.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.031" endtime="20201029 18:17:42.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.007" endtime="20201029 18:17:42.074"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.083" endtime="20201029 18:17:42.093"></status>
</kw>
<msg timestamp="20201029 18:17:42.094" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:42.081" endtime="20201029 18:17:42.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.096" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:42.095" endtime="20201029 18:17:42.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.097" endtime="20201029 18:17:42.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.078" endtime="20201029 18:17:42.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.077" endtime="20201029 18:17:42.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.108" endtime="20201029 18:17:42.397"></status>
</kw>
<msg timestamp="20201029 18:17:42.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063418694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063419778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:42.106" endtime="20201029 18:17:42.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063418694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063419778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:42.401" endtime="20201029 18:17:42.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.409" endtime="20201029 18:17:42.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.102" endtime="20201029 18:17:42.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.101" endtime="20201029 18:17:42.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:42.416" level="INFO">${RESULT} = [{'diff': 1.0839999999984196e-06}, {'diff': 7.09000000001514e-07}, {'diff': 6.95000000008883e-07}, {'diff': 7.220000000085491e-07}, {'diff': 7.079999999881625e-07}, {'diff': 7.50000000007689e-07}, {'d...</msg>
<status status="PASS" starttime="20201029 18:17:42.413" endtime="20201029 18:17:42.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:42.420" level="INFO">${OVERHEAD} = {'diff': [1.0839999999984196e-06, 7.09000000001514e-07, 6.95000000008883e-07, 7.220000000085491e-07, 7.079999999881625e-07, 7.50000000007689e-07, 7.370000000006538e-07, 7.22999999994145e-07, 7.3600000...</msg>
<status status="PASS" starttime="20201029 18:17:42.417" endtime="20201029 18:17:42.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.425" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:42.424" endtime="20201029 18:17:42.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.427" level="INFO">VALUE: [1.0839999999984196e-06, 7.09000000001514e-07, 6.95000000008883e-07, 7.220000000085491e-07, 7.079999999881625e-07, 7.50000000007689e-07, 7.370000000006538e-07, 7.22999999994145e-07, 7.360000000011802e-07, 7.499999999938112e-07, 7.360000000011802e-07, 7.219999999946713e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.09000000001514e-07, 7.080000000020403e-07, 7.360000000011802e-07, 7.370000000006538e-07, 7.219999999946713e-07, 6.530000000032343e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.080000000020403e-07, 7.360000000011802e-07, 7.50000000007689e-07, 7.360000000011802e-07, 7.09000000001514e-07, 7.359999999873024e-07, 7.360000000011802e-07, 7.22999999994145e-07, 7.219999999946713e-07, 7.360000000011802e-07, 7.220000000085491e-07, 7.219999999946713e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.230000000080228e-07, 7.219999999946713e-07, 7.499999999938112e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.219999999946713e-07, 7.219999999946713e-07, 6.800000000029005e-07, 7.370000000006538e-07, 7.219999999946713e-07]</msg>
<status status="PASS" starttime="20201029 18:17:42.426" endtime="20201029 18:17:42.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.421" endtime="20201029 18:17:42.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.075" endtime="20201029 18:17:42.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.075" endtime="20201029 18:17:42.429"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.437" endtime="20201029 18:17:42.448"></status>
</kw>
<msg timestamp="20201029 18:17:42.449" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:42.435" endtime="20201029 18:17:42.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.451" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:42.450" endtime="20201029 18:17:42.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.452" endtime="20201029 18:17:42.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.432" endtime="20201029 18:17:42.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.431" endtime="20201029 18:17:42.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.461" endtime="20201029 18:17:42.771"></status>
</kw>
<msg timestamp="20201029 18:17:42.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063503181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063503903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:42.460" endtime="20201029 18:17:42.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063503181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063503903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:42.776" endtime="20201029 18:17:42.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.786" endtime="20201029 18:17:42.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.457" endtime="20201029 18:17:42.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.456" endtime="20201029 18:17:42.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:42.793" level="INFO">${RESULT} = [{'diff': 7.219999999946713e-07}, {'diff': 7.360000000011802e-07}, {'diff': 7.360000000011802e-07}, {'diff': 7.230000000080228e-07}, {'diff': 7.219999999946713e-07}, {'diff': 7.499999999938112e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:17:42.790" endtime="20201029 18:17:42.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:42.799" level="INFO">${OVERHEAD} = {'diff': [7.219999999946713e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.230000000080228e-07, 7.219999999946713e-07, 7.499999999938112e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.3600...</msg>
<status status="PASS" starttime="20201029 18:17:42.794" endtime="20201029 18:17:42.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.803" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:42.802" endtime="20201029 18:17:42.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.806" level="INFO">VALUE: [7.219999999946713e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.230000000080228e-07, 7.219999999946713e-07, 7.499999999938112e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.219999999946713e-07, 7.219999999946713e-07, 6.800000000029005e-07, 7.370000000006538e-07, 7.219999999946713e-07, 1.0979999999771728e-06, 7.080000000159181e-07, 7.229999999802672e-07, 7.229999999802672e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 6.800000000306561e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.220000000085491e-07, 6.530000000171121e-07, 7.229999999802672e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.360000000011802e-07, 6.949999999950052e-07, 7.499999999938112e-07, 7.35999999945669e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.779999999790732e-07, 7.229999999802672e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.220000000085491e-07, 6.93999999967776e-07, 7.360000000011802e-07, 7.21999999953038e-07, 7.089999999876362e-07, 6.800000000306561e-07, 7.21999999953038e-07, 7.229999999802672e-07, 7.360000000011802e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.220000000085491e-07, 7.369999999728982e-07, 7.499999999938112e-07, 7.499999999938112e-07, 7.080000000159181e-07, 7.370000000284094e-07, 7.360000000011802e-07]</msg>
<status status="PASS" starttime="20201029 18:17:42.804" endtime="20201029 18:17:42.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.800" endtime="20201029 18:17:42.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.429" endtime="20201029 18:17:42.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.429" endtime="20201029 18:17:42.807"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.815" endtime="20201029 18:17:42.827"></status>
</kw>
<msg timestamp="20201029 18:17:42.827" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:42.814" endtime="20201029 18:17:42.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.830" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:42.828" endtime="20201029 18:17:42.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.831" endtime="20201029 18:17:42.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.811" endtime="20201029 18:17:42.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.809" endtime="20201029 18:17:42.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.840" endtime="20201029 18:17:43.143"></status>
</kw>
<msg timestamp="20201029 18:17:43.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.408262806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.408263528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:42.838" endtime="20201029 18:17:43.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.408262806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.408263528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:43.148" endtime="20201029 18:17:43.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.158" endtime="20201029 18:17:43.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.836" endtime="20201029 18:17:43.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.834" endtime="20201029 18:17:43.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:43.165" level="INFO">${RESULT} = [{'diff': 7.220000000085491e-07}, {'diff': 7.360000000011802e-07}, {'diff': 7.360000000011802e-07}, {'diff': 7.220000000085491e-07}, {'diff': 7.360000000011802e-07}, {'diff': 7.360000000011802e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:17:43.162" endtime="20201029 18:17:43.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:43.172" level="INFO">${OVERHEAD} = {'diff': [7.220000000085491e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.220000000085491e-07, 7.3699...</msg>
<status status="PASS" starttime="20201029 18:17:43.166" endtime="20201029 18:17:43.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.177" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:43.176" endtime="20201029 18:17:43.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.180" level="INFO">VALUE: [7.220000000085491e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.220000000085491e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.360000000011802e-07, 7.220000000085491e-07, 7.369999999728982e-07, 7.499999999938112e-07, 7.499999999938112e-07, 7.080000000159181e-07, 7.370000000284094e-07, 7.360000000011802e-07, 1.070000000047422e-06, 7.230000000912895e-07, 6.940000000232871e-07, 7.080000000714293e-07, 7.499999999938112e-07, 7.370000000284094e-07, 7.229999999802672e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.499999999938112e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.35999999945669e-07, 7.220000000085491e-07, 7.35999999945669e-07, 7.369999999173871e-07, 7.220000000085491e-07, 7.35999999945669e-07, 7.229999999802672e-07, 7.35999999945669e-07, 7.220000000085491e-07, 7.07999999960407e-07, 7.35999999945669e-07, 7.07999999960407e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.230000000912895e-07, 7.229999999802672e-07, 7.360000000566913e-07, 7.370000000284094e-07, 7.779999999790732e-07, 7.35999999945669e-07, 7.35999999945669e-07, 7.220000000085491e-07, 7.090000000431473e-07, 6.810000000578853e-07, 7.499999999938112e-07, 7.220000000085491e-07, 6.530000000726233e-07, 7.35999999945669e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.219999998975268e-07, 7.360000000566913e-07, 7.35999999945669e-07, 7.220000000085491e-07, 6.799999999751449e-07, 7.369999999173871e-07]</msg>
<status status="PASS" starttime="20201029 18:17:43.178" endtime="20201029 18:17:43.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.174" endtime="20201029 18:17:43.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.808" endtime="20201029 18:17:43.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.808" endtime="20201029 18:17:43.181"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.189" endtime="20201029 18:17:43.200"></status>
</kw>
<msg timestamp="20201029 18:17:43.201" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:43.187" endtime="20201029 18:17:43.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.203" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:43.202" endtime="20201029 18:17:43.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.204" endtime="20201029 18:17:43.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.185" endtime="20201029 18:17:43.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.183" endtime="20201029 18:17:43.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.213" endtime="20201029 18:17:43.524"></status>
</kw>
<msg timestamp="20201029 18:17:43.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.776269958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.776270667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:43.212" endtime="20201029 18:17:43.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.776269958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.776270667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:43.530" endtime="20201029 18:17:43.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.540" endtime="20201029 18:17:43.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.209" endtime="20201029 18:17:43.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.208" endtime="20201029 18:17:43.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:43.547" level="INFO">${RESULT} = [{'diff': 7.090000000431473e-07}, {'diff': 6.810000000578853e-07}, {'diff': 7.499999999938112e-07}, {'diff': 7.220000000085491e-07}, {'diff': 6.530000000726233e-07}, {'diff': 7.35999999945669e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:43.543" endtime="20201029 18:17:43.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:43.551" level="INFO">${OVERHEAD} = {'diff': [7.090000000431473e-07, 6.810000000578853e-07, 7.499999999938112e-07, 7.220000000085491e-07, 6.530000000726233e-07, 7.35999999945669e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.21999...</msg>
<status status="PASS" starttime="20201029 18:17:43.548" endtime="20201029 18:17:43.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.556" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:43.555" endtime="20201029 18:17:43.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.559" level="INFO">VALUE: [7.090000000431473e-07, 6.810000000578853e-07, 7.499999999938112e-07, 7.220000000085491e-07, 6.530000000726233e-07, 7.35999999945669e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.219999998975268e-07, 7.360000000566913e-07, 7.35999999945669e-07, 7.220000000085491e-07, 6.799999999751449e-07, 7.369999999173871e-07, 1.0129999998831352e-06, 7.359999998346467e-07, 7.370000001394317e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.500000001048335e-07, 7.500000001048335e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.499999998827889e-07, 7.220000000085491e-07, 7.229999998692449e-07, 7.220000000085491e-07, 7.500000001048335e-07, 7.07999999960407e-07, 7.499999998827889e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.500000001048335e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.359999998346467e-07, 7.220000000085491e-07, 6.800000000861672e-07, 6.939999999122648e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.920000000272154e-07, 7.230000000912895e-07, 7.360000000566913e-07, 6.940000001343094e-07, 7.220000000085491e-07, 7.359999998346467e-07, 6.950000002170498e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.07999999960407e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.230000000912895e-07, 7.499999998827889e-07, 7.230000000912895e-07, 7.370000001394317e-07, 7.500000001048335e-07]</msg>
<status status="PASS" starttime="20201029 18:17:43.557" endtime="20201029 18:17:43.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.553" endtime="20201029 18:17:43.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.182" endtime="20201029 18:17:43.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.181" endtime="20201029 18:17:43.560"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.569" endtime="20201029 18:17:43.580"></status>
</kw>
<msg timestamp="20201029 18:17:43.580" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:43.567" endtime="20201029 18:17:43.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.583" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:43.581" endtime="20201029 18:17:43.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.584" endtime="20201029 18:17:43.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.564" endtime="20201029 18:17:43.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.562" endtime="20201029 18:17:43.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.593" endtime="20201029 18:17:43.905"></status>
</kw>
<msg timestamp="20201029 18:17:43.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.14094975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.140950486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:43.591" endtime="20201029 18:17:43.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.14094975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.140950486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:43.910" endtime="20201029 18:17:43.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.920" endtime="20201029 18:17:43.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.589" endtime="20201029 18:17:43.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.587" endtime="20201029 18:17:43.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:43.927" level="INFO">${RESULT} = [{'diff': 7.359999998346467e-07}, {'diff': 6.950000002170498e-07}, {'diff': 7.220000000085491e-07}, {'diff': 7.220000000085491e-07}, {'diff': 7.07999999960407e-07}, {'diff': 7.220000000085491e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:43.923" endtime="20201029 18:17:43.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:43.933" level="INFO">${OVERHEAD} = {'diff': [7.359999998346467e-07, 6.950000002170498e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.07999999960407e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.36000...</msg>
<status status="PASS" starttime="20201029 18:17:43.928" endtime="20201029 18:17:43.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.937" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:43.936" endtime="20201029 18:17:43.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.939" level="INFO">VALUE: [7.359999998346467e-07, 6.950000002170498e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.07999999960407e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.230000000912895e-07, 7.499999998827889e-07, 7.230000000912895e-07, 7.370000001394317e-07, 7.500000001048335e-07, 1.083000000123846e-06, 7.500000001048335e-07, 7.089999998211027e-07, 7.230000000912895e-07, 7.220000000085491e-07, 7.779999999790732e-07, 7.220000000085491e-07, 6.940000001343094e-07, 7.07999999960407e-07, 7.359999998346467e-07, 7.360000000566913e-07, 7.359999998346467e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.500000001048335e-07, 7.220000000085491e-07, 7.500000001048335e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.230000000912895e-07, 7.07999999960407e-07, 7.220000000085491e-07, 7.360000000566913e-07, 6.530000000726233e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.359999998346467e-07, 7.499999998827889e-07, 7.500000001048335e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.089999998211027e-07, 7.220000000085491e-07, 7.359999998346467e-07, 7.370000001394317e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.230000000912895e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.359999998346467e-07, 6.939999999122648e-07, 6.949999999950052e-07, 6.939999999122648e-07]</msg>
<status status="PASS" starttime="20201029 18:17:43.938" endtime="20201029 18:17:43.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.933" endtime="20201029 18:17:43.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.561" endtime="20201029 18:17:43.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.560" endtime="20201029 18:17:43.941"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.949" endtime="20201029 18:17:43.960"></status>
</kw>
<msg timestamp="20201029 18:17:43.961" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:43.947" endtime="20201029 18:17:43.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.963" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:43.962" endtime="20201029 18:17:43.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.964" endtime="20201029 18:17:43.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.945" endtime="20201029 18:17:43.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.943" endtime="20201029 18:17:43.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.973" endtime="20201029 18:17:44.277"></status>
</kw>
<msg timestamp="20201029 18:17:44.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.508762417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.508763139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:43.972" endtime="20201029 18:17:44.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.508762417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.508763139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:44.282" endtime="20201029 18:17:44.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.292" endtime="20201029 18:17:44.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.969" endtime="20201029 18:17:44.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.967" endtime="20201029 18:17:44.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:44.299" level="INFO">${RESULT} = [{'diff': 7.220000000085491e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.220000000085491e-07}, {'diff': 7.220000000085491e-07}, {'diff': 7.360000000566913e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:17:44.295" endtime="20201029 18:17:44.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:44.305" level="INFO">${OVERHEAD} = {'diff': [7.220000000085491e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.230000000912895e-07, 7.2200...</msg>
<status status="PASS" starttime="20201029 18:17:44.300" endtime="20201029 18:17:44.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.309" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:44.308" endtime="20201029 18:17:44.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.311" level="INFO">VALUE: [7.220000000085491e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.230000000912895e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.359999998346467e-07, 6.939999999122648e-07, 6.949999999950052e-07, 6.939999999122648e-07, 1.0969999999499436e-06, 7.07999999960407e-07, 7.07999999960407e-07, 8.200000001234997e-07, 7.220000000085491e-07, 7.359999998346467e-07, 7.220000000085491e-07, 7.07999999960407e-07, 7.499999998827889e-07, 7.779999999790732e-07, 7.089999998211027e-07, 7.360000000566913e-07, 7.359999998346467e-07, 7.359999998346467e-07, 7.220000000085491e-07, 7.360000000566913e-07, 6.80999999946863e-07, 7.090000000431473e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.07999999960407e-07, 7.229999998692449e-07, 7.080000001824516e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.360000000566913e-07, 6.670000001207654e-07, 7.360000000566913e-07, 7.359999998346467e-07, 7.220000000085491e-07, 7.230000000912895e-07, 7.360000000566913e-07, 7.359999998346467e-07, 7.500000001048335e-07, 7.360000000566913e-07, 7.359999998346467e-07, 7.220000000085491e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.500000001048335e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.359999998346467e-07, 7.230000000912895e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.360000000566913e-07, 7.220000000085491e-07]</msg>
<status status="PASS" starttime="20201029 18:17:44.310" endtime="20201029 18:17:44.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.305" endtime="20201029 18:17:44.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.942" endtime="20201029 18:17:44.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.941" endtime="20201029 18:17:44.313"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.321" endtime="20201029 18:17:44.332"></status>
</kw>
<msg timestamp="20201029 18:17:44.332" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:44.319" endtime="20201029 18:17:44.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.335" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:44.333" endtime="20201029 18:17:44.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.336" endtime="20201029 18:17:44.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.317" endtime="20201029 18:17:44.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.315" endtime="20201029 18:17:44.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.346" endtime="20201029 18:17:44.646"></status>
</kw>
<msg timestamp="20201029 18:17:44.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.8791475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.879148222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:44.344" endtime="20201029 18:17:44.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.8791475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.879148222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:44.651" endtime="20201029 18:17:44.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.661" endtime="20201029 18:17:44.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.341" endtime="20201029 18:17:44.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.339" endtime="20201029 18:17:44.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:44.668" level="INFO">${RESULT} = [{'diff': 7.220000000085491e-07}, {'diff': 7.220000000085491e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.500000001048335e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.220000000085491e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:17:44.665" endtime="20201029 18:17:44.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:44.673" level="INFO">${OVERHEAD} = {'diff': [7.220000000085491e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.500000001048335e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.359999998346467e-07, 7.230000000912895e-07, 7.2200...</msg>
<status status="PASS" starttime="20201029 18:17:44.670" endtime="20201029 18:17:44.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.677" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:44.676" endtime="20201029 18:17:44.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.680" level="INFO">VALUE: [7.220000000085491e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.500000001048335e-07, 7.360000000566913e-07, 7.220000000085491e-07, 7.359999998346467e-07, 7.230000000912895e-07, 7.220000000085491e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.360000000566913e-07, 7.220000000085491e-07, 1.0970000001719882e-06, 7.370000001394317e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.080000004044962e-07, 7.639999997088864e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.499999998827889e-07, 7.220000002305937e-07, 7.219999997865045e-07, 7.370000001394317e-07, 7.499999998827889e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.359999996126021e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.500000003268781e-07, 7.219999997865045e-07, 6.940000001343094e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.499999998827889e-07, 7.219999997865045e-07, 7.220000002305937e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.500000003268781e-07, 6.670000001207654e-07, 7.360000000566913e-07, 7.220000002305937e-07, 6.940000001343094e-07, 7.229999998692449e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.360000000566913e-07]</msg>
<status status="PASS" starttime="20201029 18:17:44.679" endtime="20201029 18:17:44.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.674" endtime="20201029 18:17:44.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.314" endtime="20201029 18:17:44.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.313" endtime="20201029 18:17:44.682"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.690" endtime="20201029 18:17:44.701"></status>
</kw>
<msg timestamp="20201029 18:17:44.701" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:44.689" endtime="20201029 18:17:44.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.704" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:44.702" endtime="20201029 18:17:44.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.705" endtime="20201029 18:17:44.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.686" endtime="20201029 18:17:44.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.684" endtime="20201029 18:17:44.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.714" endtime="20201029 18:17:45.017"></status>
</kw>
<msg timestamp="20201029 18:17:45.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.241040722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.241041444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:44.712" endtime="20201029 18:17:45.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.241040722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.241041444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:45.022" endtime="20201029 18:17:45.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.032" endtime="20201029 18:17:45.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.710" endtime="20201029 18:17:45.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.708" endtime="20201029 18:17:45.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:45.039" level="INFO">${RESULT} = [{'diff': 7.219999997865045e-07}, {'diff': 7.219999997865045e-07}, {'diff': 7.500000003268781e-07}, {'diff': 6.670000001207654e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.220000002305937e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:17:45.035" endtime="20201029 18:17:45.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:45.044" level="INFO">${OVERHEAD} = {'diff': [7.219999997865045e-07, 7.219999997865045e-07, 7.500000003268781e-07, 6.670000001207654e-07, 7.360000000566913e-07, 7.220000002305937e-07, 6.940000001343094e-07, 7.229999998692449e-07, 7.3600...</msg>
<status status="PASS" starttime="20201029 18:17:45.040" endtime="20201029 18:17:45.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.049" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:45.048" endtime="20201029 18:17:45.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.051" level="INFO">VALUE: [7.219999997865045e-07, 7.219999997865045e-07, 7.500000003268781e-07, 6.670000001207654e-07, 7.360000000566913e-07, 7.220000002305937e-07, 6.940000001343094e-07, 7.229999998692449e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.360000000566913e-07, 1.0829999999018014e-06, 7.360000000566913e-07, 7.359999996126021e-07, 7.360000000566913e-07, 7.220000002305937e-07, 6.799999998641226e-07, 7.370000001394317e-07, 7.360000000566913e-07, 7.499999998827889e-07, 7.229999998692449e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.219999997865045e-07, 7.370000001394317e-07, 7.369999996953425e-07, 7.360000000566913e-07, 7.370000001394317e-07, 7.090000000431473e-07, 7.090000000431473e-07, 7.220000002305937e-07, 7.370000001394317e-07, 6.80999999946863e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.220000002305937e-07, 7.769999998963328e-07, 7.359999996126021e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.230000003133341e-07, 7.230000003133341e-07, 7.360000000566913e-07, 7.090000000431473e-07, 6.669999996766762e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.07999999960407e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.500000003268781e-07, 7.360000000566913e-07]</msg>
<status status="PASS" starttime="20201029 18:17:45.050" endtime="20201029 18:17:45.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.045" endtime="20201029 18:17:45.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.682" endtime="20201029 18:17:45.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.682" endtime="20201029 18:17:45.053"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.061" endtime="20201029 18:17:45.072"></status>
</kw>
<msg timestamp="20201029 18:17:45.072" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:45.059" endtime="20201029 18:17:45.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.075" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:45.073" endtime="20201029 18:17:45.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.076" endtime="20201029 18:17:45.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.056" endtime="20201029 18:17:45.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.055" endtime="20201029 18:17:45.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.085" endtime="20201029 18:17:45.403"></status>
</kw>
<msg timestamp="20201029 18:17:45.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.599639014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.59963975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:45.083" endtime="20201029 18:17:45.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.599639014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.59963975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:45.409" endtime="20201029 18:17:45.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.419" endtime="20201029 18:17:45.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.081" endtime="20201029 18:17:45.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.079" endtime="20201029 18:17:45.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:45.429" level="INFO">${RESULT} = [{'diff': 7.360000000566913e-07}, {'diff': 7.090000000431473e-07}, {'diff': 6.669999996766762e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.219999997865045e-07}, {'diff': 7.07999999960407e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:45.423" endtime="20201029 18:17:45.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:45.434" level="INFO">${OVERHEAD} = {'diff': [7.360000000566913e-07, 7.090000000431473e-07, 6.669999996766762e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.07999999960407e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.21999...</msg>
<status status="PASS" starttime="20201029 18:17:45.430" endtime="20201029 18:17:45.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.438" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:45.437" endtime="20201029 18:17:45.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.441" level="INFO">VALUE: [7.360000000566913e-07, 7.090000000431473e-07, 6.669999996766762e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.07999999960407e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.500000003268781e-07, 7.360000000566913e-07, 1.0829999999018014e-06, 8.200000003455443e-07, 7.360000000566913e-07, 7.230000003133341e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.080000004044962e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.369999996953425e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.220000002305937e-07, 7.500000003268781e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.359999996126021e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.07999999960407e-07, 7.500000003268781e-07, 7.499999998827889e-07, 7.220000002305937e-07, 7.779999999790732e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.07999999960407e-07, 7.769999998963328e-07, 7.360000000566913e-07, 7.499999998827889e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.370000001394317e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.229999998692449e-07, 7.360000000566913e-07]</msg>
<status status="PASS" starttime="20201029 18:17:45.439" endtime="20201029 18:17:45.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.435" endtime="20201029 18:17:45.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.053" endtime="20201029 18:17:45.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.053" endtime="20201029 18:17:45.443"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.450" endtime="20201029 18:17:45.462"></status>
</kw>
<msg timestamp="20201029 18:17:45.463" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:45.449" endtime="20201029 18:17:45.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.465" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:45.464" endtime="20201029 18:17:45.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.466" endtime="20201029 18:17:45.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.446" endtime="20201029 18:17:45.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.445" endtime="20201029 18:17:45.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.477" endtime="20201029 18:17:45.783"></status>
</kw>
<msg timestamp="20201029 18:17:45.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.958862972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.958863694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:45.475" endtime="20201029 18:17:45.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.958862972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.958863694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:45.788" endtime="20201029 18:17:45.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.798" endtime="20201029 18:17:45.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.471" endtime="20201029 18:17:45.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.470" endtime="20201029 18:17:45.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:45.805" level="INFO">${RESULT} = [{'diff': 7.220000002305937e-07}, {'diff': 7.07999999960407e-07}, {'diff': 7.769999998963328e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.499999998827889e-07}, {'diff': 7.360000000566913e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:45.802" endtime="20201029 18:17:45.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:45.810" level="INFO">${OVERHEAD} = {'diff': [7.220000002305937e-07, 7.07999999960407e-07, 7.769999998963328e-07, 7.360000000566913e-07, 7.499999998827889e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.37000...</msg>
<status status="PASS" starttime="20201029 18:17:45.806" endtime="20201029 18:17:45.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.815" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:45.813" endtime="20201029 18:17:45.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.818" level="INFO">VALUE: [7.220000002305937e-07, 7.07999999960407e-07, 7.769999998963328e-07, 7.360000000566913e-07, 7.499999998827889e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.370000001394317e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.07999999960407e-07, 7.229999998692449e-07, 7.360000000566913e-07, 1.0970000001719882e-06, 7.500000003268781e-07, 7.499999998827889e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.500000003268781e-07, 7.219999997865045e-07, 7.769999998963328e-07, 7.360000000566913e-07, 7.499999998827889e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.369999996953425e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.230000003133341e-07, 7.07999999960407e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.07999999960407e-07, 7.359999996126021e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.369999996953425e-07, 6.940000001343094e-07]</msg>
<status status="PASS" starttime="20201029 18:17:45.816" endtime="20201029 18:17:45.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.811" endtime="20201029 18:17:45.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.443" endtime="20201029 18:17:45.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.443" endtime="20201029 18:17:45.819"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.827" endtime="20201029 18:17:45.838"></status>
</kw>
<msg timestamp="20201029 18:17:45.839" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:45.825" endtime="20201029 18:17:45.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.841" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:45.840" endtime="20201029 18:17:45.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.842" endtime="20201029 18:17:45.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.823" endtime="20201029 18:17:45.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.821" endtime="20201029 18:17:45.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.851" endtime="20201029 18:17:46.166"></status>
</kw>
<msg timestamp="20201029 18:17:46.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.339788931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.339789667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:45.850" endtime="20201029 18:17:46.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.339788931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.339789667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:46.171" endtime="20201029 18:17:46.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.181" endtime="20201029 18:17:46.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.847" endtime="20201029 18:17:46.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.845" endtime="20201029 18:17:46.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:46.189" level="INFO">${RESULT} = [{'diff': 7.359999996126021e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.229999998692449e-07}, {'diff': 7.220000002305937e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.360000000566913e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:17:46.185" endtime="20201029 18:17:46.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:46.194" level="INFO">${OVERHEAD} = {'diff': [7.359999996126021e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.2200...</msg>
<status status="PASS" starttime="20201029 18:17:46.190" endtime="20201029 18:17:46.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.198" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:46.197" endtime="20201029 18:17:46.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.201" level="INFO">VALUE: [7.359999996126021e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.369999996953425e-07, 6.940000001343094e-07, 1.0420000000621599e-06, 7.500000003268781e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.229999998692449e-07, 6.950000002170498e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.229999998692449e-07, 7.07999999960407e-07, 7.07999999960407e-07, 7.229999998692449e-07, 6.949999997729606e-07, 7.219999997865045e-07, 7.090000000431473e-07, 7.360000000566913e-07, 7.360000000566913e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.370000001394317e-07, 7.219999997865045e-07, 7.500000003268781e-07, 7.360000000566913e-07, 7.359999996126021e-07, 7.090000000431473e-07, 7.370000001394317e-07, 7.230000003133341e-07, 7.359999996126021e-07, 7.219999997865045e-07, 7.359999996126021e-07, 7.07999999960407e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 6.940000001343094e-07, 7.230000003133341e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07]</msg>
<status status="PASS" starttime="20201029 18:17:46.199" endtime="20201029 18:17:46.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.195" endtime="20201029 18:17:46.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.820" endtime="20201029 18:17:46.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.819" endtime="20201029 18:17:46.202"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.210" endtime="20201029 18:17:46.221"></status>
</kw>
<msg timestamp="20201029 18:17:46.222" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:46.209" endtime="20201029 18:17:46.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.224" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:46.223" endtime="20201029 18:17:46.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.225" endtime="20201029 18:17:46.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.206" endtime="20201029 18:17:46.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.204" endtime="20201029 18:17:46.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.234" endtime="20201029 18:17:46.556"></status>
</kw>
<msg timestamp="20201029 18:17:46.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.706423403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.706424125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:46.233" endtime="20201029 18:17:46.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.706423403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.706424125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:46.561" endtime="20201029 18:17:46.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.571" endtime="20201029 18:17:46.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.230" endtime="20201029 18:17:46.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.229" endtime="20201029 18:17:46.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:46.578" level="INFO">${RESULT} = [{'diff': 7.219999997865045e-07}, {'diff': 7.360000000566913e-07}, {'diff': 7.360000000566913e-07}, {'diff': 6.940000001343094e-07}, {'diff': 7.230000003133341e-07}, {'diff': 7.219999997865045e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:17:46.575" endtime="20201029 18:17:46.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:46.583" level="INFO">${OVERHEAD} = {'diff': [7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 6.940000001343094e-07, 7.230000003133341e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.3600...</msg>
<status status="PASS" starttime="20201029 18:17:46.579" endtime="20201029 18:17:46.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.587" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:46.586" endtime="20201029 18:17:46.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.590" level="INFO">VALUE: [7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 6.940000001343094e-07, 7.230000003133341e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.229999998692449e-07, 7.360000000566913e-07, 7.220000002305937e-07, 7.219999997865045e-07, 7.219999997865045e-07, 7.360000000566913e-07, 7.360000000566913e-07, 1.027999999791973e-06, 7.220000002305937e-07, 7.360000005007805e-07, 7.499999998827889e-07, 7.229999994251557e-07, 7.219999993424153e-07, 7.360000005007805e-07, 7.219999993424153e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.780000004231624e-07, 7.499999998827889e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.229999994251557e-07, 7.07999999960407e-07, 7.499999998827889e-07, 7.77999999534984e-07, 7.360000005007805e-07, 7.360000005007805e-07, 6.809999995027738e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.500000007709673e-07, 7.220000002305937e-07, 7.230000003133341e-07, 7.219999993424153e-07, 7.219999993424153e-07, 7.360000005007805e-07, 7.220000002305937e-07, 6.95000000661139e-07, 7.220000002305937e-07, 7.500000007709673e-07, 7.77999999534984e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.220000002305937e-07, 6.940000005783986e-07, 7.360000005007805e-07, 7.07999999960407e-07, 7.229999994251557e-07, 7.359999996126021e-07, 6.809999995027738e-07, 7.360000005007805e-07, 7.07999999960407e-07]</msg>
<status status="PASS" starttime="20201029 18:17:46.588" endtime="20201029 18:17:46.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.584" endtime="20201029 18:17:46.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.203" endtime="20201029 18:17:46.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.203" endtime="20201029 18:17:46.591"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.600" endtime="20201029 18:17:46.611"></status>
</kw>
<msg timestamp="20201029 18:17:46.611" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:46.597" endtime="20201029 18:17:46.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.614" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:46.612" endtime="20201029 18:17:46.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.615" endtime="20201029 18:17:46.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.595" endtime="20201029 18:17:46.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.593" endtime="20201029 18:17:46.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.624" endtime="20201029 18:17:46.933"></status>
</kw>
<msg timestamp="20201029 18:17:46.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.079567125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.079567875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:46.622" endtime="20201029 18:17:46.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.079567125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.079567875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:46.939" endtime="20201029 18:17:46.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.955" endtime="20201029 18:17:46.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.620" endtime="20201029 18:17:46.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.618" endtime="20201029 18:17:46.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:46.962" level="INFO">${RESULT} = [{'diff': 7.500000007709673e-07}, {'diff': 7.77999999534984e-07}, {'diff': 7.220000002305937e-07}, {'diff': 7.359999996126021e-07}, {'diff': 7.359999996126021e-07}, {'diff': 7.220000002305937e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:46.959" endtime="20201029 18:17:46.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:46.968" level="INFO">${OVERHEAD} = {'diff': [7.500000007709673e-07, 7.77999999534984e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.220000002305937e-07, 6.940000005783986e-07, 7.360000005007805e-07, 7.07999...</msg>
<status status="PASS" starttime="20201029 18:17:46.963" endtime="20201029 18:17:46.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.972" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:46.971" endtime="20201029 18:17:46.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.974" level="INFO">VALUE: [7.500000007709673e-07, 7.77999999534984e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.220000002305937e-07, 6.940000005783986e-07, 7.360000005007805e-07, 7.07999999960407e-07, 7.229999994251557e-07, 7.359999996126021e-07, 6.809999995027738e-07, 7.360000005007805e-07, 7.07999999960407e-07, 1.0829999999018014e-06, 7.360000005007805e-07, 7.219999993424153e-07, 7.090000000431473e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.369999996953425e-07, 7.370000005835209e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.07999999960407e-07, 6.809999995027738e-07, 7.219999993424153e-07, 7.220000002305937e-07, 7.07999999960407e-07, 7.090000000431473e-07, 7.369999996953425e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.369999996953425e-07, 7.07999999960407e-07, 7.220000002305937e-07, 7.499999998827889e-07, 6.800000003082118e-07, 7.07999999960407e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.499999998827889e-07, 6.670000001207654e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.77999999534984e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.07999999960407e-07, 7.359999996126021e-07, 6.939999996902202e-07, 7.220000002305937e-07]</msg>
<status status="PASS" starttime="20201029 18:17:46.973" endtime="20201029 18:17:46.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.969" endtime="20201029 18:17:46.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.592" endtime="20201029 18:17:46.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.591" endtime="20201029 18:17:46.976"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.984" endtime="20201029 18:17:46.994"></status>
</kw>
<msg timestamp="20201029 18:17:46.995" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:46.982" endtime="20201029 18:17:46.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.997" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:46.996" endtime="20201029 18:17:46.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.999" endtime="20201029 18:17:47.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.980" endtime="20201029 18:17:47.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.978" endtime="20201029 18:17:47.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.008" endtime="20201029 18:17:47.326"></status>
</kw>
<msg timestamp="20201029 18:17:47.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.458287889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.458288556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:47.006" endtime="20201029 18:17:47.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.458287889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.458288556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:47.331" endtime="20201029 18:17:47.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.341" endtime="20201029 18:17:47.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.004" endtime="20201029 18:17:47.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.002" endtime="20201029 18:17:47.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:47.348" level="INFO">${RESULT} = [{'diff': 6.670000001207654e-07}, {'diff': 7.220000002305937e-07}, {'diff': 7.360000005007805e-07}, {'diff': 7.220000002305937e-07}, {'diff': 7.77999999534984e-07}, {'diff': 7.359999996126021e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:47.344" endtime="20201029 18:17:47.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:47.354" level="INFO">${OVERHEAD} = {'diff': [6.670000001207654e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.77999999534984e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.36000...</msg>
<status status="PASS" starttime="20201029 18:17:47.349" endtime="20201029 18:17:47.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.358" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:47.357" endtime="20201029 18:17:47.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.360" level="INFO">VALUE: [6.670000001207654e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.77999999534984e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.07999999960407e-07, 7.359999996126021e-07, 6.939999996902202e-07, 7.220000002305937e-07, 1.0409999999794195e-06, 7.359999996126021e-07, 6.810000003909522e-07, 7.090000000431473e-07, 7.220000002305937e-07, 7.780000004231624e-07, 7.229999994251557e-07, 7.219999993424153e-07, 7.499999998827889e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.369999996953425e-07, 7.090000000431473e-07, 7.499999998827889e-07, 8.189999993746255e-07, 7.090000000431473e-07, 7.910000006106088e-07, 7.220000002305937e-07, 7.370000005835209e-07, 7.919999998051708e-07, 7.360000005007805e-07, 7.499999998827889e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.229999994251557e-07, 6.810000003909522e-07, 7.499999998827889e-07, 7.080000008485854e-07, 7.369999996953425e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.07999999960407e-07, 7.359999996126021e-07, 7.499999998827889e-07, 7.230000003133341e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.780000004231624e-07, 7.230000003133341e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.229999994251557e-07, 7.370000005835209e-07]</msg>
<status status="PASS" starttime="20201029 18:17:47.359" endtime="20201029 18:17:47.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.354" endtime="20201029 18:17:47.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.977" endtime="20201029 18:17:47.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.976" endtime="20201029 18:17:47.362"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.370" endtime="20201029 18:17:47.381"></status>
</kw>
<msg timestamp="20201029 18:17:47.382" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:47.368" endtime="20201029 18:17:47.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.384" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:47.383" endtime="20201029 18:17:47.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.385" endtime="20201029 18:17:47.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.366" endtime="20201029 18:17:47.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.364" endtime="20201029 18:17:47.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.394" endtime="20201029 18:17:47.710"></status>
</kw>
<msg timestamp="20201029 18:17:47.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.832179361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.832180111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:47.393" endtime="20201029 18:17:47.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.832179361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.832180111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:47.715" endtime="20201029 18:17:47.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.725" endtime="20201029 18:17:47.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.390" endtime="20201029 18:17:47.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.388" endtime="20201029 18:17:47.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:47.732" level="INFO">${RESULT} = [{'diff': 7.499999998827889e-07}, {'diff': 7.230000003133341e-07}, {'diff': 7.220000002305937e-07}, {'diff': 7.220000002305937e-07}, {'diff': 7.780000004231624e-07}, {'diff': 7.230000003133341e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:17:47.729" endtime="20201029 18:17:47.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:47.737" level="INFO">${OVERHEAD} = {'diff': [7.499999998827889e-07, 7.230000003133341e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.780000004231624e-07, 7.230000003133341e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.3599...</msg>
<status status="PASS" starttime="20201029 18:17:47.733" endtime="20201029 18:17:47.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.741" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:47.740" endtime="20201029 18:17:47.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.744" level="INFO">VALUE: [7.499999998827889e-07, 7.230000003133341e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.780000004231624e-07, 7.230000003133341e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.229999994251557e-07, 7.370000005835209e-07, 1.069000000519793e-06, 6.939999996902202e-07, 7.080000008485854e-07, 7.230000003133341e-07, 7.07999999960407e-07, 7.220000002305937e-07, 7.219999993424153e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.07999999960407e-07, 7.220000002305937e-07, 6.940000005783986e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.229999994251557e-07, 6.939999996902202e-07, 7.230000003133341e-07, 7.360000005007805e-07, 7.230000003133341e-07, 6.799999994200334e-07, 7.769999994522436e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.219999993424153e-07, 7.219999993424153e-07, 7.360000005007805e-07, 7.219999993424153e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.07999999960407e-07, 7.360000005007805e-07, 7.370000005835209e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.77000000340422e-07, 7.220000002305937e-07, 7.229999994251557e-07, 7.090000000431473e-07, 7.370000005835209e-07, 7.360000005007805e-07, 7.359999996126021e-07]</msg>
<status status="PASS" starttime="20201029 18:17:47.742" endtime="20201029 18:17:47.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.738" endtime="20201029 18:17:47.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.363" endtime="20201029 18:17:47.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.362" endtime="20201029 18:17:47.745"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.754" endtime="20201029 18:17:47.765"></status>
</kw>
<msg timestamp="20201029 18:17:47.766" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:47.752" endtime="20201029 18:17:47.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.768" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:47.767" endtime="20201029 18:17:47.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.769" endtime="20201029 18:17:47.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.749" endtime="20201029 18:17:47.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.747" endtime="20201029 18:17:47.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.779" endtime="20201029 18:17:48.100"></status>
</kw>
<msg timestamp="20201029 18:17:48.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.206368292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.206369028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:47.777" endtime="20201029 18:17:48.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.206368292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.206369028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:48.105" endtime="20201029 18:17:48.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.115" endtime="20201029 18:17:48.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.775" endtime="20201029 18:17:48.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.773" endtime="20201029 18:17:48.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:48.122" level="INFO">${RESULT} = [{'diff': 7.360000005007805e-07}, {'diff': 7.370000005835209e-07}, {'diff': 7.359999996126021e-07}, {'diff': 7.359999996126021e-07}, {'diff': 7.360000005007805e-07}, {'diff': 7.360000005007805e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:17:48.119" endtime="20201029 18:17:48.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:48.128" level="INFO">${OVERHEAD} = {'diff': [7.360000005007805e-07, 7.370000005835209e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.77000000340422e-07, 7.22000...</msg>
<status status="PASS" starttime="20201029 18:17:48.123" endtime="20201029 18:17:48.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.132" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:48.131" endtime="20201029 18:17:48.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.134" level="INFO">VALUE: [7.360000005007805e-07, 7.370000005835209e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.77000000340422e-07, 7.220000002305937e-07, 7.229999994251557e-07, 7.090000000431473e-07, 7.370000005835209e-07, 7.360000005007805e-07, 7.359999996126021e-07, 1.0970000001719882e-06, 6.799999994200334e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.499999998827889e-07, 7.219999993424153e-07, 7.499999998827889e-07, 7.499999998827889e-07, 7.220000002305937e-07, 7.369999996953425e-07, 7.090000000431473e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.07999999960407e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.369999996953425e-07, 7.360000005007805e-07, 7.230000003133341e-07, 7.360000005007805e-07, 7.219999993424153e-07, 7.499999998827889e-07, 7.359999996126021e-07, 7.090000000431473e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.090000000431473e-07, 7.369999996953425e-07, 7.360000005007805e-07, 6.670000001207654e-07, 6.800000003082118e-07, 7.220000002305937e-07, 7.359999996126021e-07, 6.810000003909522e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.090000000431473e-07, 7.359999996126021e-07, 7.090000000431473e-07, 7.219999993424153e-07, 7.080000008485854e-07, 7.220000002305937e-07, 7.360000005007805e-07, 6.949999997729606e-07, 7.219999993424153e-07, 7.499999998827889e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.499999998827889e-07]</msg>
<status status="PASS" starttime="20201029 18:17:48.133" endtime="20201029 18:17:48.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.129" endtime="20201029 18:17:48.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.746" endtime="20201029 18:17:48.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.745" endtime="20201029 18:17:48.136"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.144" endtime="20201029 18:17:48.155"></status>
</kw>
<msg timestamp="20201029 18:17:48.155" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.142" endtime="20201029 18:17:48.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.158" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.156" endtime="20201029 18:17:48.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.159" endtime="20201029 18:17:48.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.140" endtime="20201029 18:17:48.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.138" endtime="20201029 18:17:48.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.168" endtime="20201029 18:17:48.488"></status>
</kw>
<msg timestamp="20201029 18:17:48.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.57947, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.579470736, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:17:48.166" endtime="20201029 18:17:48.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.57947, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.579470736, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:17:48.493" endtime="20201029 18:17:48.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.503" endtime="20201029 18:17:48.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.164" endtime="20201029 18:17:48.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.162" endtime="20201029 18:17:48.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:48.510" level="INFO">${RESULT} = [{'diff': 7.360000005007805e-07}, {'diff': 7.090000000431473e-07}, {'diff': 7.359999996126021e-07}, {'diff': 7.090000000431473e-07}, {'diff': 7.219999993424153e-07}, {'diff': 7.080000008485854e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:17:48.506" endtime="20201029 18:17:48.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:48.515" level="INFO">${OVERHEAD} = {'diff': [7.360000005007805e-07, 7.090000000431473e-07, 7.359999996126021e-07, 7.090000000431473e-07, 7.219999993424153e-07, 7.080000008485854e-07, 7.220000002305937e-07, 7.360000005007805e-07, 6.9499...</msg>
<status status="PASS" starttime="20201029 18:17:48.511" endtime="20201029 18:17:48.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.519" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:48.518" endtime="20201029 18:17:48.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.522" level="INFO">VALUE: [7.360000005007805e-07, 7.090000000431473e-07, 7.359999996126021e-07, 7.090000000431473e-07, 7.219999993424153e-07, 7.080000008485854e-07, 7.220000002305937e-07, 7.360000005007805e-07, 6.949999997729606e-07, 7.219999993424153e-07, 7.499999998827889e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.499999998827889e-07, 1.0829999999018014e-06, 7.220000002305937e-07, 7.090000000431473e-07, 7.07999999960407e-07, 7.359999996126021e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.780000004231624e-07, 7.220000002305937e-07, 7.370000005835209e-07, 7.360000005007805e-07, 6.949999997729606e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.07999999960407e-07, 7.359999996126021e-07, 7.07999999960407e-07, 7.639999992647972e-07, 7.229999994251557e-07, 7.230000003133341e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.230000003133341e-07, 7.230000003133341e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.369999996953425e-07, 7.359999996126021e-07, 7.370000005835209e-07, 7.07999999960407e-07, 7.220000002305937e-07, 7.499999998827889e-07, 7.360000005007805e-07, 7.230000003133341e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.499999998827889e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.919999998051708e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.499999998827889e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.219999993424153e-07, 7.220000002305937e-07]</msg>
<status status="PASS" starttime="20201029 18:17:48.520" endtime="20201029 18:17:48.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.516" endtime="20201029 18:17:48.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.137" endtime="20201029 18:17:48.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.136" endtime="20201029 18:17:48.524"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.531" endtime="20201029 18:17:48.542"></status>
</kw>
<msg timestamp="20201029 18:17:48.543" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.530" endtime="20201029 18:17:48.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.545" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.544" endtime="20201029 18:17:48.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.546" endtime="20201029 18:17:48.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.527" endtime="20201029 18:17:48.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.526" endtime="20201029 18:17:48.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.557" endtime="20201029 18:17:48.863"></status>
</kw>
<msg timestamp="20201029 18:17:48.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.958699278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.958700014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:48.555" endtime="20201029 18:17:48.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.958699278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.958700014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:48.868" endtime="20201029 18:17:48.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.878" endtime="20201029 18:17:48.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.551" endtime="20201029 18:17:48.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.550" endtime="20201029 18:17:48.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:48.885" level="INFO">${RESULT} = [{'diff': 7.359999996126021e-07}, {'diff': 7.499999998827889e-07}, {'diff': 7.219999993424153e-07}, {'diff': 7.359999996126021e-07}, {'diff': 7.919999998051708e-07}, {'diff': 7.220000002305937e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:17:48.881" endtime="20201029 18:17:48.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:48.890" level="INFO">${OVERHEAD} = {'diff': [7.359999996126021e-07, 7.499999998827889e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.919999998051708e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.4999...</msg>
<status status="PASS" starttime="20201029 18:17:48.886" endtime="20201029 18:17:48.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.894" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:48.893" endtime="20201029 18:17:48.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.897" level="INFO">VALUE: [7.359999996126021e-07, 7.499999998827889e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.919999998051708e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.499999998827889e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.219999993424153e-07, 7.220000002305937e-07, 1.0980000002547285e-06, 7.220000002305937e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.07999999960407e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.07999999960407e-07, 7.219999993424153e-07, 6.800000003082118e-07, 7.219999993424153e-07, 7.07999999960407e-07, 7.359999996126021e-07, 6.670000001207654e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.219999993424153e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.369999996953425e-07, 7.219999993424153e-07, 7.220000002305937e-07, 7.07999999960407e-07, 6.660000000380251e-07, 7.089999991549689e-07, 7.220000002305937e-07, 7.369999996953425e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.369999996953425e-07, 7.220000002305937e-07, 7.219999993424153e-07, 7.229999994251557e-07, 7.359999996126021e-07, 7.230000003133341e-07]</msg>
<status status="PASS" starttime="20201029 18:17:48.895" endtime="20201029 18:17:48.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.890" endtime="20201029 18:17:48.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.524" endtime="20201029 18:17:48.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.524" endtime="20201029 18:17:48.899"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.907" endtime="20201029 18:17:48.918"></status>
</kw>
<msg timestamp="20201029 18:17:48.918" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.905" endtime="20201029 18:17:48.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.922" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.920" endtime="20201029 18:17:48.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.923" endtime="20201029 18:17:48.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.902" endtime="20201029 18:17:48.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.901" endtime="20201029 18:17:48.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.943" endtime="20201029 18:17:49.282"></status>
</kw>
<msg timestamp="20201029 18:17:49.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.338158181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.338158903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:48.941" endtime="20201029 18:17:49.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.338158181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.338158903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:49.293" endtime="20201029 18:17:49.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.317" endtime="20201029 18:17:49.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.930" endtime="20201029 18:17:49.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.928" endtime="20201029 18:17:49.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:49.332" level="INFO">${RESULT} = [{'diff': 7.220000002305937e-07}, {'diff': 7.369999996953425e-07}, {'diff': 7.220000002305937e-07}, {'diff': 7.220000002305937e-07}, {'diff': 7.360000005007805e-07}, {'diff': 7.220000002305937e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:17:49.324" endtime="20201029 18:17:49.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:49.340" level="INFO">${OVERHEAD} = {'diff': [7.220000002305937e-07, 7.369999996953425e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.3699...</msg>
<status status="PASS" starttime="20201029 18:17:49.335" endtime="20201029 18:17:49.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.345" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:49.344" endtime="20201029 18:17:49.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.348" level="INFO">VALUE: [7.220000002305937e-07, 7.369999996953425e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.369999996953425e-07, 7.220000002305937e-07, 7.219999993424153e-07, 7.229999994251557e-07, 7.359999996126021e-07, 7.230000003133341e-07, 1.0829999999018014e-06, 6.660000000380251e-07, 7.220000002305937e-07, 7.499999998827889e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.229999994251557e-07, 6.95000000661139e-07, 7.229999994251557e-07, 7.359999996126021e-07, 7.229999994251557e-07, 7.220000002305937e-07, 6.670000001207654e-07, 6.939999996902202e-07, 7.219999993424153e-07, 7.360000005007805e-07, 7.359999996126021e-07, 7.090000000431473e-07, 7.640000001529756e-07, 7.230000003133341e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.219999993424153e-07, 7.230000003133341e-07, 7.360000005007805e-07, 7.499999998827889e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.229999994251557e-07, 7.220000002305937e-07, 7.229999994251557e-07, 7.220000002305937e-07, 7.07999999960407e-07, 6.660000000380251e-07, 7.77000000340422e-07, 7.230000003133341e-07, 7.359999996126021e-07, 7.359999996126021e-07, 6.800000003082118e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.219999993424153e-07]</msg>
<status status="PASS" starttime="20201029 18:17:49.346" endtime="20201029 18:17:49.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.341" endtime="20201029 18:17:49.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.900" endtime="20201029 18:17:49.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.899" endtime="20201029 18:17:49.349"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.357" endtime="20201029 18:17:49.368"></status>
</kw>
<msg timestamp="20201029 18:17:49.369" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:49.356" endtime="20201029 18:17:49.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.371" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:49.370" endtime="20201029 18:17:49.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.372" endtime="20201029 18:17:49.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.353" endtime="20201029 18:17:49.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.351" endtime="20201029 18:17:49.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.382" endtime="20201029 18:17:49.707"></status>
</kw>
<msg timestamp="20201029 18:17:49.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.704454333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.704455056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:49.381" endtime="20201029 18:17:49.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.704454333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.704455056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:49.713" endtime="20201029 18:17:49.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.723" endtime="20201029 18:17:49.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.378" endtime="20201029 18:17:49.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.376" endtime="20201029 18:17:49.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:49.730" level="INFO">${RESULT} = [{'diff': 7.229999994251557e-07}, {'diff': 7.220000002305937e-07}, {'diff': 7.229999994251557e-07}, {'diff': 7.220000002305937e-07}, {'diff': 7.07999999960407e-07}, {'diff': 6.660000000380251e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:49.726" endtime="20201029 18:17:49.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:49.735" level="INFO">${OVERHEAD} = {'diff': [7.229999994251557e-07, 7.220000002305937e-07, 7.229999994251557e-07, 7.220000002305937e-07, 7.07999999960407e-07, 6.660000000380251e-07, 7.77000000340422e-07, 7.230000003133341e-07, 7.359999...</msg>
<status status="PASS" starttime="20201029 18:17:49.731" endtime="20201029 18:17:49.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.739" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:49.738" endtime="20201029 18:17:49.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.742" level="INFO">VALUE: [7.229999994251557e-07, 7.220000002305937e-07, 7.229999994251557e-07, 7.220000002305937e-07, 7.07999999960407e-07, 6.660000000380251e-07, 7.77000000340422e-07, 7.230000003133341e-07, 7.359999996126021e-07, 7.359999996126021e-07, 6.800000003082118e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.219999993424153e-07, 1.13900000009437e-06, 7.230000003133341e-07, 7.359999996126021e-07, 7.229999994251557e-07, 7.07999999960407e-07, 7.359999996126021e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.360000005007805e-07, 7.359999996126021e-07, 6.800000003082118e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.07999999960407e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.07999999960407e-07, 7.499999998827889e-07, 7.499999998827889e-07, 6.390000004685703e-07, 7.220000002305937e-07, 7.230000003133341e-07, 7.360000005007805e-07, 7.230000003133341e-07, 7.360000005007805e-07, 7.220000002305937e-07, 7.07999999960407e-07, 7.359999996126021e-07, 6.95000000661139e-07, 7.360000005007805e-07, 6.939999996902202e-07, 7.219999993424153e-07, 7.219999993424153e-07, 7.359999996126021e-07, 6.939999996902202e-07, 7.230000003133341e-07, 7.370000005835209e-07, 7.370000005835209e-07, 7.220000002305937e-07, 7.220000002305937e-07, 7.360000005007805e-07, 7.229999994251557e-07, 7.220000002305937e-07, 7.359999996126021e-07, 7.230000003133341e-07, 7.360000005007805e-07, 7.359999996126021e-07]</msg>
<status status="PASS" starttime="20201029 18:17:49.740" endtime="20201029 18:17:49.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.736" endtime="20201029 18:17:49.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.350" endtime="20201029 18:17:49.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.349" endtime="20201029 18:17:49.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.074" endtime="20201029 18:17:49.743"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:42.005" endtime="20201029 18:17:49.744" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:49.751" endtime="20201029 18:17:49.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.750" endtime="20201029 18:17:49.771"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.788" endtime="20201029 18:17:49.803"></status>
</kw>
<msg timestamp="20201029 18:17:49.803" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:49.786" endtime="20201029 18:17:49.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.806" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:49.805" endtime="20201029 18:17:49.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.810" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:49.807" endtime="20201029 18:17:49.810"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:49.783" endtime="20201029 18:17:49.811"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:49.781" endtime="20201029 18:17:49.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.779" endtime="20201029 18:17:49.812"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:49.816" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:49.815" endtime="20201029 18:17:49.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.813" endtime="20201029 18:17:49.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.779" endtime="20201029 18:17:49.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.778" endtime="20201029 18:17:49.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.818" endtime="20201029 18:17:49.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.774" endtime="20201029 18:17:49.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.772" endtime="20201029 18:17:49.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.748" endtime="20201029 18:17:49.821"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.830" endtime="20201029 18:17:49.848"></status>
</kw>
<msg timestamp="20201029 18:17:49.849" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:49.828" endtime="20201029 18:17:49.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.851" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:49.850" endtime="20201029 18:17:49.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.853" endtime="20201029 18:17:49.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.825" endtime="20201029 18:17:49.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.823" endtime="20201029 18:17:49.855"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.857" endtime="20201029 18:17:49.859"></status>
</kw>
<msg timestamp="20201029 18:17:49.860" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:17:49.856" endtime="20201029 18:17:49.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.864" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:17:49.863" endtime="20201029 18:17:49.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.867" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:17:49.865" endtime="20201029 18:17:49.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.861" endtime="20201029 18:17:49.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.872" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:17:49.871" endtime="20201029 18:17:49.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.874" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:17:49.873" endtime="20201029 18:17:49.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.869" endtime="20201029 18:17:49.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.882" endtime="20201029 18:17:50.167"></status>
</kw>
<msg timestamp="20201029 18:17:50.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070856778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070861181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:49.881" endtime="20201029 18:17:50.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070856778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070861181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:50.171" endtime="20201029 18:17:50.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.180" endtime="20201029 18:17:50.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.878" endtime="20201029 18:17:50.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.876" endtime="20201029 18:17:50.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:50.187" level="INFO">${RESULT} = [{'diff': 4.403000000000046e-06}, {'diff': 3.7229999999971453e-06}, {'diff': 3.319000000001626e-06}, {'diff': 3.0139999999956313e-06}, {'diff': 3.2919999999880822e-06}, {'diff': 2.9860000000103692e-06...</msg>
<status status="PASS" starttime="20201029 18:17:50.183" endtime="20201029 18:17:50.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:50.191" level="INFO">${OVERHEAD} = {'diff': [4.403000000000046e-06, 3.7229999999971453e-06, 3.319000000001626e-06, 3.0139999999956313e-06, 3.2919999999880822e-06, 2.9860000000103692e-06, 3.3049999999951174e-06, 3.0000000000030003e-06, ...</msg>
<status status="PASS" starttime="20201029 18:17:50.188" endtime="20201029 18:17:50.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.197" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 18:17:50.195" endtime="20201029 18:17:50.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.199" level="INFO">VALUE: [4.403000000000046e-06, 3.7229999999971453e-06, 3.319000000001626e-06, 3.0139999999956313e-06, 3.2919999999880822e-06, 2.9860000000103692e-06, 3.3049999999951174e-06, 3.0000000000030003e-06, 3.3200000000011e-06, 2.9859999999964915e-06, 3.305999999994591e-06, 3.0000000000030003e-06, 3.3189999999877484e-06, 3.0000000000030003e-06, 3.2770000000098554e-06, 2.9860000000103692e-06, 3.3200000000011e-06, 2.9719999999899827e-06, 3.3200000000011e-06, 2.9859999999964915e-06, 3.3049999999951174e-06, 2.9859999999964915e-06, 3.333999999993731e-06, 2.9860000000103692e-06, 3.305999999994591e-06, 2.9859999999964915e-06, 3.305000000008995e-06, 2.9860000000103692e-06, 3.306000000008469e-06, 3.0000000000030003e-06, 3.29200000000196e-06, 3.0000000000030003e-06, 3.3200000000011e-06, 2.9859999999964915e-06, 3.3189999999877484e-06, 2.9440000000047206e-06, 3.3200000000011e-06, 2.9579999999973516e-06, 3.319000000001626e-06, 2.9859999999964915e-06, 3.333999999993731e-06, 3.0000000000030003e-06, 3.305999999994591e-06, 2.9029999999985456e-06, 3.306000000008469e-06, 2.986999999995965e-06, 3.306000000008469e-06, 2.9859999999964915e-06, 3.3200000000011e-06, 2.9719999999899827e-06]</msg>
<status status="PASS" starttime="20201029 18:17:50.198" endtime="20201029 18:17:50.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.192" endtime="20201029 18:17:50.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.821" endtime="20201029 18:17:50.201"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:49.746" endtime="20201029 18:17:50.201" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:50.208" endtime="20201029 18:17:50.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.207" endtime="20201029 18:17:50.228"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.242" endtime="20201029 18:17:50.256"></status>
</kw>
<msg timestamp="20201029 18:17:50.257" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:50.240" endtime="20201029 18:17:50.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.262" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:50.260" endtime="20201029 18:17:50.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.266" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:50.264" endtime="20201029 18:17:50.267"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:50.238" endtime="20201029 18:17:50.268"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:50.235" endtime="20201029 18:17:50.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.234" endtime="20201029 18:17:50.268"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:50.273" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:50.272" endtime="20201029 18:17:50.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.269" endtime="20201029 18:17:50.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.233" endtime="20201029 18:17:50.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.232" endtime="20201029 18:17:50.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.275" endtime="20201029 18:17:50.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.231" endtime="20201029 18:17:50.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.229" endtime="20201029 18:17:50.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.205" endtime="20201029 18:17:50.281"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.292" endtime="20201029 18:17:50.317"></status>
</kw>
<msg timestamp="20201029 18:17:50.318" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:50.289" endtime="20201029 18:17:50.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.321" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:50.319" endtime="20201029 18:17:50.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.323" endtime="20201029 18:17:50.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.286" endtime="20201029 18:17:50.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.283" endtime="20201029 18:17:50.325"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.328" endtime="20201029 18:17:50.329"></status>
</kw>
<msg timestamp="20201029 18:17:50.330" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:17:50.326" endtime="20201029 18:17:50.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.334" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:17:50.333" endtime="20201029 18:17:50.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.336" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:17:50.335" endtime="20201029 18:17:50.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.330" endtime="20201029 18:17:50.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.341" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:17:50.340" endtime="20201029 18:17:50.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.343" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:17:50.342" endtime="20201029 18:17:50.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.337" endtime="20201029 18:17:50.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.350" endtime="20201029 18:17:50.637"></status>
</kw>
<msg timestamp="20201029 18:17:50.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076041583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076044625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:50.349" endtime="20201029 18:17:50.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076041583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076044625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:50.642" endtime="20201029 18:17:50.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.649" endtime="20201029 18:17:50.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.346" endtime="20201029 18:17:50.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.344" endtime="20201029 18:17:50.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:50.656" level="INFO">${RESULT} = [{'diff': 3.042000000008649e-06}, {'diff': 4.445000000005694e-06}, {'diff': 4.4580000000127296e-06}, {'diff': 4.277999999996451e-06}, {'diff': 4.360999999994397e-06}, {'diff': 4.347000000001766e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:17:50.653" endtime="20201029 18:17:50.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:50.661" level="INFO">${OVERHEAD} = {'diff': [3.042000000008649e-06, 4.445000000005694e-06, 4.4580000000127296e-06, 4.277999999996451e-06, 4.360999999994397e-06, 4.347000000001766e-06, 4.360999999994397e-06, 4.360999999994397e-06, 4.347...</msg>
<status status="PASS" starttime="20201029 18:17:50.657" endtime="20201029 18:17:50.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.666" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 18:17:50.665" endtime="20201029 18:17:50.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.668" level="INFO">VALUE: [3.042000000008649e-06, 4.445000000005694e-06, 4.4580000000127296e-06, 4.277999999996451e-06, 4.360999999994397e-06, 4.347000000001766e-06, 4.360999999994397e-06, 4.360999999994397e-06, 4.347000000001766e-06, 4.319000000002626e-06, 4.361000000008275e-06, 4.333000000009135e-06, 4.332999999995257e-06, 4.3200000000021e-06, 4.305000000009995e-06, 4.347000000001766e-06, 4.360999999994397e-06, 4.2770000000108555e-06, 4.375000000000906e-06, 4.305999999995591e-06, 4.360999999994397e-06, 4.347000000001766e-06, 4.361000000008275e-06, 4.34800000000124e-06, 4.361000000008275e-06, 4.3200000000021e-06, 4.361000000008275e-06, 4.347000000001766e-06, 4.416999999992677e-06, 4.319999999988222e-06, 4.360999999994397e-06, 4.347000000001766e-06, 4.360999999994397e-06, 4.347000000001766e-06, 4.360999999994397e-06, 4.347000000001766e-06, 4.360999999994397e-06, 4.319000000002626e-06, 4.346999999987888e-06, 4.347999999987362e-06, 4.361000000008275e-06, 4.29200000000296e-06, 4.347000000001766e-06, 4.319000000002626e-06, 4.361000000008275e-06, 4.332999999995257e-06, 4.3620000000077486e-06, 4.319000000002626e-06, 4.361999999993871e-06, 4.347000000001766e-06]</msg>
<status status="PASS" starttime="20201029 18:17:50.667" endtime="20201029 18:17:50.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.662" endtime="20201029 18:17:50.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.281" endtime="20201029 18:17:50.669"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:50.203" endtime="20201029 18:17:50.670" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:50.677" endtime="20201029 18:17:50.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.675" endtime="20201029 18:17:50.697"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.710" endtime="20201029 18:17:50.723"></status>
</kw>
<msg timestamp="20201029 18:17:50.724" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:50.708" endtime="20201029 18:17:50.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.727" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:50.725" endtime="20201029 18:17:50.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.730" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:50.728" endtime="20201029 18:17:50.730"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:50.705" endtime="20201029 18:17:50.731"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:50.703" endtime="20201029 18:17:50.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.702" endtime="20201029 18:17:50.731"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:50.735" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:50.734" endtime="20201029 18:17:50.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.732" endtime="20201029 18:17:50.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.701" endtime="20201029 18:17:50.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.700" endtime="20201029 18:17:50.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.738" endtime="20201029 18:17:50.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.699" endtime="20201029 18:17:50.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.697" endtime="20201029 18:17:50.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.674" endtime="20201029 18:17:50.741"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.751" endtime="20201029 18:17:50.791"></status>
</kw>
<msg timestamp="20201029 18:17:50.792" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:50.748" endtime="20201029 18:17:50.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.797" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:50.794" endtime="20201029 18:17:50.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.799" endtime="20201029 18:17:50.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.745" endtime="20201029 18:17:50.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.743" endtime="20201029 18:17:50.804"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.809" endtime="20201029 18:17:50.812"></status>
</kw>
<msg timestamp="20201029 18:17:50.813" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:17:50.806" endtime="20201029 18:17:50.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.824" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:17:50.822" endtime="20201029 18:17:50.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.829" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:17:50.827" endtime="20201029 18:17:50.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.817" endtime="20201029 18:17:50.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.839" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:17:50.837" endtime="20201029 18:17:50.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:50.844" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:17:50.842" endtime="20201029 18:17:50.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.832" endtime="20201029 18:17:50.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:50.854" endtime="20201029 18:17:51.142"></status>
</kw>
<msg timestamp="20201029 18:17:51.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067119889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067124333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:50.853" endtime="20201029 18:17:51.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067119889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067124333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:51.146" endtime="20201029 18:17:51.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.154" endtime="20201029 18:17:51.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.850" endtime="20201029 18:17:51.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.847" endtime="20201029 18:17:51.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:51.161" level="INFO">${RESULT} = [{'diff': 4.443999999992343e-06}, {'diff': 6.513999999999132e-06}, {'diff': 6.597000000010955e-06}, {'diff': 6.431000000001186e-06}, {'diff': 6.403000000002046e-06}, {'diff': 6.4019999999886945e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:17:51.157" endtime="20201029 18:17:51.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:51.165" level="INFO">${OVERHEAD} = {'diff': [4.443999999992343e-06, 6.513999999999132e-06, 6.597000000010955e-06, 6.431000000001186e-06, 6.403000000002046e-06, 6.4019999999886945e-06, 6.459000000000326e-06, 6.443999999994343e-06, 6.459...</msg>
<status status="PASS" starttime="20201029 18:17:51.162" endtime="20201029 18:17:51.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.170" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 18:17:51.169" endtime="20201029 18:17:51.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.172" level="INFO">VALUE: [4.443999999992343e-06, 6.513999999999132e-06, 6.597000000010955e-06, 6.431000000001186e-06, 6.403000000002046e-06, 6.4019999999886945e-06, 6.459000000000326e-06, 6.443999999994343e-06, 6.459000000000326e-06, 6.444000000008221e-06, 6.444000000008221e-06, 6.430000000001712e-06, 6.458000000000852e-06, 6.416999999994677e-06, 6.458000000000852e-06, 6.431000000001186e-06, 6.430000000001712e-06, 6.347999999989362e-06, 6.472999999992957e-06, 6.416999999994677e-06, 6.416000000009081e-06, 6.347000000003766e-06, 6.443999999994343e-06, 6.402000000002572e-06, 6.416999999994677e-06, 6.333000000011135e-06, 6.459000000000326e-06, 6.417000000008555e-06, 6.415999999995203e-06, 6.347000000003766e-06, 6.458000000000852e-06, 6.416000000009081e-06, 6.416000000009081e-06, 6.360999999996397e-06, 6.444999999993817e-06, 6.431000000001186e-06, 6.34800000000324e-06, 6.4019999999886945e-06, 6.415999999995203e-06, 6.431000000001186e-06, 6.415999999995203e-06, 6.375000000002906e-06, 6.472000000007361e-06, 6.430000000001712e-06, 6.431000000001186e-06, 6.361000000010275e-06, 6.459000000000326e-06, 6.443999999994343e-06, 6.388999999995537e-06, 6.3329999999972575e-06]</msg>
<status status="PASS" starttime="20201029 18:17:51.171" endtime="20201029 18:17:51.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.166" endtime="20201029 18:17:51.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.741" endtime="20201029 18:17:51.174"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:50.671" endtime="20201029 18:17:51.174" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:51.181" endtime="20201029 18:17:51.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.180" endtime="20201029 18:17:51.201"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.215" endtime="20201029 18:17:51.231"></status>
</kw>
<msg timestamp="20201029 18:17:51.231" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:51.213" endtime="20201029 18:17:51.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.234" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:51.233" endtime="20201029 18:17:51.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.238" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:51.236" endtime="20201029 18:17:51.238"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:51.210" endtime="20201029 18:17:51.239"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:51.207" endtime="20201029 18:17:51.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.206" endtime="20201029 18:17:51.240"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:51.248" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:51.247" endtime="20201029 18:17:51.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.243" endtime="20201029 18:17:51.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.205" endtime="20201029 18:17:51.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.204" endtime="20201029 18:17:51.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.253" endtime="20201029 18:17:51.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.203" endtime="20201029 18:17:51.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.202" endtime="20201029 18:17:51.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.178" endtime="20201029 18:17:51.256"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.264" endtime="20201029 18:17:51.283"></status>
</kw>
<msg timestamp="20201029 18:17:51.284" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:51.263" endtime="20201029 18:17:51.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.286" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:51.285" endtime="20201029 18:17:51.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.287" endtime="20201029 18:17:51.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.260" endtime="20201029 18:17:51.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.258" endtime="20201029 18:17:51.290"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.292" endtime="20201029 18:17:51.294"></status>
</kw>
<msg timestamp="20201029 18:17:51.294" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:17:51.291" endtime="20201029 18:17:51.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.298" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:17:51.297" endtime="20201029 18:17:51.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.300" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:17:51.299" endtime="20201029 18:17:51.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.295" endtime="20201029 18:17:51.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.305" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:17:51.304" endtime="20201029 18:17:51.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.307" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:17:51.306" endtime="20201029 18:17:51.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.301" endtime="20201029 18:17:51.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.316" endtime="20201029 18:17:51.608"></status>
</kw>
<msg timestamp="20201029 18:17:51.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075870889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075874444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:51.314" endtime="20201029 18:17:51.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075870889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075874444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:51.612" endtime="20201029 18:17:51.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.621" endtime="20201029 18:17:51.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.310" endtime="20201029 18:17:51.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.308" endtime="20201029 18:17:51.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:51.627" level="INFO">${RESULT} = [{'diff': 3.5550000000023063e-06}, {'diff': 3.069999999993911e-06}, {'diff': 3.0550000000018063e-06}, {'diff': 3.041999999994771e-06}, {'diff': 3.05600000000128e-06}, {'diff': 3.0409999999952975e-06},...</msg>
<status status="PASS" starttime="20201029 18:17:51.624" endtime="20201029 18:17:51.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:51.631" level="INFO">${OVERHEAD} = {'diff': [3.5550000000023063e-06, 3.069999999993911e-06, 3.0550000000018063e-06, 3.041999999994771e-06, 3.05600000000128e-06, 3.0409999999952975e-06, 3.0550000000018063e-06, 3.111000000000086e-06, 3.0...</msg>
<status status="PASS" starttime="20201029 18:17:51.628" endtime="20201029 18:17:51.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.636" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 18:17:51.635" endtime="20201029 18:17:51.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.638" level="INFO">VALUE: [3.5550000000023063e-06, 3.069999999993911e-06, 3.0550000000018063e-06, 3.041999999994771e-06, 3.05600000000128e-06, 3.0409999999952975e-06, 3.0550000000018063e-06, 3.111000000000086e-06, 3.05600000000128e-06, 3.042000000008649e-06, 3.111000000000086e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.02800000000214e-06, 3.0000000000030003e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.096999999993577e-06, 3.0409999999952975e-06, 3.05600000000128e-06, 3.041999999994771e-06, 3.069000000008315e-06, 3.0550000000018063e-06, 3.111000000000086e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.055999999987402e-06, 3.02800000000214e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.069000000008315e-06, 3.0000000000030003e-06, 3.0550000000018063e-06, 3.111000000000086e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.0550000000018063e-06, 3.0129999999961576e-06, 3.0550000000018063e-06, 3.0549999999879285e-06, 3.069999999993911e-06, 3.041999999994771e-06, 3.05600000000128e-06, 3.042000000008649e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.041999999994771e-06, 3.0139999999956313e-06, 3.05600000000128e-06]</msg>
<status status="PASS" starttime="20201029 18:17:51.637" endtime="20201029 18:17:51.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.632" endtime="20201029 18:17:51.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.256" endtime="20201029 18:17:51.640"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:51.176" endtime="20201029 18:17:51.640" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:51.647" endtime="20201029 18:17:51.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.645" endtime="20201029 18:17:51.667"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.681" endtime="20201029 18:17:51.694"></status>
</kw>
<msg timestamp="20201029 18:17:51.695" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:51.679" endtime="20201029 18:17:51.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.698" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:51.696" endtime="20201029 18:17:51.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.701" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:51.699" endtime="20201029 18:17:51.701"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:51.676" endtime="20201029 18:17:51.702"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:51.674" endtime="20201029 18:17:51.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.673" endtime="20201029 18:17:51.703"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:51.706" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:51.706" endtime="20201029 18:17:51.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.704" endtime="20201029 18:17:51.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.672" endtime="20201029 18:17:51.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.671" endtime="20201029 18:17:51.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.708" endtime="20201029 18:17:51.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.670" endtime="20201029 18:17:51.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.668" endtime="20201029 18:17:51.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.644" endtime="20201029 18:17:51.711"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.719" endtime="20201029 18:17:51.746"></status>
</kw>
<msg timestamp="20201029 18:17:51.746" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:51.718" endtime="20201029 18:17:51.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.749" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:51.748" endtime="20201029 18:17:51.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.750" endtime="20201029 18:17:51.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.715" endtime="20201029 18:17:51.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.713" endtime="20201029 18:17:51.753"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.755" endtime="20201029 18:17:51.757"></status>
</kw>
<msg timestamp="20201029 18:17:51.758" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:17:51.753" endtime="20201029 18:17:51.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.762" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:17:51.761" endtime="20201029 18:17:51.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.764" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:17:51.763" endtime="20201029 18:17:51.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.759" endtime="20201029 18:17:51.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.769" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:17:51.768" endtime="20201029 18:17:51.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.771" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:17:51.770" endtime="20201029 18:17:51.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.765" endtime="20201029 18:17:51.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.778" endtime="20201029 18:17:52.065"></status>
</kw>
<msg timestamp="20201029 18:17:52.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065413069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065417694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:51.776" endtime="20201029 18:17:52.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065413069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065417694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:52.069" endtime="20201029 18:17:52.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.077" endtime="20201029 18:17:52.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.774" endtime="20201029 18:17:52.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.772" endtime="20201029 18:17:52.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:52.084" level="INFO">${RESULT} = [{'diff': 4.624999999994217e-06}, {'diff': 4.403000000000046e-06}, {'diff': 4.333999999994731e-06}, {'diff': 4.305000000009995e-06}, {'diff': 4.26400000000382e-06}, {'diff': 4.319000000002626e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:52.081" endtime="20201029 18:17:52.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:52.089" level="INFO">${OVERHEAD} = {'diff': [4.624999999994217e-06, 4.403000000000046e-06, 4.333999999994731e-06, 4.305000000009995e-06, 4.26400000000382e-06, 4.319000000002626e-06, 4.347000000001766e-06, 4.333999999994731e-06, 4.33300...</msg>
<status status="PASS" starttime="20201029 18:17:52.085" endtime="20201029 18:17:52.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.093" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 18:17:52.092" endtime="20201029 18:17:52.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.096" level="INFO">VALUE: [4.624999999994217e-06, 4.403000000000046e-06, 4.333999999994731e-06, 4.305000000009995e-06, 4.26400000000382e-06, 4.319000000002626e-06, 4.347000000001766e-06, 4.333999999994731e-06, 4.333000000009135e-06, 4.347000000001766e-06, 4.332999999995257e-06, 4.334000000008609e-06, 4.3200000000021e-06, 4.277999999996451e-06, 4.332999999995257e-06, 4.333999999994731e-06, 4.347000000001766e-06, 4.346999999987888e-06, 4.34800000000124e-06, 4.333000000009135e-06, 4.306000000009469e-06, 4.3200000000021e-06, 4.334000000008609e-06, 4.277999999996451e-06, 4.347000000001766e-06, 4.403000000000046e-06, 4.319000000002626e-06, 4.278000000010329e-06, 4.277999999996451e-06, 4.29200000000296e-06, 4.375000000000906e-06, 4.332999999995257e-06, 4.3189999999887485e-06, 4.291999999989082e-06, 4.333000000009135e-06, 4.332999999995257e-06, 4.334000000008609e-06, 4.291999999989082e-06, 4.319000000002626e-06, 4.305999999995591e-06, 4.3200000000021e-06, 4.278000000010329e-06, 4.334000000008609e-06, 4.347000000001766e-06, 4.333000000009135e-06, 4.3200000000021e-06, 4.3200000000021e-06, 4.319000000002626e-06, 4.4170000000065546e-06, 4.387999999994063e-06]</msg>
<status status="PASS" starttime="20201029 18:17:52.094" endtime="20201029 18:17:52.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.090" endtime="20201029 18:17:52.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.711" endtime="20201029 18:17:52.097"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:51.642" endtime="20201029 18:17:52.098" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:52.109" endtime="20201029 18:17:52.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.108" endtime="20201029 18:17:52.129"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.145" endtime="20201029 18:17:52.160"></status>
</kw>
<msg timestamp="20201029 18:17:52.161" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:52.143" endtime="20201029 18:17:52.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.164" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:52.162" endtime="20201029 18:17:52.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.170" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:52.167" endtime="20201029 18:17:52.170"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:52.139" endtime="20201029 18:17:52.171"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:52.137" endtime="20201029 18:17:52.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.135" endtime="20201029 18:17:52.174"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:52.179" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:52.178" endtime="20201029 18:17:52.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.175" endtime="20201029 18:17:52.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.134" endtime="20201029 18:17:52.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.133" endtime="20201029 18:17:52.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.181" endtime="20201029 18:17:52.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.132" endtime="20201029 18:17:52.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.130" endtime="20201029 18:17:52.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.106" endtime="20201029 18:17:52.185"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.197" endtime="20201029 18:17:52.236"></status>
</kw>
<msg timestamp="20201029 18:17:52.236" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:52.195" endtime="20201029 18:17:52.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.239" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:52.237" endtime="20201029 18:17:52.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.240" endtime="20201029 18:17:52.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.192" endtime="20201029 18:17:52.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.187" endtime="20201029 18:17:52.242"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.244" endtime="20201029 18:17:52.246"></status>
</kw>
<msg timestamp="20201029 18:17:52.247" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:17:52.243" endtime="20201029 18:17:52.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.251" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:17:52.250" endtime="20201029 18:17:52.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.253" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:17:52.252" endtime="20201029 18:17:52.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.247" endtime="20201029 18:17:52.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.257" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:17:52.256" endtime="20201029 18:17:52.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.259" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:17:52.258" endtime="20201029 18:17:52.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.254" endtime="20201029 18:17:52.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.270" endtime="20201029 18:17:52.574"></status>
</kw>
<msg timestamp="20201029 18:17:52.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080227264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080232569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:52.266" endtime="20201029 18:17:52.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080227264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080232569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:52.579" endtime="20201029 18:17:52.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.587" endtime="20201029 18:17:52.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.262" endtime="20201029 18:17:52.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.261" endtime="20201029 18:17:52.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:52.594" level="INFO">${RESULT} = [{'diff': 5.304999999997118e-06}, {'diff': 5.111000000002086e-06}, {'diff': 5.054999999989929e-06}, {'diff': 5.05600000000328e-06}, {'diff': 5.0139999999976315e-06}, {'diff': 4.971999999991983e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:17:52.590" endtime="20201029 18:17:52.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:52.599" level="INFO">${OVERHEAD} = {'diff': [5.304999999997118e-06, 5.111000000002086e-06, 5.054999999989929e-06, 5.05600000000328e-06, 5.0139999999976315e-06, 4.971999999991983e-06, 5.0279999999902625e-06, 5.083000000002946e-06, 5.041...</msg>
<status status="PASS" starttime="20201029 18:17:52.595" endtime="20201029 18:17:52.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.603" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 18:17:52.602" endtime="20201029 18:17:52.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.606" level="INFO">VALUE: [5.304999999997118e-06, 5.111000000002086e-06, 5.054999999989929e-06, 5.05600000000328e-06, 5.0139999999976315e-06, 4.971999999991983e-06, 5.0279999999902625e-06, 5.083000000002946e-06, 5.041999999996771e-06, 5.041999999996771e-06, 5.0410000000111754e-06, 5.012999999998158e-06, 5.012999999998158e-06, 5.041999999996771e-06, 5.02800000000414e-06, 5.054999999989929e-06, 5.040999999997298e-06, 5.0139999999976315e-06, 5.042000000010649e-06, 5.0139999999976315e-06, 5.041999999996771e-06, 5.012999999998158e-06, 5.0279999999902625e-06, 5.05600000000328e-06, 5.02800000000414e-06, 5.05600000000328e-06, 4.999999999991123e-06, 5.0279999999902625e-06, 5.0689999999964375e-06, 4.971999999991983e-06, 5.0139999999976315e-06, 5.040999999997298e-06, 4.9729999999914565e-06, 5.0139999999976315e-06, 5.0689999999964375e-06, 5.042000000010649e-06, 5.041999999996771e-06, 5.041999999996771e-06, 5.069999999995911e-06, 5.027000000004667e-06, 5.041999999996771e-06, 5.040999999997298e-06, 5.05600000000328e-06, 5.0550000000038064e-06, 5.012999999998158e-06, 5.054999999989929e-06, 5.02800000000414e-06, 5.041999999996771e-06, 5.055999999989402e-06, 4.999999999991123e-06]</msg>
<status status="PASS" starttime="20201029 18:17:52.604" endtime="20201029 18:17:52.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.600" endtime="20201029 18:17:52.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.185" endtime="20201029 18:17:52.607"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:52.104" endtime="20201029 18:17:52.608" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:52.614" endtime="20201029 18:17:52.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.613" endtime="20201029 18:17:52.634"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.647" endtime="20201029 18:17:52.661"></status>
</kw>
<msg timestamp="20201029 18:17:52.662" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:52.646" endtime="20201029 18:17:52.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.664" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:52.663" endtime="20201029 18:17:52.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.668" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:52.665" endtime="20201029 18:17:52.669"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:52.643" endtime="20201029 18:17:52.669"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:52.641" endtime="20201029 18:17:52.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.640" endtime="20201029 18:17:52.670"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:52.674" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:52.673" endtime="20201029 18:17:52.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.671" endtime="20201029 18:17:52.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.639" endtime="20201029 18:17:52.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.638" endtime="20201029 18:17:52.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:52.676" endtime="20201029 18:17:52.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.637" endtime="20201029 18:17:52.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.635" endtime="20201029 18:17:52.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.612" endtime="20201029 18:17:52.678"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:17:52.682" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:17:52.690" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:17:53.962" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:17:52.681" endtime="20201029 18:17:53.963"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.965" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:17:53.964" endtime="20201029 18:17:53.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:52.679" endtime="20201029 18:17:53.966"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:53.970" endtime="20201029 18:17:53.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.968" endtime="20201029 18:17:53.990"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.999" endtime="20201029 18:17:54.006"></status>
</kw>
<msg timestamp="20201029 18:17:54.007" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:53.997" endtime="20201029 18:17:54.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.009" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:54.008" endtime="20201029 18:17:54.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.010" endtime="20201029 18:17:54.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.994" endtime="20201029 18:17:54.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.992" endtime="20201029 18:17:54.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.020" endtime="20201029 18:17:54.302"></status>
</kw>
<msg timestamp="20201029 18:17:54.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018293194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018297889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:54.018" endtime="20201029 18:17:54.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018293194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018297889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:54.306" endtime="20201029 18:17:54.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.315" endtime="20201029 18:17:54.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.015" endtime="20201029 18:17:54.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.014" endtime="20201029 18:17:54.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:54.322" level="INFO">${PHILIP_RES} = [{'diff': 4.695000000002475e-06}, {'diff': 3.625000000000156e-06}, {'diff': 3.597000000001016e-06}, {'diff': 3.625000000000156e-06}, {'diff': 3.611000000000586e-06}, {'diff': 3.611000000000586e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:17:54.318" endtime="20201029 18:17:54.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:54.327" level="INFO">${RESULT} = {'diff': [4.695000000002475e-06, 3.625000000000156e-06, 3.597000000001016e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.6110...</msg>
<status status="PASS" starttime="20201029 18:17:54.323" endtime="20201029 18:17:54.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.332" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:54.331" endtime="20201029 18:17:54.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.334" level="INFO">VALUE: [4.695000000002475e-06, 3.625000000000156e-06, 3.597000000001016e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.5689999999984068e-06, 3.6109999999971165e-06, 3.6109999999971165e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.5980000000004897e-06, 3.5559999999983105e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.653000000002765e-06, 3.5699999999978804e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.6109999999971165e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.583000000001446e-06, 3.625000000000156e-06, 3.611000000000586e-06, 3.5969999999975466e-06, 3.625000000000156e-06, 3.6109999999971165e-06, 3.625000000000156e-06, 3.611000000000586e-06]</msg>
<status status="PASS" starttime="20201029 18:17:54.333" endtime="20201029 18:17:54.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.328" endtime="20201029 18:17:54.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.991" endtime="20201029 18:17:54.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.968" endtime="20201029 18:17:54.337"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:54.339" endtime="20201029 18:17:54.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.338" endtime="20201029 18:17:54.359"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.367" endtime="20201029 18:17:54.376"></status>
</kw>
<msg timestamp="20201029 18:17:54.377" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:54.366" endtime="20201029 18:17:54.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.379" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:54.378" endtime="20201029 18:17:54.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.381" endtime="20201029 18:17:54.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.363" endtime="20201029 18:17:54.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.361" endtime="20201029 18:17:54.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.390" endtime="20201029 18:17:54.697"></status>
</kw>
<msg timestamp="20201029 18:17:54.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017687264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017694167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:54.388" endtime="20201029 18:17:54.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017687264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017694167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:54.701" endtime="20201029 18:17:54.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.710" endtime="20201029 18:17:54.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.385" endtime="20201029 18:17:54.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.384" endtime="20201029 18:17:54.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:54.717" level="INFO">${PHILIP_RES} = [{'diff': 6.9029999999990765e-06}, {'diff': 6.458000000000852e-06}, {'diff': 6.4729999999998955e-06}, {'diff': 6.459000000000326e-06}, {'diff': 6.430000000001712e-06}, {'diff': 6.459000000000326e-06},...</msg>
<status status="PASS" starttime="20201029 18:17:54.714" endtime="20201029 18:17:54.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:54.721" level="INFO">${RESULT} = {'diff': [6.9029999999990765e-06, 6.458000000000852e-06, 6.4729999999998955e-06, 6.459000000000326e-06, 6.430000000001712e-06, 6.459000000000326e-06, 6.472000000000422e-06, 6.485999999999992e-06, 6.45...</msg>
<status status="PASS" starttime="20201029 18:17:54.718" endtime="20201029 18:17:54.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.725" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:54.724" endtime="20201029 18:17:54.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.728" level="INFO">VALUE: [6.9029999999990765e-06, 6.458000000000852e-06, 6.4729999999998955e-06, 6.459000000000326e-06, 6.430000000001712e-06, 6.459000000000326e-06, 6.472000000000422e-06, 6.485999999999992e-06, 6.4579999999973825e-06, 6.472000000000422e-06, 6.485999999999992e-06, 6.4579999999973825e-06, 6.499999999999562e-06, 6.458000000000852e-06, 6.459000000000326e-06, 6.485999999999992e-06, 6.459000000000326e-06, 6.459000000000326e-06, 6.514000000002601e-06, 6.4579999999973825e-06, 6.458000000000852e-06, 6.513999999999132e-06, 6.458000000000852e-06, 6.443999999997813e-06, 6.540999999998798e-06, 6.458000000000852e-06, 6.459000000000326e-06, 6.541999999998271e-06, 6.459000000000326e-06, 6.459000000000326e-06, 6.500000000003031e-06, 6.4579999999973825e-06, 6.444000000001282e-06, 6.472000000000422e-06, 6.471999999996952e-06, 6.472000000000422e-06, 6.472000000000422e-06, 6.458000000000852e-06, 6.473000000003365e-06, 6.445000000000756e-06, 6.445000000000756e-06, 6.459000000000326e-06, 6.500000000003031e-06, 6.458000000000852e-06, 6.458000000000852e-06, 6.514000000002601e-06, 6.4579999999973825e-06, 6.458000000000852e-06, 6.513999999999132e-06, 6.458000000000852e-06]</msg>
<status status="PASS" starttime="20201029 18:17:54.726" endtime="20201029 18:17:54.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.722" endtime="20201029 18:17:54.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.360" endtime="20201029 18:17:54.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.337" endtime="20201029 18:17:54.730"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:54.732" endtime="20201029 18:17:54.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.730" endtime="20201029 18:17:54.752"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.761" endtime="20201029 18:17:54.768"></status>
</kw>
<msg timestamp="20201029 18:17:54.769" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:54.758" endtime="20201029 18:17:54.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.771" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:54.770" endtime="20201029 18:17:54.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.772" endtime="20201029 18:17:54.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.756" endtime="20201029 18:17:54.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.754" endtime="20201029 18:17:54.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.782" endtime="20201029 18:17:55.068"></status>
</kw>
<msg timestamp="20201029 18:17:55.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018638639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018646944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:54.780" endtime="20201029 18:17:55.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018638639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018646944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:55.072" endtime="20201029 18:17:55.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.080" endtime="20201029 18:17:55.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.777" endtime="20201029 18:17:55.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.776" endtime="20201029 18:17:55.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:55.087" level="INFO">${PHILIP_RES} = [{'diff': 8.305000000000118e-06}, {'diff': 7.929999999999743e-06}, {'diff': 7.916999999999647e-06}, {'diff': 7.930999999999216e-06}, {'diff': 7.903000000000077e-06}, {'diff': 7.930999999999216e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:17:55.084" endtime="20201029 18:17:55.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:55.092" level="INFO">${RESULT} = {'diff': [8.305000000000118e-06, 7.929999999999743e-06, 7.916999999999647e-06, 7.930999999999216e-06, 7.903000000000077e-06, 7.930999999999216e-06, 7.929999999999743e-06, 7.903000000000077e-06, 7.9309...</msg>
<status status="PASS" starttime="20201029 18:17:55.088" endtime="20201029 18:17:55.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.096" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:55.095" endtime="20201029 18:17:55.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.099" level="INFO">VALUE: [8.305000000000118e-06, 7.929999999999743e-06, 7.916999999999647e-06, 7.930999999999216e-06, 7.903000000000077e-06, 7.930999999999216e-06, 7.929999999999743e-06, 7.903000000000077e-06, 7.930999999999216e-06, 7.929999999999743e-06, 7.944999999998786e-06, 7.916999999999647e-06, 7.929999999999743e-06, 7.930999999999216e-06, 7.916000000000173e-06, 7.930999999999216e-06, 7.930999999999216e-06, 7.943999999999313e-06, 7.903000000000077e-06, 7.958000000002352e-06, 7.929999999999743e-06, 7.916999999999647e-06, 7.929999999999743e-06, 7.889000000000507e-06, 7.916999999999647e-06, 7.916000000000173e-06, 7.903000000000077e-06, 7.916000000000173e-06, 7.916999999999647e-06, 7.931000000002686e-06, 8.000000000001062e-06, 7.930999999999216e-06, 7.916999999999647e-06, 7.875000000000937e-06, 7.930999999999216e-06, 7.916000000000173e-06, 7.916999999999647e-06, 7.903000000000077e-06, 7.916000000000173e-06, 7.916999999999647e-06, 7.916999999999647e-06, 7.929999999999743e-06, 7.917000000003116e-06, 7.943999999999313e-06, 7.916999999999647e-06, 7.943999999999313e-06, 7.929999999999743e-06, 7.931000000002686e-06, 7.929999999999743e-06, 7.916999999999647e-06]</msg>
<status status="PASS" starttime="20201029 18:17:55.098" endtime="20201029 18:17:55.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.092" endtime="20201029 18:17:55.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.752" endtime="20201029 18:17:55.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.730" endtime="20201029 18:17:55.101"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:55.103" endtime="20201029 18:17:55.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.102" endtime="20201029 18:17:55.123"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.131" endtime="20201029 18:17:55.139"></status>
</kw>
<msg timestamp="20201029 18:17:55.140" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.130" endtime="20201029 18:17:55.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.142" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.141" endtime="20201029 18:17:55.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.143" endtime="20201029 18:17:55.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.127" endtime="20201029 18:17:55.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.125" endtime="20201029 18:17:55.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.152" endtime="20201029 18:17:55.446"></status>
</kw>
<msg timestamp="20201029 18:17:55.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017387125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017396986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:55.151" endtime="20201029 18:17:55.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017387125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017396986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:55.455" endtime="20201029 18:17:55.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.477" endtime="20201029 18:17:55.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.148" endtime="20201029 18:17:55.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.146" endtime="20201029 18:17:55.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:55.496" level="INFO">${PHILIP_RES} = [{'diff': 9.860999999999898e-06}, {'diff': 9.401999999998634e-06}, {'diff': 9.415999999998204e-06}, {'diff': 9.429999999997773e-06}, {'diff': 9.416000000001673e-06}, {'diff': 9.416000000001673e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:17:55.488" endtime="20201029 18:17:55.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:55.504" level="INFO">${RESULT} = {'diff': [9.860999999999898e-06, 9.401999999998634e-06, 9.415999999998204e-06, 9.429999999997773e-06, 9.416000000001673e-06, 9.416000000001673e-06, 9.402000000002103e-06, 9.471999999999953e-06, 9.4159...</msg>
<status status="PASS" starttime="20201029 18:17:55.499" endtime="20201029 18:17:55.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.510" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:55.508" endtime="20201029 18:17:55.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.513" level="INFO">VALUE: [9.860999999999898e-06, 9.401999999998634e-06, 9.415999999998204e-06, 9.429999999997773e-06, 9.416000000001673e-06, 9.416000000001673e-06, 9.402000000002103e-06, 9.471999999999953e-06, 9.415999999998204e-06, 9.430000000001243e-06, 9.416000000001673e-06, 9.416000000001673e-06, 9.403000000001577e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.403000000001577e-06, 9.431000000000717e-06, 9.417000000001147e-06, 9.417000000001147e-06, 9.402999999998107e-06, 9.417000000001147e-06, 9.431000000000717e-06, 9.403000000001577e-06, 9.416999999997677e-06, 9.416999999997677e-06, 9.402999999998107e-06, 9.403000000001577e-06, 9.417000000001147e-06, 9.403000000001577e-06, 9.417000000001147e-06, 9.402999999998107e-06, 9.403000000001577e-06, 9.403000000001577e-06, 9.445000000000286e-06, 9.374999999998967e-06, 9.402999999998107e-06, 9.403000000001577e-06, 9.430000000001243e-06, 9.430000000001243e-06, 9.430000000001243e-06, 9.402999999998107e-06, 9.415999999998204e-06, 9.415999999998204e-06, 9.402000000002103e-06, 9.387999999999064e-06, 9.415999999998204e-06, 9.429999999997773e-06, 9.416000000001673e-06, 9.387999999999064e-06, 9.403000000001577e-06]</msg>
<status status="PASS" starttime="20201029 18:17:55.511" endtime="20201029 18:17:55.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.505" endtime="20201029 18:17:55.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.124" endtime="20201029 18:17:55.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.101" endtime="20201029 18:17:55.515"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:55.518" endtime="20201029 18:17:55.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.516" endtime="20201029 18:17:55.539"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.556" endtime="20201029 18:17:55.566"></status>
</kw>
<msg timestamp="20201029 18:17:55.567" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.553" endtime="20201029 18:17:55.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.572" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.569" endtime="20201029 18:17:55.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.574" endtime="20201029 18:17:55.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.548" endtime="20201029 18:17:55.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.543" endtime="20201029 18:17:55.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.591" endtime="20201029 18:17:55.878"></status>
</kw>
<msg timestamp="20201029 18:17:55.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028288944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028300319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:55.589" endtime="20201029 18:17:55.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028288944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028300319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:55.882" endtime="20201029 18:17:55.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.891" endtime="20201029 18:17:55.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.584" endtime="20201029 18:17:55.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.580" endtime="20201029 18:17:55.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:55.899" level="INFO">${PHILIP_RES} = [{'diff': 1.1375000000000968e-05}, {'diff': 1.0958000000001883e-05}, {'diff': 1.0902999999999607e-05}, {'diff': 1.0931000000002217e-05}, {'diff': 1.0945000000001787e-05}, {'diff': 1.0929999999999274e-...</msg>
<status status="PASS" starttime="20201029 18:17:55.895" endtime="20201029 18:17:55.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:55.903" level="INFO">${RESULT} = {'diff': [1.1375000000000968e-05, 1.0958000000001883e-05, 1.0902999999999607e-05, 1.0931000000002217e-05, 1.0945000000001787e-05, 1.0929999999999274e-05, 1.0958000000001883e-05, 1.0930999999998747e-05...</msg>
<status status="PASS" starttime="20201029 18:17:55.900" endtime="20201029 18:17:55.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.907" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:55.906" endtime="20201029 18:17:55.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.910" level="INFO">VALUE: [1.1375000000000968e-05, 1.0958000000001883e-05, 1.0902999999999607e-05, 1.0931000000002217e-05, 1.0945000000001787e-05, 1.0929999999999274e-05, 1.0958000000001883e-05, 1.0930999999998747e-05, 1.0930999999998747e-05, 1.0944000000002313e-05, 1.0943999999998844e-05, 1.0945000000001787e-05, 1.0930999999998747e-05, 1.0915999999999704e-05, 1.0945000000001787e-05, 1.0944999999998317e-05, 1.0929999999999274e-05, 1.0944000000002313e-05, 1.0916999999999177e-05, 1.0945000000001787e-05, 1.0929999999999274e-05, 1.0944999999998317e-05, 1.0916999999999177e-05, 1.0929999999999274e-05, 1.0915999999999704e-05, 1.0945000000001787e-05, 1.0944999999998317e-05, 1.0944000000002313e-05, 1.0944999999998317e-05, 1.0931000000002217e-05, 1.0916999999999177e-05, 1.0902000000000134e-05, 1.0931000000002217e-05, 1.0931000000002217e-05, 1.0929999999999274e-05, 1.0875000000000468e-05, 1.0944999999998317e-05, 1.0929999999999274e-05, 1.0944000000002313e-05, 1.0957999999998413e-05, 1.0945000000001787e-05, 1.0929999999999274e-05, 1.0929999999999274e-05, 1.0931000000002217e-05, 1.0985999999997553e-05, 1.0958000000001883e-05, 1.0931000000002217e-05, 1.0986000000001023e-05, 1.0930000000002743e-05, 1.0929999999999274e-05]</msg>
<status status="PASS" starttime="20201029 18:17:55.908" endtime="20201029 18:17:55.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.904" endtime="20201029 18:17:55.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.541" endtime="20201029 18:17:55.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.515" endtime="20201029 18:17:55.911"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:55.914" endtime="20201029 18:17:55.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.912" endtime="20201029 18:17:55.934"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.942" endtime="20201029 18:17:55.950"></status>
</kw>
<msg timestamp="20201029 18:17:55.951" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.941" endtime="20201029 18:17:55.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.953" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.952" endtime="20201029 18:17:55.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.954" endtime="20201029 18:17:55.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.938" endtime="20201029 18:17:55.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.936" endtime="20201029 18:17:55.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.964" endtime="20201029 18:17:56.250"></status>
</kw>
<msg timestamp="20201029 18:17:56.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017737194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017750139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:55.963" endtime="20201029 18:17:56.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017737194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017750139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:56.255" endtime="20201029 18:17:56.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.263" endtime="20201029 18:17:56.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.960" endtime="20201029 18:17:56.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.958" endtime="20201029 18:17:56.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:56.270" level="INFO">${PHILIP_RES} = [{'diff': 1.2945000000000317e-05}, {'diff': 1.2485999999999053e-05}, {'diff': 1.2473000000002427e-05}, {'diff': 1.2471999999999483e-05}, {'diff': 1.2471999999999483e-05}, {'diff': 1.2471999999999483e-...</msg>
<status status="PASS" starttime="20201029 18:17:56.267" endtime="20201029 18:17:56.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:56.274" level="INFO">${RESULT} = {'diff': [1.2945000000000317e-05, 1.2485999999999053e-05, 1.2473000000002427e-05, 1.2471999999999483e-05, 1.2471999999999483e-05, 1.2471999999999483e-05, 1.2444999999999817e-05, 1.2485999999999053e-05...</msg>
<status status="PASS" starttime="20201029 18:17:56.271" endtime="20201029 18:17:56.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.280" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:56.279" endtime="20201029 18:17:56.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.283" level="INFO">VALUE: [1.2945000000000317e-05, 1.2485999999999053e-05, 1.2473000000002427e-05, 1.2471999999999483e-05, 1.2471999999999483e-05, 1.2471999999999483e-05, 1.2444999999999817e-05, 1.2485999999999053e-05, 1.2457999999999914e-05, 1.2485999999999053e-05, 1.251299999999872e-05, 1.2486000000002523e-05, 1.2486000000002523e-05, 1.2499999999998623e-05, 1.2486999999998527e-05, 1.2500000000002093e-05, 1.2486000000002523e-05, 1.2485999999999053e-05, 1.2499999999998623e-05, 1.2485999999999053e-05, 1.2486000000002523e-05, 1.2485999999999053e-05, 1.2486999999998527e-05, 1.2499999999998623e-05, 1.2486000000002523e-05, 1.2471999999999483e-05, 1.2457999999999914e-05, 1.2485999999999053e-05, 1.2500000000002093e-05, 1.2486000000002523e-05, 1.2471999999999483e-05, 1.2472999999998957e-05, 1.2471999999999483e-05, 1.2471999999999483e-05, 1.2514000000001663e-05, 1.2431000000000247e-05, 1.2485999999999053e-05, 1.2500000000002093e-05, 1.2472000000002953e-05, 1.2486999999998527e-05, 1.2485999999999053e-05, 1.2429999999997304e-05, 1.2457999999999914e-05, 1.2458999999999387e-05, 1.2485999999999053e-05, 1.2499999999998623e-05, 1.2485999999999053e-05, 1.2485999999999053e-05, 1.2485999999999053e-05, 1.2485999999999053e-05]</msg>
<status status="PASS" starttime="20201029 18:17:56.281" endtime="20201029 18:17:56.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.275" endtime="20201029 18:17:56.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.935" endtime="20201029 18:17:56.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.912" endtime="20201029 18:17:56.286"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:56.289" endtime="20201029 18:17:56.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.287" endtime="20201029 18:17:56.310"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.318" endtime="20201029 18:17:56.326"></status>
</kw>
<msg timestamp="20201029 18:17:56.327" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.316" endtime="20201029 18:17:56.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.330" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.328" endtime="20201029 18:17:56.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.332" endtime="20201029 18:17:56.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.313" endtime="20201029 18:17:56.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.312" endtime="20201029 18:17:56.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.341" endtime="20201029 18:17:56.627"></status>
</kw>
<msg timestamp="20201029 18:17:56.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017716736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017731264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:56.340" endtime="20201029 18:17:56.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017716736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017731264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:56.631" endtime="20201029 18:17:56.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.640" endtime="20201029 18:17:56.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.337" endtime="20201029 18:17:56.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.335" endtime="20201029 18:17:56.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:56.646" level="INFO">${PHILIP_RES} = [{'diff': 1.4527999999999763e-05}, {'diff': 1.4083000000001539e-05}, {'diff': 1.4083000000001539e-05}, {'diff': 1.404099999999936e-05}, {'diff': 1.408299999999807e-05}, {'diff': 1.4070000000001442e-05...</msg>
<status status="PASS" starttime="20201029 18:17:56.643" endtime="20201029 18:17:56.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:56.651" level="INFO">${RESULT} = {'diff': [1.4527999999999763e-05, 1.4083000000001539e-05, 1.4083000000001539e-05, 1.404099999999936e-05, 1.408299999999807e-05, 1.4070000000001442e-05, 1.4069000000001969e-05, 1.4069999999997973e-05, ...</msg>
<status status="PASS" starttime="20201029 18:17:56.647" endtime="20201029 18:17:56.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.656" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:56.655" endtime="20201029 18:17:56.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.658" level="INFO">VALUE: [1.4527999999999763e-05, 1.4083000000001539e-05, 1.4083000000001539e-05, 1.404099999999936e-05, 1.408299999999807e-05, 1.4070000000001442e-05, 1.4069000000001969e-05, 1.4069999999997973e-05, 1.4083999999997543e-05, 1.4084000000001012e-05, 1.4125000000000248e-05, 1.4070000000001442e-05, 1.4069999999997973e-05, 1.4084000000001012e-05, 1.4083000000001539e-05, 1.4083000000001539e-05, 1.405499999999893e-05, 1.4125000000000248e-05, 1.40689999999985e-05, 1.4013999999999693e-05, 1.4083000000001539e-05, 1.4138999999999818e-05, 1.40689999999985e-05, 1.402699999999979e-05, 1.4097000000001109e-05, 1.40689999999985e-05, 1.4069999999997973e-05, 1.4138999999999818e-05, 1.4070000000001442e-05, 1.4056000000001873e-05, 1.4084000000001012e-05, 1.4111000000000679e-05, 1.4083000000001539e-05, 1.4056000000001873e-05, 1.4069000000001969e-05, 1.40689999999985e-05, 1.40689999999985e-05, 1.4041000000002829e-05, 1.4069000000001969e-05, 1.40689999999985e-05, 1.401300000000022e-05, 1.4097000000001109e-05, 1.4069000000001969e-05, 1.4083000000001539e-05, 1.4069999999997973e-05, 1.4055999999998403e-05, 1.4070000000001442e-05, 1.4070000000001442e-05, 1.4084000000001012e-05, 1.4083999999997543e-05]</msg>
<status status="PASS" starttime="20201029 18:17:56.657" endtime="20201029 18:17:56.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.652" endtime="20201029 18:17:56.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.310" endtime="20201029 18:17:56.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.286" endtime="20201029 18:17:56.660"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:56.662" endtime="20201029 18:17:56.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.660" endtime="20201029 18:17:56.682"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.690" endtime="20201029 18:17:56.699"></status>
</kw>
<msg timestamp="20201029 18:17:56.700" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.688" endtime="20201029 18:17:56.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.702" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.701" endtime="20201029 18:17:56.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.703" endtime="20201029 18:17:56.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.686" endtime="20201029 18:17:56.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.684" endtime="20201029 18:17:56.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.712" endtime="20201029 18:17:57.002"></status>
</kw>
<msg timestamp="20201029 18:17:57.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017521306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017537417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:56.710" endtime="20201029 18:17:57.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017521306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017537417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:57.006" endtime="20201029 18:17:57.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.015" endtime="20201029 18:17:57.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.708" endtime="20201029 18:17:57.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.706" endtime="20201029 18:17:57.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:57.021" level="INFO">${PHILIP_RES} = [{'diff': 1.611099999999921e-05}, {'diff': 1.5666000000000985e-05}, {'diff': 1.5694999999999598e-05}, {'diff': 1.5694000000000125e-05}, {'diff': 1.565300000000089e-05}, {'diff': 1.565299999999742e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:57.018" endtime="20201029 18:17:57.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:57.025" level="INFO">${RESULT} = {'diff': [1.611099999999921e-05, 1.5666000000000985e-05, 1.5694999999999598e-05, 1.5694000000000125e-05, 1.565300000000089e-05, 1.565299999999742e-05, 1.5652000000001415e-05, 1.5694999999999598e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:17:57.022" endtime="20201029 18:17:57.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.030" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:57.029" endtime="20201029 18:17:57.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.032" level="INFO">VALUE: [1.611099999999921e-05, 1.5666000000000985e-05, 1.5694999999999598e-05, 1.5694000000000125e-05, 1.565300000000089e-05, 1.565299999999742e-05, 1.5652000000001415e-05, 1.5694999999999598e-05, 1.5680000000000555e-05, 1.566700000000046e-05, 1.566700000000046e-05, 1.5694000000000125e-05, 1.5694999999999598e-05, 1.5666000000000985e-05, 1.566700000000046e-05, 1.5707999999999694e-05, 1.566700000000046e-05, 1.565300000000089e-05, 1.5721999999999264e-05, 1.566700000000046e-05, 1.5666000000000985e-05, 1.566700000000046e-05, 1.5666000000000985e-05, 1.5681000000000028e-05, 1.566700000000046e-05, 1.566700000000046e-05, 1.566700000000046e-05, 1.5652000000001415e-05, 1.5681000000000028e-05, 1.5666000000000985e-05, 1.566700000000046e-05, 1.5680000000000555e-05, 1.5707999999999694e-05, 1.5721999999999264e-05, 1.5665999999997515e-05, 1.563899999999785e-05, 1.5665999999997515e-05, 1.566700000000046e-05, 1.5584000000002513e-05, 1.5680000000000555e-05, 1.561100000000218e-05, 1.5680000000000555e-05, 1.5694999999999598e-05, 1.5652000000001415e-05, 1.565300000000089e-05, 1.566700000000046e-05, 1.563900000000132e-05, 1.5681000000000028e-05, 1.5680000000000555e-05, 1.5721999999999264e-05]</msg>
<status status="PASS" starttime="20201029 18:17:57.031" endtime="20201029 18:17:57.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.026" endtime="20201029 18:17:57.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.682" endtime="20201029 18:17:57.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.660" endtime="20201029 18:17:57.034"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:57.036" endtime="20201029 18:17:57.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.035" endtime="20201029 18:17:57.056"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.064" endtime="20201029 18:17:57.074"></status>
</kw>
<msg timestamp="20201029 18:17:57.074" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.062" endtime="20201029 18:17:57.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.076" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.075" endtime="20201029 18:17:57.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.078" endtime="20201029 18:17:57.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.060" endtime="20201029 18:17:57.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.058" endtime="20201029 18:17:57.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.088" endtime="20201029 18:17:57.373"></status>
</kw>
<msg timestamp="20201029 18:17:57.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017375542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017393292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:57.086" endtime="20201029 18:17:57.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017375542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017393292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:57.377" endtime="20201029 18:17:57.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.386" endtime="20201029 18:17:57.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.083" endtime="20201029 18:17:57.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.082" endtime="20201029 18:17:57.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:57.392" level="INFO">${PHILIP_RES} = [{'diff': 1.7750000000000404e-05}, {'diff': 1.731900000000175e-05}, {'diff': 1.7320000000001223e-05}, {'diff': 1.7222000000000764e-05}, {'diff': 1.7291999999998614e-05}, {'diff': 1.7320000000001223e-0...</msg>
<status status="PASS" starttime="20201029 18:17:57.389" endtime="20201029 18:17:57.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:57.396" level="INFO">${RESULT} = {'diff': [1.7750000000000404e-05, 1.731900000000175e-05, 1.7320000000001223e-05, 1.7222000000000764e-05, 1.7291999999998614e-05, 1.7320000000001223e-05, 1.7306000000001653e-05, 1.7292000000002083e-05,...</msg>
<status status="PASS" starttime="20201029 18:17:57.393" endtime="20201029 18:17:57.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.400" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:57.399" endtime="20201029 18:17:57.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.403" level="INFO">VALUE: [1.7750000000000404e-05, 1.731900000000175e-05, 1.7320000000001223e-05, 1.7222000000000764e-05, 1.7291999999998614e-05, 1.7320000000001223e-05, 1.7306000000001653e-05, 1.7292000000002083e-05, 1.7305999999998184e-05, 1.733299999999785e-05, 1.731899999999828e-05, 1.731899999999828e-05, 1.730499999999871e-05, 1.731900000000175e-05, 1.734699999999742e-05, 1.7292000000002083e-05, 1.7388000000000126e-05, 1.7348000000000363e-05, 1.7306000000001653e-05, 1.7249999999999904e-05, 1.7278000000002514e-05, 1.7305999999998184e-05, 1.7319999999997754e-05, 1.7319999999997754e-05, 1.731899999999828e-05, 1.730499999999871e-05, 1.730500000000218e-05, 1.734700000000089e-05, 1.730500000000218e-05, 1.731900000000175e-05, 1.730500000000218e-05, 1.731899999999828e-05, 1.730499999999871e-05, 1.7305999999998184e-05, 1.7305999999998184e-05, 1.7305999999998184e-05, 1.7305999999998184e-05, 1.7291999999998614e-05, 1.7249999999999904e-05, 1.7306000000001653e-05, 1.7306000000001653e-05, 1.731900000000175e-05, 1.730500000000218e-05, 1.731899999999828e-05, 1.737500000000003e-05, 1.730499999999871e-05, 1.7320000000001223e-05, 1.731899999999828e-05, 1.7291999999998614e-05, 1.7306000000001653e-05]</msg>
<status status="PASS" starttime="20201029 18:17:57.402" endtime="20201029 18:17:57.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.397" endtime="20201029 18:17:57.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.056" endtime="20201029 18:17:57.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.034" endtime="20201029 18:17:57.405"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:57.408" endtime="20201029 18:17:57.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.406" endtime="20201029 18:17:57.428"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.436" endtime="20201029 18:17:57.446"></status>
</kw>
<msg timestamp="20201029 18:17:57.446" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.434" endtime="20201029 18:17:57.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.449" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.447" endtime="20201029 18:17:57.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.450" endtime="20201029 18:17:57.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.431" endtime="20201029 18:17:57.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.430" endtime="20201029 18:17:57.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.466" endtime="20201029 18:17:57.751"></status>
</kw>
<msg timestamp="20201029 18:17:57.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017520042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017539486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:57.464" endtime="20201029 18:17:57.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017520042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017539486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:57.756" endtime="20201029 18:17:57.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.764" endtime="20201029 18:17:57.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.462" endtime="20201029 18:17:57.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.453" endtime="20201029 18:17:57.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:57.771" level="INFO">${PHILIP_RES} = [{'diff': 1.9444000000000405e-05}, {'diff': 1.895899999999895e-05}, {'diff': 1.8972000000002515e-05}, {'diff': 1.8971999999999045e-05}, {'diff': 1.8972000000002515e-05}, {'diff': 1.8986000000002085e-0...</msg>
<status status="PASS" starttime="20201029 18:17:57.767" endtime="20201029 18:17:57.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:57.775" level="INFO">${RESULT} = {'diff': [1.9444000000000405e-05, 1.895899999999895e-05, 1.8972000000002515e-05, 1.8971999999999045e-05, 1.8972000000002515e-05, 1.8986000000002085e-05, 1.8971999999999045e-05, 1.895900000000242e-05, ...</msg>
<status status="PASS" starttime="20201029 18:17:57.771" endtime="20201029 18:17:57.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.780" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:57.779" endtime="20201029 18:17:57.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.782" level="INFO">VALUE: [1.9444000000000405e-05, 1.895899999999895e-05, 1.8972000000002515e-05, 1.8971999999999045e-05, 1.8972000000002515e-05, 1.8986000000002085e-05, 1.8971999999999045e-05, 1.895900000000242e-05, 1.8987000000001558e-05, 1.897299999999852e-05, 1.8986000000002085e-05, 1.887499999999806e-05, 1.895899999999895e-05, 1.894499999999938e-05, 1.8971999999999045e-05, 1.8958000000002945e-05, 1.8985999999998615e-05, 1.8971999999999045e-05, 1.893099999999981e-05, 1.8957999999999475e-05, 1.8972000000002515e-05, 1.9000000000001654e-05, 1.8971999999999045e-05, 1.8972000000002515e-05, 1.890300000000067e-05, 1.8971999999999045e-05, 1.8971999999999045e-05, 1.8971999999999045e-05, 1.8972000000002515e-05, 1.8971999999999045e-05, 1.8957999999999475e-05, 1.8972000000002515e-05, 1.8957999999999475e-05, 1.8930000000000335e-05, 1.8986000000002085e-05, 1.887500000000153e-05, 1.8957999999999475e-05, 1.8985999999998615e-05, 1.8971999999999045e-05, 1.8958000000002945e-05, 1.8985999999998615e-05, 1.8985999999998615e-05, 1.8971999999999045e-05, 1.8971999999999045e-05, 1.9013999999997755e-05, 1.9028000000000794e-05, 1.8957999999999475e-05, 1.89029999999972e-05, 1.8957999999999475e-05, 1.8957999999999475e-05]</msg>
<status status="PASS" starttime="20201029 18:17:57.781" endtime="20201029 18:17:57.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.776" endtime="20201029 18:17:57.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.428" endtime="20201029 18:17:57.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.405" endtime="20201029 18:17:57.784"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:57.786" endtime="20201029 18:17:57.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.785" endtime="20201029 18:17:57.806"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.814" endtime="20201029 18:17:57.824"></status>
</kw>
<msg timestamp="20201029 18:17:57.825" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.813" endtime="20201029 18:17:57.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.827" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.826" endtime="20201029 18:17:57.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.828" endtime="20201029 18:17:57.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.810" endtime="20201029 18:17:57.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.808" endtime="20201029 18:17:57.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.838" endtime="20201029 18:17:58.124"></status>
</kw>
<msg timestamp="20201029 18:17:58.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017537153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017558264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:57.836" endtime="20201029 18:17:58.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017537153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017558264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:58.128" endtime="20201029 18:17:58.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.137" endtime="20201029 18:17:58.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.834" endtime="20201029 18:17:58.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.832" endtime="20201029 18:17:58.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:58.144" level="INFO">${PHILIP_RES} = [{'diff': 2.111100000000074e-05}, {'diff': 2.0680000000002086e-05}, {'diff': 2.066699999999852e-05}, {'diff': 2.068100000000156e-05}, {'diff': 2.0722000000000795e-05}, {'diff': 2.066700000000199e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:58.141" endtime="20201029 18:17:58.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:58.148" level="INFO">${RESULT} = {'diff': [2.111100000000074e-05, 2.0680000000002086e-05, 2.066699999999852e-05, 2.068100000000156e-05, 2.0722000000000795e-05, 2.066700000000199e-05, 2.066699999999852e-05, 2.066700000000199e-05, 2.06...</msg>
<status status="PASS" starttime="20201029 18:17:58.145" endtime="20201029 18:17:58.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.152" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:58.151" endtime="20201029 18:17:58.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.155" level="INFO">VALUE: [2.111100000000074e-05, 2.0680000000002086e-05, 2.066699999999852e-05, 2.068100000000156e-05, 2.0722000000000795e-05, 2.066700000000199e-05, 2.066699999999852e-05, 2.066700000000199e-05, 2.066699999999852e-05, 2.0680000000002086e-05, 2.062499999999981e-05, 2.0680000000002086e-05, 2.0651999999999476e-05, 2.0708000000001225e-05, 2.0665999999999046e-05, 2.065299999999895e-05, 2.066700000000199e-05, 2.065299999999895e-05, 2.066700000000199e-05, 2.068099999999809e-05, 2.069500000000113e-05, 2.066699999999852e-05, 2.066700000000199e-05, 2.061100000000024e-05, 2.066700000000199e-05, 2.065299999999895e-05, 2.062499999999981e-05, 2.0651999999999476e-05, 2.0666000000002516e-05, 2.0665999999999046e-05, 2.063900000000285e-05, 2.066699999999852e-05, 2.063900000000285e-05, 2.068100000000156e-05, 2.07090000000007e-05, 2.063899999999938e-05, 2.063899999999938e-05, 2.061100000000024e-05, 2.065299999999895e-05, 2.0611999999999714e-05, 2.065299999999895e-05, 2.0666000000002516e-05, 2.0708000000001225e-05, 2.0680000000002086e-05, 2.0693999999998186e-05, 2.065300000000242e-05, 2.061100000000024e-05, 2.068100000000156e-05, 2.066699999999852e-05, 2.065300000000242e-05]</msg>
<status status="PASS" starttime="20201029 18:17:58.154" endtime="20201029 18:17:58.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.149" endtime="20201029 18:17:58.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.807" endtime="20201029 18:17:58.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.784" endtime="20201029 18:17:58.156"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:58.159" endtime="20201029 18:17:58.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.157" endtime="20201029 18:17:58.179"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.187" endtime="20201029 18:17:58.197"></status>
</kw>
<msg timestamp="20201029 18:17:58.198" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.185" endtime="20201029 18:17:58.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.200" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.199" endtime="20201029 18:17:58.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.201" endtime="20201029 18:17:58.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.183" endtime="20201029 18:17:58.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.181" endtime="20201029 18:17:58.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.211" endtime="20201029 18:17:58.497"></status>
</kw>
<msg timestamp="20201029 18:17:58.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017691917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01771475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:58.210" endtime="20201029 18:17:58.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017691917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01771475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:58.501" endtime="20201029 18:17:58.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.510" endtime="20201029 18:17:58.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.207" endtime="20201029 18:17:58.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.206" endtime="20201029 18:17:58.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:58.516" level="INFO">${PHILIP_RES} = [{'diff': 2.283299999999988e-05}, {'diff': 2.237500000000156e-05}, {'diff': 2.238899999999766e-05}, {'diff': 2.237500000000156e-05}, {'diff': 2.2362000000001464e-05}, {'diff': 2.237499999999809e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:17:58.513" endtime="20201029 18:17:58.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:58.520" level="INFO">${RESULT} = {'diff': [2.283299999999988e-05, 2.237500000000156e-05, 2.238899999999766e-05, 2.237500000000156e-05, 2.2362000000001464e-05, 2.237499999999809e-05, 2.237500000000156e-05, 2.237499999999809e-05, 2.238...</msg>
<status status="PASS" starttime="20201029 18:17:58.517" endtime="20201029 18:17:58.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.525" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:58.524" endtime="20201029 18:17:58.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.527" level="INFO">VALUE: [2.283299999999988e-05, 2.237500000000156e-05, 2.238899999999766e-05, 2.237500000000156e-05, 2.2362000000001464e-05, 2.237499999999809e-05, 2.237500000000156e-05, 2.237499999999809e-05, 2.238900000000113e-05, 2.237500000000156e-05, 2.2443999999999936e-05, 2.237500000000156e-05, 2.233299999999938e-05, 2.2387999999998187e-05, 2.234700000000242e-05, 2.238899999999766e-05, 2.237500000000156e-05, 2.236100000000199e-05, 2.241700000000027e-05, 2.236100000000199e-05, 2.2361999999997995e-05, 2.244499999999941e-05, 2.236099999999852e-05, 2.238900000000113e-05, 2.237500000000156e-05, 2.238899999999766e-05, 2.2333999999998855e-05, 2.234699999999895e-05, 2.237499999999809e-05, 2.237500000000156e-05, 2.237499999999809e-05, 2.2319999999999285e-05, 2.237500000000156e-05, 2.238899999999766e-05, 2.238900000000113e-05, 2.238900000000113e-05, 2.236100000000199e-05, 2.238900000000113e-05, 2.237499999999809e-05, 2.237500000000156e-05, 2.24030000000007e-05, 2.24030000000007e-05, 2.238900000000113e-05, 2.237499999999809e-05, 2.238900000000113e-05, 2.2361999999997995e-05, 2.238900000000113e-05, 2.237500000000156e-05, 2.238899999999766e-05, 2.2430000000000366e-05]</msg>
<status status="PASS" starttime="20201029 18:17:58.526" endtime="20201029 18:17:58.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.521" endtime="20201029 18:17:58.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.179" endtime="20201029 18:17:58.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.157" endtime="20201029 18:17:58.529"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:58.532" endtime="20201029 18:17:58.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.530" endtime="20201029 18:17:58.552"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.560" endtime="20201029 18:17:58.570"></status>
</kw>
<msg timestamp="20201029 18:17:58.570" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.558" endtime="20201029 18:17:58.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.573" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.571" endtime="20201029 18:17:58.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.574" endtime="20201029 18:17:58.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.556" endtime="20201029 18:17:58.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.554" endtime="20201029 18:17:58.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.583" endtime="20201029 18:17:58.868"></status>
</kw>
<msg timestamp="20201029 18:17:58.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017479667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017504278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:58.582" endtime="20201029 18:17:58.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017479667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017504278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:58.872" endtime="20201029 18:17:58.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.881" endtime="20201029 18:17:58.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.579" endtime="20201029 18:17:58.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.577" endtime="20201029 18:17:58.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:58.887" level="INFO">${PHILIP_RES} = [{'diff': 2.461100000000077e-05}, {'diff': 2.413900000000288e-05}, {'diff': 2.413900000000288e-05}, {'diff': 2.413900000000288e-05}, {'diff': 2.412499999999984e-05}, {'diff': 2.412499999999984e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:58.884" endtime="20201029 18:17:58.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:58.892" level="INFO">${RESULT} = {'diff': [2.461100000000077e-05, 2.413900000000288e-05, 2.413900000000288e-05, 2.413900000000288e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.413899999999941e-05, 2.411100000000027e-05, 2.4124...</msg>
<status status="PASS" starttime="20201029 18:17:58.888" endtime="20201029 18:17:58.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.896" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:58.895" endtime="20201029 18:17:58.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.899" level="INFO">VALUE: [2.461100000000077e-05, 2.413900000000288e-05, 2.413900000000288e-05, 2.413900000000288e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.413899999999941e-05, 2.411100000000027e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.412500000000331e-05, 2.412499999999984e-05, 2.4096999999997232e-05, 2.411100000000027e-05, 2.411100000000027e-05, 2.412499999999984e-05, 2.413899999999941e-05, 2.412499999999984e-05, 2.412500000000331e-05, 2.41109999999968e-05, 2.413899999999941e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2.413899999999941e-05, 2.413899999999941e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2.41109999999968e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.4111999999999745e-05, 2.413899999999941e-05, 2.4151999999999507e-05, 2.411100000000027e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2.413900000000288e-05, 2.411100000000027e-05, 2.412499999999984e-05, 2.40970000000007e-05, 2.411100000000027e-05, 2.4193999999998217e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2.412500000000331e-05, 2.413899999999941e-05, 2.411100000000027e-05, 2.411100000000027e-05, 2.418099999999812e-05]</msg>
<status status="PASS" starttime="20201029 18:17:58.897" endtime="20201029 18:17:58.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.893" endtime="20201029 18:17:58.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.552" endtime="20201029 18:17:58.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.530" endtime="20201029 18:17:58.900"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:58.903" endtime="20201029 18:17:58.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.901" endtime="20201029 18:17:58.923"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.931" endtime="20201029 18:17:58.941"></status>
</kw>
<msg timestamp="20201029 18:17:58.942" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.929" endtime="20201029 18:17:58.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.945" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.943" endtime="20201029 18:17:58.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.946" endtime="20201029 18:17:58.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.926" endtime="20201029 18:17:58.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.925" endtime="20201029 18:17:58.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.955" endtime="20201029 18:17:59.241"></status>
</kw>
<msg timestamp="20201029 18:17:59.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017600583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017626931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:58.953" endtime="20201029 18:17:59.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017600583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017626931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:59.245" endtime="20201029 18:17:59.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.253" endtime="20201029 18:17:59.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.951" endtime="20201029 18:17:59.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.949" endtime="20201029 18:17:59.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:59.261" level="INFO">${PHILIP_RES} = [{'diff': 2.6347999999998956e-05}, {'diff': 2.590299999999726e-05}, {'diff': 2.590300000000073e-05}, {'diff': 2.590300000000073e-05}, {'diff': 2.590300000000073e-05}, {'diff': 2.593099999999987e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:17:59.258" endtime="20201029 18:17:59.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:59.265" level="INFO">${RESULT} = {'diff': [2.6347999999998956e-05, 2.590299999999726e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2.593099999999987e-05, 2.590300000000073e-05, 2.5902000000001257e-05, 2.59...</msg>
<status status="PASS" starttime="20201029 18:17:59.262" endtime="20201029 18:17:59.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.269" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:59.268" endtime="20201029 18:17:59.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.272" level="INFO">VALUE: [2.6347999999998956e-05, 2.590299999999726e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2.593099999999987e-05, 2.590300000000073e-05, 2.5902000000001257e-05, 2.590299999999726e-05, 2.593099999999987e-05, 2.590299999999726e-05, 2.5832999999999412e-05, 2.5916000000000827e-05, 2.590300000000073e-05, 2.588900000000116e-05, 2.59170000000003e-05, 2.5902000000001257e-05, 2.590299999999726e-05, 2.59170000000003e-05, 2.590299999999726e-05, 2.5916000000000827e-05, 2.5915999999997358e-05, 2.588900000000116e-05, 2.594499999999944e-05, 2.588900000000116e-05, 2.5916000000000827e-05, 2.59170000000003e-05, 2.590300000000073e-05, 2.591699999999683e-05, 2.5902000000001257e-05, 2.5915999999997358e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2.595899999999901e-05, 2.5888000000001687e-05, 2.588900000000116e-05, 2.587500000000159e-05, 2.588899999999769e-05, 2.5902000000001257e-05, 2.588899999999769e-05, 2.588900000000116e-05, 2.5860999999998552e-05, 2.587500000000159e-05, 2.5888000000001687e-05, 2.5834000000002355e-05, 2.588900000000116e-05, 2.588899999999769e-05, 2.5902000000001257e-05, 2.588899999999769e-05, 2.59170000000003e-05]</msg>
<status status="PASS" starttime="20201029 18:17:59.270" endtime="20201029 18:17:59.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.266" endtime="20201029 18:17:59.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.923" endtime="20201029 18:17:59.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.901" endtime="20201029 18:17:59.273"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:59.275" endtime="20201029 18:17:59.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.274" endtime="20201029 18:17:59.295"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.304" endtime="20201029 18:17:59.314"></status>
</kw>
<msg timestamp="20201029 18:17:59.314" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:59.302" endtime="20201029 18:17:59.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.317" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:59.316" endtime="20201029 18:17:59.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.318" endtime="20201029 18:17:59.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.300" endtime="20201029 18:17:59.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.298" endtime="20201029 18:17:59.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.328" endtime="20201029 18:17:59.614"></status>
</kw>
<msg timestamp="20201029 18:17:59.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017692819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017721, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:17:59.326" endtime="20201029 18:17:59.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017692819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017721, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:17:59.618" endtime="20201029 18:17:59.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.627" endtime="20201029 18:17:59.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.324" endtime="20201029 18:17:59.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.322" endtime="20201029 18:17:59.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:59.633" level="INFO">${PHILIP_RES} = [{'diff': 2.818100000000212e-05}, {'diff': 2.768099999999815e-05}, {'diff': 2.769500000000119e-05}, {'diff': 2.7666000000002577e-05}, {'diff': 2.7680000000002147e-05}, {'diff': 2.770900000000076e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:59.630" endtime="20201029 18:17:59.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:59.637" level="INFO">${RESULT} = {'diff': [2.818100000000212e-05, 2.768099999999815e-05, 2.769500000000119e-05, 2.7666000000002577e-05, 2.7680000000002147e-05, 2.770900000000076e-05, 2.7693999999998248e-05, 2.7707999999997818e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:17:59.634" endtime="20201029 18:17:59.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.642" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:59.641" endtime="20201029 18:17:59.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.644" level="INFO">VALUE: [2.818100000000212e-05, 2.768099999999815e-05, 2.769500000000119e-05, 2.7666000000002577e-05, 2.7680000000002147e-05, 2.770900000000076e-05, 2.7693999999998248e-05, 2.7707999999997818e-05, 2.7693999999998248e-05, 2.772300000000033e-05, 2.7749999999999997e-05, 2.7708000000001287e-05, 2.7693999999998248e-05, 2.769499999999772e-05, 2.7707999999997818e-05, 2.7694000000001717e-05, 2.7680000000002147e-05, 2.7736000000000427e-05, 2.7722000000000857e-05, 2.7665999999999108e-05, 2.769499999999772e-05, 2.772300000000033e-05, 2.7694000000001717e-05, 2.7694000000001717e-05, 2.768100000000162e-05, 2.770900000000076e-05, 2.7721999999997388e-05, 2.7693999999998248e-05, 2.7708000000001287e-05, 2.769500000000119e-05, 2.7638999999999442e-05, 2.7708000000001287e-05, 2.7722000000000857e-05, 2.766699999999858e-05, 2.7693999999998248e-05, 2.7694000000001717e-05, 2.7708000000001287e-05, 2.769500000000119e-05, 2.7736000000000427e-05, 2.7707999999997818e-05, 2.768099999999815e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.7694000000001717e-05, 2.770900000000076e-05, 2.7624999999999872e-05, 2.7693999999998248e-05, 2.7693999999998248e-05, 2.770900000000076e-05, 2.769500000000119e-05]</msg>
<status status="PASS" starttime="20201029 18:17:59.643" endtime="20201029 18:17:59.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.638" endtime="20201029 18:17:59.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.296" endtime="20201029 18:17:59.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.273" endtime="20201029 18:17:59.646"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:59.649" endtime="20201029 18:17:59.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.647" endtime="20201029 18:17:59.669"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.677" endtime="20201029 18:17:59.688"></status>
</kw>
<msg timestamp="20201029 18:17:59.688" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:59.675" endtime="20201029 18:17:59.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.692" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:59.690" endtime="20201029 18:17:59.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.694" endtime="20201029 18:17:59.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.672" endtime="20201029 18:17:59.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.671" endtime="20201029 18:17:59.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.703" endtime="20201029 18:17:59.990"></status>
</kw>
<msg timestamp="20201029 18:17:59.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017990403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018020375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:59.702" endtime="20201029 18:17:59.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017990403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018020375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:59.994" endtime="20201029 18:18:00.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.002" endtime="20201029 18:18:00.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.699" endtime="20201029 18:18:00.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.698" endtime="20201029 18:18:00.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:00.009" level="INFO">${PHILIP_RES} = [{'diff': 2.9972000000003107e-05}, {'diff': 2.9526999999997944e-05}, {'diff': 2.9499999999998278e-05}, {'diff': 2.9542000000000457e-05}, {'diff': 2.9528000000000887e-05}, {'diff': 2.9556000000000027e-...</msg>
<status status="PASS" starttime="20201029 18:18:00.006" endtime="20201029 18:18:00.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:00.014" level="INFO">${RESULT} = {'diff': [2.9972000000003107e-05, 2.9526999999997944e-05, 2.9499999999998278e-05, 2.9542000000000457e-05, 2.9528000000000887e-05, 2.9556000000000027e-05, 2.9528000000000887e-05, 2.9514000000001317e-05...</msg>
<status status="PASS" starttime="20201029 18:18:00.010" endtime="20201029 18:18:00.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.018" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:00.017" endtime="20201029 18:18:00.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.021" level="INFO">VALUE: [2.9972000000003107e-05, 2.9526999999997944e-05, 2.9499999999998278e-05, 2.9542000000000457e-05, 2.9528000000000887e-05, 2.9556000000000027e-05, 2.9528000000000887e-05, 2.9514000000001317e-05, 2.9528000000000887e-05, 2.9541999999996987e-05, 2.9597999999998736e-05, 2.9514000000001317e-05, 2.9513999999997848e-05, 2.9542000000000457e-05, 2.9528000000000887e-05, 2.9499999999998278e-05, 2.9513999999997848e-05, 2.9611999999998306e-05, 2.9500000000001747e-05, 2.9514000000001317e-05, 2.9514000000001317e-05, 2.9500000000001747e-05, 2.9457999999999568e-05, 2.9556000000000027e-05, 2.9528000000000887e-05, 2.9528000000000887e-05, 2.9528000000000887e-05, 2.9542000000000457e-05, 2.9528000000000887e-05, 2.9513999999997848e-05, 2.9471999999999138e-05, 2.9528000000000887e-05, 2.9542000000000457e-05, 2.9528000000000887e-05, 2.9513999999997848e-05, 2.9584000000002636e-05, 2.9528000000000887e-05, 2.9527999999997417e-05, 2.9542000000000457e-05, 2.9514000000001317e-05, 2.9528000000000887e-05, 2.9528000000000887e-05, 2.9500000000001747e-05, 2.9443999999999998e-05, 2.9542000000000457e-05, 2.9542000000000457e-05, 2.9596999999999263e-05, 2.9500000000001747e-05, 2.9443999999999998e-05, 2.9443999999999998e-05]</msg>
<status status="PASS" starttime="20201029 18:18:00.019" endtime="20201029 18:18:00.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.015" endtime="20201029 18:18:00.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.669" endtime="20201029 18:18:00.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.646" endtime="20201029 18:18:00.022"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:00.025" endtime="20201029 18:18:00.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.023" endtime="20201029 18:18:00.045"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.053" endtime="20201029 18:18:00.064"></status>
</kw>
<msg timestamp="20201029 18:18:00.064" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.052" endtime="20201029 18:18:00.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.067" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.065" endtime="20201029 18:18:00.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.068" endtime="20201029 18:18:00.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.049" endtime="20201029 18:18:00.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.047" endtime="20201029 18:18:00.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.077" endtime="20201029 18:18:00.363"></status>
</kw>
<msg timestamp="20201029 18:18:00.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018036681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0180685, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:00.075" endtime="20201029 18:18:00.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018036681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0180685, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:00.367" endtime="20201029 18:18:00.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.375" endtime="20201029 18:18:00.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.073" endtime="20201029 18:18:00.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.071" endtime="20201029 18:18:00.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:00.382" level="INFO">${PHILIP_RES} = [{'diff': 3.181900000000237e-05}, {'diff': 3.140300000000276e-05}, {'diff': 3.138899999999972e-05}, {'diff': 3.137500000000015e-05}, {'diff': 3.138899999999972e-05}, {'diff': 3.138899999999972e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:00.379" endtime="20201029 18:18:00.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:00.386" level="INFO">${RESULT} = {'diff': [3.181900000000237e-05, 3.140300000000276e-05, 3.138899999999972e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.134700000000101e-05, 3.137500000000015e-05, 3.1431...</msg>
<status status="PASS" starttime="20201029 18:18:00.383" endtime="20201029 18:18:00.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.390" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:00.389" endtime="20201029 18:18:00.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.393" level="INFO">VALUE: [3.181900000000237e-05, 3.140300000000276e-05, 3.138899999999972e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.134700000000101e-05, 3.137500000000015e-05, 3.14310000000019e-05, 3.138800000000025e-05, 3.141699999999886e-05, 3.137500000000015e-05, 3.138900000000319e-05, 3.142999999999896e-05, 3.137500000000015e-05, 3.140300000000276e-05, 3.138899999999972e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.136100000000058e-05, 3.140299999999929e-05, 3.1304999999998834e-05, 3.137500000000015e-05, 3.142999999999896e-05, 3.138899999999972e-05, 3.141700000000233e-05, 3.137499999999668e-05, 3.140299999999929e-05, 3.140199999999982e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.140200000000329e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.140299999999929e-05, 3.134700000000101e-05, 3.140199999999982e-05, 3.140299999999929e-05, 3.140199999999982e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.1318999999998404e-05, 3.137500000000015e-05, 3.140199999999982e-05, 3.138899999999972e-05, 3.137500000000015e-05, 3.136100000000058e-05, 3.144399999999853e-05]</msg>
<status status="PASS" starttime="20201029 18:18:00.391" endtime="20201029 18:18:00.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.387" endtime="20201029 18:18:00.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.045" endtime="20201029 18:18:00.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.023" endtime="20201029 18:18:00.394"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:00.396" endtime="20201029 18:18:00.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.395" endtime="20201029 18:18:00.416"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.425" endtime="20201029 18:18:00.437"></status>
</kw>
<msg timestamp="20201029 18:18:00.437" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.423" endtime="20201029 18:18:00.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.440" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.438" endtime="20201029 18:18:00.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.441" endtime="20201029 18:18:00.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.421" endtime="20201029 18:18:00.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.419" endtime="20201029 18:18:00.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.451" endtime="20201029 18:18:00.736"></status>
</kw>
<msg timestamp="20201029 18:18:00.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018056347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018090042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:00.449" endtime="20201029 18:18:00.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018056347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018090042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:00.740" endtime="20201029 18:18:00.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.749" endtime="20201029 18:18:00.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.447" endtime="20201029 18:18:00.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.445" endtime="20201029 18:18:00.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:00.755" level="INFO">${PHILIP_RES} = [{'diff': 3.369500000000025e-05}, {'diff': 3.32640000000016e-05}, {'diff': 3.327800000000117e-05}, {'diff': 3.3305000000000834e-05}, {'diff': 3.3262999999998655e-05}, {'diff': 3.327800000000117e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:00.752" endtime="20201029 18:18:00.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:00.759" level="INFO">${RESULT} = {'diff': [3.369500000000025e-05, 3.32640000000016e-05, 3.327800000000117e-05, 3.3305000000000834e-05, 3.3262999999998655e-05, 3.327800000000117e-05, 3.32779999999977e-05, 3.326399999999813e-05, 3.3264...</msg>
<status status="PASS" starttime="20201029 18:18:00.756" endtime="20201029 18:18:00.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.763" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:00.762" endtime="20201029 18:18:00.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.766" level="INFO">VALUE: [3.369500000000025e-05, 3.32640000000016e-05, 3.327800000000117e-05, 3.3305000000000834e-05, 3.3262999999998655e-05, 3.327800000000117e-05, 3.32779999999977e-05, 3.326399999999813e-05, 3.32640000000016e-05, 3.325000000000203e-05, 3.322299999999889e-05, 3.32640000000016e-05, 3.32640000000016e-05, 3.324999999999856e-05, 3.327800000000117e-05, 3.330600000000031e-05, 3.323599999999899e-05, 3.319499999999975e-05, 3.32640000000016e-05, 3.32640000000016e-05, 3.326399999999813e-05, 3.330599999999684e-05, 3.327800000000117e-05, 3.326399999999813e-05, 3.324999999999856e-05, 3.329200000000074e-05, 3.3305000000000834e-05, 3.326399999999813e-05, 3.325000000000203e-05, 3.3291000000001264e-05, 3.326399999999813e-05, 3.327800000000117e-05, 3.32640000000016e-05, 3.327800000000117e-05, 3.32640000000016e-05, 3.329200000000074e-05, 3.326399999999813e-05, 3.324999999999856e-05, 3.323600000000246e-05, 3.326399999999813e-05, 3.326399999999813e-05, 3.32640000000016e-05, 3.323600000000246e-05, 3.324999999999856e-05, 3.3291000000001264e-05, 3.32640000000016e-05, 3.324999999999856e-05, 3.32640000000016e-05, 3.32640000000016e-05, 3.327800000000117e-05]</msg>
<status status="PASS" starttime="20201029 18:18:00.764" endtime="20201029 18:18:00.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.760" endtime="20201029 18:18:00.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.417" endtime="20201029 18:18:00.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.395" endtime="20201029 18:18:00.769"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:00.771" endtime="20201029 18:18:00.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.769" endtime="20201029 18:18:00.791"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.799" endtime="20201029 18:18:00.811"></status>
</kw>
<msg timestamp="20201029 18:18:00.811" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.798" endtime="20201029 18:18:00.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.814" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.812" endtime="20201029 18:18:00.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.815" endtime="20201029 18:18:00.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.795" endtime="20201029 18:18:00.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.793" endtime="20201029 18:18:00.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.826" endtime="20201029 18:18:01.113"></status>
</kw>
<msg timestamp="20201029 18:18:01.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018091472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018127111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:00.824" endtime="20201029 18:18:01.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018091472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018127111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:01.117" endtime="20201029 18:18:01.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.125" endtime="20201029 18:18:01.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.821" endtime="20201029 18:18:01.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.819" endtime="20201029 18:18:01.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:01.132" level="INFO">${PHILIP_RES} = [{'diff': 3.5639000000000504e-05}, {'diff': 3.518099999999871e-05}, {'diff': 3.519400000000228e-05}, {'diff': 3.519399999999881e-05}, {'diff': 3.519399999999881e-05}, {'diff': 3.519500000000175e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:01.129" endtime="20201029 18:18:01.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:01.137" level="INFO">${RESULT} = {'diff': [3.5639000000000504e-05, 3.518099999999871e-05, 3.519400000000228e-05, 3.519399999999881e-05, 3.519399999999881e-05, 3.519500000000175e-05, 3.518100000000218e-05, 3.518099999999871e-05, 3.522...</msg>
<status status="PASS" starttime="20201029 18:18:01.133" endtime="20201029 18:18:01.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.141" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:01.140" endtime="20201029 18:18:01.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.144" level="INFO">VALUE: [3.5639000000000504e-05, 3.518099999999871e-05, 3.519400000000228e-05, 3.519399999999881e-05, 3.519399999999881e-05, 3.519500000000175e-05, 3.518100000000218e-05, 3.518099999999871e-05, 3.522199999999795e-05, 3.520800000000185e-05, 3.519500000000175e-05, 3.5166999999999143e-05, 3.5166999999999143e-05, 3.519500000000175e-05, 3.519500000000175e-05, 3.519499999999828e-05, 3.5166999999999143e-05, 3.525000000000056e-05, 3.519500000000175e-05, 3.523699999999699e-05, 3.5139000000000004e-05, 3.518100000000218e-05, 3.519500000000175e-05, 3.519399999999881e-05, 3.519399999999881e-05, 3.5125000000000434e-05, 3.5166999999999143e-05, 3.5152999999999573e-05, 3.519399999999881e-05, 3.519400000000228e-05, 3.523599999999752e-05, 3.516599999999967e-05, 3.519400000000228e-05, 3.5152999999999573e-05, 3.517999999999924e-05, 3.522199999999795e-05, 3.519400000000228e-05, 3.522200000000142e-05, 3.517999999999924e-05, 3.517999999999924e-05, 3.516599999999967e-05, 3.518000000000271e-05, 3.519399999999881e-05, 3.519399999999881e-05, 3.516700000000261e-05, 3.522200000000142e-05, 3.520799999999838e-05, 3.525000000000056e-05, 3.516700000000261e-05, 3.516599999999967e-05]</msg>
<status status="PASS" starttime="20201029 18:18:01.142" endtime="20201029 18:18:01.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.138" endtime="20201029 18:18:01.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.792" endtime="20201029 18:18:01.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.769" endtime="20201029 18:18:01.145"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:01.148" endtime="20201029 18:18:01.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.146" endtime="20201029 18:18:01.168"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.176" endtime="20201029 18:18:01.188"></status>
</kw>
<msg timestamp="20201029 18:18:01.188" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.174" endtime="20201029 18:18:01.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.191" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.189" endtime="20201029 18:18:01.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.192" endtime="20201029 18:18:01.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.172" endtime="20201029 18:18:01.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.170" endtime="20201029 18:18:01.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.201" endtime="20201029 18:18:01.487"></status>
</kw>
<msg timestamp="20201029 18:18:01.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017511833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017549444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:01.199" endtime="20201029 18:18:01.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017511833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017549444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:01.492" endtime="20201029 18:18:01.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.500" endtime="20201029 18:18:01.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.197" endtime="20201029 18:18:01.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.195" endtime="20201029 18:18:01.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:01.507" level="INFO">${PHILIP_RES} = [{'diff': 3.7610999999999895e-05}, {'diff': 3.7124999999998964e-05}, {'diff': 3.7124999999998964e-05}, {'diff': 3.7124999999998964e-05}, {'diff': 3.709800000000277e-05}, {'diff': 3.7153000000001574e-0...</msg>
<status status="PASS" starttime="20201029 18:18:01.504" endtime="20201029 18:18:01.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:01.512" level="INFO">${RESULT} = {'diff': [3.7610999999999895e-05, 3.7124999999998964e-05, 3.7124999999998964e-05, 3.7124999999998964e-05, 3.709800000000277e-05, 3.7153000000001574e-05, 3.7096999999999825e-05, 3.7152999999998104e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:01.508" endtime="20201029 18:18:01.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.516" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:01.515" endtime="20201029 18:18:01.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.518" level="INFO">VALUE: [3.7610999999999895e-05, 3.7124999999998964e-05, 3.7124999999998964e-05, 3.7124999999998964e-05, 3.709800000000277e-05, 3.7153000000001574e-05, 3.7096999999999825e-05, 3.7152999999998104e-05, 3.7124999999998964e-05, 3.7124999999998964e-05, 3.7096999999999825e-05, 3.7110999999999394e-05, 3.711199999999887e-05, 3.7124999999998964e-05, 3.7125000000002434e-05, 3.7125000000002434e-05, 3.7110999999999394e-05, 3.7124999999998964e-05, 3.7124999999998964e-05, 3.715199999999863e-05, 3.7167000000001144e-05, 3.7124999999998964e-05, 3.7167000000001144e-05, 3.7125000000002434e-05, 3.7096999999999825e-05, 3.7110999999999394e-05, 3.7110999999999394e-05, 3.70979999999993e-05, 3.7138999999998534e-05, 3.7152999999998104e-05, 3.7124999999998964e-05, 3.7110999999999394e-05, 3.7125000000002434e-05, 3.716600000000167e-05, 3.7110999999999394e-05, 3.7124999999998964e-05, 3.7195000000000283e-05, 3.7096999999999825e-05, 3.7110999999999394e-05, 3.7124999999998964e-05, 3.7124999999998964e-05, 3.7111000000002864e-05, 3.7125000000002434e-05, 3.7125000000002434e-05, 3.7139000000002004e-05, 3.7110999999999394e-05, 3.7096999999999825e-05, 3.7096999999999825e-05, 3.7124999999998964e-05, 3.7139000000002004e-05]</msg>
<status status="PASS" starttime="20201029 18:18:01.517" endtime="20201029 18:18:01.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.512" endtime="20201029 18:18:01.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.168" endtime="20201029 18:18:01.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.145" endtime="20201029 18:18:01.520"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:01.523" endtime="20201029 18:18:01.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.521" endtime="20201029 18:18:01.542"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.550" endtime="20201029 18:18:01.563"></status>
</kw>
<msg timestamp="20201029 18:18:01.564" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.549" endtime="20201029 18:18:01.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.566" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.565" endtime="20201029 18:18:01.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.567" endtime="20201029 18:18:01.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.546" endtime="20201029 18:18:01.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.544" endtime="20201029 18:18:01.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.577" endtime="20201029 18:18:01.863"></status>
</kw>
<msg timestamp="20201029 18:18:01.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017562833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017602361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:01.575" endtime="20201029 18:18:01.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017562833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017602361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:01.868" endtime="20201029 18:18:01.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.877" endtime="20201029 18:18:01.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.573" endtime="20201029 18:18:01.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.571" endtime="20201029 18:18:01.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:01.884" level="INFO">${PHILIP_RES} = [{'diff': 3.952800000000048e-05}, {'diff': 3.9125000000000965e-05}, {'diff': 3.9097000000001825e-05}, {'diff': 3.915199999999716e-05}, {'diff': 3.908400000000173e-05}, {'diff': 3.9111000000001395e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:01.881" endtime="20201029 18:18:01.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:01.888" level="INFO">${RESULT} = {'diff': [3.952800000000048e-05, 3.9125000000000965e-05, 3.9097000000001825e-05, 3.915199999999716e-05, 3.908400000000173e-05, 3.9111000000001395e-05, 3.915199999999716e-05, 3.9153000000000104e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:18:01.885" endtime="20201029 18:18:01.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.893" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:01.892" endtime="20201029 18:18:01.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.895" level="INFO">VALUE: [3.952800000000048e-05, 3.9125000000000965e-05, 3.9097000000001825e-05, 3.915199999999716e-05, 3.908400000000173e-05, 3.9111000000001395e-05, 3.915199999999716e-05, 3.9153000000000104e-05, 3.9082999999998785e-05, 3.9096999999998355e-05, 3.899999999999737e-05, 3.90980000000013e-05, 3.9097000000001825e-05, 3.908400000000173e-05, 3.9125000000000965e-05, 3.9096999999998355e-05, 3.9096999999998355e-05, 3.9082999999998785e-05, 3.908399999999826e-05, 3.9139000000000534e-05, 3.905600000000259e-05, 3.9083000000002255e-05, 3.9083000000002255e-05, 3.901400000000041e-05, 3.9097000000001825e-05, 3.90980000000013e-05, 3.9096999999998355e-05, 3.9082999999998785e-05, 3.9082999999998785e-05, 3.9096999999998355e-05, 3.9082999999998785e-05, 3.9125000000000965e-05, 3.907000000000216e-05, 3.9111000000001395e-05, 3.9083000000002255e-05, 3.9096999999998355e-05, 3.9082999999998785e-05, 3.909799999999783e-05, 3.9096999999998355e-05, 3.909799999999783e-05, 3.9082999999998785e-05, 3.911200000000087e-05, 3.9069000000002685e-05, 3.9083000000002255e-05, 3.90980000000013e-05, 3.9082999999998785e-05, 3.908399999999826e-05, 3.9082999999998785e-05, 3.9110999999997925e-05, 3.9166999999999674e-05]</msg>
<status status="PASS" starttime="20201029 18:18:01.894" endtime="20201029 18:18:01.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.889" endtime="20201029 18:18:01.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.543" endtime="20201029 18:18:01.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.520" endtime="20201029 18:18:01.898"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:01.900" endtime="20201029 18:18:01.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.899" endtime="20201029 18:18:01.920"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.928" endtime="20201029 18:18:01.941"></status>
</kw>
<msg timestamp="20201029 18:18:01.941" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.926" endtime="20201029 18:18:01.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.944" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.942" endtime="20201029 18:18:01.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.945" endtime="20201029 18:18:01.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.924" endtime="20201029 18:18:01.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.922" endtime="20201029 18:18:01.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.954" endtime="20201029 18:18:02.240"></status>
</kw>
<msg timestamp="20201029 18:18:02.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017591181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017632694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:01.952" endtime="20201029 18:18:02.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017591181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017632694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:02.244" endtime="20201029 18:18:02.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.253" endtime="20201029 18:18:02.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.950" endtime="20201029 18:18:02.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.948" endtime="20201029 18:18:02.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:02.259" level="INFO">${PHILIP_RES} = [{'diff': 4.1512999999999967e-05}, {'diff': 4.109799999999983e-05}, {'diff': 4.099999999999937e-05}, {'diff': 4.105600000000112e-05}, {'diff': 4.108400000000026e-05}, {'diff': 4.108400000000026e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:02.256" endtime="20201029 18:18:02.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:02.265" level="INFO">${RESULT} = {'diff': [4.1512999999999967e-05, 4.109799999999983e-05, 4.099999999999937e-05, 4.105600000000112e-05, 4.108400000000026e-05, 4.108400000000026e-05, 4.108400000000026e-05, 4.107000000000069e-05, 4.106...</msg>
<status status="PASS" starttime="20201029 18:18:02.260" endtime="20201029 18:18:02.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.269" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:02.268" endtime="20201029 18:18:02.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.272" level="INFO">VALUE: [4.1512999999999967e-05, 4.109799999999983e-05, 4.099999999999937e-05, 4.105600000000112e-05, 4.108400000000026e-05, 4.108400000000026e-05, 4.108400000000026e-05, 4.107000000000069e-05, 4.106999999999722e-05, 4.1055000000001646e-05, 4.1069000000001216e-05, 4.1083000000000786e-05, 4.1083000000000786e-05, 4.1083000000000786e-05, 4.1083000000000786e-05, 4.1083000000000786e-05, 4.1068999999997746e-05, 4.1069000000001216e-05, 4.1069000000001216e-05, 4.1097000000000355e-05, 4.1083000000000786e-05, 4.1097000000000355e-05, 4.1083000000000786e-05, 4.1097000000000355e-05, 4.1068999999997746e-05, 4.1083000000000786e-05, 4.1082999999997316e-05, 4.1083000000000786e-05, 4.1097000000000355e-05, 4.101399999999894e-05, 4.1138999999999065e-05, 4.1124999999999495e-05, 4.1082999999997316e-05, 4.105600000000112e-05, 4.1069000000001216e-05, 4.108400000000026e-05, 4.1083000000000786e-05, 4.106999999999722e-05, 4.1124999999999495e-05, 4.107000000000069e-05, 4.108400000000026e-05, 4.107000000000069e-05, 4.109799999999983e-05, 4.108400000000026e-05, 4.109799999999983e-05, 4.106999999999722e-05, 4.1152999999998635e-05, 4.1138999999999065e-05, 4.109799999999983e-05, 4.1110999999999925e-05]</msg>
<status status="PASS" starttime="20201029 18:18:02.270" endtime="20201029 18:18:02.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.265" endtime="20201029 18:18:02.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.921" endtime="20201029 18:18:02.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.898" endtime="20201029 18:18:02.274"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:02.276" endtime="20201029 18:18:02.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.275" endtime="20201029 18:18:02.296"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.305" endtime="20201029 18:18:02.318"></status>
</kw>
<msg timestamp="20201029 18:18:02.318" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:02.303" endtime="20201029 18:18:02.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.321" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:02.319" endtime="20201029 18:18:02.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.322" endtime="20201029 18:18:02.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.300" endtime="20201029 18:18:02.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.298" endtime="20201029 18:18:02.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.331" endtime="20201029 18:18:02.632"></status>
</kw>
<msg timestamp="20201029 18:18:02.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018148, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018191583, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:02.330" endtime="20201029 18:18:02.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018148, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018191583, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:02.642" endtime="20201029 18:18:02.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.662" endtime="20201029 18:18:02.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.327" endtime="20201029 18:18:02.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.325" endtime="20201029 18:18:02.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:02.676" level="INFO">${PHILIP_RES} = [{'diff': 4.3582999999999816e-05}, {'diff': 4.304200000000008e-05}, {'diff': 4.3097000000002356e-05}, {'diff': 4.3125000000001495e-05}, {'diff': 4.3111000000001926e-05}, {'diff': 4.3082999999999316e-0...</msg>
<status status="PASS" starttime="20201029 18:18:02.670" endtime="20201029 18:18:02.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:02.681" level="INFO">${RESULT} = {'diff': [4.3582999999999816e-05, 4.304200000000008e-05, 4.3097000000002356e-05, 4.3125000000001495e-05, 4.3111000000001926e-05, 4.3082999999999316e-05, 4.3096999999998886e-05, 4.3110999999998456e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:02.678" endtime="20201029 18:18:02.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.685" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:02.684" endtime="20201029 18:18:02.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.688" level="INFO">VALUE: [4.3582999999999816e-05, 4.304200000000008e-05, 4.3097000000002356e-05, 4.3125000000001495e-05, 4.3111000000001926e-05, 4.3082999999999316e-05, 4.3096999999998886e-05, 4.3110999999998456e-05, 4.3125000000001495e-05, 4.3096999999998886e-05, 4.3110999999998456e-05, 4.3110999999998456e-05, 4.3125000000001495e-05, 4.3111000000001926e-05, 4.3111000000001926e-05, 4.3124999999998026e-05, 4.3096999999998886e-05, 4.3096999999998886e-05, 4.3097000000002356e-05, 4.3124999999998026e-05, 4.3167000000000205e-05, 4.3124999999998026e-05, 4.3111000000001926e-05, 4.3097000000002356e-05, 4.3110999999998456e-05, 4.3124999999998026e-05, 4.3096999999998886e-05, 4.3125000000001495e-05, 4.3096999999998886e-05, 4.311199999999793e-05, 4.3138999999997596e-05, 4.3096999999998886e-05, 4.3082999999999316e-05, 4.3125000000001495e-05, 4.308399999999879e-05, 4.3096999999998886e-05, 4.3111000000001926e-05, 4.3125000000001495e-05, 4.308400000000226e-05, 4.3153000000000635e-05, 4.3110999999998456e-05, 4.3111000000001926e-05, 4.309800000000183e-05, 4.3125000000001495e-05, 4.3096999999998886e-05, 4.3124999999998026e-05, 4.3125000000001495e-05, 4.3097000000002356e-05, 4.3125000000001495e-05, 4.3096999999998886e-05]</msg>
<status status="PASS" starttime="20201029 18:18:02.686" endtime="20201029 18:18:02.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.682" endtime="20201029 18:18:02.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.297" endtime="20201029 18:18:02.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.274" endtime="20201029 18:18:02.698"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:02.700" endtime="20201029 18:18:02.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.699" endtime="20201029 18:18:02.720"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.729" endtime="20201029 18:18:02.742"></status>
</kw>
<msg timestamp="20201029 18:18:02.742" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:02.727" endtime="20201029 18:18:02.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.745" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:02.743" endtime="20201029 18:18:02.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.746" endtime="20201029 18:18:02.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.724" endtime="20201029 18:18:02.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.722" endtime="20201029 18:18:02.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.756" endtime="20201029 18:18:03.042"></status>
</kw>
<msg timestamp="20201029 18:18:03.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018095847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018141472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:02.755" endtime="20201029 18:18:03.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018095847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018141472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.047" endtime="20201029 18:18:03.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.055" endtime="20201029 18:18:03.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.752" endtime="20201029 18:18:03.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.750" endtime="20201029 18:18:03.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:03.062" level="INFO">${PHILIP_RES} = [{'diff': 4.562499999999706e-05}, {'diff': 4.5181000000001775e-05}, {'diff': 4.5152999999999166e-05}, {'diff': 4.5139000000003066e-05}, {'diff': 4.5152999999999166e-05}, {'diff': 4.519400000000187e-05...</msg>
<status status="PASS" starttime="20201029 18:18:03.059" endtime="20201029 18:18:03.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:03.066" level="INFO">${RESULT} = {'diff': [4.562499999999706e-05, 4.5181000000001775e-05, 4.5152999999999166e-05, 4.5139000000003066e-05, 4.5152999999999166e-05, 4.519400000000187e-05, 4.5166999999998736e-05, 4.5166999999998736e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:03.063" endtime="20201029 18:18:03.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.071" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:03.070" endtime="20201029 18:18:03.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.073" level="INFO">VALUE: [4.562499999999706e-05, 4.5181000000001775e-05, 4.5152999999999166e-05, 4.5139000000003066e-05, 4.5152999999999166e-05, 4.519400000000187e-05, 4.5166999999998736e-05, 4.5166999999998736e-05, 4.5138999999999596e-05, 4.516599999999926e-05, 4.51939999999984e-05, 4.5167000000002205e-05, 4.5138999999999596e-05, 4.5111000000000456e-05, 4.515199999999969e-05, 4.515199999999969e-05, 4.5166999999998736e-05, 4.5152999999999166e-05, 4.5125000000000026e-05, 4.516599999999926e-05, 4.516599999999926e-05, 4.5138999999999596e-05, 4.5111000000000456e-05, 4.5152999999999166e-05, 4.5166999999998736e-05, 4.516599999999926e-05, 4.5138999999999596e-05, 4.5138999999999596e-05, 4.5152999999999166e-05, 4.5125000000000026e-05, 4.520799999999797e-05, 4.519400000000187e-05, 4.5152999999999166e-05, 4.5152999999999166e-05, 4.5166999999998736e-05, 4.516599999999926e-05, 4.5125000000000026e-05, 4.5152999999999166e-05, 4.5152999999999166e-05, 4.5138999999999596e-05, 4.515199999999969e-05, 4.5138999999999596e-05, 4.509800000000036e-05, 4.5152999999999166e-05, 4.5166999999998736e-05, 4.515199999999969e-05, 4.5138999999999596e-05, 4.5152999999999166e-05, 4.5166999999998736e-05, 4.5138999999999596e-05]</msg>
<status status="PASS" starttime="20201029 18:18:03.072" endtime="20201029 18:18:03.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.067" endtime="20201029 18:18:03.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.721" endtime="20201029 18:18:03.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.698" endtime="20201029 18:18:03.076"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:03.079" endtime="20201029 18:18:03.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.077" endtime="20201029 18:18:03.099"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.107" endtime="20201029 18:18:03.121"></status>
</kw>
<msg timestamp="20201029 18:18:03.122" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.106" endtime="20201029 18:18:03.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.124" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.123" endtime="20201029 18:18:03.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.125" endtime="20201029 18:18:03.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.103" endtime="20201029 18:18:03.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.101" endtime="20201029 18:18:03.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.135" endtime="20201029 18:18:03.420"></status>
</kw>
<msg timestamp="20201029 18:18:03.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018182083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018229764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.133" endtime="20201029 18:18:03.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018182083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018229764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.425" endtime="20201029 18:18:03.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.433" endtime="20201029 18:18:03.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.131" endtime="20201029 18:18:03.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.129" endtime="20201029 18:18:03.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:03.440" level="INFO">${PHILIP_RES} = [{'diff': 4.768099999999734e-05}, {'diff': 4.725000000000215e-05}, {'diff': 4.723600000000258e-05}, {'diff': 4.722199999999954e-05}, {'diff': 4.724999999999868e-05}, {'diff': 4.722199999999954e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:03.437" endtime="20201029 18:18:03.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:03.445" level="INFO">${RESULT} = {'diff': [4.768099999999734e-05, 4.725000000000215e-05, 4.723600000000258e-05, 4.722199999999954e-05, 4.724999999999868e-05, 4.722199999999954e-05, 4.722199999999954e-05, 4.732e-05, 4.722199999999954e...</msg>
<status status="PASS" starttime="20201029 18:18:03.441" endtime="20201029 18:18:03.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.450" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:03.449" endtime="20201029 18:18:03.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.452" level="INFO">VALUE: [4.768099999999734e-05, 4.725000000000215e-05, 4.723600000000258e-05, 4.722199999999954e-05, 4.724999999999868e-05, 4.722199999999954e-05, 4.722199999999954e-05, 4.732e-05, 4.722199999999954e-05, 4.723599999999911e-05, 4.723599999999911e-05, 4.722199999999954e-05, 4.723599999999911e-05, 4.722199999999954e-05, 4.722199999999954e-05, 4.723599999999911e-05, 4.717999999999736e-05, 4.724999999999868e-05, 4.723599999999911e-05, 4.723600000000258e-05, 4.722199999999954e-05, 4.723599999999911e-05, 4.723600000000258e-05, 4.724999999999868e-05, 4.723599999999911e-05, 4.722199999999954e-05, 4.723599999999911e-05, 4.724999999999868e-05, 4.725000000000215e-05, 4.723599999999911e-05, 4.724999999999868e-05, 4.722200000000301e-05, 4.723599999999911e-05, 4.722199999999954e-05, 4.722199999999954e-05, 4.720799999999997e-05, 4.727800000000129e-05, 4.730600000000043e-05, 4.722199999999954e-05, 4.723599999999911e-05, 4.727799999999782e-05, 4.723599999999911e-05, 4.723599999999911e-05, 4.723600000000258e-05, 4.722199999999954e-05, 4.723599999999911e-05, 4.71940000000004e-05, 4.723599999999911e-05, 4.725000000000215e-05, 4.724999999999868e-05]</msg>
<status status="PASS" starttime="20201029 18:18:03.451" endtime="20201029 18:18:03.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.446" endtime="20201029 18:18:03.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.100" endtime="20201029 18:18:03.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.077" endtime="20201029 18:18:03.454"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:03.457" endtime="20201029 18:18:03.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.455" endtime="20201029 18:18:03.477"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.485" endtime="20201029 18:18:03.499"></status>
</kw>
<msg timestamp="20201029 18:18:03.500" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.484" endtime="20201029 18:18:03.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.502" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.501" endtime="20201029 18:18:03.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.503" endtime="20201029 18:18:03.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.481" endtime="20201029 18:18:03.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.479" endtime="20201029 18:18:03.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.513" endtime="20201029 18:18:03.802"></status>
</kw>
<msg timestamp="20201029 18:18:03.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018057153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018106958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.511" endtime="20201029 18:18:03.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018057153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018106958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.806" endtime="20201029 18:18:03.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.815" endtime="20201029 18:18:03.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.509" endtime="20201029 18:18:03.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.507" endtime="20201029 18:18:03.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:03.821" level="INFO">${PHILIP_RES} = [{'diff': 4.980499999999999e-05}, {'diff': 4.933299999999863e-05}, {'diff': 4.934700000000167e-05}, {'diff': 4.93469999999982e-05}, {'diff': 4.93330000000021e-05}, {'diff': 4.933299999999863e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:03.818" endtime="20201029 18:18:03.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:03.826" level="INFO">${RESULT} = {'diff': [4.980499999999999e-05, 4.933299999999863e-05, 4.934700000000167e-05, 4.93469999999982e-05, 4.93330000000021e-05, 4.933299999999863e-05, 4.934700000000167e-05, 4.927700000000035e-05, 4.933299...</msg>
<status status="PASS" starttime="20201029 18:18:03.822" endtime="20201029 18:18:03.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.830" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:03.829" endtime="20201029 18:18:03.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.833" level="INFO">VALUE: [4.980499999999999e-05, 4.933299999999863e-05, 4.934700000000167e-05, 4.93469999999982e-05, 4.93330000000021e-05, 4.933299999999863e-05, 4.934700000000167e-05, 4.927700000000035e-05, 4.933299999999863e-05, 4.933299999999863e-05, 4.93469999999982e-05, 4.933299999999863e-05, 4.931899999999906e-05, 4.933400000000157e-05, 4.93469999999982e-05, 4.934800000000114e-05, 4.93469999999982e-05, 4.934800000000114e-05, 4.933299999999863e-05, 4.934800000000114e-05, 4.93469999999982e-05, 4.933400000000157e-05, 4.931899999999906e-05, 4.933400000000157e-05, 4.93469999999982e-05, 4.93330000000021e-05, 4.936099999999777e-05, 4.93330000000021e-05, 4.93469999999982e-05, 4.936100000000124e-05, 4.936099999999777e-05, 4.93330000000021e-05, 4.93339999999981e-05, 4.934700000000167e-05, 4.934800000000114e-05, 4.933299999999863e-05, 4.933400000000157e-05, 4.936100000000124e-05, 4.933400000000157e-05, 4.933299999999863e-05, 4.936200000000071e-05, 4.936100000000124e-05, 4.934800000000114e-05, 4.93469999999982e-05, 4.933400000000157e-05, 4.93469999999982e-05, 4.93330000000021e-05, 4.93469999999982e-05, 4.930600000000243e-05, 4.933299999999863e-05]</msg>
<status status="PASS" starttime="20201029 18:18:03.831" endtime="20201029 18:18:03.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.827" endtime="20201029 18:18:03.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.478" endtime="20201029 18:18:03.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.455" endtime="20201029 18:18:03.835"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:03.837" endtime="20201029 18:18:03.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.836" endtime="20201029 18:18:03.857"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.866" endtime="20201029 18:18:03.879"></status>
</kw>
<msg timestamp="20201029 18:18:03.880" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.864" endtime="20201029 18:18:03.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.882" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.881" endtime="20201029 18:18:03.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.883" endtime="20201029 18:18:03.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.861" endtime="20201029 18:18:03.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.859" endtime="20201029 18:18:03.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.893" endtime="20201029 18:18:04.180"></status>
</kw>
<msg timestamp="20201029 18:18:04.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017903819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017955764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.892" endtime="20201029 18:18:04.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017903819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017955764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:04.184" endtime="20201029 18:18:04.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.192" endtime="20201029 18:18:04.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.889" endtime="20201029 18:18:04.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.887" endtime="20201029 18:18:04.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:04.199" level="INFO">${PHILIP_RES} = [{'diff': 5.194499999999769e-05}, {'diff': 5.150000000000293e-05}, {'diff': 5.145800000000075e-05}, {'diff': 5.147200000000032e-05}, {'diff': 5.147200000000032e-05}, {'diff': 5.148599999999989e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:04.196" endtime="20201029 18:18:04.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:04.204" level="INFO">${RESULT} = {'diff': [5.194499999999769e-05, 5.150000000000293e-05, 5.145800000000075e-05, 5.147200000000032e-05, 5.147200000000032e-05, 5.148599999999989e-05, 5.149999999999946e-05, 5.147200000000032e-05, 5.1472...</msg>
<status status="PASS" starttime="20201029 18:18:04.200" endtime="20201029 18:18:04.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.208" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:04.207" endtime="20201029 18:18:04.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.211" level="INFO">VALUE: [5.194499999999769e-05, 5.150000000000293e-05, 5.145800000000075e-05, 5.147200000000032e-05, 5.147200000000032e-05, 5.148599999999989e-05, 5.149999999999946e-05, 5.147200000000032e-05, 5.147200000000032e-05, 5.147200000000032e-05, 5.152800000000207e-05, 5.148599999999989e-05, 5.148599999999989e-05, 5.149999999999946e-05, 5.14729999999998e-05, 5.14729999999998e-05, 5.147200000000032e-05, 5.148599999999989e-05, 5.150000000000293e-05, 5.149999999999946e-05, 5.145800000000075e-05, 5.148599999999989e-05, 5.145900000000023e-05, 5.1486999999999367e-05, 5.143100000000109e-05, 5.148599999999989e-05, 5.148599999999989e-05, 5.152800000000207e-05, 5.145800000000075e-05, 5.149999999999946e-05, 5.1471999999996854e-05, 5.145800000000075e-05, 5.143100000000109e-05, 5.14729999999998e-05, 5.1473000000003266e-05, 5.147200000000032e-05, 5.147200000000032e-05, 5.149999999999946e-05, 5.1471999999996854e-05, 5.145800000000075e-05, 5.147200000000032e-05, 5.145900000000023e-05, 5.148599999999989e-05, 5.14729999999998e-05, 5.154200000000164e-05, 5.15279999999986e-05, 5.147200000000032e-05, 5.147200000000032e-05, 5.149999999999946e-05, 5.147200000000032e-05]</msg>
<status status="PASS" starttime="20201029 18:18:04.209" endtime="20201029 18:18:04.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.204" endtime="20201029 18:18:04.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.858" endtime="20201029 18:18:04.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.835" endtime="20201029 18:18:04.213"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:04.216" endtime="20201029 18:18:04.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.214" endtime="20201029 18:18:04.236"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.244" endtime="20201029 18:18:04.259"></status>
</kw>
<msg timestamp="20201029 18:18:04.259" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:04.243" endtime="20201029 18:18:04.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.262" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:04.260" endtime="20201029 18:18:04.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.263" endtime="20201029 18:18:04.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.240" endtime="20201029 18:18:04.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.238" endtime="20201029 18:18:04.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.272" endtime="20201029 18:18:04.558"></status>
</kw>
<msg timestamp="20201029 18:18:04.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017990833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018044944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:04.270" endtime="20201029 18:18:04.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017990833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018044944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:04.562" endtime="20201029 18:18:04.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.570" endtime="20201029 18:18:04.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.268" endtime="20201029 18:18:04.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.266" endtime="20201029 18:18:04.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:04.577" level="INFO">${PHILIP_RES} = [{'diff': 5.411099999999905e-05}, {'diff': 5.36670000000003e-05}, {'diff': 5.3680000000000394e-05}, {'diff': 5.3680000000000394e-05}, {'diff': 5.363900000000116e-05}, {'diff': 5.365300000000073e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:04.574" endtime="20201029 18:18:04.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:04.582" level="INFO">${RESULT} = {'diff': [5.411099999999905e-05, 5.36670000000003e-05, 5.3680000000000394e-05, 5.3680000000000394e-05, 5.363900000000116e-05, 5.365300000000073e-05, 5.3680000000000394e-05, 5.3666000000000824e-05, 5.3...</msg>
<status status="PASS" starttime="20201029 18:18:04.578" endtime="20201029 18:18:04.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.587" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:04.586" endtime="20201029 18:18:04.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.589" level="INFO">VALUE: [5.411099999999905e-05, 5.36670000000003e-05, 5.3680000000000394e-05, 5.3680000000000394e-05, 5.363900000000116e-05, 5.365300000000073e-05, 5.3680000000000394e-05, 5.3666000000000824e-05, 5.3652000000001254e-05, 5.362499999999812e-05, 5.3652000000001254e-05, 5.362500000000159e-05, 5.3637999999998215e-05, 5.369499999999944e-05, 5.365300000000073e-05, 5.362499999999812e-05, 5.358300000000288e-05, 5.363900000000116e-05, 5.362499999999812e-05, 5.363900000000116e-05, 5.363900000000116e-05, 5.365300000000073e-05, 5.356899999999984e-05, 5.36670000000003e-05, 5.362499999999812e-05, 5.363899999999769e-05, 5.362500000000159e-05, 5.363900000000116e-05, 5.362499999999812e-05, 5.3666000000000824e-05, 5.361099999999855e-05, 5.3665999999997355e-05, 5.362500000000159e-05, 5.362500000000159e-05, 5.363899999999769e-05, 5.3680000000000394e-05, 5.3638000000001684e-05, 5.362499999999812e-05, 5.3666000000000824e-05, 5.363900000000116e-05, 5.363899999999769e-05, 5.36670000000003e-05, 5.362500000000159e-05, 5.365300000000073e-05, 5.363899999999769e-05, 5.363900000000116e-05, 5.370900000000248e-05, 5.36670000000003e-05, 5.363900000000116e-05, 5.363899999999769e-05]</msg>
<status status="PASS" starttime="20201029 18:18:04.588" endtime="20201029 18:18:04.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.583" endtime="20201029 18:18:04.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.236" endtime="20201029 18:18:04.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.214" endtime="20201029 18:18:04.591"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:04.594" endtime="20201029 18:18:04.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.592" endtime="20201029 18:18:04.614"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.622" endtime="20201029 18:18:04.637"></status>
</kw>
<msg timestamp="20201029 18:18:04.637" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:04.621" endtime="20201029 18:18:04.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.640" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:04.638" endtime="20201029 18:18:04.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.641" endtime="20201029 18:18:04.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.618" endtime="20201029 18:18:04.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.616" endtime="20201029 18:18:04.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.651" endtime="20201029 18:18:04.937"></status>
</kw>
<msg timestamp="20201029 18:18:04.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018055472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018111736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:04.649" endtime="20201029 18:18:04.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018055472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018111736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:04.942" endtime="20201029 18:18:04.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.950" endtime="20201029 18:18:04.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.646" endtime="20201029 18:18:04.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.644" endtime="20201029 18:18:04.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:04.957" level="INFO">${PHILIP_RES} = [{'diff': 5.6264000000000314e-05}, {'diff': 5.583300000000166e-05}, {'diff': 5.580500000000252e-05}, {'diff': 5.583400000000113e-05}, {'diff': 5.581900000000209e-05}, {'diff': 5.583400000000113e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:04.954" endtime="20201029 18:18:04.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:04.962" level="INFO">${RESULT} = {'diff': [5.6264000000000314e-05, 5.583300000000166e-05, 5.580500000000252e-05, 5.583400000000113e-05, 5.581900000000209e-05, 5.583400000000113e-05, 5.580600000000199e-05, 5.583400000000113e-05, 5.583...</msg>
<status status="PASS" starttime="20201029 18:18:04.958" endtime="20201029 18:18:04.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.966" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:04.965" endtime="20201029 18:18:04.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.969" level="INFO">VALUE: [5.6264000000000314e-05, 5.583300000000166e-05, 5.580500000000252e-05, 5.583400000000113e-05, 5.581900000000209e-05, 5.583400000000113e-05, 5.580600000000199e-05, 5.583400000000113e-05, 5.583300000000166e-05, 5.583300000000166e-05, 5.5763999999999814e-05, 5.583300000000166e-05, 5.583299999999819e-05, 5.58610000000008e-05, 5.58480000000007e-05, 5.5805999999998523e-05, 5.583400000000113e-05, 5.583300000000166e-05, 5.583300000000166e-05, 5.583299999999819e-05, 5.580499999999905e-05, 5.583299999999819e-05, 5.583300000000166e-05, 5.581999999999809e-05, 5.583399999999766e-05, 5.583399999999766e-05, 5.583299999999819e-05, 5.583299999999819e-05, 5.583299999999819e-05, 5.583299999999819e-05, 5.583299999999819e-05, 5.583299999999819e-05, 5.583300000000166e-05, 5.583400000000113e-05, 5.583299999999819e-05, 5.581899999999862e-05, 5.590299999999951e-05, 5.581900000000209e-05, 5.583400000000113e-05, 5.583300000000166e-05, 5.579200000000242e-05, 5.583400000000113e-05, 5.584700000000123e-05, 5.581900000000209e-05, 5.588899999999994e-05, 5.583300000000166e-05, 5.583300000000166e-05, 5.584700000000123e-05, 5.583300000000166e-05, 5.58480000000007e-05]</msg>
<status status="PASS" starttime="20201029 18:18:04.967" endtime="20201029 18:18:04.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.962" endtime="20201029 18:18:04.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.615" endtime="20201029 18:18:04.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.592" endtime="20201029 18:18:04.971"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:04.973" endtime="20201029 18:18:04.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.972" endtime="20201029 18:18:04.993"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.002" endtime="20201029 18:18:05.016"></status>
</kw>
<msg timestamp="20201029 18:18:05.017" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.000" endtime="20201029 18:18:05.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.019" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.018" endtime="20201029 18:18:05.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.020" endtime="20201029 18:18:05.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.997" endtime="20201029 18:18:05.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.995" endtime="20201029 18:18:05.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.031" endtime="20201029 18:18:05.317"></status>
</kw>
<msg timestamp="20201029 18:18:05.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018459667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018518167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.029" endtime="20201029 18:18:05.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018459667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018518167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.322" endtime="20201029 18:18:05.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.330" endtime="20201029 18:18:05.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.026" endtime="20201029 18:18:05.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.025" endtime="20201029 18:18:05.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:05.337" level="INFO">${PHILIP_RES} = [{'diff': 5.8499999999999525e-05}, {'diff': 5.804100000000173e-05}, {'diff': 5.8042000000001204e-05}, {'diff': 5.80550000000013e-05}, {'diff': 5.7985999999999455e-05}, {'diff': 5.8042000000001204e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:05.334" endtime="20201029 18:18:05.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:05.341" level="INFO">${RESULT} = {'diff': [5.8499999999999525e-05, 5.804100000000173e-05, 5.8042000000001204e-05, 5.80550000000013e-05, 5.7985999999999455e-05, 5.8042000000001204e-05, 5.8070000000000344e-05, 5.8042000000001204e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:18:05.338" endtime="20201029 18:18:05.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.346" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:05.345" endtime="20201029 18:18:05.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.349" level="INFO">VALUE: [5.8499999999999525e-05, 5.804100000000173e-05, 5.8042000000001204e-05, 5.80550000000013e-05, 5.7985999999999455e-05, 5.8042000000001204e-05, 5.8070000000000344e-05, 5.8042000000001204e-05, 5.8028000000001634e-05, 5.8042000000001204e-05, 5.8042000000001204e-05, 5.811100000000305e-05, 5.7985999999999455e-05, 5.8042000000001204e-05, 5.8027999999998164e-05, 5.8041999999997734e-05, 5.8041999999997734e-05, 5.8041999999997734e-05, 5.811099999999958e-05, 5.8056000000000774e-05, 5.8027999999998164e-05, 5.8069999999996874e-05, 5.8027999999998164e-05, 5.8041999999997734e-05, 5.805499999999783e-05, 5.8041999999997734e-05, 5.805499999999783e-05, 5.8041999999997734e-05, 5.804099999999826e-05, 5.8055999999997304e-05, 5.804099999999826e-05, 5.8055999999997304e-05, 5.804099999999826e-05, 5.8041999999997734e-05, 5.809700000000001e-05, 5.8041999999997734e-05, 5.8013999999998594e-05, 5.8027999999998164e-05, 5.804100000000173e-05, 5.8056000000000774e-05, 5.804099999999826e-05, 5.7999999999999025e-05, 5.805499999999783e-05, 5.809700000000001e-05, 5.804100000000173e-05, 5.8042000000001204e-05, 5.8028000000001634e-05, 5.8070000000000344e-05, 5.80550000000013e-05, 5.8042000000001204e-05]</msg>
<status status="PASS" starttime="20201029 18:18:05.347" endtime="20201029 18:18:05.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.342" endtime="20201029 18:18:05.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.994" endtime="20201029 18:18:05.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.971" endtime="20201029 18:18:05.352"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:05.354" endtime="20201029 18:18:05.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.352" endtime="20201029 18:18:05.374"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.382" endtime="20201029 18:18:05.397"></status>
</kw>
<msg timestamp="20201029 18:18:05.398" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.381" endtime="20201029 18:18:05.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.400" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.399" endtime="20201029 18:18:05.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.401" endtime="20201029 18:18:05.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.378" endtime="20201029 18:18:05.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.376" endtime="20201029 18:18:05.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.411" endtime="20201029 18:18:05.700"></status>
</kw>
<msg timestamp="20201029 18:18:05.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018039694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018100514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.409" endtime="20201029 18:18:05.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018039694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018100514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.705" endtime="20201029 18:18:05.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.713" endtime="20201029 18:18:05.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.407" endtime="20201029 18:18:05.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.405" endtime="20201029 18:18:05.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:05.720" level="INFO">${PHILIP_RES} = [{'diff': 6.0820000000003094e-05}, {'diff': 6.034699999999879e-05}, {'diff': 6.0291999999999984e-05}, {'diff': 6.0305999999999554e-05}, {'diff': 6.0291999999999984e-05}, {'diff': 6.0305999999999554e-0...</msg>
<status status="PASS" starttime="20201029 18:18:05.716" endtime="20201029 18:18:05.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:05.725" level="INFO">${RESULT} = {'diff': [6.0820000000003094e-05, 6.034699999999879e-05, 6.0291999999999984e-05, 6.0305999999999554e-05, 6.0291999999999984e-05, 6.0305999999999554e-05, 6.029100000000051e-05, 6.0291999999999984e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:05.721" endtime="20201029 18:18:05.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.729" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:05.728" endtime="20201029 18:18:05.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.731" level="INFO">VALUE: [6.0820000000003094e-05, 6.034699999999879e-05, 6.0291999999999984e-05, 6.0305999999999554e-05, 6.0291999999999984e-05, 6.0305999999999554e-05, 6.029100000000051e-05, 6.0291999999999984e-05, 6.030500000000008e-05, 6.0264000000000845e-05, 6.0291999999999984e-05, 6.029100000000051e-05, 6.030500000000008e-05, 6.0291999999999984e-05, 6.020900000000204e-05, 6.030500000000008e-05, 6.030500000000008e-05, 6.029100000000051e-05, 6.0250000000001275e-05, 6.0277999999996945e-05, 6.027700000000094e-05, 6.029100000000051e-05, 6.030500000000008e-05, 6.031899999999965e-05, 6.036100000000183e-05, 6.029100000000051e-05, 6.030500000000008e-05, 6.029100000000051e-05, 6.027700000000094e-05, 6.029100000000051e-05, 6.027700000000094e-05, 6.0221999999998665e-05, 6.030500000000008e-05, 6.029099999999704e-05, 6.031899999999965e-05, 6.030500000000008e-05, 6.029100000000051e-05, 6.031899999999965e-05, 6.030500000000008e-05, 6.029099999999704e-05, 6.029099999999704e-05, 6.029100000000051e-05, 6.030500000000008e-05, 6.029100000000051e-05, 6.030500000000008e-05, 6.033300000000269e-05, 6.031900000000312e-05, 6.030500000000008e-05, 6.029100000000051e-05, 6.030500000000008e-05]</msg>
<status status="PASS" starttime="20201029 18:18:05.730" endtime="20201029 18:18:05.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.725" endtime="20201029 18:18:05.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.375" endtime="20201029 18:18:05.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.352" endtime="20201029 18:18:05.733"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:05.736" endtime="20201029 18:18:05.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.734" endtime="20201029 18:18:05.756"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.764" endtime="20201029 18:18:05.779"></status>
</kw>
<msg timestamp="20201029 18:18:05.779" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.762" endtime="20201029 18:18:05.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.782" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.780" endtime="20201029 18:18:05.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.783" endtime="20201029 18:18:05.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.760" endtime="20201029 18:18:05.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.758" endtime="20201029 18:18:05.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.792" endtime="20201029 18:18:06.080"></status>
</kw>
<msg timestamp="20201029 18:18:06.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017844139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017907125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.790" endtime="20201029 18:18:06.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017844139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017907125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:06.084" endtime="20201029 18:18:06.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.092" endtime="20201029 18:18:06.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.788" endtime="20201029 18:18:06.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.786" endtime="20201029 18:18:06.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:06.099" level="INFO">${PHILIP_RES} = [{'diff': 6.298600000000099e-05}, {'diff': 6.256899999999843e-05}, {'diff': 6.257000000000137e-05}, {'diff': 6.25699999999979e-05}, {'diff': 6.256899999999843e-05}, {'diff': 6.256899999999843e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:06.096" endtime="20201029 18:18:06.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:06.103" level="INFO">${RESULT} = {'diff': [6.298600000000099e-05, 6.256899999999843e-05, 6.257000000000137e-05, 6.25699999999979e-05, 6.256899999999843e-05, 6.256899999999843e-05, 6.254099999999929e-05, 6.254100000000276e-05, 6.25419...</msg>
<status status="PASS" starttime="20201029 18:18:06.100" endtime="20201029 18:18:06.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.108" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:06.106" endtime="20201029 18:18:06.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.110" level="INFO">VALUE: [6.298600000000099e-05, 6.256899999999843e-05, 6.257000000000137e-05, 6.25699999999979e-05, 6.256899999999843e-05, 6.256899999999843e-05, 6.254099999999929e-05, 6.254100000000276e-05, 6.254199999999877e-05, 6.265299999999932e-05, 6.255499999999886e-05, 6.258300000000147e-05, 6.256899999999843e-05, 6.255599999999834e-05, 6.257000000000137e-05, 6.255599999999834e-05, 6.255500000000233e-05, 6.262500000000018e-05, 6.255500000000233e-05, 6.255599999999834e-05, 6.258400000000094e-05, 6.258300000000147e-05, 6.251399999999963e-05, 6.261100000000061e-05, 6.254099999999929e-05, 6.258400000000094e-05, 6.25279999999992e-05, 6.256899999999843e-05, 6.255499999999886e-05, 6.256899999999843e-05, 6.258300000000147e-05, 6.255599999999834e-05, 6.257000000000137e-05, 6.255499999999886e-05, 6.256899999999843e-05, 6.25690000000019e-05, 6.25279999999992e-05, 6.258400000000094e-05, 6.255599999999834e-05, 6.258300000000147e-05, 6.256899999999843e-05, 6.251399999999963e-05, 6.261100000000061e-05, 6.254199999999877e-05, 6.252800000000266e-05, 6.251399999999963e-05, 6.258300000000147e-05, 6.255599999999834e-05, 6.252699999999972e-05, 6.254199999999877e-05]</msg>
<status status="PASS" starttime="20201029 18:18:06.109" endtime="20201029 18:18:06.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.104" endtime="20201029 18:18:06.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.756" endtime="20201029 18:18:06.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.734" endtime="20201029 18:18:06.112"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:06.114" endtime="20201029 18:18:06.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.113" endtime="20201029 18:18:06.134"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.142" endtime="20201029 18:18:06.157"></status>
</kw>
<msg timestamp="20201029 18:18:06.157" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.141" endtime="20201029 18:18:06.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.160" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.158" endtime="20201029 18:18:06.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.161" endtime="20201029 18:18:06.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.138" endtime="20201029 18:18:06.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.136" endtime="20201029 18:18:06.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.171" endtime="20201029 18:18:06.476"></status>
</kw>
<msg timestamp="20201029 18:18:06.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017710194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0177755, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:06.169" endtime="20201029 18:18:06.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017710194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0177755, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:06.481" endtime="20201029 18:18:06.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.489" endtime="20201029 18:18:06.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.167" endtime="20201029 18:18:06.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.165" endtime="20201029 18:18:06.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:06.496" level="INFO">${PHILIP_RES} = [{'diff': 6.530600000000109e-05}, {'diff': 6.48479999999993e-05}, {'diff': 6.486099999999939e-05}, {'diff': 6.484699999999982e-05}, {'diff': 6.487499999999896e-05}, {'diff': 6.486099999999939e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:06.492" endtime="20201029 18:18:06.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:06.500" level="INFO">${RESULT} = {'diff': [6.530600000000109e-05, 6.48479999999993e-05, 6.486099999999939e-05, 6.484699999999982e-05, 6.487499999999896e-05, 6.486099999999939e-05, 6.488799999999906e-05, 6.486100000000286e-05, 6.48750...</msg>
<status status="PASS" starttime="20201029 18:18:06.497" endtime="20201029 18:18:06.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.504" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:06.503" endtime="20201029 18:18:06.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.507" level="INFO">VALUE: [6.530600000000109e-05, 6.48479999999993e-05, 6.486099999999939e-05, 6.484699999999982e-05, 6.487499999999896e-05, 6.486099999999939e-05, 6.488799999999906e-05, 6.486100000000286e-05, 6.487500000000243e-05, 6.487499999999896e-05, 6.486099999999939e-05, 6.487499999999896e-05, 6.487499999999896e-05, 6.481899999999721e-05, 6.484699999999982e-05, 6.483299999999678e-05, 6.49159999999982e-05, 6.487499999999896e-05, 6.488899999999853e-05, 6.483300000000025e-05, 6.488899999999853e-05, 6.487499999999896e-05, 6.487499999999896e-05, 6.486100000000286e-05, 6.486099999999939e-05, 6.48479999999993e-05, 6.486199999999887e-05, 6.487499999999896e-05, 6.49029999999981e-05, 6.487499999999896e-05, 6.487500000000243e-05, 6.487500000000243e-05, 6.482000000000016e-05, 6.483300000000025e-05, 6.487499999999896e-05, 6.487499999999896e-05, 6.484699999999982e-05, 6.487499999999896e-05, 6.483299999999678e-05, 6.487500000000243e-05, 6.486199999999887e-05, 6.487499999999896e-05, 6.486099999999939e-05, 6.487499999999896e-05, 6.484699999999982e-05, 6.48479999999993e-05, 6.487500000000243e-05, 6.486100000000286e-05, 6.486099999999939e-05, 6.487499999999896e-05]</msg>
<status status="PASS" starttime="20201029 18:18:06.505" endtime="20201029 18:18:06.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.501" endtime="20201029 18:18:06.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.135" endtime="20201029 18:18:06.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.112" endtime="20201029 18:18:06.509"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:06.512" endtime="20201029 18:18:06.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.510" endtime="20201029 18:18:06.532"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.540" endtime="20201029 18:18:06.555"></status>
</kw>
<msg timestamp="20201029 18:18:06.556" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.538" endtime="20201029 18:18:06.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.558" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.557" endtime="20201029 18:18:06.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.559" endtime="20201029 18:18:06.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.536" endtime="20201029 18:18:06.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.534" endtime="20201029 18:18:06.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.569" endtime="20201029 18:18:06.854"></status>
</kw>
<msg timestamp="20201029 18:18:06.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017744194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017811819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:06.567" endtime="20201029 18:18:06.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017744194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017811819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:06.858" endtime="20201029 18:18:06.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.866" endtime="20201029 18:18:06.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.564" endtime="20201029 18:18:06.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.563" endtime="20201029 18:18:06.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:06.873" level="INFO">${PHILIP_RES} = [{'diff': 6.762499999999824e-05}, {'diff': 6.713800000000131e-05}, {'diff': 6.719499999999906e-05}, {'diff': 6.719399999999959e-05}, {'diff': 6.718000000000002e-05}, {'diff': 6.719399999999959e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:06.870" endtime="20201029 18:18:06.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:06.878" level="INFO">${RESULT} = {'diff': [6.762499999999824e-05, 6.713800000000131e-05, 6.719499999999906e-05, 6.719399999999959e-05, 6.718000000000002e-05, 6.719399999999959e-05, 6.719400000000306e-05, 6.718000000000002e-05, 6.7153...</msg>
<status status="PASS" starttime="20201029 18:18:06.874" endtime="20201029 18:18:06.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.882" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:06.881" endtime="20201029 18:18:06.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.885" level="INFO">VALUE: [6.762499999999824e-05, 6.713800000000131e-05, 6.719499999999906e-05, 6.719399999999959e-05, 6.718000000000002e-05, 6.719399999999959e-05, 6.719400000000306e-05, 6.718000000000002e-05, 6.715300000000035e-05, 6.719399999999959e-05, 6.716699999999992e-05, 6.72640000000009e-05, 6.718100000000296e-05, 6.719399999999959e-05, 6.716699999999992e-05, 6.719499999999906e-05, 6.719499999999906e-05, 6.718099999999949e-05, 6.719499999999906e-05, 6.720899999999863e-05, 6.719499999999906e-05, 6.720799999999916e-05, 6.718000000000002e-05, 6.720799999999916e-05, 6.718000000000002e-05, 6.725000000000134e-05, 6.720799999999916e-05, 6.72640000000009e-05, 6.718000000000002e-05, 6.719399999999959e-05, 6.719399999999959e-05, 6.718099999999949e-05, 6.719499999999906e-05, 6.718099999999949e-05, 6.720899999999863e-05, 6.719499999999906e-05, 6.719499999999906e-05, 6.72359999999983e-05, 6.719499999999906e-05, 6.718099999999949e-05, 6.719399999999959e-05, 6.713800000000131e-05, 6.718000000000002e-05, 6.719399999999959e-05, 6.718000000000002e-05, 6.719399999999959e-05, 6.719399999999959e-05, 6.719399999999959e-05, 6.720799999999916e-05, 6.712500000000121e-05]</msg>
<status status="PASS" starttime="20201029 18:18:06.883" endtime="20201029 18:18:06.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.879" endtime="20201029 18:18:06.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.532" endtime="20201029 18:18:06.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.510" endtime="20201029 18:18:06.887"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:06.889" endtime="20201029 18:18:06.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.888" endtime="20201029 18:18:06.909"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.917" endtime="20201029 18:18:06.933"></status>
</kw>
<msg timestamp="20201029 18:18:06.933" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.916" endtime="20201029 18:18:06.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.936" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.934" endtime="20201029 18:18:06.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.937" endtime="20201029 18:18:06.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.913" endtime="20201029 18:18:06.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.911" endtime="20201029 18:18:06.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.946" endtime="20201029 18:18:07.234"></status>
</kw>
<msg timestamp="20201029 18:18:07.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017826431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017896431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:06.944" endtime="20201029 18:18:07.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017826431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017896431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.239" endtime="20201029 18:18:07.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.247" endtime="20201029 18:18:07.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.942" endtime="20201029 18:18:07.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.940" endtime="20201029 18:18:07.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:07.254" level="INFO">${PHILIP_RES} = [{'diff': 7.000000000000062e-05}, {'diff': 6.956899999999849e-05}, {'diff': 6.952799999999926e-05}, {'diff': 6.955499999999892e-05}, {'diff': 6.956999999999797e-05}, {'diff': 6.956899999999849e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:07.250" endtime="20201029 18:18:07.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:07.258" level="INFO">${RESULT} = {'diff': [7.000000000000062e-05, 6.956899999999849e-05, 6.952799999999926e-05, 6.955499999999892e-05, 6.956999999999797e-05, 6.956899999999849e-05, 6.956999999999797e-05, 6.956899999999849e-05, 6.9569...</msg>
<status status="PASS" starttime="20201029 18:18:07.255" endtime="20201029 18:18:07.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.262" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:07.261" endtime="20201029 18:18:07.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.265" level="INFO">VALUE: [7.000000000000062e-05, 6.956899999999849e-05, 6.952799999999926e-05, 6.955499999999892e-05, 6.956999999999797e-05, 6.956899999999849e-05, 6.956999999999797e-05, 6.956899999999849e-05, 6.956999999999797e-05, 6.95559999999984e-05, 6.955499999999892e-05, 6.95559999999984e-05, 6.952799999999926e-05, 6.954199999999883e-05, 6.955499999999892e-05, 6.955600000000187e-05, 6.956900000000196e-05, 6.955600000000187e-05, 6.959699999999763e-05, 6.9584000000001e-05, 6.954099999999935e-05, 6.957000000000144e-05, 6.956900000000196e-05, 6.955600000000187e-05, 6.955600000000187e-05, 6.954199999999883e-05, 6.955600000000187e-05, 6.955499999999892e-05, 6.954199999999883e-05, 6.954099999999935e-05, 6.95559999999984e-05, 6.956899999999849e-05, 6.95559999999984e-05, 6.955499999999892e-05, 6.954199999999883e-05, 6.956899999999849e-05, 6.95559999999984e-05, 6.958299999999806e-05, 6.955499999999892e-05, 6.954199999999883e-05, 6.959800000000058e-05, 6.95559999999984e-05, 6.951399999999969e-05, 6.955600000000187e-05, 6.956900000000196e-05, 6.955600000000187e-05, 6.956900000000196e-05, 6.955600000000187e-05, 6.955500000000239e-05, 6.957000000000144e-05]</msg>
<status status="PASS" starttime="20201029 18:18:07.263" endtime="20201029 18:18:07.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.259" endtime="20201029 18:18:07.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.910" endtime="20201029 18:18:07.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.887" endtime="20201029 18:18:07.266"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:07.269" endtime="20201029 18:18:07.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.267" endtime="20201029 18:18:07.289"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.297" endtime="20201029 18:18:07.313"></status>
</kw>
<msg timestamp="20201029 18:18:07.314" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.295" endtime="20201029 18:18:07.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.316" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.315" endtime="20201029 18:18:07.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.317" endtime="20201029 18:18:07.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.293" endtime="20201029 18:18:07.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.291" endtime="20201029 18:18:07.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.327" endtime="20201029 18:18:07.614"></status>
</kw>
<msg timestamp="20201029 18:18:07.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017681347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017753792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.326" endtime="20201029 18:18:07.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017681347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017753792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.620" endtime="20201029 18:18:07.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.628" endtime="20201029 18:18:07.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.323" endtime="20201029 18:18:07.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.321" endtime="20201029 18:18:07.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:07.634" level="INFO">${PHILIP_RES} = [{'diff': 7.244500000000084e-05}, {'diff': 7.200000000000262e-05}, {'diff': 7.19439999999974e-05}, {'diff': 7.198699999999905e-05}, {'diff': 7.190300000000163e-05}, {'diff': 7.186199999999893e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:07.631" endtime="20201029 18:18:07.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:07.639" level="INFO">${RESULT} = {'diff': [7.244500000000084e-05, 7.200000000000262e-05, 7.19439999999974e-05, 7.198699999999905e-05, 7.190300000000163e-05, 7.186199999999893e-05, 7.191599999999826e-05, 7.194400000000087e-05, 7.19300...</msg>
<status status="PASS" starttime="20201029 18:18:07.635" endtime="20201029 18:18:07.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.643" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:07.642" endtime="20201029 18:18:07.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.645" level="INFO">VALUE: [7.244500000000084e-05, 7.200000000000262e-05, 7.19439999999974e-05, 7.198699999999905e-05, 7.190300000000163e-05, 7.186199999999893e-05, 7.191599999999826e-05, 7.194400000000087e-05, 7.19300000000013e-05, 7.193100000000077e-05, 7.191699999999773e-05, 7.193100000000077e-05, 7.19300000000013e-05, 7.19300000000013e-05, 7.194400000000087e-05, 7.19309999999973e-05, 7.194500000000034e-05, 7.198599999999958e-05, 7.195800000000044e-05, 7.187499999999902e-05, 7.193100000000077e-05, 7.187499999999902e-05, 7.193100000000077e-05, 7.19439999999974e-05, 7.19300000000013e-05, 7.194400000000087e-05, 7.194500000000034e-05, 7.198600000000305e-05, 7.194500000000034e-05, 7.190200000000216e-05, 7.195800000000044e-05, 7.19439999999974e-05, 7.19309999999973e-05, 7.193100000000077e-05, 7.187499999999902e-05, 7.188899999999859e-05, 7.194400000000087e-05, 7.193100000000077e-05, 7.199999999999915e-05, 7.194500000000034e-05, 7.194500000000034e-05, 7.195800000000044e-05, 7.195800000000044e-05, 7.19439999999974e-05, 7.198599999999958e-05, 7.186099999999945e-05, 7.19170000000012e-05, 7.195800000000044e-05, 7.192999999999783e-05, 7.194500000000034e-05]</msg>
<status status="PASS" starttime="20201029 18:18:07.644" endtime="20201029 18:18:07.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.639" endtime="20201029 18:18:07.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.289" endtime="20201029 18:18:07.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.267" endtime="20201029 18:18:07.648"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:07.650" endtime="20201029 18:18:07.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.649" endtime="20201029 18:18:07.670"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.678" endtime="20201029 18:18:07.694"></status>
</kw>
<msg timestamp="20201029 18:18:07.695" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.677" endtime="20201029 18:18:07.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.697" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.696" endtime="20201029 18:18:07.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.698" endtime="20201029 18:18:07.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.674" endtime="20201029 18:18:07.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.672" endtime="20201029 18:18:07.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.708" endtime="20201029 18:18:07.993"></status>
</kw>
<msg timestamp="20201029 18:18:07.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017677514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017752292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.706" endtime="20201029 18:18:07.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017677514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017752292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.998" endtime="20201029 18:18:08.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.006" endtime="20201029 18:18:08.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.703" endtime="20201029 18:18:08.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.702" endtime="20201029 18:18:08.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:08.013" level="INFO">${PHILIP_RES} = [{'diff': 7.477800000000104e-05}, {'diff': 7.434699999999891e-05}, {'diff': 7.431999999999925e-05}, {'diff': 7.434700000000238e-05}, {'diff': 7.433400000000229e-05}, {'diff': 7.436099999999848e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:08.010" endtime="20201029 18:18:08.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:08.019" level="INFO">${RESULT} = {'diff': [7.477800000000104e-05, 7.434699999999891e-05, 7.431999999999925e-05, 7.434700000000238e-05, 7.433400000000229e-05, 7.436099999999848e-05, 7.434700000000238e-05, 7.434699999999891e-05, 7.4374...</msg>
<status status="PASS" starttime="20201029 18:18:08.014" endtime="20201029 18:18:08.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.023" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:08.022" endtime="20201029 18:18:08.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.026" level="INFO">VALUE: [7.477800000000104e-05, 7.434699999999891e-05, 7.431999999999925e-05, 7.434700000000238e-05, 7.433400000000229e-05, 7.436099999999848e-05, 7.434700000000238e-05, 7.434699999999891e-05, 7.437499999999805e-05, 7.436100000000195e-05, 7.434799999999839e-05, 7.434799999999839e-05, 7.440300000000066e-05, 7.437499999999805e-05, 7.436099999999848e-05, 7.436100000000195e-05, 7.433399999999882e-05, 7.433299999999934e-05, 7.434700000000238e-05, 7.43050000000002e-05, 7.438899999999762e-05, 7.427700000000106e-05, 7.434699999999891e-05, 7.436099999999848e-05, 7.431899999999977e-05, 7.437499999999805e-05, 7.437500000000152e-05, 7.434700000000238e-05, 7.436099999999848e-05, 7.436100000000195e-05, 7.434700000000238e-05, 7.429200000000011e-05, 7.441699999999676e-05, 7.434699999999891e-05, 7.437499999999805e-05, 7.434699999999891e-05, 7.434700000000238e-05, 7.431899999999977e-05, 7.437500000000152e-05, 7.432000000000272e-05, 7.434699999999891e-05, 7.437500000000152e-05, 7.437500000000152e-05, 7.434699999999891e-05, 7.433400000000229e-05, 7.437500000000152e-05, 7.434799999999839e-05, 7.437500000000152e-05, 7.434800000000186e-05, 7.434799999999839e-05]</msg>
<status status="PASS" starttime="20201029 18:18:08.024" endtime="20201029 18:18:08.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.020" endtime="20201029 18:18:08.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.671" endtime="20201029 18:18:08.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.648" endtime="20201029 18:18:08.034"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:08.036" endtime="20201029 18:18:08.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.035" endtime="20201029 18:18:08.056"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.064" endtime="20201029 18:18:08.081"></status>
</kw>
<msg timestamp="20201029 18:18:08.081" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.063" endtime="20201029 18:18:08.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.084" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.082" endtime="20201029 18:18:08.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.085" endtime="20201029 18:18:08.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.060" endtime="20201029 18:18:08.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.058" endtime="20201029 18:18:08.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.095" endtime="20201029 18:18:08.381"></status>
</kw>
<msg timestamp="20201029 18:18:08.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017694861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017772097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.093" endtime="20201029 18:18:08.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017694861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017772097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.386" endtime="20201029 18:18:08.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.394" endtime="20201029 18:18:08.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.090" endtime="20201029 18:18:08.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.088" endtime="20201029 18:18:08.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:08.401" level="INFO">${PHILIP_RES} = [{'diff': 7.723600000000136e-05}, {'diff': 7.680499999999923e-05}, {'diff': 7.6764e-05}, {'diff': 7.675000000000043e-05}, {'diff': 7.677799999999957e-05}, {'diff': 7.679099999999967e-05}, {'diff': 7.6...</msg>
<status status="PASS" starttime="20201029 18:18:08.397" endtime="20201029 18:18:08.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:08.405" level="INFO">${RESULT} = {'diff': [7.723600000000136e-05, 7.680499999999923e-05, 7.6764e-05, 7.675000000000043e-05, 7.677799999999957e-05, 7.679099999999967e-05, 7.67770000000001e-05, 7.6764e-05, 7.677799999999957e-05, 7.6764...</msg>
<status status="PASS" starttime="20201029 18:18:08.402" endtime="20201029 18:18:08.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.409" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:08.408" endtime="20201029 18:18:08.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.412" level="INFO">VALUE: [7.723600000000136e-05, 7.680499999999923e-05, 7.6764e-05, 7.675000000000043e-05, 7.677799999999957e-05, 7.679099999999967e-05, 7.67770000000001e-05, 7.6764e-05, 7.677799999999957e-05, 7.6764e-05, 7.679199999999914e-05, 7.677699999999663e-05, 7.680499999999923e-05, 7.679199999999914e-05, 7.677799999999957e-05, 7.679199999999914e-05, 7.680499999999923e-05, 7.676300000000053e-05, 7.683299999999837e-05, 7.679199999999914e-05, 7.680599999999871e-05, 7.679199999999914e-05, 7.679100000000313e-05, 7.679099999999967e-05, 7.677799999999957e-05, 7.686100000000098e-05, 7.681999999999828e-05, 7.677799999999957e-05, 7.68189999999988e-05, 7.679099999999967e-05, 7.683400000000132e-05, 7.680599999999871e-05, 7.677799999999957e-05, 7.679200000000261e-05, 7.676300000000053e-05, 7.679099999999967e-05, 7.679200000000261e-05, 7.677799999999957e-05, 7.67229999999973e-05, 7.677799999999957e-05, 7.679099999999967e-05, 7.679200000000261e-05, 7.680599999999871e-05, 7.683299999999837e-05, 7.683300000000184e-05, 7.670800000000172e-05, 7.6764e-05, 7.6764e-05, 7.672200000000129e-05, 7.677799999999957e-05]</msg>
<status status="PASS" starttime="20201029 18:18:08.410" endtime="20201029 18:18:08.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.406" endtime="20201029 18:18:08.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.057" endtime="20201029 18:18:08.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.034" endtime="20201029 18:18:08.414"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:08.417" endtime="20201029 18:18:08.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.415" endtime="20201029 18:18:08.438"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.447" endtime="20201029 18:18:08.464"></status>
</kw>
<msg timestamp="20201029 18:18:08.464" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.445" endtime="20201029 18:18:08.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.468" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.466" endtime="20201029 18:18:08.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.469" endtime="20201029 18:18:08.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.443" endtime="20201029 18:18:08.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.441" endtime="20201029 18:18:08.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.482" endtime="20201029 18:18:08.765"></status>
</kw>
<msg timestamp="20201029 18:18:08.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019441194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019520917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.480" endtime="20201029 18:18:08.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019441194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019520917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.769" endtime="20201029 18:18:08.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.777" endtime="20201029 18:18:08.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.478" endtime="20201029 18:18:08.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.475" endtime="20201029 18:18:08.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:08.784" level="INFO">${PHILIP_RES} = [{'diff': 7.97230000000003e-05}, {'diff': 7.924999999999946e-05}, {'diff': 7.924999999999946e-05}, {'diff': 7.92770000000026e-05}, {'diff': 7.923599999999989e-05}, {'diff': 7.927699999999913e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:08.781" endtime="20201029 18:18:08.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:08.788" level="INFO">${RESULT} = {'diff': [7.97230000000003e-05, 7.924999999999946e-05, 7.924999999999946e-05, 7.92770000000026e-05, 7.923599999999989e-05, 7.927699999999913e-05, 7.92779999999986e-05, 7.926399999999903e-05, 7.9208000...</msg>
<status status="PASS" starttime="20201029 18:18:08.785" endtime="20201029 18:18:08.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.792" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:08.791" endtime="20201029 18:18:08.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.794" level="INFO">VALUE: [7.97230000000003e-05, 7.924999999999946e-05, 7.924999999999946e-05, 7.92770000000026e-05, 7.923599999999989e-05, 7.927699999999913e-05, 7.92779999999986e-05, 7.926399999999903e-05, 7.920800000000075e-05, 7.92779999999986e-05, 7.924999999999946e-05, 7.926399999999903e-05, 7.927800000000207e-05, 7.927800000000207e-05, 7.926399999999903e-05, 7.926399999999903e-05, 7.933400000000035e-05, 7.92640000000025e-05, 7.927800000000207e-05, 7.92779999999986e-05, 7.933300000000088e-05, 7.926399999999903e-05, 7.92770000000026e-05, 7.922200000000032e-05, 7.924999999999946e-05, 7.924999999999946e-05, 7.918099999999761e-05, 7.923599999999989e-05, 7.924999999999946e-05, 7.923599999999989e-05, 7.926399999999903e-05, 7.919399999999771e-05, 7.927800000000207e-05, 7.926399999999903e-05, 7.923599999999989e-05, 7.926399999999903e-05, 7.93190000000013e-05, 7.927800000000207e-05, 7.924999999999946e-05, 7.926399999999903e-05, 7.926399999999903e-05, 7.919399999999771e-05, 7.926399999999903e-05, 7.926299999999956e-05, 7.919399999999771e-05, 7.924999999999946e-05, 7.929199999999817e-05, 7.924999999999946e-05, 7.924999999999946e-05, 7.926399999999903e-05]</msg>
<status status="PASS" starttime="20201029 18:18:08.793" endtime="20201029 18:18:08.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.789" endtime="20201029 18:18:08.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.439" endtime="20201029 18:18:08.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.414" endtime="20201029 18:18:08.797"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:08.800" endtime="20201029 18:18:08.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.798" endtime="20201029 18:18:08.820"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.828" endtime="20201029 18:18:08.844"></status>
</kw>
<msg timestamp="20201029 18:18:08.844" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.826" endtime="20201029 18:18:08.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.847" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.845" endtime="20201029 18:18:08.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.848" endtime="20201029 18:18:08.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.823" endtime="20201029 18:18:08.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.822" endtime="20201029 18:18:08.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.857" endtime="20201029 18:18:09.144"></status>
</kw>
<msg timestamp="20201029 18:18:09.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017554889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017637083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.855" endtime="20201029 18:18:09.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017554889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017637083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.153" endtime="20201029 18:18:09.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.171" endtime="20201029 18:18:09.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.853" endtime="20201029 18:18:09.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.851" endtime="20201029 18:18:09.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:09.185" level="INFO">${PHILIP_RES} = [{'diff': 8.219400000000071e-05}, {'diff': 8.177700000000163e-05}, {'diff': 8.169400000000021e-05}, {'diff': 8.172199999999935e-05}, {'diff': 8.175000000000196e-05}, {'diff': 8.174999999999849e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:09.178" endtime="20201029 18:18:09.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:09.195" level="INFO">${RESULT} = {'diff': [8.219400000000071e-05, 8.177700000000163e-05, 8.169400000000021e-05, 8.172199999999935e-05, 8.175000000000196e-05, 8.174999999999849e-05, 8.180600000000024e-05, 8.175000000000196e-05, 8.1791...</msg>
<status status="PASS" starttime="20201029 18:18:09.187" endtime="20201029 18:18:09.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.204" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:09.202" endtime="20201029 18:18:09.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.209" level="INFO">VALUE: [8.219400000000071e-05, 8.177700000000163e-05, 8.169400000000021e-05, 8.172199999999935e-05, 8.175000000000196e-05, 8.174999999999849e-05, 8.180600000000024e-05, 8.175000000000196e-05, 8.17919999999972e-05, 8.173599999999892e-05, 8.176400000000153e-05, 8.174999999999849e-05, 8.173599999999892e-05, 8.175000000000196e-05, 8.174999999999849e-05, 8.173599999999892e-05, 8.172199999999935e-05, 8.176399999999806e-05, 8.174999999999849e-05, 8.176400000000153e-05, 8.174999999999849e-05, 8.17780000000011e-05, 8.173599999999892e-05, 8.18329999999999e-05, 8.175000000000196e-05, 8.179099999999773e-05, 8.174999999999849e-05, 8.175000000000196e-05, 8.176299999999859e-05, 8.172299999999882e-05, 8.169400000000021e-05, 8.174999999999849e-05, 8.173599999999892e-05, 8.176400000000153e-05, 8.176399999999806e-05, 8.172199999999935e-05, 8.17780000000011e-05, 8.173599999999892e-05, 8.172199999999935e-05, 8.172299999999882e-05, 8.174999999999849e-05, 8.174999999999849e-05, 8.180500000000077e-05, 8.173599999999892e-05, 8.183399999999938e-05, 8.176400000000153e-05, 8.170799999999978e-05, 8.179200000000067e-05, 8.176400000000153e-05, 8.17919999999972e-05]</msg>
<status status="PASS" starttime="20201029 18:18:09.206" endtime="20201029 18:18:09.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.197" endtime="20201029 18:18:09.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.820" endtime="20201029 18:18:09.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.798" endtime="20201029 18:18:09.213"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:09.218" endtime="20201029 18:18:09.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.215" endtime="20201029 18:18:09.240"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.248" endtime="20201029 18:18:09.266"></status>
</kw>
<msg timestamp="20201029 18:18:09.266" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.247" endtime="20201029 18:18:09.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.269" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.267" endtime="20201029 18:18:09.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.270" endtime="20201029 18:18:09.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.244" endtime="20201029 18:18:09.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.242" endtime="20201029 18:18:09.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.279" endtime="20201029 18:18:09.564"></status>
</kw>
<msg timestamp="20201029 18:18:09.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018846236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018930972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.277" endtime="20201029 18:18:09.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018846236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018930972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.569" endtime="20201029 18:18:09.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.577" endtime="20201029 18:18:09.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.275" endtime="20201029 18:18:09.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.273" endtime="20201029 18:18:09.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:09.583" level="INFO">${PHILIP_RES} = [{'diff': 8.473600000000192e-05}, {'diff': 8.42919999999997e-05}, {'diff': 8.426400000000056e-05}, {'diff': 8.427800000000013e-05}, {'diff': 8.427700000000066e-05}, {'diff': 8.427800000000013e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:09.580" endtime="20201029 18:18:09.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:09.587" level="INFO">${RESULT} = {'diff': [8.473600000000192e-05, 8.42919999999997e-05, 8.426400000000056e-05, 8.427800000000013e-05, 8.427700000000066e-05, 8.427800000000013e-05, 8.433299999999894e-05, 8.420800000000228e-05, 8.42780...</msg>
<status status="PASS" starttime="20201029 18:18:09.584" endtime="20201029 18:18:09.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.592" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:09.591" endtime="20201029 18:18:09.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.594" level="INFO">VALUE: [8.473600000000192e-05, 8.42919999999997e-05, 8.426400000000056e-05, 8.427800000000013e-05, 8.427700000000066e-05, 8.427800000000013e-05, 8.433299999999894e-05, 8.420800000000228e-05, 8.427800000000013e-05, 8.42919999999997e-05, 8.43049999999998e-05, 8.426400000000056e-05, 8.42919999999997e-05, 8.427800000000013e-05, 8.430599999999927e-05, 8.429100000000023e-05, 8.427700000000066e-05, 8.42919999999997e-05, 8.427799999999666e-05, 8.427800000000013e-05, 8.427800000000013e-05, 8.427700000000066e-05, 8.42919999999997e-05, 8.42919999999997e-05, 8.427800000000013e-05, 8.427800000000013e-05, 8.427699999999719e-05, 8.427700000000066e-05, 8.429100000000023e-05, 8.42919999999997e-05, 8.42919999999997e-05, 8.429100000000023e-05, 8.427700000000066e-05, 8.427800000000013e-05, 8.427800000000013e-05, 8.427800000000013e-05, 8.427800000000013e-05, 8.423599999999795e-05, 8.425000000000099e-05, 8.423600000000142e-05, 8.433400000000188e-05, 8.427800000000013e-05, 8.429099999999676e-05, 8.427800000000013e-05, 8.43049999999998e-05, 8.42919999999997e-05, 8.427800000000013e-05, 8.427799999999666e-05, 8.427700000000066e-05, 8.42919999999997e-05]</msg>
<status status="PASS" starttime="20201029 18:18:09.593" endtime="20201029 18:18:09.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.588" endtime="20201029 18:18:09.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.241" endtime="20201029 18:18:09.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.214" endtime="20201029 18:18:09.596"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:09.598" endtime="20201029 18:18:09.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.597" endtime="20201029 18:18:09.618"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.626" endtime="20201029 18:18:09.644"></status>
</kw>
<msg timestamp="20201029 18:18:09.644" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.625" endtime="20201029 18:18:09.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.647" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.645" endtime="20201029 18:18:09.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.648" endtime="20201029 18:18:09.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.622" endtime="20201029 18:18:09.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.620" endtime="20201029 18:18:09.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.658" endtime="20201029 18:18:09.943"></status>
</kw>
<msg timestamp="20201029 18:18:09.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017560847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017648139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.656" endtime="20201029 18:18:09.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017560847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017648139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.947" endtime="20201029 18:18:09.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.955" endtime="20201029 18:18:09.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.654" endtime="20201029 18:18:09.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.652" endtime="20201029 18:18:09.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:09.962" level="INFO">${PHILIP_RES} = [{'diff': 8.729199999999923e-05}, {'diff': 8.691699999999886e-05}, {'diff': 8.677799999999916e-05}, {'diff': 8.68059999999983e-05}, {'diff': 8.683400000000091e-05}, {'diff': 8.68189999999984e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:09.958" endtime="20201029 18:18:09.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:09.966" level="INFO">${RESULT} = {'diff': [8.729199999999923e-05, 8.691699999999886e-05, 8.677799999999916e-05, 8.68059999999983e-05, 8.683400000000091e-05, 8.68189999999984e-05, 8.681900000000187e-05, 8.6847000000001e-05, 8.68190000...</msg>
<status status="PASS" starttime="20201029 18:18:09.963" endtime="20201029 18:18:09.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.970" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:09.969" endtime="20201029 18:18:09.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.973" level="INFO">VALUE: [8.729199999999923e-05, 8.691699999999886e-05, 8.677799999999916e-05, 8.68059999999983e-05, 8.683400000000091e-05, 8.68189999999984e-05, 8.681900000000187e-05, 8.6847000000001e-05, 8.681900000000187e-05, 8.68059999999983e-05, 8.68059999999983e-05, 8.683400000000091e-05, 8.686100000000058e-05, 8.683300000000144e-05, 8.686100000000058e-05, 8.683299999999797e-05, 8.68059999999983e-05, 8.684800000000048e-05, 8.683400000000091e-05, 8.688800000000024e-05, 8.68189999999984e-05, 8.683299999999797e-05, 8.68189999999984e-05, 8.686100000000058e-05, 8.677799999999916e-05, 8.684800000000048e-05, 8.68189999999984e-05, 8.684699999999754e-05, 8.6847000000001e-05, 8.683300000000144e-05, 8.681900000000187e-05, 8.683399999999744e-05, 8.683399999999744e-05, 8.68059999999983e-05, 8.686100000000058e-05, 8.687500000000015e-05, 8.686100000000058e-05, 8.681999999999787e-05, 8.687500000000015e-05, 8.677800000000263e-05, 8.683300000000144e-05, 8.676399999999959e-05, 8.68189999999984e-05, 8.68189999999984e-05, 8.6847000000001e-05, 8.682000000000134e-05, 8.683400000000091e-05, 8.681999999999787e-05, 8.683299999999797e-05, 8.68189999999984e-05]</msg>
<status status="PASS" starttime="20201029 18:18:09.971" endtime="20201029 18:18:09.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.967" endtime="20201029 18:18:09.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.619" endtime="20201029 18:18:09.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.596" endtime="20201029 18:18:09.975"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:09.978" endtime="20201029 18:18:09.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.976" endtime="20201029 18:18:09.998"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.006" endtime="20201029 18:18:10.023"></status>
</kw>
<msg timestamp="20201029 18:18:10.024" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.004" endtime="20201029 18:18:10.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.026" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.025" endtime="20201029 18:18:10.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.027" endtime="20201029 18:18:10.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.002" endtime="20201029 18:18:10.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.000" endtime="20201029 18:18:10.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.036" endtime="20201029 18:18:10.321"></status>
</kw>
<msg timestamp="20201029 18:18:10.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017540097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017629944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.035" endtime="20201029 18:18:10.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017540097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017629944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.325" endtime="20201029 18:18:10.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.333" endtime="20201029 18:18:10.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.032" endtime="20201029 18:18:10.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.030" endtime="20201029 18:18:10.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:10.339" level="INFO">${PHILIP_RES} = [{'diff': 8.984700000000054e-05}, {'diff': 8.938899999999875e-05}, {'diff': 8.940299999999832e-05}, {'diff': 8.941600000000188e-05}, {'diff': 8.943000000000145e-05}, {'diff': 8.938900000000222e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:10.336" endtime="20201029 18:18:10.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:10.344" level="INFO">${RESULT} = {'diff': [8.984700000000054e-05, 8.938899999999875e-05, 8.940299999999832e-05, 8.941600000000188e-05, 8.943000000000145e-05, 8.938900000000222e-05, 8.938799999999927e-05, 8.940199999999884e-05, 8.9388...</msg>
<status status="PASS" starttime="20201029 18:18:10.340" endtime="20201029 18:18:10.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.349" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:10.347" endtime="20201029 18:18:10.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.351" level="INFO">VALUE: [8.984700000000054e-05, 8.938899999999875e-05, 8.940299999999832e-05, 8.941600000000188e-05, 8.943000000000145e-05, 8.938900000000222e-05, 8.938799999999927e-05, 8.940199999999884e-05, 8.938899999999875e-05, 8.948599999999973e-05, 8.940299999999832e-05, 8.940300000000179e-05, 8.943100000000093e-05, 8.941700000000136e-05, 8.940300000000179e-05, 8.940300000000179e-05, 8.940299999999832e-05, 8.947200000000016e-05, 8.940299999999832e-05, 8.940299999999832e-05, 8.938899999999875e-05, 8.941700000000136e-05, 8.947200000000016e-05, 8.941700000000136e-05, 8.940300000000179e-05, 8.940299999999832e-05, 8.937499999999918e-05, 8.940199999999884e-05, 8.940199999999884e-05, 8.941600000000188e-05, 8.938900000000222e-05, 8.940200000000231e-05, 8.944400000000102e-05, 8.940299999999832e-05, 8.941699999999789e-05, 8.940299999999832e-05, 8.941699999999789e-05, 8.941700000000136e-05, 8.941700000000136e-05, 8.941700000000136e-05, 8.940300000000179e-05, 8.941700000000136e-05, 8.940300000000179e-05, 8.934700000000004e-05, 8.941699999999789e-05, 8.942999999999798e-05, 8.932000000000037e-05, 8.941700000000136e-05, 8.940300000000179e-05, 8.943000000000145e-05]</msg>
<status status="PASS" starttime="20201029 18:18:10.350" endtime="20201029 18:18:10.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.345" endtime="20201029 18:18:10.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.998" endtime="20201029 18:18:10.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.976" endtime="20201029 18:18:10.353"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:10.355" endtime="20201029 18:18:10.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.354" endtime="20201029 18:18:10.375"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.383" endtime="20201029 18:18:10.400"></status>
</kw>
<msg timestamp="20201029 18:18:10.401" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.382" endtime="20201029 18:18:10.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.403" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.402" endtime="20201029 18:18:10.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.404" endtime="20201029 18:18:10.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.379" endtime="20201029 18:18:10.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.377" endtime="20201029 18:18:10.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.413" endtime="20201029 18:18:10.702"></status>
</kw>
<msg timestamp="20201029 18:18:10.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017620708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017713208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.412" endtime="20201029 18:18:10.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017620708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017713208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.706" endtime="20201029 18:18:10.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.714" endtime="20201029 18:18:10.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.409" endtime="20201029 18:18:10.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.407" endtime="20201029 18:18:10.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:10.721" level="INFO">${PHILIP_RES} = [{'diff': 9.25000000000023e-05}, {'diff': 9.201400000000137e-05}, {'diff': 9.20000000000018e-05}, {'diff': 9.201400000000137e-05}, {'diff': 9.201400000000137e-05}, {'diff': 9.201400000000137e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:10.718" endtime="20201029 18:18:10.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:10.725" level="INFO">${RESULT} = {'diff': [9.25000000000023e-05, 9.201400000000137e-05, 9.20000000000018e-05, 9.201400000000137e-05, 9.201400000000137e-05, 9.201400000000137e-05, 9.199999999999833e-05, 9.202799999999747e-05, 9.201299...</msg>
<status status="PASS" starttime="20201029 18:18:10.722" endtime="20201029 18:18:10.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.729" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:10.728" endtime="20201029 18:18:10.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.731" level="INFO">VALUE: [9.25000000000023e-05, 9.201400000000137e-05, 9.20000000000018e-05, 9.201400000000137e-05, 9.201400000000137e-05, 9.201400000000137e-05, 9.199999999999833e-05, 9.202799999999747e-05, 9.201299999999843e-05, 9.194400000000005e-05, 9.20000000000018e-05, 9.202800000000094e-05, 9.208299999999975e-05, 9.198599999999876e-05, 9.199999999999833e-05, 9.198599999999876e-05, 9.201400000000137e-05, 9.199999999999833e-05, 9.20139999999979e-05, 9.201400000000137e-05, 9.201400000000137e-05, 9.201400000000137e-05, 9.20139999999979e-05, 9.202799999999747e-05, 9.20139999999979e-05, 9.2026999999998e-05, 9.201400000000137e-05, 9.201400000000137e-05, 9.198600000000223e-05, 9.201299999999843e-05, 9.19719999999992e-05, 9.199999999999833e-05, 9.199999999999833e-05, 9.202800000000094e-05, 9.199999999999833e-05, 9.201400000000137e-05, 9.204200000000051e-05, 9.201400000000137e-05, 9.201400000000137e-05, 9.20139999999979e-05, 9.19589999999991e-05, 9.202800000000094e-05, 9.201400000000137e-05, 9.20000000000018e-05, 9.206900000000018e-05, 9.201400000000137e-05, 9.201299999999843e-05, 9.20139999999979e-05, 9.209699999999932e-05, 9.202800000000094e-05]</msg>
<status status="PASS" starttime="20201029 18:18:10.730" endtime="20201029 18:18:10.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.726" endtime="20201029 18:18:10.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.376" endtime="20201029 18:18:10.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.353" endtime="20201029 18:18:10.733"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:10.736" endtime="20201029 18:18:10.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.734" endtime="20201029 18:18:10.756"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.764" endtime="20201029 18:18:10.782"></status>
</kw>
<msg timestamp="20201029 18:18:10.783" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.762" endtime="20201029 18:18:10.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.785" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.784" endtime="20201029 18:18:10.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.786" endtime="20201029 18:18:10.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.759" endtime="20201029 18:18:10.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.758" endtime="20201029 18:18:10.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.796" endtime="20201029 18:18:11.079"></status>
</kw>
<msg timestamp="20201029 18:18:11.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017497306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017592417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.794" endtime="20201029 18:18:11.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017497306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017592417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.083" endtime="20201029 18:18:11.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.091" endtime="20201029 18:18:11.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.792" endtime="20201029 18:18:11.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.790" endtime="20201029 18:18:11.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:11.098" level="INFO">${PHILIP_RES} = [{'diff': 9.511099999999842e-05}, {'diff': 9.461100000000139e-05}, {'diff': 9.47079999999989e-05}, {'diff': 9.469399999999933e-05}, {'diff': 9.467999999999976e-05}, {'diff': 9.463900000000053e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:11.095" endtime="20201029 18:18:11.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:11.102" level="INFO">${RESULT} = {'diff': [9.511099999999842e-05, 9.461100000000139e-05, 9.47079999999989e-05, 9.469399999999933e-05, 9.467999999999976e-05, 9.463900000000053e-05, 9.46530000000001e-05, 9.468099999999924e-05, 9.465300...</msg>
<status status="PASS" starttime="20201029 18:18:11.099" endtime="20201029 18:18:11.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.106" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:11.105" endtime="20201029 18:18:11.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.109" level="INFO">VALUE: [9.511099999999842e-05, 9.461100000000139e-05, 9.47079999999989e-05, 9.469399999999933e-05, 9.467999999999976e-05, 9.463900000000053e-05, 9.46530000000001e-05, 9.468099999999924e-05, 9.46530000000001e-05, 9.46530000000001e-05, 9.463800000000105e-05, 9.463900000000053e-05, 9.463900000000053e-05, 9.46530000000001e-05, 9.46530000000001e-05, 9.46530000000001e-05, 9.465200000000062e-05, 9.463900000000053e-05, 9.458300000000225e-05, 9.463900000000053e-05, 9.472199999999847e-05, 9.462500000000096e-05, 9.459700000000182e-05, 9.46660000000002e-05, 9.461100000000139e-05, 9.458299999999878e-05, 9.466699999999967e-05, 9.46530000000001e-05, 9.459800000000129e-05, 9.465200000000062e-05, 9.46530000000001e-05, 9.459699999999835e-05, 9.46530000000001e-05, 9.466699999999967e-05, 9.463800000000105e-05, 9.465200000000062e-05, 9.469499999999881e-05, 9.459699999999835e-05, 9.46530000000001e-05, 9.463900000000053e-05, 9.463900000000053e-05, 9.465200000000062e-05, 9.46530000000001e-05, 9.466699999999967e-05, 9.46530000000001e-05, 9.46530000000001e-05, 9.46530000000001e-05, 9.46660000000002e-05, 9.46530000000001e-05, 9.46530000000001e-05]</msg>
<status status="PASS" starttime="20201029 18:18:11.107" endtime="20201029 18:18:11.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.103" endtime="20201029 18:18:11.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.756" endtime="20201029 18:18:11.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.734" endtime="20201029 18:18:11.111"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:11.114" endtime="20201029 18:18:11.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.112" endtime="20201029 18:18:11.134"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.142" endtime="20201029 18:18:11.160"></status>
</kw>
<msg timestamp="20201029 18:18:11.161" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.141" endtime="20201029 18:18:11.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.163" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.162" endtime="20201029 18:18:11.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.164" endtime="20201029 18:18:11.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.138" endtime="20201029 18:18:11.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.136" endtime="20201029 18:18:11.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.173" endtime="20201029 18:18:11.459"></status>
</kw>
<msg timestamp="20201029 18:18:11.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018628292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018726042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.172" endtime="20201029 18:18:11.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018628292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018726042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.463" endtime="20201029 18:18:11.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.471" endtime="20201029 18:18:11.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.169" endtime="20201029 18:18:11.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.168" endtime="20201029 18:18:11.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:11.478" level="INFO">${PHILIP_RES} = [{'diff': 9.774999999999714e-05}, {'diff': 9.732000000000143e-05}, {'diff': 9.723600000000054e-05}, {'diff': 9.73059999999984e-05}, {'diff': 9.731900000000196e-05}, {'diff': 9.729099999999935e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:11.475" endtime="20201029 18:18:11.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:11.483" level="INFO">${RESULT} = {'diff': [9.774999999999714e-05, 9.732000000000143e-05, 9.723600000000054e-05, 9.73059999999984e-05, 9.731900000000196e-05, 9.729099999999935e-05, 9.729100000000282e-05, 9.722200000000097e-05, 9.73190...</msg>
<status status="PASS" starttime="20201029 18:18:11.479" endtime="20201029 18:18:11.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.487" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:11.486" endtime="20201029 18:18:11.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.490" level="INFO">VALUE: [9.774999999999714e-05, 9.732000000000143e-05, 9.723600000000054e-05, 9.73059999999984e-05, 9.731900000000196e-05, 9.729099999999935e-05, 9.729100000000282e-05, 9.722200000000097e-05, 9.731900000000196e-05, 9.726399999999968e-05, 9.729199999999882e-05, 9.730600000000186e-05, 9.733399999999753e-05, 9.73470000000011e-05, 9.73059999999984e-05, 9.727800000000272e-05, 9.730499999999892e-05, 9.730499999999892e-05, 9.733300000000153e-05, 9.730499999999892e-05, 9.730500000000239e-05, 9.73059999999984e-05, 9.7334000000001e-05, 9.732000000000143e-05, 9.73059999999984e-05, 9.730600000000186e-05, 9.731899999999849e-05, 9.730500000000239e-05, 9.733299999999806e-05, 9.731899999999849e-05, 9.729099999999935e-05, 9.730499999999892e-05, 9.730600000000186e-05, 9.740299999999938e-05, 9.738899999999981e-05, 9.73059999999984e-05, 9.73059999999984e-05, 9.729199999999882e-05, 9.729099999999935e-05, 9.731900000000196e-05, 9.738899999999981e-05, 9.730500000000239e-05, 9.731899999999849e-05, 9.73059999999984e-05, 9.732000000000143e-05, 9.734800000000057e-05, 9.732000000000143e-05, 9.73059999999984e-05, 9.730600000000186e-05, 9.733299999999806e-05]</msg>
<status status="PASS" starttime="20201029 18:18:11.488" endtime="20201029 18:18:11.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.484" endtime="20201029 18:18:11.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.134" endtime="20201029 18:18:11.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.112" endtime="20201029 18:18:11.491"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:11.494" endtime="20201029 18:18:11.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.492" endtime="20201029 18:18:11.514"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.522" endtime="20201029 18:18:11.540"></status>
</kw>
<msg timestamp="20201029 18:18:11.540" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.520" endtime="20201029 18:18:11.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.543" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.541" endtime="20201029 18:18:11.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.544" endtime="20201029 18:18:11.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.518" endtime="20201029 18:18:11.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.516" endtime="20201029 18:18:11.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.553" endtime="20201029 18:18:11.840"></status>
</kw>
<msg timestamp="20201029 18:18:11.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017592569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017693, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:11.551" endtime="20201029 18:18:11.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017592569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017693, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:11.844" endtime="20201029 18:18:11.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.852" endtime="20201029 18:18:11.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.549" endtime="20201029 18:18:11.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.547" endtime="20201029 18:18:11.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:11.859" level="INFO">${PHILIP_RES} = [{'diff': 0.00010043100000000152}, {'diff': 0.000100028000000002}, {'diff': 9.99999999999994e-05}, {'diff': 9.99999999999994e-05}, {'diff': 0.00010001299999999949}, {'diff': 0.00010001399999999896}, {...</msg>
<status status="PASS" starttime="20201029 18:18:11.855" endtime="20201029 18:18:11.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:11.863" level="INFO">${RESULT} = {'diff': [0.00010043100000000152, 0.000100028000000002, 9.99999999999994e-05, 9.99999999999994e-05, 0.00010001299999999949, 0.00010001399999999896, 0.00010005600000000114, 9.998599999999983e-05, 0.000...</msg>
<status status="PASS" starttime="20201029 18:18:11.860" endtime="20201029 18:18:11.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.867" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:11.866" endtime="20201029 18:18:11.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.869" level="INFO">VALUE: [0.00010043100000000152, 0.000100028000000002, 9.99999999999994e-05, 9.99999999999994e-05, 0.00010001299999999949, 0.00010001399999999896, 0.00010005600000000114, 9.998599999999983e-05, 0.00010004200000000157, 9.99999999999994e-05, 0.00010001299999999949, 9.99999999999994e-05, 9.99999999999994e-05, 0.00010001399999999896, 9.998599999999983e-05, 9.998599999999983e-05, 9.994399999999765e-05, 0.00010001399999999896, 0.00010001399999999896, 0.00010001399999999896, 9.998599999999983e-05, 9.998599999999983e-05, 9.99869999999993e-05, 0.00010004200000000157, 9.998599999999983e-05, 9.994400000000112e-05, 0.00010001399999999896, 9.99999999999994e-05, 9.99999999999994e-05, 9.998599999999983e-05, 9.99999999999994e-05, 9.998599999999983e-05, 9.998599999999983e-05, 9.997200000000026e-05, 0.00010001299999999949, 9.997200000000026e-05, 0.00010001399999999896, 9.998599999999983e-05, 9.99999999999994e-05, 9.99999999999994e-05, 9.99999999999994e-05, 9.99999999999994e-05, 9.998599999999983e-05, 9.998599999999983e-05, 9.99999999999994e-05, 0.00010002799999999853, 9.99999999999994e-05, 0.00010002799999999853, 0.00010001399999999896, 0.00010002799999999853]</msg>
<status status="PASS" starttime="20201029 18:18:11.868" endtime="20201029 18:18:11.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.864" endtime="20201029 18:18:11.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.514" endtime="20201029 18:18:11.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.492" endtime="20201029 18:18:11.871"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:11.874" endtime="20201029 18:18:11.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.872" endtime="20201029 18:18:11.894"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.902" endtime="20201029 18:18:11.921"></status>
</kw>
<msg timestamp="20201029 18:18:11.921" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.900" endtime="20201029 18:18:11.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.924" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.922" endtime="20201029 18:18:11.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.925" endtime="20201029 18:18:11.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.898" endtime="20201029 18:18:11.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.896" endtime="20201029 18:18:11.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.935" endtime="20201029 18:18:12.221"></status>
</kw>
<msg timestamp="20201029 18:18:12.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017615903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017719069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.933" endtime="20201029 18:18:12.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017615903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017719069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.225" endtime="20201029 18:18:12.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.233" endtime="20201029 18:18:12.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.930" endtime="20201029 18:18:12.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.929" endtime="20201029 18:18:12.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:12.239" level="INFO">${PHILIP_RES} = [{'diff': 0.00010316600000000176}, {'diff': 0.00010272199999999954}, {'diff': 0.00010274999999999868}, {'diff': 0.00010272199999999954}, {'diff': 0.00010272299999999901}, {'diff': 0.000102707999999999...</msg>
<status status="PASS" starttime="20201029 18:18:12.236" endtime="20201029 18:18:12.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:12.243" level="INFO">${RESULT} = {'diff': [0.00010316600000000176, 0.00010272199999999954, 0.00010274999999999868, 0.00010272199999999954, 0.00010272299999999901, 0.00010270799999999997, 0.00010272199999999954, 0.00010272199999999954...</msg>
<status status="PASS" starttime="20201029 18:18:12.240" endtime="20201029 18:18:12.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.248" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:12.247" endtime="20201029 18:18:12.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.250" level="INFO">VALUE: [0.00010316600000000176, 0.00010272199999999954, 0.00010274999999999868, 0.00010272199999999954, 0.00010272299999999901, 0.00010270799999999997, 0.00010272199999999954, 0.00010272199999999954, 0.00010270799999999997, 0.00010269499999999987, 0.0001026940000000004, 0.00010270899999999944, 0.00010272199999999954, 0.00010276400000000172, 0.00010272199999999954, 0.00010274999999999868, 0.0001027359999999991, 0.00010270899999999944, 0.00010270799999999997, 0.0001027359999999991, 0.00010272199999999954, 0.00010274999999999868, 0.00010270899999999944, 0.00010272199999999954, 0.00010270900000000291, 0.00010270799999999997, 0.00010270899999999944, 0.0001026940000000004, 0.00010272299999999901, 0.00010277799999999782, 0.00010273600000000258, 0.000102722000000003, 0.0001026940000000004, 0.00010276299999999877, 0.0001026940000000004, 0.00010280499999999748, 0.00010273600000000258, 0.00010272299999999901, 0.0001027359999999991, 0.00010270899999999944, 0.0001026940000000004, 0.00010272199999999954, 0.00010266700000000073, 0.00010267999999999736, 0.0001027359999999991, 0.0001026940000000004, 0.00010269499999999987, 0.00010270799999999997, 0.00010275000000000215, 0.00010267999999999736]</msg>
<status status="PASS" starttime="20201029 18:18:12.249" endtime="20201029 18:18:12.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.244" endtime="20201029 18:18:12.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.894" endtime="20201029 18:18:12.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.872" endtime="20201029 18:18:12.253"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:12.255" endtime="20201029 18:18:12.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.254" endtime="20201029 18:18:12.275"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.283" endtime="20201029 18:18:12.303"></status>
</kw>
<msg timestamp="20201029 18:18:12.303" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.282" endtime="20201029 18:18:12.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.305" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.304" endtime="20201029 18:18:12.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.306" endtime="20201029 18:18:12.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.279" endtime="20201029 18:18:12.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.277" endtime="20201029 18:18:12.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.316" endtime="20201029 18:18:12.601"></status>
</kw>
<msg timestamp="20201029 18:18:12.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017481958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017587889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.314" endtime="20201029 18:18:12.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017481958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017587889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.605" endtime="20201029 18:18:12.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.613" endtime="20201029 18:18:12.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.311" endtime="20201029 18:18:12.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.310" endtime="20201029 18:18:12.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:12.619" level="INFO">${PHILIP_RES} = [{'diff': 0.00010593100000000008}, {'diff': 0.00010547200000000229}, {'diff': 0.00010544399999999968}, {'diff': 0.00010545799999999925}, {'diff': 0.00010547199999999882}, {'diff': 0.000105403000000000...</msg>
<status status="PASS" starttime="20201029 18:18:12.616" endtime="20201029 18:18:12.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:12.624" level="INFO">${RESULT} = {'diff': [0.00010593100000000008, 0.00010547200000000229, 0.00010544399999999968, 0.00010545799999999925, 0.00010547199999999882, 0.00010540300000000044, 0.00010547200000000229, 0.00010545799999999925...</msg>
<status status="PASS" starttime="20201029 18:18:12.620" endtime="20201029 18:18:12.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.628" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:12.627" endtime="20201029 18:18:12.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.631" level="INFO">VALUE: [0.00010593100000000008, 0.00010547200000000229, 0.00010544399999999968, 0.00010545799999999925, 0.00010547199999999882, 0.00010540300000000044, 0.00010547200000000229, 0.00010545799999999925, 0.00010548599999999839, 0.00010547299999999829, 0.00010540300000000044, 0.00010548600000000186, 0.00010547200000000229, 0.00010547199999999882, 0.00010544399999999968, 0.00010548599999999839, 0.00010545799999999925, 0.00010547200000000229, 0.00010547200000000229, 0.00010545799999999925, 0.00010547199999999882, 0.00010547199999999882, 0.00010544499999999915, 0.00010545800000000272, 0.00010547300000000176, 0.00010545899999999872, 0.000105514000000001, 0.00010543099999999958, 0.00010545899999999872, 0.00010544399999999968, 0.00010545799999999925, 0.00010548599999999839, 0.00010548599999999839, 0.00010544399999999968, 0.00010547200000000229, 0.00010545800000000272, 0.00010547199999999882, 0.00010545799999999925, 0.00010547199999999882, 0.00010545899999999872, 0.00010547200000000229, 0.00010552800000000057, 0.00010545899999999872, 0.00010547299999999829, 0.00010547199999999882, 0.00010547199999999882, 0.00010545800000000272, 0.00010547199999999882, 0.00010548599999999839, 0.00010544399999999968]</msg>
<status status="PASS" starttime="20201029 18:18:12.629" endtime="20201029 18:18:12.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.625" endtime="20201029 18:18:12.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.276" endtime="20201029 18:18:12.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.253" endtime="20201029 18:18:12.633"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:12.635" endtime="20201029 18:18:12.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.634" endtime="20201029 18:18:12.655"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.663" endtime="20201029 18:18:12.682"></status>
</kw>
<msg timestamp="20201029 18:18:12.682" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.661" endtime="20201029 18:18:12.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.685" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.683" endtime="20201029 18:18:12.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.686" endtime="20201029 18:18:12.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.659" endtime="20201029 18:18:12.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.657" endtime="20201029 18:18:12.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.695" endtime="20201029 18:18:12.981"></status>
</kw>
<msg timestamp="20201029 18:18:12.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017497514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017606153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.693" endtime="20201029 18:18:12.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017497514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017606153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.985" endtime="20201029 18:18:12.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.993" endtime="20201029 18:18:12.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.691" endtime="20201029 18:18:12.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.689" endtime="20201029 18:18:12.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:13.000" level="INFO">${PHILIP_RES} = [{'diff': 0.00010863900000000065}, {'diff': 0.00010822200000000157}, {'diff': 0.00010823600000000114}, {'diff': 0.00010826400000000028}, {'diff': 0.00010822300000000104}, {'diff': 0.000108235999999997...</msg>
<status status="PASS" starttime="20201029 18:18:12.997" endtime="20201029 18:18:13.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:13.004" level="INFO">${RESULT} = {'diff': [0.00010863900000000065, 0.00010822200000000157, 0.00010823600000000114, 0.00010826400000000028, 0.00010822300000000104, 0.00010823599999999767, 0.00010823599999999767, 0.0001082219999999981,...</msg>
<status status="PASS" starttime="20201029 18:18:13.001" endtime="20201029 18:18:13.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.008" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:13.007" endtime="20201029 18:18:13.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.010" level="INFO">VALUE: [0.00010863900000000065, 0.00010822200000000157, 0.00010823600000000114, 0.00010826400000000028, 0.00010822300000000104, 0.00010823599999999767, 0.00010823599999999767, 0.0001082219999999981, 0.00010823600000000114, 0.00010822200000000157, 0.00010822200000000157, 0.00010823600000000114, 0.00010826400000000028, 0.00010823700000000061, 0.00010824999999999724, 0.0001082219999999981, 0.00010824999999999724, 0.00010823599999999767, 0.00010823599999999767, 0.00010822200000000157, 0.00010816599999999982, 0.00010823700000000061, 0.00010823700000000061, 0.0001082500000000007, 0.00010820799999999853, 0.00010829099999999994, 0.0001082219999999981, 0.0001082500000000007, 0.00010823600000000114, 0.0001082500000000007, 0.0001082500000000007, 0.00010818100000000233, 0.0001082500000000007, 0.00010823600000000114, 0.00010823600000000114, 0.0001082500000000007, 0.00010817999999999939, 0.00010823599999999767, 0.00010823700000000061, 0.00010822300000000104, 0.00010823600000000114, 0.00010823600000000114, 0.00010823600000000114, 0.0001082500000000007, 0.00010820799999999853, 0.00010820799999999853, 0.0001082219999999981, 0.00010823599999999767, 0.00010820900000000147, 0.0001082500000000007]</msg>
<status status="PASS" starttime="20201029 18:18:13.009" endtime="20201029 18:18:13.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.005" endtime="20201029 18:18:13.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.655" endtime="20201029 18:18:13.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.633" endtime="20201029 18:18:13.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.967" endtime="20201029 18:18:13.012"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:52.609" endtime="20201029 18:18:13.013" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:17:32.720" endtime="20201029 18:18:13.021"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.090" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:18:13.098" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:18:14.328" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:18:13.089" endtime="20201029 18:18:14.330"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.334" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:18:14.332" endtime="20201029 18:18:14.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.088" endtime="20201029 18:18:14.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:14.341" endtime="20201029 18:18:14.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.338" endtime="20201029 18:18:14.586"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.598" endtime="20201029 18:18:14.613"></status>
</kw>
<msg timestamp="20201029 18:18:14.613" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:14.597" endtime="20201029 18:18:14.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.616" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:14.614" endtime="20201029 18:18:14.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.619" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:14.617" endtime="20201029 18:18:14.619"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:14.594" endtime="20201029 18:18:14.620"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:14.592" endtime="20201029 18:18:14.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.591" endtime="20201029 18:18:14.621"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:14.626" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:14.625" endtime="20201029 18:18:14.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.622" endtime="20201029 18:18:14.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.590" endtime="20201029 18:18:14.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.589" endtime="20201029 18:18:14.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.627" endtime="20201029 18:18:14.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.588" endtime="20201029 18:18:14.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.630" endtime="20201029 18:18:14.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.587" endtime="20201029 18:18:14.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.086" endtime="20201029 18:18:14.632"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:14.638" endtime="20201029 18:18:14.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.637" endtime="20201029 18:18:14.658"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.672" endtime="20201029 18:18:14.686"></status>
</kw>
<msg timestamp="20201029 18:18:14.686" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:14.670" endtime="20201029 18:18:14.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.689" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:14.687" endtime="20201029 18:18:14.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.692" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:14.690" endtime="20201029 18:18:14.692"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:14.667" endtime="20201029 18:18:14.693"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:14.665" endtime="20201029 18:18:14.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.664" endtime="20201029 18:18:14.693"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:14.697" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:14.696" endtime="20201029 18:18:14.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.694" endtime="20201029 18:18:14.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.663" endtime="20201029 18:18:14.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.662" endtime="20201029 18:18:14.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.699" endtime="20201029 18:18:14.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.661" endtime="20201029 18:18:14.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.659" endtime="20201029 18:18:14.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.635" endtime="20201029 18:18:14.702"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.712" endtime="20201029 18:18:14.727"></status>
</kw>
<msg timestamp="20201029 18:18:14.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:14.711" endtime="20201029 18:18:14.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:14.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:14.728" endtime="20201029 18:18:14.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.731" endtime="20201029 18:18:14.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.707" endtime="20201029 18:18:14.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.705" endtime="20201029 18:18:14.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:14.740" endtime="20201029 18:18:15.029"></status>
</kw>
<msg timestamp="20201029 18:18:15.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066444319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066458903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:14.738" endtime="20201029 18:18:15.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066444319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066458903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:15.034" endtime="20201029 18:18:15.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.042" endtime="20201029 18:18:15.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.736" endtime="20201029 18:18:15.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.734" endtime="20201029 18:18:15.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:15.049" level="INFO">${RESULT} = [{'diff': 1.4583999999998043e-05}, {'diff': 1.3777000000006479e-05}, {'diff': 1.4208000000001664e-05}, {'diff': 1.4097000000004578e-05}, {'diff': 1.4042000000005772e-05}, {'diff': 1.40969999999907e-05...</msg>
<status status="PASS" starttime="20201029 18:18:15.045" endtime="20201029 18:18:15.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:15.053" level="INFO">${ACCURACY} = {'diff': [1.4583999999998043e-05, 1.3777000000006479e-05, 1.4208000000001664e-05, 1.4097000000004578e-05, 1.4042000000005772e-05, 1.40969999999907e-05, 1.3943999999987966e-05, 1.4457999999994975e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:15.050" endtime="20201029 18:18:15.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.058" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 18:18:15.057" endtime="20201029 18:18:15.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.061" level="INFO">VALUE: [1.4583999999998043e-05, 1.3777000000006479e-05, 1.4208000000001664e-05, 1.4097000000004578e-05, 1.4042000000005772e-05, 1.40969999999907e-05, 1.3943999999987966e-05, 1.4457999999994975e-05, 1.4069000000005438e-05, 1.3958000000008353e-05, 1.4625000000004218e-05, 1.4417000000002678e-05, 1.434699999999789e-05, 1.4138999999996349e-05, 1.3916000000002704e-05, 1.3805000000005618e-05, 1.4653000000003358e-05, 1.4625000000004218e-05, 1.4236000000000804e-05, 1.4403000000010047e-05, 1.379099999999911e-05, 1.3861000000003898e-05, 1.3915999999988826e-05, 1.4292000000012961e-05, 1.4569999999991534e-05, 1.4083000000011947e-05, 1.4500000000000624e-05, 1.4195000000008506e-05, 1.4681000000002498e-05, 1.3929999999995335e-05, 1.4111000000011087e-05, 1.384699999999739e-05, 1.3833000000004758e-05, 1.4291999999999083e-05, 1.4485999999994115e-05, 1.4055999999998403e-05, 1.3749999999992935e-05, 1.431899999999875e-05, 1.3930999999994809e-05, 1.4333000000005258e-05, 1.4291999999999083e-05, 1.4222000000008173e-05, 1.4181000000001998e-05, 1.4110999999997209e-05, 1.4236000000000804e-05, 1.4263999999999943e-05, 1.4138999999996349e-05, 1.4181000000001998e-05, 1.3763999999999443e-05, 1.3957999999994475e-05]</msg>
<status status="PASS" starttime="20201029 18:18:15.059" endtime="20201029 18:18:15.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.054" endtime="20201029 18:18:15.062"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:15.065" endtime="20201029 18:18:15.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.064" endtime="20201029 18:18:15.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.063" endtime="20201029 18:18:15.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.703" endtime="20201029 18:18:15.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.703" endtime="20201029 18:18:15.086"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.095" endtime="20201029 18:18:15.109"></status>
</kw>
<msg timestamp="20201029 18:18:15.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.093" endtime="20201029 18:18:15.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.111" endtime="20201029 18:18:15.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.113" endtime="20201029 18:18:15.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.091" endtime="20201029 18:18:15.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.088" endtime="20201029 18:18:15.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.123" endtime="20201029 18:18:15.408"></status>
</kw>
<msg timestamp="20201029 18:18:15.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021589111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02160325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:15.121" endtime="20201029 18:18:15.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021589111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02160325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:15.412" endtime="20201029 18:18:15.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.421" endtime="20201029 18:18:15.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.118" endtime="20201029 18:18:15.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.116" endtime="20201029 18:18:15.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:15.427" level="INFO">${RESULT} = [{'diff': 1.4138999999999818e-05}, {'diff': 1.3874999999999998e-05}, {'diff': 1.4556000000002373e-05}, {'diff': 1.4527999999999763e-05}, {'diff': 1.4487000000000527e-05}, {'diff': 1.4138999999999818e-...</msg>
<status status="PASS" starttime="20201029 18:18:15.424" endtime="20201029 18:18:15.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:15.432" level="INFO">${ACCURACY} = {'diff': [1.4138999999999818e-05, 1.3874999999999998e-05, 1.4556000000002373e-05, 1.4527999999999763e-05, 1.4487000000000527e-05, 1.4138999999999818e-05, 1.4236000000000804e-05, 1.4415999999999735e-05...</msg>
<status status="PASS" starttime="20201029 18:18:15.428" endtime="20201029 18:18:15.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.437" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 18:18:15.436" endtime="20201029 18:18:15.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.439" level="INFO">VALUE: [1.4138999999999818e-05, 1.3874999999999998e-05, 1.4556000000002373e-05, 1.4527999999999763e-05, 1.4487000000000527e-05, 1.4138999999999818e-05, 1.4236000000000804e-05, 1.4415999999999735e-05, 1.4612000000000652e-05, 1.4291999999999083e-05, 1.451299999999725e-05, 1.4555999999998903e-05, 1.4250000000000373e-05, 1.3916999999998708e-05, 1.3943999999998374e-05, 1.3834000000000762e-05, 1.3819000000001719e-05, 1.4151999999999915e-05, 1.408299999999807e-05, 1.427700000000004e-05, 1.4458000000001914e-05, 1.376299999999997e-05, 1.4472000000001484e-05, 1.4583000000002039e-05, 1.3986000000000554e-05, 1.3847000000000859e-05, 1.4415999999999735e-05, 1.4111000000000679e-05, 1.4333000000001789e-05, 1.3833000000001289e-05, 1.4179999999999054e-05, 1.4486000000001054e-05, 1.4277999999999513e-05, 1.3847000000000859e-05, 1.4179999999999054e-05, 1.454099999999986e-05, 1.3763999999999443e-05, 1.429099999999961e-05, 1.408299999999807e-05, 1.3958000000001414e-05, 1.379099999999911e-05, 1.458299999999857e-05, 1.3985999999997084e-05, 1.3999999999996654e-05, 1.408299999999807e-05, 1.4207999999998194e-05, 1.4000000000000123e-05, 1.4583000000002039e-05, 1.4027999999999263e-05, 1.3833000000001289e-05]</msg>
<status status="PASS" starttime="20201029 18:18:15.438" endtime="20201029 18:18:15.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.433" endtime="20201029 18:18:15.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:15.444" endtime="20201029 18:18:15.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.442" endtime="20201029 18:18:15.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.441" endtime="20201029 18:18:15.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.087" endtime="20201029 18:18:15.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.086" endtime="20201029 18:18:15.464"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.473" endtime="20201029 18:18:15.487"></status>
</kw>
<msg timestamp="20201029 18:18:15.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.472" endtime="20201029 18:18:15.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.489" endtime="20201029 18:18:15.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.491" endtime="20201029 18:18:15.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.469" endtime="20201029 18:18:15.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.467" endtime="20201029 18:18:15.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.501" endtime="20201029 18:18:15.787"></status>
</kw>
<msg timestamp="20201029 18:18:15.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021508931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021523069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:15.499" endtime="20201029 18:18:15.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021508931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021523069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:15.791" endtime="20201029 18:18:15.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.799" endtime="20201029 18:18:15.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.496" endtime="20201029 18:18:15.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.495" endtime="20201029 18:18:15.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:15.806" level="INFO">${RESULT} = [{'diff': 1.4138000000000345e-05}, {'diff': 1.4013999999999693e-05}, {'diff': 1.4193999999998624e-05}, {'diff': 1.4361000000000929e-05}, {'diff': 1.4180999999998528e-05}, {'diff': 1.3820000000001192e-...</msg>
<status status="PASS" starttime="20201029 18:18:15.803" endtime="20201029 18:18:15.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:15.810" level="INFO">${ACCURACY} = {'diff': [1.4138000000000345e-05, 1.4013999999999693e-05, 1.4193999999998624e-05, 1.4361000000000929e-05, 1.4180999999998528e-05, 1.3820000000001192e-05, 1.4291999999999083e-05, 1.4277999999999513e-05...</msg>
<status status="PASS" starttime="20201029 18:18:15.807" endtime="20201029 18:18:15.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.814" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 18:18:15.813" endtime="20201029 18:18:15.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.817" level="INFO">VALUE: [1.4138000000000345e-05, 1.4013999999999693e-05, 1.4193999999998624e-05, 1.4361000000000929e-05, 1.4180999999998528e-05, 1.3820000000001192e-05, 1.4291999999999083e-05, 1.4277999999999513e-05, 1.3777999999999013e-05, 1.4416999999999208e-05, 1.4389000000000068e-05, 1.3805999999998153e-05, 1.3847000000000859e-05, 1.4250000000000373e-05, 1.4569999999998473e-05, 1.4500000000000624e-05, 1.4347000000001359e-05, 1.4570000000001943e-05, 1.4000000000000123e-05, 1.4194999999998098e-05, 1.4070000000001442e-05, 1.4361000000000929e-05, 1.3986000000000554e-05, 1.459699999999814e-05, 1.4028000000002733e-05, 1.4250000000000373e-05, 1.4471999999998014e-05, 1.4097999999997113e-05, 1.4098000000000582e-05, 1.4429999999999304e-05, 1.3915999999999235e-05, 1.3819999999997723e-05, 1.3806000000001623e-05, 1.4013999999999693e-05, 1.3916999999998708e-05, 1.4723000000001207e-05, 1.4098000000000582e-05, 1.4112000000000152e-05, 1.3972000000000984e-05, 1.4625000000000749e-05, 1.3958999999997418e-05, 1.3736999999999777e-05, 1.3833000000001289e-05, 1.3901999999999665e-05, 1.4194999999998098e-05, 1.4486000000001054e-05, 1.459699999999814e-05, 1.379099999999911e-05, 1.3848000000000332e-05, 1.429099999999961e-05]</msg>
<status status="PASS" starttime="20201029 18:18:15.816" endtime="20201029 18:18:15.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.811" endtime="20201029 18:18:15.818"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:15.822" endtime="20201029 18:18:15.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.820" endtime="20201029 18:18:15.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.819" endtime="20201029 18:18:15.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.465" endtime="20201029 18:18:15.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.465" endtime="20201029 18:18:15.842"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.852" endtime="20201029 18:18:15.866"></status>
</kw>
<msg timestamp="20201029 18:18:15.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.849" endtime="20201029 18:18:15.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:15.868" endtime="20201029 18:18:15.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.870" endtime="20201029 18:18:15.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.847" endtime="20201029 18:18:15.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.845" endtime="20201029 18:18:15.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:15.879" endtime="20201029 18:18:16.165"></status>
</kw>
<msg timestamp="20201029 18:18:16.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022388403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022402792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:15.878" endtime="20201029 18:18:16.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022388403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022402792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.170" endtime="20201029 18:18:16.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.178" endtime="20201029 18:18:16.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.875" endtime="20201029 18:18:16.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.874" endtime="20201029 18:18:16.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:16.184" level="INFO">${RESULT} = [{'diff': 1.4389000000000068e-05}, {'diff': 1.4195000000001567e-05}, {'diff': 1.3944999999997848e-05}, {'diff': 1.4416999999999208e-05}, {'diff': 1.4153000000002858e-05}, {'diff': 1.4638000000000845e-...</msg>
<status status="PASS" starttime="20201029 18:18:16.181" endtime="20201029 18:18:16.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:16.189" level="INFO">${ACCURACY} = {'diff': [1.4389000000000068e-05, 1.4195000000001567e-05, 1.3944999999997848e-05, 1.4416999999999208e-05, 1.4153000000002858e-05, 1.4638000000000845e-05, 1.4361000000000929e-05, 1.4221999999997764e-05...</msg>
<status status="PASS" starttime="20201029 18:18:16.185" endtime="20201029 18:18:16.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.193" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 18:18:16.192" endtime="20201029 18:18:16.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.195" level="INFO">VALUE: [1.4389000000000068e-05, 1.4195000000001567e-05, 1.3944999999997848e-05, 1.4416999999999208e-05, 1.4153000000002858e-05, 1.4638000000000845e-05, 1.4361000000000929e-05, 1.4221999999997764e-05, 1.4486000000001054e-05, 1.3986000000000554e-05, 1.454099999999986e-05, 1.4402000000000165e-05, 1.452699999999682e-05, 1.3749999999999873e-05, 1.4138999999999818e-05, 1.383299999999782e-05, 1.4514000000000193e-05, 1.3915999999999235e-05, 1.4013999999999693e-05, 1.4722000000001734e-05, 1.4222000000001234e-05, 1.4500000000000624e-05, 1.430499999999918e-05, 1.3915999999999235e-05, 1.4041000000002829e-05, 1.4389000000000068e-05, 1.431899999999875e-05, 1.455499999999943e-05, 1.434699999999789e-05, 1.3902999999999138e-05, 1.4402999999999638e-05, 1.4138999999999818e-05, 1.4179999999999054e-05, 1.4000000000000123e-05, 1.3819999999997723e-05, 1.4527999999999763e-05, 1.4263999999999943e-05, 1.3917000000002178e-05, 1.4429999999999304e-05, 1.4111000000000679e-05, 1.4277999999999513e-05, 1.4153000000002858e-05, 1.3889000000003038e-05, 1.4111000000000679e-05, 1.4556000000002373e-05, 1.3903000000002608e-05, 1.408299999999807e-05, 1.4111000000000679e-05, 1.451300000000072e-05, 1.4472000000001484e-05]</msg>
<status status="PASS" starttime="20201029 18:18:16.194" endtime="20201029 18:18:16.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.189" endtime="20201029 18:18:16.197"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:16.201" endtime="20201029 18:18:16.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.199" endtime="20201029 18:18:16.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.198" endtime="20201029 18:18:16.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.843" endtime="20201029 18:18:16.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.843" endtime="20201029 18:18:16.222"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.231" endtime="20201029 18:18:16.245"></status>
</kw>
<msg timestamp="20201029 18:18:16.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.229" endtime="20201029 18:18:16.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.247" endtime="20201029 18:18:16.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.249" endtime="20201029 18:18:16.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.227" endtime="20201029 18:18:16.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.224" endtime="20201029 18:18:16.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.260" endtime="20201029 18:18:16.548"></status>
</kw>
<msg timestamp="20201029 18:18:16.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023204819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023219375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.258" endtime="20201029 18:18:16.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023204819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023219375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.552" endtime="20201029 18:18:16.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.560" endtime="20201029 18:18:16.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.254" endtime="20201029 18:18:16.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.253" endtime="20201029 18:18:16.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:16.567" level="INFO">${RESULT} = [{'diff': 1.4555999999998903e-05}, {'diff': 1.434699999999789e-05}, {'diff': 1.3902999999999138e-05}, {'diff': 1.3931000000001748e-05}, {'diff': 1.4611000000001179e-05}, {'diff': 1.459699999999814e-05...</msg>
<status status="PASS" starttime="20201029 18:18:16.563" endtime="20201029 18:18:16.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:16.572" level="INFO">${ACCURACY} = {'diff': [1.4555999999998903e-05, 1.434699999999789e-05, 1.3902999999999138e-05, 1.3931000000001748e-05, 1.4611000000001179e-05, 1.459699999999814e-05, 1.4499999999997154e-05, 1.3902999999999138e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:16.568" endtime="20201029 18:18:16.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.576" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 18:18:16.575" endtime="20201029 18:18:16.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.579" level="INFO">VALUE: [1.4555999999998903e-05, 1.434699999999789e-05, 1.3902999999999138e-05, 1.3931000000001748e-05, 1.4611000000001179e-05, 1.459699999999814e-05, 1.4499999999997154e-05, 1.3902999999999138e-05, 1.4430999999998778e-05, 1.3888999999999568e-05, 1.4527999999999763e-05, 1.3931000000001748e-05, 1.4027999999999263e-05, 1.3874999999999998e-05, 1.4000000000000123e-05, 1.4431000000002248e-05, 1.4348000000000832e-05, 1.4487000000000527e-05, 1.3805999999998153e-05, 1.4361000000000929e-05, 1.4723000000001207e-05, 1.4111000000000679e-05, 1.4084000000001012e-05, 1.3930000000002274e-05, 1.4598000000001082e-05, 1.4445000000001817e-05, 1.4527999999999763e-05, 1.4194999999998098e-05, 1.4486000000001054e-05, 1.4208000000001664e-05, 1.4362000000000402e-05, 1.4237000000000277e-05, 1.3958000000001414e-05, 1.4500000000000624e-05, 1.380499999999868e-05, 1.4375000000000498e-05, 1.3833000000001289e-05, 1.4415999999999735e-05, 1.402699999999979e-05, 1.3888999999999568e-05, 1.4375000000000498e-05, 1.4250000000000373e-05, 1.4138999999999818e-05, 1.434699999999789e-05, 1.4528000000003233e-05, 1.4165999999999485e-05, 1.4568999999999e-05, 1.3847000000000859e-05, 1.3847000000000859e-05, 1.4402000000000165e-05]</msg>
<status status="PASS" starttime="20201029 18:18:16.577" endtime="20201029 18:18:16.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.573" endtime="20201029 18:18:16.580"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:16.583" endtime="20201029 18:18:16.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.582" endtime="20201029 18:18:16.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.580" endtime="20201029 18:18:16.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.223" endtime="20201029 18:18:16.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.222" endtime="20201029 18:18:16.604"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.613" endtime="20201029 18:18:16.628"></status>
</kw>
<msg timestamp="20201029 18:18:16.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.611" endtime="20201029 18:18:16.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.629" endtime="20201029 18:18:16.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.631" endtime="20201029 18:18:16.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.609" endtime="20201029 18:18:16.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.607" endtime="20201029 18:18:16.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.640" endtime="20201029 18:18:16.926"></status>
</kw>
<msg timestamp="20201029 18:18:16.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021874528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021888444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.639" endtime="20201029 18:18:16.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021874528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021888444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.930" endtime="20201029 18:18:16.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.939" endtime="20201029 18:18:16.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.636" endtime="20201029 18:18:16.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.635" endtime="20201029 18:18:16.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:16.945" level="INFO">${RESULT} = [{'diff': 1.3915999999999235e-05}, {'diff': 1.3986000000000554e-05}, {'diff': 1.4125000000000248e-05}, {'diff': 1.3986000000000554e-05}, {'diff': 1.4138999999999818e-05}, {'diff': 1.4056000000001873e-...</msg>
<status status="PASS" starttime="20201029 18:18:16.942" endtime="20201029 18:18:16.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:16.950" level="INFO">${ACCURACY} = {'diff': [1.3915999999999235e-05, 1.3986000000000554e-05, 1.4125000000000248e-05, 1.3986000000000554e-05, 1.4138999999999818e-05, 1.4056000000001873e-05, 1.4083000000001539e-05, 1.3958000000001414e-05...</msg>
<status status="PASS" starttime="20201029 18:18:16.946" endtime="20201029 18:18:16.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.954" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 18:18:16.953" endtime="20201029 18:18:16.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.956" level="INFO">VALUE: [1.3915999999999235e-05, 1.3986000000000554e-05, 1.4125000000000248e-05, 1.3986000000000554e-05, 1.4138999999999818e-05, 1.4056000000001873e-05, 1.4083000000001539e-05, 1.3958000000001414e-05, 1.4375000000000498e-05, 1.4528000000003233e-05, 1.4347000000001359e-05, 1.4473000000000957e-05, 1.4152999999999388e-05, 1.4055999999998403e-05, 1.4445000000001817e-05, 1.4472000000001484e-05, 1.4527999999999763e-05, 1.4445000000001817e-05, 1.4083000000001539e-05, 1.4347000000001359e-05, 1.3861000000000429e-05, 1.4250000000000373e-05, 1.3834000000000762e-05, 1.4083999999997543e-05, 1.4194999999998098e-05, 1.4542000000002803e-05, 1.4431000000002248e-05, 1.4152999999999388e-05, 1.409699999999764e-05, 1.4542000000002803e-05, 1.4125000000000248e-05, 1.4125000000000248e-05, 1.4374999999997029e-05, 1.4514000000000193e-05, 1.3820000000001192e-05, 1.4263999999999943e-05, 1.3749999999999873e-05, 1.3791999999998583e-05, 1.4348000000000832e-05, 1.380499999999868e-05, 1.431899999999875e-05, 1.3901999999999665e-05, 1.4291999999999083e-05, 1.4209000000001137e-05, 1.4568999999999e-05, 1.4179999999999054e-05, 1.4445000000001817e-05, 1.4195000000001567e-05, 1.384699999999739e-05, 1.4500000000000624e-05]</msg>
<status status="PASS" starttime="20201029 18:18:16.955" endtime="20201029 18:18:16.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.950" endtime="20201029 18:18:16.957"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:16.961" endtime="20201029 18:18:16.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.959" endtime="20201029 18:18:16.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.958" endtime="20201029 18:18:16.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.605" endtime="20201029 18:18:16.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.604" endtime="20201029 18:18:16.982"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.991" endtime="20201029 18:18:17.007"></status>
</kw>
<msg timestamp="20201029 18:18:17.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.989" endtime="20201029 18:18:17.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.008" endtime="20201029 18:18:17.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.011" endtime="20201029 18:18:17.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.987" endtime="20201029 18:18:17.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.985" endtime="20201029 18:18:17.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.020" endtime="20201029 18:18:17.309"></status>
</kw>
<msg timestamp="20201029 18:18:17.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022860486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022874403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.018" endtime="20201029 18:18:17.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022860486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022874403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.314" endtime="20201029 18:18:17.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.322" endtime="20201029 18:18:17.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.015" endtime="20201029 18:18:17.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.014" endtime="20201029 18:18:17.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:17.329" level="INFO">${RESULT} = [{'diff': 1.3917000000002178e-05}, {'diff': 1.4347000000001359e-05}, {'diff': 1.4360999999997459e-05}, {'diff': 1.4374999999997029e-05}, {'diff': 1.4083000000001539e-05}, {'diff': 1.380499999999868e-0...</msg>
<status status="PASS" starttime="20201029 18:18:17.326" endtime="20201029 18:18:17.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:17.334" level="INFO">${ACCURACY} = {'diff': [1.3917000000002178e-05, 1.4347000000001359e-05, 1.4360999999997459e-05, 1.4374999999997029e-05, 1.4083000000001539e-05, 1.380499999999868e-05, 1.4250000000000373e-05, 1.4151999999999915e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:17.331" endtime="20201029 18:18:17.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.338" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 18:18:17.337" endtime="20201029 18:18:17.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.341" level="INFO">VALUE: [1.3917000000002178e-05, 1.4347000000001359e-05, 1.4360999999997459e-05, 1.4374999999997029e-05, 1.4083000000001539e-05, 1.380499999999868e-05, 1.4250000000000373e-05, 1.4151999999999915e-05, 1.3888000000000095e-05, 1.4250000000000373e-05, 1.4457999999998444e-05, 1.401300000000022e-05, 1.4111000000000679e-05, 1.4250000000000373e-05, 1.3915999999999235e-05, 1.4624999999997279e-05, 1.429099999999961e-05, 1.383299999999782e-05, 1.433299999999832e-05, 1.4624999999997279e-05, 1.3944000000001844e-05, 1.4193999999998624e-05, 1.4471999999998014e-05, 1.4652999999999888e-05, 1.454099999999986e-05, 1.3986000000000554e-05, 1.3986000000000554e-05, 1.4013999999999693e-05, 1.4250000000000373e-05, 1.4013999999999693e-05, 1.4179999999999054e-05, 1.4166999999998958e-05, 1.4555000000002899e-05, 1.4263999999999943e-05, 1.4375000000000498e-05, 1.459699999999814e-05, 1.4167000000002428e-05, 1.3833000000001289e-05, 1.4250000000000373e-05, 1.4055999999998403e-05, 1.4458000000001914e-05, 1.3806000000001623e-05, 1.3972000000000984e-05, 1.4694999999998598e-05, 1.4347000000001359e-05, 1.3847000000000859e-05, 1.4514000000000193e-05, 1.4500000000000624e-05, 1.461099999999771e-05, 1.4138999999999818e-05]</msg>
<status status="PASS" starttime="20201029 18:18:17.339" endtime="20201029 18:18:17.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.335" endtime="20201029 18:18:17.343"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:17.347" endtime="20201029 18:18:17.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.345" endtime="20201029 18:18:17.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.344" endtime="20201029 18:18:17.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.983" endtime="20201029 18:18:17.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.982" endtime="20201029 18:18:17.368"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.378" endtime="20201029 18:18:17.392"></status>
</kw>
<msg timestamp="20201029 18:18:17.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.376" endtime="20201029 18:18:17.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.393" endtime="20201029 18:18:17.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.396" endtime="20201029 18:18:17.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.373" endtime="20201029 18:18:17.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.371" endtime="20201029 18:18:17.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.405" endtime="20201029 18:18:17.691"></status>
</kw>
<msg timestamp="20201029 18:18:17.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022700694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022715028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.404" endtime="20201029 18:18:17.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022700694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022715028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.695" endtime="20201029 18:18:17.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.703" endtime="20201029 18:18:17.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.401" endtime="20201029 18:18:17.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.400" endtime="20201029 18:18:17.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:17.711" level="INFO">${RESULT} = [{'diff': 1.4334000000001262e-05}, {'diff': 1.380499999999868e-05}, {'diff': 1.4443999999998874e-05}, {'diff': 1.3944000000001844e-05}, {'diff': 1.4443999999998874e-05}, {'diff': 1.458299999999857e-05...</msg>
<status status="PASS" starttime="20201029 18:18:17.707" endtime="20201029 18:18:17.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:17.717" level="INFO">${ACCURACY} = {'diff': [1.4334000000001262e-05, 1.380499999999868e-05, 1.4443999999998874e-05, 1.3944000000001844e-05, 1.4443999999998874e-05, 1.458299999999857e-05, 1.3777999999999013e-05, 1.4138999999999818e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:17.712" endtime="20201029 18:18:17.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.723" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 18:18:17.722" endtime="20201029 18:18:17.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.726" level="INFO">VALUE: [1.4334000000001262e-05, 1.380499999999868e-05, 1.4443999999998874e-05, 1.3944000000001844e-05, 1.4443999999998874e-05, 1.458299999999857e-05, 1.3777999999999013e-05, 1.4138999999999818e-05, 1.3833000000001289e-05, 1.4679999999999555e-05, 1.3847000000000859e-05, 1.402699999999979e-05, 1.4277999999999513e-05, 1.455499999999943e-05, 1.459699999999814e-05, 1.4138999999999818e-05, 1.3944000000001844e-05, 1.3944000000001844e-05, 1.4291999999999083e-05, 1.4429999999999304e-05, 1.4527999999999763e-05, 1.3944999999997848e-05, 1.4443999999998874e-05, 1.4013999999999693e-05, 1.4222000000001234e-05, 1.4152999999999388e-05, 1.4527999999999763e-05, 1.4527999999999763e-05, 1.3833000000001289e-05, 1.4277999999999513e-05, 1.4527999999999763e-05, 1.4111000000000679e-05, 1.431899999999875e-05, 1.4555999999998903e-05, 1.4555999999998903e-05, 1.4445000000001817e-05, 1.4389000000000068e-05, 1.4166999999998958e-05, 1.4471999999998014e-05, 1.4443999999998874e-05, 1.4208000000001664e-05, 1.4500000000000624e-05, 1.4013999999999693e-05, 1.4305999999998653e-05, 1.4402999999999638e-05, 1.4347000000001359e-05, 1.4083999999997543e-05, 1.4125000000000248e-05, 1.4472000000001484e-05, 1.3777999999999013e-05]</msg>
<status status="PASS" starttime="20201029 18:18:17.724" endtime="20201029 18:18:17.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.718" endtime="20201029 18:18:17.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:17.732" endtime="20201029 18:18:17.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.731" endtime="20201029 18:18:17.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.729" endtime="20201029 18:18:17.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.369" endtime="20201029 18:18:17.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.369" endtime="20201029 18:18:17.753"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.762" endtime="20201029 18:18:17.776"></status>
</kw>
<msg timestamp="20201029 18:18:17.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.760" endtime="20201029 18:18:17.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.777" endtime="20201029 18:18:17.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.780" endtime="20201029 18:18:17.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.758" endtime="20201029 18:18:17.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.755" endtime="20201029 18:18:17.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.789" endtime="20201029 18:18:18.076"></status>
</kw>
<msg timestamp="20201029 18:18:18.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021631569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021645528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.787" endtime="20201029 18:18:18.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021631569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021645528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.080" endtime="20201029 18:18:18.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.088" endtime="20201029 18:18:18.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.785" endtime="20201029 18:18:18.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.783" endtime="20201029 18:18:18.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:18.095" level="INFO">${RESULT} = [{'diff': 1.3959000000000887e-05}, {'diff': 1.4374999999997029e-05}, {'diff': 1.4208000000001664e-05}, {'diff': 1.4415999999999735e-05}, {'diff': 1.427700000000004e-05}, {'diff': 1.4568999999999e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:18.091" endtime="20201029 18:18:18.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:18.099" level="INFO">${ACCURACY} = {'diff': [1.3959000000000887e-05, 1.4374999999997029e-05, 1.4208000000001664e-05, 1.4415999999999735e-05, 1.427700000000004e-05, 1.4568999999999e-05, 1.3930000000002274e-05, 1.4611000000001179e-05, 1....</msg>
<status status="PASS" starttime="20201029 18:18:18.096" endtime="20201029 18:18:18.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.103" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 18:18:18.102" endtime="20201029 18:18:18.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.106" level="INFO">VALUE: [1.3959000000000887e-05, 1.4374999999997029e-05, 1.4208000000001664e-05, 1.4415999999999735e-05, 1.427700000000004e-05, 1.4568999999999e-05, 1.3930000000002274e-05, 1.4611000000001179e-05, 1.3901999999999665e-05, 1.4110999999997209e-05, 1.4263999999999943e-05, 1.4069000000001969e-05, 1.4514000000000193e-05, 1.434699999999789e-05, 1.40689999999985e-05, 1.4319000000002219e-05, 1.4665999999999985e-05, 1.4277999999999513e-05, 1.4125000000000248e-05, 1.4221999999997764e-05, 1.3805000000002149e-05, 1.4457999999998444e-05, 1.4431000000002248e-05, 1.4027999999999263e-05, 1.4430999999998778e-05, 1.4443999999998874e-05, 1.4416999999999208e-05, 1.4221999999997764e-05, 1.3931000000001748e-05, 1.4625000000000749e-05, 1.4527999999999763e-05, 1.3820000000001192e-05, 1.4430999999998778e-05, 1.4541999999999333e-05, 1.4402999999999638e-05, 1.4681000000002498e-05, 1.4347000000001359e-05, 1.4138999999999818e-05, 1.4625000000000749e-05, 1.4485999999997584e-05, 1.4083000000001539e-05, 1.3861000000000429e-05, 1.3986000000000554e-05, 1.3820000000001192e-05, 1.4138999999999818e-05, 1.4680999999999028e-05, 1.3805999999998153e-05, 1.4207999999998194e-05, 1.4138999999999818e-05, 1.4695000000002068e-05]</msg>
<status status="PASS" starttime="20201029 18:18:18.104" endtime="20201029 18:18:18.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.100" endtime="20201029 18:18:18.123"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:18.127" endtime="20201029 18:18:18.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.126" endtime="20201029 18:18:18.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.124" endtime="20201029 18:18:18.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.754" endtime="20201029 18:18:18.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.753" endtime="20201029 18:18:18.148"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.157" endtime="20201029 18:18:18.175"></status>
</kw>
<msg timestamp="20201029 18:18:18.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.155" endtime="20201029 18:18:18.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.176" endtime="20201029 18:18:18.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.179" endtime="20201029 18:18:18.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.152" endtime="20201029 18:18:18.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.150" endtime="20201029 18:18:18.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.188" endtime="20201029 18:18:18.474"></status>
</kw>
<msg timestamp="20201029 18:18:18.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024581042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024595444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.186" endtime="20201029 18:18:18.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024581042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024595444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.478" endtime="20201029 18:18:18.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.486" endtime="20201029 18:18:18.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.184" endtime="20201029 18:18:18.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.182" endtime="20201029 18:18:18.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:18.493" level="INFO">${RESULT} = [{'diff': 1.4402000000000165e-05}, {'diff': 1.4443999999998874e-05}, {'diff': 1.4152999999999388e-05}, {'diff': 1.3792000000002053e-05}, {'diff': 1.3861000000000429e-05}, {'diff': 1.4250000000000373e-...</msg>
<status status="PASS" starttime="20201029 18:18:18.489" endtime="20201029 18:18:18.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:18.497" level="INFO">${ACCURACY} = {'diff': [1.4402000000000165e-05, 1.4443999999998874e-05, 1.4152999999999388e-05, 1.3792000000002053e-05, 1.3861000000000429e-05, 1.4250000000000373e-05, 1.4458000000001914e-05, 1.4319000000002219e-05...</msg>
<status status="PASS" starttime="20201029 18:18:18.494" endtime="20201029 18:18:18.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.501" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 18:18:18.500" endtime="20201029 18:18:18.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.504" level="INFO">VALUE: [1.4402000000000165e-05, 1.4443999999998874e-05, 1.4152999999999388e-05, 1.3792000000002053e-05, 1.3861000000000429e-05, 1.4250000000000373e-05, 1.4458000000001914e-05, 1.4319000000002219e-05, 1.3861000000000429e-05, 1.3791999999998583e-05, 1.4416999999999208e-05, 1.4431000000002248e-05, 1.4138999999999818e-05, 1.4291999999999083e-05, 1.4013999999999693e-05, 1.4236000000000804e-05, 1.3847000000000859e-05, 1.4666999999999458e-05, 1.4027999999999263e-05, 1.4250000000000373e-05, 1.4597999999997613e-05, 1.4457999999998444e-05, 1.3930999999998278e-05, 1.3806000000001623e-05, 1.4027999999999263e-05, 1.3930999999998278e-05, 1.3820000000001192e-05, 1.3861000000000429e-05, 1.3888999999999568e-05, 1.3847000000000859e-05, 1.3708999999997168e-05, 1.4125000000000248e-05, 1.4472000000001484e-05, 1.4625000000000749e-05, 1.4416999999999208e-05, 1.4111000000000679e-05, 1.3874999999999998e-05, 1.4541999999999333e-05, 1.4069999999997973e-05, 1.4125000000000248e-05, 1.4236000000000804e-05, 1.4458999999997918e-05, 1.4138999999999818e-05, 1.3833000000001289e-05, 1.4195000000001567e-05, 1.4319999999998223e-05, 1.4097000000001109e-05, 1.3930000000002274e-05, 1.3820000000001192e-05, 1.4291999999999083e-05]</msg>
<status status="PASS" starttime="20201029 18:18:18.502" endtime="20201029 18:18:18.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.498" endtime="20201029 18:18:18.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:18.509" endtime="20201029 18:18:18.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.508" endtime="20201029 18:18:18.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.507" endtime="20201029 18:18:18.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.149" endtime="20201029 18:18:18.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.148" endtime="20201029 18:18:18.530"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.539" endtime="20201029 18:18:18.553"></status>
</kw>
<msg timestamp="20201029 18:18:18.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.537" endtime="20201029 18:18:18.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.555" endtime="20201029 18:18:18.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.557" endtime="20201029 18:18:18.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.535" endtime="20201029 18:18:18.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.532" endtime="20201029 18:18:18.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.566" endtime="20201029 18:18:18.852"></status>
</kw>
<msg timestamp="20201029 18:18:18.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021652625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021668139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.565" endtime="20201029 18:18:18.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021652625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021668139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.856" endtime="20201029 18:18:18.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.864" endtime="20201029 18:18:18.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.562" endtime="20201029 18:18:18.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.560" endtime="20201029 18:18:18.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:18.871" level="INFO">${RESULT} = [{'diff': 1.5513999999997724e-05}, {'diff': 1.5207999999999194e-05}, {'diff': 1.5387999999998125e-05}, {'diff': 1.5415999999997265e-05}, {'diff': 1.554100000000086e-05}, {'diff': 1.502699999999732e-05...</msg>
<status status="PASS" starttime="20201029 18:18:18.868" endtime="20201029 18:18:18.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:18.876" level="INFO">${ACCURACY} = {'diff': [1.5513999999997724e-05, 1.5207999999999194e-05, 1.5387999999998125e-05, 1.5415999999997265e-05, 1.554100000000086e-05, 1.502699999999732e-05, 1.4957999999998944e-05, 1.508299999999907e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:18:18.872" endtime="20201029 18:18:18.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.881" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 18:18:18.880" endtime="20201029 18:18:18.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.883" level="INFO">VALUE: [1.5513999999997724e-05, 1.5207999999999194e-05, 1.5387999999998125e-05, 1.5415999999997265e-05, 1.554100000000086e-05, 1.502699999999732e-05, 1.4957999999998944e-05, 1.508299999999907e-05, 1.483299999999882e-05, 1.483299999999882e-05, 1.4957999999998944e-05, 1.5125000000001249e-05, 1.4943999999999374e-05, 1.531899999999975e-05, 1.480499999999968e-05, 1.5236000000001804e-05, 1.554100000000086e-05, 1.5083000000002539e-05, 1.565300000000089e-05, 1.5457999999999444e-05, 1.480499999999968e-05, 1.558300000000304e-05, 1.5125000000001249e-05, 1.540299999999717e-05, 1.4971999999998514e-05, 1.563899999999785e-05, 1.4889000000000568e-05, 1.4971999999998514e-05, 1.5569e-05, 1.559699999999914e-05, 1.483299999999882e-05, 1.5195000000002568e-05, 1.4957999999998944e-05, 1.5166999999999958e-05, 1.541700000000021e-05, 1.530500000000018e-05, 1.5471999999999014e-05, 1.5250000000001374e-05, 1.5457999999999444e-05, 1.5180999999999528e-05, 1.4916999999999708e-05, 1.534700000000236e-05, 1.538900000000107e-05, 1.561100000000218e-05, 1.5028000000000263e-05, 1.5250000000001374e-05, 1.5111000000001679e-05, 1.5014000000000693e-05, 1.5472000000002484e-05, 1.5319999999999223e-05]</msg>
<status status="PASS" starttime="20201029 18:18:18.882" endtime="20201029 18:18:18.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.877" endtime="20201029 18:18:18.884"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:18.888" endtime="20201029 18:18:18.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.886" endtime="20201029 18:18:18.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.885" endtime="20201029 18:18:18.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.531" endtime="20201029 18:18:18.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.530" endtime="20201029 18:18:18.909"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.917" endtime="20201029 18:18:18.931"></status>
</kw>
<msg timestamp="20201029 18:18:18.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.916" endtime="20201029 18:18:18.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.933" endtime="20201029 18:18:18.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.935" endtime="20201029 18:18:18.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.913" endtime="20201029 18:18:18.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.911" endtime="20201029 18:18:18.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.944" endtime="20201029 18:18:19.233"></status>
</kw>
<msg timestamp="20201029 18:18:19.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021601542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021617431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.943" endtime="20201029 18:18:19.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021601542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021617431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:19.237" endtime="20201029 18:18:19.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.246" endtime="20201029 18:18:19.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.940" endtime="20201029 18:18:19.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.938" endtime="20201029 18:18:19.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:19.252" level="INFO">${RESULT} = [{'diff': 1.58889999999981e-05}, {'diff': 1.604100000000136e-05}, {'diff': 1.6485999999999584e-05}, {'diff': 1.580499999999721e-05}, {'diff': 1.6223000000002707e-05}, {'diff': 1.5875000000002e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:19.249" endtime="20201029 18:18:19.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:19.256" level="INFO">${ACCURACY} = {'diff': [1.58889999999981e-05, 1.604100000000136e-05, 1.6485999999999584e-05, 1.580499999999721e-05, 1.6223000000002707e-05, 1.5875000000002e-05, 1.5944000000000375e-05, 1.5778000000001013e-05, 1.605...</msg>
<status status="PASS" starttime="20201029 18:18:19.253" endtime="20201029 18:18:19.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.261" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 18:18:19.260" endtime="20201029 18:18:19.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.264" level="INFO">VALUE: [1.58889999999981e-05, 1.604100000000136e-05, 1.6485999999999584e-05, 1.580499999999721e-05, 1.6223000000002707e-05, 1.5875000000002e-05, 1.5944000000000375e-05, 1.5778000000001013e-05, 1.6056000000000403e-05, 1.6014000000001694e-05, 1.613899999999835e-05, 1.584699999999939e-05, 1.612499999999878e-05, 1.615299999999792e-05, 1.6181000000000528e-05, 1.665299999999842e-05, 1.5778000000001013e-05, 1.638900000000207e-05, 1.6193999999997155e-05, 1.581900000000025e-05, 1.6556000000000903e-05, 1.6014000000001694e-05, 1.611099999999921e-05, 1.659700000000014e-05, 1.6069999999999973e-05, 1.5778000000001013e-05, 1.6278000000001513e-05, 1.6235999999999334e-05, 1.5749999999998404e-05, 1.666700000000146e-05, 1.6749999999999404e-05, 1.588900000000157e-05, 1.5931000000000278e-05, 1.5972999999998988e-05, 1.591700000000071e-05, 1.6320000000000223e-05, 1.6291999999997614e-05, 1.612499999999878e-05, 1.6014000000001694e-05, 1.5777999999997544e-05, 1.663899999999885e-05, 1.6028000000001263e-05, 1.5833999999999293e-05, 1.613900000000182e-05, 1.5973000000002457e-05, 1.6597999999999613e-05, 1.588900000000157e-05, 1.6194000000000625e-05, 1.5735999999998834e-05, 1.6597999999999613e-05]</msg>
<status status="PASS" starttime="20201029 18:18:19.262" endtime="20201029 18:18:19.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.257" endtime="20201029 18:18:19.265"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:19.269" endtime="20201029 18:18:19.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.268" endtime="20201029 18:18:19.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.266" endtime="20201029 18:18:19.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.909" endtime="20201029 18:18:19.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.909" endtime="20201029 18:18:19.290"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.299" endtime="20201029 18:18:19.315"></status>
</kw>
<msg timestamp="20201029 18:18:19.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.297" endtime="20201029 18:18:19.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.317" endtime="20201029 18:18:19.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.319" endtime="20201029 18:18:19.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.295" endtime="20201029 18:18:19.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.293" endtime="20201029 18:18:19.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.328" endtime="20201029 18:18:19.613"></status>
</kw>
<msg timestamp="20201029 18:18:19.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022694917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022712042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:19.327" endtime="20201029 18:18:19.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022694917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022712042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:19.617" endtime="20201029 18:18:19.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.626" endtime="20201029 18:18:19.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.324" endtime="20201029 18:18:19.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.322" endtime="20201029 18:18:19.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:19.632" level="INFO">${RESULT} = [{'diff': 1.712500000000325e-05}, {'diff': 1.73889999999996e-05}, {'diff': 1.741699999999874e-05}, {'diff': 1.712499999999978e-05}, {'diff': 1.683300000000082e-05}, {'diff': 1.7528000000002764e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:19.629" endtime="20201029 18:18:19.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:19.636" level="INFO">${ACCURACY} = {'diff': [1.712500000000325e-05, 1.73889999999996e-05, 1.741699999999874e-05, 1.712499999999978e-05, 1.683300000000082e-05, 1.7528000000002764e-05, 1.7513999999999724e-05, 1.7291999999998614e-05, 1.70...</msg>
<status status="PASS" starttime="20201029 18:18:19.633" endtime="20201029 18:18:19.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.641" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 18:18:19.640" endtime="20201029 18:18:19.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.643" level="INFO">VALUE: [1.712500000000325e-05, 1.73889999999996e-05, 1.741699999999874e-05, 1.712499999999978e-05, 1.683300000000082e-05, 1.7528000000002764e-05, 1.7513999999999724e-05, 1.7291999999998614e-05, 1.704100000000236e-05, 1.73889999999996e-05, 1.7207999999997725e-05, 1.7444000000001875e-05, 1.740299999999917e-05, 1.741700000000221e-05, 1.734700000000089e-05, 1.7249999999999904e-05, 1.681900000000125e-05, 1.7041999999998364e-05, 1.7569000000002e-05, 1.734700000000089e-05, 1.713899999999935e-05, 1.7278000000002514e-05, 1.715299999999892e-05, 1.754099999999939e-05, 1.7472000000001014e-05, 1.7305999999998184e-05, 1.736100000000046e-05, 1.6972000000000514e-05, 1.762500000000028e-05, 1.713899999999935e-05, 1.7263999999999474e-05, 1.740300000000264e-05, 1.7541999999998864e-05, 1.7334000000000793e-05, 1.7500000000000154e-05, 1.7222000000000764e-05, 1.75829999999981e-05, 1.7263999999999474e-05, 1.6959000000000418e-05, 1.6806000000001153e-05, 1.7570000000001473e-05, 1.68889999999991e-05, 1.6999999999999654e-05, 1.6834000000000293e-05, 1.7306000000001653e-05, 1.7263999999999474e-05, 1.7597999999997144e-05, 1.68889999999991e-05, 1.744499999999788e-05, 1.7542000000002334e-05]</msg>
<status status="PASS" starttime="20201029 18:18:19.642" endtime="20201029 18:18:19.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.637" endtime="20201029 18:18:19.645"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:19.649" endtime="20201029 18:18:19.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.648" endtime="20201029 18:18:19.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.646" endtime="20201029 18:18:19.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.291" endtime="20201029 18:18:19.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.290" endtime="20201029 18:18:19.670"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.678" endtime="20201029 18:18:19.693"></status>
</kw>
<msg timestamp="20201029 18:18:19.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.677" endtime="20201029 18:18:19.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.695" endtime="20201029 18:18:19.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.697" endtime="20201029 18:18:19.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.674" endtime="20201029 18:18:19.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.672" endtime="20201029 18:18:19.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.706" endtime="20201029 18:18:19.989"></status>
</kw>
<msg timestamp="20201029 18:18:19.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021853222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:19.705" endtime="20201029 18:18:19.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021853222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:19.994" endtime="20201029 18:18:20.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.002" endtime="20201029 18:18:20.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.702" endtime="20201029 18:18:20.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.700" endtime="20201029 18:18:20.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:20.008" level="INFO">${RESULT} = [{'diff': 1.809699999999817e-05}, {'diff': 1.8027999999999794e-05}, {'diff': 1.854099999999692e-05}, {'diff': 1.844499999999888e-05}, {'diff': 1.8555999999999434e-05}, {'diff': 1.790299999999967e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:20.005" endtime="20201029 18:18:20.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:20.013" level="INFO">${ACCURACY} = {'diff': [1.809699999999817e-05, 1.8027999999999794e-05, 1.854099999999692e-05, 1.844499999999888e-05, 1.8555999999999434e-05, 1.790299999999967e-05, 1.844499999999888e-05, 1.813900000000035e-05, 1.85...</msg>
<status status="PASS" starttime="20201029 18:18:20.009" endtime="20201029 18:18:20.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.018" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 18:18:20.017" endtime="20201029 18:18:20.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.020" level="INFO">VALUE: [1.809699999999817e-05, 1.8027999999999794e-05, 1.854099999999692e-05, 1.844499999999888e-05, 1.8555999999999434e-05, 1.790299999999967e-05, 1.844499999999888e-05, 1.813900000000035e-05, 1.8598000000001613e-05, 1.841699999999974e-05, 1.8209000000001668e-05, 1.843099999999931e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.8041999999999364e-05, 1.8333999999998324e-05, 1.805499999999946e-05, 1.855499999999996e-05, 1.829100000000014e-05, 1.7973000000000988e-05, 1.8487000000001058e-05, 1.8291999999999614e-05, 1.7902000000000196e-05, 1.7985999999997615e-05, 1.8221999999998295e-05, 1.804099999999989e-05, 1.852700000000082e-05, 1.851299999999778e-05, 1.831899999999928e-05, 1.8193999999999155e-05, 1.8429999999999835e-05, 1.855499999999996e-05, 1.831899999999928e-05, 1.7958000000001945e-05, 1.856899999999953e-05, 1.7985999999997615e-05, 1.8264000000000474e-05, 1.7902000000000196e-05, 1.7778000000003014e-05, 1.833299999999885e-05, 1.8166000000000015e-05, 1.7777999999999544e-05, 1.8264000000000474e-05, 1.8041999999999364e-05, 1.8263999999997005e-05, 1.813900000000035e-05, 1.806899999999903e-05, 1.780499999999921e-05, 1.7943999999998905e-05, 1.811100000000121e-05]</msg>
<status status="PASS" starttime="20201029 18:18:20.019" endtime="20201029 18:18:20.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.014" endtime="20201029 18:18:20.022"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:20.025" endtime="20201029 18:18:20.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.024" endtime="20201029 18:18:20.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.023" endtime="20201029 18:18:20.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.671" endtime="20201029 18:18:20.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.670" endtime="20201029 18:18:20.046"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.054" endtime="20201029 18:18:20.070"></status>
</kw>
<msg timestamp="20201029 18:18:20.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.053" endtime="20201029 18:18:20.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.071" endtime="20201029 18:18:20.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.075" endtime="20201029 18:18:20.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.050" endtime="20201029 18:18:20.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.048" endtime="20201029 18:18:20.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.089" endtime="20201029 18:18:20.378"></status>
</kw>
<msg timestamp="20201029 18:18:20.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021577806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021597514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:20.086" endtime="20201029 18:18:20.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021577806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021597514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:20.382" endtime="20201029 18:18:20.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.391" endtime="20201029 18:18:20.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.083" endtime="20201029 18:18:20.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.080" endtime="20201029 18:18:20.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:20.398" level="INFO">${RESULT} = [{'diff': 1.9708000000000225e-05}, {'diff': 1.919499999999963e-05}, {'diff': 1.9513999999998255e-05}, {'diff': 1.9027999999997325e-05}, {'diff': 1.962499999999881e-05}, {'diff': 1.944499999999988e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:20.394" endtime="20201029 18:18:20.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:20.402" level="INFO">${ACCURACY} = {'diff': [1.9708000000000225e-05, 1.919499999999963e-05, 1.9513999999998255e-05, 1.9027999999997325e-05, 1.962499999999881e-05, 1.944499999999988e-05, 1.9402000000001696e-05, 1.894499999999938e-05, 1....</msg>
<status status="PASS" starttime="20201029 18:18:20.399" endtime="20201029 18:18:20.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.407" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 18:18:20.406" endtime="20201029 18:18:20.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.409" level="INFO">VALUE: [1.9708000000000225e-05, 1.919499999999963e-05, 1.9513999999998255e-05, 1.9027999999997325e-05, 1.962499999999881e-05, 1.944499999999988e-05, 1.9402000000001696e-05, 1.894499999999938e-05, 1.9028000000000794e-05, 1.931900000000028e-05, 1.8848000000001863e-05, 1.9250000000001904e-05, 1.9401999999998226e-05, 1.880500000000021e-05, 1.8930000000000335e-05, 1.936100000000246e-05, 1.886099999999849e-05, 1.8735999999998365e-05, 1.906900000000003e-05, 1.9194000000000155e-05, 1.890300000000067e-05, 1.906900000000003e-05, 1.9194000000000155e-05, 1.8943999999999905e-05, 1.956900000000053e-05, 1.9180000000000585e-05, 1.88890000000011e-05, 1.8777999999997075e-05, 1.8930000000000335e-05, 1.8930000000000335e-05, 1.9235999999998865e-05, 1.9542000000000864e-05, 1.9235999999998865e-05, 1.929099999999767e-05, 1.9207999999999725e-05, 1.8971999999999045e-05, 1.9542000000000864e-05, 1.940300000000117e-05, 1.90829999999996e-05, 1.909699999999917e-05, 1.880500000000021e-05, 1.8971999999999045e-05, 1.9486000000002585e-05, 1.9514000000001724e-05, 1.881899999999978e-05, 1.887499999999806e-05, 1.9250000000001904e-05, 1.965300000000142e-05, 1.943099999999684e-05, 1.884699999999892e-05]</msg>
<status status="PASS" starttime="20201029 18:18:20.408" endtime="20201029 18:18:20.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.403" endtime="20201029 18:18:20.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:20.414" endtime="20201029 18:18:20.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.413" endtime="20201029 18:18:20.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.412" endtime="20201029 18:18:20.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.047" endtime="20201029 18:18:20.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.046" endtime="20201029 18:18:20.435"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.444" endtime="20201029 18:18:20.460"></status>
</kw>
<msg timestamp="20201029 18:18:20.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.443" endtime="20201029 18:18:20.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.462" endtime="20201029 18:18:20.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.466" endtime="20201029 18:18:20.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.440" endtime="20201029 18:18:20.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.438" endtime="20201029 18:18:20.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.476" endtime="20201029 18:18:20.763"></status>
</kw>
<msg timestamp="20201029 18:18:20.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023230444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023250611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:20.474" endtime="20201029 18:18:20.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023230444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023250611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:20.769" endtime="20201029 18:18:20.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.778" endtime="20201029 18:18:20.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.472" endtime="20201029 18:18:20.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.470" endtime="20201029 18:18:20.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:20.785" level="INFO">${RESULT} = [{'diff': 2.016700000000149e-05}, {'diff': 1.997299999999952e-05}, {'diff': 2.022299999999977e-05}, {'diff': 2.061100000000024e-05}, {'diff': 2.030499999999824e-05}, {'diff': 2.0528000000002294e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:20.782" endtime="20201029 18:18:20.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:20.790" level="INFO">${ACCURACY} = {'diff': [2.016700000000149e-05, 1.997299999999952e-05, 2.022299999999977e-05, 2.061100000000024e-05, 2.030499999999824e-05, 2.0528000000002294e-05, 2.0042000000001364e-05, 1.9778000000001544e-05, 2.0...</msg>
<status status="PASS" starttime="20201029 18:18:20.786" endtime="20201029 18:18:20.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.794" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 18:18:20.793" endtime="20201029 18:18:20.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.797" level="INFO">VALUE: [2.016700000000149e-05, 1.997299999999952e-05, 2.022299999999977e-05, 2.061100000000024e-05, 2.030499999999824e-05, 2.0528000000002294e-05, 2.0042000000001364e-05, 1.9778000000001544e-05, 2.00830000000006e-05, 2.0151999999998976e-05, 2.013899999999888e-05, 2.004100000000189e-05, 1.983300000000035e-05, 1.981900000000078e-05, 2.059700000000067e-05, 2.056900000000153e-05, 2.02769999999991e-05, 2.0208000000000725e-05, 2.05830000000011e-05, 2.0472000000000545e-05, 2.030499999999824e-05, 2.05830000000011e-05, 1.9986000000003085e-05, 2.0249999999999435e-05, 2.034700000000042e-05, 1.984699999999992e-05, 2.031900000000128e-05, 2.005499999999799e-05, 1.980500000000121e-05, 1.988899999999863e-05, 2.004100000000189e-05, 2.0679999999998616e-05, 1.979100000000164e-05, 1.9806000000000684e-05, 2.009700000000017e-05, 2.015299999999845e-05, 2.0263999999999005e-05, 2.0736000000000365e-05, 1.9750000000002405e-05, 2.0013999999998755e-05, 1.991700000000124e-05, 2.005500000000146e-05, 2.0194000000001155e-05, 1.988899999999863e-05, 1.987499999999906e-05, 2.0527999999998825e-05, 2.056900000000153e-05, 2.0291999999998145e-05, 1.990300000000167e-05, 2.016699999999802e-05]</msg>
<status status="PASS" starttime="20201029 18:18:20.796" endtime="20201029 18:18:20.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.791" endtime="20201029 18:18:20.799"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:20.803" endtime="20201029 18:18:20.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.801" endtime="20201029 18:18:20.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.800" endtime="20201029 18:18:20.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.436" endtime="20201029 18:18:20.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.436" endtime="20201029 18:18:20.824"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.833" endtime="20201029 18:18:20.848"></status>
</kw>
<msg timestamp="20201029 18:18:20.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.831" endtime="20201029 18:18:20.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.849" endtime="20201029 18:18:20.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.852" endtime="20201029 18:18:20.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.828" endtime="20201029 18:18:20.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.826" endtime="20201029 18:18:20.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.865" endtime="20201029 18:18:21.196"></status>
</kw>
<msg timestamp="20201029 18:18:21.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022508514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022529708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:20.862" endtime="20201029 18:18:21.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022508514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022529708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:21.203" endtime="20201029 18:18:21.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.212" endtime="20201029 18:18:21.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.857" endtime="20201029 18:18:21.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.855" endtime="20201029 18:18:21.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:21.219" level="INFO">${RESULT} = [{'diff': 2.1193999999998686e-05}, {'diff': 2.118099999999859e-05}, {'diff': 2.1277999999999575e-05}, {'diff': 2.1236000000000865e-05}, {'diff': 2.0820000000001254e-05}, {'diff': 2.0763999999999505e-0...</msg>
<status status="PASS" starttime="20201029 18:18:21.216" endtime="20201029 18:18:21.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:21.225" level="INFO">${ACCURACY} = {'diff': [2.1193999999998686e-05, 2.118099999999859e-05, 2.1277999999999575e-05, 2.1236000000000865e-05, 2.0820000000001254e-05, 2.0763999999999505e-05, 2.0819999999997785e-05, 2.1347999999997425e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:21.220" endtime="20201029 18:18:21.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.229" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 18:18:21.228" endtime="20201029 18:18:21.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.232" level="INFO">VALUE: [2.1193999999998686e-05, 2.118099999999859e-05, 2.1277999999999575e-05, 2.1236000000000865e-05, 2.0820000000001254e-05, 2.0763999999999505e-05, 2.0819999999997785e-05, 2.1347999999997425e-05, 2.161100000000124e-05, 2.1514000000000255e-05, 2.1402000000000226e-05, 2.1264000000000005e-05, 2.1264000000000005e-05, 2.165299999999995e-05, 2.1027999999999325e-05, 2.1055999999998465e-05, 2.161099999999777e-05, 2.1542000000002864e-05, 2.1264000000000005e-05, 2.0848000000000394e-05, 2.143099999999884e-05, 2.1208000000001725e-05, 2.1429999999999366e-05, 2.173700000000084e-05, 2.1250000000000435e-05, 2.10969999999977e-05, 2.148699999999712e-05, 2.119500000000163e-05, 2.1458000000001975e-05, 2.1193999999998686e-05, 2.0957999999998006e-05, 2.1402000000000226e-05, 2.105499999999899e-05, 2.1500000000000685e-05, 2.0915999999999296e-05, 2.09029999999992e-05, 2.0985999999997146e-05, 2.1415999999999796e-05, 2.163900000000038e-05, 2.1179999999999116e-05, 2.155500000000296e-05, 2.130499999999924e-05, 2.1000000000000185e-05, 2.087500000000006e-05, 2.0792000000002114e-05, 2.0972000000001045e-05, 2.14029999999997e-05, 2.106899999999856e-05, 2.0763999999999505e-05, 2.1485999999997646e-05]</msg>
<status status="PASS" starttime="20201029 18:18:21.231" endtime="20201029 18:18:21.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.225" endtime="20201029 18:18:21.234"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:21.237" endtime="20201029 18:18:21.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.236" endtime="20201029 18:18:21.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.235" endtime="20201029 18:18:21.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.824" endtime="20201029 18:18:21.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.824" endtime="20201029 18:18:21.258"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.267" endtime="20201029 18:18:21.283"></status>
</kw>
<msg timestamp="20201029 18:18:21.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.266" endtime="20201029 18:18:21.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.284" endtime="20201029 18:18:21.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.287" endtime="20201029 18:18:21.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.263" endtime="20201029 18:18:21.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.261" endtime="20201029 18:18:21.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.297" endtime="20201029 18:18:21.586"></status>
</kw>
<msg timestamp="20201029 18:18:21.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022248208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022270514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:21.295" endtime="20201029 18:18:21.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022248208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022270514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:21.591" endtime="20201029 18:18:21.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.599" endtime="20201029 18:18:21.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.292" endtime="20201029 18:18:21.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.290" endtime="20201029 18:18:21.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:21.606" level="INFO">${RESULT} = [{'diff': 2.2306000000003184e-05}, {'diff': 2.188900000000063e-05}, {'diff': 2.176300000000103e-05}, {'diff': 2.2194000000003156e-05}, {'diff': 2.2166000000000546e-05}, {'diff': 2.1929999999999866e-05...</msg>
<status status="PASS" starttime="20201029 18:18:21.603" endtime="20201029 18:18:21.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:21.611" level="INFO">${ACCURACY} = {'diff': [2.2306000000003184e-05, 2.188900000000063e-05, 2.176300000000103e-05, 2.2194000000003156e-05, 2.2166000000000546e-05, 2.1929999999999866e-05, 2.2443999999999936e-05, 2.183300000000235e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:18:21.607" endtime="20201029 18:18:21.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.615" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 18:18:21.614" endtime="20201029 18:18:21.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.618" level="INFO">VALUE: [2.2306000000003184e-05, 2.188900000000063e-05, 2.176300000000103e-05, 2.2194000000003156e-05, 2.2166000000000546e-05, 2.1929999999999866e-05, 2.2443999999999936e-05, 2.183300000000235e-05, 2.2430000000000366e-05, 2.1971999999998576e-05, 2.231899999999981e-05, 2.2055999999999465e-05, 2.2249999999997966e-05, 2.213900000000088e-05, 2.205499999999999e-05, 2.2457999999999506e-05, 2.2278000000000575e-05, 2.2014000000000755e-05, 2.261099999999877e-05, 2.2028000000000325e-05, 2.1764000000000505e-05, 2.25969999999992e-05, 2.2514000000001255e-05, 2.233300000000285e-05, 2.1986000000001615e-05, 2.206900000000303e-05, 2.1805999999999215e-05, 2.2457999999999506e-05, 2.2193999999999686e-05, 2.241700000000027e-05, 2.208299999999913e-05, 2.2457999999999506e-05, 2.2207999999999256e-05, 2.187499999999759e-05, 2.2083999999998605e-05, 2.237500000000156e-05, 2.2514000000001255e-05, 2.237500000000156e-05, 2.2569999999999535e-05, 2.2292000000000145e-05, 2.2584000000002574e-05, 2.238900000000113e-05, 2.2000000000001185e-05, 2.212499999999784e-05, 2.2598000000002144e-05, 2.1792000000003114e-05, 2.255500000000049e-05, 2.1847999999997925e-05, 2.2569999999999535e-05, 2.2083999999998605e-05]</msg>
<status status="PASS" starttime="20201029 18:18:21.616" endtime="20201029 18:18:21.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.612" endtime="20201029 18:18:21.619"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:21.623" endtime="20201029 18:18:21.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.621" endtime="20201029 18:18:21.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.620" endtime="20201029 18:18:21.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.259" endtime="20201029 18:18:21.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.259" endtime="20201029 18:18:21.644"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.653" endtime="20201029 18:18:21.672"></status>
</kw>
<msg timestamp="20201029 18:18:21.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.651" endtime="20201029 18:18:21.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.673" endtime="20201029 18:18:21.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.676" endtime="20201029 18:18:21.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.649" endtime="20201029 18:18:21.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.646" endtime="20201029 18:18:21.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.685" endtime="20201029 18:18:21.972"></status>
</kw>
<msg timestamp="20201029 18:18:21.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025712833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025736542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:21.684" endtime="20201029 18:18:21.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025712833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025736542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:21.976" endtime="20201029 18:18:21.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.985" endtime="20201029 18:18:21.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.681" endtime="20201029 18:18:21.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.679" endtime="20201029 18:18:21.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:21.992" level="INFO">${RESULT} = [{'diff': 2.370900000000023e-05}, {'diff': 2.284699999999945e-05}, {'diff': 2.308300000000013e-05}, {'diff': 2.3444000000000936e-05}, {'diff': 2.329100000000167e-05}, {'diff': 2.311099999999927e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:21.988" endtime="20201029 18:18:21.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:21.996" level="INFO">${ACCURACY} = {'diff': [2.370900000000023e-05, 2.284699999999945e-05, 2.308300000000013e-05, 2.3444000000000936e-05, 2.329100000000167e-05, 2.311099999999927e-05, 2.32090000000032e-05, 2.3013999999998286e-05, 2.281...</msg>
<status status="PASS" starttime="20201029 18:18:21.993" endtime="20201029 18:18:21.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.000" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 18:18:21.999" endtime="20201029 18:18:22.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.003" level="INFO">VALUE: [2.370900000000023e-05, 2.284699999999945e-05, 2.308300000000013e-05, 2.3444000000000936e-05, 2.329100000000167e-05, 2.311099999999927e-05, 2.32090000000032e-05, 2.3013999999998286e-05, 2.281900000000031e-05, 2.2958000000000006e-05, 2.3568999999997592e-05, 2.313899999999841e-05, 2.3250000000002435e-05, 2.283300000000335e-05, 2.3042000000000895e-05, 2.280500000000074e-05, 2.3291999999997676e-05, 2.3263999999998536e-05, 2.3528000000001825e-05, 2.2806000000000215e-05, 2.3056000000000465e-05, 2.344500000000041e-05, 2.3541999999997926e-05, 2.3027999999997856e-05, 2.315300000000145e-05, 2.287499999999859e-05, 2.3056000000000465e-05, 2.2833999999999355e-05, 2.358300000000063e-05, 2.347299999999955e-05, 2.2848000000002394e-05, 2.2791999999997176e-05, 2.3320000000000285e-05, 2.3570000000000535e-05, 2.3527999999998356e-05, 2.29030000000012e-05, 2.347299999999955e-05, 2.3513999999998786e-05, 2.3070000000000035e-05, 2.3070000000000035e-05, 2.356900000000106e-05, 2.3570000000000535e-05, 2.284700000000292e-05, 2.3554999999998022e-05, 2.3361999999998995e-05, 2.2901999999998257e-05, 2.316700000000102e-05, 2.35970000000002e-05, 2.312499999999884e-05, 2.363899999999891e-05]</msg>
<status status="PASS" starttime="20201029 18:18:22.002" endtime="20201029 18:18:22.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.997" endtime="20201029 18:18:22.005"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:22.009" endtime="20201029 18:18:22.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.008" endtime="20201029 18:18:22.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.006" endtime="20201029 18:18:22.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.645" endtime="20201029 18:18:22.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.644" endtime="20201029 18:18:22.030"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.039" endtime="20201029 18:18:22.054"></status>
</kw>
<msg timestamp="20201029 18:18:22.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.037" endtime="20201029 18:18:22.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.056" endtime="20201029 18:18:22.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.059" endtime="20201029 18:18:22.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.035" endtime="20201029 18:18:22.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.033" endtime="20201029 18:18:22.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.068" endtime="20201029 18:18:22.355"></status>
</kw>
<msg timestamp="20201029 18:18:22.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022317819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022341722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:22.066" endtime="20201029 18:18:22.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022317819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022341722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:22.360" endtime="20201029 18:18:22.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.368" endtime="20201029 18:18:22.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.064" endtime="20201029 18:18:22.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.062" endtime="20201029 18:18:22.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:22.375" level="INFO">${RESULT} = [{'diff': 2.39030000000022e-05}, {'diff': 2.411100000000027e-05}, {'diff': 2.434700000000095e-05}, {'diff': 2.445900000000098e-05}, {'diff': 2.4055999999997996e-05}, {'diff': 2.4541999999998926e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:22.372" endtime="20201029 18:18:22.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:22.380" level="INFO">${ACCURACY} = {'diff': [2.39030000000022e-05, 2.411100000000027e-05, 2.434700000000095e-05, 2.445900000000098e-05, 2.4055999999997996e-05, 2.4541999999998926e-05, 2.4291999999998676e-05, 2.437500000000009e-05, 2.46...</msg>
<status status="PASS" starttime="20201029 18:18:22.376" endtime="20201029 18:18:22.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.385" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 18:18:22.384" endtime="20201029 18:18:22.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.388" level="INFO">VALUE: [2.39030000000022e-05, 2.411100000000027e-05, 2.434700000000095e-05, 2.445900000000098e-05, 2.4055999999997996e-05, 2.4541999999998926e-05, 2.4291999999998676e-05, 2.437500000000009e-05, 2.469500000000166e-05, 2.3834000000000355e-05, 2.3820000000000785e-05, 2.390299999999873e-05, 2.4112000000003214e-05, 2.3986000000000146e-05, 2.4500000000000216e-05, 2.413900000000288e-05, 2.3930000000001866e-05, 2.3776999999999132e-05, 2.429100000000267e-05, 2.4165999999999077e-05, 2.4471999999997607e-05, 2.40970000000007e-05, 2.461100000000077e-05, 2.393100000000134e-05, 2.45970000000012e-05, 2.4415999999999327e-05, 2.454100000000292e-05, 2.4151999999999507e-05, 2.458300000000163e-05, 2.430500000000224e-05, 2.438899999999966e-05, 2.4485999999997177e-05, 2.4208000000001256e-05, 2.4429999999998897e-05, 2.4540999999999452e-05, 2.4013999999999286e-05, 2.4082999999997662e-05, 2.380500000000174e-05, 2.3999999999999716e-05, 2.3971999999997107e-05, 2.406900000000156e-05, 2.4236000000000396e-05, 2.388899999999916e-05, 2.4401999999999757e-05, 2.39169999999983e-05, 2.456900000000206e-05, 2.386100000000002e-05, 2.4305999999998246e-05, 2.4458000000001506e-05, 2.4707999999998287e-05]</msg>
<status status="PASS" starttime="20201029 18:18:22.386" endtime="20201029 18:18:22.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.381" endtime="20201029 18:18:22.389"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:22.393" endtime="20201029 18:18:22.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.391" endtime="20201029 18:18:22.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.390" endtime="20201029 18:18:22.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.031" endtime="20201029 18:18:22.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.030" endtime="20201029 18:18:22.414"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.423" endtime="20201029 18:18:22.438"></status>
</kw>
<msg timestamp="20201029 18:18:22.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.421" endtime="20201029 18:18:22.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.440" endtime="20201029 18:18:22.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.442" endtime="20201029 18:18:22.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.418" endtime="20201029 18:18:22.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.416" endtime="20201029 18:18:22.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.452" endtime="20201029 18:18:22.739"></status>
</kw>
<msg timestamp="20201029 18:18:22.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022308861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:22.450" endtime="20201029 18:18:22.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022308861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:22.744" endtime="20201029 18:18:22.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.752" endtime="20201029 18:18:22.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.448" endtime="20201029 18:18:22.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.446" endtime="20201029 18:18:22.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:22.759" level="INFO">${RESULT} = [{'diff': 2.569499999999919e-05}, {'diff': 2.5443999999999467e-05}, {'diff': 2.534700000000195e-05}, {'diff': 2.4972000000001576e-05}, {'diff': 2.4777999999999606e-05}, {'diff': 2.4818999999998842e-05...</msg>
<status status="PASS" starttime="20201029 18:18:22.756" endtime="20201029 18:18:22.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:22.764" level="INFO">${ACCURACY} = {'diff': [2.569499999999919e-05, 2.5443999999999467e-05, 2.534700000000195e-05, 2.4972000000001576e-05, 2.4777999999999606e-05, 2.4818999999998842e-05, 2.5291999999999676e-05, 2.5250000000000966e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:22.760" endtime="20201029 18:18:22.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.768" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 18:18:22.767" endtime="20201029 18:18:22.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.771" level="INFO">VALUE: [2.569499999999919e-05, 2.5443999999999467e-05, 2.534700000000195e-05, 2.4972000000001576e-05, 2.4777999999999606e-05, 2.4818999999998842e-05, 2.5291999999999676e-05, 2.5250000000000966e-05, 2.512499999999737e-05, 2.541700000000327e-05, 2.5082999999998662e-05, 2.5070000000002035e-05, 2.518100000000259e-05, 2.5555999999999496e-05, 2.5528000000000356e-05, 2.5333999999998386e-05, 2.519499999999869e-05, 2.540300000000023e-05, 2.538900000000066e-05, 2.4805999999998746e-05, 2.5278000000000106e-05, 2.5584000000002105e-05, 2.5570000000002535e-05, 2.5236000000001396e-05, 2.4806000000002215e-05, 2.490299999999973e-05, 2.5278000000000106e-05, 2.5514000000000786e-05, 2.537500000000109e-05, 2.5055999999998996e-05, 2.5068999999999092e-05, 2.4902000000000257e-05, 2.5443999999999467e-05, 2.4860999999997552e-05, 2.4999999999997247e-05, 2.5541999999999926e-05, 2.5152000000000507e-05, 2.512500000000084e-05, 2.55970000000022e-05, 2.5541000000000452e-05, 2.50970000000017e-05, 2.5250000000000966e-05, 2.5207999999998787e-05, 2.5179999999999647e-05, 2.4985999999997677e-05, 2.5568999999999592e-05, 2.5054999999999522e-05, 2.479100000000317e-05, 2.4930000000002867e-05, 2.4944000000002436e-05]</msg>
<status status="PASS" starttime="20201029 18:18:22.769" endtime="20201029 18:18:22.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.764" endtime="20201029 18:18:22.772"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:22.776" endtime="20201029 18:18:22.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.774" endtime="20201029 18:18:22.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.773" endtime="20201029 18:18:22.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.415" endtime="20201029 18:18:22.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.414" endtime="20201029 18:18:22.797"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.806" endtime="20201029 18:18:22.822"></status>
</kw>
<msg timestamp="20201029 18:18:22.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.804" endtime="20201029 18:18:22.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.824" endtime="20201029 18:18:22.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.826" endtime="20201029 18:18:22.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.802" endtime="20201029 18:18:22.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.799" endtime="20201029 18:18:22.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.836" endtime="20201029 18:18:23.124"></status>
</kw>
<msg timestamp="20201029 18:18:23.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023275986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023301903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:22.834" endtime="20201029 18:18:23.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023275986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023301903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.128" endtime="20201029 18:18:23.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.137" endtime="20201029 18:18:23.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.831" endtime="20201029 18:18:23.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.830" endtime="20201029 18:18:23.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:23.144" level="INFO">${RESULT} = [{'diff': 2.59170000000003e-05}, {'diff': 2.6569000000000592e-05}, {'diff': 2.638899999999819e-05}, {'diff': 2.6194000000000217e-05}, {'diff': 2.5986000000002146e-05}, {'diff': 2.5929999999996928e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:23.140" endtime="20201029 18:18:23.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:23.148" level="INFO">${ACCURACY} = {'diff': [2.59170000000003e-05, 2.6569000000000592e-05, 2.638899999999819e-05, 2.6194000000000217e-05, 2.5986000000002146e-05, 2.5929999999996928e-05, 2.615299999999751e-05, 2.5874999999998122e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:18:23.145" endtime="20201029 18:18:23.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.153" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 18:18:23.152" endtime="20201029 18:18:23.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.155" level="INFO">VALUE: [2.59170000000003e-05, 2.6569000000000592e-05, 2.638899999999819e-05, 2.6194000000000217e-05, 2.5986000000002146e-05, 2.5929999999996928e-05, 2.615299999999751e-05, 2.5874999999998122e-05, 2.6583000000000162e-05, 2.6583000000000162e-05, 2.6499999999998747e-05, 2.5805000000000272e-05, 2.59170000000003e-05, 2.588900000000116e-05, 2.6610999999999302e-05, 2.6528000000001356e-05, 2.6110999999998802e-05, 2.5832999999999412e-05, 2.6514000000001786e-05, 2.5986000000002146e-05, 2.6278000000001106e-05, 2.6306000000000246e-05, 2.6110999999998802e-05, 2.6292000000000676e-05, 2.644499999999994e-05, 2.586100000000202e-05, 2.6346999999999482e-05, 2.588899999999769e-05, 2.6333999999999386e-05, 2.5957999999999537e-05, 2.612500000000184e-05, 2.670899999999976e-05, 2.6610999999999302e-05, 2.6083999999999136e-05, 2.611100000000227e-05, 2.6486000000002646e-05, 2.6124999999998372e-05, 2.5778000000000606e-05, 2.5986000000002146e-05, 2.587500000000159e-05, 2.6041999999996956e-05, 2.594499999999944e-05, 2.6570000000000066e-05, 2.5971999999999107e-05, 2.6055000000000522e-05, 2.6290999999997733e-05, 2.6360999999999052e-05, 2.5930000000000397e-05, 2.661100000000277e-05, 2.5958000000003006e-05]</msg>
<status status="PASS" starttime="20201029 18:18:23.154" endtime="20201029 18:18:23.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.149" endtime="20201029 18:18:23.162"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:23.167" endtime="20201029 18:18:23.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.165" endtime="20201029 18:18:23.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.163" endtime="20201029 18:18:23.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.798" endtime="20201029 18:18:23.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.797" endtime="20201029 18:18:23.188"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.197" endtime="20201029 18:18:23.212"></status>
</kw>
<msg timestamp="20201029 18:18:23.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.195" endtime="20201029 18:18:23.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.214" endtime="20201029 18:18:23.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.216" endtime="20201029 18:18:23.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.192" endtime="20201029 18:18:23.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.190" endtime="20201029 18:18:23.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.226" endtime="20201029 18:18:23.513"></status>
</kw>
<msg timestamp="20201029 18:18:23.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022275764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022303097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.224" endtime="20201029 18:18:23.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022275764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022303097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.517" endtime="20201029 18:18:23.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.526" endtime="20201029 18:18:23.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.221" endtime="20201029 18:18:23.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.220" endtime="20201029 18:18:23.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:23.533" level="INFO">${RESULT} = [{'diff': 2.7333000000000912e-05}, {'diff': 2.7306000000001246e-05}, {'diff': 2.7013999999998817e-05}, {'diff': 2.7611000000000302e-05}, {'diff': 2.6847999999999456e-05}, {'diff': 2.7542000000001926e-...</msg>
<status status="PASS" starttime="20201029 18:18:23.529" endtime="20201029 18:18:23.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:23.538" level="INFO">${ACCURACY} = {'diff': [2.7333000000000912e-05, 2.7306000000001246e-05, 2.7013999999998817e-05, 2.7611000000000302e-05, 2.6847999999999456e-05, 2.7542000000001926e-05, 2.7041999999997957e-05, 2.7556000000001496e-05...</msg>
<status status="PASS" starttime="20201029 18:18:23.534" endtime="20201029 18:18:23.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.543" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 18:18:23.542" endtime="20201029 18:18:23.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.545" level="INFO">VALUE: [2.7333000000000912e-05, 2.7306000000001246e-05, 2.7013999999998817e-05, 2.7611000000000302e-05, 2.6847999999999456e-05, 2.7542000000001926e-05, 2.7041999999997957e-05, 2.7556000000001496e-05, 2.7374999999999622e-05, 2.740300000000223e-05, 2.7262999999999593e-05, 2.7124999999999372e-05, 2.7568999999998123e-05, 2.7194000000001217e-05, 2.6846999999999982e-05, 2.6916000000001827e-05, 2.7097000000000232e-05, 2.7194000000001217e-05, 2.6776999999998663e-05, 2.7694000000001717e-05, 2.7583000000001162e-05, 2.6930000000001397e-05, 2.6958000000000537e-05, 2.690300000000173e-05, 2.7208000000000787e-05, 2.690299999999826e-05, 2.7513999999999317e-05, 2.7319999999997346e-05, 2.6985999999999677e-05, 2.715300000000198e-05, 2.7027999999998387e-05, 2.716700000000155e-05, 2.7110999999999802e-05, 2.7249999999999497e-05, 2.6833000000000412e-05, 2.7249999999999497e-05, 2.6763999999998567e-05, 2.698699999999915e-05, 2.7193999999997748e-05, 2.7361000000000052e-05, 2.7055999999997526e-05, 2.7651999999999538e-05, 2.7569999999997596e-05, 2.7347000000000482e-05, 2.6972000000000107e-05, 2.7583000000001162e-05, 2.7457999999997568e-05, 2.7320000000000816e-05, 2.7611999999999776e-05, 2.7556000000001496e-05]</msg>
<status status="PASS" starttime="20201029 18:18:23.544" endtime="20201029 18:18:23.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.539" endtime="20201029 18:18:23.547"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:23.550" endtime="20201029 18:18:23.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.549" endtime="20201029 18:18:23.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.548" endtime="20201029 18:18:23.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.188" endtime="20201029 18:18:23.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.188" endtime="20201029 18:18:23.571"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.580" endtime="20201029 18:18:23.597"></status>
</kw>
<msg timestamp="20201029 18:18:23.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.579" endtime="20201029 18:18:23.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.598" endtime="20201029 18:18:23.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.601" endtime="20201029 18:18:23.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.576" endtime="20201029 18:18:23.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.574" endtime="20201029 18:18:23.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.610" endtime="20201029 18:18:23.897"></status>
</kw>
<msg timestamp="20201029 18:18:23.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022288167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.609" endtime="20201029 18:18:23.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022288167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.902" endtime="20201029 18:18:23.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.910" endtime="20201029 18:18:23.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.606" endtime="20201029 18:18:23.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.604" endtime="20201029 18:18:23.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:23.917" level="INFO">${RESULT} = [{'diff': 2.8152000000000038e-05}, {'diff': 2.8222000000001357e-05}, {'diff': 2.8554999999999553e-05}, {'diff': 2.8402999999999762e-05}, {'diff': 2.7833000000001412e-05}, {'diff': 2.8540999999999983e-...</msg>
<status status="PASS" starttime="20201029 18:18:23.914" endtime="20201029 18:18:23.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:23.921" level="INFO">${ACCURACY} = {'diff': [2.8152000000000038e-05, 2.8222000000001357e-05, 2.8554999999999553e-05, 2.8402999999999762e-05, 2.7833000000001412e-05, 2.8540999999999983e-05, 2.8347000000001482e-05, 2.8568999999999123e-05...</msg>
<status status="PASS" starttime="20201029 18:18:23.918" endtime="20201029 18:18:23.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.926" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 18:18:23.925" endtime="20201029 18:18:23.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.929" level="INFO">VALUE: [2.8152000000000038e-05, 2.8222000000001357e-05, 2.8554999999999553e-05, 2.8402999999999762e-05, 2.7833000000001412e-05, 2.8540999999999983e-05, 2.8347000000001482e-05, 2.8568999999999123e-05, 2.8138999999999942e-05, 2.8264000000000067e-05, 2.7958000000001537e-05, 2.7833000000001412e-05, 2.8125000000000372e-05, 2.7736000000000427e-05, 2.8568999999999123e-05, 2.8097000000001232e-05, 2.7888999999999692e-05, 2.8540999999999983e-05, 2.8055000000002522e-05, 2.8111000000000802e-05, 2.7958000000001537e-05, 2.8554999999999553e-05, 2.8625000000000872e-05, 2.8333000000001912e-05, 2.8083000000001662e-05, 2.8069999999998096e-05, 2.8332999999998443e-05, 2.7805999999998277e-05, 2.8486000000001177e-05, 2.8222000000001357e-05, 2.8582999999998693e-05, 2.8042000000002426e-05, 2.8097000000001232e-05, 2.8500000000000747e-05, 2.7875000000000122e-05, 2.7902999999999262e-05, 2.815300000000298e-05, 2.847300000000108e-05, 2.8320000000001816e-05, 2.865199999999707e-05, 2.7847999999996986e-05, 2.7834000000000886e-05, 2.8569999999998597e-05, 2.822300000000083e-05, 2.7749999999999997e-05, 2.822299999999736e-05, 2.8347000000001482e-05, 2.8208000000001787e-05, 2.8679999999999678e-05, 2.79309999999984e-05]</msg>
<status status="PASS" starttime="20201029 18:18:23.927" endtime="20201029 18:18:23.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.922" endtime="20201029 18:18:23.930"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:23.934" endtime="20201029 18:18:23.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.932" endtime="20201029 18:18:23.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.931" endtime="20201029 18:18:23.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.572" endtime="20201029 18:18:23.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.572" endtime="20201029 18:18:23.955"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.964" endtime="20201029 18:18:23.980"></status>
</kw>
<msg timestamp="20201029 18:18:23.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.962" endtime="20201029 18:18:23.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.982" endtime="20201029 18:18:23.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.984" endtime="20201029 18:18:23.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.960" endtime="20201029 18:18:23.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.957" endtime="20201029 18:18:23.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.994" endtime="20201029 18:18:24.280"></status>
</kw>
<msg timestamp="20201029 18:18:24.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023361083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023389972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.992" endtime="20201029 18:18:24.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023361083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023389972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:24.284" endtime="20201029 18:18:24.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.293" endtime="20201029 18:18:24.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.990" endtime="20201029 18:18:24.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.988" endtime="20201029 18:18:24.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:24.300" level="INFO">${RESULT} = [{'diff': 2.8888999999997222e-05}, {'diff': 2.9250000000001497e-05}, {'diff': 2.9625000000001872e-05}, {'diff': 2.9417000000000332e-05}, {'diff': 2.9375000000001622e-05}, {'diff': 2.9153000000000512e-...</msg>
<status status="PASS" starttime="20201029 18:18:24.296" endtime="20201029 18:18:24.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:24.304" level="INFO">${ACCURACY} = {'diff': [2.8888999999997222e-05, 2.9250000000001497e-05, 2.9625000000001872e-05, 2.9417000000000332e-05, 2.9375000000001622e-05, 2.9153000000000512e-05, 2.9249999999998028e-05, 2.8778000000000137e-05...</msg>
<status status="PASS" starttime="20201029 18:18:24.301" endtime="20201029 18:18:24.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.309" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 18:18:24.308" endtime="20201029 18:18:24.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.311" level="INFO">VALUE: [2.8888999999997222e-05, 2.9250000000001497e-05, 2.9625000000001872e-05, 2.9417000000000332e-05, 2.9375000000001622e-05, 2.9153000000000512e-05, 2.9249999999998028e-05, 2.8778000000000137e-05, 2.9138999999997472e-05, 2.8889000000000692e-05, 2.9028000000000387e-05, 2.9333999999998916e-05, 2.9639000000001442e-05, 2.8750000000000997e-05, 2.9249999999998028e-05, 2.9041999999999957e-05, 2.9305000000000303e-05, 2.9069000000003092e-05, 2.894500000000244e-05, 2.9360999999998583e-05, 2.940199999999782e-05, 2.9526999999997944e-05, 2.9082999999999193e-05, 2.9499999999998278e-05, 2.9443999999999998e-05, 2.9068999999999623e-05, 2.9541000000000983e-05, 2.9541000000000983e-05, 2.9222000000002357e-05, 2.8903000000000262e-05, 2.9000000000001247e-05, 2.9583000000003162e-05, 2.891599999999689e-05, 2.8846999999998513e-05, 2.9207999999999318e-05, 2.9235999999998458e-05, 2.9624999999998403e-05, 2.9417000000000332e-05, 2.8791999999999707e-05, 2.9000000000001247e-05, 2.8846999999998513e-05, 2.9222000000002357e-05, 2.9055999999999527e-05, 2.9389000000001192e-05, 2.945899999999904e-05, 2.8806000000002746e-05, 2.9596999999999263e-05, 2.9458000000003037e-05, 2.9402999999997292e-05, 2.9500000000001747e-05]</msg>
<status status="PASS" starttime="20201029 18:18:24.310" endtime="20201029 18:18:24.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.305" endtime="20201029 18:18:24.314"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:24.318" endtime="20201029 18:18:24.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.316" endtime="20201029 18:18:24.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.315" endtime="20201029 18:18:24.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.956" endtime="20201029 18:18:24.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.955" endtime="20201029 18:18:24.339"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.349" endtime="20201029 18:18:24.364"></status>
</kw>
<msg timestamp="20201029 18:18:24.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.347" endtime="20201029 18:18:24.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.366" endtime="20201029 18:18:24.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.369" endtime="20201029 18:18:24.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.344" endtime="20201029 18:18:24.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.341" endtime="20201029 18:18:24.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.378" endtime="20201029 18:18:24.663"></status>
</kw>
<msg timestamp="20201029 18:18:24.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02363325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023663208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:24.376" endtime="20201029 18:18:24.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02363325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023663208, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:24.668" endtime="20201029 18:18:24.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.676" endtime="20201029 18:18:24.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.374" endtime="20201029 18:18:24.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.372" endtime="20201029 18:18:24.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:24.683" level="INFO">${RESULT} = [{'diff': 2.9958000000000068e-05}, {'diff': 3.0125000000002372e-05}, {'diff': 3.0027999999997917e-05}, {'diff': 3.020899999999979e-05}, {'diff': 2.9860999999999083e-05}, {'diff': 2.9999999999998778e-0...</msg>
<status status="PASS" starttime="20201029 18:18:24.680" endtime="20201029 18:18:24.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:24.688" level="INFO">${ACCURACY} = {'diff': [2.9958000000000068e-05, 3.0125000000002372e-05, 3.0027999999997917e-05, 3.020899999999979e-05, 2.9860999999999083e-05, 2.9999999999998778e-05, 2.9999999999998778e-05, 3.073599999999996e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:24.684" endtime="20201029 18:18:24.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.693" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 18:18:24.692" endtime="20201029 18:18:24.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.695" level="INFO">VALUE: [2.9958000000000068e-05, 3.0125000000002372e-05, 3.0027999999997917e-05, 3.020899999999979e-05, 2.9860999999999083e-05, 2.9999999999998778e-05, 2.9999999999998778e-05, 3.073599999999996e-05, 3.0277999999998167e-05, 3.0389000000002192e-05, 3.045900000000004e-05, 2.9888999999998223e-05, 3.0333999999999917e-05, 2.995899999999954e-05, 3.0110999999999333e-05, 3.0347999999999486e-05, 3.022299999999936e-05, 2.9958000000000068e-05, 3.0361000000003052e-05, 3.0070000000000097e-05, 3.0070000000000097e-05, 3.0582999999997224e-05, 3.04579999999971e-05, 3.0485999999999708e-05, 3.0054999999997584e-05, 2.9791000000001233e-05, 3.052700000000241e-05, 3.0110999999999333e-05, 3.0264000000002067e-05, 2.9902000000001788e-05, 3.0068999999997154e-05, 3.056900000000112e-05, 3.0028000000001387e-05, 3.0152999999998042e-05, 3.0194000000000748e-05, 2.9818999999996904e-05, 3.0472000000000138e-05, 3.020899999999979e-05, 2.9791999999997237e-05, 3.058300000000069e-05, 2.9819000000000373e-05, 3.0070000000000097e-05, 3.0499999999999278e-05, 3.0236000000002927e-05, 3.0055999999997057e-05, 3.0208000000000318e-05, 3.0027999999997917e-05, 3.0333000000000443e-05, 3.052800000000189e-05, 2.994499999999997e-05]</msg>
<status status="PASS" starttime="20201029 18:18:24.694" endtime="20201029 18:18:24.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.689" endtime="20201029 18:18:24.697"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:24.701" endtime="20201029 18:18:24.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.699" endtime="20201029 18:18:24.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.698" endtime="20201029 18:18:24.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.340" endtime="20201029 18:18:24.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.339" endtime="20201029 18:18:24.722"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.731" endtime="20201029 18:18:24.747"></status>
</kw>
<msg timestamp="20201029 18:18:24.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.729" endtime="20201029 18:18:24.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.749" endtime="20201029 18:18:24.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.751" endtime="20201029 18:18:24.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.726" endtime="20201029 18:18:24.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.724" endtime="20201029 18:18:24.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.761" endtime="20201029 18:18:25.048"></status>
</kw>
<msg timestamp="20201029 18:18:25.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02266675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022698361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:24.759" endtime="20201029 18:18:25.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02266675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022698361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:25.053" endtime="20201029 18:18:25.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.061" endtime="20201029 18:18:25.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.756" endtime="20201029 18:18:25.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.755" endtime="20201029 18:18:25.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:25.068" level="INFO">${RESULT} = [{'diff': 3.161100000000083e-05}, {'diff': 3.088900000000269e-05}, {'diff': 3.12639999999996e-05}, {'diff': 3.130599999999831e-05}, {'diff': 3.148600000000071e-05}, {'diff': 3.1582999999998224e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:25.065" endtime="20201029 18:18:25.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:25.072" level="INFO">${ACCURACY} = {'diff': [3.161100000000083e-05, 3.088900000000269e-05, 3.12639999999996e-05, 3.130599999999831e-05, 3.148600000000071e-05, 3.1582999999998224e-05, 3.099999999999978e-05, 3.148700000000018e-05, 3.1097...</msg>
<status status="PASS" starttime="20201029 18:18:25.069" endtime="20201029 18:18:25.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.077" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 18:18:25.076" endtime="20201029 18:18:25.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.080" level="INFO">VALUE: [3.161100000000083e-05, 3.088900000000269e-05, 3.12639999999996e-05, 3.130599999999831e-05, 3.148600000000071e-05, 3.1582999999998224e-05, 3.099999999999978e-05, 3.148700000000018e-05, 3.109700000000076e-05, 3.10839999999972e-05, 3.1554999999999084e-05, 3.091599999999889e-05, 3.1554999999999084e-05, 3.088899999999922e-05, 3.108300000000119e-05, 3.143000000000243e-05, 3.097200000000064e-05, 3.1304999999998834e-05, 3.133300000000144e-05, 3.1054999999998584e-05, 3.087499999999965e-05, 3.099999999999978e-05, 3.1068999999998154e-05, 3.1360999999997113e-05, 3.158300000000169e-05, 3.079199999999824e-05, 3.155500000000255e-05, 3.1304999999998834e-05, 3.130599999999831e-05, 3.127800000000264e-05, 3.113899999999947e-05, 3.0818999999997904e-05, 3.106900000000162e-05, 3.148600000000071e-05, 3.12639999999996e-05, 3.129200000000221e-05, 3.105599999999806e-05, 3.147199999999767e-05, 3.150000000000028e-05, 3.084700000000051e-05, 3.097199999999717e-05, 3.099999999999978e-05, 3.095900000000054e-05, 3.1348000000000487e-05, 3.108400000000067e-05, 3.115299999999904e-05, 3.129200000000221e-05, 3.166599999999964e-05, 3.155599999999856e-05, 3.116700000000208e-05]</msg>
<status status="PASS" starttime="20201029 18:18:25.078" endtime="20201029 18:18:25.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.073" endtime="20201029 18:18:25.081"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:25.085" endtime="20201029 18:18:25.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.083" endtime="20201029 18:18:25.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.082" endtime="20201029 18:18:25.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.723" endtime="20201029 18:18:25.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.722" endtime="20201029 18:18:25.106"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.115" endtime="20201029 18:18:25.134"></status>
</kw>
<msg timestamp="20201029 18:18:25.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.113" endtime="20201029 18:18:25.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.136" endtime="20201029 18:18:25.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.138" endtime="20201029 18:18:25.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.110" endtime="20201029 18:18:25.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.108" endtime="20201029 18:18:25.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.148" endtime="20201029 18:18:25.433"></status>
</kw>
<msg timestamp="20201029 18:18:25.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025601958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025634153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:25.146" endtime="20201029 18:18:25.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025601958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025634153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:25.438" endtime="20201029 18:18:25.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.446" endtime="20201029 18:18:25.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.144" endtime="20201029 18:18:25.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.142" endtime="20201029 18:18:25.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:25.453" level="INFO">${RESULT} = [{'diff': 3.219499999999875e-05}, {'diff': 3.220799999999885e-05}, {'diff': 3.1804999999999334e-05}, {'diff': 3.223600000000146e-05}, {'diff': 3.211100000000133e-05}, {'diff': 3.179100000000323e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:25.450" endtime="20201029 18:18:25.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:25.457" level="INFO">${ACCURACY} = {'diff': [3.219499999999875e-05, 3.220799999999885e-05, 3.1804999999999334e-05, 3.223600000000146e-05, 3.211100000000133e-05, 3.179100000000323e-05, 3.258300000000269e-05, 3.2568999999999654e-05, 3.19...</msg>
<status status="PASS" starttime="20201029 18:18:25.454" endtime="20201029 18:18:25.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.462" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 18:18:25.461" endtime="20201029 18:18:25.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.465" level="INFO">VALUE: [3.219499999999875e-05, 3.220799999999885e-05, 3.1804999999999334e-05, 3.223600000000146e-05, 3.211100000000133e-05, 3.179100000000323e-05, 3.258300000000269e-05, 3.2568999999999654e-05, 3.190299999999979e-05, 3.202799999999992e-05, 3.234700000000201e-05, 3.187500000000065e-05, 3.204199999999949e-05, 3.252800000000042e-05, 3.244399999999953e-05, 3.199999999999731e-05, 3.227800000000017e-05, 3.2374999999997683e-05, 3.250000000000128e-05, 3.22640000000006e-05, 3.17640000000001e-05, 3.205599999999906e-05, 3.220799999999885e-05, 3.220799999999885e-05, 3.211199999999734e-05, 3.269500000000272e-05, 3.236100000000158e-05, 3.261100000000183e-05, 3.231999999999888e-05, 3.2596999999998794e-05, 3.2360999999998113e-05, 3.251400000000085e-05, 3.216699999999961e-05, 3.180599999999881e-05, 3.240300000000029e-05, 3.248599999999824e-05, 3.266700000000011e-05, 3.2027000000000444e-05, 3.217999999999971e-05, 3.198600000000121e-05, 3.2568999999999654e-05, 3.248599999999824e-05, 3.234700000000201e-05, 3.236100000000158e-05, 3.187500000000065e-05, 3.248599999999824e-05, 3.186100000000108e-05, 3.201400000000035e-05, 3.190200000000032e-05, 3.188900000000022e-05]</msg>
<status status="PASS" starttime="20201029 18:18:25.463" endtime="20201029 18:18:25.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.458" endtime="20201029 18:18:25.467"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:25.471" endtime="20201029 18:18:25.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.469" endtime="20201029 18:18:25.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.468" endtime="20201029 18:18:25.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.107" endtime="20201029 18:18:25.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.106" endtime="20201029 18:18:25.491"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.501" endtime="20201029 18:18:25.516"></status>
</kw>
<msg timestamp="20201029 18:18:25.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.499" endtime="20201029 18:18:25.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.517" endtime="20201029 18:18:25.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.520" endtime="20201029 18:18:25.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.496" endtime="20201029 18:18:25.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.494" endtime="20201029 18:18:25.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.529" endtime="20201029 18:18:25.816"></status>
</kw>
<msg timestamp="20201029 18:18:25.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022291542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022325056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:25.528" endtime="20201029 18:18:25.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022291542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022325056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:25.820" endtime="20201029 18:18:25.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.829" endtime="20201029 18:18:25.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.525" endtime="20201029 18:18:25.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.523" endtime="20201029 18:18:25.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:25.836" level="INFO">${RESULT} = [{'diff': 3.351399999999838e-05}, {'diff': 3.3055000000000584e-05}, {'diff': 3.3055000000000584e-05}, {'diff': 3.369400000000078e-05}, {'diff': 3.319400000000028e-05}, {'diff': 3.352800000000142e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:25.832" endtime="20201029 18:18:25.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:25.841" level="INFO">${ACCURACY} = {'diff': [3.351399999999838e-05, 3.3055000000000584e-05, 3.3055000000000584e-05, 3.369400000000078e-05, 3.319400000000028e-05, 3.352800000000142e-05, 3.347199999999967e-05, 3.3055000000000584e-05, 3.3...</msg>
<status status="PASS" starttime="20201029 18:18:25.836" endtime="20201029 18:18:25.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.846" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 18:18:25.844" endtime="20201029 18:18:25.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.848" level="INFO">VALUE: [3.351399999999838e-05, 3.3055000000000584e-05, 3.3055000000000584e-05, 3.369400000000078e-05, 3.319400000000028e-05, 3.352800000000142e-05, 3.347199999999967e-05, 3.3055000000000584e-05, 3.302800000000092e-05, 3.351399999999838e-05, 3.365299999999807e-05, 3.3388999999998253e-05, 3.309700000000276e-05, 3.355600000000056e-05, 3.352799999999795e-05, 3.29449999999995e-05, 3.301400000000135e-05, 3.347200000000314e-05, 3.290299999999732e-05, 3.318100000000018e-05, 3.297199999999917e-05, 3.286100000000208e-05, 3.322300000000236e-05, 3.306999999999963e-05, 3.349999999999881e-05, 3.318100000000018e-05, 3.316700000000061e-05, 3.320899999999932e-05, 3.32779999999977e-05, 3.284799999999852e-05, 3.323700000000193e-05, 3.359800000000274e-05, 3.342999999999749e-05, 3.348699999999871e-05, 3.286100000000208e-05, 3.3596999999999794e-05, 3.299999999999831e-05, 3.2818999999999904e-05, 3.288800000000175e-05, 3.361100000000283e-05, 3.349999999999881e-05, 3.3096999999999294e-05, 3.344400000000053e-05, 3.365300000000154e-05, 3.325000000000203e-05, 3.3332999999999974e-05, 3.29579999999996e-05, 3.320799999999985e-05, 3.3596999999999794e-05, 3.316700000000061e-05]</msg>
<status status="PASS" starttime="20201029 18:18:25.847" endtime="20201029 18:18:25.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.842" endtime="20201029 18:18:25.850"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:25.853" endtime="20201029 18:18:25.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.852" endtime="20201029 18:18:25.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.851" endtime="20201029 18:18:25.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.492" endtime="20201029 18:18:25.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.492" endtime="20201029 18:18:25.874"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.883" endtime="20201029 18:18:25.899"></status>
</kw>
<msg timestamp="20201029 18:18:25.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.881" endtime="20201029 18:18:25.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.900" endtime="20201029 18:18:25.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.903" endtime="20201029 18:18:25.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.879" endtime="20201029 18:18:25.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.877" endtime="20201029 18:18:25.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.912" endtime="20201029 18:18:26.201"></status>
</kw>
<msg timestamp="20201029 18:18:26.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022315667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022350431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:25.911" endtime="20201029 18:18:26.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022315667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022350431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:26.205" endtime="20201029 18:18:26.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.214" endtime="20201029 18:18:26.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.908" endtime="20201029 18:18:26.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.906" endtime="20201029 18:18:26.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:26.221" level="INFO">${RESULT} = [{'diff': 3.476399999999963e-05}, {'diff': 3.470799999999788e-05}, {'diff': 3.401399999999888e-05}, {'diff': 3.3833000000000474e-05}, {'diff': 3.401399999999888e-05}, {'diff': 3.444399999999806e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:26.217" endtime="20201029 18:18:26.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:26.225" level="INFO">${ACCURACY} = {'diff': [3.476399999999963e-05, 3.470799999999788e-05, 3.401399999999888e-05, 3.3833000000000474e-05, 3.401399999999888e-05, 3.444399999999806e-05, 3.419400000000128e-05, 3.465300000000254e-05, 3.448...</msg>
<status status="PASS" starttime="20201029 18:18:26.222" endtime="20201029 18:18:26.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.230" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 18:18:26.229" endtime="20201029 18:18:26.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.232" level="INFO">VALUE: [3.476399999999963e-05, 3.470799999999788e-05, 3.401399999999888e-05, 3.3833000000000474e-05, 3.401399999999888e-05, 3.444399999999806e-05, 3.419400000000128e-05, 3.465300000000254e-05, 3.448600000000024e-05, 3.422299999999989e-05, 3.424999999999956e-05, 3.4138999999999003e-05, 3.380600000000081e-05, 3.4262999999999655e-05, 3.387500000000265e-05, 3.420799999999738e-05, 3.3833000000000474e-05, 3.393099999999746e-05, 3.422299999999989e-05, 3.45840000000007e-05, 3.391700000000136e-05, 3.447299999999667e-05, 3.407000000000063e-05, 3.444499999999753e-05, 3.416700000000161e-05, 3.450000000000328e-05, 3.39450000000005e-05, 3.4082999999997254e-05, 3.441700000000186e-05, 3.391599999999842e-05, 3.399999999999931e-05, 3.444399999999806e-05, 3.422200000000042e-05, 3.3762999999999155e-05, 3.4027000000002444e-05, 3.419399999999781e-05, 3.4305000000001834e-05, 3.391599999999842e-05, 3.42640000000026e-05, 3.448600000000024e-05, 3.4347000000000544e-05, 3.4568999999998185e-05, 3.4541000000002514e-05, 3.399999999999931e-05, 3.422200000000042e-05, 3.416699999999814e-05, 3.391700000000136e-05, 3.423599999999999e-05, 3.39580000000006e-05, 3.4152999999998573e-05]</msg>
<status status="PASS" starttime="20201029 18:18:26.231" endtime="20201029 18:18:26.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.226" endtime="20201029 18:18:26.234"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:26.237" endtime="20201029 18:18:26.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.236" endtime="20201029 18:18:26.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.235" endtime="20201029 18:18:26.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.875" endtime="20201029 18:18:26.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.874" endtime="20201029 18:18:26.258"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.267" endtime="20201029 18:18:26.284"></status>
</kw>
<msg timestamp="20201029 18:18:26.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.266" endtime="20201029 18:18:26.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.286" endtime="20201029 18:18:26.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.288" endtime="20201029 18:18:26.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.263" endtime="20201029 18:18:26.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.261" endtime="20201029 18:18:26.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.298" endtime="20201029 18:18:26.584"></status>
</kw>
<msg timestamp="20201029 18:18:26.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023310528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023346194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:26.296" endtime="20201029 18:18:26.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023310528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023346194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:26.589" endtime="20201029 18:18:26.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.598" endtime="20201029 18:18:26.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.294" endtime="20201029 18:18:26.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.292" endtime="20201029 18:18:26.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:26.604" level="INFO">${RESULT} = [{'diff': 3.566600000000017e-05}, {'diff': 3.490199999999985e-05}, {'diff': 3.525000000000056e-05}, {'diff': 3.5318999999998935e-05}, {'diff': 3.5361000000001114e-05}, {'diff': 3.5597000000001794e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:26.601" endtime="20201029 18:18:26.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:26.609" level="INFO">${ACCURACY} = {'diff': [3.566600000000017e-05, 3.490199999999985e-05, 3.525000000000056e-05, 3.5318999999998935e-05, 3.5361000000001114e-05, 3.5597000000001794e-05, 3.5111000000000864e-05, 3.5346999999998074e-05, 3...</msg>
<status status="PASS" starttime="20201029 18:18:26.605" endtime="20201029 18:18:26.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.613" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 18:18:26.612" endtime="20201029 18:18:26.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.616" level="INFO">VALUE: [3.566600000000017e-05, 3.490199999999985e-05, 3.525000000000056e-05, 3.5318999999998935e-05, 3.5361000000001114e-05, 3.5597000000001794e-05, 3.5111000000000864e-05, 3.5346999999998074e-05, 3.5541000000000045e-05, 3.5097000000001294e-05, 3.5333000000001974e-05, 3.526400000000013e-05, 3.524999999999709e-05, 3.522199999999795e-05, 3.547200000000167e-05, 3.5611000000001364e-05, 3.494399999999856e-05, 3.529199999999927e-05, 3.5625000000000934e-05, 3.504199999999902e-05, 3.522199999999795e-05, 3.4875000000000184e-05, 3.554199999999952e-05, 3.54580000000021e-05, 3.4861000000000614e-05, 3.5389000000000254e-05, 3.508399999999773e-05, 3.533400000000145e-05, 3.522300000000089e-05, 3.495900000000107e-05, 3.5402999999999823e-05, 3.558399999999823e-05, 3.5139000000000004e-05, 3.5152999999999573e-05, 3.51520000000001e-05, 3.5152999999999573e-05, 3.5026999999999975e-05, 3.543000000000296e-05, 3.5055000000002584e-05, 3.4763000000000155e-05, 3.520799999999838e-05, 3.500000000000031e-05, 3.518000000000271e-05, 3.520800000000185e-05, 3.5068999999998685e-05, 3.494399999999856e-05, 3.5152999999999573e-05, 3.5111000000000864e-05, 3.519400000000228e-05, 3.550000000000081e-05]</msg>
<status status="PASS" starttime="20201029 18:18:26.615" endtime="20201029 18:18:26.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.610" endtime="20201029 18:18:26.618"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:26.622" endtime="20201029 18:18:26.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.621" endtime="20201029 18:18:26.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.619" endtime="20201029 18:18:26.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.259" endtime="20201029 18:18:26.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.259" endtime="20201029 18:18:26.643"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.652" endtime="20201029 18:18:26.669"></status>
</kw>
<msg timestamp="20201029 18:18:26.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.650" endtime="20201029 18:18:26.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.670" endtime="20201029 18:18:26.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.673" endtime="20201029 18:18:26.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.648" endtime="20201029 18:18:26.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.646" endtime="20201029 18:18:26.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.682" endtime="20201029 18:18:26.968"></status>
</kw>
<msg timestamp="20201029 18:18:26.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022750014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022786403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:26.681" endtime="20201029 18:18:26.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022750014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022786403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:26.973" endtime="20201029 18:18:26.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.981" endtime="20201029 18:18:26.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.678" endtime="20201029 18:18:26.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.676" endtime="20201029 18:18:26.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:26.988" level="INFO">${RESULT} = [{'diff': 3.6389000000001254e-05}, {'diff': 3.590200000000085e-05}, {'diff': 3.6041000000000545e-05}, {'diff': 3.648599999999877e-05}, {'diff': 3.6582999999999755e-05}, {'diff': 3.579199999999977e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:26.985" endtime="20201029 18:18:26.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:26.993" level="INFO">${ACCURACY} = {'diff': [3.6389000000001254e-05, 3.590200000000085e-05, 3.6041000000000545e-05, 3.648599999999877e-05, 3.6582999999999755e-05, 3.579199999999977e-05, 3.598600000000174e-05, 3.616600000000067e-05, 3.6...</msg>
<status status="PASS" starttime="20201029 18:18:26.989" endtime="20201029 18:18:26.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.998" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 18:18:26.997" endtime="20201029 18:18:26.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.001" level="INFO">VALUE: [3.6389000000001254e-05, 3.590200000000085e-05, 3.6041000000000545e-05, 3.648599999999877e-05, 3.6582999999999755e-05, 3.579199999999977e-05, 3.598600000000174e-05, 3.616600000000067e-05, 3.629200000000027e-05, 3.605599999999959e-05, 3.6110999999998394e-05, 3.574999999999759e-05, 3.593099999999946e-05, 3.6068999999999685e-05, 3.579199999999977e-05, 3.5818999999999435e-05, 3.6082999999999255e-05, 3.6096999999998824e-05, 3.6012999999997936e-05, 3.622199999999895e-05, 3.604200000000002e-05, 3.625000000000156e-05, 3.6096999999998824e-05, 3.5902999999996854e-05, 3.623599999999852e-05, 3.6388999999997784e-05, 3.64589999999991e-05, 3.593099999999946e-05, 3.622299999999842e-05, 3.655600000000009e-05, 3.600000000000131e-05, 3.670899999999935e-05, 3.645900000000257e-05, 3.6139000000001004e-05, 3.643000000000049e-05, 3.613799999999806e-05, 3.599999999999784e-05, 3.620799999999938e-05, 3.623599999999852e-05, 3.6541000000001045e-05, 3.6555000000000615e-05, 3.65840000000027e-05, 3.651400000000138e-05, 3.6332999999999505e-05, 3.5818999999999435e-05, 3.6083000000002724e-05, 3.631999999999941e-05, 3.652800000000095e-05, 3.6610999999998894e-05, 3.620799999999938e-05]</msg>
<status status="PASS" starttime="20201029 18:18:26.999" endtime="20201029 18:18:27.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.994" endtime="20201029 18:18:27.002"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:27.006" endtime="20201029 18:18:27.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.004" endtime="20201029 18:18:27.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.003" endtime="20201029 18:18:27.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.644" endtime="20201029 18:18:27.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.643" endtime="20201029 18:18:27.027"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.036" endtime="20201029 18:18:27.052"></status>
</kw>
<msg timestamp="20201029 18:18:27.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.034" endtime="20201029 18:18:27.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.054" endtime="20201029 18:18:27.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.056" endtime="20201029 18:18:27.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.032" endtime="20201029 18:18:27.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.029" endtime="20201029 18:18:27.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.066" endtime="20201029 18:18:27.354"></status>
</kw>
<msg timestamp="20201029 18:18:27.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022367903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022405028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:27.065" endtime="20201029 18:18:27.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022367903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022405028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:27.358" endtime="20201029 18:18:27.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.367" endtime="20201029 18:18:27.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.062" endtime="20201029 18:18:27.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.060" endtime="20201029 18:18:27.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:27.374" level="INFO">${RESULT} = [{'diff': 3.7124999999998964e-05}, {'diff': 3.695800000000013e-05}, {'diff': 3.719399999999734e-05}, {'diff': 3.748599999999977e-05}, {'diff': 3.691600000000142e-05}, {'diff': 3.727799999999823e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:27.370" endtime="20201029 18:18:27.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:27.378" level="INFO">${ACCURACY} = {'diff': [3.7124999999998964e-05, 3.695800000000013e-05, 3.719399999999734e-05, 3.748599999999977e-05, 3.691600000000142e-05, 3.727799999999823e-05, 3.718000000000124e-05, 3.693000000000099e-05, 3.680...</msg>
<status status="PASS" starttime="20201029 18:18:27.375" endtime="20201029 18:18:27.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.383" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 18:18:27.382" endtime="20201029 18:18:27.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.386" level="INFO">VALUE: [3.7124999999998964e-05, 3.695800000000013e-05, 3.719399999999734e-05, 3.748599999999977e-05, 3.691600000000142e-05, 3.727799999999823e-05, 3.718000000000124e-05, 3.693000000000099e-05, 3.680600000000034e-05, 3.680600000000034e-05, 3.74720000000002e-05, 3.69719999999997e-05, 3.704200000000102e-05, 3.7582999999997285e-05, 3.7347000000000075e-05, 3.695800000000013e-05, 3.727799999999823e-05, 3.7652999999998604e-05, 3.6917000000000894e-05, 3.757000000000066e-05, 3.700000000000231e-05, 3.754199999999805e-05, 3.732000000000041e-05, 3.7124999999998964e-05, 3.699999999999884e-05, 3.752799999999848e-05, 3.74590000000001e-05, 3.6860999999999144e-05, 3.726399999999866e-05, 3.733399999999998e-05, 3.7195000000000283e-05, 3.723599999999952e-05, 3.754199999999805e-05, 3.749999999999934e-05, 3.698599999999927e-05, 3.6762999999998686e-05, 3.741600000000192e-05, 3.7597000000000325e-05, 3.7540999999998576e-05, 3.695800000000013e-05, 3.722199999999995e-05, 3.743000000000149e-05, 3.7125000000002434e-05, 3.7138999999998534e-05, 3.7374999999999214e-05, 3.7304999999997895e-05, 3.6889000000001754e-05, 3.6861000000002614e-05, 3.72780000000017e-05, 3.7096999999999825e-05]</msg>
<status status="PASS" starttime="20201029 18:18:27.384" endtime="20201029 18:18:27.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.379" endtime="20201029 18:18:27.387"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:27.392" endtime="20201029 18:18:27.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.390" endtime="20201029 18:18:27.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.389" endtime="20201029 18:18:27.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.028" endtime="20201029 18:18:27.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.027" endtime="20201029 18:18:27.413"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.422" endtime="20201029 18:18:27.439"></status>
</kw>
<msg timestamp="20201029 18:18:27.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.420" endtime="20201029 18:18:27.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.441" endtime="20201029 18:18:27.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.443" endtime="20201029 18:18:27.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.417" endtime="20201029 18:18:27.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.415" endtime="20201029 18:18:27.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.453" endtime="20201029 18:18:27.739"></status>
</kw>
<msg timestamp="20201029 18:18:27.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023715444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023753681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:27.451" endtime="20201029 18:18:27.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023715444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023753681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:27.743" endtime="20201029 18:18:27.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.752" endtime="20201029 18:18:27.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.449" endtime="20201029 18:18:27.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.447" endtime="20201029 18:18:27.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:27.759" level="INFO">${RESULT} = [{'diff': 3.823699999999999e-05}, {'diff': 3.774999999999959e-05}, {'diff': 3.819399999999834e-05}, {'diff': 3.8375000000000214e-05}, {'diff': 3.851399999999991e-05}, {'diff': 3.854199999999905e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:27.755" endtime="20201029 18:18:27.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:27.763" level="INFO">${ACCURACY} = {'diff': [3.823699999999999e-05, 3.774999999999959e-05, 3.819399999999834e-05, 3.8375000000000214e-05, 3.851399999999991e-05, 3.854199999999905e-05, 3.780600000000134e-05, 3.851399999999991e-05, 3.804...</msg>
<status status="PASS" starttime="20201029 18:18:27.760" endtime="20201029 18:18:27.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.768" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 18:18:27.766" endtime="20201029 18:18:27.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.770" level="INFO">VALUE: [3.823699999999999e-05, 3.774999999999959e-05, 3.819399999999834e-05, 3.8375000000000214e-05, 3.851399999999991e-05, 3.854199999999905e-05, 3.780600000000134e-05, 3.851399999999991e-05, 3.804199999999855e-05, 3.815199999999963e-05, 3.8208999999997384e-05, 3.875000000000059e-05, 3.8347000000001075e-05, 3.851399999999991e-05, 3.8624999999996995e-05, 3.8195000000001283e-05, 3.79720000000007e-05, 3.858399999999776e-05, 3.791599999999895e-05, 3.799999999999984e-05, 3.805599999999812e-05, 3.811199999999987e-05, 3.8375000000000214e-05, 3.844400000000206e-05, 3.805600000000159e-05, 3.815199999999963e-05, 3.795800000000113e-05, 3.813800000000006e-05, 3.817999999999877e-05, 3.845799999999816e-05, 3.7861000000000145e-05, 3.8625000000000465e-05, 3.845800000000163e-05, 3.8569000000002185e-05, 3.825000000000009e-05, 3.845800000000163e-05, 3.798600000000027e-05, 3.8346999999997605e-05, 3.816600000000267e-05, 3.794400000000156e-05, 3.8554999999999146e-05, 3.79720000000007e-05, 3.8347000000001075e-05, 3.8582999999998285e-05, 3.827799999999923e-05, 3.8666999999999174e-05, 3.8667000000002644e-05, 3.850000000000034e-05, 3.795800000000113e-05, 3.7916999999998424e-05]</msg>
<status status="PASS" starttime="20201029 18:18:27.769" endtime="20201029 18:18:27.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.764" endtime="20201029 18:18:27.772"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:27.776" endtime="20201029 18:18:27.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.775" endtime="20201029 18:18:27.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.773" endtime="20201029 18:18:27.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.414" endtime="20201029 18:18:27.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.413" endtime="20201029 18:18:27.797"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.806" endtime="20201029 18:18:27.823"></status>
</kw>
<msg timestamp="20201029 18:18:27.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.804" endtime="20201029 18:18:27.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.824" endtime="20201029 18:18:27.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.827" endtime="20201029 18:18:27.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.802" endtime="20201029 18:18:27.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.800" endtime="20201029 18:18:27.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.836" endtime="20201029 18:18:28.123"></status>
</kw>
<msg timestamp="20201029 18:18:28.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022251444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022290542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:27.835" endtime="20201029 18:18:28.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022251444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022290542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.127" endtime="20201029 18:18:28.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.136" endtime="20201029 18:18:28.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.832" endtime="20201029 18:18:28.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.830" endtime="20201029 18:18:28.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:28.143" level="INFO">${RESULT} = [{'diff': 3.90980000000013e-05}, {'diff': 3.9096999999998355e-05}, {'diff': 3.8958999999998134e-05}, {'diff': 3.9431000000002964e-05}, {'diff': 3.874999999999712e-05}, {'diff': 3.893000000000299e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:28.139" endtime="20201029 18:18:28.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:28.148" level="INFO">${ACCURACY} = {'diff': [3.90980000000013e-05, 3.9096999999998355e-05, 3.8958999999998134e-05, 3.9431000000002964e-05, 3.874999999999712e-05, 3.893000000000299e-05, 3.922200000000195e-05, 3.919400000000281e-05, 3.94...</msg>
<status status="PASS" starttime="20201029 18:18:28.144" endtime="20201029 18:18:28.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.153" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 18:18:28.152" endtime="20201029 18:18:28.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.155" level="INFO">VALUE: [3.90980000000013e-05, 3.9096999999998355e-05, 3.8958999999998134e-05, 3.9431000000002964e-05, 3.874999999999712e-05, 3.893000000000299e-05, 3.922200000000195e-05, 3.919400000000281e-05, 3.948600000000177e-05, 3.9416999999999924e-05, 3.9389000000000784e-05, 3.89720000000017e-05, 3.895800000000213e-05, 3.9125000000000965e-05, 3.9416999999999924e-05, 3.9416999999999924e-05, 3.930599999999937e-05, 3.9346999999998605e-05, 3.949999999999787e-05, 3.926400000000066e-05, 3.949999999999787e-05, 3.923599999999805e-05, 3.875000000000059e-05, 3.8804999999999396e-05, 3.954200000000005e-05, 3.930599999999937e-05, 3.968000000000027e-05, 3.9263000000001186e-05, 3.94720000000022e-05, 3.87919999999993e-05, 3.9180999999999244e-05, 3.947199999999873e-05, 3.888800000000081e-05, 3.9360999999998175e-05, 3.913800000000106e-05, 3.8832999999998535e-05, 3.89720000000017e-05, 3.9416999999999924e-05, 3.8790999999999826e-05, 3.9555000000000146e-05, 3.8903000000003324e-05, 3.924999999999762e-05, 3.902799999999998e-05, 3.955599999999962e-05, 3.904199999999955e-05, 3.904199999999955e-05, 3.9153000000000104e-05, 3.9625000000001465e-05, 3.930599999999937e-05, 3.900000000000084e-05]</msg>
<status status="PASS" starttime="20201029 18:18:28.154" endtime="20201029 18:18:28.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.149" endtime="20201029 18:18:28.163"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:28.167" endtime="20201029 18:18:28.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.165" endtime="20201029 18:18:28.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.164" endtime="20201029 18:18:28.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.798" endtime="20201029 18:18:28.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.797" endtime="20201029 18:18:28.188"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.197" endtime="20201029 18:18:28.214"></status>
</kw>
<msg timestamp="20201029 18:18:28.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.195" endtime="20201029 18:18:28.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.215" endtime="20201029 18:18:28.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.218" endtime="20201029 18:18:28.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.192" endtime="20201029 18:18:28.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.190" endtime="20201029 18:18:28.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.227" endtime="20201029 18:18:28.515"></status>
</kw>
<msg timestamp="20201029 18:18:28.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022780806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022821125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.225" endtime="20201029 18:18:28.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022780806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022821125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.519" endtime="20201029 18:18:28.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.528" endtime="20201029 18:18:28.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.223" endtime="20201029 18:18:28.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.221" endtime="20201029 18:18:28.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:28.535" level="INFO">${RESULT} = [{'diff': 4.0319000000000466e-05}, {'diff': 4.0167000000000674e-05}, {'diff': 3.9889000000001285e-05}, {'diff': 4.058399999999976e-05}, {'diff': 3.981999999999944e-05}, {'diff': 4.0610999999999425e-05...</msg>
<status status="PASS" starttime="20201029 18:18:28.531" endtime="20201029 18:18:28.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:28.539" level="INFO">${ACCURACY} = {'diff': [4.0319000000000466e-05, 4.0167000000000674e-05, 3.9889000000001285e-05, 4.058399999999976e-05, 3.981999999999944e-05, 4.0610999999999425e-05, 4.0361000000002645e-05, 4.0596999999999855e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:28.536" endtime="20201029 18:18:28.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.543" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 18:18:28.542" endtime="20201029 18:18:28.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.546" level="INFO">VALUE: [4.0319000000000466e-05, 4.0167000000000674e-05, 3.9889000000001285e-05, 4.058399999999976e-05, 3.981999999999944e-05, 4.0610999999999425e-05, 4.0361000000002645e-05, 4.0596999999999855e-05, 4.044399999999712e-05, 4.0569000000000716e-05, 4.0667000000001174e-05, 4.0596999999999855e-05, 4.0096999999999355e-05, 4.0319000000000466e-05, 4.052800000000148e-05, 4.027799999999776e-05, 3.99859999999988e-05, 3.9846999999999105e-05, 4.0181000000000244e-05, 4.027800000000123e-05, 4.0569000000000716e-05, 4.0417000000000924e-05, 3.97920000000003e-05, 4.0111000000002395e-05, 4.0596999999999855e-05, 4.0346999999999605e-05, 4.0346999999999605e-05, 4.047199999999973e-05, 4.0583000000000286e-05, 4.0082999999999785e-05, 4.055600000000062e-05, 4.0096999999999355e-05, 4.0153000000001104e-05, 4.0430999999997025e-05, 4.005600000000012e-05, 4.0722999999999454e-05, 4.0181000000000244e-05, 4.008399999999926e-05, 4.051399999999844e-05, 3.977800000000073e-05, 4.0194999999999814e-05, 4.0124999999998495e-05, 4.02920000000008e-05, 4.0555000000001146e-05, 4.041600000000145e-05, 3.9832999999999535e-05, 3.990199999999791e-05, 3.998600000000227e-05, 4.040200000000188e-05, 3.976399999999769e-05]</msg>
<status status="PASS" starttime="20201029 18:18:28.545" endtime="20201029 18:18:28.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.540" endtime="20201029 18:18:28.548"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:28.552" endtime="20201029 18:18:28.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.550" endtime="20201029 18:18:28.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.549" endtime="20201029 18:18:28.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.189" endtime="20201029 18:18:28.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.188" endtime="20201029 18:18:28.572"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.581" endtime="20201029 18:18:28.601"></status>
</kw>
<msg timestamp="20201029 18:18:28.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.580" endtime="20201029 18:18:28.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.602" endtime="20201029 18:18:28.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.605" endtime="20201029 18:18:28.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.577" endtime="20201029 18:18:28.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.575" endtime="20201029 18:18:28.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.614" endtime="20201029 18:18:28.901"></status>
</kw>
<msg timestamp="20201029 18:18:28.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025561958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025603236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.613" endtime="20201029 18:18:28.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025561958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025603236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.905" endtime="20201029 18:18:28.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.914" endtime="20201029 18:18:28.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.610" endtime="20201029 18:18:28.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.608" endtime="20201029 18:18:28.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:28.921" level="INFO">${RESULT} = [{'diff': 4.127800000000223e-05}, {'diff': 4.129199999999833e-05}, {'diff': 4.108400000000026e-05}, {'diff': 4.1180999999997775e-05}, {'diff': 4.175000000000012e-05}, {'diff': 4.099999999999937e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:28.917" endtime="20201029 18:18:28.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:28.925" level="INFO">${ACCURACY} = {'diff': [4.127800000000223e-05, 4.129199999999833e-05, 4.108400000000026e-05, 4.1180999999997775e-05, 4.175000000000012e-05, 4.099999999999937e-05, 4.077800000000173e-05, 4.0959000000000134e-05, 4.13...</msg>
<status status="PASS" starttime="20201029 18:18:28.922" endtime="20201029 18:18:28.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.930" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 18:18:28.928" endtime="20201029 18:18:28.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.932" level="INFO">VALUE: [4.127800000000223e-05, 4.129199999999833e-05, 4.108400000000026e-05, 4.1180999999997775e-05, 4.175000000000012e-05, 4.099999999999937e-05, 4.077800000000173e-05, 4.0959000000000134e-05, 4.1318999999997996e-05, 4.175000000000012e-05, 4.1069000000001216e-05, 4.0875000000002715e-05, 4.173600000000055e-05, 4.165199999999966e-05, 4.070800000000041e-05, 4.1097000000000355e-05, 4.1097000000000355e-05, 4.124999999999962e-05, 4.0917000000001424e-05, 4.144399999999812e-05, 4.080600000000087e-05, 4.1124999999999495e-05, 4.0847000000000105e-05, 4.080600000000087e-05, 4.077800000000173e-05, 4.1361000000000175e-05, 4.099999999999937e-05, 4.1416999999998455e-05, 4.1653000000002605e-05, 4.0847000000000105e-05, 4.1082999999997316e-05, 4.124999999999962e-05, 4.1138999999999065e-05, 4.077800000000173e-05, 4.127799999999876e-05, 4.124999999999962e-05, 4.116599999999873e-05, 4.1473000000000204e-05, 4.123600000000005e-05, 4.1138999999999065e-05, 4.092999999999805e-05, 4.1431000000001494e-05, 4.1040999999998606e-05, 4.080600000000087e-05, 4.099999999999937e-05, 4.145800000000116e-05, 4.099999999999937e-05, 4.0860999999999675e-05, 4.1110999999999925e-05, 4.1569000000001716e-05]</msg>
<status status="PASS" starttime="20201029 18:18:28.931" endtime="20201029 18:18:28.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.926" endtime="20201029 18:18:28.934"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:28.938" endtime="20201029 18:18:28.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.937" endtime="20201029 18:18:28.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.935" endtime="20201029 18:18:28.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.573" endtime="20201029 18:18:28.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.573" endtime="20201029 18:18:28.959"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.968" endtime="20201029 18:18:28.984"></status>
</kw>
<msg timestamp="20201029 18:18:28.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.966" endtime="20201029 18:18:28.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.986" endtime="20201029 18:18:28.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.988" endtime="20201029 18:18:28.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.964" endtime="20201029 18:18:28.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.962" endtime="20201029 18:18:28.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.998" endtime="20201029 18:18:29.284"></status>
</kw>
<msg timestamp="20201029 18:18:29.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022218861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022261417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.996" endtime="20201029 18:18:29.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022218861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022261417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.289" endtime="20201029 18:18:29.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.297" endtime="20201029 18:18:29.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.993" endtime="20201029 18:18:29.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.991" endtime="20201029 18:18:29.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:29.304" level="INFO">${RESULT} = [{'diff': 4.255599999999915e-05}, {'diff': 4.24860000000013e-05}, {'diff': 4.2139000000000065e-05}, {'diff': 4.244399999999912e-05}, {'diff': 4.2624999999997526e-05}, {'diff': 4.232000000000194e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:29.301" endtime="20201029 18:18:29.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:29.309" level="INFO">${ACCURACY} = {'diff': [4.255599999999915e-05, 4.24860000000013e-05, 4.2139000000000065e-05, 4.244399999999912e-05, 4.2624999999997526e-05, 4.232000000000194e-05, 4.2347000000001606e-05, 4.225000000000062e-05, 4.25...</msg>
<status status="PASS" starttime="20201029 18:18:29.305" endtime="20201029 18:18:29.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.314" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 18:18:29.313" endtime="20201029 18:18:29.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.317" level="INFO">VALUE: [4.255599999999915e-05, 4.24860000000013e-05, 4.2139000000000065e-05, 4.244399999999912e-05, 4.2624999999997526e-05, 4.232000000000194e-05, 4.2347000000001606e-05, 4.225000000000062e-05, 4.2568999999999246e-05, 4.255599999999915e-05, 4.19860000000008e-05, 4.24860000000013e-05, 4.220799999999844e-05, 4.2111000000000925e-05, 4.2096999999997886e-05, 4.19860000000008e-05, 4.225000000000062e-05, 4.2459000000001634e-05, 4.2166999999999205e-05, 4.2152999999999635e-05, 4.2097000000001356e-05, 4.1987000000000274e-05, 4.256999999999872e-05, 4.2458999999998165e-05, 4.1902999999999385e-05, 4.2582999999998816e-05, 4.2527000000000537e-05, 4.1790999999999356e-05, 4.226300000000072e-05, 4.242999999999955e-05, 4.24999999999974e-05, 4.2083000000001786e-05, 4.2597000000001856e-05, 4.2347000000001606e-05, 4.252800000000001e-05, 4.2583000000002286e-05, 4.1888999999999815e-05, 4.250000000000087e-05, 4.194399999999862e-05, 4.2389000000000315e-05, 4.1916999999998955e-05, 4.1916999999998955e-05, 4.244400000000259e-05, 4.18059999999984e-05, 4.194399999999862e-05, 4.245799999999869e-05, 4.201399999999994e-05, 4.2181000000002244e-05, 4.2097000000001356e-05, 4.19999999999969e-05]</msg>
<status status="PASS" starttime="20201029 18:18:29.315" endtime="20201029 18:18:29.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.310" endtime="20201029 18:18:29.318"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:29.322" endtime="20201029 18:18:29.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.320" endtime="20201029 18:18:29.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.319" endtime="20201029 18:18:29.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.960" endtime="20201029 18:18:29.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.959" endtime="20201029 18:18:29.343"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.352" endtime="20201029 18:18:29.368"></status>
</kw>
<msg timestamp="20201029 18:18:29.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.350" endtime="20201029 18:18:29.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.370" endtime="20201029 18:18:29.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.372" endtime="20201029 18:18:29.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.348" endtime="20201029 18:18:29.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.345" endtime="20201029 18:18:29.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.382" endtime="20201029 18:18:29.669"></status>
</kw>
<msg timestamp="20201029 18:18:29.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022454375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022497417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.380" endtime="20201029 18:18:29.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022454375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022497417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.673" endtime="20201029 18:18:29.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.682" endtime="20201029 18:18:29.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.378" endtime="20201029 18:18:29.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.376" endtime="20201029 18:18:29.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:29.689" level="INFO">${RESULT} = [{'diff': 4.304200000000008e-05}, {'diff': 4.344400000000012e-05}, {'diff': 4.351399999999797e-05}, {'diff': 4.293000000000005e-05}, {'diff': 4.347199999999926e-05}, {'diff': 4.3596999999999386e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:29.685" endtime="20201029 18:18:29.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:29.693" level="INFO">${ACCURACY} = {'diff': [4.304200000000008e-05, 4.344400000000012e-05, 4.351399999999797e-05, 4.293000000000005e-05, 4.347199999999926e-05, 4.3596999999999386e-05, 4.29860000000018e-05, 4.301400000000094e-05, 4.3374...</msg>
<status status="PASS" starttime="20201029 18:18:29.690" endtime="20201029 18:18:29.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.698" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 18:18:29.697" endtime="20201029 18:18:29.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.701" level="INFO">VALUE: [4.304200000000008e-05, 4.344400000000012e-05, 4.351399999999797e-05, 4.293000000000005e-05, 4.347199999999926e-05, 4.3596999999999386e-05, 4.29860000000018e-05, 4.301400000000094e-05, 4.3374999999998276e-05, 4.302800000000051e-05, 4.3139000000001065e-05, 4.345800000000316e-05, 4.3195000000002814e-05, 4.3402999999997416e-05, 4.3388999999997846e-05, 4.3624999999998526e-05, 4.3139000000001065e-05, 4.3582999999999816e-05, 4.351399999999797e-05, 4.300000000000137e-05, 4.301400000000094e-05, 4.3041000000000607e-05, 4.3237000000001524e-05, 4.2819000000002966e-05, 4.3472999999998735e-05, 4.3041000000000607e-05, 4.283399999999854e-05, 4.288800000000134e-05, 4.358399999999929e-05, 4.336200000000165e-05, 4.320800000000291e-05, 4.29999999999979e-05, 4.277699999999732e-05, 4.288799999999787e-05, 4.2804999999999926e-05, 4.2945000000002564e-05, 4.298599999999833e-05, 4.2832999999999066e-05, 4.3068999999999746e-05, 4.327800000000076e-05, 4.341600000000098e-05, 4.3083000000002786e-05, 4.3068999999999746e-05, 4.3374999999998276e-05, 4.324999999999815e-05, 4.34999999999984e-05, 4.270799999999894e-05, 4.3389000000001315e-05, 4.327800000000076e-05, 4.34999999999984e-05]</msg>
<status status="PASS" starttime="20201029 18:18:29.699" endtime="20201029 18:18:29.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.694" endtime="20201029 18:18:29.702"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:29.706" endtime="20201029 18:18:29.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.704" endtime="20201029 18:18:29.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.703" endtime="20201029 18:18:29.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.344" endtime="20201029 18:18:29.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.343" endtime="20201029 18:18:29.727"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.736" endtime="20201029 18:18:29.753"></status>
</kw>
<msg timestamp="20201029 18:18:29.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.734" endtime="20201029 18:18:29.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.755" endtime="20201029 18:18:29.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.757" endtime="20201029 18:18:29.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.731" endtime="20201029 18:18:29.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.729" endtime="20201029 18:18:29.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.767" endtime="20201029 18:18:30.053"></status>
</kw>
<msg timestamp="20201029 18:18:30.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023662375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023706625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.765" endtime="20201029 18:18:30.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023662375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023706625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.057" endtime="20201029 18:18:30.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.066" endtime="20201029 18:18:30.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.763" endtime="20201029 18:18:30.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.761" endtime="20201029 18:18:30.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:30.072" level="INFO">${RESULT} = [{'diff': 4.424999999999915e-05}, {'diff': 4.4360999999999706e-05}, {'diff': 4.3846999999999636e-05}, {'diff': 4.4111000000002926e-05}, {'diff': 4.4624999999999526e-05}, {'diff': 4.4347000000000136e-0...</msg>
<status status="PASS" starttime="20201029 18:18:30.069" endtime="20201029 18:18:30.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:30.077" level="INFO">${ACCURACY} = {'diff': [4.424999999999915e-05, 4.4360999999999706e-05, 4.3846999999999636e-05, 4.4111000000002926e-05, 4.4624999999999526e-05, 4.4347000000000136e-05, 4.4096999999999886e-05, 4.4305000000001427e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:30.073" endtime="20201029 18:18:30.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.081" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 18:18:30.080" endtime="20201029 18:18:30.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.084" level="INFO">VALUE: [4.424999999999915e-05, 4.4360999999999706e-05, 4.3846999999999636e-05, 4.4111000000002926e-05, 4.4624999999999526e-05, 4.4347000000000136e-05, 4.4096999999999886e-05, 4.4305000000001427e-05, 4.440200000000241e-05, 4.454099999999864e-05, 4.427799999999829e-05, 4.4389000000002315e-05, 4.44999999999994e-05, 4.400000000000237e-05, 4.4125000000002496e-05, 4.4416999999997986e-05, 4.3860999999999206e-05, 4.4096999999999886e-05, 4.4083000000000316e-05, 4.4445000000000595e-05, 4.39999999999989e-05, 4.457000000000072e-05, 4.3902999999997916e-05, 4.441599999999851e-05, 4.3833000000000066e-05, 4.398599999999933e-05, 4.3846999999999636e-05, 4.381999999999997e-05, 4.407000000000022e-05, 4.429200000000133e-05, 4.409799999999936e-05, 4.427800000000176e-05, 4.4653000000002135e-05, 4.4374999999999276e-05, 4.4222999999999485e-05, 4.3874999999998776e-05, 4.466599999999876e-05, 4.4055000000001177e-05, 4.4152999999998166e-05, 4.4319000000000996e-05, 4.4208999999999915e-05, 4.4333000000000566e-05, 4.426400000000219e-05, 4.427699999999882e-05, 4.3860999999999206e-05, 4.4055000000001177e-05, 4.402800000000151e-05, 4.4138999999998596e-05, 4.404199999999761e-05, 4.3874999999998776e-05]</msg>
<status status="PASS" starttime="20201029 18:18:30.083" endtime="20201029 18:18:30.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.078" endtime="20201029 18:18:30.086"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:30.090" endtime="20201029 18:18:30.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.089" endtime="20201029 18:18:30.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.087" endtime="20201029 18:18:30.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.728" endtime="20201029 18:18:30.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.727" endtime="20201029 18:18:30.111"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.120" endtime="20201029 18:18:30.136"></status>
</kw>
<msg timestamp="20201029 18:18:30.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.118" endtime="20201029 18:18:30.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.138" endtime="20201029 18:18:30.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.141" endtime="20201029 18:18:30.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.116" endtime="20201029 18:18:30.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.113" endtime="20201029 18:18:30.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.150" endtime="20201029 18:18:30.436"></status>
</kw>
<msg timestamp="20201029 18:18:30.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02228875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:30.148" endtime="20201029 18:18:30.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02228875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:30.441" endtime="20201029 18:18:30.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.449" endtime="20201029 18:18:30.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.146" endtime="20201029 18:18:30.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.144" endtime="20201029 18:18:30.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:30.456" level="INFO">${RESULT} = [{'diff': 4.529199999999886e-05}, {'diff': 4.5083000000001316e-05}, {'diff': 4.548599999999736e-05}, {'diff': 4.498600000000033e-05}, {'diff': 4.5597000000001386e-05}, {'diff': 4.5388999999999846e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:30.453" endtime="20201029 18:18:30.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:30.462" level="INFO">${ACCURACY} = {'diff': [4.529199999999886e-05, 4.5083000000001316e-05, 4.548599999999736e-05, 4.498600000000033e-05, 4.5597000000001386e-05, 4.5388999999999846e-05, 4.476400000000269e-05, 4.5125000000000026e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:18:30.457" endtime="20201029 18:18:30.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.466" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 18:18:30.465" endtime="20201029 18:18:30.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.469" level="INFO">VALUE: [4.529199999999886e-05, 4.5083000000001316e-05, 4.548599999999736e-05, 4.498600000000033e-05, 4.5597000000001386e-05, 4.5388999999999846e-05, 4.476400000000269e-05, 4.5125000000000026e-05, 4.5652999999999666e-05, 4.494400000000162e-05, 4.5208999999997446e-05, 4.477800000000226e-05, 4.4861000000000206e-05, 4.49999999999999e-05, 4.5430999999998556e-05, 4.4861000000000206e-05, 4.555599999999868e-05, 4.4972999999996766e-05, 4.484800000000011e-05, 4.552799999999954e-05, 4.49999999999999e-05, 4.49999999999999e-05, 4.5681000000002275e-05, 4.4930999999998056e-05, 4.48060000000014e-05, 4.497200000000076e-05, 4.526399999999972e-05, 4.526399999999972e-05, 4.573600000000108e-05, 4.531899999999853e-05, 4.5388999999999846e-05, 4.5347000000001136e-05, 4.505599999999818e-05, 4.477799999999879e-05, 4.5625000000000526e-05, 4.494400000000162e-05, 4.5375000000000276e-05, 4.523600000000058e-05, 4.51939999999984e-05, 4.481899999999803e-05, 4.479199999999836e-05, 4.53060000000019e-05, 4.548599999999736e-05, 4.5583000000001817e-05, 4.5083000000001316e-05, 4.505599999999818e-05, 4.5402999999999416e-05, 4.532000000000147e-05, 4.5180999999998306e-05, 4.548600000000083e-05]</msg>
<status status="PASS" starttime="20201029 18:18:30.467" endtime="20201029 18:18:30.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.462" endtime="20201029 18:18:30.470"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:30.474" endtime="20201029 18:18:30.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.473" endtime="20201029 18:18:30.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.471" endtime="20201029 18:18:30.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.112" endtime="20201029 18:18:30.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.111" endtime="20201029 18:18:30.495"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.504" endtime="20201029 18:18:30.521"></status>
</kw>
<msg timestamp="20201029 18:18:30.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.503" endtime="20201029 18:18:30.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.522" endtime="20201029 18:18:30.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.525" endtime="20201029 18:18:30.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.500" endtime="20201029 18:18:30.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.497" endtime="20201029 18:18:30.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.534" endtime="20201029 18:18:30.821"></status>
</kw>
<msg timestamp="20201029 18:18:30.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022491639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022538222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.533" endtime="20201029 18:18:30.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022491639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022538222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.826" endtime="20201029 18:18:30.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.834" endtime="20201029 18:18:30.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.530" endtime="20201029 18:18:30.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.528" endtime="20201029 18:18:30.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:30.841" level="INFO">${RESULT} = [{'diff': 4.658299999999935e-05}, {'diff': 4.599999999999743e-05}, {'diff': 4.606999999999875e-05}, {'diff': 4.602800000000004e-05}, {'diff': 4.652799999999707e-05}, {'diff': 4.623599999999811e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:30.838" endtime="20201029 18:18:30.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:30.845" level="INFO">${ACCURACY} = {'diff': [4.658299999999935e-05, 4.599999999999743e-05, 4.606999999999875e-05, 4.602800000000004e-05, 4.652799999999707e-05, 4.623599999999811e-05, 4.577799999999979e-05, 4.623600000000158e-05, 4.6250...</msg>
<status status="PASS" starttime="20201029 18:18:30.842" endtime="20201029 18:18:30.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.850" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 18:18:30.849" endtime="20201029 18:18:30.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.853" level="INFO">VALUE: [4.658299999999935e-05, 4.599999999999743e-05, 4.606999999999875e-05, 4.602800000000004e-05, 4.652799999999707e-05, 4.623599999999811e-05, 4.577799999999979e-05, 4.623600000000158e-05, 4.625000000000115e-05, 4.6416999999999986e-05, 4.6361000000001706e-05, 4.6403000000000416e-05, 4.5889000000000346e-05, 4.579199999999936e-05, 4.573600000000108e-05, 4.631899999999953e-05, 4.63329999999991e-05, 4.576300000000075e-05, 4.592999999999958e-05, 4.656899999999978e-05, 4.60000000000009e-05, 4.579099999999989e-05, 4.616600000000026e-05, 4.641600000000051e-05, 4.648599999999836e-05, 4.6139000000000596e-05, 4.644399999999965e-05, 4.620799999999897e-05, 4.580599999999893e-05, 4.652800000000054e-05, 4.5833000000002067e-05, 4.652800000000054e-05, 4.5902999999999916e-05, 4.6153000000000166e-05, 4.627800000000029e-05, 4.6111000000001456e-05, 4.5916999999999486e-05, 4.630599999999943e-05, 4.606999999999875e-05, 4.6347000000002136e-05, 4.605599999999918e-05, 4.5875000000000776e-05, 4.58199999999985e-05, 4.6223000000001485e-05, 4.6444999999999126e-05, 4.5902999999999916e-05, 4.626399999999725e-05, 4.617999999999983e-05, 4.645799999999922e-05, 4.609699999999842e-05]</msg>
<status status="PASS" starttime="20201029 18:18:30.851" endtime="20201029 18:18:30.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.846" endtime="20201029 18:18:30.854"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:30.858" endtime="20201029 18:18:30.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.856" endtime="20201029 18:18:30.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.855" endtime="20201029 18:18:30.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.496" endtime="20201029 18:18:30.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.495" endtime="20201029 18:18:30.879"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.888" endtime="20201029 18:18:30.905"></status>
</kw>
<msg timestamp="20201029 18:18:30.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.886" endtime="20201029 18:18:30.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.907" endtime="20201029 18:18:30.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.909" endtime="20201029 18:18:30.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.884" endtime="20201029 18:18:30.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.881" endtime="20201029 18:18:30.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.919" endtime="20201029 18:18:31.206"></status>
</kw>
<msg timestamp="20201029 18:18:31.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023577278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023624389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.917" endtime="20201029 18:18:31.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023577278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023624389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.213" endtime="20201029 18:18:31.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.225" endtime="20201029 18:18:31.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.915" endtime="20201029 18:18:31.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.913" endtime="20201029 18:18:31.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:31.232" level="INFO">${RESULT} = [{'diff': 4.711099999999899e-05}, {'diff': 4.755499999999774e-05}, {'diff': 4.712499999999856e-05}, {'diff': 4.726300000000225e-05}, {'diff': 4.7389000000001846e-05}, {'diff': 4.698599999999886e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:31.228" endtime="20201029 18:18:31.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:31.236" level="INFO">${ACCURACY} = {'diff': [4.711099999999899e-05, 4.755499999999774e-05, 4.712499999999856e-05, 4.726300000000225e-05, 4.7389000000001846e-05, 4.698599999999886e-05, 4.715200000000169e-05, 4.711099999999899e-05, 4.705...</msg>
<status status="PASS" starttime="20201029 18:18:31.233" endtime="20201029 18:18:31.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.241" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 18:18:31.240" endtime="20201029 18:18:31.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.243" level="INFO">VALUE: [4.711099999999899e-05, 4.755499999999774e-05, 4.712499999999856e-05, 4.726300000000225e-05, 4.7389000000001846e-05, 4.698599999999886e-05, 4.715200000000169e-05, 4.711099999999899e-05, 4.705500000000071e-05, 4.738899999999838e-05, 4.759699999999992e-05, 4.713899999999813e-05, 4.7445000000000126e-05, 4.732e-05, 4.679200000000036e-05, 4.761099999999949e-05, 4.757000000000025e-05, 4.7403000000001416e-05, 4.7181000000000306e-05, 4.687499999999831e-05, 4.7431000000000556e-05, 4.709699999999942e-05, 4.680599999999993e-05, 4.697199999999929e-05, 4.7403000000001416e-05, 4.755500000000121e-05, 4.768000000000133e-05, 4.7417000000000986e-05, 4.7389000000001846e-05, 4.731899999999706e-05, 4.691600000000101e-05, 4.709799999999889e-05, 4.741600000000151e-05, 4.776399999999875e-05, 4.752700000000207e-05, 4.708299999999985e-05, 4.677699999999785e-05, 4.740199999999847e-05, 4.73330000000001e-05, 4.7111000000002456e-05, 4.677799999999732e-05, 4.749999999999893e-05, 4.7139000000001596e-05, 4.7389000000001846e-05, 4.756899999999731e-05, 4.758300000000035e-05, 4.730600000000043e-05, 4.766699999999777e-05, 4.71940000000004e-05, 4.75139999999985e-05]</msg>
<status status="PASS" starttime="20201029 18:18:31.242" endtime="20201029 18:18:31.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.237" endtime="20201029 18:18:31.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:31.249" endtime="20201029 18:18:31.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.248" endtime="20201029 18:18:31.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.247" endtime="20201029 18:18:31.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.880" endtime="20201029 18:18:31.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.879" endtime="20201029 18:18:31.270"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.279" endtime="20201029 18:18:31.296"></status>
</kw>
<msg timestamp="20201029 18:18:31.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.278" endtime="20201029 18:18:31.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.297" endtime="20201029 18:18:31.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.300" endtime="20201029 18:18:31.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.275" endtime="20201029 18:18:31.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.273" endtime="20201029 18:18:31.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.310" endtime="20201029 18:18:31.595"></status>
</kw>
<msg timestamp="20201029 18:18:31.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022499986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022548639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.308" endtime="20201029 18:18:31.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022499986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022548639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.600" endtime="20201029 18:18:31.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.608" endtime="20201029 18:18:31.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.305" endtime="20201029 18:18:31.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.303" endtime="20201029 18:18:31.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:31.615" level="INFO">${RESULT} = [{'diff': 4.86529999999992e-05}, {'diff': 4.815199999999922e-05}, {'diff': 4.7875000000002776e-05}, {'diff': 4.845800000000122e-05}, {'diff': 4.811099999999999e-05}, {'diff': 4.797200000000029e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:31.612" endtime="20201029 18:18:31.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:31.620" level="INFO">${ACCURACY} = {'diff': [4.86529999999992e-05, 4.815199999999922e-05, 4.7875000000002776e-05, 4.845800000000122e-05, 4.811099999999999e-05, 4.797200000000029e-05, 4.78469999999967e-05, 4.859700000000092e-05, 4.85279...</msg>
<status status="PASS" starttime="20201029 18:18:31.616" endtime="20201029 18:18:31.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.625" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 18:18:31.624" endtime="20201029 18:18:31.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.628" level="INFO">VALUE: [4.86529999999992e-05, 4.815199999999922e-05, 4.7875000000002776e-05, 4.845800000000122e-05, 4.811099999999999e-05, 4.797200000000029e-05, 4.78469999999967e-05, 4.859700000000092e-05, 4.852799999999907e-05, 4.827799999999882e-05, 4.786099999999974e-05, 4.784700000000017e-05, 4.8431000000001556e-05, 4.831900000000153e-05, 4.845799999999775e-05, 4.870800000000147e-05, 4.781900000000103e-05, 4.802799999999857e-05, 4.784700000000017e-05, 4.849999999999993e-05, 4.823600000000011e-05, 4.801400000000247e-05, 4.847200000000079e-05, 4.788899999999888e-05, 4.823600000000011e-05, 4.81529999999987e-05, 4.8223000000000016e-05, 4.805499999999824e-05, 4.834800000000014e-05, 4.802799999999857e-05, 4.8667000000002236e-05, 4.817999999999836e-05, 4.861100000000049e-05, 4.78330000000006e-05, 4.790199999999897e-05, 4.801299999999953e-05, 4.858299999999788e-05, 4.841599999999904e-05, 4.830499999999849e-05, 4.823600000000011e-05, 4.809700000000042e-05, 4.780500000000146e-05, 4.813899999999913e-05, 4.8167000000001736e-05, 4.8375000000003276e-05, 4.791699999999802e-05, 4.852799999999907e-05, 4.866699999999877e-05, 4.788899999999888e-05, 4.843099999999809e-05]</msg>
<status status="PASS" starttime="20201029 18:18:31.626" endtime="20201029 18:18:31.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.621" endtime="20201029 18:18:31.629"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:31.633" endtime="20201029 18:18:31.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.631" endtime="20201029 18:18:31.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.630" endtime="20201029 18:18:31.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.271" endtime="20201029 18:18:31.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.271" endtime="20201029 18:18:31.654"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.663" endtime="20201029 18:18:31.680"></status>
</kw>
<msg timestamp="20201029 18:18:31.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.661" endtime="20201029 18:18:31.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.681" endtime="20201029 18:18:31.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.684" endtime="20201029 18:18:31.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.659" endtime="20201029 18:18:31.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.656" endtime="20201029 18:18:31.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.693" endtime="20201029 18:18:31.981"></status>
</kw>
<msg timestamp="20201029 18:18:31.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022495222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.692" endtime="20201029 18:18:31.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022445958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022495222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.985" endtime="20201029 18:18:31.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.994" endtime="20201029 18:18:31.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.689" endtime="20201029 18:18:31.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.687" endtime="20201029 18:18:31.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:32.001" level="INFO">${RESULT} = [{'diff': 4.926400000000025e-05}, {'diff': 4.954199999999964e-05}, {'diff': 4.9195000000001876e-05}, {'diff': 4.886100000000074e-05}, {'diff': 4.952800000000007e-05}, {'diff': 4.929200000000286e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:31.997" endtime="20201029 18:18:32.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:32.005" level="INFO">${ACCURACY} = {'diff': [4.926400000000025e-05, 4.954199999999964e-05, 4.9195000000001876e-05, 4.886100000000074e-05, 4.952800000000007e-05, 4.929200000000286e-05, 4.948600000000136e-05, 4.88200000000015e-05, 4.9444...</msg>
<status status="PASS" starttime="20201029 18:18:32.002" endtime="20201029 18:18:32.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.010" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 18:18:32.009" endtime="20201029 18:18:32.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.012" level="INFO">VALUE: [4.926400000000025e-05, 4.954199999999964e-05, 4.9195000000001876e-05, 4.886100000000074e-05, 4.952800000000007e-05, 4.929200000000286e-05, 4.948600000000136e-05, 4.88200000000015e-05, 4.944499999999866e-05, 4.941699999999952e-05, 4.877799999999932e-05, 4.956899999999931e-05, 4.936200000000071e-05, 4.9195000000001876e-05, 4.936100000000124e-05, 4.956899999999931e-05, 4.905499999999924e-05, 4.958299999999888e-05, 4.943099999999909e-05, 4.959699999999845e-05, 4.922199999999807e-05, 4.908299999999838e-05, 4.884700000000117e-05, 4.902799999999957e-05, 4.930499999999949e-05, 4.931899999999906e-05, 4.958299999999888e-05, 4.906899999999881e-05, 4.875000000000018e-05, 4.895800000000172e-05, 4.88339999999976e-05, 4.905599999999871e-05, 4.891699999999902e-05, 4.951399999999703e-05, 4.8917000000002486e-05, 4.93469999999982e-05, 4.898600000000086e-05, 4.893099999999859e-05, 4.888899999999988e-05, 4.886100000000074e-05, 4.8987000000000336e-05, 4.966699999999977e-05, 4.911100000000099e-05, 4.916599999999979e-05, 4.911199999999699e-05, 4.959700000000192e-05, 4.958300000000235e-05, 4.880499999999899e-05, 4.900000000000043e-05, 4.955499999999974e-05]</msg>
<status status="PASS" starttime="20201029 18:18:32.011" endtime="20201029 18:18:32.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.006" endtime="20201029 18:18:32.014"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:32.018" endtime="20201029 18:18:32.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.016" endtime="20201029 18:18:32.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.015" endtime="20201029 18:18:32.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.655" endtime="20201029 18:18:32.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.654" endtime="20201029 18:18:32.038"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.047" endtime="20201029 18:18:32.067"></status>
</kw>
<msg timestamp="20201029 18:18:32.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.046" endtime="20201029 18:18:32.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.069" endtime="20201029 18:18:32.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.071" endtime="20201029 18:18:32.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.043" endtime="20201029 18:18:32.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.041" endtime="20201029 18:18:32.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.081" endtime="20201029 18:18:32.366"></status>
</kw>
<msg timestamp="20201029 18:18:32.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025516347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025566625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.079" endtime="20201029 18:18:32.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025516347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025566625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.370" endtime="20201029 18:18:32.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.379" endtime="20201029 18:18:32.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.076" endtime="20201029 18:18:32.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.075" endtime="20201029 18:18:32.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:32.386" level="INFO">${RESULT} = [{'diff': 5.027799999999735e-05}, {'diff': 5.012500000000156e-05}, {'diff': 4.990300000000045e-05}, {'diff': 5.05279999999976e-05}, {'diff': 5.0222999999998547e-05}, {'diff': 5.011200000000146e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:32.382" endtime="20201029 18:18:32.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:32.390" level="INFO">${ACCURACY} = {'diff': [5.027799999999735e-05, 5.012500000000156e-05, 4.990300000000045e-05, 5.05279999999976e-05, 5.0222999999998547e-05, 5.011200000000146e-05, 5.05140000000015e-05, 5.034800000000214e-05, 5.05970...</msg>
<status status="PASS" starttime="20201029 18:18:32.387" endtime="20201029 18:18:32.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.394" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 18:18:32.393" endtime="20201029 18:18:32.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.397" level="INFO">VALUE: [5.027799999999735e-05, 5.012500000000156e-05, 4.990300000000045e-05, 5.05279999999976e-05, 5.0222999999998547e-05, 5.011200000000146e-05, 5.05140000000015e-05, 5.034800000000214e-05, 5.059700000000292e-05, 5.036099999999877e-05, 5.011099999999852e-05, 5.056900000000031e-05, 5.006899999999981e-05, 5.029200000000039e-05, 5.015200000000122e-05, 5.029100000000092e-05, 5.079200000000089e-05, 4.973599999999814e-05, 4.990300000000045e-05, 5.058400000000282e-05, 5.02079999999995e-05, 5.037500000000181e-05, 5.013900000000113e-05, 5.002800000000057e-05, 4.979199999999989e-05, 5.015299999999723e-05, 5.026400000000125e-05, 5.023599999999864e-05, 5.061099999999902e-05, 4.987500000000131e-05, 5.049999999999846e-05, 5.0459000000002696e-05, 5.043100000000009e-05, 5.023600000000211e-05, 5.027799999999735e-05, 5.056999999999978e-05, 5.031999999999953e-05, 4.976300000000128e-05, 5.049999999999846e-05, 5.023600000000211e-05, 4.988900000000088e-05, 5.037500000000181e-05, 5.0151999999997754e-05, 4.988900000000088e-05, 5.02079999999995e-05, 4.988900000000088e-05, 4.995799999999925e-05, 4.995799999999925e-05, 4.983299999999913e-05, 5.050000000000193e-05]</msg>
<status status="PASS" starttime="20201029 18:18:32.396" endtime="20201029 18:18:32.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.391" endtime="20201029 18:18:32.399"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:32.403" endtime="20201029 18:18:32.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.402" endtime="20201029 18:18:32.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.400" endtime="20201029 18:18:32.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.039" endtime="20201029 18:18:32.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.039" endtime="20201029 18:18:32.424"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.433" endtime="20201029 18:18:32.450"></status>
</kw>
<msg timestamp="20201029 18:18:32.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.431" endtime="20201029 18:18:32.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.452" endtime="20201029 18:18:32.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.455" endtime="20201029 18:18:32.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.429" endtime="20201029 18:18:32.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.427" endtime="20201029 18:18:32.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.465" endtime="20201029 18:18:32.752"></status>
</kw>
<msg timestamp="20201029 18:18:32.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022115056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022166042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.463" endtime="20201029 18:18:32.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022115056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022166042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.757" endtime="20201029 18:18:32.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.765" endtime="20201029 18:18:32.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.460" endtime="20201029 18:18:32.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.458" endtime="20201029 18:18:32.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:32.772" level="INFO">${RESULT} = [{'diff': 5.098599999999939e-05}, {'diff': 5.076400000000175e-05}, {'diff': 5.174999999999971e-05}, {'diff': 5.075000000000218e-05}, {'diff': 5.144400000000118e-05}, {'diff': 5.141700000000152e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:32.769" endtime="20201029 18:18:32.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:32.777" level="INFO">${ACCURACY} = {'diff': [5.098599999999939e-05, 5.076400000000175e-05, 5.174999999999971e-05, 5.075000000000218e-05, 5.144400000000118e-05, 5.141700000000152e-05, 5.116700000000127e-05, 5.079200000000089e-05, 5.1096...</msg>
<status status="PASS" starttime="20201029 18:18:32.773" endtime="20201029 18:18:32.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.782" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 18:18:32.781" endtime="20201029 18:18:32.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.785" level="INFO">VALUE: [5.098599999999939e-05, 5.076400000000175e-05, 5.174999999999971e-05, 5.075000000000218e-05, 5.144400000000118e-05, 5.141700000000152e-05, 5.116700000000127e-05, 5.079200000000089e-05, 5.109699999999995e-05, 5.088899999999841e-05, 5.151399999999903e-05, 5.136100000000324e-05, 5.083300000000013e-05, 5.123599999999964e-05, 5.15140000000025e-05, 5.105600000000071e-05, 5.090299999999798e-05, 5.073599999999914e-05, 5.13340000000001e-05, 5.101399999999853e-05, 5.123599999999964e-05, 5.084800000000264e-05, 5.158400000000035e-05, 5.095899999999973e-05, 5.088899999999841e-05, 5.147200000000032e-05, 5.131899999999759e-05, 5.1137999999999184e-05, 5.161100000000002e-05, 5.088899999999841e-05, 5.137499999999934e-05, 5.131899999999759e-05, 5.077800000000132e-05, 5.081900000000056e-05, 5.098599999999939e-05, 5.155600000000121e-05, 5.081900000000056e-05, 5.161100000000002e-05, 5.118100000000084e-05, 5.131999999999706e-05, 5.11530000000017e-05, 5.074999999999871e-05, 5.108399999999985e-05, 5.105600000000071e-05, 5.109699999999995e-05, 5.127799999999835e-05, 5.143100000000109e-05, 5.13340000000001e-05, 5.145800000000075e-05, 5.0943999999997214e-05]</msg>
<status status="PASS" starttime="20201029 18:18:32.783" endtime="20201029 18:18:32.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.778" endtime="20201029 18:18:32.786"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:32.790" endtime="20201029 18:18:32.809"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.788" endtime="20201029 18:18:32.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.787" endtime="20201029 18:18:32.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.425" endtime="20201029 18:18:32.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.424" endtime="20201029 18:18:32.811"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.820" endtime="20201029 18:18:32.836"></status>
</kw>
<msg timestamp="20201029 18:18:32.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.818" endtime="20201029 18:18:32.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.838" endtime="20201029 18:18:32.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.840" endtime="20201029 18:18:32.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.815" endtime="20201029 18:18:32.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.813" endtime="20201029 18:18:32.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.850" endtime="20201029 18:18:33.137"></status>
</kw>
<msg timestamp="20201029 18:18:33.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022198556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022250792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.848" endtime="20201029 18:18:33.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022198556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022250792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.141" endtime="20201029 18:18:33.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.150" endtime="20201029 18:18:33.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.845" endtime="20201029 18:18:33.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.844" endtime="20201029 18:18:33.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:33.157" level="INFO">${RESULT} = [{'diff': 5.2235999999997174e-05}, {'diff': 5.208300000000138e-05}, {'diff': 5.227799999999935e-05}, {'diff': 5.204200000000214e-05}, {'diff': 5.206899999999834e-05}, {'diff': 5.2471999999997854e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:33.153" endtime="20201029 18:18:33.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:33.161" level="INFO">${ACCURACY} = {'diff': [5.2235999999997174e-05, 5.208300000000138e-05, 5.227799999999935e-05, 5.204200000000214e-05, 5.206899999999834e-05, 5.2471999999997854e-05, 5.197200000000082e-05, 5.241699999999905e-05, 5.20...</msg>
<status status="PASS" starttime="20201029 18:18:33.158" endtime="20201029 18:18:33.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.166" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 18:18:33.165" endtime="20201029 18:18:33.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.168" level="INFO">VALUE: [5.2235999999997174e-05, 5.208300000000138e-05, 5.227799999999935e-05, 5.204200000000214e-05, 5.206899999999834e-05, 5.2471999999997854e-05, 5.197200000000082e-05, 5.241699999999905e-05, 5.20279999999991e-05, 5.223600000000064e-05, 5.187499999999984e-05, 5.208399999999738e-05, 5.26669999999993e-05, 5.250000000000046e-05, 5.208400000000085e-05, 5.208399999999738e-05, 5.25279999999996e-05, 5.190299999999898e-05, 5.251400000000003e-05, 5.213899999999966e-05, 5.231999999999806e-05, 5.254199999999917e-05, 5.204200000000214e-05, 5.255499999999927e-05, 5.180499999999852e-05, 5.227699999999988e-05, 5.1901999999999504e-05, 5.2207999999998034e-05, 5.1929999999998644e-05, 5.186100000000027e-05, 5.2014000000003e-05, 5.215299999999923e-05, 5.265299999999973e-05, 5.218099999999837e-05, 5.1971999999997354e-05, 5.236100000000077e-05, 5.180600000000146e-05, 5.255599999999874e-05, 5.22080000000015e-05, 5.199999999999996e-05, 5.2485999999997424e-05, 5.180600000000146e-05, 5.229199999999892e-05, 5.258399999999788e-05, 5.21530000000027e-05, 5.255600000000221e-05, 5.187499999999984e-05, 5.229200000000239e-05, 5.20279999999991e-05, 5.229199999999892e-05]</msg>
<status status="PASS" starttime="20201029 18:18:33.167" endtime="20201029 18:18:33.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.162" endtime="20201029 18:18:33.174"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:33.178" endtime="20201029 18:18:33.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.177" endtime="20201029 18:18:33.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.175" endtime="20201029 18:18:33.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.811" endtime="20201029 18:18:33.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.811" endtime="20201029 18:18:33.199"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.208" endtime="20201029 18:18:33.226"></status>
</kw>
<msg timestamp="20201029 18:18:33.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.207" endtime="20201029 18:18:33.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.228" endtime="20201029 18:18:33.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.230" endtime="20201029 18:18:33.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.204" endtime="20201029 18:18:33.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.202" endtime="20201029 18:18:33.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.240" endtime="20201029 18:18:33.526"></status>
</kw>
<msg timestamp="20201029 18:18:33.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023333875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023387167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.238" endtime="20201029 18:18:33.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023333875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023387167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.531" endtime="20201029 18:18:33.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.539" endtime="20201029 18:18:33.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.235" endtime="20201029 18:18:33.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.234" endtime="20201029 18:18:33.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:33.546" level="INFO">${RESULT} = [{'diff': 5.329199999999992e-05}, {'diff': 5.361099999999855e-05}, {'diff': 5.315300000000023e-05}, {'diff': 5.35410000000007e-05}, {'diff': 5.301400000000053e-05}, {'diff': 5.338900000000091e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:33.543" endtime="20201029 18:18:33.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:33.551" level="INFO">${ACCURACY} = {'diff': [5.329199999999992e-05, 5.361099999999855e-05, 5.315300000000023e-05, 5.35410000000007e-05, 5.301400000000053e-05, 5.338900000000091e-05, 5.33609999999983e-05, 5.359699999999898e-05, 5.306899...</msg>
<status status="PASS" starttime="20201029 18:18:33.547" endtime="20201029 18:18:33.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.555" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 18:18:33.554" endtime="20201029 18:18:33.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.558" level="INFO">VALUE: [5.329199999999992e-05, 5.361099999999855e-05, 5.315300000000023e-05, 5.35410000000007e-05, 5.301400000000053e-05, 5.338900000000091e-05, 5.33609999999983e-05, 5.359699999999898e-05, 5.306899999999934e-05, 5.281899999999909e-05, 5.305599999999924e-05, 5.318099999999937e-05, 5.280599999999899e-05, 5.33609999999983e-05, 5.3221999999998604e-05, 5.327800000000035e-05, 5.340300000000048e-05, 5.338900000000091e-05, 5.293100000000259e-05, 5.297200000000182e-05, 5.29730000000013e-05, 5.281899999999909e-05, 5.305600000000271e-05, 5.319500000000241e-05, 5.361099999999855e-05, 5.309700000000195e-05, 5.3388000000001434e-05, 5.2971999999998354e-05, 5.333300000000263e-05, 5.311100000000152e-05, 5.309700000000195e-05, 5.3179999999999894e-05, 5.322200000000207e-05, 5.3193999999999464e-05, 5.31669999999998e-05, 5.35280000000006e-05, 5.308299999999891e-05, 5.309699999999848e-05, 5.311100000000152e-05, 5.3152000000000754e-05, 5.275000000000071e-05, 5.306999999999881e-05, 5.288900000000041e-05, 5.311099999999805e-05, 5.361099999999855e-05, 5.345899999999876e-05, 5.306999999999881e-05, 5.3263999999997313e-05, 5.318099999999937e-05, 5.287499999999737e-05]</msg>
<status status="PASS" starttime="20201029 18:18:33.557" endtime="20201029 18:18:33.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.552" endtime="20201029 18:18:33.560"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:33.564" endtime="20201029 18:18:33.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.563" endtime="20201029 18:18:33.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.561" endtime="20201029 18:18:33.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.200" endtime="20201029 18:18:33.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.200" endtime="20201029 18:18:33.585"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.594" endtime="20201029 18:18:33.610"></status>
</kw>
<msg timestamp="20201029 18:18:33.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.592" endtime="20201029 18:18:33.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.612" endtime="20201029 18:18:33.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.614" endtime="20201029 18:18:33.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.590" endtime="20201029 18:18:33.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.587" endtime="20201029 18:18:33.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.624" endtime="20201029 18:18:33.910"></status>
</kw>
<msg timestamp="20201029 18:18:33.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022581556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022635389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.622" endtime="20201029 18:18:33.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022581556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022635389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.914" endtime="20201029 18:18:33.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.923" endtime="20201029 18:18:33.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.620" endtime="20201029 18:18:33.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.618" endtime="20201029 18:18:33.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:33.930" level="INFO">${RESULT} = [{'diff': 5.383299999999966e-05}, {'diff': 5.394499999999969e-05}, {'diff': 5.4387999999998965e-05}, {'diff': 5.4444000000000714e-05}, {'diff': 5.461099999999955e-05}, {'diff': 5.452699999999866e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:33.926" endtime="20201029 18:18:33.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:33.935" level="INFO">${ACCURACY} = {'diff': [5.383299999999966e-05, 5.394499999999969e-05, 5.4387999999998965e-05, 5.4444000000000714e-05, 5.461099999999955e-05, 5.452699999999866e-05, 5.431900000000059e-05, 5.430500000000102e-05, 5.38...</msg>
<status status="PASS" starttime="20201029 18:18:33.931" endtime="20201029 18:18:33.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.940" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 18:18:33.939" endtime="20201029 18:18:33.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.942" level="INFO">VALUE: [5.383299999999966e-05, 5.394499999999969e-05, 5.4387999999998965e-05, 5.4444000000000714e-05, 5.461099999999955e-05, 5.452699999999866e-05, 5.431900000000059e-05, 5.430500000000102e-05, 5.383299999999966e-05, 5.4235999999999174e-05, 5.409699999999948e-05, 5.4499999999998994e-05, 5.434699999999973e-05, 5.432000000000006e-05, 5.390300000000098e-05, 5.458300000000041e-05, 5.384699999999923e-05, 5.4194000000000464e-05, 5.40280000000011e-05, 5.432000000000006e-05, 5.383299999999966e-05, 5.455600000000074e-05, 5.420899999999951e-05, 5.437500000000234e-05, 5.38479999999987e-05, 5.3930000000000644e-05, 5.457000000000031e-05, 5.393100000000012e-05, 5.384699999999923e-05, 5.408299999999991e-05, 5.4499999999998994e-05, 5.405500000000077e-05, 5.452699999999866e-05, 5.408299999999991e-05, 5.425000000000221e-05, 5.4235999999999174e-05, 5.4458000000000284e-05, 5.4277999999997883e-05, 5.380500000000052e-05, 5.4013999999998064e-05, 5.4180000000000894e-05, 5.409699999999948e-05, 5.4444000000000714e-05, 5.4485999999999424e-05, 5.40280000000011e-05, 5.455600000000074e-05, 5.412500000000209e-05, 5.411099999999905e-05, 5.409699999999948e-05, 5.380500000000052e-05]</msg>
<status status="PASS" starttime="20201029 18:18:33.941" endtime="20201029 18:18:33.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.936" endtime="20201029 18:18:33.944"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:33.948" endtime="20201029 18:18:33.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.946" endtime="20201029 18:18:33.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.945" endtime="20201029 18:18:33.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.586" endtime="20201029 18:18:33.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.585" endtime="20201029 18:18:33.968"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.977" endtime="20201029 18:18:33.994"></status>
</kw>
<msg timestamp="20201029 18:18:33.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.976" endtime="20201029 18:18:33.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.996" endtime="20201029 18:18:33.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.999" endtime="20201029 18:18:34.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.973" endtime="20201029 18:18:34.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.971" endtime="20201029 18:18:34.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.008" endtime="20201029 18:18:34.297"></status>
</kw>
<msg timestamp="20201029 18:18:34.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022314792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022370319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.007" endtime="20201029 18:18:34.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022314792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022370319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.301" endtime="20201029 18:18:34.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.310" endtime="20201029 18:18:34.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.004" endtime="20201029 18:18:34.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.002" endtime="20201029 18:18:34.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:34.317" level="INFO">${RESULT} = [{'diff': 5.552699999999966e-05}, {'diff': 5.5249999999999744e-05}, {'diff': 5.5263999999999314e-05}, {'diff': 5.557000000000131e-05}, {'diff': 5.491699999999808e-05}, {'diff': 5.538899999999944e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:34.313" endtime="20201029 18:18:34.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:34.321" level="INFO">${ACCURACY} = {'diff': [5.552699999999966e-05, 5.5249999999999744e-05, 5.5263999999999314e-05, 5.557000000000131e-05, 5.491699999999808e-05, 5.538899999999944e-05, 5.508400000000038e-05, 5.526400000000278e-05, 5.53...</msg>
<status status="PASS" starttime="20201029 18:18:34.318" endtime="20201029 18:18:34.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.326" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 18:18:34.325" endtime="20201029 18:18:34.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.328" level="INFO">VALUE: [5.552699999999966e-05, 5.5249999999999744e-05, 5.5263999999999314e-05, 5.557000000000131e-05, 5.491699999999808e-05, 5.538899999999944e-05, 5.508400000000038e-05, 5.526400000000278e-05, 5.53610000000003e-05, 5.520900000000051e-05, 5.522300000000008e-05, 5.559799999999698e-05, 5.4901999999999035e-05, 5.5305999999998023e-05, 5.511199999999952e-05, 5.554099999999923e-05, 5.529100000000245e-05, 5.508300000000091e-05, 5.540299999999901e-05, 5.5415999999999105e-05, 5.488899999999894e-05, 5.494499999999722e-05, 5.5471999999997385e-05, 5.511100000000005e-05, 5.558299999999794e-05, 5.558300000000141e-05, 5.513899999999919e-05, 5.5458000000001284e-05, 5.5499999999999994e-05, 5.558300000000141e-05, 5.538899999999944e-05, 5.537499999999987e-05, 5.518100000000137e-05, 5.5013999999999064e-05, 5.5236000000000174e-05, 5.5486000000000424e-05, 5.522300000000008e-05, 5.512499999999962e-05, 5.527699999999941e-05, 5.4749999999999244e-05, 5.515300000000223e-05, 5.482000000000056e-05, 5.531899999999812e-05, 5.487499999999937e-05, 5.508299999999744e-05, 5.555500000000227e-05, 5.50549999999983e-05, 5.505500000000177e-05, 5.537499999999987e-05, 5.5222000000000604e-05]</msg>
<status status="PASS" starttime="20201029 18:18:34.327" endtime="20201029 18:18:34.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.322" endtime="20201029 18:18:34.330"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:34.333" endtime="20201029 18:18:34.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.332" endtime="20201029 18:18:34.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.331" endtime="20201029 18:18:34.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.969" endtime="20201029 18:18:34.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.969" endtime="20201029 18:18:34.354"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.364" endtime="20201029 18:18:34.381"></status>
</kw>
<msg timestamp="20201029 18:18:34.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.362" endtime="20201029 18:18:34.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.383" endtime="20201029 18:18:34.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.385" endtime="20201029 18:18:34.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.359" endtime="20201029 18:18:34.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.357" endtime="20201029 18:18:34.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.395" endtime="20201029 18:18:34.681"></status>
</kw>
<msg timestamp="20201029 18:18:34.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023510681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023566528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.393" endtime="20201029 18:18:34.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023510681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023566528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.686" endtime="20201029 18:18:34.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.694" endtime="20201029 18:18:34.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.390" endtime="20201029 18:18:34.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.389" endtime="20201029 18:18:34.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:34.701" level="INFO">${RESULT} = [{'diff': 5.584700000000123e-05}, {'diff': 5.6235999999997704e-05}, {'diff': 5.5763999999999814e-05}, {'diff': 5.6514000000000564e-05}, {'diff': 5.590299999999951e-05}, {'diff': 5.630499999999955e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:34.698" endtime="20201029 18:18:34.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:34.705" level="INFO">${ACCURACY} = {'diff': [5.584700000000123e-05, 5.6235999999997704e-05, 5.5763999999999814e-05, 5.6514000000000564e-05, 5.590299999999951e-05, 5.630499999999955e-05, 5.584699999999776e-05, 5.6207999999998565e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:18:34.702" endtime="20201029 18:18:34.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.710" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 18:18:34.709" endtime="20201029 18:18:34.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.713" level="INFO">VALUE: [5.584700000000123e-05, 5.6235999999997704e-05, 5.5763999999999814e-05, 5.6514000000000564e-05, 5.590299999999951e-05, 5.630499999999955e-05, 5.584699999999776e-05, 5.6207999999998565e-05, 5.5777999999999384e-05, 5.6193999999998995e-05, 5.5791999999998954e-05, 5.6277999999999884e-05, 5.66809999999994e-05, 5.6527999999996664e-05, 5.579200000000242e-05, 5.658300000000241e-05, 5.658399999999841e-05, 5.6471999999998385e-05, 5.606999999999834e-05, 5.658400000000188e-05, 5.6277999999999884e-05, 5.6500000000000994e-05, 5.577699999999991e-05, 5.587500000000037e-05, 5.5777999999999384e-05, 5.633299999999869e-05, 5.6180000000002894e-05, 5.6388000000000965e-05, 5.6291999999999454e-05, 5.638900000000044e-05, 5.6471999999998385e-05, 5.6221999999998135e-05, 5.6277999999999884e-05, 5.631900000000259e-05, 5.65549999999998e-05, 5.5791999999998954e-05, 5.612500000000062e-05, 5.5971999999997885e-05, 5.587500000000037e-05, 5.643100000000262e-05, 5.6014000000000064e-05, 5.595899999999779e-05, 5.6722000000002104e-05, 5.6250000000000744e-05, 5.5777999999999384e-05, 5.63610000000013e-05, 5.576400000000328e-05, 5.605600000000224e-05, 5.595900000000126e-05, 5.6138000000000715e-05]</msg>
<status status="PASS" starttime="20201029 18:18:34.711" endtime="20201029 18:18:34.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.706" endtime="20201029 18:18:34.715"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:34.719" endtime="20201029 18:18:34.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.717" endtime="20201029 18:18:34.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.716" endtime="20201029 18:18:34.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.355" endtime="20201029 18:18:34.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.355" endtime="20201029 18:18:34.740"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.749" endtime="20201029 18:18:34.765"></status>
</kw>
<msg timestamp="20201029 18:18:34.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.747" endtime="20201029 18:18:34.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.767" endtime="20201029 18:18:34.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.770" endtime="20201029 18:18:34.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.745" endtime="20201029 18:18:34.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.742" endtime="20201029 18:18:34.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.779" endtime="20201029 18:18:35.064"></status>
</kw>
<msg timestamp="20201029 18:18:35.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022628667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.777" endtime="20201029 18:18:35.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022628667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.069" endtime="20201029 18:18:35.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.077" endtime="20201029 18:18:35.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.775" endtime="20201029 18:18:35.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.773" endtime="20201029 18:18:35.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:35.084" level="INFO">${RESULT} = [{'diff': 5.6971999999998885e-05}, {'diff': 5.677700000000091e-05}, {'diff': 5.761099999999908e-05}, {'diff': 5.727700000000141e-05}, {'diff': 5.7000000000001494e-05}, {'diff': 5.6972000000002354e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:35.081" endtime="20201029 18:18:35.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:35.089" level="INFO">${ACCURACY} = {'diff': [5.6971999999998885e-05, 5.677700000000091e-05, 5.761099999999908e-05, 5.727700000000141e-05, 5.7000000000001494e-05, 5.6972000000002354e-05, 5.741700000000058e-05, 5.680500000000005e-05, 5.7...</msg>
<status status="PASS" starttime="20201029 18:18:35.085" endtime="20201029 18:18:35.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.094" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 18:18:35.093" endtime="20201029 18:18:35.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.096" level="INFO">VALUE: [5.6971999999998885e-05, 5.677700000000091e-05, 5.761099999999908e-05, 5.727700000000141e-05, 5.7000000000001494e-05, 5.6972000000002354e-05, 5.741700000000058e-05, 5.680500000000005e-05, 5.7485999999998955e-05, 5.683299999999919e-05, 5.7014000000001064e-05, 5.6943999999999745e-05, 5.713900000000119e-05, 5.683300000000266e-05, 5.6958000000002784e-05, 5.713900000000119e-05, 5.7235999999998705e-05, 5.6985999999998455e-05, 5.691700000000008e-05, 5.7042000000000204e-05, 5.6930000000000175e-05, 5.744499999999972e-05, 5.695899999999879e-05, 5.7319999999999593e-05, 5.686099999999833e-05, 5.73619999999983e-05, 5.734699999999926e-05, 5.6902000000001035e-05, 5.7193999999999995e-05, 5.7444000000000245e-05, 5.6971999999998885e-05, 5.761099999999908e-05, 5.7180000000000425e-05, 5.73749999999984e-05, 5.7500000000001994e-05, 5.734699999999926e-05, 5.68610000000018e-05, 5.6972000000002354e-05, 5.709699999999901e-05, 5.6930000000000175e-05, 5.733299999999969e-05, 5.713900000000119e-05, 5.7235999999998705e-05, 5.6957999999999315e-05, 5.707000000000281e-05, 5.7528000000001134e-05, 5.7555999999996804e-05, 5.6805999999999524e-05, 5.684799999999823e-05, 5.7527999999997664e-05]</msg>
<status status="PASS" starttime="20201029 18:18:35.095" endtime="20201029 18:18:35.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.090" endtime="20201029 18:18:35.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:35.102" endtime="20201029 18:18:35.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.100" endtime="20201029 18:18:35.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.099" endtime="20201029 18:18:35.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.741" endtime="20201029 18:18:35.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.740" endtime="20201029 18:18:35.123"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.132" endtime="20201029 18:18:35.149"></status>
</kw>
<msg timestamp="20201029 18:18:35.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.130" endtime="20201029 18:18:35.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.151" endtime="20201029 18:18:35.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.153" endtime="20201029 18:18:35.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.127" endtime="20201029 18:18:35.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.125" endtime="20201029 18:18:35.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.163" endtime="20201029 18:18:35.450"></status>
</kw>
<msg timestamp="20201029 18:18:35.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022258125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.161" endtime="20201029 18:18:35.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022258125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.454" endtime="20201029 18:18:35.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.463" endtime="20201029 18:18:35.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.158" endtime="20201029 18:18:35.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.156" endtime="20201029 18:18:35.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:35.470" level="INFO">${RESULT} = [{'diff': 5.836099999999983e-05}, {'diff': 5.8584000000000414e-05}, {'diff': 5.84870000000029e-05}, {'diff': 5.834700000000026e-05}, {'diff': 5.83749999999994e-05}, {'diff': 5.8165999999998386e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:35.466" endtime="20201029 18:18:35.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:35.474" level="INFO">${ACCURACY} = {'diff': [5.836099999999983e-05, 5.8584000000000414e-05, 5.84870000000029e-05, 5.834700000000026e-05, 5.83749999999994e-05, 5.8165999999998386e-05, 5.7901999999998566e-05, 5.8637999999999746e-05, 5.82...</msg>
<status status="PASS" starttime="20201029 18:18:35.471" endtime="20201029 18:18:35.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.479" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 18:18:35.478" endtime="20201029 18:18:35.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.481" level="INFO">VALUE: [5.836099999999983e-05, 5.8584000000000414e-05, 5.84870000000029e-05, 5.834700000000026e-05, 5.83749999999994e-05, 5.8165999999998386e-05, 5.7901999999998566e-05, 5.8637999999999746e-05, 5.8208000000000565e-05, 5.8070000000000344e-05, 5.804099999999826e-05, 5.8249999999999275e-05, 5.834700000000026e-05, 5.7999999999999025e-05, 5.8292000000001454e-05, 5.840299999999854e-05, 5.8000000000002494e-05, 5.840299999999854e-05, 5.816700000000133e-05, 5.808300000000044e-05, 5.8499999999999525e-05, 5.8042000000001204e-05, 5.791699999999761e-05, 5.8235999999999705e-05, 5.854099999999876e-05, 5.836099999999983e-05, 5.7915999999998136e-05, 5.8584000000000414e-05, 5.8083999999999913e-05, 5.8042000000001204e-05, 5.801299999999912e-05, 5.8485999999999955e-05, 5.851299999999962e-05, 5.8637999999999746e-05, 5.781900000000062e-05, 5.804100000000173e-05, 5.831899999999765e-05, 5.834700000000026e-05, 5.7985999999999455e-05, 5.838899999999897e-05, 5.813900000000219e-05, 5.788900000000194e-05, 5.815299999999829e-05, 5.8042000000001204e-05, 5.861100000000008e-05, 5.788900000000194e-05, 5.809700000000001e-05, 5.794500000000022e-05, 5.8222000000000135e-05, 5.8305999999997554e-05]</msg>
<status status="PASS" starttime="20201029 18:18:35.480" endtime="20201029 18:18:35.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.475" endtime="20201029 18:18:35.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:35.487" endtime="20201029 18:18:35.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.485" endtime="20201029 18:18:35.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.484" endtime="20201029 18:18:35.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.123" endtime="20201029 18:18:35.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.123" endtime="20201029 18:18:35.508"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.518" endtime="20201029 18:18:35.539"></status>
</kw>
<msg timestamp="20201029 18:18:35.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.516" endtime="20201029 18:18:35.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.540" endtime="20201029 18:18:35.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.543" endtime="20201029 18:18:35.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.513" endtime="20201029 18:18:35.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.511" endtime="20201029 18:18:35.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.552" endtime="20201029 18:18:35.837"></status>
</kw>
<msg timestamp="20201029 18:18:35.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027260917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027319972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.551" endtime="20201029 18:18:35.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027260917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027319972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.842" endtime="20201029 18:18:35.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.850" endtime="20201029 18:18:35.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.548" endtime="20201029 18:18:35.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.546" endtime="20201029 18:18:35.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:35.857" level="INFO">${RESULT} = [{'diff': 5.90550000000023e-05}, {'diff': 5.8972000000000885e-05}, {'diff': 5.9542000000002704e-05}, {'diff': 5.913899999999972e-05}, {'diff': 5.919500000000147e-05}, {'diff': 5.9583999999997944e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:35.854" endtime="20201029 18:18:35.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:35.862" level="INFO">${ACCURACY} = {'diff': [5.90550000000023e-05, 5.8972000000000885e-05, 5.9542000000002704e-05, 5.913899999999972e-05, 5.919500000000147e-05, 5.9583999999997944e-05, 5.9306000000002024e-05, 5.922300000000061e-05, 5.8...</msg>
<status status="PASS" starttime="20201029 18:18:35.858" endtime="20201029 18:18:35.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.866" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 18:18:35.865" endtime="20201029 18:18:35.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.869" level="INFO">VALUE: [5.90550000000023e-05, 5.8972000000000885e-05, 5.9542000000002704e-05, 5.913899999999972e-05, 5.919500000000147e-05, 5.9583999999997944e-05, 5.9306000000002024e-05, 5.922300000000061e-05, 5.888899999999947e-05, 5.93750000000004e-05, 5.9555999999998804e-05, 5.9193999999998526e-05, 5.933299999999822e-05, 5.8958000000001315e-05, 5.95689999999989e-05, 5.954099999999976e-05, 5.88749999999999e-05, 5.9291999999998984e-05, 5.961099999999761e-05, 5.8999999999996555e-05, 5.9000000000000025e-05, 5.938899999999997e-05, 5.8792000000001954e-05, 5.919500000000147e-05, 5.9486000000000955e-05, 5.9570000000001844e-05, 5.888899999999947e-05, 5.884700000000076e-05, 5.9569999999998374e-05, 5.9013999999999595e-05, 5.897300000000036e-05, 5.9541999999999234e-05, 5.9556000000002274e-05, 5.9348000000000734e-05, 5.9236000000000705e-05, 5.88619999999998e-05, 5.922300000000061e-05, 5.911100000000058e-05, 5.9013999999999595e-05, 5.954099999999976e-05, 5.8972000000000885e-05, 5.9277999999999414e-05, 5.880499999999858e-05, 5.9707999999998596e-05, 5.934700000000126e-05, 5.9429999999999206e-05, 5.8930000000002175e-05, 5.944499999999825e-05, 5.888899999999947e-05, 5.9014000000003064e-05]</msg>
<status status="PASS" starttime="20201029 18:18:35.867" endtime="20201029 18:18:35.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.863" endtime="20201029 18:18:35.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:35.875" endtime="20201029 18:18:35.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.873" endtime="20201029 18:18:35.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.872" endtime="20201029 18:18:35.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.509" endtime="20201029 18:18:35.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.508" endtime="20201029 18:18:35.896"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.905" endtime="20201029 18:18:35.922"></status>
</kw>
<msg timestamp="20201029 18:18:35.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.903" endtime="20201029 18:18:35.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.924" endtime="20201029 18:18:35.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.927" endtime="20201029 18:18:35.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.901" endtime="20201029 18:18:35.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.898" endtime="20201029 18:18:35.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.936" endtime="20201029 18:18:36.222"></status>
</kw>
<msg timestamp="20201029 18:18:36.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022481736, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:35.934" endtime="20201029 18:18:36.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022481736, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:36.226" endtime="20201029 18:18:36.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.235" endtime="20201029 18:18:36.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.932" endtime="20201029 18:18:36.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.930" endtime="20201029 18:18:36.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:36.241" level="INFO">${RESULT} = [{'diff': 6.0235999999998235e-05}, {'diff': 6.040300000000054e-05}, {'diff': 6.020900000000204e-05}, {'diff': 6.0250000000001275e-05}, {'diff': 6.0291999999999984e-05}, {'diff': 6.054100000000076e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:36.238" endtime="20201029 18:18:36.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:36.247" level="INFO">${ACCURACY} = {'diff': [6.0235999999998235e-05, 6.040300000000054e-05, 6.020900000000204e-05, 6.0250000000001275e-05, 6.0291999999999984e-05, 6.054100000000076e-05, 5.984700000000176e-05, 6.011100000000158e-05, 6.0...</msg>
<status status="PASS" starttime="20201029 18:18:36.242" endtime="20201029 18:18:36.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.251" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 18:18:36.250" endtime="20201029 18:18:36.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.254" level="INFO">VALUE: [6.0235999999998235e-05, 6.040300000000054e-05, 6.020900000000204e-05, 6.0250000000001275e-05, 6.0291999999999984e-05, 6.054100000000076e-05, 5.984700000000176e-05, 6.011100000000158e-05, 6.047300000000186e-05, 5.980499999999958e-05, 6.03750000000014e-05, 6.0402000000001066e-05, 6.043099999999968e-05, 6.013900000000072e-05, 6.031899999999965e-05, 6.031899999999965e-05, 6.0472000000002385e-05, 6.0278000000000415e-05, 6.0236000000001705e-05, 6.0236000000001705e-05, 5.9764000000000345e-05, 6.0722000000002635e-05, 5.9736000000001205e-05, 6.038900000000097e-05, 6.016699999999986e-05, 6.0306000000003024e-05, 6.0319999999999124e-05, 5.981899999999915e-05, 6.06949999999995e-05, 6.03750000000014e-05, 6.019500000000247e-05, 5.9820000000002094e-05, 6.0569999999999374e-05, 6.040300000000054e-05, 5.9888000000000996e-05, 6.004100000000026e-05, 6.05689999999999e-05, 5.980499999999958e-05, 6.012500000000115e-05, 6.0208000000002565e-05, 6.012500000000115e-05, 6.0430000000000206e-05, 6.0250000000001275e-05, 5.9943999999999276e-05, 6.0443999999999776e-05, 6.043099999999968e-05, 6.058299999999947e-05, 5.9972000000001885e-05, 6.0264000000000845e-05, 5.993099999999918e-05]</msg>
<status status="PASS" starttime="20201029 18:18:36.252" endtime="20201029 18:18:36.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.248" endtime="20201029 18:18:36.255"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:36.259" endtime="20201029 18:18:36.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.258" endtime="20201029 18:18:36.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.256" endtime="20201029 18:18:36.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.897" endtime="20201029 18:18:36.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.896" endtime="20201029 18:18:36.280"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.289" endtime="20201029 18:18:36.305"></status>
</kw>
<msg timestamp="20201029 18:18:36.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.288" endtime="20201029 18:18:36.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.307" endtime="20201029 18:18:36.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.310" endtime="20201029 18:18:36.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.285" endtime="20201029 18:18:36.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.283" endtime="20201029 18:18:36.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.319" endtime="20201029 18:18:36.607"></status>
</kw>
<msg timestamp="20201029 18:18:36.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022327222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022388708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.318" endtime="20201029 18:18:36.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022327222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022388708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.612" endtime="20201029 18:18:36.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.620" endtime="20201029 18:18:36.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.315" endtime="20201029 18:18:36.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.313" endtime="20201029 18:18:36.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:36.627" level="INFO">${RESULT} = [{'diff': 6.148599999999949e-05}, {'diff': 6.152800000000166e-05}, {'diff': 6.0819999999999624e-05}, {'diff': 6.0792000000000485e-05}, {'diff': 6.151399999999863e-05}, {'diff': 6.159700000000004e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:36.624" endtime="20201029 18:18:36.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:36.631" level="INFO">${ACCURACY} = {'diff': [6.148599999999949e-05, 6.152800000000166e-05, 6.0819999999999624e-05, 6.0792000000000485e-05, 6.151399999999863e-05, 6.159700000000004e-05, 6.138900000000197e-05, 6.104200000000073e-05, 6.09...</msg>
<status status="PASS" starttime="20201029 18:18:36.628" endtime="20201029 18:18:36.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.636" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 18:18:36.635" endtime="20201029 18:18:36.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.639" level="INFO">VALUE: [6.148599999999949e-05, 6.152800000000166e-05, 6.0819999999999624e-05, 6.0792000000000485e-05, 6.151399999999863e-05, 6.159700000000004e-05, 6.138900000000197e-05, 6.104200000000073e-05, 6.091700000000061e-05, 6.086100000000233e-05, 6.140200000000207e-05, 6.101299999999865e-05, 6.106999999999987e-05, 6.080500000000058e-05, 6.148699999999896e-05, 6.088900000000147e-05, 6.118000000000096e-05, 6.122200000000314e-05, 6.119400000000053e-05, 6.169400000000103e-05, 6.080500000000058e-05, 6.079099999999754e-05, 6.145800000000035e-05, 6.134699999999979e-05, 6.087499999999843e-05, 6.1027999999997695e-05, 6.090300000000104e-05, 6.118000000000096e-05, 6.115299999999782e-05, 6.093100000000018e-05, 6.091700000000061e-05, 6.15140000000021e-05, 6.15699999999969e-05, 6.111099999999911e-05, 6.152800000000166e-05, 6.122199999999967e-05, 6.166600000000189e-05, 6.0778000000000915e-05, 6.0930000000000706e-05, 6.1013999999998125e-05, 6.162499999999918e-05, 6.15690000000009e-05, 6.105500000000083e-05, 6.081900000000015e-05, 6.0902000000001566e-05, 6.134699999999979e-05, 6.0971999999999416e-05, 6.087499999999843e-05, 6.148599999999949e-05, 6.108299999999997e-05]</msg>
<status status="PASS" starttime="20201029 18:18:36.637" endtime="20201029 18:18:36.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.632" endtime="20201029 18:18:36.640"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:36.644" endtime="20201029 18:18:36.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.642" endtime="20201029 18:18:36.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.641" endtime="20201029 18:18:36.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.281" endtime="20201029 18:18:36.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.281" endtime="20201029 18:18:36.665"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.674" endtime="20201029 18:18:36.692"></status>
</kw>
<msg timestamp="20201029 18:18:36.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.672" endtime="20201029 18:18:36.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.693" endtime="20201029 18:18:36.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.696" endtime="20201029 18:18:36.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.669" endtime="20201029 18:18:36.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.667" endtime="20201029 18:18:36.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.705" endtime="20201029 18:18:36.991"></status>
</kw>
<msg timestamp="20201029 18:18:36.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023336556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023399042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.704" endtime="20201029 18:18:36.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023336556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023399042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.996" endtime="20201029 18:18:37.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.005" endtime="20201029 18:18:37.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.701" endtime="20201029 18:18:37.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.699" endtime="20201029 18:18:37.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:37.011" level="INFO">${RESULT} = [{'diff': 6.248599999999702e-05}, {'diff': 6.25279999999992e-05}, {'diff': 6.198599999999999e-05}, {'diff': 6.212499999999968e-05}, {'diff': 6.226399999999938e-05}, {'diff': 6.25699999999979e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:37.008" endtime="20201029 18:18:37.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:37.016" level="INFO">${ACCURACY} = {'diff': [6.248599999999702e-05, 6.25279999999992e-05, 6.198599999999999e-05, 6.212499999999968e-05, 6.226399999999938e-05, 6.25699999999979e-05, 6.23889999999995e-05, 6.2195000000001e-05, 6.199999999...</msg>
<status status="PASS" starttime="20201029 18:18:37.013" endtime="20201029 18:18:37.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.021" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 18:18:37.020" endtime="20201029 18:18:37.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.023" level="INFO">VALUE: [6.248599999999702e-05, 6.25279999999992e-05, 6.198599999999999e-05, 6.212499999999968e-05, 6.226399999999938e-05, 6.25699999999979e-05, 6.23889999999995e-05, 6.2195000000001e-05, 6.199999999999956e-05, 6.212499999999968e-05, 6.198599999999999e-05, 6.194500000000075e-05, 6.213899999999925e-05, 6.254199999999877e-05, 6.247300000000039e-05, 6.215299999999882e-05, 6.234700000000079e-05, 6.201399999999913e-05, 6.197200000000042e-05, 6.168000000000146e-05, 6.255500000000233e-05, 6.236100000000036e-05, 6.179099999999854e-05, 6.227799999999895e-05, 6.266599999999942e-05, 6.195800000000085e-05, 6.258400000000094e-05, 6.223600000000024e-05, 6.226399999999938e-05, 6.19439999999978e-05, 6.219400000000153e-05, 6.229199999999852e-05, 6.197200000000042e-05, 6.179199999999802e-05, 6.230600000000155e-05, 6.208400000000044e-05, 6.18340000000002e-05, 6.272300000000064e-05, 6.273600000000074e-05, 6.17499999999993e-05, 6.258400000000094e-05, 6.248700000000343e-05, 6.232000000000112e-05, 6.24439999999983e-05, 6.259700000000104e-05, 6.231899999999818e-05, 6.17629999999994e-05, 6.241699999999864e-05, 6.199999999999956e-05, 6.208300000000097e-05]</msg>
<status status="PASS" starttime="20201029 18:18:37.022" endtime="20201029 18:18:37.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.017" endtime="20201029 18:18:37.025"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:37.029" endtime="20201029 18:18:37.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.028" endtime="20201029 18:18:37.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.026" endtime="20201029 18:18:37.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.666" endtime="20201029 18:18:37.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.665" endtime="20201029 18:18:37.050"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.059" endtime="20201029 18:18:37.076"></status>
</kw>
<msg timestamp="20201029 18:18:37.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.058" endtime="20201029 18:18:37.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.078" endtime="20201029 18:18:37.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.080" endtime="20201029 18:18:37.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.055" endtime="20201029 18:18:37.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.053" endtime="20201029 18:18:37.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.090" endtime="20201029 18:18:37.376"></status>
</kw>
<msg timestamp="20201029 18:18:37.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022172944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022236667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.088" endtime="20201029 18:18:37.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022172944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022236667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.380" endtime="20201029 18:18:37.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.389" endtime="20201029 18:18:37.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.085" endtime="20201029 18:18:37.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.084" endtime="20201029 18:18:37.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:37.395" level="INFO">${RESULT} = [{'diff': 6.372300000000164e-05}, {'diff': 6.279099999999954e-05}, {'diff': 6.331899999999918e-05}, {'diff': 6.345799999999888e-05}, {'diff': 6.318099999999896e-05}, {'diff': 6.366699999999989e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:37.392" endtime="20201029 18:18:37.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:37.401" level="INFO">${ACCURACY} = {'diff': [6.372300000000164e-05, 6.279099999999954e-05, 6.331899999999918e-05, 6.345799999999888e-05, 6.318099999999896e-05, 6.366699999999989e-05, 6.30560000000023e-05, 6.297200000000142e-05, 6.28610...</msg>
<status status="PASS" starttime="20201029 18:18:37.396" endtime="20201029 18:18:37.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.405" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 18:18:37.404" endtime="20201029 18:18:37.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.408" level="INFO">VALUE: [6.372300000000164e-05, 6.279099999999954e-05, 6.331899999999918e-05, 6.345799999999888e-05, 6.318099999999896e-05, 6.366699999999989e-05, 6.30560000000023e-05, 6.297200000000142e-05, 6.286100000000086e-05, 6.358399999999848e-05, 6.295899999999785e-05, 6.304099999999979e-05, 6.343099999999921e-05, 6.342999999999974e-05, 6.347300000000139e-05, 6.359699999999857e-05, 6.340300000000007e-05, 6.338899999999703e-05, 6.365200000000085e-05, 6.341600000000017e-05, 6.304099999999979e-05, 6.291599999999967e-05, 6.352700000000072e-05, 6.342999999999974e-05, 6.304099999999979e-05, 6.334700000000179e-05, 6.298600000000099e-05, 6.279199999999902e-05, 6.318099999999896e-05, 6.336099999999789e-05, 6.318099999999896e-05, 6.313900000000025e-05, 6.35560000000028e-05, 6.287500000000043e-05, 6.301400000000013e-05, 6.305599999999884e-05, 6.355599999999934e-05, 6.358400000000194e-05, 6.300000000000056e-05, 6.290299999999957e-05, 6.291699999999914e-05, 6.361200000000108e-05, 6.29439999999988e-05, 6.354100000000029e-05, 6.309699999999807e-05, 6.34439999999993e-05, 6.341600000000017e-05, 6.284700000000129e-05, 6.336100000000136e-05, 6.359699999999857e-05]</msg>
<status status="PASS" starttime="20201029 18:18:37.406" endtime="20201029 18:18:37.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.402" endtime="20201029 18:18:37.409"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:37.413" endtime="20201029 18:18:37.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.412" endtime="20201029 18:18:37.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.410" endtime="20201029 18:18:37.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.051" endtime="20201029 18:18:37.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.051" endtime="20201029 18:18:37.434"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.443" endtime="20201029 18:18:37.460"></status>
</kw>
<msg timestamp="20201029 18:18:37.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.441" endtime="20201029 18:18:37.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.462" endtime="20201029 18:18:37.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.464" endtime="20201029 18:18:37.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.439" endtime="20201029 18:18:37.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.437" endtime="20201029 18:18:37.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.474" endtime="20201029 18:18:37.762"></status>
</kw>
<msg timestamp="20201029 18:18:37.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022163042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022227375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.472" endtime="20201029 18:18:37.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022163042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022227375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.766" endtime="20201029 18:18:37.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.775" endtime="20201029 18:18:37.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.469" endtime="20201029 18:18:37.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.468" endtime="20201029 18:18:37.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:37.782" level="INFO">${RESULT} = [{'diff': 6.433299999999975e-05}, {'diff': 6.380599999999959e-05}, {'diff': 6.380599999999959e-05}, {'diff': 6.380500000000011e-05}, {'diff': 6.384700000000229e-05}, {'diff': 6.465199999999838e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:37.778" endtime="20201029 18:18:37.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:37.786" level="INFO">${ACCURACY} = {'diff': [6.433299999999975e-05, 6.380599999999959e-05, 6.380599999999959e-05, 6.380500000000011e-05, 6.384700000000229e-05, 6.465199999999838e-05, 6.4276999999998e-05, 6.462499999999871e-05, 6.461099...</msg>
<status status="PASS" starttime="20201029 18:18:37.783" endtime="20201029 18:18:37.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.790" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 18:18:37.789" endtime="20201029 18:18:37.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.793" level="INFO">VALUE: [6.433299999999975e-05, 6.380599999999959e-05, 6.380599999999959e-05, 6.380500000000011e-05, 6.384700000000229e-05, 6.465199999999838e-05, 6.4276999999998e-05, 6.462499999999871e-05, 6.461099999999914e-05, 6.469400000000056e-05, 6.412500000000168e-05, 6.440300000000107e-05, 6.433299999999975e-05, 6.441700000000064e-05, 6.466700000000089e-05, 6.449999999999859e-05, 6.395799999999938e-05, 6.4583e-05, 6.436099999999889e-05, 6.443100000000021e-05, 6.408399999999898e-05, 6.416700000000039e-05, 6.45280000000012e-05, 6.43479999999988e-05, 6.400000000000156e-05, 6.408400000000244e-05, 6.411100000000211e-05, 6.405599999999984e-05, 6.447299999999892e-05, 6.418000000000049e-05, 6.44440000000003e-05, 6.386100000000186e-05, 6.448600000000249e-05, 6.417999999999702e-05, 6.393000000000024e-05, 6.401399999999766e-05, 6.474999999999884e-05, 6.436100000000236e-05, 6.405500000000036e-05, 6.400000000000156e-05, 6.377800000000045e-05, 6.383299999999925e-05, 6.449999999999859e-05, 6.397199999999895e-05, 6.386100000000186e-05, 6.455600000000034e-05, 6.455500000000086e-05, 6.448599999999902e-05, 6.474999999999884e-05, 6.405599999999984e-05]</msg>
<status status="PASS" starttime="20201029 18:18:37.792" endtime="20201029 18:18:37.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.787" endtime="20201029 18:18:37.794"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:37.798" endtime="20201029 18:18:37.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.797" endtime="20201029 18:18:37.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.795" endtime="20201029 18:18:37.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.435" endtime="20201029 18:18:37.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.434" endtime="20201029 18:18:37.819"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.828" endtime="20201029 18:18:37.847"></status>
</kw>
<msg timestamp="20201029 18:18:37.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.826" endtime="20201029 18:18:37.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.848" endtime="20201029 18:18:37.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.851" endtime="20201029 18:18:37.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.824" endtime="20201029 18:18:37.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.822" endtime="20201029 18:18:37.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.860" endtime="20201029 18:18:38.145"></status>
</kw>
<msg timestamp="20201029 18:18:38.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023459778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023524986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.859" endtime="20201029 18:18:38.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023459778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023524986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:38.150" endtime="20201029 18:18:38.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.158" endtime="20201029 18:18:38.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.856" endtime="20201029 18:18:38.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.854" endtime="20201029 18:18:38.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:38.165" level="INFO">${RESULT} = [{'diff': 6.520800000000063e-05}, {'diff': 6.505600000000084e-05}, {'diff': 6.529199999999805e-05}, {'diff': 6.504200000000127e-05}, {'diff': 6.48479999999993e-05}, {'diff': 6.530600000000109e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:38.162" endtime="20201029 18:18:38.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:38.170" level="INFO">${ACCURACY} = {'diff': [6.520800000000063e-05, 6.505600000000084e-05, 6.529199999999805e-05, 6.504200000000127e-05, 6.48479999999993e-05, 6.530600000000109e-05, 6.486199999999887e-05, 6.497299999999942e-05, 6.50129...</msg>
<status status="PASS" starttime="20201029 18:18:38.166" endtime="20201029 18:18:38.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.174" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 18:18:38.173" endtime="20201029 18:18:38.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.177" level="INFO">VALUE: [6.520800000000063e-05, 6.505600000000084e-05, 6.529199999999805e-05, 6.504200000000127e-05, 6.48479999999993e-05, 6.530600000000109e-05, 6.486199999999887e-05, 6.497299999999942e-05, 6.501299999999918e-05, 6.480500000000111e-05, 6.490300000000157e-05, 6.49159999999982e-05, 6.480500000000111e-05, 6.532000000000066e-05, 6.52220000000002e-05, 6.502799999999823e-05, 6.47639999999984e-05, 6.512499999999921e-05, 6.480600000000059e-05, 6.483300000000025e-05, 6.505599999999737e-05, 6.483399999999973e-05, 6.530600000000109e-05, 6.504200000000127e-05, 6.482000000000016e-05, 6.487499999999896e-05, 6.505600000000084e-05, 6.54029999999986e-05, 6.482000000000016e-05, 6.509799999999955e-05, 6.541699999999817e-05, 6.547200000000045e-05, 6.50280000000017e-05, 6.479100000000154e-05, 6.545799999999741e-05, 6.476400000000188e-05, 6.492999999999777e-05, 6.502799999999823e-05, 6.566700000000189e-05, 6.495800000000038e-05, 6.511099999999964e-05, 6.483300000000025e-05, 6.486099999999939e-05, 6.509700000000007e-05, 6.49029999999981e-05, 6.477800000000145e-05, 6.529199999999805e-05, 6.52220000000002e-05, 6.530600000000109e-05, 6.504200000000127e-05]</msg>
<status status="PASS" starttime="20201029 18:18:38.175" endtime="20201029 18:18:38.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.170" endtime="20201029 18:18:38.183"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:38.187" endtime="20201029 18:18:38.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.185" endtime="20201029 18:18:38.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.184" endtime="20201029 18:18:38.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.820" endtime="20201029 18:18:38.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.819" endtime="20201029 18:18:38.208"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.217" endtime="20201029 18:18:38.235"></status>
</kw>
<msg timestamp="20201029 18:18:38.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.215" endtime="20201029 18:18:38.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.237" endtime="20201029 18:18:38.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.239" endtime="20201029 18:18:38.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.213" endtime="20201029 18:18:38.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.210" endtime="20201029 18:18:38.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.249" endtime="20201029 18:18:38.534"></status>
</kw>
<msg timestamp="20201029 18:18:38.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022419306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022485167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:38.247" endtime="20201029 18:18:38.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022419306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022485167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:38.539" endtime="20201029 18:18:38.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.547" endtime="20201029 18:18:38.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.244" endtime="20201029 18:18:38.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.243" endtime="20201029 18:18:38.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:38.555" level="INFO">${RESULT} = [{'diff': 6.586100000000039e-05}, {'diff': 6.613899999999978e-05}, {'diff': 6.609700000000107e-05}, {'diff': 6.619499999999806e-05}, {'diff': 6.622199999999773e-05}, {'diff': 6.588899999999953e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:38.551" endtime="20201029 18:18:38.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:38.560" level="INFO">${ACCURACY} = {'diff': [6.586100000000039e-05, 6.613899999999978e-05, 6.609700000000107e-05, 6.619499999999806e-05, 6.622199999999773e-05, 6.588899999999953e-05, 6.59029999999991e-05, 6.59029999999991e-05, 6.579200...</msg>
<status status="PASS" starttime="20201029 18:18:38.556" endtime="20201029 18:18:38.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.565" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 18:18:38.564" endtime="20201029 18:18:38.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.568" level="INFO">VALUE: [6.586100000000039e-05, 6.613899999999978e-05, 6.609700000000107e-05, 6.619499999999806e-05, 6.622199999999773e-05, 6.588899999999953e-05, 6.59029999999991e-05, 6.59029999999991e-05, 6.579200000000202e-05, 6.662500000000071e-05, 6.613899999999978e-05, 6.633399999999776e-05, 6.652799999999973e-05, 6.638900000000003e-05, 6.641699999999917e-05, 6.604200000000227e-05, 6.602799999999923e-05, 6.605599999999837e-05, 6.597199999999748e-05, 6.60830000000015e-05, 6.597200000000095e-05, 6.650000000000059e-05, 6.609700000000107e-05, 6.640200000000013e-05, 6.584699999999735e-05, 6.627799999999948e-05, 6.581900000000168e-05, 6.625000000000034e-05, 6.615299999999935e-05, 6.654200000000277e-05, 6.600000000000009e-05, 6.615299999999935e-05, 6.654200000000277e-05, 6.633300000000175e-05, 6.579199999999855e-05, 6.620899999999763e-05, 6.620899999999763e-05, 6.582000000000116e-05, 6.65969999999981e-05, 6.615199999999988e-05, 6.595900000000085e-05, 6.60419999999988e-05, 6.584699999999735e-05, 6.598599999999705e-05, 6.605499999999889e-05, 6.656899999999896e-05, 6.602799999999923e-05, 6.588899999999953e-05, 6.619400000000206e-05, 6.652799999999973e-05]</msg>
<status status="PASS" starttime="20201029 18:18:38.567" endtime="20201029 18:18:38.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.561" endtime="20201029 18:18:38.570"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:38.573" endtime="20201029 18:18:38.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.572" endtime="20201029 18:18:38.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.571" endtime="20201029 18:18:38.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.209" endtime="20201029 18:18:38.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.208" endtime="20201029 18:18:38.594"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.603" endtime="20201029 18:18:38.621"></status>
</kw>
<msg timestamp="20201029 18:18:38.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.602" endtime="20201029 18:18:38.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.623" endtime="20201029 18:18:38.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.625" endtime="20201029 18:18:38.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.599" endtime="20201029 18:18:38.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.597" endtime="20201029 18:18:38.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.635" endtime="20201029 18:18:38.922"></status>
</kw>
<msg timestamp="20201029 18:18:38.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022304222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022371944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:38.633" endtime="20201029 18:18:38.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022304222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022371944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:38.926" endtime="20201029 18:18:38.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.935" endtime="20201029 18:18:38.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.631" endtime="20201029 18:18:38.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.629" endtime="20201029 18:18:38.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:38.942" level="INFO">${RESULT} = [{'diff': 6.77220000000027e-05}, {'diff': 6.745799999999941e-05}, {'diff': 6.741700000000017e-05}, {'diff': 6.737499999999799e-05}, {'diff': 6.68619999999974e-05}, {'diff': 6.70419999999998e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:18:38.939" endtime="20201029 18:18:38.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:38.946" level="INFO">${ACCURACY} = {'diff': [6.77220000000027e-05, 6.745799999999941e-05, 6.741700000000017e-05, 6.737499999999799e-05, 6.68619999999974e-05, 6.70419999999998e-05, 6.743099999999974e-05, 6.734799999999833e-05, 6.7430999...</msg>
<status status="PASS" starttime="20201029 18:18:38.943" endtime="20201029 18:18:38.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.951" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 18:18:38.950" endtime="20201029 18:18:38.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.953" level="INFO">VALUE: [6.77220000000027e-05, 6.745799999999941e-05, 6.741700000000017e-05, 6.737499999999799e-05, 6.68619999999974e-05, 6.70419999999998e-05, 6.743099999999974e-05, 6.734799999999833e-05, 6.743099999999974e-05, 6.70419999999998e-05, 6.688900000000053e-05, 6.683300000000225e-05, 6.762499999999824e-05, 6.690200000000063e-05, 6.706899999999946e-05, 6.686099999999792e-05, 6.706899999999946e-05, 6.731899999999971e-05, 6.695799999999891e-05, 6.737499999999799e-05, 6.769499999999956e-05, 6.705599999999937e-05, 6.686100000000139e-05, 6.729200000000005e-05, 6.681899999999921e-05, 6.70839999999985e-05, 6.737499999999799e-05, 6.701400000000066e-05, 6.698599999999805e-05, 6.730599999999962e-05, 6.744499999999931e-05, 6.762499999999824e-05, 6.745799999999941e-05, 6.75969999999991e-05, 6.705599999999937e-05, 6.738800000000156e-05, 6.687500000000096e-05, 6.754100000000082e-05, 6.687499999999749e-05, 6.758299999999953e-05, 6.695799999999891e-05, 6.704100000000032e-05, 6.725000000000134e-05, 6.725000000000134e-05, 6.70969999999986e-05, 6.720799999999916e-05, 6.675000000000084e-05, 6.752800000000073e-05, 6.711099999999817e-05, 6.711100000000164e-05]</msg>
<status status="PASS" starttime="20201029 18:18:38.952" endtime="20201029 18:18:38.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.947" endtime="20201029 18:18:38.955"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:38.959" endtime="20201029 18:18:38.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.957" endtime="20201029 18:18:38.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.956" endtime="20201029 18:18:38.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.595" endtime="20201029 18:18:38.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.594" endtime="20201029 18:18:38.980"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.989" endtime="20201029 18:18:39.009"></status>
</kw>
<msg timestamp="20201029 18:18:39.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.987" endtime="20201029 18:18:39.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.010" endtime="20201029 18:18:39.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.013" endtime="20201029 18:18:39.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.984" endtime="20201029 18:18:39.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.982" endtime="20201029 18:18:39.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.022" endtime="20201029 18:18:39.308"></status>
</kw>
<msg timestamp="20201029 18:18:39.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025579, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025647, 'source': 'DUT_IC', 'event': 'FALLING',...</msg>
<status status="PASS" starttime="20201029 18:18:39.021" endtime="20201029 18:18:39.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025579, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025647, 'source': 'DUT_IC', 'event': 'FALLING',...</msg>
<status status="PASS" starttime="20201029 18:18:39.313" endtime="20201029 18:18:39.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.321" endtime="20201029 18:18:39.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.018" endtime="20201029 18:18:39.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.016" endtime="20201029 18:18:39.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:39.328" level="INFO">${RESULT} = [{'diff': 6.799999999999862e-05}, {'diff': 6.801399999999819e-05}, {'diff': 6.818000000000102e-05}, {'diff': 6.798600000000252e-05}, {'diff': 6.781900000000021e-05}, {'diff': 6.830500000000114e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:39.325" endtime="20201029 18:18:39.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:39.332" level="INFO">${ACCURACY} = {'diff': [6.799999999999862e-05, 6.801399999999819e-05, 6.818000000000102e-05, 6.798600000000252e-05, 6.781900000000021e-05, 6.830500000000114e-05, 6.777800000000098e-05, 6.858300000000053e-05, 6.8263...</msg>
<status status="PASS" starttime="20201029 18:18:39.329" endtime="20201029 18:18:39.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.337" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 18:18:39.336" endtime="20201029 18:18:39.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.340" level="INFO">VALUE: [6.799999999999862e-05, 6.801399999999819e-05, 6.818000000000102e-05, 6.798600000000252e-05, 6.781900000000021e-05, 6.830500000000114e-05, 6.777800000000098e-05, 6.858300000000053e-05, 6.826399999999844e-05, 6.798599999999905e-05, 6.837500000000246e-05, 6.799999999999862e-05, 6.858300000000053e-05, 6.786099999999892e-05, 6.801399999999819e-05, 6.840299999999813e-05, 6.818100000000049e-05, 6.818100000000049e-05, 6.793100000000024e-05, 6.823699999999877e-05, 6.80420000000008e-05, 6.843099999999727e-05, 6.815299999999788e-05, 6.79030000000011e-05, 6.868100000000099e-05, 6.783299999999978e-05, 6.830500000000114e-05, 6.77770000000015e-05, 6.79299999999973e-05, 6.795799999999991e-05, 6.80969999999996e-05, 6.794399999999687e-05, 6.827799999999801e-05, 6.783299999999978e-05, 6.848599999999955e-05, 6.831999999999672e-05, 6.85970000000001e-05, 6.85420000000013e-05, 6.852800000000173e-05, 6.808300000000003e-05, 6.816700000000092e-05, 6.798600000000252e-05, 6.793100000000024e-05, 6.845899999999988e-05, 6.787500000000196e-05, 6.779200000000055e-05, 6.854099999999835e-05, 6.8277000000002e-05, 6.783300000000325e-05, 6.806900000000046e-05]</msg>
<status status="PASS" starttime="20201029 18:18:39.338" endtime="20201029 18:18:39.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.333" endtime="20201029 18:18:39.342"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:39.346" endtime="20201029 18:18:39.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.344" endtime="20201029 18:18:39.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.343" endtime="20201029 18:18:39.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.980" endtime="20201029 18:18:39.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.980" endtime="20201029 18:18:39.366"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.376" endtime="20201029 18:18:39.392"></status>
</kw>
<msg timestamp="20201029 18:18:39.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.374" endtime="20201029 18:18:39.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.394" endtime="20201029 18:18:39.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.396" endtime="20201029 18:18:39.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.371" endtime="20201029 18:18:39.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.369" endtime="20201029 18:18:39.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.406" endtime="20201029 18:18:39.692"></status>
</kw>
<msg timestamp="20201029 18:18:39.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022365306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02243425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:39.404" endtime="20201029 18:18:39.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022365306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02243425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:39.697" endtime="20201029 18:18:39.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.705" endtime="20201029 18:18:39.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.402" endtime="20201029 18:18:39.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.400" endtime="20201029 18:18:39.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:39.712" level="INFO">${RESULT} = [{'diff': 6.894399999999787e-05}, {'diff': 6.905600000000137e-05}, {'diff': 6.933399999999729e-05}, {'diff': 6.930600000000162e-05}, {'diff': 6.950000000000012e-05}, {'diff': 6.933300000000128e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:39.709" endtime="20201029 18:18:39.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:39.717" level="INFO">${ACCURACY} = {'diff': [6.894399999999787e-05, 6.905600000000137e-05, 6.933399999999729e-05, 6.930600000000162e-05, 6.950000000000012e-05, 6.933300000000128e-05, 6.916599999999898e-05, 6.895799999999744e-05, 6.9472...</msg>
<status status="PASS" starttime="20201029 18:18:39.713" endtime="20201029 18:18:39.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.722" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 18:18:39.721" endtime="20201029 18:18:39.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.725" level="INFO">VALUE: [6.894399999999787e-05, 6.905600000000137e-05, 6.933399999999729e-05, 6.930600000000162e-05, 6.950000000000012e-05, 6.933300000000128e-05, 6.916599999999898e-05, 6.895799999999744e-05, 6.947200000000098e-05, 6.887499999999949e-05, 6.927800000000248e-05, 6.937499999999999e-05, 6.937499999999999e-05, 6.951399999999969e-05, 6.947199999999751e-05, 6.954199999999883e-05, 6.883300000000078e-05, 6.90420000000018e-05, 6.975000000000037e-05, 6.876399999999894e-05, 6.936100000000042e-05, 6.912499999999974e-05, 6.937499999999999e-05, 6.947199999999751e-05, 6.887499999999949e-05, 6.943100000000174e-05, 6.947200000000098e-05, 6.888900000000253e-05, 6.891599999999873e-05, 6.901400000000266e-05, 6.894399999999787e-05, 6.908299999999756e-05, 6.888899999999906e-05, 6.927799999999901e-05, 6.947199999999751e-05, 6.95970000000011e-05, 6.929199999999858e-05, 6.883300000000078e-05, 6.954199999999883e-05, 6.924999999999987e-05, 6.938899999999956e-05, 6.959699999999763e-05, 6.947200000000098e-05, 6.926399999999944e-05, 6.929200000000205e-05, 6.934800000000033e-05, 6.938899999999956e-05, 6.970900000000113e-05, 6.925000000000334e-05, 6.918100000000149e-05]</msg>
<status status="PASS" starttime="20201029 18:18:39.723" endtime="20201029 18:18:39.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.718" endtime="20201029 18:18:39.726"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:39.730" endtime="20201029 18:18:39.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.728" endtime="20201029 18:18:39.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.727" endtime="20201029 18:18:39.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.368" endtime="20201029 18:18:39.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.367" endtime="20201029 18:18:39.751"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.760" endtime="20201029 18:18:39.777"></status>
</kw>
<msg timestamp="20201029 18:18:39.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.758" endtime="20201029 18:18:39.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.779" endtime="20201029 18:18:39.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.782" endtime="20201029 18:18:39.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.755" endtime="20201029 18:18:39.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.753" endtime="20201029 18:18:39.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.791" endtime="20201029 18:18:40.079"></status>
</kw>
<msg timestamp="20201029 18:18:40.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022210958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.789" endtime="20201029 18:18:40.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022210958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.083" endtime="20201029 18:18:40.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.092" endtime="20201029 18:18:40.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.787" endtime="20201029 18:18:40.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.785" endtime="20201029 18:18:40.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:40.098" level="INFO">${RESULT} = [{'diff': 6.99299999999993e-05}, {'diff': 7.037500000000099e-05}, {'diff': 6.988900000000006e-05}, {'diff': 7.040300000000013e-05}, {'diff': 7.058399999999854e-05}, {'diff': 7.044499999999884e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:40.095" endtime="20201029 18:18:40.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:40.103" level="INFO">${ACCURACY} = {'diff': [6.99299999999993e-05, 7.037500000000099e-05, 6.988900000000006e-05, 7.040300000000013e-05, 7.058399999999854e-05, 7.044499999999884e-05, 7.008299999999856e-05, 6.983399999999779e-05, 7.02780...</msg>
<status status="PASS" starttime="20201029 18:18:40.099" endtime="20201029 18:18:40.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.107" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 18:18:40.106" endtime="20201029 18:18:40.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.110" level="INFO">VALUE: [6.99299999999993e-05, 7.037500000000099e-05, 6.988900000000006e-05, 7.040300000000013e-05, 7.058399999999854e-05, 7.044499999999884e-05, 7.008299999999856e-05, 6.983399999999779e-05, 7.027800000000001e-05, 7.07230000000017e-05, 7.022200000000173e-05, 6.993000000000277e-05, 7.004099999999985e-05, 7.008299999999856e-05, 7.04299999999998e-05, 6.981899999999874e-05, 6.995900000000138e-05, 7.037499999999752e-05, 7.029199999999958e-05, 7.02360000000013e-05, 6.994499999999834e-05, 7.015299999999988e-05, 7.012500000000074e-05, 6.981999999999822e-05, 6.988900000000006e-05, 7.043099999999927e-05, 7.048600000000155e-05, 7.011100000000117e-05, 7.045800000000241e-05, 7.013900000000031e-05, 7.056999999999897e-05, 7.015300000000335e-05, 6.997300000000095e-05, 7.017999999999955e-05, 7.061100000000167e-05, 7.020799999999869e-05, 6.991599999999973e-05, 6.991599999999973e-05, 7.066599999999701e-05, 7.009699999999813e-05, 7.019400000000259e-05, 7.005499999999942e-05, 7.047299999999798e-05, 7.020799999999869e-05, 6.995900000000138e-05, 6.983299999999831e-05, 6.984699999999788e-05, 6.982000000000169e-05, 7.027800000000001e-05, 7.047200000000198e-05]</msg>
<status status="PASS" starttime="20201029 18:18:40.108" endtime="20201029 18:18:40.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.104" endtime="20201029 18:18:40.111"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:40.115" endtime="20201029 18:18:40.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.114" endtime="20201029 18:18:40.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.112" endtime="20201029 18:18:40.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.752" endtime="20201029 18:18:40.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.751" endtime="20201029 18:18:40.136"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.145" endtime="20201029 18:18:40.163"></status>
</kw>
<msg timestamp="20201029 18:18:40.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.143" endtime="20201029 18:18:40.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.165" endtime="20201029 18:18:40.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.168" endtime="20201029 18:18:40.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.141" endtime="20201029 18:18:40.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.139" endtime="20201029 18:18:40.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.177" endtime="20201029 18:18:40.463"></status>
</kw>
<msg timestamp="20201029 18:18:40.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023354472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023426083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.176" endtime="20201029 18:18:40.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023354472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023426083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.467" endtime="20201029 18:18:40.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.476" endtime="20201029 18:18:40.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.173" endtime="20201029 18:18:40.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.171" endtime="20201029 18:18:40.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:40.483" level="INFO">${RESULT} = [{'diff': 7.16109999999992e-05}, {'diff': 7.163899999999834e-05}, {'diff': 7.148599999999908e-05}, {'diff': 7.138900000000156e-05}, {'diff': 7.131999999999972e-05}, {'diff': 7.156999999999997e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:40.479" endtime="20201029 18:18:40.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:40.487" level="INFO">${ACCURACY} = {'diff': [7.16109999999992e-05, 7.163899999999834e-05, 7.148599999999908e-05, 7.138900000000156e-05, 7.131999999999972e-05, 7.156999999999997e-05, 7.106999999999947e-05, 7.140299999999766e-05, 7.15560...</msg>
<status status="PASS" starttime="20201029 18:18:40.484" endtime="20201029 18:18:40.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.491" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 18:18:40.490" endtime="20201029 18:18:40.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.494" level="INFO">VALUE: [7.16109999999992e-05, 7.163899999999834e-05, 7.148599999999908e-05, 7.138900000000156e-05, 7.131999999999972e-05, 7.156999999999997e-05, 7.106999999999947e-05, 7.140299999999766e-05, 7.15560000000004e-05, 7.122299999999873e-05, 7.113900000000131e-05, 7.079200000000008e-05, 7.094399999999987e-05, 7.144400000000037e-05, 7.104100000000085e-05, 7.127700000000153e-05, 7.097199999999901e-05, 7.159699999999963e-05, 7.104200000000033e-05, 7.144400000000037e-05, 7.095799999999944e-05, 7.179200000000108e-05, 7.14170000000007e-05, 7.138899999999809e-05, 7.116700000000045e-05, 7.149999999999865e-05, 7.127800000000101e-05, 7.102800000000076e-05, 7.118100000000002e-05, 7.082000000000269e-05, 7.136099999999895e-05, 7.119499999999959e-05, 7.115300000000088e-05, 7.097199999999901e-05, 7.090300000000063e-05, 7.118000000000055e-05, 7.12629999999985e-05, 7.101399999999772e-05, 7.119500000000306e-05, 7.088900000000106e-05, 7.086100000000192e-05, 7.176400000000194e-05, 7.09170000000002e-05, 7.166700000000095e-05, 7.16109999999992e-05, 7.101400000000119e-05, 7.147200000000298e-05, 7.130599999999668e-05, 7.140299999999766e-05, 7.162499999999877e-05]</msg>
<status status="PASS" starttime="20201029 18:18:40.493" endtime="20201029 18:18:40.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.488" endtime="20201029 18:18:40.496"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:40.500" endtime="20201029 18:18:40.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.499" endtime="20201029 18:18:40.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.497" endtime="20201029 18:18:40.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.137" endtime="20201029 18:18:40.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.136" endtime="20201029 18:18:40.521"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.530" endtime="20201029 18:18:40.548"></status>
</kw>
<msg timestamp="20201029 18:18:40.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.528" endtime="20201029 18:18:40.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.549" endtime="20201029 18:18:40.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.552" endtime="20201029 18:18:40.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.526" endtime="20201029 18:18:40.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.524" endtime="20201029 18:18:40.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.561" endtime="20201029 18:18:40.847"></status>
</kw>
<msg timestamp="20201029 18:18:40.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022457792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022530486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.560" endtime="20201029 18:18:40.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022457792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022530486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.851" endtime="20201029 18:18:40.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.860" endtime="20201029 18:18:40.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.557" endtime="20201029 18:18:40.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.555" endtime="20201029 18:18:40.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:40.867" level="INFO">${RESULT} = [{'diff': 7.269399999999815e-05}, {'diff': 7.243100000000127e-05}, {'diff': 7.269500000000109e-05}, {'diff': 7.226399999999897e-05}, {'diff': 7.245900000000041e-05}, {'diff': 7.252799999999879e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:40.864" endtime="20201029 18:18:40.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:40.872" level="INFO">${ACCURACY} = {'diff': [7.269399999999815e-05, 7.243100000000127e-05, 7.269500000000109e-05, 7.226399999999897e-05, 7.245900000000041e-05, 7.252799999999879e-05, 7.258400000000054e-05, 7.197200000000001e-05, 7.2070...</msg>
<status status="PASS" starttime="20201029 18:18:40.868" endtime="20201029 18:18:40.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.877" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 18:18:40.876" endtime="20201029 18:18:40.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.880" level="INFO">VALUE: [7.269399999999815e-05, 7.243100000000127e-05, 7.269500000000109e-05, 7.226399999999897e-05, 7.245900000000041e-05, 7.252799999999879e-05, 7.258400000000054e-05, 7.197200000000001e-05, 7.207000000000047e-05, 7.215300000000188e-05, 7.222299999999973e-05, 7.261200000000315e-05, 7.170800000000019e-05, 7.266600000000248e-05, 7.223599999999983e-05, 7.220800000000069e-05, 7.265199999999944e-05, 7.212499999999927e-05, 7.179099999999813e-05, 7.26110000000002e-05, 7.236099999999995e-05, 7.204200000000133e-05, 7.254199999999836e-05, 7.266699999999848e-05, 7.193100000000077e-05, 7.184699999999988e-05, 7.243100000000127e-05, 7.248600000000008e-05, 7.216699999999798e-05, 7.27499999999999e-05, 7.209799999999961e-05, 7.184799999999936e-05, 7.19300000000013e-05, 7.240300000000213e-05, 7.237499999999952e-05, 7.251299999999974e-05, 7.184699999999988e-05, 7.202700000000228e-05, 7.23049999999982e-05, 7.236099999999995e-05, 7.248600000000008e-05, 7.241699999999823e-05, 7.215300000000188e-05, 7.216699999999798e-05, 7.243100000000127e-05, 7.199999999999915e-05, 7.223599999999983e-05, 7.188899999999859e-05, 7.215299999999841e-05, 7.209700000000013e-05]</msg>
<status status="PASS" starttime="20201029 18:18:40.878" endtime="20201029 18:18:40.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.873" endtime="20201029 18:18:40.881"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:40.885" endtime="20201029 18:18:40.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.883" endtime="20201029 18:18:40.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.882" endtime="20201029 18:18:40.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.522" endtime="20201029 18:18:40.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.521" endtime="20201029 18:18:40.906"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.915" endtime="20201029 18:18:40.933"></status>
</kw>
<msg timestamp="20201029 18:18:40.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.914" endtime="20201029 18:18:40.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.935" endtime="20201029 18:18:40.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.937" endtime="20201029 18:18:40.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.911" endtime="20201029 18:18:40.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.909" endtime="20201029 18:18:40.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.947" endtime="20201029 18:18:41.233"></status>
</kw>
<msg timestamp="20201029 18:18:41.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022781736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02285475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:40.945" endtime="20201029 18:18:41.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022781736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02285475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:41.237" endtime="20201029 18:18:41.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.246" endtime="20201029 18:18:41.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.942" endtime="20201029 18:18:41.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.940" endtime="20201029 18:18:41.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:41.252" level="INFO">${RESULT} = [{'diff': 7.301399999999972e-05}, {'diff': 7.350000000000065e-05}, {'diff': 7.297200000000101e-05}, {'diff': 7.311099999999723e-05}, {'diff': 7.323599999999736e-05}, {'diff': 7.284700000000088e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:41.249" endtime="20201029 18:18:41.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:41.256" level="INFO">${ACCURACY} = {'diff': [7.301399999999972e-05, 7.350000000000065e-05, 7.297200000000101e-05, 7.311099999999723e-05, 7.323599999999736e-05, 7.284700000000088e-05, 7.337500000000052e-05, 7.305599999999843e-05, 7.3027...</msg>
<status status="PASS" starttime="20201029 18:18:41.253" endtime="20201029 18:18:41.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.261" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 18:18:41.260" endtime="20201029 18:18:41.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.263" level="INFO">VALUE: [7.301399999999972e-05, 7.350000000000065e-05, 7.297200000000101e-05, 7.311099999999723e-05, 7.323599999999736e-05, 7.284700000000088e-05, 7.337500000000052e-05, 7.305599999999843e-05, 7.302799999999929e-05, 7.295800000000144e-05, 7.336100000000095e-05, 7.292999999999883e-05, 7.336100000000095e-05, 7.315299999999941e-05, 7.32500000000004e-05, 7.288900000000306e-05, 7.297200000000101e-05, 7.349999999999718e-05, 7.370899999999819e-05, 7.326399999999997e-05, 7.320799999999822e-05, 7.362500000000077e-05, 7.281999999999775e-05, 7.338800000000062e-05, 7.362500000000077e-05, 7.277699999999956e-05, 7.327700000000006e-05, 7.29309999999983e-05, 7.322200000000126e-05, 7.337500000000052e-05, 7.352800000000326e-05, 7.305500000000242e-05, 7.316699999999898e-05, 7.300000000000015e-05, 7.283300000000131e-05, 7.348600000000108e-05, 7.298600000000058e-05, 7.301400000000319e-05, 7.287500000000002e-05, 7.290299999999916e-05, 7.35699999999985e-05, 7.343100000000227e-05, 7.357000000000197e-05, 7.287500000000002e-05, 7.331999999999825e-05, 7.330500000000267e-05, 7.287500000000002e-05, 7.369399999999915e-05, 7.331899999999877e-05, 7.348600000000108e-05]</msg>
<status status="PASS" starttime="20201029 18:18:41.262" endtime="20201029 18:18:41.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.257" endtime="20201029 18:18:41.264"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:41.268" endtime="20201029 18:18:41.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.267" endtime="20201029 18:18:41.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.265" endtime="20201029 18:18:41.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.907" endtime="20201029 18:18:41.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.906" endtime="20201029 18:18:41.289"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.298" endtime="20201029 18:18:41.316"></status>
</kw>
<msg timestamp="20201029 18:18:41.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.296" endtime="20201029 18:18:41.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.318" endtime="20201029 18:18:41.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.320" endtime="20201029 18:18:41.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.293" endtime="20201029 18:18:41.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.291" endtime="20201029 18:18:41.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.330" endtime="20201029 18:18:41.633"></status>
</kw>
<msg timestamp="20201029 18:18:41.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022849403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022923292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:41.328" endtime="20201029 18:18:41.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022849403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022923292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:41.643" endtime="20201029 18:18:41.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.655" endtime="20201029 18:18:41.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.325" endtime="20201029 18:18:41.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.324" endtime="20201029 18:18:41.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:41.661" level="INFO">${RESULT} = [{'diff': 7.388900000000059e-05}, {'diff': 7.387500000000102e-05}, {'diff': 7.459699999999916e-05}, {'diff': 7.392999999999983e-05}, {'diff': 7.400000000000115e-05}, {'diff': 7.431899999999977e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:41.658" endtime="20201029 18:18:41.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:41.665" level="INFO">${ACCURACY} = {'diff': [7.388900000000059e-05, 7.387500000000102e-05, 7.459699999999916e-05, 7.392999999999983e-05, 7.400000000000115e-05, 7.431899999999977e-05, 7.381999999999875e-05, 7.423600000000183e-05, 7.4041...</msg>
<status status="PASS" starttime="20201029 18:18:41.662" endtime="20201029 18:18:41.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.670" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 18:18:41.669" endtime="20201029 18:18:41.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.672" level="INFO">VALUE: [7.388900000000059e-05, 7.387500000000102e-05, 7.459699999999916e-05, 7.392999999999983e-05, 7.400000000000115e-05, 7.431899999999977e-05, 7.381999999999875e-05, 7.423600000000183e-05, 7.404199999999986e-05, 7.380599999999918e-05, 7.444499999999937e-05, 7.390300000000016e-05, 7.429200000000011e-05, 7.458400000000254e-05, 7.474999999999843e-05, 7.422199999999879e-05, 7.420899999999869e-05, 7.431999999999925e-05, 7.386100000000145e-05, 7.400000000000115e-05, 7.456900000000002e-05, 7.440199999999772e-05, 7.423599999999836e-05, 7.390300000000016e-05, 7.402800000000029e-05, 7.390300000000016e-05, 7.377800000000004e-05, 7.413900000000084e-05, 7.405599999999943e-05, 7.383399999999832e-05, 7.399999999999768e-05, 7.458399999999907e-05, 7.431999999999925e-05, 7.429200000000011e-05, 7.413900000000084e-05, 7.459799999999864e-05, 7.381999999999875e-05, 7.37370000000008e-05, 7.438900000000109e-05, 7.395800000000244e-05, 7.46110000000022e-05, 7.42500000000014e-05, 7.383399999999832e-05, 7.415200000000094e-05, 7.429100000000063e-05, 7.398600000000158e-05, 7.431999999999925e-05, 7.415300000000041e-05, 7.416699999999998e-05, 7.441700000000023e-05]</msg>
<status status="PASS" starttime="20201029 18:18:41.671" endtime="20201029 18:18:41.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.666" endtime="20201029 18:18:41.675"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:41.678" endtime="20201029 18:18:41.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.677" endtime="20201029 18:18:41.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.675" endtime="20201029 18:18:41.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.290" endtime="20201029 18:18:41.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.289" endtime="20201029 18:18:41.699"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.708" endtime="20201029 18:18:41.726"></status>
</kw>
<msg timestamp="20201029 18:18:41.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.706" endtime="20201029 18:18:41.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.727" endtime="20201029 18:18:41.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.730" endtime="20201029 18:18:41.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.704" endtime="20201029 18:18:41.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.701" endtime="20201029 18:18:41.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.739" endtime="20201029 18:18:42.025"></status>
</kw>
<msg timestamp="20201029 18:18:42.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:41.737" endtime="20201029 18:18:42.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.029" endtime="20201029 18:18:42.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.037" endtime="20201029 18:18:42.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.735" endtime="20201029 18:18:42.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.733" endtime="20201029 18:18:42.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:42.044" level="INFO">${RESULT} = [{'diff': 7.555499999999798e-05}, {'diff': 7.540300000000166e-05}, {'diff': 7.54310000000008e-05}, {'diff': 7.54310000000008e-05}, {'diff': 7.545800000000047e-05}, {'diff': 7.543099999999733e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:42.041" endtime="20201029 18:18:42.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:42.049" level="INFO">${ACCURACY} = {'diff': [7.555499999999798e-05, 7.540300000000166e-05, 7.54310000000008e-05, 7.54310000000008e-05, 7.545800000000047e-05, 7.543099999999733e-05, 7.502800000000129e-05, 7.545899999999994e-05, 7.531999...</msg>
<status status="PASS" starttime="20201029 18:18:42.045" endtime="20201029 18:18:42.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.053" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 18:18:42.052" endtime="20201029 18:18:42.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.056" level="INFO">VALUE: [7.555499999999798e-05, 7.540300000000166e-05, 7.54310000000008e-05, 7.54310000000008e-05, 7.545800000000047e-05, 7.543099999999733e-05, 7.502800000000129e-05, 7.545899999999994e-05, 7.531999999999678e-05, 7.551299999999928e-05, 7.498599999999911e-05, 7.497199999999954e-05, 7.488900000000159e-05, 7.51249999999988e-05, 7.551400000000222e-05, 7.483299999999984e-05, 7.484699999999941e-05, 7.520800000000022e-05, 7.51249999999988e-05, 7.487499999999855e-05, 7.531900000000077e-05, 7.530599999999721e-05, 7.566699999999801e-05, 7.494499999999987e-05, 7.484700000000288e-05, 7.534699999999991e-05, 7.545899999999994e-05, 7.484800000000236e-05, 7.543000000000133e-05, 7.56249999999993e-05, 7.497300000000248e-05, 7.498600000000258e-05, 7.470799999999972e-05, 7.554100000000188e-05, 7.561099999999973e-05, 7.533300000000034e-05, 7.50830000000001e-05, 7.520800000000022e-05, 7.519399999999718e-05, 7.515300000000141e-05, 7.498599999999911e-05, 7.501400000000172e-05, 7.4763999999998e-05, 7.527800000000154e-05, 7.520799999999675e-05, 7.513899999999837e-05, 7.518100000000055e-05, 7.563900000000234e-05, 7.552799999999832e-05, 7.511099999999923e-05]</msg>
<status status="PASS" starttime="20201029 18:18:42.055" endtime="20201029 18:18:42.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.050" endtime="20201029 18:18:42.057"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:42.061" endtime="20201029 18:18:42.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.059" endtime="20201029 18:18:42.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.058" endtime="20201029 18:18:42.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.700" endtime="20201029 18:18:42.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.699" endtime="20201029 18:18:42.082"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.090" endtime="20201029 18:18:42.107"></status>
</kw>
<msg timestamp="20201029 18:18:42.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.089" endtime="20201029 18:18:42.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.109" endtime="20201029 18:18:42.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.113" endtime="20201029 18:18:42.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.086" endtime="20201029 18:18:42.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.084" endtime="20201029 18:18:42.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.122" endtime="20201029 18:18:42.409"></status>
</kw>
<msg timestamp="20201029 18:18:42.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0218335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02190975, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:42.120" endtime="20201029 18:18:42.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0218335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02190975, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:42.413" endtime="20201029 18:18:42.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.421" endtime="20201029 18:18:42.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.118" endtime="20201029 18:18:42.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.116" endtime="20201029 18:18:42.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:42.428" level="INFO">${RESULT} = [{'diff': 7.624999999999993e-05}, {'diff': 7.666599999999954e-05}, {'diff': 7.623600000000036e-05}, {'diff': 7.609800000000014e-05}, {'diff': 7.638800000000015e-05}, {'diff': 7.599999999999968e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:42.425" endtime="20201029 18:18:42.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:42.432" level="INFO">${ACCURACY} = {'diff': [7.624999999999993e-05, 7.666599999999954e-05, 7.623600000000036e-05, 7.609800000000014e-05, 7.638800000000015e-05, 7.599999999999968e-05, 7.588899999999912e-05, 7.642999999999886e-05, 7.5999...</msg>
<status status="PASS" starttime="20201029 18:18:42.429" endtime="20201029 18:18:42.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.436" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 18:18:42.435" endtime="20201029 18:18:42.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.439" level="INFO">VALUE: [7.624999999999993e-05, 7.666599999999954e-05, 7.623600000000036e-05, 7.609800000000014e-05, 7.638800000000015e-05, 7.599999999999968e-05, 7.588899999999912e-05, 7.642999999999886e-05, 7.599999999999968e-05, 7.644500000000137e-05, 7.651399999999975e-05, 7.654199999999889e-05, 7.616699999999851e-05, 7.613899999999937e-05, 7.641699999999876e-05, 7.602799999999882e-05, 7.629199999999864e-05, 7.624999999999993e-05, 7.624999999999993e-05, 7.648600000000061e-05, 7.584700000000041e-05, 7.661100000000073e-05, 7.590199999999922e-05, 7.605599999999796e-05, 7.60969999999972e-05, 7.586099999999998e-05, 7.647200000000104e-05, 7.633299999999787e-05, 7.588899999999912e-05, 7.616600000000251e-05, 7.587499999999955e-05, 7.672300000000076e-05, 7.645800000000147e-05, 7.66250000000003e-05, 7.586099999999998e-05, 7.624999999999993e-05, 7.616600000000251e-05, 7.629200000000211e-05, 7.655599999999846e-05, 7.599999999999968e-05, 7.61249999999998e-05, 7.597300000000001e-05, 7.619500000000112e-05, 7.640199999999972e-05, 7.632000000000125e-05, 7.615199999999947e-05, 7.622199999999732e-05, 7.654099999999942e-05, 7.644399999999843e-05, 7.604100000000238e-05]</msg>
<status status="PASS" starttime="20201029 18:18:42.438" endtime="20201029 18:18:42.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.433" endtime="20201029 18:18:42.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:42.444" endtime="20201029 18:18:42.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.443" endtime="20201029 18:18:42.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.441" endtime="20201029 18:18:42.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.083" endtime="20201029 18:18:42.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.082" endtime="20201029 18:18:42.465"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.473" endtime="20201029 18:18:42.494"></status>
</kw>
<msg timestamp="20201029 18:18:42.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.472" endtime="20201029 18:18:42.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.496" endtime="20201029 18:18:42.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.498" endtime="20201029 18:18:42.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.469" endtime="20201029 18:18:42.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.467" endtime="20201029 18:18:42.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.507" endtime="20201029 18:18:42.793"></status>
</kw>
<msg timestamp="20201029 18:18:42.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025092208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025169542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.506" endtime="20201029 18:18:42.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025092208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025169542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.797" endtime="20201029 18:18:42.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.806" endtime="20201029 18:18:42.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.503" endtime="20201029 18:18:42.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.502" endtime="20201029 18:18:42.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:42.812" level="INFO">${RESULT} = [{'diff': 7.733399999999835e-05}, {'diff': 7.691700000000273e-05}, {'diff': 7.711099999999776e-05}, {'diff': 7.713900000000037e-05}, {'diff': 7.70830000000021e-05}, {'diff': 7.756899999999955e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:42.809" endtime="20201029 18:18:42.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:42.816" level="INFO">${ACCURACY} = {'diff': [7.733399999999835e-05, 7.691700000000273e-05, 7.711099999999776e-05, 7.713900000000037e-05, 7.70830000000021e-05, 7.756899999999955e-05, 7.725000000000093e-05, 7.701300000000078e-05, 7.71250...</msg>
<status status="PASS" starttime="20201029 18:18:42.813" endtime="20201029 18:18:42.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.821" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 18:18:42.820" endtime="20201029 18:18:42.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.823" level="INFO">VALUE: [7.733399999999835e-05, 7.691700000000273e-05, 7.711099999999776e-05, 7.713900000000037e-05, 7.70830000000021e-05, 7.756899999999955e-05, 7.725000000000093e-05, 7.701300000000078e-05, 7.71250000000008e-05, 7.729199999999964e-05, 7.688900000000012e-05, 7.755599999999946e-05, 7.686100000000098e-05, 7.754199999999989e-05, 7.741699999999976e-05, 7.738900000000062e-05, 7.694399999999893e-05, 7.741600000000029e-05, 7.723699999999736e-05, 7.729100000000017e-05, 7.751300000000128e-05, 7.702700000000035e-05, 7.716699999999951e-05, 7.684700000000141e-05, 7.729199999999964e-05, 7.712499999999733e-05, 7.702799999999982e-05, 7.74030000000002e-05, 7.697200000000154e-05, 7.680600000000218e-05, 7.765300000000044e-05, 7.681999999999828e-05, 7.723599999999789e-05, 7.680599999999871e-05, 7.750000000000118e-05, 7.755600000000293e-05, 7.75969999999987e-05, 7.680499999999923e-05, 7.759800000000164e-05, 7.698600000000111e-05, 7.734699999999844e-05, 7.683299999999837e-05, 7.683299999999837e-05, 7.734699999999844e-05, 7.716699999999951e-05, 7.755499999999999e-05, 7.74030000000002e-05, 7.74030000000002e-05, 7.749999999999771e-05, 7.69029999999997e-05]</msg>
<status status="PASS" starttime="20201029 18:18:42.822" endtime="20201029 18:18:42.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.817" endtime="20201029 18:18:42.825"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:42.829" endtime="20201029 18:18:42.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.828" endtime="20201029 18:18:42.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.826" endtime="20201029 18:18:42.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.466" endtime="20201029 18:18:42.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.465" endtime="20201029 18:18:42.850"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.859" endtime="20201029 18:18:42.877"></status>
</kw>
<msg timestamp="20201029 18:18:42.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.857" endtime="20201029 18:18:42.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.878" endtime="20201029 18:18:42.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.881" endtime="20201029 18:18:42.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.854" endtime="20201029 18:18:42.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.852" endtime="20201029 18:18:42.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.890" endtime="20201029 18:18:43.176"></status>
</kw>
<msg timestamp="20201029 18:18:43.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021737569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021816278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.888" endtime="20201029 18:18:43.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021737569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021816278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.181" endtime="20201029 18:18:43.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.189" endtime="20201029 18:18:43.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.886" endtime="20201029 18:18:43.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.884" endtime="20201029 18:18:43.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:43.196" level="INFO">${RESULT} = [{'diff': 7.870899999999972e-05}, {'diff': 7.787500000000155e-05}, {'diff': 7.8458e-05}, {'diff': 7.847199999999957e-05}, {'diff': 7.841600000000129e-05}, {'diff': 7.816700000000051e-05}, {'diff': 7.8...</msg>
<status status="PASS" starttime="20201029 18:18:43.192" endtime="20201029 18:18:43.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:43.201" level="INFO">${ACCURACY} = {'diff': [7.870899999999972e-05, 7.787500000000155e-05, 7.8458e-05, 7.847199999999957e-05, 7.841600000000129e-05, 7.816700000000051e-05, 7.861099999999926e-05, 7.820799999999975e-05, 7.815300000000094...</msg>
<status status="PASS" starttime="20201029 18:18:43.196" endtime="20201029 18:18:43.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.205" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 18:18:43.204" endtime="20201029 18:18:43.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.208" level="INFO">VALUE: [7.870899999999972e-05, 7.787500000000155e-05, 7.8458e-05, 7.847199999999957e-05, 7.841600000000129e-05, 7.816700000000051e-05, 7.861099999999926e-05, 7.820799999999975e-05, 7.815300000000094e-05, 7.856900000000056e-05, 7.852799999999785e-05, 7.843100000000033e-05, 7.852800000000132e-05, 7.857000000000003e-05, 7.851399999999828e-05, 7.80969999999992e-05, 7.812499999999833e-05, 7.82229999999988e-05, 7.836200000000196e-05, 7.851400000000175e-05, 7.790199999999775e-05, 7.783299999999937e-05, 7.80969999999992e-05, 7.818000000000061e-05, 7.86389999999984e-05, 7.855500000000099e-05, 7.82640000000015e-05, 7.798599999999864e-05, 7.794399999999993e-05, 7.858300000000012e-05, 7.830600000000021e-05, 7.84449999999999e-05, 7.806999999999953e-05, 7.826399999999803e-05, 7.788899999999765e-05, 7.82779999999976e-05, 7.809800000000214e-05, 7.85969999999997e-05, 7.804200000000039e-05, 7.791599999999732e-05, 7.858300000000012e-05, 7.8458e-05, 7.801400000000125e-05, 7.855500000000099e-05, 7.7764000000001e-05, 7.786099999999851e-05, 7.791700000000026e-05, 7.844400000000043e-05, 7.863900000000187e-05, 7.79030000000007e-05]</msg>
<status status="PASS" starttime="20201029 18:18:43.206" endtime="20201029 18:18:43.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.201" endtime="20201029 18:18:43.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:43.218" endtime="20201029 18:18:43.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.216" endtime="20201029 18:18:43.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.215" endtime="20201029 18:18:43.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.851" endtime="20201029 18:18:43.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.850" endtime="20201029 18:18:43.239"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.247" endtime="20201029 18:18:43.264"></status>
</kw>
<msg timestamp="20201029 18:18:43.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.246" endtime="20201029 18:18:43.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.266" endtime="20201029 18:18:43.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.269" endtime="20201029 18:18:43.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.243" endtime="20201029 18:18:43.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.241" endtime="20201029 18:18:43.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.278" endtime="20201029 18:18:43.564"></status>
</kw>
<msg timestamp="20201029 18:18:43.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.276" endtime="20201029 18:18:43.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.568" endtime="20201029 18:18:43.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.576" endtime="20201029 18:18:43.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.274" endtime="20201029 18:18:43.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.272" endtime="20201029 18:18:43.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:43.583" level="INFO">${RESULT} = [{'diff': 7.89450000000004e-05}, {'diff': 7.890299999999822e-05}, {'diff': 7.906900000000106e-05}, {'diff': 7.930600000000121e-05}, {'diff': 7.911099999999976e-05}, {'diff': 7.937499999999958e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:43.580" endtime="20201029 18:18:43.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:43.587" level="INFO">${ACCURACY} = {'diff': [7.89450000000004e-05, 7.890299999999822e-05, 7.906900000000106e-05, 7.930600000000121e-05, 7.911099999999976e-05, 7.937499999999958e-05, 7.884799999999942e-05, 7.952800000000232e-05, 7.91950...</msg>
<status status="PASS" starttime="20201029 18:18:43.584" endtime="20201029 18:18:43.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.592" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 18:18:43.591" endtime="20201029 18:18:43.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.594" level="INFO">VALUE: [7.89450000000004e-05, 7.890299999999822e-05, 7.906900000000106e-05, 7.930600000000121e-05, 7.911099999999976e-05, 7.937499999999958e-05, 7.884799999999942e-05, 7.952800000000232e-05, 7.919500000000065e-05, 7.929200000000164e-05, 7.931999999999731e-05, 7.918100000000108e-05, 7.89030000000017e-05, 7.952799999999885e-05, 7.954199999999842e-05, 7.969500000000115e-05, 7.930600000000121e-05, 7.918000000000161e-05, 7.951300000000328e-05, 7.912499999999933e-05, 7.938899999999915e-05, 7.923599999999989e-05, 7.948600000000014e-05, 7.923599999999989e-05, 7.933300000000088e-05, 7.898599999999964e-05, 7.89030000000017e-05, 7.927800000000207e-05, 7.906999999999706e-05, 7.94450000000009e-05, 7.888899999999865e-05, 7.882000000000028e-05, 7.949999999999971e-05, 7.88190000000008e-05, 7.897299999999954e-05, 7.876299999999906e-05, 7.887499999999908e-05, 7.940199999999925e-05, 7.920799999999728e-05, 7.887500000000255e-05, 7.938900000000262e-05, 7.879199999999767e-05, 7.94030000000022e-05, 7.96389999999994e-05, 7.912499999999933e-05, 7.937499999999958e-05, 7.966699999999854e-05, 7.951400000000275e-05, 7.87779999999981e-05, 7.930600000000121e-05]</msg>
<status status="PASS" starttime="20201029 18:18:43.593" endtime="20201029 18:18:43.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.588" endtime="20201029 18:18:43.596"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:43.599" endtime="20201029 18:18:43.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.598" endtime="20201029 18:18:43.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.596" endtime="20201029 18:18:43.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.239" endtime="20201029 18:18:43.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.239" endtime="20201029 18:18:43.620"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.629" endtime="20201029 18:18:43.648"></status>
</kw>
<msg timestamp="20201029 18:18:43.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.627" endtime="20201029 18:18:43.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.650" endtime="20201029 18:18:43.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.653" endtime="20201029 18:18:43.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.625" endtime="20201029 18:18:43.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.622" endtime="20201029 18:18:43.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.662" endtime="20201029 18:18:43.948"></status>
</kw>
<msg timestamp="20201029 18:18:43.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023234056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023314083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.660" endtime="20201029 18:18:43.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023234056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023314083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.952" endtime="20201029 18:18:43.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.961" endtime="20201029 18:18:43.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.658" endtime="20201029 18:18:43.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.656" endtime="20201029 18:18:43.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:43.968" level="INFO">${RESULT} = [{'diff': 8.002699999999988e-05}, {'diff': 8.040299999999972e-05}, {'diff': 8.0458999999998e-05}, {'diff': 7.981999999999781e-05}, {'diff': 8.032000000000178e-05}, {'diff': 7.988899999999965e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:43.964" endtime="20201029 18:18:43.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:43.972" level="INFO">${ACCURACY} = {'diff': [8.002699999999988e-05, 8.040299999999972e-05, 8.0458999999998e-05, 7.981999999999781e-05, 8.032000000000178e-05, 7.988899999999965e-05, 8.050000000000071e-05, 8.058300000000213e-05, 8.034700...</msg>
<status status="PASS" starttime="20201029 18:18:43.969" endtime="20201029 18:18:43.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.976" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 18:18:43.975" endtime="20201029 18:18:43.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.979" level="INFO">VALUE: [8.002699999999988e-05, 8.040299999999972e-05, 8.0458999999998e-05, 7.981999999999781e-05, 8.032000000000178e-05, 7.988899999999965e-05, 8.050000000000071e-05, 8.058300000000213e-05, 8.034700000000145e-05, 7.998600000000064e-05, 8.001399999999978e-05, 8.048599999999767e-05, 8.05970000000017e-05, 7.983300000000138e-05, 8.038900000000015e-05, 8.002800000000282e-05, 8.055499999999952e-05, 8.019399999999871e-05, 8.001399999999978e-05, 8.015299999999947e-05, 8.005600000000196e-05, 8.06390000000004e-05, 8.005599999999849e-05, 8.061100000000126e-05, 8.008300000000163e-05, 8.026400000000003e-05, 8.052700000000038e-05, 8.022200000000132e-05, 8.061100000000126e-05, 8.05130000000008e-05, 8.002799999999935e-05, 8.054099999999995e-05, 8.006999999999806e-05, 8.059699999999823e-05, 7.99719999999976e-05, 8.058300000000213e-05, 8.002799999999935e-05, 8.029199999999917e-05, 8.019399999999871e-05, 8.00970000000012e-05, 8.040299999999972e-05, 7.994499999999793e-05, 7.984699999999748e-05, 8.036100000000101e-05, 8.011100000000076e-05, 7.988900000000312e-05, 8.020900000000122e-05, 8.054199999999942e-05, 8.026300000000056e-05, 8.0152e-05]</msg>
<status status="PASS" starttime="20201029 18:18:43.977" endtime="20201029 18:18:43.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.972" endtime="20201029 18:18:43.981"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:43.985" endtime="20201029 18:18:44.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.983" endtime="20201029 18:18:44.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.982" endtime="20201029 18:18:44.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.621" endtime="20201029 18:18:44.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.620" endtime="20201029 18:18:44.005"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.014" endtime="20201029 18:18:44.033"></status>
</kw>
<msg timestamp="20201029 18:18:44.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.013" endtime="20201029 18:18:44.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.034" endtime="20201029 18:18:44.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.037" endtime="20201029 18:18:44.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.010" endtime="20201029 18:18:44.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.008" endtime="20201029 18:18:44.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.046" endtime="20201029 18:18:44.332"></status>
</kw>
<msg timestamp="20201029 18:18:44.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022262611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022343889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.044" endtime="20201029 18:18:44.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022262611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022343889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.336" endtime="20201029 18:18:44.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.344" endtime="20201029 18:18:44.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.042" endtime="20201029 18:18:44.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.040" endtime="20201029 18:18:44.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:44.351" level="INFO">${RESULT} = [{'diff': 8.127799999999713e-05}, {'diff': 8.15979999999987e-05}, {'diff': 8.10840000000021e-05}, {'diff': 8.156999999999956e-05}, {'diff': 8.118000000000014e-05}, {'diff': 8.11109999999983e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:18:44.348" endtime="20201029 18:18:44.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:44.356" level="INFO">${ACCURACY} = {'diff': [8.127799999999713e-05, 8.15979999999987e-05, 8.10840000000021e-05, 8.156999999999956e-05, 8.118000000000014e-05, 8.11109999999983e-05, 8.119399999999971e-05, 8.119399999999971e-05, 8.1166000...</msg>
<status status="PASS" starttime="20201029 18:18:44.352" endtime="20201029 18:18:44.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.361" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 18:18:44.360" endtime="20201029 18:18:44.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.363" level="INFO">VALUE: [8.127799999999713e-05, 8.15979999999987e-05, 8.10840000000021e-05, 8.156999999999956e-05, 8.118000000000014e-05, 8.11109999999983e-05, 8.119399999999971e-05, 8.119399999999971e-05, 8.116600000000057e-05, 8.12910000000007e-05, 8.11390000000009e-05, 8.131899999999984e-05, 8.120799999999928e-05, 8.084699999999848e-05, 8.081999999999881e-05, 8.11109999999983e-05, 8.090300000000022e-05, 8.130599999999974e-05, 8.134699999999898e-05, 8.080599999999924e-05, 8.083400000000185e-05, 8.152800000000085e-05, 8.123700000000136e-05, 8.119499999999918e-05, 8.098600000000164e-05, 8.083300000000238e-05, 8.090200000000075e-05, 8.140200000000125e-05, 8.111100000000177e-05, 8.115300000000047e-05, 8.130599999999974e-05, 8.154200000000042e-05, 8.083300000000238e-05, 8.1458000000003e-05, 8.098600000000164e-05, 8.16390000000014e-05, 8.131999999999931e-05, 8.144499999999943e-05, 8.09169999999998e-05, 8.109800000000167e-05, 8.122299999999832e-05, 8.10979999999982e-05, 8.158399999999913e-05, 8.138799999999821e-05, 8.15269999999979e-05, 8.112499999999787e-05, 8.144399999999996e-05, 8.14170000000003e-05, 8.104100000000045e-05, 8.084699999999848e-05]</msg>
<status status="PASS" starttime="20201029 18:18:44.362" endtime="20201029 18:18:44.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.357" endtime="20201029 18:18:44.364"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:44.368" endtime="20201029 18:18:44.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.367" endtime="20201029 18:18:44.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.365" endtime="20201029 18:18:44.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.006" endtime="20201029 18:18:44.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.006" endtime="20201029 18:18:44.389"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.398" endtime="20201029 18:18:44.416"></status>
</kw>
<msg timestamp="20201029 18:18:44.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.396" endtime="20201029 18:18:44.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.418" endtime="20201029 18:18:44.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.420" endtime="20201029 18:18:44.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.393" endtime="20201029 18:18:44.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.391" endtime="20201029 18:18:44.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.429" endtime="20201029 18:18:44.716"></status>
</kw>
<msg timestamp="20201029 18:18:44.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021804125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021886819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.428" endtime="20201029 18:18:44.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021804125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021886819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.720" endtime="20201029 18:18:44.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.729" endtime="20201029 18:18:44.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.425" endtime="20201029 18:18:44.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.423" endtime="20201029 18:18:44.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:44.735" level="INFO">${RESULT} = [{'diff': 8.269399999999774e-05}, {'diff': 8.240300000000172e-05}, {'diff': 8.220800000000028e-05}, {'diff': 8.215300000000147e-05}, {'diff': 8.184799999999895e-05}, {'diff': 8.224999999999899e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:44.732" endtime="20201029 18:18:44.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:44.740" level="INFO">${ACCURACY} = {'diff': [8.269399999999774e-05, 8.240300000000172e-05, 8.220800000000028e-05, 8.215300000000147e-05, 8.184799999999895e-05, 8.224999999999899e-05, 8.236199999999902e-05, 8.240300000000172e-05, 8.1943...</msg>
<status status="PASS" starttime="20201029 18:18:44.736" endtime="20201029 18:18:44.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.744" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 18:18:44.743" endtime="20201029 18:18:44.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.746" level="INFO">VALUE: [8.269399999999774e-05, 8.240300000000172e-05, 8.220800000000028e-05, 8.215300000000147e-05, 8.184799999999895e-05, 8.224999999999899e-05, 8.236199999999902e-05, 8.240300000000172e-05, 8.194399999999699e-05, 8.212499999999887e-05, 8.188800000000218e-05, 8.198599999999917e-05, 8.191599999999785e-05, 8.194400000000046e-05, 8.194399999999699e-05, 8.241599999999835e-05, 8.204200000000092e-05, 8.208300000000016e-05, 8.231900000000084e-05, 8.219400000000071e-05, 8.22780000000016e-05, 8.236099999999955e-05, 8.238899999999869e-05, 8.184799999999895e-05, 8.188899999999819e-05, 8.226399999999856e-05, 8.19170000000008e-05, 8.274999999999949e-05, 8.223700000000236e-05, 8.22910000000017e-05, 8.229099999999823e-05, 8.220800000000028e-05, 8.219399999999724e-05, 8.176399999999806e-05, 8.186099999999905e-05, 8.24720000000001e-05, 8.2152999999998e-05, 8.223599999999942e-05, 8.243100000000086e-05, 8.26109999999998e-05, 8.240299999999826e-05, 8.18329999999999e-05, 8.205599999999702e-05, 8.190299999999776e-05, 8.25979999999997e-05, 8.186200000000199e-05, 8.190300000000122e-05, 8.241600000000182e-05, 8.183399999999938e-05, 8.186099999999905e-05]</msg>
<status status="PASS" starttime="20201029 18:18:44.745" endtime="20201029 18:18:44.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.740" endtime="20201029 18:18:44.748"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:44.752" endtime="20201029 18:18:44.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.750" endtime="20201029 18:18:44.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.749" endtime="20201029 18:18:44.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.390" endtime="20201029 18:18:44.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.389" endtime="20201029 18:18:44.772"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.781" endtime="20201029 18:18:44.801"></status>
</kw>
<msg timestamp="20201029 18:18:44.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.779" endtime="20201029 18:18:44.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.802" endtime="20201029 18:18:44.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.805" endtime="20201029 18:18:44.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.777" endtime="20201029 18:18:44.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.775" endtime="20201029 18:18:44.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.814" endtime="20201029 18:18:45.100"></status>
</kw>
<msg timestamp="20201029 18:18:45.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023097806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023181, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:44.812" endtime="20201029 18:18:45.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023097806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023181, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:45.104" endtime="20201029 18:18:45.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.114" endtime="20201029 18:18:45.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.810" endtime="20201029 18:18:45.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.808" endtime="20201029 18:18:45.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:45.120" level="INFO">${RESULT} = [{'diff': 8.319400000000171e-05}, {'diff': 8.293100000000136e-05}, {'diff': 8.332000000000131e-05}, {'diff': 8.324999999999999e-05}, {'diff': 8.336100000000055e-05}, {'diff': 8.327799999999913e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:45.117" endtime="20201029 18:18:45.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:45.124" level="INFO">${ACCURACY} = {'diff': [8.319400000000171e-05, 8.293100000000136e-05, 8.332000000000131e-05, 8.324999999999999e-05, 8.336100000000055e-05, 8.327799999999913e-05, 8.276400000000253e-05, 8.317999999999867e-05, 8.3027...</msg>
<status status="PASS" starttime="20201029 18:18:45.121" endtime="20201029 18:18:45.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.129" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 18:18:45.128" endtime="20201029 18:18:45.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.131" level="INFO">VALUE: [8.319400000000171e-05, 8.293100000000136e-05, 8.332000000000131e-05, 8.324999999999999e-05, 8.336100000000055e-05, 8.327799999999913e-05, 8.276400000000253e-05, 8.317999999999867e-05, 8.302799999999888e-05, 8.305500000000202e-05, 8.286100000000005e-05, 8.294500000000093e-05, 8.34309999999984e-05, 8.3152999999999e-05, 8.308400000000063e-05, 8.308400000000063e-05, 8.284700000000048e-05, 8.338899999999969e-05, 8.290299999999876e-05, 8.324999999999999e-05, 8.358299999999819e-05, 8.298600000000017e-05, 8.323600000000042e-05, 8.337500000000012e-05, 8.319400000000171e-05, 8.284700000000048e-05, 8.28330000000009e-05, 8.29720000000006e-05, 8.347199999999763e-05, 8.326399999999956e-05, 8.354199999999895e-05, 8.322199999999738e-05, 8.34859999999972e-05, 8.312499999999987e-05, 8.344500000000143e-05, 8.337500000000012e-05, 8.348600000000067e-05, 8.35980000000007e-05, 8.347300000000057e-05, 8.354099999999948e-05, 8.302799999999888e-05, 8.31110000000003e-05, 8.331900000000184e-05, 8.33469999999975e-05, 8.295800000000103e-05, 8.300000000000321e-05, 8.348600000000067e-05, 8.336100000000055e-05, 8.344399999999849e-05, 8.323600000000042e-05]</msg>
<status status="PASS" starttime="20201029 18:18:45.130" endtime="20201029 18:18:45.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.125" endtime="20201029 18:18:45.134"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:45.137" endtime="20201029 18:18:45.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.136" endtime="20201029 18:18:45.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.135" endtime="20201029 18:18:45.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.773" endtime="20201029 18:18:45.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.773" endtime="20201029 18:18:45.158"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.167" endtime="20201029 18:18:45.185"></status>
</kw>
<msg timestamp="20201029 18:18:45.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.165" endtime="20201029 18:18:45.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.186" endtime="20201029 18:18:45.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.189" endtime="20201029 18:18:45.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.163" endtime="20201029 18:18:45.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.160" endtime="20201029 18:18:45.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.198" endtime="20201029 18:18:45.484"></status>
</kw>
<msg timestamp="20201029 18:18:45.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021972306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.196" endtime="20201029 18:18:45.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021972306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.488" endtime="20201029 18:18:45.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.496" endtime="20201029 18:18:45.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.194" endtime="20201029 18:18:45.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.192" endtime="20201029 18:18:45.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:45.503" level="INFO">${RESULT} = [{'diff': 8.479100000000073e-05}, {'diff': 8.405599999999902e-05}, {'diff': 8.437499999999765e-05}, {'diff': 8.458399999999866e-05}, {'diff': 8.459799999999823e-05}, {'diff': 8.452800000000038e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:45.500" endtime="20201029 18:18:45.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:45.508" level="INFO">${ACCURACY} = {'diff': [8.479100000000073e-05, 8.405599999999902e-05, 8.437499999999765e-05, 8.458399999999866e-05, 8.459799999999823e-05, 8.452800000000038e-05, 8.43049999999998e-05, 8.39720000000016e-05, 8.404099...</msg>
<status status="PASS" starttime="20201029 18:18:45.504" endtime="20201029 18:18:45.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.513" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 18:18:45.512" endtime="20201029 18:18:45.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.516" level="INFO">VALUE: [8.479100000000073e-05, 8.405599999999902e-05, 8.437499999999765e-05, 8.458399999999866e-05, 8.459799999999823e-05, 8.452800000000038e-05, 8.43049999999998e-05, 8.39720000000016e-05, 8.404099999999998e-05, 8.408299999999869e-05, 8.418099999999915e-05, 8.437499999999765e-05, 8.433299999999894e-05, 8.387500000000062e-05, 8.416700000000304e-05, 8.384700000000148e-05, 8.418099999999915e-05, 8.441699999999983e-05, 8.433299999999894e-05, 8.438900000000069e-05, 8.394499999999847e-05, 8.441699999999983e-05, 8.408399999999816e-05, 8.394499999999847e-05, 8.42370000000009e-05, 8.41110000000013e-05, 8.405499999999955e-05, 8.425000000000099e-05, 8.384700000000148e-05, 8.408299999999869e-05, 8.419399999999924e-05, 8.451399999999734e-05, 8.449999999999777e-05, 8.398600000000117e-05, 8.394500000000193e-05, 8.419499999999872e-05, 8.436100000000155e-05, 8.404199999999945e-05, 8.456999999999909e-05, 8.420899999999829e-05, 8.423599999999795e-05, 8.381999999999834e-05, 8.43469999999985e-05, 8.469500000000268e-05, 8.432000000000231e-05, 8.440200000000078e-05, 8.377700000000016e-05, 8.387500000000062e-05, 8.463900000000094e-05, 8.4153e-05]</msg>
<status status="PASS" starttime="20201029 18:18:45.515" endtime="20201029 18:18:45.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.509" endtime="20201029 18:18:45.517"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:45.521" endtime="20201029 18:18:45.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.520" endtime="20201029 18:18:45.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.518" endtime="20201029 18:18:45.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.159" endtime="20201029 18:18:45.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.158" endtime="20201029 18:18:45.542"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.551" endtime="20201029 18:18:45.569"></status>
</kw>
<msg timestamp="20201029 18:18:45.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.549" endtime="20201029 18:18:45.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.570" endtime="20201029 18:18:45.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.573" endtime="20201029 18:18:45.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.546" endtime="20201029 18:18:45.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.544" endtime="20201029 18:18:45.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.582" endtime="20201029 18:18:45.868"></status>
</kw>
<msg timestamp="20201029 18:18:45.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021772278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021857681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.580" endtime="20201029 18:18:45.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021772278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021857681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.872" endtime="20201029 18:18:45.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.881" endtime="20201029 18:18:45.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.578" endtime="20201029 18:18:45.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.576" endtime="20201029 18:18:45.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:45.887" level="INFO">${RESULT} = [{'diff': 8.540300000000126e-05}, {'diff': 8.480599999999977e-05}, {'diff': 8.512500000000187e-05}, {'diff': 8.552800000000138e-05}, {'diff': 8.501399999999784e-05}, {'diff': 8.545899999999954e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:45.884" endtime="20201029 18:18:45.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:45.892" level="INFO">${ACCURACY} = {'diff': [8.540300000000126e-05, 8.480599999999977e-05, 8.512500000000187e-05, 8.552800000000138e-05, 8.501399999999784e-05, 8.545899999999954e-05, 8.49859999999987e-05, 8.541700000000083e-05, 8.50420...</msg>
<status status="PASS" starttime="20201029 18:18:45.888" endtime="20201029 18:18:45.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.896" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 18:18:45.895" endtime="20201029 18:18:45.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.899" level="INFO">VALUE: [8.540300000000126e-05, 8.480599999999977e-05, 8.512500000000187e-05, 8.552800000000138e-05, 8.501399999999784e-05, 8.545899999999954e-05, 8.49859999999987e-05, 8.541700000000083e-05, 8.504200000000045e-05, 8.558400000000313e-05, 8.545899999999954e-05, 8.552799999999791e-05, 8.527699999999819e-05, 8.523600000000242e-05, 8.51660000000011e-05, 8.477699999999769e-05, 8.554099999999801e-05, 8.5153000000001e-05, 8.563899999999847e-05, 8.505600000000002e-05, 8.52920000000007e-05, 8.497199999999913e-05, 8.505600000000002e-05, 8.516700000000058e-05, 8.554099999999801e-05, 8.504100000000098e-05, 8.516700000000058e-05, 8.490299999999729e-05, 8.515299999999754e-05, 8.524999999999852e-05, 8.555500000000105e-05, 8.548600000000267e-05, 8.509699999999926e-05, 8.559699999999976e-05, 8.527800000000113e-05, 8.490300000000076e-05, 8.47920000000002e-05, 8.519400000000024e-05, 8.523599999999895e-05, 8.554200000000095e-05, 8.563899999999847e-05, 8.49309999999999e-05, 8.498600000000217e-05, 8.508299999999969e-05, 8.549999999999877e-05, 8.499999999999827e-05, 8.511099999999883e-05, 8.522199999999938e-05, 8.512500000000187e-05, 8.513799999999849e-05]</msg>
<status status="PASS" starttime="20201029 18:18:45.897" endtime="20201029 18:18:45.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.893" endtime="20201029 18:18:45.900"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:45.904" endtime="20201029 18:18:45.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.902" endtime="20201029 18:18:45.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.901" endtime="20201029 18:18:45.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.543" endtime="20201029 18:18:45.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.542" endtime="20201029 18:18:45.925"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.933" endtime="20201029 18:18:45.955"></status>
</kw>
<msg timestamp="20201029 18:18:45.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.932" endtime="20201029 18:18:45.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.956" endtime="20201029 18:18:45.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.959" endtime="20201029 18:18:45.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.929" endtime="20201029 18:18:45.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.927" endtime="20201029 18:18:45.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.968" endtime="20201029 18:18:46.254"></status>
</kw>
<msg timestamp="20201029 18:18:46.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025267583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025353958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.966" endtime="20201029 18:18:46.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025267583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025353958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.258" endtime="20201029 18:18:46.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.267" endtime="20201029 18:18:46.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.964" endtime="20201029 18:18:46.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.962" endtime="20201029 18:18:46.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:46.273" level="INFO">${RESULT} = [{'diff': 8.637499999999965e-05}, {'diff': 8.58189999999974e-05}, {'diff': 8.604200000000145e-05}, {'diff': 8.63059999999978e-05}, {'diff': 8.661100000000033e-05}, {'diff': 8.588899999999872e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:46.270" endtime="20201029 18:18:46.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:46.277" level="INFO">${ACCURACY} = {'diff': [8.637499999999965e-05, 8.58189999999974e-05, 8.604200000000145e-05, 8.63059999999978e-05, 8.661100000000033e-05, 8.588899999999872e-05, 8.602800000000188e-05, 8.601399999999884e-05, 8.581900...</msg>
<status status="PASS" starttime="20201029 18:18:46.274" endtime="20201029 18:18:46.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.282" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 18:18:46.281" endtime="20201029 18:18:46.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.284" level="INFO">VALUE: [8.637499999999965e-05, 8.58189999999974e-05, 8.604200000000145e-05, 8.63059999999978e-05, 8.661100000000033e-05, 8.588899999999872e-05, 8.602800000000188e-05, 8.601399999999884e-05, 8.581900000000087e-05, 8.597200000000013e-05, 8.604099999999851e-05, 8.592999999999795e-05, 8.619400000000124e-05, 8.658299999999772e-05, 8.613899999999897e-05, 8.602800000000188e-05, 8.588899999999872e-05, 8.647200000000063e-05, 8.63470000000005e-05, 8.597200000000013e-05, 8.624999999999952e-05, 8.637499999999965e-05, 8.595900000000004e-05, 8.645900000000054e-05, 8.641599999999888e-05, 8.652799999999891e-05, 8.5847e-05, 8.609700000000026e-05, 8.602800000000188e-05, 8.604099999999851e-05, 8.629100000000223e-05, 8.58050000000013e-05, 8.677800000000263e-05, 8.609700000000026e-05, 8.658299999999772e-05, 8.66669999999986e-05, 8.591699999999786e-05, 8.63059999999978e-05, 8.586100000000305e-05, 8.630600000000127e-05, 8.582000000000034e-05, 8.638899999999922e-05, 8.595900000000004e-05, 8.590199999999881e-05, 8.636100000000008e-05, 8.641599999999888e-05, 8.651299999999987e-05, 8.615199999999906e-05, 8.588900000000219e-05, 8.64860000000002e-05]</msg>
<status status="PASS" starttime="20201029 18:18:46.283" endtime="20201029 18:18:46.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.278" endtime="20201029 18:18:46.286"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:46.290" endtime="20201029 18:18:46.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.289" endtime="20201029 18:18:46.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.287" endtime="20201029 18:18:46.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.925" endtime="20201029 18:18:46.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.925" endtime="20201029 18:18:46.311"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.321" endtime="20201029 18:18:46.339"></status>
</kw>
<msg timestamp="20201029 18:18:46.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.319" endtime="20201029 18:18:46.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.341" endtime="20201029 18:18:46.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.343" endtime="20201029 18:18:46.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.316" endtime="20201029 18:18:46.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.314" endtime="20201029 18:18:46.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.352" endtime="20201029 18:18:46.638"></status>
</kw>
<msg timestamp="20201029 18:18:46.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022997486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023085111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.351" endtime="20201029 18:18:46.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022997486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023085111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.642" endtime="20201029 18:18:46.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.651" endtime="20201029 18:18:46.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.348" endtime="20201029 18:18:46.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.346" endtime="20201029 18:18:46.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:46.657" level="INFO">${RESULT} = [{'diff': 8.762499999999743e-05}, {'diff': 8.704199999999898e-05}, {'diff': 8.754199999999948e-05}, {'diff': 8.733300000000194e-05}, {'diff': 8.752700000000044e-05}, {'diff': 8.738900000000022e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:46.654" endtime="20201029 18:18:46.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:46.662" level="INFO">${ACCURACY} = {'diff': [8.762499999999743e-05, 8.704199999999898e-05, 8.754199999999948e-05, 8.733300000000194e-05, 8.752700000000044e-05, 8.738900000000022e-05, 8.756899999999915e-05, 8.718000000000267e-05, 8.7458...</msg>
<status status="PASS" starttime="20201029 18:18:46.658" endtime="20201029 18:18:46.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.667" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 18:18:46.666" endtime="20201029 18:18:46.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.669" level="INFO">VALUE: [8.762499999999743e-05, 8.704199999999898e-05, 8.754199999999948e-05, 8.733300000000194e-05, 8.752700000000044e-05, 8.738900000000022e-05, 8.756899999999915e-05, 8.718000000000267e-05, 8.745899999999807e-05, 8.71669999999991e-05, 8.73189999999989e-05, 8.758300000000219e-05, 8.736100000000108e-05, 8.705599999999855e-05, 8.73059999999988e-05, 8.702799999999941e-05, 8.726300000000062e-05, 8.706999999999812e-05, 8.748599999999773e-05, 8.688800000000024e-05, 8.775000000000102e-05, 8.729199999999923e-05, 8.755499999999958e-05, 8.69860000000007e-05, 8.680499999999883e-05, 8.681900000000187e-05, 8.708300000000169e-05, 8.726400000000009e-05, 8.740300000000326e-05, 8.737500000000065e-05, 8.688899999999972e-05, 8.727799999999966e-05, 8.709700000000126e-05, 8.761100000000133e-05, 8.741699999999936e-05, 8.751400000000034e-05, 8.747299999999764e-05, 8.740299999999979e-05, 8.729199999999923e-05, 8.745899999999807e-05, 8.702699999999994e-05, 8.715200000000006e-05, 8.74860000000012e-05, 8.700000000000027e-05, 8.752799999999991e-05, 8.719400000000224e-05, 8.692999999999895e-05, 8.71669999999991e-05, 8.700000000000027e-05, 8.718100000000215e-05]</msg>
<status status="PASS" starttime="20201029 18:18:46.668" endtime="20201029 18:18:46.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.663" endtime="20201029 18:18:46.671"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:46.674" endtime="20201029 18:18:46.694"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.673" endtime="20201029 18:18:46.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.672" endtime="20201029 18:18:46.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.313" endtime="20201029 18:18:46.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.312" endtime="20201029 18:18:46.695"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.704" endtime="20201029 18:18:46.723"></status>
</kw>
<msg timestamp="20201029 18:18:46.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.703" endtime="20201029 18:18:46.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.724" endtime="20201029 18:18:46.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.727" endtime="20201029 18:18:46.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.700" endtime="20201029 18:18:46.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.698" endtime="20201029 18:18:46.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.736" endtime="20201029 18:18:47.023"></status>
</kw>
<msg timestamp="20201029 18:18:47.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022248778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022337486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.734" endtime="20201029 18:18:47.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022248778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022337486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:47.027" endtime="20201029 18:18:47.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.036" endtime="20201029 18:18:47.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.732" endtime="20201029 18:18:47.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.730" endtime="20201029 18:18:47.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:47.043" level="INFO">${RESULT} = [{'diff': 8.870799999999984e-05}, {'diff': 8.795899999999857e-05}, {'diff': 8.829200000000023e-05}, {'diff': 8.859700000000276e-05}, {'diff': 8.833299999999947e-05}, {'diff': 8.779100000000026e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:47.039" endtime="20201029 18:18:47.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:47.047" level="INFO">${ACCURACY} = {'diff': [8.870799999999984e-05, 8.795899999999857e-05, 8.829200000000023e-05, 8.859700000000276e-05, 8.833299999999947e-05, 8.779100000000026e-05, 8.870799999999984e-05, 8.854100000000101e-05, 8.8193...</msg>
<status status="PASS" starttime="20201029 18:18:47.043" endtime="20201029 18:18:47.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.051" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 18:18:47.050" endtime="20201029 18:18:47.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.054" level="INFO">VALUE: [8.870799999999984e-05, 8.795899999999857e-05, 8.829200000000023e-05, 8.859700000000276e-05, 8.833299999999947e-05, 8.779100000000026e-05, 8.870799999999984e-05, 8.854100000000101e-05, 8.819399999999977e-05, 8.804199999999998e-05, 8.858299999999972e-05, 8.781999999999887e-05, 8.783299999999897e-05, 8.856999999999962e-05, 8.788800000000124e-05, 8.823600000000195e-05, 8.79860000000017e-05, 8.841700000000036e-05, 8.815300000000054e-05, 8.802800000000041e-05, 8.854100000000101e-05, 8.830500000000033e-05, 8.787499999999768e-05, 8.826399999999762e-05, 8.826399999999762e-05, 8.854099999999754e-05, 8.797199999999866e-05, 8.794399999999952e-05, 8.801400000000084e-05, 8.802800000000041e-05, 8.790300000000029e-05, 8.815300000000054e-05, 8.79860000000017e-05, 8.83059999999998e-05, 8.841700000000036e-05, 8.791699999999986e-05, 8.86670000000006e-05, 8.81800000000002e-05, 8.790200000000081e-05, 8.780499999999983e-05, 8.787500000000115e-05, 8.86250000000019e-05, 8.827800000000066e-05, 8.840300000000079e-05, 8.792999999999995e-05, 8.830499999999686e-05, 8.804199999999998e-05, 8.795799999999909e-05, 8.798599999999823e-05, 8.79999999999978e-05]</msg>
<status status="PASS" starttime="20201029 18:18:47.052" endtime="20201029 18:18:47.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.048" endtime="20201029 18:18:47.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:47.059" endtime="20201029 18:18:47.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.057" endtime="20201029 18:18:47.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.056" endtime="20201029 18:18:47.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.696" endtime="20201029 18:18:47.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.696" endtime="20201029 18:18:47.079"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.088" endtime="20201029 18:18:47.108"></status>
</kw>
<msg timestamp="20201029 18:18:47.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.086" endtime="20201029 18:18:47.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.109" endtime="20201029 18:18:47.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.113" endtime="20201029 18:18:47.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.084" endtime="20201029 18:18:47.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.082" endtime="20201029 18:18:47.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.122" endtime="20201029 18:18:47.407"></status>
</kw>
<msg timestamp="20201029 18:18:47.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022969111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023058472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:47.120" endtime="20201029 18:18:47.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022969111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023058472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:47.411" endtime="20201029 18:18:47.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.420" endtime="20201029 18:18:47.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.118" endtime="20201029 18:18:47.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.116" endtime="20201029 18:18:47.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:47.426" level="INFO">${RESULT} = [{'diff': 8.936099999999961e-05}, {'diff': 8.923599999999948e-05}, {'diff': 8.897199999999966e-05}, {'diff': 8.944499999999703e-05}, {'diff': 8.918100000000068e-05}, {'diff': 8.941600000000188e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:47.423" endtime="20201029 18:18:47.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:47.431" level="INFO">${ACCURACY} = {'diff': [8.936099999999961e-05, 8.923599999999948e-05, 8.897199999999966e-05, 8.944499999999703e-05, 8.918100000000068e-05, 8.941600000000188e-05, 8.906899999999718e-05, 8.937499999999918e-05, 8.8875...</msg>
<status status="PASS" starttime="20201029 18:18:47.427" endtime="20201029 18:18:47.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.435" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 18:18:47.434" endtime="20201029 18:18:47.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.438" level="INFO">VALUE: [8.936099999999961e-05, 8.923599999999948e-05, 8.897199999999966e-05, 8.944499999999703e-05, 8.918100000000068e-05, 8.941600000000188e-05, 8.906899999999718e-05, 8.937499999999918e-05, 8.887500000000215e-05, 8.908300000000022e-05, 8.938899999999875e-05, 8.925000000000252e-05, 8.951399999999887e-05, 8.88190000000004e-05, 8.93190000000009e-05, 8.872200000000288e-05, 8.962499999999943e-05, 8.898599999999923e-05, 8.961099999999986e-05, 8.94999999999993e-05, 8.91670000000011e-05, 8.920899999999982e-05, 8.901399999999837e-05, 8.94999999999993e-05, 8.916600000000163e-05, 8.927699999999872e-05, 8.91800000000012e-05, 8.886099999999911e-05, 8.940299999999832e-05, 8.89999999999988e-05, 8.901399999999837e-05, 8.88060000000003e-05, 8.952800000000191e-05, 8.880599999999683e-05, 8.897199999999966e-05, 8.936099999999961e-05, 8.94999999999993e-05, 8.933399999999994e-05, 8.897199999999966e-05, 8.927800000000166e-05, 8.89999999999988e-05, 8.887500000000215e-05, 8.927699999999872e-05, 8.88190000000004e-05, 8.955500000000158e-05, 8.911099999999936e-05, 8.908300000000022e-05, 8.922199999999991e-05, 8.874999999999855e-05, 8.924999999999905e-05]</msg>
<status status="PASS" starttime="20201029 18:18:47.436" endtime="20201029 18:18:47.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.431" endtime="20201029 18:18:47.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:47.443" endtime="20201029 18:18:47.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.442" endtime="20201029 18:18:47.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.441" endtime="20201029 18:18:47.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.080" endtime="20201029 18:18:47.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.080" endtime="20201029 18:18:47.464"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.473" endtime="20201029 18:18:47.492"></status>
</kw>
<msg timestamp="20201029 18:18:47.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.471" endtime="20201029 18:18:47.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.493" endtime="20201029 18:18:47.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.496" endtime="20201029 18:18:47.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.469" endtime="20201029 18:18:47.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.467" endtime="20201029 18:18:47.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.505" endtime="20201029 18:18:47.791"></status>
</kw>
<msg timestamp="20201029 18:18:47.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02194525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022035181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:47.503" endtime="20201029 18:18:47.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02194525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022035181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:47.795" endtime="20201029 18:18:47.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.804" endtime="20201029 18:18:47.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.501" endtime="20201029 18:18:47.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.499" endtime="20201029 18:18:47.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:47.811" level="INFO">${RESULT} = [{'diff': 8.993100000000143e-05}, {'diff': 9.009699999999732e-05}, {'diff': 9.025000000000005e-05}, {'diff': 9.001399999999937e-05}, {'diff': 9.043100000000193e-05}, {'diff': 9.025000000000005e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:47.807" endtime="20201029 18:18:47.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:47.816" level="INFO">${ACCURACY} = {'diff': [8.993100000000143e-05, 9.009699999999732e-05, 9.025000000000005e-05, 9.001399999999937e-05, 9.043100000000193e-05, 9.025000000000005e-05, 9.004199999999851e-05, 9.052799999999944e-05, 9.0098...</msg>
<status status="PASS" starttime="20201029 18:18:47.812" endtime="20201029 18:18:47.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.821" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 18:18:47.820" endtime="20201029 18:18:47.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.823" level="INFO">VALUE: [8.993100000000143e-05, 9.009699999999732e-05, 9.025000000000005e-05, 9.001399999999937e-05, 9.043100000000193e-05, 9.025000000000005e-05, 9.004199999999851e-05, 9.052799999999944e-05, 9.009800000000026e-05, 9.027799999999919e-05, 8.983400000000044e-05, 9.020900000000082e-05, 9.002700000000294e-05, 9.061100000000086e-05, 9.0332999999998e-05, 8.997200000000066e-05, 9.05000000000003e-05, 8.979099999999879e-05, 9.066699999999914e-05, 9.034700000000104e-05, 8.979200000000173e-05, 9.054199999999901e-05, 9.034800000000051e-05, 9.023600000000048e-05, 8.998600000000023e-05, 8.970900000000032e-05, 8.979200000000173e-05, 9.033399999999747e-05, 9.070799999999837e-05, 9.059699999999782e-05, 9.059699999999782e-05, 8.993000000000195e-05, 9.025000000000005e-05, 8.992999999999848e-05, 8.991600000000238e-05, 9.016699999999864e-05, 8.995799999999762e-05, 9.038899999999975e-05, 9.018099999999821e-05, 9.062500000000043e-05, 8.9945000000001e-05, 9.044499999999803e-05, 8.990299999999882e-05, 9.052699999999997e-05, 9.005600000000155e-05, 9.027699999999972e-05, 9.001399999999937e-05, 9.019400000000177e-05, 8.987499999999968e-05, 8.981899999999793e-05]</msg>
<status status="PASS" starttime="20201029 18:18:47.822" endtime="20201029 18:18:47.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.817" endtime="20201029 18:18:47.825"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:47.829" endtime="20201029 18:18:47.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.827" endtime="20201029 18:18:47.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.826" endtime="20201029 18:18:47.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.465" endtime="20201029 18:18:47.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.464" endtime="20201029 18:18:47.849"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.859" endtime="20201029 18:18:47.878"></status>
</kw>
<msg timestamp="20201029 18:18:47.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.857" endtime="20201029 18:18:47.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.880" endtime="20201029 18:18:47.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.882" endtime="20201029 18:18:47.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.854" endtime="20201029 18:18:47.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.852" endtime="20201029 18:18:47.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.892" endtime="20201029 18:18:48.202"></status>
</kw>
<msg timestamp="20201029 18:18:48.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022655458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022747222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:47.890" endtime="20201029 18:18:48.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022655458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022747222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.207" endtime="20201029 18:18:48.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.215" endtime="20201029 18:18:48.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.887" endtime="20201029 18:18:48.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.886" endtime="20201029 18:18:48.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:48.222" level="INFO">${RESULT} = [{'diff': 9.176400000000112e-05}, {'diff': 9.136100000000161e-05}, {'diff': 9.1332999999999e-05}, {'diff': 9.134699999999857e-05}, {'diff': 9.14719999999987e-05}, {'diff': 9.151400000000087e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:18:48.219" endtime="20201029 18:18:48.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:48.226" level="INFO">${ACCURACY} = {'diff': [9.176400000000112e-05, 9.136100000000161e-05, 9.1332999999999e-05, 9.134699999999857e-05, 9.14719999999987e-05, 9.151400000000087e-05, 9.154100000000054e-05, 9.080599999999883e-05, 9.1445000...</msg>
<status status="PASS" starttime="20201029 18:18:48.223" endtime="20201029 18:18:48.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.231" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 18:18:48.230" endtime="20201029 18:18:48.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.234" level="INFO">VALUE: [9.176400000000112e-05, 9.136100000000161e-05, 9.1332999999999e-05, 9.134699999999857e-05, 9.14719999999987e-05, 9.151400000000087e-05, 9.154100000000054e-05, 9.080599999999883e-05, 9.14450000000025e-05, 9.134699999999857e-05, 9.127800000000019e-05, 9.134800000000151e-05, 9.151400000000087e-05, 9.076400000000012e-05, 9.116600000000016e-05, 9.152700000000097e-05, 9.159699999999882e-05, 9.162500000000143e-05, 9.105499999999961e-05, 9.154200000000001e-05, 9.138800000000127e-05, 9.137500000000118e-05, 9.174999999999808e-05, 9.076400000000012e-05, 9.147200000000216e-05, 9.137500000000118e-05, 9.147300000000164e-05, 9.088900000000025e-05, 9.175000000000155e-05, 9.087500000000068e-05, 9.125000000000105e-05, 9.156899999999968e-05, 9.097200000000166e-05, 9.1332999999999e-05, 9.134699999999857e-05, 9.165300000000057e-05, 9.159700000000229e-05, 9.090299999999982e-05, 9.126400000000062e-05, 9.136100000000161e-05, 9.086100000000111e-05, 9.116699999999964e-05, 9.079199999999926e-05, 9.105599999999908e-05, 9.137499999999771e-05, 9.177699999999775e-05, 9.136099999999814e-05, 9.109699999999832e-05, 9.154200000000001e-05, 9.087499999999721e-05]</msg>
<status status="PASS" starttime="20201029 18:18:48.232" endtime="20201029 18:18:48.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.227" endtime="20201029 18:18:48.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:48.243" endtime="20201029 18:18:48.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.242" endtime="20201029 18:18:48.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.240" endtime="20201029 18:18:48.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.850" endtime="20201029 18:18:48.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.850" endtime="20201029 18:18:48.264"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.273" endtime="20201029 18:18:48.293"></status>
</kw>
<msg timestamp="20201029 18:18:48.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.271" endtime="20201029 18:18:48.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.295" endtime="20201029 18:18:48.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.297" endtime="20201029 18:18:48.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.269" endtime="20201029 18:18:48.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.266" endtime="20201029 18:18:48.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.307" endtime="20201029 18:18:48.592"></status>
</kw>
<msg timestamp="20201029 18:18:48.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023319264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023411139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.305" endtime="20201029 18:18:48.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023319264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023411139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.597" endtime="20201029 18:18:48.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.613" endtime="20201029 18:18:48.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.303" endtime="20201029 18:18:48.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.301" endtime="20201029 18:18:48.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:48.631" level="INFO">${RESULT} = [{'diff': 9.187500000000168e-05}, {'diff': 9.202800000000094e-05}, {'diff': 9.195799999999962e-05}, {'diff': 9.202799999999747e-05}, {'diff': 9.194400000000005e-05}, {'diff': 9.211099999999889e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:48.623" endtime="20201029 18:18:48.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:48.636" level="INFO">${ACCURACY} = {'diff': [9.187500000000168e-05, 9.202800000000094e-05, 9.195799999999962e-05, 9.202799999999747e-05, 9.194400000000005e-05, 9.211099999999889e-05, 9.262499999999896e-05, 9.247299999999917e-05, 9.2097...</msg>
<status status="PASS" starttime="20201029 18:18:48.633" endtime="20201029 18:18:48.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.641" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 18:18:48.640" endtime="20201029 18:18:48.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.644" level="INFO">VALUE: [9.187500000000168e-05, 9.202800000000094e-05, 9.195799999999962e-05, 9.202799999999747e-05, 9.194400000000005e-05, 9.211099999999889e-05, 9.262499999999896e-05, 9.247299999999917e-05, 9.209700000000279e-05, 9.18199999999994e-05, 9.226399999999815e-05, 9.209799999999879e-05, 9.24719999999997e-05, 9.222300000000239e-05, 9.186099999999864e-05, 9.191700000000039e-05, 9.247299999999917e-05, 9.216600000000116e-05, 9.180499999999689e-05, 9.2026999999998e-05, 9.181899999999993e-05, 9.179200000000026e-05, 9.223600000000248e-05, 9.24719999999997e-05, 9.255599999999711e-05, 9.263899999999853e-05, 9.229200000000076e-05, 9.255600000000058e-05, 9.188900000000125e-05, 9.209699999999932e-05, 9.272299999999942e-05, 9.179200000000026e-05, 9.212499999999846e-05, 9.270899999999985e-05, 9.191600000000091e-05, 9.261099999999939e-05, 9.255500000000111e-05, 9.238900000000175e-05, 9.198600000000223e-05, 9.229099999999782e-05, 9.204200000000051e-05, 9.19719999999992e-05, 9.237499999999871e-05, 9.211099999999889e-05, 9.247200000000316e-05, 9.183399999999897e-05, 9.258399999999972e-05, 9.21390000000015e-05, 9.19870000000017e-05, 9.182000000000287e-05]</msg>
<status status="PASS" starttime="20201029 18:18:48.642" endtime="20201029 18:18:48.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.637" endtime="20201029 18:18:48.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:48.650" endtime="20201029 18:18:48.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.648" endtime="20201029 18:18:48.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.647" endtime="20201029 18:18:48.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.265" endtime="20201029 18:18:48.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.264" endtime="20201029 18:18:48.671"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.680" endtime="20201029 18:18:48.699"></status>
</kw>
<msg timestamp="20201029 18:18:48.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.678" endtime="20201029 18:18:48.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.700" endtime="20201029 18:18:48.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.703" endtime="20201029 18:18:48.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.675" endtime="20201029 18:18:48.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.673" endtime="20201029 18:18:48.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.712" endtime="20201029 18:18:49.000"></status>
</kw>
<msg timestamp="20201029 18:18:49.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022204569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022297944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.711" endtime="20201029 18:18:49.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022204569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022297944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.004" endtime="20201029 18:18:49.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.012" endtime="20201029 18:18:49.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.708" endtime="20201029 18:18:49.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.706" endtime="20201029 18:18:49.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:49.019" level="INFO">${RESULT} = [{'diff': 9.337499999999971e-05}, {'diff': 9.284700000000007e-05}, {'diff': 9.293100000000096e-05}, {'diff': 9.327799999999872e-05}, {'diff': 9.329200000000176e-05}, {'diff': 9.362499999999996e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:49.016" endtime="20201029 18:18:49.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:49.024" level="INFO">${ACCURACY} = {'diff': [9.337499999999971e-05, 9.284700000000007e-05, 9.293100000000096e-05, 9.327799999999872e-05, 9.329200000000176e-05, 9.362499999999996e-05, 9.301400000000237e-05, 9.299999999999933e-05, 9.3097...</msg>
<status status="PASS" starttime="20201029 18:18:49.020" endtime="20201029 18:18:49.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.029" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 18:18:49.028" endtime="20201029 18:18:49.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.032" level="INFO">VALUE: [9.337499999999971e-05, 9.284700000000007e-05, 9.293100000000096e-05, 9.327799999999872e-05, 9.329200000000176e-05, 9.362499999999996e-05, 9.301400000000237e-05, 9.299999999999933e-05, 9.309799999999979e-05, 9.338900000000275e-05, 9.312499999999946e-05, 9.330500000000186e-05, 9.286099999999964e-05, 9.284700000000007e-05, 9.288900000000225e-05, 9.341699999999842e-05, 9.351400000000287e-05, 9.363899999999953e-05, 9.281900000000093e-05, 9.323600000000001e-05, 9.302800000000194e-05, 9.326399999999915e-05, 9.344500000000103e-05, 9.305599999999761e-05, 9.30139999999989e-05, 9.280599999999736e-05, 9.323699999999949e-05, 9.311099999999989e-05, 9.279100000000179e-05, 9.342999999999851e-05, 9.318000000000173e-05, 9.355500000000211e-05, 9.305500000000161e-05, 9.29590000000001e-05, 9.34720000000007e-05, 9.327800000000219e-05, 9.343099999999799e-05, 9.301400000000237e-05, 9.308300000000075e-05, 9.349999999999983e-05, 9.281899999999746e-05, 9.308400000000022e-05, 9.309799999999979e-05, 9.354200000000201e-05, 9.284700000000007e-05, 9.362499999999996e-05, 9.309700000000032e-05, 9.34720000000007e-05, 9.30139999999989e-05, 9.336100000000014e-05]</msg>
<status status="PASS" starttime="20201029 18:18:49.030" endtime="20201029 18:18:49.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.025" endtime="20201029 18:18:49.033"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:49.037" endtime="20201029 18:18:49.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.035" endtime="20201029 18:18:49.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.034" endtime="20201029 18:18:49.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.672" endtime="20201029 18:18:49.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.671" endtime="20201029 18:18:49.058"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.067" endtime="20201029 18:18:49.086"></status>
</kw>
<msg timestamp="20201029 18:18:49.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.065" endtime="20201029 18:18:49.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.087" endtime="20201029 18:18:49.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.090" endtime="20201029 18:18:49.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.062" endtime="20201029 18:18:49.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.060" endtime="20201029 18:18:49.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.099" endtime="20201029 18:18:49.386"></status>
</kw>
<msg timestamp="20201029 18:18:49.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223015, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022395361, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:49.098" endtime="20201029 18:18:49.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223015, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022395361, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:49.391" endtime="20201029 18:18:49.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.400" endtime="20201029 18:18:49.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.095" endtime="20201029 18:18:49.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.093" endtime="20201029 18:18:49.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:49.406" level="INFO">${RESULT} = [{'diff': 9.386100000000064e-05}, {'diff': 9.376399999999965e-05}, {'diff': 9.39590000000011e-05}, {'diff': 9.400000000000033e-05}, {'diff': 9.411099999999742e-05}, {'diff': 9.417999999999926e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:49.403" endtime="20201029 18:18:49.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:49.411" level="INFO">${ACCURACY} = {'diff': [9.386100000000064e-05, 9.376399999999965e-05, 9.39590000000011e-05, 9.400000000000033e-05, 9.411099999999742e-05, 9.417999999999926e-05, 9.40139999999999e-05, 9.395799999999815e-05, 9.452799...</msg>
<status status="PASS" starttime="20201029 18:18:49.407" endtime="20201029 18:18:49.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.415" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 18:18:49.414" endtime="20201029 18:18:49.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.418" level="INFO">VALUE: [9.386100000000064e-05, 9.376399999999965e-05, 9.39590000000011e-05, 9.400000000000033e-05, 9.411099999999742e-05, 9.417999999999926e-05, 9.40139999999999e-05, 9.395799999999815e-05, 9.452799999999997e-05, 9.405500000000261e-05, 9.395800000000162e-05, 9.437500000000071e-05, 9.375000000000008e-05, 9.391700000000239e-05, 9.422200000000144e-05, 9.450000000000083e-05, 9.445899999999813e-05, 9.455600000000258e-05, 9.450000000000083e-05, 9.459699999999835e-05, 9.409799999999732e-05, 9.462500000000096e-05, 9.448600000000126e-05, 9.41659999999997e-05, 9.455499999999964e-05, 9.424999999999711e-05, 9.444400000000255e-05, 9.426400000000015e-05, 9.45140000000004e-05, 9.445799999999865e-05, 9.39720000000012e-05, 9.387500000000021e-05, 9.390199999999987e-05, 9.455599999999911e-05, 9.409800000000079e-05, 9.412500000000046e-05, 9.436100000000114e-05, 9.45140000000004e-05, 9.42079999999984e-05, 9.440200000000037e-05, 9.423600000000101e-05, 9.377699999999975e-05, 9.462499999999749e-05, 9.44859999999978e-05, 9.381900000000193e-05, 9.445799999999865e-05, 9.445799999999865e-05, 9.375000000000008e-05, 9.431999999999843e-05, 9.452799999999997e-05]</msg>
<status status="PASS" starttime="20201029 18:18:49.416" endtime="20201029 18:18:49.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.412" endtime="20201029 18:18:49.419"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:49.423" endtime="20201029 18:18:49.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.422" endtime="20201029 18:18:49.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.420" endtime="20201029 18:18:49.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.059" endtime="20201029 18:18:49.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.058" endtime="20201029 18:18:49.444"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.453" endtime="20201029 18:18:49.475"></status>
</kw>
<msg timestamp="20201029 18:18:49.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.451" endtime="20201029 18:18:49.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.477" endtime="20201029 18:18:49.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.479" endtime="20201029 18:18:49.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.449" endtime="20201029 18:18:49.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.447" endtime="20201029 18:18:49.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.489" endtime="20201029 18:18:49.777"></status>
</kw>
<msg timestamp="20201029 18:18:49.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025878125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025973431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.487" endtime="20201029 18:18:49.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025878125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025973431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.781" endtime="20201029 18:18:49.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.790" endtime="20201029 18:18:49.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.484" endtime="20201029 18:18:49.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.483" endtime="20201029 18:18:49.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:49.797" level="INFO">${RESULT} = [{'diff': 9.530600000000333e-05}, {'diff': 9.504100000000057e-05}, {'diff': 9.48469999999986e-05}, {'diff': 9.556899999999674e-05}, {'diff': 9.559699999999935e-05}, {'diff': 9.479100000000032e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:49.793" endtime="20201029 18:18:49.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:49.801" level="INFO">${ACCURACY} = {'diff': [9.530600000000333e-05, 9.504100000000057e-05, 9.48469999999986e-05, 9.556899999999674e-05, 9.559699999999935e-05, 9.479100000000032e-05, 9.522300000000192e-05, 9.512499999999799e-05, 9.51109...</msg>
<status status="PASS" starttime="20201029 18:18:49.798" endtime="20201029 18:18:49.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.805" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 18:18:49.804" endtime="20201029 18:18:49.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.808" level="INFO">VALUE: [9.530600000000333e-05, 9.504100000000057e-05, 9.48469999999986e-05, 9.556899999999674e-05, 9.559699999999935e-05, 9.479100000000032e-05, 9.522300000000192e-05, 9.512499999999799e-05, 9.511099999999842e-05, 9.538900000000128e-05, 9.547199999999922e-05, 9.494499999999906e-05, 9.530599999999986e-05, 9.54590000000026e-05, 9.523600000000201e-05, 9.529100000000082e-05, 9.536200000000161e-05, 9.502699999999753e-05, 9.559699999999935e-05, 9.518000000000026e-05, 9.490200000000087e-05, 9.51669999999967e-05, 9.527800000000072e-05, 9.481899999999946e-05, 9.549999999999836e-05, 9.531899999999996e-05, 9.541700000000042e-05, 9.498600000000176e-05, 9.55140000000014e-05, 9.558399999999925e-05, 9.519499999999931e-05, 9.513900000000103e-05, 9.480599999999936e-05, 9.484700000000207e-05, 9.49019999999974e-05, 9.509699999999885e-05, 9.55409999999976e-05, 9.572199999999947e-05, 9.51530000000006e-05, 9.505500000000014e-05, 9.525000000000158e-05, 9.499999999999786e-05, 9.511100000000189e-05, 9.554200000000054e-05, 9.566700000000067e-05, 9.488900000000078e-05, 9.566700000000067e-05, 9.512500000000146e-05, 9.50140000000009e-05, 9.556999999999968e-05]</msg>
<status status="PASS" starttime="20201029 18:18:49.807" endtime="20201029 18:18:49.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.802" endtime="20201029 18:18:49.810"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:49.814" endtime="20201029 18:18:49.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.813" endtime="20201029 18:18:49.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.811" endtime="20201029 18:18:49.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.445" endtime="20201029 18:18:49.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.444" endtime="20201029 18:18:49.835"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.844" endtime="20201029 18:18:49.863"></status>
</kw>
<msg timestamp="20201029 18:18:49.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.843" endtime="20201029 18:18:49.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.865" endtime="20201029 18:18:49.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.868" endtime="20201029 18:18:49.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.840" endtime="20201029 18:18:49.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.838" endtime="20201029 18:18:49.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.877" endtime="20201029 18:18:50.162"></status>
</kw>
<msg timestamp="20201029 18:18:50.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02269275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022789222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:49.875" endtime="20201029 18:18:50.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02269275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022789222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:50.167" endtime="20201029 18:18:50.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.175" endtime="20201029 18:18:50.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.873" endtime="20201029 18:18:50.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.871" endtime="20201029 18:18:50.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:50.182" level="INFO">${RESULT} = [{'diff': 9.647200000000022e-05}, {'diff': 9.658400000000025e-05}, {'diff': 9.613899999999856e-05}, {'diff': 9.605499999999767e-05}, {'diff': 9.594500000000006e-05}, {'diff': 9.655499999999817e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:50.179" endtime="20201029 18:18:50.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:50.187" level="INFO">${ACCURACY} = {'diff': [9.647200000000022e-05, 9.658400000000025e-05, 9.613899999999856e-05, 9.605499999999767e-05, 9.594500000000006e-05, 9.655499999999817e-05, 9.633300000000053e-05, 9.659700000000035e-05, 9.6318...</msg>
<status status="PASS" starttime="20201029 18:18:50.183" endtime="20201029 18:18:50.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.192" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 18:18:50.191" endtime="20201029 18:18:50.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.195" level="INFO">VALUE: [9.647200000000022e-05, 9.658400000000025e-05, 9.613899999999856e-05, 9.605499999999767e-05, 9.594500000000006e-05, 9.655499999999817e-05, 9.633300000000053e-05, 9.659700000000035e-05, 9.631899999999749e-05, 9.577800000000122e-05, 9.627799999999825e-05, 9.579200000000079e-05, 9.576400000000165e-05, 9.661199999999939e-05, 9.638899999999881e-05, 9.632000000000043e-05, 9.658400000000025e-05, 9.622299999999945e-05, 9.669500000000081e-05, 9.636099999999967e-05, 9.651299999999946e-05, 9.598700000000224e-05, 9.629099999999835e-05, 9.645800000000065e-05, 9.595800000000015e-05, 9.661099999999992e-05, 9.65409999999986e-05, 9.626400000000215e-05, 9.669500000000081e-05, 9.636099999999967e-05, 9.618100000000074e-05, 9.633299999999706e-05, 9.643100000000099e-05, 9.666700000000167e-05, 9.580600000000036e-05, 9.591700000000092e-05, 9.580600000000036e-05, 9.579099999999785e-05, 9.649999999999936e-05, 9.626400000000215e-05, 9.601399999999843e-05, 9.661099999999992e-05, 9.584700000000307e-05, 9.640299999999838e-05, 9.61530000000016e-05, 9.590299999999788e-05, 9.599999999999886e-05, 9.637499999999924e-05, 9.595899999999963e-05, 9.649999999999936e-05]</msg>
<status status="PASS" starttime="20201029 18:18:50.193" endtime="20201029 18:18:50.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.188" endtime="20201029 18:18:50.196"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:50.200" endtime="20201029 18:18:50.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.198" endtime="20201029 18:18:50.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.197" endtime="20201029 18:18:50.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.836" endtime="20201029 18:18:50.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.835" endtime="20201029 18:18:50.221"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.230" endtime="20201029 18:18:50.249"></status>
</kw>
<msg timestamp="20201029 18:18:50.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.228" endtime="20201029 18:18:50.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.251" endtime="20201029 18:18:50.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.253" endtime="20201029 18:18:50.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.226" endtime="20201029 18:18:50.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.223" endtime="20201029 18:18:50.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.263" endtime="20201029 18:18:50.550"></status>
</kw>
<msg timestamp="20201029 18:18:50.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022350528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022447833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.261" endtime="20201029 18:18:50.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022350528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022447833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.554" endtime="20201029 18:18:50.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.563" endtime="20201029 18:18:50.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.259" endtime="20201029 18:18:50.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.257" endtime="20201029 18:18:50.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:50.569" level="INFO">${RESULT} = [{'diff': 9.730499999999892e-05}, {'diff': 9.738900000000328e-05}, {'diff': 9.762500000000049e-05}, {'diff': 9.727799999999925e-05}, {'diff': 9.759800000000082e-05}, {'diff': 9.688899999999931e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:50.566" endtime="20201029 18:18:50.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:50.574" level="INFO">${ACCURACY} = {'diff': [9.730499999999892e-05, 9.738900000000328e-05, 9.762500000000049e-05, 9.727799999999925e-05, 9.759800000000082e-05, 9.688899999999931e-05, 9.736200000000014e-05, 9.677800000000222e-05, 9.6986...</msg>
<status status="PASS" starttime="20201029 18:18:50.570" endtime="20201029 18:18:50.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.578" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 18:18:50.577" endtime="20201029 18:18:50.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.581" level="INFO">VALUE: [9.730499999999892e-05, 9.738900000000328e-05, 9.762500000000049e-05, 9.727799999999925e-05, 9.759800000000082e-05, 9.688899999999931e-05, 9.736200000000014e-05, 9.677800000000222e-05, 9.698699999999977e-05, 9.741699999999895e-05, 9.744400000000208e-05, 9.741599999999948e-05, 9.708300000000128e-05, 9.69860000000003e-05, 9.730499999999892e-05, 9.691700000000192e-05, 9.77080000000019e-05, 9.737500000000024e-05, 9.723600000000054e-05, 9.690299999999888e-05, 9.704200000000204e-05, 9.758400000000125e-05, 9.765299999999963e-05, 9.695899999999716e-05, 9.738899999999981e-05, 9.718099999999827e-05, 9.756899999999874e-05, 9.701399999999943e-05, 9.711100000000042e-05, 9.69019999999994e-05, 9.738899999999981e-05, 9.75279999999995e-05, 9.698699999999977e-05, 9.722200000000097e-05, 9.693100000000149e-05, 9.754199999999907e-05, 9.726399999999968e-05, 9.682000000000093e-05, 9.747200000000122e-05, 9.695899999999716e-05, 9.697200000000072e-05, 9.755499999999917e-05, 9.679199999999832e-05, 9.755500000000264e-05, 9.680499999999842e-05, 9.766599999999973e-05, 9.687499999999974e-05, 9.676399999999918e-05, 9.697200000000072e-05, 9.695800000000115e-05]</msg>
<status status="PASS" starttime="20201029 18:18:50.580" endtime="20201029 18:18:50.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.575" endtime="20201029 18:18:50.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:50.586" endtime="20201029 18:18:50.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.585" endtime="20201029 18:18:50.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.583" endtime="20201029 18:18:50.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.222" endtime="20201029 18:18:50.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.221" endtime="20201029 18:18:50.607"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.616" endtime="20201029 18:18:50.636"></status>
</kw>
<msg timestamp="20201029 18:18:50.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.615" endtime="20201029 18:18:50.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.638" endtime="20201029 18:18:50.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.640" endtime="20201029 18:18:50.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.612" endtime="20201029 18:18:50.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.610" endtime="20201029 18:18:50.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.650" endtime="20201029 18:18:50.936"></status>
</kw>
<msg timestamp="20201029 18:18:50.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023713569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02381225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:50.648" endtime="20201029 18:18:50.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023713569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02381225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:50.941" endtime="20201029 18:18:50.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.949" endtime="20201029 18:18:50.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.646" endtime="20201029 18:18:50.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.644" endtime="20201029 18:18:50.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:50.956" level="INFO">${RESULT} = [{'diff': 9.868099999999977e-05}, {'diff': 9.801299999999749e-05}, {'diff': 9.848599999999832e-05}, {'diff': 9.844400000000308e-05}, {'diff': 9.845800000000265e-05}, {'diff': 9.8721999999999e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:50.953" endtime="20201029 18:18:50.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:50.961" level="INFO">${ACCURACY} = {'diff': [9.868099999999977e-05, 9.801299999999749e-05, 9.848599999999832e-05, 9.844400000000308e-05, 9.845800000000265e-05, 9.8721999999999e-05, 9.858300000000278e-05, 9.840300000000038e-05, 9.848600...</msg>
<status status="PASS" starttime="20201029 18:18:50.957" endtime="20201029 18:18:50.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.965" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 18:18:50.964" endtime="20201029 18:18:50.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.968" level="INFO">VALUE: [9.868099999999977e-05, 9.801299999999749e-05, 9.848599999999832e-05, 9.844400000000308e-05, 9.845800000000265e-05, 9.8721999999999e-05, 9.858300000000278e-05, 9.840300000000038e-05, 9.84860000000018e-05, 9.78470000000016e-05, 9.847199999999875e-05, 9.820799999999894e-05, 9.83059999999994e-05, 9.805599999999914e-05, 9.823599999999807e-05, 9.78479999999976e-05, 9.801399999999696e-05, 9.811099999999795e-05, 9.794399999999912e-05, 9.78470000000016e-05, 9.862500000000149e-05, 9.868099999999977e-05, 9.84860000000018e-05, 9.801400000000043e-05, 9.815300000000013e-05, 9.809699999999838e-05, 9.805599999999914e-05, 9.78059999999989e-05, 9.82920000000033e-05, 9.794499999999859e-05, 9.804200000000304e-05, 9.813900000000056e-05, 9.833299999999906e-05, 9.858400000000225e-05, 9.783300000000203e-05, 9.786100000000117e-05, 9.806899999999924e-05, 9.780499999999942e-05, 9.851400000000093e-05, 9.83609999999982e-05, 9.862499999999802e-05, 9.8334000000002e-05, 9.79999999999974e-05, 9.819500000000231e-05, 9.801400000000043e-05, 9.804199999999957e-05, 9.858299999999931e-05, 9.78340000000015e-05, 9.840300000000038e-05, 9.833299999999906e-05]</msg>
<status status="PASS" starttime="20201029 18:18:50.966" endtime="20201029 18:18:50.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.961" endtime="20201029 18:18:50.970"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:50.974" endtime="20201029 18:18:50.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.972" endtime="20201029 18:18:50.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.971" endtime="20201029 18:18:50.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.608" endtime="20201029 18:18:50.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.608" endtime="20201029 18:18:50.995"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.004" endtime="20201029 18:18:51.023"></status>
</kw>
<msg timestamp="20201029 18:18:51.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.002" endtime="20201029 18:18:51.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.025" endtime="20201029 18:18:51.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.027" endtime="20201029 18:18:51.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.000" endtime="20201029 18:18:51.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.997" endtime="20201029 18:18:51.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.037" endtime="20201029 18:18:51.322"></status>
</kw>
<msg timestamp="20201029 18:18:51.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022758722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022858236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.035" endtime="20201029 18:18:51.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022758722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022858236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.326" endtime="20201029 18:18:51.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.335" endtime="20201029 18:18:51.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.032" endtime="20201029 18:18:51.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.031" endtime="20201029 18:18:51.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:51.342" level="INFO">${RESULT} = [{'diff': 9.951400000000193e-05}, {'diff': 9.943100000000052e-05}, {'diff': 9.918100000000027e-05}, {'diff': 9.913800000000209e-05}, {'diff': 9.88609999999987e-05}, {'diff': 9.975000000000261e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:51.338" endtime="20201029 18:18:51.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:51.347" level="INFO">${ACCURACY} = {'diff': [9.951400000000193e-05, 9.943100000000052e-05, 9.918100000000027e-05, 9.913800000000209e-05, 9.88609999999987e-05, 9.975000000000261e-05, 9.927700000000178e-05, 9.929099999999788e-05, 9.90409...</msg>
<status status="PASS" starttime="20201029 18:18:51.343" endtime="20201029 18:18:51.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.352" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 18:18:51.351" endtime="20201029 18:18:51.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.354" level="INFO">VALUE: [9.951400000000193e-05, 9.943100000000052e-05, 9.918100000000027e-05, 9.913800000000209e-05, 9.88609999999987e-05, 9.975000000000261e-05, 9.927700000000178e-05, 9.929099999999788e-05, 9.904099999999763e-05, 9.95280000000015e-05, 9.919400000000037e-05, 9.879200000000032e-05, 9.894400000000012e-05, 9.959699999999988e-05, 9.876400000000118e-05, 9.919499999999984e-05, 9.88059999999999e-05, 9.9334000000003e-05, 9.893100000000002e-05, 9.9028000000001e-05, 9.906900000000024e-05, 9.958299999999684e-05, 9.92219999999995e-05, 9.948599999999932e-05, 9.915300000000113e-05, 9.94999999999989e-05, 9.955600000000064e-05, 9.951399999999846e-05, 9.962499999999902e-05, 9.955600000000064e-05, 9.94860000000028e-05, 9.931999999999996e-05, 9.944500000000009e-05, 9.93479999999991e-05, 9.918100000000027e-05, 9.9028000000001e-05, 9.883399999999903e-05, 9.876299999999824e-05, 9.955500000000117e-05, 9.938900000000181e-05, 9.912500000000199e-05, 9.94999999999989e-05, 9.944400000000062e-05, 9.965300000000163e-05, 9.906999999999971e-05, 9.940299999999791e-05, 9.894499999999959e-05, 9.931999999999996e-05, 9.904200000000057e-05, 9.876400000000118e-05]</msg>
<status status="PASS" starttime="20201029 18:18:51.353" endtime="20201029 18:18:51.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.348" endtime="20201029 18:18:51.356"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:51.360" endtime="20201029 18:18:51.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.358" endtime="20201029 18:18:51.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.357" endtime="20201029 18:18:51.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.996" endtime="20201029 18:18:51.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.995" endtime="20201029 18:18:51.381"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.390" endtime="20201029 18:18:51.410"></status>
</kw>
<msg timestamp="20201029 18:18:51.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.388" endtime="20201029 18:18:51.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.411" endtime="20201029 18:18:51.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.414" endtime="20201029 18:18:51.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.386" endtime="20201029 18:18:51.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.384" endtime="20201029 18:18:51.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.423" endtime="20201029 18:18:51.710"></status>
</kw>
<msg timestamp="20201029 18:18:51.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022666861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022766806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.422" endtime="20201029 18:18:51.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022666861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022766806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.715" endtime="20201029 18:18:51.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.723" endtime="20201029 18:18:51.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.419" endtime="20201029 18:18:51.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.417" endtime="20201029 18:18:51.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:51.730" level="INFO">${RESULT} = [{'diff': 9.994500000000059e-05}, {'diff': 0.00010059700000000088}, {'diff': 9.995800000000069e-05}, {'diff': 0.00010013900000000256}, {'diff': 0.00010004200000000157}, {'diff': 9.98609999999997e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:51.727" endtime="20201029 18:18:51.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:51.734" level="INFO">${ACCURACY} = {'diff': [9.994500000000059e-05, 0.00010059700000000088, 9.995800000000069e-05, 0.00010013900000000256, 0.00010004200000000157, 9.98609999999997e-05, 9.994500000000059e-05, 0.00010045900000000066, 0.0...</msg>
<status status="PASS" starttime="20201029 18:18:51.731" endtime="20201029 18:18:51.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.738" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 18:18:51.737" endtime="20201029 18:18:51.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.741" level="INFO">VALUE: [9.994500000000059e-05, 0.00010059700000000088, 9.995800000000069e-05, 0.00010013900000000256, 0.00010004200000000157, 9.98609999999997e-05, 9.994500000000059e-05, 0.00010045900000000066, 0.00010061100000000045, 9.977800000000175e-05, 9.998599999999983e-05, 9.987500000000274e-05, 0.00010075000000000014, 0.00010038799999999987, 0.00010023600000000008, 0.00010051399999999946, 0.00010048600000000033, 0.00010052799999999903, 0.00010031900000000149, 9.99999999999994e-05, 0.00010062500000000002, 0.00010047199999999729, 0.00010020900000000041, 0.00010030599999999792, 0.00010056899999999827, 9.998599999999983e-05, 0.00010044500000000109, 0.0001004869999999998, 0.00010024999999999964, 0.00010029099999999888, 0.00010061100000000045, 0.00010054099999999913, 9.991600000000198e-05, 0.00010056899999999827, 0.00010004200000000157, 0.00010055600000000164, 0.0001004999999999999, 0.0001004999999999999, 9.982000000000046e-05, 0.00010051400000000293, 0.00010043099999999805, 0.000100028000000002, 0.00010015299999999866, 0.000100415999999999, 0.00010054099999999913, 0.00010037499999999977, 0.00010045800000000119, 0.00010027699999999931, 0.00010058300000000131, 0.00010004200000000157]</msg>
<status status="PASS" starttime="20201029 18:18:51.739" endtime="20201029 18:18:51.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.735" endtime="20201029 18:18:51.742"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:51.746" endtime="20201029 18:18:51.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.744" endtime="20201029 18:18:51.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.743" endtime="20201029 18:18:51.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.382" endtime="20201029 18:18:51.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.381" endtime="20201029 18:18:51.767"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.776" endtime="20201029 18:18:51.796"></status>
</kw>
<msg timestamp="20201029 18:18:51.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.774" endtime="20201029 18:18:51.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.798" endtime="20201029 18:18:51.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.800" endtime="20201029 18:18:51.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.772" endtime="20201029 18:18:51.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.770" endtime="20201029 18:18:51.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.809" endtime="20201029 18:18:52.095"></status>
</kw>
<msg timestamp="20201029 18:18:52.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023832681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023934389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.808" endtime="20201029 18:18:52.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023832681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023934389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.100" endtime="20201029 18:18:52.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.108" endtime="20201029 18:18:52.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.805" endtime="20201029 18:18:52.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.804" endtime="20201029 18:18:52.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:52.115" level="INFO">${RESULT} = [{'diff': 0.00010170799999999897}, {'diff': 0.00010154100000000013}, {'diff': 0.000101416}, {'diff': 0.00010140299999999991}, {'diff': 0.0001011670000000027}, {'diff': 0.00010087500000000027}, {'diff'...</msg>
<status status="PASS" starttime="20201029 18:18:52.111" endtime="20201029 18:18:52.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:52.119" level="INFO">${ACCURACY} = {'diff': [0.00010170799999999897, 0.00010154100000000013, 0.000101416, 0.00010140299999999991, 0.0001011670000000027, 0.00010087500000000027, 0.00010158299999999884, 0.00010143100000000252, 0.00010126...</msg>
<status status="PASS" starttime="20201029 18:18:52.116" endtime="20201029 18:18:52.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.124" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 18:18:52.123" endtime="20201029 18:18:52.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.126" level="INFO">VALUE: [0.00010170799999999897, 0.00010154100000000013, 0.000101416, 0.00010140299999999991, 0.0001011670000000027, 0.00010087500000000027, 0.00010158299999999884, 0.00010143100000000252, 0.00010126400000000021, 0.00010126400000000021, 0.00010140299999999991, 0.00010138900000000034, 0.00010126400000000021, 0.00010155599999999917, 0.00010138900000000034, 0.00010104099999999963, 0.00010123600000000108, 0.00010144399999999915, 0.00010076399999999971, 0.00010101399999999996, 0.00010169400000000287, 0.00010083399999999756, 0.00010108300000000181, 0.00010102799999999953, 0.00010075000000000014, 0.00010105600000000214, 0.00010155599999999917, 0.00010147199999999829, 0.0001015000000000009, 0.00010087500000000027, 0.00010090299999999941, 0.00010134699999999816, 0.00010094399999999865, 0.00010131900000000249, 0.00010127799999999978, 0.00010109700000000138, 0.00010142999999999958, 0.00010162499999999755, 0.00010141700000000295, 0.00010119400000000237, 0.00010115299999999966, 0.00010129199999999935, 0.00010112499999999705, 0.00010112500000000052, 0.00010093100000000202, 0.00010111100000000095, 0.0001009870000000003, 0.0001013879999999974, 0.00010119400000000237, 0.00010144399999999915]</msg>
<status status="PASS" starttime="20201029 18:18:52.125" endtime="20201029 18:18:52.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.120" endtime="20201029 18:18:52.128"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:52.132" endtime="20201029 18:18:52.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.131" endtime="20201029 18:18:52.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.130" endtime="20201029 18:18:52.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.768" endtime="20201029 18:18:52.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.767" endtime="20201029 18:18:52.153"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.162" endtime="20201029 18:18:52.181"></status>
</kw>
<msg timestamp="20201029 18:18:52.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.160" endtime="20201029 18:18:52.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.183" endtime="20201029 18:18:52.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.185" endtime="20201029 18:18:52.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.158" endtime="20201029 18:18:52.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.155" endtime="20201029 18:18:52.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.194" endtime="20201029 18:18:52.480"></status>
</kw>
<msg timestamp="20201029 18:18:52.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021943889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022046514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.193" endtime="20201029 18:18:52.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021943889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022046514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.484" endtime="20201029 18:18:52.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.492" endtime="20201029 18:18:52.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.190" endtime="20201029 18:18:52.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.189" endtime="20201029 18:18:52.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:52.499" level="INFO">${RESULT} = [{'diff': 0.00010262499999999855}, {'diff': 0.00010233299999999959}, {'diff': 0.00010234699999999916}, {'diff': 0.00010187500000000127}, {'diff': 0.00010233299999999959}, {'diff': 0.000102624999999998...</msg>
<status status="PASS" starttime="20201029 18:18:52.496" endtime="20201029 18:18:52.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:52.504" level="INFO">${ACCURACY} = {'diff': [0.00010262499999999855, 0.00010233299999999959, 0.00010234699999999916, 0.00010187500000000127, 0.00010233299999999959, 0.00010262499999999855, 0.00010220799999999947, 0.00010184699999999866...</msg>
<status status="PASS" starttime="20201029 18:18:52.500" endtime="20201029 18:18:52.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.509" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 18:18:52.508" endtime="20201029 18:18:52.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.511" level="INFO">VALUE: [0.00010262499999999855, 0.00010233299999999959, 0.00010234699999999916, 0.00010187500000000127, 0.00010233299999999959, 0.00010262499999999855, 0.00010220799999999947, 0.00010184699999999866, 0.00010261099999999898, 0.00010176400000000071, 0.00010261100000000245, 0.00010230500000000045, 0.00010193099999999955, 0.00010229200000000035, 0.00010255499999999723, 0.00010252799999999757, 0.00010245799999999972, 0.00010187500000000127, 0.0001021939999999999, 0.00010186099999999823, 0.0001025000000000019, 0.00010202800000000053, 0.00010229200000000035, 0.00010209699999999891, 0.00010225000000000165, 0.00010195800000000269, 0.00010256999999999974, 0.00010225000000000165, 0.00010176400000000071, 0.00010258399999999931, 0.00010252799999999757, 0.00010252799999999757, 0.00010227699999999784, 0.00010259699999999941, 0.00010243000000000058, 0.00010176400000000071, 0.00010202800000000053, 0.00010233299999999959, 0.00010202800000000053, 0.00010225000000000165, 0.00010258300000000331, 0.00010197200000000226, 0.00010232000000000296, 0.0001020139999999975, 0.00010191699999999998, 0.00010219499999999937, 0.00010184699999999866, 0.00010261099999999898, 0.0001019160000000005, 0.00010188900000000084]</msg>
<status status="PASS" starttime="20201029 18:18:52.510" endtime="20201029 18:18:52.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.505" endtime="20201029 18:18:52.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:52.517" endtime="20201029 18:18:52.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.516" endtime="20201029 18:18:52.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.514" endtime="20201029 18:18:52.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.154" endtime="20201029 18:18:52.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.153" endtime="20201029 18:18:52.538"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.547" endtime="20201029 18:18:52.567"></status>
</kw>
<msg timestamp="20201029 18:18:52.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.545" endtime="20201029 18:18:52.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.568" endtime="20201029 18:18:52.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.571" endtime="20201029 18:18:52.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.542" endtime="20201029 18:18:52.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.540" endtime="20201029 18:18:52.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.580" endtime="20201029 18:18:52.866"></status>
</kw>
<msg timestamp="20201029 18:18:52.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022084056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022187514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.578" endtime="20201029 18:18:52.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022084056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022187514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.871" endtime="20201029 18:18:52.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.879" endtime="20201029 18:18:52.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.576" endtime="20201029 18:18:52.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.574" endtime="20201029 18:18:52.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:52.886" level="INFO">${RESULT} = [{'diff': 0.00010345799999999725}, {'diff': 0.00010329199999999789}, {'diff': 0.00010363899999999912}, {'diff': 0.00010341599999999854}, {'diff': 0.00010349999999999943}, {'diff': 0.000102805000000000...</msg>
<status status="PASS" starttime="20201029 18:18:52.883" endtime="20201029 18:18:52.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:52.890" level="INFO">${ACCURACY} = {'diff': [0.00010345799999999725, 0.00010329199999999789, 0.00010363899999999912, 0.00010341599999999854, 0.00010349999999999943, 0.00010280500000000095, 0.0001035689999999978, 0.00010280500000000095,...</msg>
<status status="PASS" starttime="20201029 18:18:52.887" endtime="20201029 18:18:52.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.895" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 18:18:52.894" endtime="20201029 18:18:52.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.897" level="INFO">VALUE: [0.00010345799999999725, 0.00010329199999999789, 0.00010363899999999912, 0.00010341599999999854, 0.00010349999999999943, 0.00010280500000000095, 0.0001035689999999978, 0.00010280500000000095, 0.00010347200000000029, 0.000103207999999997, 0.000103513999999999, 0.0001028610000000027, 0.00010374999999999968, 0.00010322299999999951, 0.0001031940000000009, 0.00010282, 0.0001035420000000016, 0.0001033749999999993, 0.0001031940000000009, 0.00010334700000000016, 0.00010277699999999834, 0.00010334700000000016, 0.00010301400000000197, 0.00010280500000000095, 0.00010366700000000173, 0.00010284700000000313, 0.00010349999999999943, 0.00010348599999999986, 0.00010311099999999948, 0.00010295899999999969, 0.00010327800000000179, 0.00010313899999999862, 0.00010294500000000012, 0.00010330499999999798, 0.00010299999999999893, 0.00010336099999999973, 0.00010284699999999966, 0.000103513999999999, 0.00010306900000000077, 0.00010342999999999811, 0.00010283300000000009, 0.00010281900000000052, 0.00010357000000000074, 0.00010283300000000009, 0.00010302800000000154, 0.00010307000000000024, 0.00010280600000000042, 0.0001029870000000023, 0.00010308300000000034, 0.00010290200000000194]</msg>
<status status="PASS" starttime="20201029 18:18:52.896" endtime="20201029 18:18:52.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.891" endtime="20201029 18:18:52.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:52.903" endtime="20201029 18:18:52.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.901" endtime="20201029 18:18:52.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.900" endtime="20201029 18:18:52.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.539" endtime="20201029 18:18:52.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.538" endtime="20201029 18:18:52.923"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.933" endtime="20201029 18:18:52.955"></status>
</kw>
<msg timestamp="20201029 18:18:52.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.931" endtime="20201029 18:18:52.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.957" endtime="20201029 18:18:52.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.959" endtime="20201029 18:18:52.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.928" endtime="20201029 18:18:52.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.926" endtime="20201029 18:18:52.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.969" endtime="20201029 18:18:53.272"></status>
</kw>
<msg timestamp="20201029 18:18:53.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025880208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025984111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.967" endtime="20201029 18:18:53.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025880208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025984111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.276" endtime="20201029 18:18:53.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.284" endtime="20201029 18:18:53.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.964" endtime="20201029 18:18:53.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.963" endtime="20201029 18:18:53.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:53.291" level="INFO">${RESULT} = [{'diff': 0.00010390300000000241}, {'diff': 0.0001038749999999998}, {'diff': 0.00010383400000000056}, {'diff': 0.0001045559999999987}, {'diff': 0.00010411200000000342}, {'diff': 0.00010404099999999916...</msg>
<status status="PASS" starttime="20201029 18:18:53.288" endtime="20201029 18:18:53.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:53.295" level="INFO">${ACCURACY} = {'diff': [0.00010390300000000241, 0.0001038749999999998, 0.00010383400000000056, 0.0001045559999999987, 0.00010411200000000342, 0.00010404099999999916, 0.00010417999999999886, 0.00010426399999999975, ...</msg>
<status status="PASS" starttime="20201029 18:18:53.292" endtime="20201029 18:18:53.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.300" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 18:18:53.299" endtime="20201029 18:18:53.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.303" level="INFO">VALUE: [0.00010390300000000241, 0.0001038749999999998, 0.00010383400000000056, 0.0001045559999999987, 0.00010411200000000342, 0.00010404099999999916, 0.00010417999999999886, 0.00010426399999999975, 0.00010413899999999962, 0.00010438899999999987, 0.00010399999999999993, 0.00010418099999999833, 0.00010394399999999818, 0.00010452799999999957, 0.00010456999999999828, 0.00010404199999999864, 0.00010448600000000086, 0.00010423700000000008, 0.00010412500000000005, 0.00010395800000000122, 0.00010427699999999984, 0.00010399999999999993, 0.00010399999999999993, 0.00010425000000000018, 0.00010444400000000215, 0.0001040550000000022, 0.00010463900000000012, 0.00010429199999999889, 0.000104514, 0.00010390299999999894, 0.00010391700000000198, 0.00010434800000000063, 0.00010452800000000304, 0.00010412500000000005, 0.00010383400000000056, 0.0001040139999999995, 0.00010395800000000122, 0.00010450000000000043, 0.00010462500000000055, 0.00010393000000000208, 0.00010419399999999843, 0.00010377800000000229, 0.00010444400000000215, 0.0001038749999999998, 0.00010452799999999957, 0.00010420800000000147, 0.00010422199999999757, 0.00010470900000000144, 0.00010444499999999815, 0.00010397300000000026]</msg>
<status status="PASS" starttime="20201029 18:18:53.301" endtime="20201029 18:18:53.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.296" endtime="20201029 18:18:53.310"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:53.314" endtime="20201029 18:18:53.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.312" endtime="20201029 18:18:53.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.311" endtime="20201029 18:18:53.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.924" endtime="20201029 18:18:53.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.924" endtime="20201029 18:18:53.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:14.702" endtime="20201029 18:18:53.335"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:14.633" endtime="20201029 18:18:53.336" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:53.343" endtime="20201029 18:18:53.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.341" endtime="20201029 18:18:53.363"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.376" endtime="20201029 18:18:53.390"></status>
</kw>
<msg timestamp="20201029 18:18:53.390" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.375" endtime="20201029 18:18:53.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.393" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.391" endtime="20201029 18:18:53.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.396" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:53.394" endtime="20201029 18:18:53.396"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:53.372" endtime="20201029 18:18:53.397"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:53.369" endtime="20201029 18:18:53.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.368" endtime="20201029 18:18:53.398"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:53.402" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:53.401" endtime="20201029 18:18:53.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.399" endtime="20201029 18:18:53.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.367" endtime="20201029 18:18:53.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.367" endtime="20201029 18:18:53.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.404" endtime="20201029 18:18:53.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.365" endtime="20201029 18:18:53.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.363" endtime="20201029 18:18:53.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.340" endtime="20201029 18:18:53.407"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.418" endtime="20201029 18:18:53.434"></status>
</kw>
<msg timestamp="20201029 18:18:53.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.416" endtime="20201029 18:18:53.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.436" endtime="20201029 18:18:53.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.439" endtime="20201029 18:18:53.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.412" endtime="20201029 18:18:53.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.410" endtime="20201029 18:18:53.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.448" endtime="20201029 18:18:53.733"></status>
</kw>
<msg timestamp="20201029 18:18:53.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068085333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068107778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.447" endtime="20201029 18:18:53.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068085333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068107778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.737" endtime="20201029 18:18:53.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.746" endtime="20201029 18:18:53.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.444" endtime="20201029 18:18:53.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.442" endtime="20201029 18:18:53.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:53.753" level="INFO">${RESULT} = [{'diff': 2.244499999999594e-05}, {'diff': 2.2082999999992192e-05}, {'diff': 2.1778000000000075e-05}, {'diff': 2.1986000000001615e-05}, {'diff': 2.208300000000607e-05}, {'diff': 2.240300000000417e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:53.749" endtime="20201029 18:18:53.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:53.757" level="INFO">${ACCURACY} = {'diff': [2.244499999999594e-05, 2.2082999999992192e-05, 2.1778000000000075e-05, 2.1986000000001615e-05, 2.208300000000607e-05, 2.240300000000417e-05, 2.2333999999998855e-05, 2.194499999999544e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:18:53.754" endtime="20201029 18:18:53.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.763" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 18:18:53.762" endtime="20201029 18:18:53.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.765" level="INFO">VALUE: [2.244499999999594e-05, 2.2082999999992192e-05, 2.1778000000000075e-05, 2.1986000000001615e-05, 2.208300000000607e-05, 2.240300000000417e-05, 2.2333999999998855e-05, 2.194499999999544e-05, 2.2263999999994066e-05, 2.194499999999544e-05, 2.1555999999992026e-05, 2.193100000000281e-05, 2.2041999999999895e-05, 2.2250000000001435e-05, 2.2028000000007264e-05, 2.2250000000001435e-05, 2.2347999999991486e-05, 2.245899999998857e-05, 2.1778000000000075e-05, 2.236099999999852e-05, 2.244499999999594e-05, 2.188899999999716e-05, 2.1778000000000075e-05, 2.2055999999992526e-05, 2.238899999999766e-05, 2.20969999999987e-05, 2.2473000000008958e-05, 2.206900000001344e-05, 2.183299999999888e-05, 2.1930000000003336e-05, 2.2458000000002976e-05, 2.230500000000024e-05, 2.1971999999995107e-05, 2.1971999999995107e-05, 2.2471999999995607e-05, 2.186099999999802e-05, 2.256900000000006e-05, 2.1986000000001615e-05, 2.2471999999995607e-05, 2.2443999999996467e-05, 2.2222000000002295e-05, 2.2014000000000755e-05, 2.2514000000001255e-05, 2.2374999999991152e-05, 2.1958000000002476e-05, 2.2278000000000575e-05, 2.1790999999993232e-05, 2.2179999999996647e-05, 2.2514000000001255e-05, 2.2138999999990472e-05]</msg>
<status status="PASS" starttime="20201029 18:18:53.764" endtime="20201029 18:18:53.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.758" endtime="20201029 18:18:53.766"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:53.770" endtime="20201029 18:18:53.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.769" endtime="20201029 18:18:53.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.767" endtime="20201029 18:18:53.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.408" endtime="20201029 18:18:53.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.408" endtime="20201029 18:18:53.791"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.801" endtime="20201029 18:18:53.817"></status>
</kw>
<msg timestamp="20201029 18:18:53.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.799" endtime="20201029 18:18:53.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.818" endtime="20201029 18:18:53.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.821" endtime="20201029 18:18:53.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.796" endtime="20201029 18:18:53.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.794" endtime="20201029 18:18:53.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.831" endtime="20201029 18:18:54.119"></status>
</kw>
<msg timestamp="20201029 18:18:54.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024028833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024051403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.829" endtime="20201029 18:18:54.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024028833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024051403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.124" endtime="20201029 18:18:54.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.133" endtime="20201029 18:18:54.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.826" endtime="20201029 18:18:54.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.824" endtime="20201029 18:18:54.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:54.139" level="INFO">${RESULT} = [{'diff': 2.2569999999999535e-05}, {'diff': 2.2000000000001185e-05}, {'diff': 2.191699999999977e-05}, {'diff': 2.2292000000000145e-05}, {'diff': 2.218099999999959e-05}, {'diff': 2.244499999999941e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:54.136" endtime="20201029 18:18:54.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:54.145" level="INFO">${ACCURACY} = {'diff': [2.2569999999999535e-05, 2.2000000000001185e-05, 2.191699999999977e-05, 2.2292000000000145e-05, 2.218099999999959e-05, 2.244499999999941e-05, 2.191699999999977e-05, 2.211100000000174e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 18:18:54.140" endtime="20201029 18:18:54.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.149" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 18:18:54.148" endtime="20201029 18:18:54.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.152" level="INFO">VALUE: [2.2569999999999535e-05, 2.2000000000001185e-05, 2.191699999999977e-05, 2.2292000000000145e-05, 2.218099999999959e-05, 2.244499999999941e-05, 2.191699999999977e-05, 2.211100000000174e-05, 2.243099999999984e-05, 2.172300000000127e-05, 2.2499999999998216e-05, 2.2207999999999256e-05, 2.1805999999999215e-05, 2.238899999999766e-05, 2.2250000000001435e-05, 2.195899999999848e-05, 2.245899999999898e-05, 2.187500000000106e-05, 2.204100000000042e-05, 2.254100000000092e-05, 2.1916000000000296e-05, 2.2499999999998216e-05, 2.2166000000000546e-05, 2.2152000000000976e-05, 2.2472000000002545e-05, 2.230500000000024e-05, 2.2000000000001185e-05, 2.2471999999999076e-05, 2.162499999999734e-05, 2.158299999999863e-05, 2.2499999999998216e-05, 2.2443999999999936e-05, 2.2180000000000116e-05, 2.159700000000167e-05, 2.2235999999998396e-05, 2.2028000000000325e-05, 2.215300000000045e-05, 2.205499999999999e-05, 2.180499999999974e-05, 2.2264000000001005e-05, 2.184699999999845e-05, 2.159700000000167e-05, 2.241700000000027e-05, 2.236099999999852e-05, 2.205499999999999e-05, 2.212500000000131e-05, 2.205499999999999e-05, 2.2430000000000366e-05, 2.1834000000001824e-05, 2.2305999999999715e-05]</msg>
<status status="PASS" starttime="20201029 18:18:54.151" endtime="20201029 18:18:54.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.146" endtime="20201029 18:18:54.153"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:54.157" endtime="20201029 18:18:54.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.155" endtime="20201029 18:18:54.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.154" endtime="20201029 18:18:54.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.792" endtime="20201029 18:18:54.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.792" endtime="20201029 18:18:54.178"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.187" endtime="20201029 18:18:54.203"></status>
</kw>
<msg timestamp="20201029 18:18:54.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.186" endtime="20201029 18:18:54.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.205" endtime="20201029 18:18:54.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.207" endtime="20201029 18:18:54.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.183" endtime="20201029 18:18:54.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.180" endtime="20201029 18:18:54.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.217" endtime="20201029 18:18:54.502"></status>
</kw>
<msg timestamp="20201029 18:18:54.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023021736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023044264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.215" endtime="20201029 18:18:54.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023021736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023044264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.506" endtime="20201029 18:18:54.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.515" endtime="20201029 18:18:54.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.212" endtime="20201029 18:18:54.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.211" endtime="20201029 18:18:54.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:54.522" level="INFO">${RESULT} = [{'diff': 2.2527999999997356e-05}, {'diff': 2.186099999999802e-05}, {'diff': 2.2097999999998175e-05}, {'diff': 2.218099999999959e-05}, {'diff': 2.191699999999977e-05}, {'diff': 2.218099999999959e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:54.519" endtime="20201029 18:18:54.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:54.526" level="INFO">${ACCURACY} = {'diff': [2.2527999999997356e-05, 2.186099999999802e-05, 2.2097999999998175e-05, 2.218099999999959e-05, 2.191699999999977e-05, 2.218099999999959e-05, 2.243099999999984e-05, 2.258299999999963e-05, 2.18...</msg>
<status status="PASS" starttime="20201029 18:18:54.523" endtime="20201029 18:18:54.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.531" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 18:18:54.530" endtime="20201029 18:18:54.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.533" level="INFO">VALUE: [2.2527999999997356e-05, 2.186099999999802e-05, 2.2097999999998175e-05, 2.218099999999959e-05, 2.191699999999977e-05, 2.218099999999959e-05, 2.243099999999984e-05, 2.258299999999963e-05, 2.188899999999716e-05, 2.236099999999852e-05, 2.243099999999984e-05, 2.2098000000001644e-05, 2.1527999999999825e-05, 2.237500000000156e-05, 2.2320000000002754e-05, 2.1847999999997925e-05, 2.2236000000001865e-05, 2.2278000000000575e-05, 2.251300000000178e-05, 2.1792000000003114e-05, 2.184699999999845e-05, 2.2112000000001214e-05, 2.2292000000000145e-05, 2.17770000000006e-05, 2.2554999999997022e-05, 2.183299999999888e-05, 2.233299999999938e-05, 2.2430000000000366e-05, 2.2472000000002545e-05, 2.1929999999999866e-05, 2.2152000000000976e-05, 2.234699999999895e-05, 2.158299999999863e-05, 2.194499999999891e-05, 2.163900000000038e-05, 2.202700000000085e-05, 2.2443999999999936e-05, 2.2263999999997536e-05, 2.208299999999913e-05, 2.234699999999895e-05, 2.230500000000024e-05, 2.1986000000001615e-05, 2.181899999999931e-05, 2.1971999999998576e-05, 2.1971999999998576e-05, 2.187500000000106e-05, 2.2514000000001255e-05, 2.19030000000002e-05, 2.2069999999999035e-05, 2.238899999999766e-05]</msg>
<status status="PASS" starttime="20201029 18:18:54.532" endtime="20201029 18:18:54.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.527" endtime="20201029 18:18:54.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:54.538" endtime="20201029 18:18:54.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.537" endtime="20201029 18:18:54.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.535" endtime="20201029 18:18:54.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.179" endtime="20201029 18:18:54.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.178" endtime="20201029 18:18:54.560"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.569" endtime="20201029 18:18:54.584"></status>
</kw>
<msg timestamp="20201029 18:18:54.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.567" endtime="20201029 18:18:54.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.586" endtime="20201029 18:18:54.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.589" endtime="20201029 18:18:54.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.564" endtime="20201029 18:18:54.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.562" endtime="20201029 18:18:54.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.598" endtime="20201029 18:18:54.883"></status>
</kw>
<msg timestamp="20201029 18:18:54.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023764333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023786486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.596" endtime="20201029 18:18:54.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023764333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023786486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.888" endtime="20201029 18:18:54.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.896" endtime="20201029 18:18:54.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.594" endtime="20201029 18:18:54.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.592" endtime="20201029 18:18:54.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:54.903" level="INFO">${RESULT} = [{'diff': 2.215300000000045e-05}, {'diff': 2.1805999999999215e-05}, {'diff': 2.236099999999852e-05}, {'diff': 2.211100000000174e-05}, {'diff': 2.193100000000281e-05}, {'diff': 2.1763999999997036e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:54.900" endtime="20201029 18:18:54.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:54.908" level="INFO">${ACCURACY} = {'diff': [2.215300000000045e-05, 2.1805999999999215e-05, 2.236099999999852e-05, 2.211100000000174e-05, 2.193100000000281e-05, 2.1763999999997036e-05, 2.1999999999997716e-05, 2.211099999999827e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 18:18:54.904" endtime="20201029 18:18:54.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.912" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 18:18:54.911" endtime="20201029 18:18:54.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.915" level="INFO">VALUE: [2.215300000000045e-05, 2.1805999999999215e-05, 2.236099999999852e-05, 2.211100000000174e-05, 2.193100000000281e-05, 2.1763999999997036e-05, 2.1999999999997716e-05, 2.211099999999827e-05, 2.2457999999999506e-05, 2.15969999999982e-05, 2.20830000000026e-05, 2.243099999999984e-05, 2.238899999999766e-05, 2.193099999999934e-05, 2.184700000000192e-05, 2.1958000000002476e-05, 2.2334000000002324e-05, 2.241700000000027e-05, 2.1999999999997716e-05, 2.2041999999999895e-05, 2.216700000000002e-05, 2.2084000000002074e-05, 2.1598000000001144e-05, 2.2041999999999895e-05, 2.2292000000000145e-05, 2.243099999999984e-05, 2.219499999999916e-05, 2.231899999999981e-05, 2.187500000000106e-05, 2.244499999999941e-05, 2.220899999999873e-05, 2.204100000000042e-05, 2.229100000000067e-05, 2.2278000000000575e-05, 2.198699999999762e-05, 2.193099999999934e-05, 2.229100000000067e-05, 2.219499999999916e-05, 2.2112000000001214e-05, 2.1999999999997716e-05, 2.230500000000024e-05, 2.1943999999999436e-05, 2.255500000000049e-05, 2.233299999999938e-05, 2.2026999999997382e-05, 2.2526999999997882e-05, 2.2013999999997286e-05, 2.236100000000199e-05, 2.215300000000045e-05, 2.2263999999997536e-05]</msg>
<status status="PASS" starttime="20201029 18:18:54.914" endtime="20201029 18:18:54.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.909" endtime="20201029 18:18:54.917"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:54.921" endtime="20201029 18:18:54.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.920" endtime="20201029 18:18:54.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.918" endtime="20201029 18:18:54.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.561" endtime="20201029 18:18:54.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.560" endtime="20201029 18:18:54.942"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.951" endtime="20201029 18:18:54.966"></status>
</kw>
<msg timestamp="20201029 18:18:54.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.949" endtime="20201029 18:18:54.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.968" endtime="20201029 18:18:54.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.970" endtime="20201029 18:18:54.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.947" endtime="20201029 18:18:54.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.944" endtime="20201029 18:18:54.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.980" endtime="20201029 18:18:55.267"></status>
</kw>
<msg timestamp="20201029 18:18:55.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02225725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022279306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:54.978" endtime="20201029 18:18:55.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02225725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022279306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:55.271" endtime="20201029 18:18:55.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.280" endtime="20201029 18:18:55.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.975" endtime="20201029 18:18:55.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.974" endtime="20201029 18:18:55.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:55.286" level="INFO">${RESULT} = [{'diff': 2.2055999999999465e-05}, {'diff': 2.2319999999999285e-05}, {'diff': 2.2319999999999285e-05}, {'diff': 2.202700000000085e-05}, {'diff': 2.1986000000001615e-05}, {'diff': 2.1778000000000075e-0...</msg>
<status status="PASS" starttime="20201029 18:18:55.283" endtime="20201029 18:18:55.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:55.292" level="INFO">${ACCURACY} = {'diff': [2.2055999999999465e-05, 2.2319999999999285e-05, 2.2319999999999285e-05, 2.202700000000085e-05, 2.1986000000001615e-05, 2.1778000000000075e-05, 2.2305999999999715e-05, 2.194499999999891e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:55.287" endtime="20201029 18:18:55.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.296" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 18:18:55.295" endtime="20201029 18:18:55.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.299" level="INFO">VALUE: [2.2055999999999465e-05, 2.2319999999999285e-05, 2.2319999999999285e-05, 2.202700000000085e-05, 2.1986000000001615e-05, 2.1778000000000075e-05, 2.2305999999999715e-05, 2.194499999999891e-05, 2.209700000000217e-05, 2.194500000000238e-05, 2.2165999999997077e-05, 2.2471999999999076e-05, 2.237499999999809e-05, 2.176300000000103e-05, 2.2194000000003156e-05, 2.183299999999888e-05, 2.237499999999809e-05, 2.226300000000153e-05, 2.2250000000001435e-05, 2.2472000000002545e-05, 2.2166000000000546e-05, 2.213900000000088e-05, 2.15969999999982e-05, 2.2514000000001255e-05, 2.204100000000042e-05, 2.236100000000199e-05, 2.161100000000124e-05, 2.2416000000000796e-05, 2.243099999999984e-05, 2.238899999999766e-05, 2.2514000000001255e-05, 2.181899999999931e-05, 2.2278000000000575e-05, 2.212499999999784e-05, 2.2485999999998646e-05, 2.218099999999959e-05, 2.216700000000002e-05, 2.1958000000002476e-05, 2.1778000000000075e-05, 2.2235999999998396e-05, 2.191699999999977e-05, 2.193099999999934e-05, 2.216700000000002e-05, 2.2041999999999895e-05, 2.1971999999998576e-05, 2.197299999999805e-05, 2.2278000000000575e-05, 2.187500000000106e-05, 2.2306000000003184e-05, 2.1735999999997896e-05]</msg>
<status status="PASS" starttime="20201029 18:18:55.297" endtime="20201029 18:18:55.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.293" endtime="20201029 18:18:55.300"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:55.304" endtime="20201029 18:18:55.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.303" endtime="20201029 18:18:55.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.301" endtime="20201029 18:18:55.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.943" endtime="20201029 18:18:55.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.942" endtime="20201029 18:18:55.325"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.334" endtime="20201029 18:18:55.349"></status>
</kw>
<msg timestamp="20201029 18:18:55.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.333" endtime="20201029 18:18:55.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.350" endtime="20201029 18:18:55.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.353" endtime="20201029 18:18:55.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.330" endtime="20201029 18:18:55.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.328" endtime="20201029 18:18:55.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.367" endtime="20201029 18:18:55.657"></status>
</kw>
<msg timestamp="20201029 18:18:55.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022356167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022378403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.361" endtime="20201029 18:18:55.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022356167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022378403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.662" endtime="20201029 18:18:55.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.671" endtime="20201029 18:18:55.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.358" endtime="20201029 18:18:55.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.356" endtime="20201029 18:18:55.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:55.680" level="INFO">${RESULT} = [{'diff': 2.2236000000001865e-05}, {'diff': 2.1791999999999645e-05}, {'diff': 2.19030000000002e-05}, {'diff': 2.2069999999999035e-05}, {'diff': 2.212500000000131e-05}, {'diff': 2.245900000000245e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:55.676" endtime="20201029 18:18:55.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:55.685" level="INFO">${ACCURACY} = {'diff': [2.2236000000001865e-05, 2.1791999999999645e-05, 2.19030000000002e-05, 2.2069999999999035e-05, 2.212500000000131e-05, 2.245900000000245e-05, 2.187499999999759e-05, 2.2041999999999895e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 18:18:55.681" endtime="20201029 18:18:55.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.690" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 18:18:55.689" endtime="20201029 18:18:55.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.692" level="INFO">VALUE: [2.2236000000001865e-05, 2.1791999999999645e-05, 2.19030000000002e-05, 2.2069999999999035e-05, 2.212500000000131e-05, 2.245900000000245e-05, 2.187499999999759e-05, 2.2041999999999895e-05, 2.229100000000067e-05, 2.237500000000156e-05, 2.212500000000131e-05, 2.2347999999998425e-05, 2.2430000000000366e-05, 2.212500000000131e-05, 2.216700000000002e-05, 2.187500000000106e-05, 2.212499999999784e-05, 2.1971999999998576e-05, 2.188900000000063e-05, 2.1902000000000726e-05, 2.22770000000011e-05, 2.1958000000002476e-05, 2.2471999999999076e-05, 2.237500000000156e-05, 2.1929999999999866e-05, 2.234700000000242e-05, 2.193099999999934e-05, 2.206899999999956e-05, 2.238899999999766e-05, 2.211099999999827e-05, 2.254100000000092e-05, 2.2540999999997452e-05, 2.2443999999999936e-05, 2.236099999999852e-05, 2.2207999999999256e-05, 2.165299999999995e-05, 2.2041999999999895e-05, 2.2264000000001005e-05, 2.190299999999673e-05, 2.184700000000192e-05, 2.20969999999987e-05, 2.180499999999974e-05, 2.2278000000000575e-05, 2.184700000000192e-05, 2.2027999999996856e-05, 2.2235999999998396e-05, 2.1750000000000935e-05, 2.234700000000242e-05, 2.2514000000001255e-05, 2.236099999999852e-05]</msg>
<status status="PASS" starttime="20201029 18:18:55.691" endtime="20201029 18:18:55.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.686" endtime="20201029 18:18:55.694"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:55.697" endtime="20201029 18:18:55.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.696" endtime="20201029 18:18:55.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.695" endtime="20201029 18:18:55.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.326" endtime="20201029 18:18:55.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.325" endtime="20201029 18:18:55.718"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.727" endtime="20201029 18:18:55.743"></status>
</kw>
<msg timestamp="20201029 18:18:55.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.725" endtime="20201029 18:18:55.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.744" endtime="20201029 18:18:55.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.747" endtime="20201029 18:18:55.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.723" endtime="20201029 18:18:55.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.721" endtime="20201029 18:18:55.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.756" endtime="20201029 18:18:56.063"></status>
</kw>
<msg timestamp="20201029 18:18:56.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023283389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02330525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:55.755" endtime="20201029 18:18:56.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023283389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02330525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:56.073" endtime="20201029 18:18:56.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.088" endtime="20201029 18:18:56.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.752" endtime="20201029 18:18:56.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.750" endtime="20201029 18:18:56.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:56.094" level="INFO">${RESULT} = [{'diff': 2.186099999999802e-05}, {'diff': 2.2207999999999256e-05}, {'diff': 2.159700000000167e-05}, {'diff': 2.1972000000002045e-05}, {'diff': 2.1972000000002045e-05}, {'diff': 2.191699999999977e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:56.091" endtime="20201029 18:18:56.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:56.099" level="INFO">${ACCURACY} = {'diff': [2.186099999999802e-05, 2.2207999999999256e-05, 2.159700000000167e-05, 2.1972000000002045e-05, 2.1972000000002045e-05, 2.191699999999977e-05, 2.183299999999888e-05, 2.2028000000000325e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:18:56.095" endtime="20201029 18:18:56.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.103" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 18:18:56.102" endtime="20201029 18:18:56.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.106" level="INFO">VALUE: [2.186099999999802e-05, 2.2207999999999256e-05, 2.159700000000167e-05, 2.1972000000002045e-05, 2.1972000000002045e-05, 2.191699999999977e-05, 2.183299999999888e-05, 2.2028000000000325e-05, 2.1778000000000075e-05, 2.2555999999999965e-05, 2.1792000000003114e-05, 2.2499999999998216e-05, 2.220899999999873e-05, 2.2041999999999895e-05, 2.241700000000027e-05, 2.191699999999977e-05, 2.2069999999999035e-05, 2.2026999999997382e-05, 2.1778000000000075e-05, 2.1820000000002254e-05, 2.1985999999998146e-05, 2.194500000000238e-05, 2.2471999999999076e-05, 2.187499999999759e-05, 2.237500000000156e-05, 2.238900000000113e-05, 2.161100000000124e-05, 2.1584000000001574e-05, 2.2348000000001894e-05, 2.1833999999998355e-05, 2.2569999999999535e-05, 2.2402000000001226e-05, 2.2152000000000976e-05, 2.1721999999998326e-05, 2.2500000000001685e-05, 2.202700000000085e-05, 2.195899999999848e-05, 2.219499999999916e-05, 2.2555999999999965e-05, 2.255500000000049e-05, 2.237499999999809e-05, 2.1652000000000476e-05, 2.2249999999997966e-05, 2.2207999999999256e-05, 2.161099999999777e-05, 2.162499999999734e-05, 2.2485999999998646e-05, 2.187500000000106e-05, 2.181899999999931e-05, 2.205499999999999e-05]</msg>
<status status="PASS" starttime="20201029 18:18:56.104" endtime="20201029 18:18:56.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.099" endtime="20201029 18:18:56.108"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:56.112" endtime="20201029 18:18:56.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.110" endtime="20201029 18:18:56.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.109" endtime="20201029 18:18:56.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.719" endtime="20201029 18:18:56.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.719" endtime="20201029 18:18:56.132"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.141" endtime="20201029 18:18:56.156"></status>
</kw>
<msg timestamp="20201029 18:18:56.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.140" endtime="20201029 18:18:56.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.158" endtime="20201029 18:18:56.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.160" endtime="20201029 18:18:56.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.137" endtime="20201029 18:18:56.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.135" endtime="20201029 18:18:56.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.169" endtime="20201029 18:18:56.456"></status>
</kw>
<msg timestamp="20201029 18:18:56.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022128486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022150347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.168" endtime="20201029 18:18:56.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022128486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022150347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.461" endtime="20201029 18:18:56.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.469" endtime="20201029 18:18:56.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.165" endtime="20201029 18:18:56.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.163" endtime="20201029 18:18:56.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:56.476" level="INFO">${RESULT} = [{'diff': 2.186100000000149e-05}, {'diff': 2.2208000000002726e-05}, {'diff': 2.163900000000038e-05}, {'diff': 2.2500000000001685e-05}, {'diff': 2.19030000000002e-05}, {'diff': 2.2457999999999506e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:56.472" endtime="20201029 18:18:56.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:56.483" level="INFO">${ACCURACY} = {'diff': [2.186100000000149e-05, 2.2208000000002726e-05, 2.163900000000038e-05, 2.2500000000001685e-05, 2.19030000000002e-05, 2.2457999999999506e-05, 2.243099999999984e-05, 2.2014000000000755e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 18:18:56.477" endtime="20201029 18:18:56.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.488" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 18:18:56.486" endtime="20201029 18:18:56.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.490" level="INFO">VALUE: [2.186100000000149e-05, 2.2208000000002726e-05, 2.163900000000038e-05, 2.2500000000001685e-05, 2.19030000000002e-05, 2.2457999999999506e-05, 2.243099999999984e-05, 2.2014000000000755e-05, 2.2236000000001865e-05, 2.2499999999998216e-05, 2.2222000000002295e-05, 2.237499999999809e-05, 2.1819999999998785e-05, 2.194499999999891e-05, 2.2028000000000325e-05, 2.243099999999984e-05, 2.2443999999999936e-05, 2.2055999999999465e-05, 2.237500000000156e-05, 2.236100000000199e-05, 2.184699999999845e-05, 2.2305999999999715e-05, 2.1805999999999215e-05, 2.256900000000006e-05, 2.2028000000000325e-05, 2.2499999999998216e-05, 2.2541999999996926e-05, 2.2278000000000575e-05, 2.1805999999999215e-05, 2.216700000000002e-05, 2.211100000000174e-05, 2.2055999999999465e-05, 2.2097999999998175e-05, 2.19030000000002e-05, 2.2305999999999715e-05, 2.2542000000000395e-05, 2.243100000000331e-05, 2.2083999999998605e-05, 2.212499999999784e-05, 2.198700000000109e-05, 2.2457999999999506e-05, 2.19030000000002e-05, 2.194500000000238e-05, 2.1971999999998576e-05, 2.161100000000124e-05, 2.187499999999759e-05, 2.213900000000088e-05, 2.251300000000178e-05, 2.204100000000042e-05, 2.211100000000174e-05]</msg>
<status status="PASS" starttime="20201029 18:18:56.489" endtime="20201029 18:18:56.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.484" endtime="20201029 18:18:56.491"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:56.495" endtime="20201029 18:18:56.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.494" endtime="20201029 18:18:56.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.492" endtime="20201029 18:18:56.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.133" endtime="20201029 18:18:56.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.133" endtime="20201029 18:18:56.516"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.525" endtime="20201029 18:18:56.542"></status>
</kw>
<msg timestamp="20201029 18:18:56.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.523" endtime="20201029 18:18:56.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.544" endtime="20201029 18:18:56.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.546" endtime="20201029 18:18:56.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.520" endtime="20201029 18:18:56.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.518" endtime="20201029 18:18:56.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.555" endtime="20201029 18:18:56.843"></status>
</kw>
<msg timestamp="20201029 18:18:56.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024076208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024097972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.554" endtime="20201029 18:18:56.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024076208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024097972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.847" endtime="20201029 18:18:56.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.857" endtime="20201029 18:18:56.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.551" endtime="20201029 18:18:56.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.550" endtime="20201029 18:18:56.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:56.867" level="INFO">${RESULT} = [{'diff': 2.1763999999997036e-05}, {'diff': 2.2528000000000825e-05}, {'diff': 2.161099999999777e-05}, {'diff': 2.215300000000045e-05}, {'diff': 2.2485999999998646e-05}, {'diff': 2.161100000000124e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:56.862" endtime="20201029 18:18:56.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:56.872" level="INFO">${ACCURACY} = {'diff': [2.1763999999997036e-05, 2.2528000000000825e-05, 2.161099999999777e-05, 2.215300000000045e-05, 2.2485999999998646e-05, 2.161100000000124e-05, 2.2207999999999256e-05, 2.2472000000002545e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:18:56.868" endtime="20201029 18:18:56.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.878" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 18:18:56.877" endtime="20201029 18:18:56.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.881" level="INFO">VALUE: [2.1763999999997036e-05, 2.2528000000000825e-05, 2.161099999999777e-05, 2.215300000000045e-05, 2.2485999999998646e-05, 2.161100000000124e-05, 2.2207999999999256e-05, 2.2472000000002545e-05, 2.1791999999999645e-05, 2.244499999999941e-05, 2.2249999999997966e-05, 2.194500000000238e-05, 2.234699999999895e-05, 2.2236000000001865e-05, 2.181900000000278e-05, 2.208299999999913e-05, 2.19030000000002e-05, 2.15969999999982e-05, 2.1791999999999645e-05, 2.229100000000067e-05, 2.184700000000192e-05, 2.2555999999999965e-05, 2.2069999999999035e-05, 2.162499999999734e-05, 2.191699999999977e-05, 2.2264000000001005e-05, 2.237499999999809e-05, 2.162500000000081e-05, 2.2000000000001185e-05, 2.2542000000000395e-05, 2.244499999999941e-05, 2.194499999999891e-05, 2.2305999999999715e-05, 2.165299999999995e-05, 2.2443999999999936e-05, 2.22090000000022e-05, 2.2236000000001865e-05, 2.2499999999998216e-05, 2.2528000000000825e-05, 2.163900000000038e-05, 2.1971999999998576e-05, 2.195899999999848e-05, 2.233299999999938e-05, 2.188900000000063e-05, 2.24030000000007e-05, 2.2221999999998826e-05, 2.247299999999855e-05, 2.255500000000049e-05, 2.2193999999999686e-05, 2.15969999999982e-05]</msg>
<status status="PASS" starttime="20201029 18:18:56.879" endtime="20201029 18:18:56.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.874" endtime="20201029 18:18:56.884"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:56.889" endtime="20201029 18:18:56.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.887" endtime="20201029 18:18:56.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.885" endtime="20201029 18:18:56.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.517" endtime="20201029 18:18:56.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.516" endtime="20201029 18:18:56.910"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.919" endtime="20201029 18:18:56.934"></status>
</kw>
<msg timestamp="20201029 18:18:56.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.917" endtime="20201029 18:18:56.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.936" endtime="20201029 18:18:56.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.938" endtime="20201029 18:18:56.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.914" endtime="20201029 18:18:56.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.912" endtime="20201029 18:18:56.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.947" endtime="20201029 18:18:57.233"></status>
</kw>
<msg timestamp="20201029 18:18:57.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023032583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02305475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:56.946" endtime="20201029 18:18:57.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023032583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02305475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:57.237" endtime="20201029 18:18:57.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.245" endtime="20201029 18:18:57.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.943" endtime="20201029 18:18:57.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.941" endtime="20201029 18:18:57.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:57.252" level="INFO">${RESULT} = [{'diff': 2.216700000000002e-05}, {'diff': 2.2430000000000366e-05}, {'diff': 2.191699999999977e-05}, {'diff': 2.2278000000000575e-05}, {'diff': 2.168099999999909e-05}, {'diff': 2.1972000000002045e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:57.249" endtime="20201029 18:18:57.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:57.256" level="INFO">${ACCURACY} = {'diff': [2.216700000000002e-05, 2.2430000000000366e-05, 2.191699999999977e-05, 2.2278000000000575e-05, 2.168099999999909e-05, 2.1972000000002045e-05, 2.216700000000002e-05, 2.2292000000000145e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:18:57.253" endtime="20201029 18:18:57.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.261" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 18:18:57.260" endtime="20201029 18:18:57.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.263" level="INFO">VALUE: [2.216700000000002e-05, 2.2430000000000366e-05, 2.191699999999977e-05, 2.2278000000000575e-05, 2.168099999999909e-05, 2.1972000000002045e-05, 2.216700000000002e-05, 2.2292000000000145e-05, 2.208299999999913e-05, 2.188900000000063e-05, 2.186100000000149e-05, 2.1972000000002045e-05, 2.2014000000000755e-05, 2.2319999999999285e-05, 2.2264000000001005e-05, 2.1722000000001795e-05, 2.2236000000001865e-05, 2.2221999999998826e-05, 2.219499999999916e-05, 2.193099999999934e-05, 2.2236000000001865e-05, 2.1750000000000935e-05, 2.2249999999997966e-05, 2.1985999999998146e-05, 2.2069999999999035e-05, 2.2070000000002504e-05, 2.218099999999959e-05, 2.212499999999784e-05, 2.1597999999997675e-05, 2.2111999999997745e-05, 2.2292000000000145e-05, 2.258299999999963e-05, 2.165299999999995e-05, 2.188900000000063e-05, 2.229100000000067e-05, 2.2526999999997882e-05, 2.2041999999999895e-05, 2.183299999999888e-05, 2.2069999999999035e-05, 2.252700000000135e-05, 2.2471999999999076e-05, 2.181899999999931e-05, 2.2512999999998312e-05, 2.2166000000000546e-05, 2.2443999999999936e-05, 2.211100000000174e-05, 2.162499999999734e-05, 2.2416000000000796e-05, 2.1943999999999436e-05, 2.205499999999999e-05]</msg>
<status status="PASS" starttime="20201029 18:18:57.262" endtime="20201029 18:18:57.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.257" endtime="20201029 18:18:57.265"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:57.269" endtime="20201029 18:18:57.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.267" endtime="20201029 18:18:57.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.266" endtime="20201029 18:18:57.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.911" endtime="20201029 18:18:57.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.910" endtime="20201029 18:18:57.290"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.299" endtime="20201029 18:18:57.314"></status>
</kw>
<msg timestamp="20201029 18:18:57.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.297" endtime="20201029 18:18:57.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.315" endtime="20201029 18:18:57.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.318" endtime="20201029 18:18:57.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.294" endtime="20201029 18:18:57.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.292" endtime="20201029 18:18:57.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.327" endtime="20201029 18:18:57.614"></status>
</kw>
<msg timestamp="20201029 18:18:57.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022149222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.325" endtime="20201029 18:18:57.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022149222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.618" endtime="20201029 18:18:57.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.627" endtime="20201029 18:18:57.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.323" endtime="20201029 18:18:57.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.321" endtime="20201029 18:18:57.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:57.633" level="INFO">${RESULT} = [{'diff': 2.288900000000163e-05}, {'diff': 2.322300000000277e-05}, {'diff': 2.3444000000000936e-05}, {'diff': 2.34030000000017e-05}, {'diff': 2.3000000000002185e-05}, {'diff': 2.3542000000001395e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:57.630" endtime="20201029 18:18:57.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:57.639" level="INFO">${ACCURACY} = {'diff': [2.288900000000163e-05, 2.322300000000277e-05, 2.3444000000000936e-05, 2.34030000000017e-05, 2.3000000000002185e-05, 2.3542000000001395e-05, 2.341700000000127e-05, 2.3555999999997496e-05, 2.3...</msg>
<status status="PASS" starttime="20201029 18:18:57.634" endtime="20201029 18:18:57.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.643" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 18:18:57.642" endtime="20201029 18:18:57.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.646" level="INFO">VALUE: [2.288900000000163e-05, 2.322300000000277e-05, 2.3444000000000936e-05, 2.34030000000017e-05, 2.3000000000002185e-05, 2.3542000000001395e-05, 2.341700000000127e-05, 2.3555999999997496e-05, 2.3472000000000076e-05, 2.261100000000224e-05, 2.343100000000084e-05, 2.2958000000000006e-05, 2.3194000000000686e-05, 2.294499999999991e-05, 2.312499999999884e-05, 2.319500000000016e-05, 2.2833999999999355e-05, 2.266700000000052e-05, 2.2778000000001075e-05, 2.345899999999998e-05, 2.313900000000188e-05, 2.3097999999999175e-05, 2.2902000000001727e-05, 2.320899999999973e-05, 2.32229999999993e-05, 2.348699999999912e-05, 2.318100000000059e-05, 2.343099999999737e-05, 2.318100000000059e-05, 2.29030000000012e-05, 2.3554999999998022e-05, 2.306900000000056e-05, 2.318100000000059e-05, 2.3416000000001796e-05, 2.3277999999998106e-05, 2.298700000000209e-05, 2.2915999999997827e-05, 2.32770000000021e-05, 2.3012999999998812e-05, 2.331900000000081e-05, 2.2901999999998257e-05, 2.354100000000192e-05, 2.3042000000000895e-05, 2.337499999999909e-05, 2.329100000000167e-05, 2.3499999999999216e-05, 2.3235999999999396e-05, 2.308300000000013e-05, 2.3028000000001325e-05, 2.3513999999998786e-05]</msg>
<status status="PASS" starttime="20201029 18:18:57.644" endtime="20201029 18:18:57.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.639" endtime="20201029 18:18:57.647"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:57.651" endtime="20201029 18:18:57.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.649" endtime="20201029 18:18:57.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.648" endtime="20201029 18:18:57.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.291" endtime="20201029 18:18:57.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.290" endtime="20201029 18:18:57.671"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.680" endtime="20201029 18:18:57.695"></status>
</kw>
<msg timestamp="20201029 18:18:57.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.679" endtime="20201029 18:18:57.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.697" endtime="20201029 18:18:57.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.700" endtime="20201029 18:18:57.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.676" endtime="20201029 18:18:57.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.674" endtime="20201029 18:18:57.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.709" endtime="20201029 18:18:57.996"></status>
</kw>
<msg timestamp="20201029 18:18:57.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022023569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022048208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.707" endtime="20201029 18:18:57.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022023569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022048208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.000" endtime="20201029 18:18:58.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.009" endtime="20201029 18:18:58.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.705" endtime="20201029 18:18:58.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.703" endtime="20201029 18:18:58.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:58.015" level="INFO">${RESULT} = [{'diff': 2.463899999999991e-05}, {'diff': 2.4527999999999356e-05}, {'diff': 2.4028000000002325e-05}, {'diff': 2.4263999999999536e-05}, {'diff': 2.384700000000045e-05}, {'diff': 2.4096999999997232e-05...</msg>
<status status="PASS" starttime="20201029 18:18:58.012" endtime="20201029 18:18:58.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:58.020" level="INFO">${ACCURACY} = {'diff': [2.463899999999991e-05, 2.4527999999999356e-05, 2.4028000000002325e-05, 2.4263999999999536e-05, 2.384700000000045e-05, 2.4096999999997232e-05, 2.4222000000000826e-05, 2.388899999999916e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:18:58.016" endtime="20201029 18:18:58.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.024" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 18:18:58.023" endtime="20201029 18:18:58.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.027" level="INFO">VALUE: [2.463899999999991e-05, 2.4527999999999356e-05, 2.4028000000002325e-05, 2.4263999999999536e-05, 2.384700000000045e-05, 2.4096999999997232e-05, 2.4222000000000826e-05, 2.388899999999916e-05, 2.4041999999998426e-05, 2.4318999999998342e-05, 2.405500000000199e-05, 2.3944000000001436e-05, 2.4193999999998217e-05, 2.415299999999898e-05, 2.355500000000149e-05, 2.363899999999891e-05, 2.411100000000027e-05, 2.440299999999923e-05, 2.3986000000000146e-05, 2.3958000000001006e-05, 2.437500000000009e-05, 2.418100000000159e-05, 2.436100000000052e-05, 2.415299999999898e-05, 2.4346999999997482e-05, 2.445900000000098e-05, 2.383300000000088e-05, 2.4291999999998676e-05, 2.3999999999999716e-05, 2.387499999999959e-05, 2.362499999999934e-05, 2.3999999999999716e-05, 2.4401999999999757e-05, 2.3915999999998827e-05, 2.4555999999998496e-05, 2.4305999999998246e-05, 2.3665999999998577e-05, 2.3861999999999495e-05, 2.4194000000001686e-05, 2.362499999999934e-05, 2.444500000000141e-05, 2.4500000000000216e-05, 2.4083999999997135e-05, 2.42230000000003e-05, 2.4472000000001076e-05, 2.42230000000003e-05, 2.393099999999787e-05, 2.4444000000001936e-05, 2.4263999999999536e-05, 2.362499999999934e-05]</msg>
<status status="PASS" starttime="20201029 18:18:58.025" endtime="20201029 18:18:58.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.020" endtime="20201029 18:18:58.028"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:58.032" endtime="20201029 18:18:58.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.030" endtime="20201029 18:18:58.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.029" endtime="20201029 18:18:58.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.672" endtime="20201029 18:18:58.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.672" endtime="20201029 18:18:58.052"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.063" endtime="20201029 18:18:58.081"></status>
</kw>
<msg timestamp="20201029 18:18:58.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.061" endtime="20201029 18:18:58.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.083" endtime="20201029 18:18:58.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.086" endtime="20201029 18:18:58.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.057" endtime="20201029 18:18:58.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.055" endtime="20201029 18:18:58.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.097" endtime="20201029 18:18:58.382"></status>
</kw>
<msg timestamp="20201029 18:18:58.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026199472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026224778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.095" endtime="20201029 18:18:58.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026199472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026224778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.387" endtime="20201029 18:18:58.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.395" endtime="20201029 18:18:58.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.092" endtime="20201029 18:18:58.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.091" endtime="20201029 18:18:58.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:58.402" level="INFO">${RESULT} = [{'diff': 2.5305999999999246e-05}, {'diff': 2.4777999999999606e-05}, {'diff': 2.4570000000001535e-05}, {'diff': 2.536100000000152e-05}, {'diff': 2.5278000000000106e-05}, {'diff': 2.5070000000002035e-0...</msg>
<status status="PASS" starttime="20201029 18:18:58.398" endtime="20201029 18:18:58.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:58.406" level="INFO">${ACCURACY} = {'diff': [2.5305999999999246e-05, 2.4777999999999606e-05, 2.4570000000001535e-05, 2.536100000000152e-05, 2.5278000000000106e-05, 2.5070000000002035e-05, 2.5348000000001425e-05, 2.4820000000001785e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:58.403" endtime="20201029 18:18:58.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.411" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 18:18:58.409" endtime="20201029 18:18:58.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.413" level="INFO">VALUE: [2.5305999999999246e-05, 2.4777999999999606e-05, 2.4570000000001535e-05, 2.536100000000152e-05, 2.5278000000000106e-05, 2.5070000000002035e-05, 2.5348000000001425e-05, 2.4820000000001785e-05, 2.4834000000001355e-05, 2.4862000000000495e-05, 2.5250000000000966e-05, 2.537500000000109e-05, 2.5249999999997497e-05, 2.5249999999997497e-05, 2.5041999999999426e-05, 2.5014000000000286e-05, 2.488900000000016e-05, 2.515299999999998e-05, 2.5179999999999647e-05, 2.536100000000152e-05, 2.5458000000002506e-05, 2.5388000000001187e-05, 2.5304999999999772e-05, 2.4790999999999702e-05, 2.45970000000012e-05, 2.4568999999998592e-05, 2.487500000000059e-05, 2.4804999999999272e-05, 2.4986000000001146e-05, 2.5346999999998482e-05, 2.511100000000127e-05, 2.5000000000000716e-05, 2.5332999999998912e-05, 2.5568999999999592e-05, 2.5319999999998816e-05, 2.5222000000001826e-05, 2.5194000000002686e-05, 2.540300000000023e-05, 2.4804999999999272e-05, 2.5250000000000966e-05, 2.537499999999762e-05, 2.5068999999999092e-05, 2.536100000000152e-05, 2.5443999999999467e-05, 2.5514000000000786e-05, 2.506900000000256e-05, 2.5541999999999926e-05, 2.5000000000000716e-05, 2.5332999999998912e-05, 2.5457999999999037e-05]</msg>
<status status="PASS" starttime="20201029 18:18:58.412" endtime="20201029 18:18:58.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.407" endtime="20201029 18:18:58.419"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:58.423" endtime="20201029 18:18:58.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.422" endtime="20201029 18:18:58.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.420" endtime="20201029 18:18:58.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.053" endtime="20201029 18:18:58.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.053" endtime="20201029 18:18:58.444"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.452" endtime="20201029 18:18:58.467"></status>
</kw>
<msg timestamp="20201029 18:18:58.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.451" endtime="20201029 18:18:58.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.469" endtime="20201029 18:18:58.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.471" endtime="20201029 18:18:58.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.448" endtime="20201029 18:18:58.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.446" endtime="20201029 18:18:58.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.480" endtime="20201029 18:18:58.766"></status>
</kw>
<msg timestamp="20201029 18:18:58.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022014958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022041361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.479" endtime="20201029 18:18:58.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022014958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022041361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.771" endtime="20201029 18:18:58.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.779" endtime="20201029 18:18:58.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.476" endtime="20201029 18:18:58.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.474" endtime="20201029 18:18:58.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:58.786" level="INFO">${RESULT} = [{'diff': 2.640299999999776e-05}, {'diff': 2.5846999999998982e-05}, {'diff': 2.637500000000209e-05}, {'diff': 2.6028000000000856e-05}, {'diff': 2.6485999999999177e-05}, {'diff': 2.563899999999744e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:58.782" endtime="20201029 18:18:58.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:58.791" level="INFO">${ACCURACY} = {'diff': [2.640299999999776e-05, 2.5846999999998982e-05, 2.637500000000209e-05, 2.6028000000000856e-05, 2.6485999999999177e-05, 2.563899999999744e-05, 2.6527999999997887e-05, 2.6277999999997637e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:18:58.787" endtime="20201029 18:18:58.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.795" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 18:18:58.794" endtime="20201029 18:18:58.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.798" level="INFO">VALUE: [2.640299999999776e-05, 2.5846999999998982e-05, 2.637500000000209e-05, 2.6028000000000856e-05, 2.6485999999999177e-05, 2.563899999999744e-05, 2.6527999999997887e-05, 2.6277999999997637e-05, 2.6485999999999177e-05, 2.6207999999999787e-05, 2.613899999999794e-05, 2.6458000000000037e-05, 2.6334000000002855e-05, 2.6319000000000342e-05, 2.6096999999999232e-05, 2.6332999999999912e-05, 2.6485999999999177e-05, 2.6292000000000676e-05, 2.5957999999999537e-05, 2.587500000000159e-05, 2.6000000000001716e-05, 2.644499999999994e-05, 2.5583999999998636e-05, 2.6513999999998317e-05, 2.620899999999926e-05, 2.595899999999901e-05, 2.5610999999998302e-05, 2.6014000000001286e-05, 2.6250000000001966e-05, 2.6083999999999136e-05, 2.590300000000073e-05, 2.6042000000000426e-05, 2.5999999999998247e-05, 2.6098000000002175e-05, 2.648700000000212e-05, 2.595899999999901e-05, 2.643100000000037e-05, 2.561100000000177e-05, 2.6179999999997178e-05, 2.5818999999999842e-05, 2.6055000000000522e-05, 2.6583000000000162e-05, 2.6387999999998718e-05, 2.5943999999999967e-05, 2.6040999999997483e-05, 2.5957999999999537e-05, 2.6486000000002646e-05, 2.566700000000005e-05, 2.6082999999999662e-05, 2.5986000000002146e-05]</msg>
<status status="PASS" starttime="20201029 18:18:58.796" endtime="20201029 18:18:58.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.792" endtime="20201029 18:18:58.799"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:58.803" endtime="20201029 18:18:58.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.801" endtime="20201029 18:18:58.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.800" endtime="20201029 18:18:58.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.445" endtime="20201029 18:18:58.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.444" endtime="20201029 18:18:58.823"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.832" endtime="20201029 18:18:58.849"></status>
</kw>
<msg timestamp="20201029 18:18:58.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.831" endtime="20201029 18:18:58.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.850" endtime="20201029 18:18:58.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.854" endtime="20201029 18:18:58.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.828" endtime="20201029 18:18:58.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.826" endtime="20201029 18:18:58.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.870" endtime="20201029 18:18:59.157"></status>
</kw>
<msg timestamp="20201029 18:18:59.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022625181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022651986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.867" endtime="20201029 18:18:59.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022625181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022651986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.161" endtime="20201029 18:18:59.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.169" endtime="20201029 18:18:59.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.863" endtime="20201029 18:18:59.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.860" endtime="20201029 18:18:59.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:59.176" level="INFO">${RESULT} = [{'diff': 2.6804999999997803e-05}, {'diff': 2.7306000000001246e-05}, {'diff': 2.7333000000000912e-05}, {'diff': 2.7278000000002106e-05}, {'diff': 2.6943999999997498e-05}, {'diff': 2.690299999999826e-0...</msg>
<status status="PASS" starttime="20201029 18:18:59.173" endtime="20201029 18:18:59.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:59.180" level="INFO">${ACCURACY} = {'diff': [2.6804999999997803e-05, 2.7306000000001246e-05, 2.7333000000000912e-05, 2.7278000000002106e-05, 2.6943999999997498e-05, 2.690299999999826e-05, 2.6944000000000967e-05, 2.7249999999999497e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:59.177" endtime="20201029 18:18:59.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.185" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 18:18:59.184" endtime="20201029 18:18:59.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.187" level="INFO">VALUE: [2.6804999999997803e-05, 2.7306000000001246e-05, 2.7333000000000912e-05, 2.7278000000002106e-05, 2.6943999999997498e-05, 2.690299999999826e-05, 2.6944000000000967e-05, 2.7249999999999497e-05, 2.7277999999998637e-05, 2.7320000000000816e-05, 2.6985999999999677e-05, 2.690299999999826e-05, 2.6778000000001606e-05, 2.661100000000277e-05, 2.744500000000094e-05, 2.6860999999999552e-05, 2.74170000000018e-05, 2.7334000000000386e-05, 2.7055999999997526e-05, 2.7263999999999067e-05, 2.6583999999999636e-05, 2.745900000000051e-05, 2.7138999999998942e-05, 2.7097999999999706e-05, 2.7361000000000052e-05, 2.7070000000000566e-05, 2.7320000000000816e-05, 2.740299999999876e-05, 2.7541999999998457e-05, 2.6624999999998872e-05, 2.687500000000259e-05, 2.7401999999999288e-05, 2.6596999999999732e-05, 2.7069000000001092e-05, 2.687500000000259e-05, 2.7388999999999192e-05, 2.7458000000001037e-05, 2.6833000000000412e-05, 2.7249999999999497e-05, 2.6915999999998358e-05, 2.6833000000000412e-05, 2.7333000000000912e-05, 2.7083000000000662e-05, 2.7486000000000177e-05, 2.7165999999998608e-05, 2.663900000000191e-05, 2.7472000000000607e-05, 2.6972000000000107e-05, 2.7028000000001856e-05, 2.7110999999999802e-05]</msg>
<status status="PASS" starttime="20201029 18:18:59.186" endtime="20201029 18:18:59.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.181" endtime="20201029 18:18:59.189"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:59.192" endtime="20201029 18:18:59.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.191" endtime="20201029 18:18:59.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.190" endtime="20201029 18:18:59.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.824" endtime="20201029 18:18:59.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.824" endtime="20201029 18:18:59.213"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.222" endtime="20201029 18:18:59.239"></status>
</kw>
<msg timestamp="20201029 18:18:59.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.220" endtime="20201029 18:18:59.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.240" endtime="20201029 18:18:59.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.243" endtime="20201029 18:18:59.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.218" endtime="20201029 18:18:59.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.216" endtime="20201029 18:18:59.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.252" endtime="20201029 18:18:59.538"></status>
</kw>
<msg timestamp="20201029 18:18:59.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023095597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023123792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.250" endtime="20201029 18:18:59.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023095597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023123792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.542" endtime="20201029 18:18:59.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.550" endtime="20201029 18:18:59.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.248" endtime="20201029 18:18:59.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.246" endtime="20201029 18:18:59.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:59.557" level="INFO">${RESULT} = [{'diff': 2.819500000000169e-05}, {'diff': 2.8125000000000372e-05}, {'diff': 2.8264000000000067e-05}, {'diff': 2.8319999999998346e-05}, {'diff': 2.7875000000000122e-05}, {'diff': 2.8000000000000247e-0...</msg>
<status status="PASS" starttime="20201029 18:18:59.554" endtime="20201029 18:18:59.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:59.561" level="INFO">${ACCURACY} = {'diff': [2.819500000000169e-05, 2.8125000000000372e-05, 2.8264000000000067e-05, 2.8319999999998346e-05, 2.7875000000000122e-05, 2.8000000000000247e-05, 2.7804999999998803e-05, 2.8318999999998873e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:59.558" endtime="20201029 18:18:59.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.566" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 18:18:59.565" endtime="20201029 18:18:59.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.569" level="INFO">VALUE: [2.819500000000169e-05, 2.8125000000000372e-05, 2.8264000000000067e-05, 2.8319999999998346e-05, 2.7875000000000122e-05, 2.8000000000000247e-05, 2.7804999999998803e-05, 2.8318999999998873e-05, 2.8430000000002897e-05, 2.8124999999996902e-05, 2.7901999999999788e-05, 2.7555000000002022e-05, 2.7763000000000093e-05, 2.8138999999999942e-05, 2.8402999999999762e-05, 2.8193999999998748e-05, 2.8027999999999387e-05, 2.8277000000000163e-05, 2.8152000000000038e-05, 2.7847000000000982e-05, 2.8472000000001607e-05, 2.8569999999998597e-05, 2.8597999999997736e-05, 2.7915999999999358e-05, 2.8000000000000247e-05, 2.8486000000001177e-05, 2.843100000000237e-05, 2.7957999999998068e-05, 2.7597000000000732e-05, 2.8069000000002092e-05, 2.7861000000000552e-05, 2.8013999999999817e-05, 2.7902999999999262e-05, 2.8485999999997708e-05, 2.8514000000000317e-05, 2.8125000000000372e-05, 2.79309999999984e-05, 2.8069999999998096e-05, 2.8236000000000927e-05, 2.793100000000187e-05, 2.8347000000001482e-05, 2.7902999999999262e-05, 2.7875000000000122e-05, 2.8277999999999637e-05, 2.8112000000000276e-05, 2.7791999999998707e-05, 2.7791999999998707e-05, 2.8097999999997236e-05, 2.8514000000000317e-05, 2.8346999999998013e-05]</msg>
<status status="PASS" starttime="20201029 18:18:59.567" endtime="20201029 18:18:59.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.562" endtime="20201029 18:18:59.570"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:59.574" endtime="20201029 18:18:59.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.573" endtime="20201029 18:18:59.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.571" endtime="20201029 18:18:59.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.214" endtime="20201029 18:18:59.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.213" endtime="20201029 18:18:59.595"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.604" endtime="20201029 18:18:59.619"></status>
</kw>
<msg timestamp="20201029 18:18:59.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.602" endtime="20201029 18:18:59.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.621" endtime="20201029 18:18:59.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.623" endtime="20201029 18:18:59.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.600" endtime="20201029 18:18:59.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.597" endtime="20201029 18:18:59.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.632" endtime="20201029 18:18:59.917"></status>
</kw>
<msg timestamp="20201029 18:18:59.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022191681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.631" endtime="20201029 18:18:59.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022191681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.922" endtime="20201029 18:18:59.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.930" endtime="20201029 18:18:59.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.628" endtime="20201029 18:18:59.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.626" endtime="20201029 18:18:59.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:59.936" level="INFO">${RESULT} = [{'diff': 2.9084000000002136e-05}, {'diff': 2.9528000000000887e-05}, {'diff': 2.9250000000001497e-05}, {'diff': 2.9542000000000457e-05}, {'diff': 2.8889000000000692e-05}, {'diff': 2.948700000000165e-0...</msg>
<status status="PASS" starttime="20201029 18:18:59.933" endtime="20201029 18:18:59.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:59.944" level="INFO">${ACCURACY} = {'diff': [2.9084000000002136e-05, 2.9528000000000887e-05, 2.9250000000001497e-05, 2.9542000000000457e-05, 2.8889000000000692e-05, 2.948700000000165e-05, 2.9347999999998486e-05, 2.8846999999998513e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:59.938" endtime="20201029 18:18:59.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.949" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 18:18:59.948" endtime="20201029 18:18:59.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.951" level="INFO">VALUE: [2.9084000000002136e-05, 2.9528000000000887e-05, 2.9250000000001497e-05, 2.9542000000000457e-05, 2.8889000000000692e-05, 2.948700000000165e-05, 2.9347999999998486e-05, 2.8846999999998513e-05, 2.8818999999999373e-05, 2.948700000000165e-05, 2.9249999999998028e-05, 2.9235999999998458e-05, 2.9207999999999318e-05, 2.8861000000001552e-05, 2.8847000000001982e-05, 2.8889000000000692e-05, 2.9304999999996834e-05, 2.9443999999999998e-05, 2.9264000000001067e-05, 2.9014000000000817e-05, 2.9125000000001372e-05, 2.9180000000000178e-05, 2.9374999999998153e-05, 2.9055000000000053e-05, 2.8874999999997653e-05, 2.9278000000000637e-05, 2.9402999999997292e-05, 2.9041999999999957e-05, 2.9041999999999957e-05, 2.8875000000001122e-05, 2.8653000000000012e-05, 2.8527999999999887e-05, 2.9375000000001622e-05, 2.8944000000002967e-05, 2.8597000000001732e-05, 2.9318999999999873e-05, 2.89309999999994e-05, 2.9332999999999443e-05, 2.9000000000001247e-05, 2.8791999999999707e-05, 2.9235999999998458e-05, 2.9249999999998028e-05, 2.8764000000000567e-05, 2.9250000000001497e-05, 2.9000000000001247e-05, 2.8598000000001206e-05, 2.8805999999999277e-05, 2.8916999999999832e-05, 2.8556000000002496e-05, 2.8625000000000872e-05]</msg>
<status status="PASS" starttime="20201029 18:18:59.950" endtime="20201029 18:18:59.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.945" endtime="20201029 18:18:59.953"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:59.956" endtime="20201029 18:18:59.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.955" endtime="20201029 18:18:59.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.954" endtime="20201029 18:18:59.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.596" endtime="20201029 18:18:59.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.595" endtime="20201029 18:18:59.977"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.986" endtime="20201029 18:19:00.002"></status>
</kw>
<msg timestamp="20201029 18:19:00.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.984" endtime="20201029 18:19:00.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.004" endtime="20201029 18:19:00.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.006" endtime="20201029 18:19:00.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.982" endtime="20201029 18:19:00.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.979" endtime="20201029 18:19:00.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.016" endtime="20201029 18:19:00.346"></status>
</kw>
<msg timestamp="20201029 18:19:00.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022423889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022454361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.014" endtime="20201029 18:19:00.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022423889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022454361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.350" endtime="20201029 18:19:00.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.359" endtime="20201029 18:19:00.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.011" endtime="20201029 18:19:00.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.010" endtime="20201029 18:19:00.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:00.365" level="INFO">${RESULT} = [{'diff': 3.0472000000000138e-05}, {'diff': 3.0221999999999888e-05}, {'diff': 2.9611000000002302e-05}, {'diff': 2.9792000000000707e-05}, {'diff': 2.9625000000001872e-05}, {'diff': 3.0097999999999236e-...</msg>
<status status="PASS" starttime="20201029 18:19:00.362" endtime="20201029 18:19:00.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:00.370" level="INFO">${ACCURACY} = {'diff': [3.0472000000000138e-05, 3.0221999999999888e-05, 2.9611000000002302e-05, 2.9792000000000707e-05, 2.9625000000001872e-05, 3.0097999999999236e-05, 3.0262999999999124e-05, 3.0056000000000527e-05...</msg>
<status status="PASS" starttime="20201029 18:19:00.366" endtime="20201029 18:19:00.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.374" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 18:19:00.373" endtime="20201029 18:19:00.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.376" level="INFO">VALUE: [3.0472000000000138e-05, 3.0221999999999888e-05, 2.9611000000002302e-05, 2.9792000000000707e-05, 2.9625000000001872e-05, 3.0097999999999236e-05, 3.0262999999999124e-05, 3.0056000000000527e-05, 2.9888999999998223e-05, 2.9930999999996932e-05, 3.0096999999999763e-05, 3.0181000000000652e-05, 3.0167000000001082e-05, 2.9889000000001692e-05, 3.0181000000000652e-05, 2.9861000000002552e-05, 3.0070000000000097e-05, 3.0348000000002956e-05, 3.0083000000000193e-05, 2.9806000000000277e-05, 3.0181000000000652e-05, 2.9931000000000402e-05, 2.9971999999999638e-05, 3.013800000000247e-05, 3.0137999999999e-05, 3.0375000000002622e-05, 2.990199999999832e-05, 2.9889000000001692e-05, 2.990199999999832e-05, 2.9944000000000498e-05, 3.017999999999771e-05, 2.9638999999997973e-05, 2.9763000000002093e-05, 3.0305000000001303e-05, 3.0264000000002067e-05, 3.042999999999796e-05, 3.0389000000002192e-05, 2.9888999999998223e-05, 3.041599999999839e-05, 3.0221999999999888e-05, 3.0291999999997737e-05, 3.0430000000001428e-05, 3.044399999999753e-05, 2.9958000000000068e-05, 2.9582999999999693e-05, 3.0014000000001817e-05, 2.9874999999998653e-05, 3.054200000000146e-05, 3.0513999999998848e-05, 3.0263999999998598e-05]</msg>
<status status="PASS" starttime="20201029 18:19:00.375" endtime="20201029 18:19:00.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.370" endtime="20201029 18:19:00.378"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:00.382" endtime="20201029 18:19:00.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.380" endtime="20201029 18:19:00.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.379" endtime="20201029 18:19:00.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.978" endtime="20201029 18:19:00.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.977" endtime="20201029 18:19:00.403"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.412" endtime="20201029 18:19:00.427"></status>
</kw>
<msg timestamp="20201029 18:19:00.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.410" endtime="20201029 18:19:00.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.429" endtime="20201029 18:19:00.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.431" endtime="20201029 18:19:00.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.407" endtime="20201029 18:19:00.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.405" endtime="20201029 18:19:00.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.441" endtime="20201029 18:19:00.726"></status>
</kw>
<msg timestamp="20201029 18:19:00.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022069486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022100208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.439" endtime="20201029 18:19:00.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022069486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022100208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.731" endtime="20201029 18:19:00.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.739" endtime="20201029 18:19:00.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.436" endtime="20201029 18:19:00.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.435" endtime="20201029 18:19:00.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:00.746" level="INFO">${RESULT} = [{'diff': 3.072200000000039e-05}, {'diff': 3.1304999999998834e-05}, {'diff': 3.125000000000003e-05}, {'diff': 3.102799999999892e-05}, {'diff': 3.1318999999998404e-05}, {'diff': 3.0790999999998764e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:00.742" endtime="20201029 18:19:00.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:00.751" level="INFO">${ACCURACY} = {'diff': [3.072200000000039e-05, 3.1304999999998834e-05, 3.125000000000003e-05, 3.102799999999892e-05, 3.1318999999998404e-05, 3.0790999999998764e-05, 3.055500000000155e-05, 3.1444000000002e-05, 3.058...</msg>
<status status="PASS" starttime="20201029 18:19:00.747" endtime="20201029 18:19:00.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.755" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 18:19:00.754" endtime="20201029 18:19:00.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.758" level="INFO">VALUE: [3.072200000000039e-05, 3.1304999999998834e-05, 3.125000000000003e-05, 3.102799999999892e-05, 3.1318999999998404e-05, 3.0790999999998764e-05, 3.055500000000155e-05, 3.1444000000002e-05, 3.0582999999997224e-05, 3.152799999999942e-05, 3.119400000000175e-05, 3.120799999999785e-05, 3.098600000000021e-05, 3.090300000000226e-05, 3.084700000000051e-05, 3.088899999999922e-05, 3.144399999999853e-05, 3.147200000000114e-05, 3.079200000000171e-05, 3.125000000000003e-05, 3.094500000000097e-05, 3.14579999999981e-05, 3.105600000000153e-05, 3.091700000000183e-05, 3.098600000000021e-05, 3.109700000000076e-05, 3.133300000000144e-05, 3.129200000000221e-05, 3.12639999999996e-05, 3.098600000000021e-05, 3.145899999999757e-05, 3.141700000000233e-05, 3.090299999999879e-05, 3.080600000000128e-05, 3.138899999999972e-05, 3.065199999999907e-05, 3.148600000000071e-05, 3.1362000000000056e-05, 3.130599999999831e-05, 3.1513000000000374e-05, 3.147300000000061e-05, 3.099999999999978e-05, 3.1012999999999874e-05, 3.138899999999972e-05, 3.09440000000015e-05, 3.143000000000243e-05, 3.098600000000021e-05, 3.065200000000254e-05, 3.1444000000002e-05, 3.097200000000064e-05]</msg>
<status status="PASS" starttime="20201029 18:19:00.756" endtime="20201029 18:19:00.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.752" endtime="20201029 18:19:00.759"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:00.763" endtime="20201029 18:19:00.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.761" endtime="20201029 18:19:00.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.760" endtime="20201029 18:19:00.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.404" endtime="20201029 18:19:00.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.403" endtime="20201029 18:19:00.783"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.792" endtime="20201029 18:19:00.807"></status>
</kw>
<msg timestamp="20201029 18:19:00.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.791" endtime="20201029 18:19:00.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.809" endtime="20201029 18:19:00.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.811" endtime="20201029 18:19:00.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.788" endtime="20201029 18:19:00.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.786" endtime="20201029 18:19:00.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.821" endtime="20201029 18:19:01.109"></status>
</kw>
<msg timestamp="20201029 18:19:01.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022197458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022229333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.819" endtime="20201029 18:19:01.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022197458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022229333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:01.114" endtime="20201029 18:19:01.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.123" endtime="20201029 18:19:01.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.816" endtime="20201029 18:19:01.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.815" endtime="20201029 18:19:01.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:01.130" level="INFO">${RESULT} = [{'diff': 3.187500000000065e-05}, {'diff': 3.199999999999731e-05}, {'diff': 3.17640000000001e-05}, {'diff': 3.222200000000189e-05}, {'diff': 3.169499999999825e-05}, {'diff': 3.213900000000047e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:01.127" endtime="20201029 18:19:01.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:01.134" level="INFO">${ACCURACY} = {'diff': [3.187500000000065e-05, 3.199999999999731e-05, 3.17640000000001e-05, 3.222200000000189e-05, 3.169499999999825e-05, 3.213900000000047e-05, 3.223600000000146e-05, 3.233300000000244e-05, 3.19299...</msg>
<status status="PASS" starttime="20201029 18:19:01.131" endtime="20201029 18:19:01.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.139" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 18:19:01.138" endtime="20201029 18:19:01.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.141" level="INFO">VALUE: [3.187500000000065e-05, 3.199999999999731e-05, 3.17640000000001e-05, 3.222200000000189e-05, 3.169499999999825e-05, 3.213900000000047e-05, 3.223600000000146e-05, 3.233300000000244e-05, 3.192999999999946e-05, 3.234700000000201e-05, 3.156900000000212e-05, 3.208300000000219e-05, 3.197200000000164e-05, 3.209700000000176e-05, 3.216699999999961e-05, 3.187500000000065e-05, 3.179199999999924e-05, 3.158300000000169e-05, 3.208400000000167e-05, 3.234700000000201e-05, 3.2096999999998294e-05, 3.22779999999967e-05, 3.2374999999997683e-05, 3.204199999999949e-05, 3.231999999999888e-05, 3.198600000000121e-05, 3.181999999999838e-05, 3.220900000000179e-05, 3.200000000000078e-05, 3.191599999999989e-05, 3.22640000000006e-05, 3.250000000000128e-05, 3.179199999999924e-05, 3.241699999999986e-05, 3.237500000000115e-05, 3.225000000000103e-05, 3.21250000000009e-05, 3.2374999999997683e-05, 3.241699999999986e-05, 3.161199999999684e-05, 3.161100000000083e-05, 3.197200000000164e-05, 3.2082999999998724e-05, 3.198600000000121e-05, 3.242999999999996e-05, 3.212499999999743e-05, 3.220799999999885e-05, 3.241600000000039e-05, 3.197199999999817e-05, 3.2346999999998544e-05]</msg>
<status status="PASS" starttime="20201029 18:19:01.140" endtime="20201029 18:19:01.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.135" endtime="20201029 18:19:01.142"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:01.146" endtime="20201029 18:19:01.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.145" endtime="20201029 18:19:01.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.143" endtime="20201029 18:19:01.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.784" endtime="20201029 18:19:01.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.784" endtime="20201029 18:19:01.167"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.176" endtime="20201029 18:19:01.192"></status>
</kw>
<msg timestamp="20201029 18:19:01.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.174" endtime="20201029 18:19:01.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.194" endtime="20201029 18:19:01.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.196" endtime="20201029 18:19:01.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.172" endtime="20201029 18:19:01.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.170" endtime="20201029 18:19:01.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.206" endtime="20201029 18:19:01.492"></status>
</kw>
<msg timestamp="20201029 18:19:01.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022994694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023028153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:01.204" endtime="20201029 18:19:01.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022994694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023028153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:01.497" endtime="20201029 18:19:01.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.505" endtime="20201029 18:19:01.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.202" endtime="20201029 18:19:01.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.200" endtime="20201029 18:19:01.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:01.512" level="INFO">${RESULT} = [{'diff': 3.345899999999957e-05}, {'diff': 3.323599999999899e-05}, {'diff': 3.265300000000054e-05}, {'diff': 3.331999999999988e-05}, {'diff': 3.3445e-05}, {'diff': 3.302800000000092e-05}, {'diff': 3.3...</msg>
<status status="PASS" starttime="20201029 18:19:01.509" endtime="20201029 18:19:01.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:01.516" level="INFO">${ACCURACY} = {'diff': [3.345899999999957e-05, 3.323599999999899e-05, 3.265300000000054e-05, 3.331999999999988e-05, 3.3445e-05, 3.302800000000092e-05, 3.301400000000135e-05, 3.25839999999987e-05, 3.316700000000061e...</msg>
<status status="PASS" starttime="20201029 18:19:01.513" endtime="20201029 18:19:01.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.521" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 18:19:01.520" endtime="20201029 18:19:01.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.524" level="INFO">VALUE: [3.345899999999957e-05, 3.323599999999899e-05, 3.265300000000054e-05, 3.331999999999988e-05, 3.3445e-05, 3.302800000000092e-05, 3.301400000000135e-05, 3.25839999999987e-05, 3.316700000000061e-05, 3.338800000000225e-05, 3.3082999999999724e-05, 3.3319000000000404e-05, 3.343000000000096e-05, 3.3290999999997795e-05, 3.323600000000246e-05, 3.2790999999997295e-05, 3.263900000000097e-05, 3.298599999999874e-05, 3.2624999999997933e-05, 3.3041000000001014e-05, 3.3360999999999114e-05, 3.287500000000165e-05, 3.2555000000000084e-05, 3.293000000000046e-05, 3.347199999999967e-05, 3.287500000000165e-05, 3.29579999999996e-05, 3.351399999999838e-05, 3.297200000000264e-05, 3.354200000000099e-05, 3.2860999999998614e-05, 3.277800000000067e-05, 3.345899999999957e-05, 3.279200000000024e-05, 3.338900000000172e-05, 3.301399999999788e-05, 3.2610999999998364e-05, 3.3360999999999114e-05, 3.349999999999881e-05, 3.3445e-05, 3.287500000000165e-05, 3.255599999999956e-05, 3.330600000000031e-05, 3.3445e-05, 3.330600000000031e-05, 3.352799999999795e-05, 3.3346999999999544e-05, 3.283400000000242e-05, 3.283399999999895e-05, 3.345899999999957e-05]</msg>
<status status="PASS" starttime="20201029 18:19:01.522" endtime="20201029 18:19:01.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.517" endtime="20201029 18:19:01.525"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:01.529" endtime="20201029 18:19:01.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.527" endtime="20201029 18:19:01.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.526" endtime="20201029 18:19:01.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.168" endtime="20201029 18:19:01.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.167" endtime="20201029 18:19:01.550"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.558" endtime="20201029 18:19:01.574"></status>
</kw>
<msg timestamp="20201029 18:19:01.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.557" endtime="20201029 18:19:01.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.575" endtime="20201029 18:19:01.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.578" endtime="20201029 18:19:01.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.554" endtime="20201029 18:19:01.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.552" endtime="20201029 18:19:01.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.587" endtime="20201029 18:19:01.873"></status>
</kw>
<msg timestamp="20201029 18:19:01.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0221435, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022177472, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:19:01.585" endtime="20201029 18:19:01.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0221435, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022177472, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:19:01.878" endtime="20201029 18:19:01.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.888" endtime="20201029 18:19:01.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.583" endtime="20201029 18:19:01.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.581" endtime="20201029 18:19:01.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:01.897" level="INFO">${RESULT} = [{'diff': 3.397200000000017e-05}, {'diff': 3.4582999999997754e-05}, {'diff': 3.443000000000196e-05}, {'diff': 3.417999999999824e-05}, {'diff': 3.402799999999845e-05}, {'diff': 3.402800000000192e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:01.893" endtime="20201029 18:19:01.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:01.904" level="INFO">${ACCURACY} = {'diff': [3.397200000000017e-05, 3.4582999999997754e-05, 3.443000000000196e-05, 3.417999999999824e-05, 3.402799999999845e-05, 3.402800000000192e-05, 3.391699999999789e-05, 3.397200000000017e-05, 3.451...</msg>
<status status="PASS" starttime="20201029 18:19:01.899" endtime="20201029 18:19:01.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.910" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 18:19:01.908" endtime="20201029 18:19:01.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.914" level="INFO">VALUE: [3.397200000000017e-05, 3.4582999999997754e-05, 3.443000000000196e-05, 3.417999999999824e-05, 3.402799999999845e-05, 3.402800000000192e-05, 3.391699999999789e-05, 3.397200000000017e-05, 3.451399999999938e-05, 3.37779999999982e-05, 3.420800000000085e-05, 3.402799999999845e-05, 3.4319000000001404e-05, 3.429200000000174e-05, 3.390299999999832e-05, 3.4083000000000724e-05, 3.3610999999999364e-05, 3.416700000000161e-05, 3.365299999999807e-05, 3.4554999999998615e-05, 3.3888999999998753e-05, 3.3888999999998753e-05, 3.391700000000136e-05, 3.423599999999999e-05, 3.4597000000000794e-05, 3.3874999999999184e-05, 3.424999999999956e-05, 3.365300000000154e-05, 3.4374999999999684e-05, 3.427800000000217e-05, 3.40840000000002e-05, 3.391700000000136e-05, 3.420800000000085e-05, 3.397299999999964e-05, 3.379199999999777e-05, 3.387500000000265e-05, 3.3847000000000044e-05, 3.388799999999928e-05, 3.3847000000000044e-05, 3.4138999999999003e-05, 3.391599999999842e-05, 3.4512999999999905e-05, 3.3847000000000044e-05, 3.416599999999867e-05, 3.4374999999999684e-05, 3.3583000000000224e-05, 3.397200000000017e-05, 3.391599999999842e-05, 3.3790999999998295e-05, 3.451399999999938e-05]</msg>
<status status="PASS" starttime="20201029 18:19:01.912" endtime="20201029 18:19:01.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.905" endtime="20201029 18:19:01.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:01.921" endtime="20201029 18:19:01.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.919" endtime="20201029 18:19:01.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.917" endtime="20201029 18:19:01.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.551" endtime="20201029 18:19:01.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.550" endtime="20201029 18:19:01.942"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.952" endtime="20201029 18:19:01.968"></status>
</kw>
<msg timestamp="20201029 18:19:01.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.951" endtime="20201029 18:19:01.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.969" endtime="20201029 18:19:01.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.972" endtime="20201029 18:19:01.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.948" endtime="20201029 18:19:01.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.945" endtime="20201029 18:19:01.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.981" endtime="20201029 18:19:02.268"></status>
</kw>
<msg timestamp="20201029 18:19:02.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024047583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024083139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:01.980" endtime="20201029 18:19:02.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024047583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024083139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.273" endtime="20201029 18:19:02.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.281" endtime="20201029 18:19:02.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.977" endtime="20201029 18:19:02.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.975" endtime="20201029 18:19:02.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:02.288" level="INFO">${RESULT} = [{'diff': 3.555599999999909e-05}, {'diff': 3.517999999999924e-05}, {'diff': 3.549999999999734e-05}, {'diff': 3.4805000000002334e-05}, {'diff': 3.526400000000013e-05}, {'diff': 3.551400000000038e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:02.284" endtime="20201029 18:19:02.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:02.292" level="INFO">${ACCURACY} = {'diff': [3.555599999999909e-05, 3.517999999999924e-05, 3.549999999999734e-05, 3.4805000000002334e-05, 3.526400000000013e-05, 3.551400000000038e-05, 3.4790999999999295e-05, 3.5333000000001974e-05, 3.5...</msg>
<status status="PASS" starttime="20201029 18:19:02.289" endtime="20201029 18:19:02.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.296" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 18:19:02.295" endtime="20201029 18:19:02.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.299" level="INFO">VALUE: [3.555599999999909e-05, 3.517999999999924e-05, 3.549999999999734e-05, 3.4805000000002334e-05, 3.526400000000013e-05, 3.551400000000038e-05, 3.4790999999999295e-05, 3.5333000000001974e-05, 3.501399999999988e-05, 3.529200000000274e-05, 3.5097000000001294e-05, 3.4596999999997324e-05, 3.5124999999996964e-05, 3.494499999999803e-05, 3.5111000000000864e-05, 3.4597000000000794e-05, 3.520799999999838e-05, 3.551400000000038e-05, 3.548599999999777e-05, 3.5389000000000254e-05, 3.5360999999997644e-05, 3.497200000000117e-05, 3.5361000000001114e-05, 3.4861000000000614e-05, 3.548600000000124e-05, 3.507000000000163e-05, 3.5445000000002e-05, 3.550000000000081e-05, 3.4833000000001474e-05, 3.506999999999816e-05, 3.543099999999896e-05, 3.530599999999884e-05, 3.4902999999999323e-05, 3.522299999999742e-05, 3.518099999999871e-05, 3.4819000000001904e-05, 3.5152999999999573e-05, 3.505600000000206e-05, 3.4624999999999934e-05, 3.5347000000001544e-05, 3.51520000000001e-05, 3.4790999999999295e-05, 3.4776999999999725e-05, 3.491600000000289e-05, 3.5319000000002404e-05, 3.5040999999999545e-05, 3.5513000000000905e-05, 3.5304999999999365e-05, 3.5277000000000225e-05, 3.540200000000035e-05]</msg>
<status status="PASS" starttime="20201029 18:19:02.298" endtime="20201029 18:19:02.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.293" endtime="20201029 18:19:02.300"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:02.304" endtime="20201029 18:19:02.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.302" endtime="20201029 18:19:02.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.301" endtime="20201029 18:19:02.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.943" endtime="20201029 18:19:02.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.943" endtime="20201029 18:19:02.325"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.333" endtime="20201029 18:19:02.350"></status>
</kw>
<msg timestamp="20201029 18:19:02.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.332" endtime="20201029 18:19:02.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.352" endtime="20201029 18:19:02.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.354" endtime="20201029 18:19:02.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.329" endtime="20201029 18:19:02.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.327" endtime="20201029 18:19:02.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.363" endtime="20201029 18:19:02.648"></status>
</kw>
<msg timestamp="20201029 18:19:02.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023262931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023299167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.362" endtime="20201029 18:19:02.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023262931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023299167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.653" endtime="20201029 18:19:02.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.661" endtime="20201029 18:19:02.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.359" endtime="20201029 18:19:02.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.358" endtime="20201029 18:19:02.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:02.668" level="INFO">${RESULT} = [{'diff': 3.623599999999852e-05}, {'diff': 3.62780000000007e-05}, {'diff': 3.648599999999877e-05}, {'diff': 3.6110999999998394e-05}, {'diff': 3.648600000000224e-05}, {'diff': 3.563799999999756e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:02.665" endtime="20201029 18:19:02.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:02.672" level="INFO">${ACCURACY} = {'diff': [3.623599999999852e-05, 3.62780000000007e-05, 3.648599999999877e-05, 3.6110999999998394e-05, 3.648600000000224e-05, 3.563799999999756e-05, 3.626399999999766e-05, 3.6389000000001254e-05, 3.584...</msg>
<status status="PASS" starttime="20201029 18:19:02.669" endtime="20201029 18:19:02.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.677" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 18:19:02.676" endtime="20201029 18:19:02.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.680" level="INFO">VALUE: [3.623599999999852e-05, 3.62780000000007e-05, 3.648599999999877e-05, 3.6110999999998394e-05, 3.648600000000224e-05, 3.563799999999756e-05, 3.626399999999766e-05, 3.6389000000001254e-05, 3.5847000000002044e-05, 3.5582999999998755e-05, 3.643000000000049e-05, 3.6291000000000795e-05, 3.590200000000085e-05, 3.623599999999852e-05, 3.5653000000000074e-05, 3.648600000000224e-05, 3.61659999999972e-05, 3.5804999999999865e-05, 3.652799999999748e-05, 3.6291000000000795e-05, 3.645799999999963e-05, 3.6555000000000615e-05, 3.6153000000000574e-05, 3.594399999999956e-05, 3.625000000000156e-05, 3.5903000000000324e-05, 3.579200000000324e-05, 3.594399999999956e-05, 3.5610999999997894e-05, 3.569399999999931e-05, 3.579199999999977e-05, 3.600000000000131e-05, 3.6430999999999963e-05, 3.5847000000002044e-05, 3.580599999999934e-05, 3.64719999999992e-05, 3.6083000000002724e-05, 3.641600000000092e-05, 3.6417000000000394e-05, 3.583399999999848e-05, 3.6403000000000824e-05, 3.6180999999999713e-05, 3.602800000000045e-05, 3.62780000000007e-05, 3.5889000000000754e-05, 3.630599999999984e-05, 3.600000000000131e-05, 3.619499999999928e-05, 3.5874999999997714e-05, 3.64719999999992e-05]</msg>
<status status="PASS" starttime="20201029 18:19:02.678" endtime="20201029 18:19:02.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.673" endtime="20201029 18:19:02.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:02.685" endtime="20201029 18:19:02.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.683" endtime="20201029 18:19:02.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.682" endtime="20201029 18:19:02.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.326" endtime="20201029 18:19:02.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.325" endtime="20201029 18:19:02.706"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.714" endtime="20201029 18:19:02.730"></status>
</kw>
<msg timestamp="20201029 18:19:02.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.713" endtime="20201029 18:19:02.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.731" endtime="20201029 18:19:02.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.734" endtime="20201029 18:19:02.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.710" endtime="20201029 18:19:02.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.708" endtime="20201029 18:19:02.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.743" endtime="20201029 18:19:03.029"></status>
</kw>
<msg timestamp="20201029 18:19:03.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021966972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022003917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.742" endtime="20201029 18:19:03.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021966972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022003917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.033" endtime="20201029 18:19:03.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.041" endtime="20201029 18:19:03.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.739" endtime="20201029 18:19:03.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.737" endtime="20201029 18:19:03.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:03.048" level="INFO">${RESULT} = [{'diff': 3.694500000000003e-05}, {'diff': 3.757000000000066e-05}, {'diff': 3.751399999999891e-05}, {'diff': 3.702800000000145e-05}, {'diff': 3.681999999999991e-05}, {'diff': 3.697299999999917e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:03.045" endtime="20201029 18:19:03.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:03.053" level="INFO">${ACCURACY} = {'diff': [3.694500000000003e-05, 3.757000000000066e-05, 3.751399999999891e-05, 3.702800000000145e-05, 3.681999999999991e-05, 3.697299999999917e-05, 3.6931000000000463e-05, 3.69589999999996e-05, 3.6846...</msg>
<status status="PASS" starttime="20201029 18:19:03.049" endtime="20201029 18:19:03.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.058" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 18:19:03.057" endtime="20201029 18:19:03.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.060" level="INFO">VALUE: [3.694500000000003e-05, 3.757000000000066e-05, 3.751399999999891e-05, 3.702800000000145e-05, 3.681999999999991e-05, 3.697299999999917e-05, 3.6931000000000463e-05, 3.69589999999996e-05, 3.6846999999999575e-05, 3.6819000000000435e-05, 3.692999999999752e-05, 3.6874999999998714e-05, 3.683399999999948e-05, 3.7569000000001185e-05, 3.6860999999999144e-05, 3.7374999999999214e-05, 3.692999999999752e-05, 3.723599999999952e-05, 3.751399999999891e-05, 3.719400000000081e-05, 3.7333000000000505e-05, 3.701400000000188e-05, 3.7166999999997674e-05, 3.7166999999997674e-05, 3.742999999999802e-05, 3.7333000000000505e-05, 3.749999999999934e-05, 3.7305000000001365e-05, 3.7318999999997465e-05, 3.7360999999999644e-05, 3.6846999999999575e-05, 3.722199999999995e-05, 3.7096999999999825e-05, 3.6917000000000894e-05, 3.7166999999997674e-05, 3.67780000000012e-05, 3.730600000000084e-05, 3.6903000000001324e-05, 3.6638999999998034e-05, 3.702800000000145e-05, 3.6625000000001934e-05, 3.733399999999998e-05, 3.751400000000238e-05, 3.7166999999997674e-05, 3.658399999999923e-05, 3.7180999999997244e-05, 3.697299999999917e-05, 3.7569000000001185e-05, 3.734799999999955e-05, 3.694500000000003e-05]</msg>
<status status="PASS" starttime="20201029 18:19:03.059" endtime="20201029 18:19:03.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.054" endtime="20201029 18:19:03.061"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:03.065" endtime="20201029 18:19:03.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.064" endtime="20201029 18:19:03.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.062" endtime="20201029 18:19:03.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.707" endtime="20201029 18:19:03.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.706" endtime="20201029 18:19:03.086"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.094" endtime="20201029 18:19:03.110"></status>
</kw>
<msg timestamp="20201029 18:19:03.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.093" endtime="20201029 18:19:03.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.111" endtime="20201029 18:19:03.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.114" endtime="20201029 18:19:03.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.090" endtime="20201029 18:19:03.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.088" endtime="20201029 18:19:03.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.123" endtime="20201029 18:19:03.410"></status>
</kw>
<msg timestamp="20201029 18:19:03.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021957889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021996306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.122" endtime="20201029 18:19:03.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021957889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021996306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.414" endtime="20201029 18:19:03.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.423" endtime="20201029 18:19:03.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.119" endtime="20201029 18:19:03.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.117" endtime="20201029 18:19:03.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:03.429" level="INFO">${RESULT} = [{'diff': 3.8416999999998924e-05}, {'diff': 3.8417000000002394e-05}, {'diff': 3.8333000000001505e-05}, {'diff': 3.7568999999997715e-05}, {'diff': 3.822199999999748e-05}, {'diff': 3.7888999999999284e-0...</msg>
<status status="PASS" starttime="20201029 18:19:03.426" endtime="20201029 18:19:03.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:03.434" level="INFO">${ACCURACY} = {'diff': [3.8416999999998924e-05, 3.8417000000002394e-05, 3.8333000000001505e-05, 3.7568999999997715e-05, 3.822199999999748e-05, 3.7888999999999284e-05, 3.8166999999998674e-05, 3.8097000000000825e-05,...</msg>
<status status="PASS" starttime="20201029 18:19:03.430" endtime="20201029 18:19:03.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.438" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 18:19:03.437" endtime="20201029 18:19:03.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.441" level="INFO">VALUE: [3.8416999999998924e-05, 3.8417000000002394e-05, 3.8333000000001505e-05, 3.7568999999997715e-05, 3.822199999999748e-05, 3.7888999999999284e-05, 3.8166999999998674e-05, 3.8097000000000825e-05, 3.7861000000000145e-05, 3.7597000000000325e-05, 3.832000000000141e-05, 3.854199999999905e-05, 3.8402999999999354e-05, 3.850000000000034e-05, 3.8318999999998465e-05, 3.836200000000012e-05, 3.8208999999997384e-05, 3.8472999999997204e-05, 3.780600000000134e-05, 3.857000000000166e-05, 3.7874999999999714e-05, 3.82919999999988e-05, 3.7875000000003184e-05, 3.8305000000002365e-05, 3.822200000000095e-05, 3.842999999999902e-05, 3.8276999999999756e-05, 3.84720000000012e-05, 3.848600000000077e-05, 3.845800000000163e-05, 3.7861000000000145e-05, 3.817999999999877e-05, 3.7583000000000755e-05, 3.792999999999852e-05, 3.8332999999998035e-05, 3.823599999999705e-05, 3.7624999999999464e-05, 3.848600000000077e-05, 3.852799999999948e-05, 3.77780000000022e-05, 3.7874999999999714e-05, 3.831999999999794e-05, 3.826399999999966e-05, 3.830599999999837e-05, 3.7569000000001185e-05, 3.7861000000000145e-05, 3.8430999999998494e-05, 3.804200000000202e-05, 3.820800000000138e-05, 3.784800000000005e-05]</msg>
<status status="PASS" starttime="20201029 18:19:03.439" endtime="20201029 18:19:03.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.434" endtime="20201029 18:19:03.449"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:03.453" endtime="20201029 18:19:03.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.451" endtime="20201029 18:19:03.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.450" endtime="20201029 18:19:03.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.087" endtime="20201029 18:19:03.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.086" endtime="20201029 18:19:03.474"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.482" endtime="20201029 18:19:03.501"></status>
</kw>
<msg timestamp="20201029 18:19:03.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.481" endtime="20201029 18:19:03.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.503" endtime="20201029 18:19:03.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.506" endtime="20201029 18:19:03.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.478" endtime="20201029 18:19:03.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.476" endtime="20201029 18:19:03.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.515" endtime="20201029 18:19:03.802"></status>
</kw>
<msg timestamp="20201029 18:19:03.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025144069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025183361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.513" endtime="20201029 18:19:03.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025144069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025183361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.807" endtime="20201029 18:19:03.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.818" endtime="20201029 18:19:03.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.510" endtime="20201029 18:19:03.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.509" endtime="20201029 18:19:03.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:03.827" level="INFO">${RESULT} = [{'diff': 3.92919999999998e-05}, {'diff': 3.925000000000109e-05}, {'diff': 3.9166999999999674e-05}, {'diff': 3.9473000000001673e-05}, {'diff': 3.9375000000001215e-05}, {'diff': 3.936200000000112e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:03.823" endtime="20201029 18:19:03.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:03.832" level="INFO">${ACCURACY} = {'diff': [3.92919999999998e-05, 3.925000000000109e-05, 3.9166999999999674e-05, 3.9473000000001673e-05, 3.9375000000001215e-05, 3.936200000000112e-05, 3.9125000000000965e-05, 3.8625000000000465e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:19:03.829" endtime="20201029 18:19:03.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.837" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 18:19:03.836" endtime="20201029 18:19:03.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.839" level="INFO">VALUE: [3.92919999999998e-05, 3.925000000000109e-05, 3.9166999999999674e-05, 3.9473000000001673e-05, 3.9375000000001215e-05, 3.936200000000112e-05, 3.9125000000000965e-05, 3.8625000000000465e-05, 3.913800000000106e-05, 3.9083000000002255e-05, 3.8804999999999396e-05, 3.923600000000152e-05, 3.9262999999997716e-05, 3.9540999999997106e-05, 3.9360999999998175e-05, 3.9096999999998355e-05, 3.9054999999999646e-05, 3.8625000000000465e-05, 3.917999999999977e-05, 3.8875000000000715e-05, 3.9166999999999674e-05, 3.8889000000000284e-05, 3.8652999999999604e-05, 3.9568999999999716e-05, 3.954200000000005e-05, 3.904199999999955e-05, 3.8916999999999424e-05, 3.9097000000001825e-05, 3.9181000000002714e-05, 3.89720000000017e-05, 3.9166999999999674e-05, 3.949999999999787e-05, 3.952800000000048e-05, 3.926399999999719e-05, 3.930599999999937e-05, 3.8861000000001145e-05, 3.951400000000091e-05, 3.900000000000084e-05, 3.925000000000109e-05, 3.902799999999998e-05, 3.8930999999998994e-05, 3.901400000000041e-05, 3.8874999999997245e-05, 3.9290999999996856e-05, 3.9222999999997954e-05, 3.8875000000000715e-05, 3.890200000000038e-05, 3.955599999999962e-05, 3.9473000000001673e-05, 3.9139000000000534e-05]</msg>
<status status="PASS" starttime="20201029 18:19:03.838" endtime="20201029 18:19:03.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.833" endtime="20201029 18:19:03.842"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:03.845" endtime="20201029 18:19:03.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.844" endtime="20201029 18:19:03.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.843" endtime="20201029 18:19:03.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.475" endtime="20201029 18:19:03.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.474" endtime="20201029 18:19:03.866"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.875" endtime="20201029 18:19:03.891"></status>
</kw>
<msg timestamp="20201029 18:19:03.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.874" endtime="20201029 18:19:03.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.892" endtime="20201029 18:19:03.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.895" endtime="20201029 18:19:03.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.871" endtime="20201029 18:19:03.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.869" endtime="20201029 18:19:03.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.904" endtime="20201029 18:19:04.189"></status>
</kw>
<msg timestamp="20201029 18:19:04.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022335431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022375861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.902" endtime="20201029 18:19:04.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022335431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022375861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.193" endtime="20201029 18:19:04.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.202" endtime="20201029 18:19:04.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.900" endtime="20201029 18:19:04.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.898" endtime="20201029 18:19:04.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:04.208" level="INFO">${RESULT} = [{'diff': 4.043000000000102e-05}, {'diff': 4.024999999999862e-05}, {'diff': 4.04859999999993e-05}, {'diff': 3.9889000000001285e-05}, {'diff': 4.049999999999887e-05}, {'diff': 4.0319000000000466e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:04.205" endtime="20201029 18:19:04.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:04.213" level="INFO">${ACCURACY} = {'diff': [4.043000000000102e-05, 4.024999999999862e-05, 4.04859999999993e-05, 3.9889000000001285e-05, 4.049999999999887e-05, 4.0319000000000466e-05, 4.0208999999999384e-05, 3.9889000000001285e-05, 4.0...</msg>
<status status="PASS" starttime="20201029 18:19:04.209" endtime="20201029 18:19:04.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.218" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 18:19:04.217" endtime="20201029 18:19:04.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.221" level="INFO">VALUE: [4.043000000000102e-05, 4.024999999999862e-05, 4.04859999999993e-05, 3.9889000000001285e-05, 4.049999999999887e-05, 4.0319000000000466e-05, 4.0208999999999384e-05, 3.9889000000001285e-05, 4.005600000000012e-05, 4.04859999999993e-05, 4.002799999999751e-05, 4.0360999999999175e-05, 4.0194999999999814e-05, 4.004200000000055e-05, 4.000000000000184e-05, 4.04859999999993e-05, 3.9889000000001285e-05, 4.020799999999991e-05, 4.0445000000000064e-05, 4.002800000000098e-05, 4.043000000000102e-05, 3.9818999999999966e-05, 3.994400000000009e-05, 3.9639000000001035e-05, 4.022199999999948e-05, 3.994400000000009e-05, 4.01660000000012e-05, 4.0124999999998495e-05, 3.988800000000181e-05, 4.0388999999998315e-05, 3.9832999999999535e-05, 4.040200000000188e-05, 4.024999999999862e-05, 4.0555000000001146e-05, 3.99859999999988e-05, 4.0388999999998315e-05, 3.9917000000000424e-05, 3.9611000000001895e-05, 4.0554999999997676e-05, 3.9846999999999105e-05, 4.025000000000209e-05, 3.9875000000001715e-05, 3.9972999999998704e-05, 4.051400000000191e-05, 4.051399999999844e-05, 4.0346999999999605e-05, 3.9861000000002145e-05, 4.027800000000123e-05, 4.023599999999905e-05, 3.997199999999923e-05]</msg>
<status status="PASS" starttime="20201029 18:19:04.219" endtime="20201029 18:19:04.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.214" endtime="20201029 18:19:04.222"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:04.226" endtime="20201029 18:19:04.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.224" endtime="20201029 18:19:04.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.223" endtime="20201029 18:19:04.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.867" endtime="20201029 18:19:04.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.866" endtime="20201029 18:19:04.246"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.255" endtime="20201029 18:19:04.271"></status>
</kw>
<msg timestamp="20201029 18:19:04.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.253" endtime="20201029 18:19:04.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.273" endtime="20201029 18:19:04.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.275" endtime="20201029 18:19:04.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.251" endtime="20201029 18:19:04.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.249" endtime="20201029 18:19:04.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.284" endtime="20201029 18:19:04.571"></status>
</kw>
<msg timestamp="20201029 18:19:04.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022143472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022185014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.283" endtime="20201029 18:19:04.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022143472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022185014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.576" endtime="20201029 18:19:04.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.584" endtime="20201029 18:19:04.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.280" endtime="20201029 18:19:04.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.279" endtime="20201029 18:19:04.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:04.591" level="INFO">${RESULT} = [{'diff': 4.154199999999858e-05}, {'diff': 4.147200000000073e-05}, {'diff': 4.0888999999998815e-05}, {'diff': 4.156999999999772e-05}, {'diff': 4.133400000000051e-05}, {'diff': 4.09859999999998e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:04.588" endtime="20201029 18:19:04.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:04.595" level="INFO">${ACCURACY} = {'diff': [4.154199999999858e-05, 4.147200000000073e-05, 4.0888999999998815e-05, 4.156999999999772e-05, 4.133400000000051e-05, 4.09859999999998e-05, 4.0944999999997095e-05, 4.1110999999999925e-05, 4.13...</msg>
<status status="PASS" starttime="20201029 18:19:04.592" endtime="20201029 18:19:04.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.600" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 18:19:04.599" endtime="20201029 18:19:04.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.602" level="INFO">VALUE: [4.154199999999858e-05, 4.147200000000073e-05, 4.0888999999998815e-05, 4.156999999999772e-05, 4.133400000000051e-05, 4.09859999999998e-05, 4.0944999999997095e-05, 4.1110999999999925e-05, 4.130600000000137e-05, 4.105599999999765e-05, 4.141600000000245e-05, 4.1512999999999967e-05, 4.145799999999769e-05, 4.126399999999919e-05, 4.1110999999999925e-05, 4.118000000000177e-05, 4.099999999999937e-05, 4.1361000000000175e-05, 4.1054999999998176e-05, 4.082000000000044e-05, 4.0847000000000105e-05, 4.126399999999919e-05, 4.1041000000002076e-05, 4.097200000000023e-05, 4.0832999999997066e-05, 4.1403000000002355e-05, 4.129199999999833e-05, 4.144399999999812e-05, 4.0874999999999245e-05, 4.104199999999808e-05, 4.127800000000223e-05, 4.0874999999999245e-05, 4.119399999999787e-05, 4.0889000000002285e-05, 4.108400000000026e-05, 4.147199999999726e-05, 4.0931000000000994e-05, 4.1138999999999065e-05, 4.1333000000001036e-05, 4.105600000000112e-05, 4.0945000000000564e-05, 4.1180999999997775e-05, 4.097200000000023e-05, 4.1361000000000175e-05, 4.0653000000001605e-05, 4.0902999999998385e-05, 4.133400000000051e-05, 4.101399999999894e-05, 4.1332999999997566e-05, 4.101400000000241e-05]</msg>
<status status="PASS" starttime="20201029 18:19:04.601" endtime="20201029 18:19:04.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.596" endtime="20201029 18:19:04.604"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:04.607" endtime="20201029 18:19:04.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.606" endtime="20201029 18:19:04.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.604" endtime="20201029 18:19:04.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.247" endtime="20201029 18:19:04.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.247" endtime="20201029 18:19:04.628"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.637" endtime="20201029 18:19:04.653"></status>
</kw>
<msg timestamp="20201029 18:19:04.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.635" endtime="20201029 18:19:04.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.655" endtime="20201029 18:19:04.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.657" endtime="20201029 18:19:04.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.633" endtime="20201029 18:19:04.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.631" endtime="20201029 18:19:04.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.666" endtime="20201029 18:19:04.954"></status>
</kw>
<msg timestamp="20201029 18:19:04.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023174069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023216583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.665" endtime="20201029 18:19:04.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023174069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023216583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.958" endtime="20201029 18:19:04.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.967" endtime="20201029 18:19:04.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.662" endtime="20201029 18:19:04.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.661" endtime="20201029 18:19:04.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:04.974" level="INFO">${RESULT} = [{'diff': 4.251400000000044e-05}, {'diff': 4.1611000000000425e-05}, {'diff': 4.2152999999999635e-05}, {'diff': 4.201399999999994e-05}, {'diff': 4.1861000000000675e-05}, {'diff': 4.1861000000000675e-05...</msg>
<status status="PASS" starttime="20201029 18:19:04.970" endtime="20201029 18:19:04.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:04.978" level="INFO">${ACCURACY} = {'diff': [4.251400000000044e-05, 4.1611000000000425e-05, 4.2152999999999635e-05, 4.201399999999994e-05, 4.1861000000000675e-05, 4.1861000000000675e-05, 4.2166999999999205e-05, 4.2389000000000315e-05, ...</msg>
<status status="PASS" starttime="20201029 18:19:04.975" endtime="20201029 18:19:04.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.983" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 18:19:04.982" endtime="20201029 18:19:04.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.985" level="INFO">VALUE: [4.251400000000044e-05, 4.1611000000000425e-05, 4.2152999999999635e-05, 4.201399999999994e-05, 4.1861000000000675e-05, 4.1861000000000675e-05, 4.2166999999999205e-05, 4.2389000000000315e-05, 4.2431000000002494e-05, 4.226400000000019e-05, 4.2389000000000315e-05, 4.222199999999801e-05, 4.2096999999997886e-05, 4.204199999999908e-05, 4.224999999999715e-05, 4.205600000000212e-05, 4.2167000000002675e-05, 4.229199999999933e-05, 4.223600000000105e-05, 4.2304999999999426e-05, 4.244399999999912e-05, 4.2194999999998345e-05, 4.1973000000000704e-05, 4.188800000000034e-05, 4.1860999999997206e-05, 4.1776999999999787e-05, 4.19860000000008e-05, 4.244399999999912e-05, 4.206999999999822e-05, 4.2110999999997456e-05, 4.2110999999997456e-05, 4.240200000000041e-05, 4.2068999999998746e-05, 4.2361000000001175e-05, 4.190199999999991e-05, 4.190199999999991e-05, 4.1902999999999385e-05, 4.1611000000000425e-05, 4.194400000000209e-05, 4.2290999999999856e-05, 4.177800000000273e-05, 4.2152999999999635e-05, 4.24860000000013e-05, 4.2083000000001786e-05, 4.24860000000013e-05, 4.1875000000000245e-05, 4.229199999999933e-05, 4.1861000000000675e-05, 4.163800000000009e-05, 4.2111000000000925e-05]</msg>
<status status="PASS" starttime="20201029 18:19:04.984" endtime="20201029 18:19:04.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.979" endtime="20201029 18:19:04.987"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:04.991" endtime="20201029 18:19:05.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.989" endtime="20201029 18:19:05.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.988" endtime="20201029 18:19:05.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.629" endtime="20201029 18:19:05.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.628" endtime="20201029 18:19:05.012"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.020" endtime="20201029 18:19:05.036"></status>
</kw>
<msg timestamp="20201029 18:19:05.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.019" endtime="20201029 18:19:05.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.038" endtime="20201029 18:19:05.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.040" endtime="20201029 18:19:05.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.016" endtime="20201029 18:19:05.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.014" endtime="20201029 18:19:05.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.050" endtime="20201029 18:19:05.335"></status>
</kw>
<msg timestamp="20201029 18:19:05.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022091556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022135181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:05.048" endtime="20201029 18:19:05.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022091556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022135181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:05.340" endtime="20201029 18:19:05.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.348" endtime="20201029 18:19:05.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.045" endtime="20201029 18:19:05.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.044" endtime="20201029 18:19:05.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:05.355" level="INFO">${RESULT} = [{'diff': 4.3625000000001996e-05}, {'diff': 4.34860000000023e-05}, {'diff': 4.3541000000001107e-05}, {'diff': 4.3318999999999996e-05}, {'diff': 4.297199999999876e-05}, {'diff': 4.3389000000001315e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:05.351" endtime="20201029 18:19:05.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:05.360" level="INFO">${ACCURACY} = {'diff': [4.3625000000001996e-05, 4.34860000000023e-05, 4.3541000000001107e-05, 4.3318999999999996e-05, 4.297199999999876e-05, 4.3389000000001315e-05, 4.2639000000000565e-05, 4.291600000000048e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:19:05.356" endtime="20201029 18:19:05.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.364" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 18:19:05.363" endtime="20201029 18:19:05.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.367" level="INFO">VALUE: [4.3625000000001996e-05, 4.34860000000023e-05, 4.3541000000001107e-05, 4.3318999999999996e-05, 4.297199999999876e-05, 4.3389000000001315e-05, 4.2639000000000565e-05, 4.291600000000048e-05, 4.344400000000012e-05, 4.291599999999701e-05, 4.297199999999876e-05, 4.348599999999883e-05, 4.351400000000144e-05, 4.294399999999962e-05, 4.3332999999999566e-05, 4.297199999999876e-05, 4.3097000000002356e-05, 4.3167000000000205e-05, 4.3167000000000205e-05, 4.2818999999999496e-05, 4.356999999999972e-05, 4.331999999999947e-05, 4.2625000000000995e-05, 4.2597000000001856e-05, 4.3055000000000176e-05, 4.301399999999747e-05, 4.33059999999999e-05, 4.345799999999969e-05, 4.3487000000001774e-05, 4.283399999999854e-05, 4.2875000000001245e-05, 4.28059999999994e-05, 4.3332999999999566e-05, 4.309799999999836e-05, 4.3332999999999566e-05, 4.302800000000051e-05, 4.3068999999999746e-05, 4.3012999999998e-05, 4.277700000000079e-05, 4.340200000000141e-05, 4.3332999999999566e-05, 4.3431000000000025e-05, 4.2874999999997776e-05, 4.3375000000001745e-05, 4.3124999999998026e-05, 4.302800000000051e-05, 4.294399999999962e-05, 4.2874999999997776e-05, 4.347199999999926e-05, 4.3582999999999816e-05]</msg>
<status status="PASS" starttime="20201029 18:19:05.365" endtime="20201029 18:19:05.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.361" endtime="20201029 18:19:05.368"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:05.372" endtime="20201029 18:19:05.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.370" endtime="20201029 18:19:05.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.369" endtime="20201029 18:19:05.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.013" endtime="20201029 18:19:05.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.012" endtime="20201029 18:19:05.393"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.401" endtime="20201029 18:19:05.418"></status>
</kw>
<msg timestamp="20201029 18:19:05.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.400" endtime="20201029 18:19:05.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.419" endtime="20201029 18:19:05.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.422" endtime="20201029 18:19:05.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.397" endtime="20201029 18:19:05.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.395" endtime="20201029 18:19:05.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.431" endtime="20201029 18:19:05.719"></status>
</kw>
<msg timestamp="20201029 18:19:05.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022074097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:05.429" endtime="20201029 18:19:05.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022074097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:05.723" endtime="20201029 18:19:05.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.731" endtime="20201029 18:19:05.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.427" endtime="20201029 18:19:05.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.425" endtime="20201029 18:19:05.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:05.738" level="INFO">${RESULT} = [{'diff': 4.451399999999897e-05}, {'diff': 4.4417000000001455e-05}, {'diff': 4.4152999999998166e-05}, {'diff': 4.383399999999954e-05}, {'diff': 4.4083000000000316e-05}, {'diff': 4.455600000000115e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:05.735" endtime="20201029 18:19:05.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:05.742" level="INFO">${ACCURACY} = {'diff': [4.451399999999897e-05, 4.4417000000001455e-05, 4.4152999999998166e-05, 4.383399999999954e-05, 4.4083000000000316e-05, 4.455600000000115e-05, 4.397199999999976e-05, 4.3930999999997056e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:19:05.739" endtime="20201029 18:19:05.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.747" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 18:19:05.746" endtime="20201029 18:19:05.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.749" level="INFO">VALUE: [4.451399999999897e-05, 4.4417000000001455e-05, 4.4152999999998166e-05, 4.383399999999954e-05, 4.4083000000000316e-05, 4.455600000000115e-05, 4.397199999999976e-05, 4.3930999999997056e-05, 4.401399999999847e-05, 4.43329999999971e-05, 4.384799999999911e-05, 4.3610999999998956e-05, 4.4167000000001205e-05, 4.398599999999933e-05, 4.4472999999999735e-05, 4.3639000000001565e-05, 4.4180999999997306e-05, 4.376400000000169e-05, 4.424999999999915e-05, 4.3931000000000525e-05, 4.4195000000000345e-05, 4.434799999999961e-05, 4.424999999999915e-05, 4.390200000000191e-05, 4.3833000000000066e-05, 4.427700000000229e-05, 4.454099999999864e-05, 4.390200000000191e-05, 4.3638999999998096e-05, 4.391600000000148e-05, 4.4124999999999026e-05, 4.4374999999999276e-05, 4.3903000000001385e-05, 4.393000000000105e-05, 4.397200000000323e-05, 4.401399999999847e-05, 4.3861000000002676e-05, 4.3596999999999386e-05, 4.395800000000019e-05, 4.456899999999778e-05, 4.3903000000001385e-05, 4.4597000000000386e-05, 4.44999999999994e-05, 4.44999999999994e-05, 4.4195000000000345e-05, 4.3624999999998526e-05, 4.426399999999872e-05, 4.4388999999998846e-05, 4.4153000000001635e-05, 4.3860999999999206e-05]</msg>
<status status="PASS" starttime="20201029 18:19:05.748" endtime="20201029 18:19:05.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.743" endtime="20201029 18:19:05.751"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:05.754" endtime="20201029 18:19:05.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.753" endtime="20201029 18:19:05.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.752" endtime="20201029 18:19:05.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.393" endtime="20201029 18:19:05.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.393" endtime="20201029 18:19:05.775"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.784" endtime="20201029 18:19:05.801"></status>
</kw>
<msg timestamp="20201029 18:19:05.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.782" endtime="20201029 18:19:05.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.802" endtime="20201029 18:19:05.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.805" endtime="20201029 18:19:05.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.780" endtime="20201029 18:19:05.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.778" endtime="20201029 18:19:05.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.814" endtime="20201029 18:19:06.099"></status>
</kw>
<msg timestamp="20201029 18:19:06.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022912125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022957, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:05.812" endtime="20201029 18:19:06.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022912125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022957, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:06.103" endtime="20201029 18:19:06.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.112" endtime="20201029 18:19:06.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.810" endtime="20201029 18:19:06.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.808" endtime="20201029 18:19:06.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:06.119" level="INFO">${RESULT} = [{'diff': 4.4875000000003246e-05}, {'diff': 4.479200000000183e-05}, {'diff': 4.4931000000001525e-05}, {'diff': 4.5416999999998986e-05}, {'diff': 4.4902999999998916e-05}, {'diff': 4.5209000000000915e-0...</msg>
<status status="PASS" starttime="20201029 18:19:06.115" endtime="20201029 18:19:06.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:06.123" level="INFO">${ACCURACY} = {'diff': [4.4875000000003246e-05, 4.479200000000183e-05, 4.4931000000001525e-05, 4.5416999999998986e-05, 4.4902999999998916e-05, 4.5209000000000915e-05, 4.49999999999999e-05, 4.5195000000001345e-05, 4...</msg>
<status status="PASS" starttime="20201029 18:19:06.120" endtime="20201029 18:19:06.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.127" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 18:19:06.126" endtime="20201029 18:19:06.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.130" level="INFO">VALUE: [4.4875000000003246e-05, 4.479200000000183e-05, 4.4931000000001525e-05, 4.5416999999998986e-05, 4.4902999999998916e-05, 4.5209000000000915e-05, 4.49999999999999e-05, 4.5195000000001345e-05, 4.51939999999984e-05, 4.5166999999998736e-05, 4.526400000000319e-05, 4.502799999999904e-05, 4.470800000000094e-05, 4.480599999999793e-05, 4.554099999999964e-05, 4.504100000000261e-05, 4.466599999999876e-05, 4.477699999999932e-05, 4.498599999999686e-05, 4.523600000000058e-05, 4.5097000000000886e-05, 4.5361000000000706e-05, 4.4888999999999346e-05, 4.5138999999999596e-05, 4.5083000000001316e-05, 4.4916999999998486e-05, 4.4847000000000636e-05, 4.484800000000011e-05, 4.4903000000002385e-05, 4.4861000000000206e-05, 4.4610999999999956e-05, 4.534699999999767e-05, 4.482000000000097e-05, 4.49999999999999e-05, 4.545799999999822e-05, 4.525000000000015e-05, 4.5319000000001997e-05, 4.4889000000002816e-05, 4.5097000000000886e-05, 4.4959000000000665e-05, 4.5361000000000706e-05, 4.5402999999999416e-05, 4.4945000000001095e-05, 4.461199999999943e-05, 4.5111000000000456e-05, 4.458400000000029e-05, 4.461199999999943e-05, 4.530499999999896e-05, 4.483400000000054e-05, 4.463799999999962e-05]</msg>
<status status="PASS" starttime="20201029 18:19:06.128" endtime="20201029 18:19:06.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.124" endtime="20201029 18:19:06.132"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:06.136" endtime="20201029 18:19:06.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.134" endtime="20201029 18:19:06.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.133" endtime="20201029 18:19:06.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.776" endtime="20201029 18:19:06.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.776" endtime="20201029 18:19:06.156"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.165" endtime="20201029 18:19:06.181"></status>
</kw>
<msg timestamp="20201029 18:19:06.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.163" endtime="20201029 18:19:06.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.183" endtime="20201029 18:19:06.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.185" endtime="20201029 18:19:06.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.161" endtime="20201029 18:19:06.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.159" endtime="20201029 18:19:06.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.195" endtime="20201029 18:19:06.481"></status>
</kw>
<msg timestamp="20201029 18:19:06.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022117639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022163819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.193" endtime="20201029 18:19:06.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022117639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022163819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.486" endtime="20201029 18:19:06.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.494" endtime="20201029 18:19:06.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.190" endtime="20201029 18:19:06.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.189" endtime="20201029 18:19:06.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:06.502" level="INFO">${RESULT} = [{'diff': 4.617999999999983e-05}, {'diff': 4.611099999999799e-05}, {'diff': 4.604100000000014e-05}, {'diff': 4.5972999999997766e-05}, {'diff': 4.627800000000029e-05}, {'diff': 4.6153000000000166e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:06.498" endtime="20201029 18:19:06.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:06.507" level="INFO">${ACCURACY} = {'diff': [4.617999999999983e-05, 4.611099999999799e-05, 4.604100000000014e-05, 4.5972999999997766e-05, 4.627800000000029e-05, 4.6153000000000166e-05, 4.65000000000014e-05, 4.6444999999999126e-05, 4.60...</msg>
<status status="PASS" starttime="20201029 18:19:06.503" endtime="20201029 18:19:06.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.512" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 18:19:06.511" endtime="20201029 18:19:06.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.514" level="INFO">VALUE: [4.617999999999983e-05, 4.611099999999799e-05, 4.604100000000014e-05, 4.5972999999997766e-05, 4.627800000000029e-05, 4.6153000000000166e-05, 4.65000000000014e-05, 4.6444999999999126e-05, 4.602800000000004e-05, 4.602800000000004e-05, 4.577700000000032e-05, 4.620799999999897e-05, 4.579099999999989e-05, 4.592999999999958e-05, 4.598600000000133e-05, 4.634699999999867e-05, 4.630499999999996e-05, 4.580499999999946e-05, 4.5583000000001817e-05, 4.598600000000133e-05, 4.622200000000201e-05, 4.5625000000000526e-05, 4.58329999999986e-05, 4.651400000000097e-05, 4.625000000000115e-05, 4.5931000000002525e-05, 4.65139999999975e-05, 4.595799999999872e-05, 4.622199999999854e-05, 4.5625000000000526e-05, 4.5916999999999486e-05, 4.647199999999879e-05, 4.6416999999999986e-05, 4.625000000000115e-05, 4.5902999999999916e-05, 4.58199999999985e-05, 4.5972999999997766e-05, 4.6444999999999126e-05, 4.626400000000072e-05, 4.6416999999999986e-05, 4.611200000000093e-05, 4.629199999999986e-05, 4.629199999999986e-05, 4.622199999999854e-05, 4.579199999999936e-05, 4.625000000000115e-05, 4.625000000000115e-05, 4.63329999999991e-05, 4.620799999999897e-05, 4.654100000000064e-05]</msg>
<status status="PASS" starttime="20201029 18:19:06.513" endtime="20201029 18:19:06.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.508" endtime="20201029 18:19:06.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:06.520" endtime="20201029 18:19:06.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.518" endtime="20201029 18:19:06.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.516" endtime="20201029 18:19:06.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.157" endtime="20201029 18:19:06.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.157" endtime="20201029 18:19:06.541"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.551" endtime="20201029 18:19:06.567"></status>
</kw>
<msg timestamp="20201029 18:19:06.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.549" endtime="20201029 18:19:06.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.569" endtime="20201029 18:19:06.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.571" endtime="20201029 18:19:06.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.546" endtime="20201029 18:19:06.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.544" endtime="20201029 18:19:06.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.581" endtime="20201029 18:19:06.867"></status>
</kw>
<msg timestamp="20201029 18:19:06.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023735417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023782292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.579" endtime="20201029 18:19:06.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023735417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023782292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.872" endtime="20201029 18:19:06.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.880" endtime="20201029 18:19:06.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.576" endtime="20201029 18:19:06.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.575" endtime="20201029 18:19:06.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:06.887" level="INFO">${RESULT} = [{'diff': 4.687499999999831e-05}, {'diff': 4.744400000000065e-05}, {'diff': 4.706999999999975e-05}, {'diff': 4.7208999999999446e-05}, {'diff': 4.732e-05}, {'diff': 4.698599999999886e-05}, {'diff': 4.7...</msg>
<status status="PASS" starttime="20201029 18:19:06.884" endtime="20201029 18:19:06.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:06.891" level="INFO">${ACCURACY} = {'diff': [4.687499999999831e-05, 4.744400000000065e-05, 4.706999999999975e-05, 4.7208999999999446e-05, 4.732e-05, 4.698599999999886e-05, 4.757000000000025e-05, 4.7208999999999446e-05, 4.73749999999988...</msg>
<status status="PASS" starttime="20201029 18:19:06.888" endtime="20201029 18:19:06.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.895" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 18:19:06.894" endtime="20201029 18:19:06.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.898" level="INFO">VALUE: [4.687499999999831e-05, 4.744400000000065e-05, 4.706999999999975e-05, 4.7208999999999446e-05, 4.732e-05, 4.698599999999886e-05, 4.757000000000025e-05, 4.7208999999999446e-05, 4.737499999999881e-05, 4.727699999999835e-05, 4.722199999999954e-05, 4.7375000000002276e-05, 4.7597000000003387e-05, 4.71940000000004e-05, 4.73330000000001e-05, 4.722199999999954e-05, 4.736099999999924e-05, 4.729099999999792e-05, 4.748599999999936e-05, 4.699999999999843e-05, 4.752799999999807e-05, 4.659699999999892e-05, 4.755500000000121e-05, 4.691699999999702e-05, 4.724999999999868e-05, 4.747200000000326e-05, 4.752799999999807e-05, 4.698599999999886e-05, 4.71529999999977e-05, 4.679200000000036e-05, 4.73330000000001e-05, 4.709699999999942e-05, 4.656999999999925e-05, 4.744400000000065e-05, 4.6625000000001526e-05, 4.704199999999714e-05, 4.754200000000111e-05, 4.676400000000122e-05, 4.712499999999856e-05, 4.737499999999881e-05, 4.697199999999929e-05, 4.7445000000000126e-05, 4.756900000000078e-05, 4.722199999999954e-05, 4.654100000000064e-05, 4.7375000000002276e-05, 4.708299999999985e-05, 4.705500000000071e-05, 4.694400000000015e-05, 4.722199999999954e-05]</msg>
<status status="PASS" starttime="20201029 18:19:06.897" endtime="20201029 18:19:06.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.892" endtime="20201029 18:19:06.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:06.903" endtime="20201029 18:19:06.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.901" endtime="20201029 18:19:06.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.900" endtime="20201029 18:19:06.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.542" endtime="20201029 18:19:06.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.541" endtime="20201029 18:19:06.924"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.933" endtime="20201029 18:19:06.952"></status>
</kw>
<msg timestamp="20201029 18:19:06.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.931" endtime="20201029 18:19:06.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.954" endtime="20201029 18:19:06.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.956" endtime="20201029 18:19:06.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.928" endtime="20201029 18:19:06.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.926" endtime="20201029 18:19:06.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.965" endtime="20201029 18:19:07.251"></status>
</kw>
<msg timestamp="20201029 18:19:07.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025363944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025411986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.964" endtime="20201029 18:19:07.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025363944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025411986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:07.255" endtime="20201029 18:19:07.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.264" endtime="20201029 18:19:07.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.961" endtime="20201029 18:19:07.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.959" endtime="20201029 18:19:07.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:07.270" level="INFO">${RESULT} = [{'diff': 4.804200000000161e-05}, {'diff': 4.848600000000036e-05}, {'diff': 4.791699999999802e-05}, {'diff': 4.806900000000128e-05}, {'diff': 4.826399999999925e-05}, {'diff': 4.845799999999775e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:07.267" endtime="20201029 18:19:07.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:07.274" level="INFO">${ACCURACY} = {'diff': [4.804200000000161e-05, 4.848600000000036e-05, 4.791699999999802e-05, 4.806900000000128e-05, 4.826399999999925e-05, 4.845799999999775e-05, 4.808300000000085e-05, 4.847199999999732e-05, 4.8068...</msg>
<status status="PASS" starttime="20201029 18:19:07.271" endtime="20201029 18:19:07.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.279" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 18:19:07.278" endtime="20201029 18:19:07.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.281" level="INFO">VALUE: [4.804200000000161e-05, 4.848600000000036e-05, 4.791699999999802e-05, 4.806900000000128e-05, 4.826399999999925e-05, 4.845799999999775e-05, 4.808300000000085e-05, 4.847199999999732e-05, 4.806899999999781e-05, 4.8403000000002416e-05, 4.786099999999974e-05, 4.786099999999974e-05, 4.809700000000042e-05, 4.759699999999992e-05, 4.758399999999982e-05, 4.843099999999809e-05, 4.8153000000002166e-05, 4.8013999999999e-05, 4.817999999999836e-05, 4.85139999999995e-05, 4.830600000000143e-05, 4.7931000000001056e-05, 4.777699999999885e-05, 4.777800000000179e-05, 4.763799999999915e-05, 4.854199999999864e-05, 4.797200000000029e-05, 4.798599999999986e-05, 4.834700000000067e-05, 4.815199999999922e-05, 4.784700000000017e-05, 4.762499999999906e-05, 4.855599999999821e-05, 4.822200000000054e-05, 4.855599999999821e-05, 4.831899999999806e-05, 4.798599999999986e-05, 4.784700000000017e-05, 4.849999999999993e-05, 4.831900000000153e-05, 4.759699999999992e-05, 4.795800000000072e-05, 4.758300000000035e-05, 4.8417000000001986e-05, 4.8195000000000876e-05, 4.795800000000072e-05, 4.7889000000002346e-05, 4.840299999999895e-05, 4.838899999999938e-05, 4.804199999999814e-05]</msg>
<status status="PASS" starttime="20201029 18:19:07.280" endtime="20201029 18:19:07.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.275" endtime="20201029 18:19:07.284"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:07.287" endtime="20201029 18:19:07.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.286" endtime="20201029 18:19:07.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.285" endtime="20201029 18:19:07.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.925" endtime="20201029 18:19:07.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.924" endtime="20201029 18:19:07.308"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.317" endtime="20201029 18:19:07.333"></status>
</kw>
<msg timestamp="20201029 18:19:07.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:07.315" endtime="20201029 18:19:07.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:07.335" endtime="20201029 18:19:07.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.338" endtime="20201029 18:19:07.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.313" endtime="20201029 18:19:07.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.311" endtime="20201029 18:19:07.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.347" endtime="20201029 18:19:07.632"></status>
</kw>
<msg timestamp="20201029 18:19:07.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021957667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022006625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:07.345" endtime="20201029 18:19:07.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021957667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022006625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:07.636" endtime="20201029 18:19:07.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.645" endtime="20201029 18:19:07.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.342" endtime="20201029 18:19:07.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.341" endtime="20201029 18:19:07.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:07.651" level="INFO">${RESULT} = [{'diff': 4.895799999999825e-05}, {'diff': 4.902799999999957e-05}, {'diff': 4.894399999999868e-05}, {'diff': 4.906899999999881e-05}, {'diff': 4.9014e-05}, {'diff': 4.904200000000261e-05}, {'diff': 4.9...</msg>
<status status="PASS" starttime="20201029 18:19:07.648" endtime="20201029 18:19:07.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:07.656" level="INFO">${ACCURACY} = {'diff': [4.895799999999825e-05, 4.902799999999957e-05, 4.894399999999868e-05, 4.906899999999881e-05, 4.9014e-05, 4.904200000000261e-05, 4.955600000000268e-05, 4.936100000000124e-05, 4.954199999999964...</msg>
<status status="PASS" starttime="20201029 18:19:07.652" endtime="20201029 18:19:07.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.661" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 18:19:07.660" endtime="20201029 18:19:07.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.663" level="INFO">VALUE: [4.895799999999825e-05, 4.902799999999957e-05, 4.894399999999868e-05, 4.906899999999881e-05, 4.9014e-05, 4.904200000000261e-05, 4.955600000000268e-05, 4.936100000000124e-05, 4.954199999999964e-05, 4.9195000000001876e-05, 4.852799999999907e-05, 4.911099999999752e-05, 4.862500000000006e-05, 4.944400000000265e-05, 4.9445000000002126e-05, 4.859800000000039e-05, 4.916599999999979e-05, 4.854199999999864e-05, 4.884800000000064e-05, 4.912500000000056e-05, 4.915200000000022e-05, 4.941600000000004e-05, 4.942999999999961e-05, 4.942999999999961e-05, 4.930499999999949e-05, 4.922200000000154e-05, 4.906999999999828e-05, 4.91940000000024e-05, 4.887500000000031e-05, 4.906999999999828e-05, 4.888899999999988e-05, 4.95140000000005e-05, 4.886100000000074e-05, 4.887500000000031e-05, 4.908300000000185e-05, 4.887500000000031e-05, 4.913900000000013e-05, 4.952800000000007e-05, 4.9208999999997977e-05, 4.927799999999982e-05, 4.918099999999884e-05, 4.859800000000039e-05, 4.886100000000074e-05, 4.913800000000065e-05, 4.88200000000015e-05, 4.913900000000013e-05, 4.888899999999988e-05, 4.859700000000092e-05, 4.887499999999684e-05, 4.890199999999997e-05]</msg>
<status status="PASS" starttime="20201029 18:19:07.662" endtime="20201029 18:19:07.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.657" endtime="20201029 18:19:07.665"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:07.668" endtime="20201029 18:19:07.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.667" endtime="20201029 18:19:07.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.666" endtime="20201029 18:19:07.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.309" endtime="20201029 18:19:07.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.309" endtime="20201029 18:19:07.689"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.698" endtime="20201029 18:19:07.715"></status>
</kw>
<msg timestamp="20201029 18:19:07.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:07.696" endtime="20201029 18:19:07.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:07.716" endtime="20201029 18:19:07.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.719" endtime="20201029 18:19:07.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.694" endtime="20201029 18:19:07.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.692" endtime="20201029 18:19:07.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.728" endtime="20201029 18:19:08.016"></status>
</kw>
<msg timestamp="20201029 18:19:08.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022070778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022121125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:07.726" endtime="20201029 18:19:08.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022070778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022121125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.021" endtime="20201029 18:19:08.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.029" endtime="20201029 18:19:08.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.724" endtime="20201029 18:19:08.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.722" endtime="20201029 18:19:08.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:08.036" level="INFO">${RESULT} = [{'diff': 5.03469999999992e-05}, {'diff': 5.055600000000021e-05}, {'diff': 5.033299999999963e-05}, {'diff': 4.961100000000149e-05}, {'diff': 5.041700000000052e-05}, {'diff': 5.041699999999705e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:08.033" endtime="20201029 18:19:08.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:08.040" level="INFO">${ACCURACY} = {'diff': [5.03469999999992e-05, 5.055600000000021e-05, 5.033299999999963e-05, 4.961100000000149e-05, 5.041700000000052e-05, 5.041699999999705e-05, 4.958400000000182e-05, 5.011099999999852e-05, 4.98059...</msg>
<status status="PASS" starttime="20201029 18:19:08.037" endtime="20201029 18:19:08.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.044" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 18:19:08.043" endtime="20201029 18:19:08.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.047" level="INFO">VALUE: [5.03469999999992e-05, 5.055600000000021e-05, 5.033299999999963e-05, 4.961100000000149e-05, 5.041700000000052e-05, 5.041699999999705e-05, 4.958400000000182e-05, 5.011099999999852e-05, 4.980599999999946e-05, 4.994499999999916e-05, 4.9959000000002196e-05, 5.041700000000052e-05, 5.056999999999978e-05, 5.019499999999941e-05, 5.027700000000135e-05, 5.05409999999977e-05, 5.011199999999799e-05, 4.990300000000045e-05, 4.963900000000063e-05, 5.025000000000168e-05, 4.979100000000042e-05, 5.012499999999809e-05, 4.980499999999999e-05, 5.054100000000117e-05, 4.961100000000149e-05, 5.025000000000168e-05, 5.022199999999907e-05, 5.045799999999975e-05, 5.050000000000193e-05, 5.005500000000024e-05, 4.988900000000088e-05, 4.979199999999989e-05, 5.043100000000009e-05, 4.961100000000149e-05, 4.990300000000045e-05, 5.037500000000181e-05, 4.999999999999796e-05, 5.033299999999963e-05, 5.016700000000027e-05, 5.018099999999984e-05, 4.959700000000192e-05, 4.981999999999903e-05, 5.030599999999996e-05, 5.031999999999953e-05, 5.029200000000039e-05, 4.957000000000225e-05, 5.00279999999971e-05, 4.993099999999959e-05, 5.006899999999981e-05, 5.013900000000113e-05]</msg>
<status status="PASS" starttime="20201029 18:19:08.046" endtime="20201029 18:19:08.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.041" endtime="20201029 18:19:08.048"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:08.052" endtime="20201029 18:19:08.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.050" endtime="20201029 18:19:08.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.049" endtime="20201029 18:19:08.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.690" endtime="20201029 18:19:08.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.689" endtime="20201029 18:19:08.074"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.087" endtime="20201029 18:19:08.105"></status>
</kw>
<msg timestamp="20201029 18:19:08.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.085" endtime="20201029 18:19:08.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.107" endtime="20201029 18:19:08.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.109" endtime="20201029 18:19:08.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.081" endtime="20201029 18:19:08.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.078" endtime="20201029 18:19:08.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.119" endtime="20201029 18:19:08.404"></status>
</kw>
<msg timestamp="20201029 18:19:08.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028765403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028816944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.117" endtime="20201029 18:19:08.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028765403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028816944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.408" endtime="20201029 18:19:08.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.417" endtime="20201029 18:19:08.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.114" endtime="20201029 18:19:08.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.113" endtime="20201029 18:19:08.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:08.423" level="INFO">${RESULT} = [{'diff': 5.154100000000217e-05}, {'diff': 5.083300000000013e-05}, {'diff': 5.130500000000149e-05}, {'diff': 5.1387999999999434e-05}, {'diff': 5.138900000000238e-05}, {'diff': 5.058299999999988e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:08.420" endtime="20201029 18:19:08.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:08.428" level="INFO">${ACCURACY} = {'diff': [5.154100000000217e-05, 5.083300000000013e-05, 5.130500000000149e-05, 5.1387999999999434e-05, 5.138900000000238e-05, 5.058299999999988e-05, 5.087499999999884e-05, 5.083300000000013e-05, 5.061...</msg>
<status status="PASS" starttime="20201029 18:19:08.424" endtime="20201029 18:19:08.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.432" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 18:19:08.431" endtime="20201029 18:19:08.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.434" level="INFO">VALUE: [5.154100000000217e-05, 5.083300000000013e-05, 5.130500000000149e-05, 5.1387999999999434e-05, 5.138900000000238e-05, 5.058299999999988e-05, 5.087499999999884e-05, 5.083300000000013e-05, 5.061099999999902e-05, 5.058299999999988e-05, 5.088899999999841e-05, 5.126399999999878e-05, 5.148599999999989e-05, 5.141700000000152e-05, 5.131899999999759e-05, 5.113900000000213e-05, 5.063899999999816e-05, 5.087499999999884e-05, 5.133299999999716e-05, 5.097199999999982e-05, 5.13340000000001e-05, 5.105600000000071e-05, 5.063900000000163e-05, 5.095899999999973e-05, 5.108300000000038e-05, 5.084799999999917e-05, 5.148599999999989e-05, 5.087499999999884e-05, 5.145900000000023e-05, 5.129200000000139e-05, 5.079199999999742e-05, 5.127700000000235e-05, 5.130499999999802e-05, 5.143000000000161e-05, 5.133300000000063e-05, 5.138900000000238e-05, 5.133300000000063e-05, 5.131899999999759e-05, 5.102800000000157e-05, 5.112500000000256e-05, 5.081900000000056e-05, 5.086099999999927e-05, 5.081900000000056e-05, 5.062500000000206e-05, 5.105500000000124e-05, 5.136099999999977e-05, 5.082000000000003e-05, 5.06669999999973e-05, 5.15140000000025e-05, 5.095800000000372e-05]</msg>
<status status="PASS" starttime="20201029 18:19:08.433" endtime="20201029 18:19:08.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.428" endtime="20201029 18:19:08.437"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:08.440" endtime="20201029 18:19:08.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.439" endtime="20201029 18:19:08.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.438" endtime="20201029 18:19:08.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.075" endtime="20201029 18:19:08.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.074" endtime="20201029 18:19:08.461"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.470" endtime="20201029 18:19:08.487"></status>
</kw>
<msg timestamp="20201029 18:19:08.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.468" endtime="20201029 18:19:08.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.488" endtime="20201029 18:19:08.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.491" endtime="20201029 18:19:08.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.466" endtime="20201029 18:19:08.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.463" endtime="20201029 18:19:08.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.500" endtime="20201029 18:19:08.785"></status>
</kw>
<msg timestamp="20201029 18:19:08.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022146014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022197958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.499" endtime="20201029 18:19:08.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022146014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022197958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.790" endtime="20201029 18:19:08.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.798" endtime="20201029 18:19:08.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.496" endtime="20201029 18:19:08.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.494" endtime="20201029 18:19:08.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:08.805" level="INFO">${RESULT} = [{'diff': 5.194400000000168e-05}, {'diff': 5.198600000000039e-05}, {'diff': 5.186100000000027e-05}, {'diff': 5.162499999999959e-05}, {'diff': 5.231900000000206e-05}, {'diff': 5.230499999999902e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:08.801" endtime="20201029 18:19:08.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:08.810" level="INFO">${ACCURACY} = {'diff': [5.194400000000168e-05, 5.198600000000039e-05, 5.186100000000027e-05, 5.162499999999959e-05, 5.231900000000206e-05, 5.230499999999902e-05, 5.256899999999884e-05, 5.251400000000003e-05, 5.2042...</msg>
<status status="PASS" starttime="20201029 18:19:08.806" endtime="20201029 18:19:08.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.814" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 18:19:08.813" endtime="20201029 18:19:08.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.817" level="INFO">VALUE: [5.194400000000168e-05, 5.198600000000039e-05, 5.186100000000027e-05, 5.162499999999959e-05, 5.231900000000206e-05, 5.230499999999902e-05, 5.256899999999884e-05, 5.251400000000003e-05, 5.204200000000214e-05, 5.256900000000231e-05, 5.191700000000202e-05, 5.250000000000046e-05, 5.258299999999841e-05, 5.20279999999991e-05, 5.177800000000232e-05, 5.240299999999948e-05, 5.23470000000012e-05, 5.215299999999923e-05, 5.231999999999806e-05, 5.25279999999996e-05, 5.187499999999984e-05, 5.219500000000141e-05, 5.157000000000078e-05, 5.227799999999935e-05, 5.208400000000085e-05, 5.194500000000116e-05, 5.195900000000073e-05, 5.211100000000052e-05, 5.256899999999884e-05, 5.204100000000267e-05, 5.223600000000064e-05, 5.161100000000002e-05, 5.1887999999999934e-05, 5.225000000000021e-05, 5.2457999999998284e-05, 5.219400000000193e-05, 5.213899999999966e-05, 5.199999999999996e-05, 5.20409999999992e-05, 5.198600000000039e-05, 5.197200000000082e-05, 5.194400000000168e-05, 5.226399999999978e-05, 5.261200000000049e-05, 5.193100000000159e-05, 5.195800000000125e-05, 5.23470000000012e-05, 5.188899999999941e-05, 5.193100000000159e-05, 5.20279999999991e-05]</msg>
<status status="PASS" starttime="20201029 18:19:08.815" endtime="20201029 18:19:08.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.811" endtime="20201029 18:19:08.818"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:08.822" endtime="20201029 18:19:08.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.820" endtime="20201029 18:19:08.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.819" endtime="20201029 18:19:08.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.462" endtime="20201029 18:19:08.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.461" endtime="20201029 18:19:08.843"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.852" endtime="20201029 18:19:08.868"></status>
</kw>
<msg timestamp="20201029 18:19:08.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.850" endtime="20201029 18:19:08.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.870" endtime="20201029 18:19:08.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.872" endtime="20201029 18:19:08.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.847" endtime="20201029 18:19:08.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.845" endtime="20201029 18:19:08.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.881" endtime="20201029 18:19:09.169"></status>
</kw>
<msg timestamp="20201029 18:19:09.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022181375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022234597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.880" endtime="20201029 18:19:09.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022181375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022234597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:09.173" endtime="20201029 18:19:09.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.181" endtime="20201029 18:19:09.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.877" endtime="20201029 18:19:09.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.876" endtime="20201029 18:19:09.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:09.188" level="INFO">${RESULT} = [{'diff': 5.3221999999998604e-05}, {'diff': 5.3235999999998174e-05}, {'diff': 5.3207999999999034e-05}, {'diff': 5.281899999999909e-05}, {'diff': 5.262499999999712e-05}, {'diff': 5.308299999999891e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:09.185" endtime="20201029 18:19:09.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:09.192" level="INFO">${ACCURACY} = {'diff': [5.3221999999998604e-05, 5.3235999999998174e-05, 5.3207999999999034e-05, 5.281899999999909e-05, 5.262499999999712e-05, 5.308299999999891e-05, 5.288900000000041e-05, 5.329199999999992e-05, 5.3...</msg>
<status status="PASS" starttime="20201029 18:19:09.189" endtime="20201029 18:19:09.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.197" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 18:19:09.196" endtime="20201029 18:19:09.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.199" level="INFO">VALUE: [5.3221999999998604e-05, 5.3235999999998174e-05, 5.3207999999999034e-05, 5.281899999999909e-05, 5.262499999999712e-05, 5.308299999999891e-05, 5.288900000000041e-05, 5.329199999999992e-05, 5.319499999999894e-05, 5.30280000000001e-05, 5.301400000000053e-05, 5.263900000000016e-05, 5.276400000000028e-05, 5.343099999999962e-05, 5.326400000000078e-05, 5.28340000000016e-05, 5.318099999999937e-05, 5.313899999999719e-05, 5.354099999999723e-05, 5.277799999999985e-05, 5.312500000000109e-05, 5.308300000000238e-05, 5.351400000000103e-05, 5.3180000000003363e-05, 5.3415999999997105e-05, 5.2971999999998354e-05, 5.2943999999999214e-05, 5.2929999999999644e-05, 5.355500000000027e-05, 5.356999999999931e-05, 5.336100000000177e-05, 5.337500000000134e-05, 5.301400000000053e-05, 5.315300000000023e-05, 5.290299999999998e-05, 5.269499999999844e-05, 5.263900000000016e-05, 5.259699999999798e-05, 5.343099999999962e-05, 5.287500000000084e-05, 5.33470000000022e-05, 5.294500000000216e-05, 5.293100000000259e-05, 5.279200000000289e-05, 5.293100000000259e-05, 5.341700000000005e-05, 5.290299999999998e-05, 5.333399999999863e-05, 5.290299999999998e-05, 5.308400000000185e-05]</msg>
<status status="PASS" starttime="20201029 18:19:09.198" endtime="20201029 18:19:09.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.193" endtime="20201029 18:19:09.201"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:09.204" endtime="20201029 18:19:09.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.203" endtime="20201029 18:19:09.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.202" endtime="20201029 18:19:09.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.844" endtime="20201029 18:19:09.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.843" endtime="20201029 18:19:09.225"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.234" endtime="20201029 18:19:09.252"></status>
</kw>
<msg timestamp="20201029 18:19:09.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.232" endtime="20201029 18:19:09.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.253" endtime="20201029 18:19:09.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.256" endtime="20201029 18:19:09.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.230" endtime="20201029 18:19:09.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.228" endtime="20201029 18:19:09.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.265" endtime="20201029 18:19:09.550"></status>
</kw>
<msg timestamp="20201029 18:19:09.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022874611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022929278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:09.264" endtime="20201029 18:19:09.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022874611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022929278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:09.555" endtime="20201029 18:19:09.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.563" endtime="20201029 18:19:09.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.261" endtime="20201029 18:19:09.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.259" endtime="20201029 18:19:09.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:09.570" level="INFO">${RESULT} = [{'diff': 5.46670000000013e-05}, {'diff': 5.455599999999727e-05}, {'diff': 5.401400000000153e-05}, {'diff': 5.426400000000178e-05}, {'diff': 5.361200000000149e-05}, {'diff': 5.361100000000202e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:09.566" endtime="20201029 18:19:09.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:09.574" level="INFO">${ACCURACY} = {'diff': [5.46670000000013e-05, 5.455599999999727e-05, 5.401400000000153e-05, 5.426400000000178e-05, 5.361200000000149e-05, 5.361100000000202e-05, 5.45280000000016e-05, 5.4402000000002004e-05, 5.45549...</msg>
<status status="PASS" starttime="20201029 18:19:09.571" endtime="20201029 18:19:09.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.579" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 18:19:09.578" endtime="20201029 18:19:09.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.581" level="INFO">VALUE: [5.46670000000013e-05, 5.455599999999727e-05, 5.401400000000153e-05, 5.426400000000178e-05, 5.361200000000149e-05, 5.361100000000202e-05, 5.45280000000016e-05, 5.4402000000002004e-05, 5.45549999999978e-05, 5.4263999999998314e-05, 5.427699999999841e-05, 5.4499999999998994e-05, 5.427800000000135e-05, 5.356899999999984e-05, 5.432000000000006e-05, 5.38470000000027e-05, 5.4415999999998105e-05, 5.430500000000102e-05, 5.4443999999997245e-05, 5.390299999999751e-05, 5.405600000000024e-05, 5.365300000000073e-05, 5.363900000000116e-05, 5.433300000000016e-05, 5.369500000000291e-05, 5.381999999999956e-05, 5.362500000000159e-05, 5.4027999999997633e-05, 5.3944000000000214e-05, 5.451400000000203e-05, 5.40280000000011e-05, 5.4137999999998715e-05, 5.4513999999998564e-05, 5.418100000000037e-05, 5.358399999999888e-05, 5.454099999999823e-05, 5.411099999999905e-05, 5.443100000000062e-05, 5.358299999999941e-05, 5.434699999999973e-05, 5.387500000000184e-05, 5.454099999999823e-05, 5.413900000000166e-05, 5.430499999999755e-05, 5.408299999999991e-05, 5.409699999999948e-05, 5.4179999999997425e-05, 5.438900000000191e-05, 5.409700000000295e-05, 5.4235999999999174e-05]</msg>
<status status="PASS" starttime="20201029 18:19:09.580" endtime="20201029 18:19:09.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.575" endtime="20201029 18:19:09.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:09.587" endtime="20201029 18:19:09.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.585" endtime="20201029 18:19:09.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.584" endtime="20201029 18:19:09.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.226" endtime="20201029 18:19:09.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.225" endtime="20201029 18:19:09.608"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.616" endtime="20201029 18:19:09.633"></status>
</kw>
<msg timestamp="20201029 18:19:09.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.615" endtime="20201029 18:19:09.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.635" endtime="20201029 18:19:09.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.637" endtime="20201029 18:19:09.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.612" endtime="20201029 18:19:09.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.610" endtime="20201029 18:19:09.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.646" endtime="20201029 18:19:09.932"></status>
</kw>
<msg timestamp="20201029 18:19:09.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022434042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022489111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:09.645" endtime="20201029 18:19:09.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022434042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022489111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:09.936" endtime="20201029 18:19:09.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.945" endtime="20201029 18:19:09.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.642" endtime="20201029 18:19:09.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.640" endtime="20201029 18:19:09.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:09.952" level="INFO">${RESULT} = [{'diff': 5.506899999999787e-05}, {'diff': 5.4972000000000354e-05}, {'diff': 5.505600000000124e-05}, {'diff': 5.5527999999999134e-05}, {'diff': 5.5027999999998634e-05}, {'diff': 5.493100000000112e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:09.948" endtime="20201029 18:19:09.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:09.957" level="INFO">${ACCURACY} = {'diff': [5.506899999999787e-05, 5.4972000000000354e-05, 5.505600000000124e-05, 5.5527999999999134e-05, 5.5027999999998634e-05, 5.493100000000112e-05, 5.5541999999998704e-05, 5.538899999999944e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:19:09.953" endtime="20201029 18:19:09.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.961" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 18:19:09.960" endtime="20201029 18:19:09.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.964" level="INFO">VALUE: [5.506899999999787e-05, 5.4972000000000354e-05, 5.505600000000124e-05, 5.5527999999999134e-05, 5.5027999999998634e-05, 5.493100000000112e-05, 5.5541999999998704e-05, 5.538899999999944e-05, 5.5236000000000174e-05, 5.5027999999998634e-05, 5.487499999999937e-05, 5.487499999999937e-05, 5.494500000000069e-05, 5.544500000000119e-05, 5.527699999999941e-05, 5.504099999999873e-05, 5.4887999999999465e-05, 5.515300000000223e-05, 5.463899999999869e-05, 5.512499999999962e-05, 5.483300000000066e-05, 5.552699999999966e-05, 5.493100000000112e-05, 5.5249999999999744e-05, 5.4929999999998175e-05, 5.490300000000198e-05, 5.540300000000248e-05, 5.461100000000302e-05, 5.509700000000048e-05, 5.5013999999999064e-05, 5.486100000000327e-05, 5.459699999999998e-05, 5.509699999999701e-05, 5.543100000000162e-05, 5.5208000000001034e-05, 5.513899999999919e-05, 5.494500000000069e-05, 5.487499999999937e-05, 5.5027999999998634e-05, 5.463899999999869e-05, 5.531999999999759e-05, 5.554200000000217e-05, 5.490299999999851e-05, 5.5249999999999744e-05, 5.5513999999999564e-05, 5.533300000000116e-05, 5.534700000000073e-05, 5.4929999999998175e-05, 5.5222000000000604e-05, 5.552699999999966e-05]</msg>
<status status="PASS" starttime="20201029 18:19:09.962" endtime="20201029 18:19:09.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.958" endtime="20201029 18:19:09.965"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:09.969" endtime="20201029 18:19:09.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.967" endtime="20201029 18:19:09.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.966" endtime="20201029 18:19:09.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.609" endtime="20201029 18:19:09.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.608" endtime="20201029 18:19:09.989"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.998" endtime="20201029 18:19:10.016"></status>
</kw>
<msg timestamp="20201029 18:19:10.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.997" endtime="20201029 18:19:10.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.017" endtime="20201029 18:19:10.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.020" endtime="20201029 18:19:10.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.994" endtime="20201029 18:19:10.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.992" endtime="20201029 18:19:10.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.030" endtime="20201029 18:19:10.316"></status>
</kw>
<msg timestamp="20201029 18:19:10.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022436514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022492903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.028" endtime="20201029 18:19:10.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022436514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022492903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.321" endtime="20201029 18:19:10.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.329" endtime="20201029 18:19:10.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.025" endtime="20201029 18:19:10.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.023" endtime="20201029 18:19:10.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:10.336" level="INFO">${RESULT} = [{'diff': 5.638900000000044e-05}, {'diff': 5.6235999999997704e-05}, {'diff': 5.633400000000163e-05}, {'diff': 5.591700000000255e-05}, {'diff': 5.588899999999994e-05}, {'diff': 5.654200000000317e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:10.333" endtime="20201029 18:19:10.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:10.340" level="INFO">${ACCURACY} = {'diff': [5.638900000000044e-05, 5.6235999999997704e-05, 5.633400000000163e-05, 5.591700000000255e-05, 5.588899999999994e-05, 5.654200000000317e-05, 5.6443999999999245e-05, 5.605600000000224e-05, 5.59...</msg>
<status status="PASS" starttime="20201029 18:19:10.337" endtime="20201029 18:19:10.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.345" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 18:19:10.344" endtime="20201029 18:19:10.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.347" level="INFO">VALUE: [5.638900000000044e-05, 5.6235999999997704e-05, 5.633400000000163e-05, 5.591700000000255e-05, 5.588899999999994e-05, 5.654200000000317e-05, 5.6443999999999245e-05, 5.605600000000224e-05, 5.594500000000169e-05, 5.58610000000008e-05, 5.608400000000138e-05, 5.606899999999887e-05, 5.63610000000013e-05, 5.5986000000000924e-05, 5.584700000000123e-05, 5.6429999999999675e-05, 5.633300000000216e-05, 5.6416000000000105e-05, 5.61670000000028e-05, 5.638900000000044e-05, 5.6457999999998815e-05, 5.609700000000148e-05, 5.6221999999998135e-05, 5.630499999999955e-05, 5.609700000000148e-05, 5.6207999999998565e-05, 5.6528000000000134e-05, 5.6305999999999023e-05, 5.6055999999998773e-05, 5.559700000000098e-05, 5.6485999999997955e-05, 5.6250000000000744e-05, 5.594500000000169e-05, 5.5527999999999134e-05, 5.590299999999951e-05, 5.562500000000012e-05, 5.58610000000008e-05, 5.6429999999999675e-05, 5.570899999999754e-05, 5.594499999999822e-05, 5.619499999999847e-05, 5.6416000000000105e-05, 5.580499999999905e-05, 5.60549999999993e-05, 5.577800000000285e-05, 5.583300000000166e-05, 5.590299999999951e-05, 5.5930000000002644e-05, 5.6236000000001174e-05, 5.559700000000098e-05]</msg>
<status status="PASS" starttime="20201029 18:19:10.346" endtime="20201029 18:19:10.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.341" endtime="20201029 18:19:10.348"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:10.352" endtime="20201029 18:19:10.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.351" endtime="20201029 18:19:10.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.349" endtime="20201029 18:19:10.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.990" endtime="20201029 18:19:10.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.990" endtime="20201029 18:19:10.373"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.382" endtime="20201029 18:19:10.401"></status>
</kw>
<msg timestamp="20201029 18:19:10.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.380" endtime="20201029 18:19:10.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.403" endtime="20201029 18:19:10.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.405" endtime="20201029 18:19:10.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.378" endtime="20201029 18:19:10.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.375" endtime="20201029 18:19:10.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.414" endtime="20201029 18:19:10.699"></status>
</kw>
<msg timestamp="20201029 18:19:10.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025350903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025408181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.413" endtime="20201029 18:19:10.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025350903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025408181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.704" endtime="20201029 18:19:10.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.712" endtime="20201029 18:19:10.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.410" endtime="20201029 18:19:10.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.409" endtime="20201029 18:19:10.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:10.719" level="INFO">${RESULT} = [{'diff': 5.7277999999997414e-05}, {'diff': 5.7152000000001285e-05}, {'diff': 5.733400000000263e-05}, {'diff': 5.684700000000223e-05}, {'diff': 5.734700000000273e-05}, {'diff': 5.6915999999997136e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:10.715" endtime="20201029 18:19:10.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:10.723" level="INFO">${ACCURACY} = {'diff': [5.7277999999997414e-05, 5.7152000000001285e-05, 5.733400000000263e-05, 5.684700000000223e-05, 5.734700000000273e-05, 5.6915999999997136e-05, 5.659699999999851e-05, 5.7013999999997594e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:19:10.720" endtime="20201029 18:19:10.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.727" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 18:19:10.726" endtime="20201029 18:19:10.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.730" level="INFO">VALUE: [5.7277999999997414e-05, 5.7152000000001285e-05, 5.733400000000263e-05, 5.684700000000223e-05, 5.734700000000273e-05, 5.6915999999997136e-05, 5.659699999999851e-05, 5.7013999999997594e-05, 5.706899999999987e-05, 5.6958000000002784e-05, 5.6999999999998024e-05, 5.731900000000012e-05, 5.7556000000000274e-05, 5.690300000000051e-05, 5.71809999999999e-05, 5.711100000000205e-05, 5.662499999999765e-05, 5.7263999999997844e-05, 5.7250000000001744e-05, 5.732000000000306e-05, 5.6943999999999745e-05, 5.7471999999999385e-05, 5.7193999999999995e-05, 5.7014000000001064e-05, 5.662500000000112e-05, 5.7263999999997844e-05, 5.7444000000000245e-05, 5.7457999999999815e-05, 5.691700000000008e-05, 5.6819999999999093e-05, 5.712500000000162e-05, 5.7486000000002424e-05, 5.7193999999999995e-05, 5.6957999999999315e-05, 5.740300000000101e-05, 5.7278000000000884e-05, 5.7457999999999815e-05, 5.7013999999997594e-05, 5.661099999999808e-05, 5.709699999999901e-05, 5.6958000000002784e-05, 5.680500000000005e-05, 5.7471999999999385e-05, 5.7028000000000634e-05, 5.71809999999999e-05, 5.737500000000187e-05, 5.715300000000076e-05, 5.687500000000137e-05, 5.7500000000001994e-05, 5.6985999999998455e-05]</msg>
<status status="PASS" starttime="20201029 18:19:10.729" endtime="20201029 18:19:10.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.724" endtime="20201029 18:19:10.732"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:10.736" endtime="20201029 18:19:10.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.734" endtime="20201029 18:19:10.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.733" endtime="20201029 18:19:10.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.374" endtime="20201029 18:19:10.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.373" endtime="20201029 18:19:10.756"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.765" endtime="20201029 18:19:10.782"></status>
</kw>
<msg timestamp="20201029 18:19:10.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.764" endtime="20201029 18:19:10.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.784" endtime="20201029 18:19:10.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.786" endtime="20201029 18:19:10.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.761" endtime="20201029 18:19:10.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.759" endtime="20201029 18:19:10.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.796" endtime="20201029 18:19:11.104"></status>
</kw>
<msg timestamp="20201029 18:19:11.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022267056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022324833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.794" endtime="20201029 18:19:11.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022267056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022324833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.109" endtime="20201029 18:19:11.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.119" endtime="20201029 18:19:11.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.791" endtime="20201029 18:19:11.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.790" endtime="20201029 18:19:11.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:11.127" level="INFO">${RESULT} = [{'diff': 5.777699999999844e-05}, {'diff': 5.8166000000001855e-05}, {'diff': 5.836099999999983e-05}, {'diff': 5.813900000000219e-05}, {'diff': 5.8472000000000385e-05}, {'diff': 5.7944000000000745e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:11.124" endtime="20201029 18:19:11.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:11.133" level="INFO">${ACCURACY} = {'diff': [5.777699999999844e-05, 5.8166000000001855e-05, 5.836099999999983e-05, 5.813900000000219e-05, 5.8472000000000385e-05, 5.7944000000000745e-05, 5.8527999999998664e-05, 5.8056000000000774e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:19:11.128" endtime="20201029 18:19:11.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.139" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 18:19:11.137" endtime="20201029 18:19:11.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.142" level="INFO">VALUE: [5.777699999999844e-05, 5.8166000000001855e-05, 5.836099999999983e-05, 5.813900000000219e-05, 5.8472000000000385e-05, 5.7944000000000745e-05, 5.8527999999998664e-05, 5.8056000000000774e-05, 5.819500000000047e-05, 5.813900000000219e-05, 5.788899999999847e-05, 5.838899999999897e-05, 5.793100000000065e-05, 5.8291999999997984e-05, 5.7749999999998775e-05, 5.8249999999999275e-05, 5.8249999999999275e-05, 5.8306000000001024e-05, 5.7792000000000954e-05, 5.8541999999998234e-05, 5.834700000000026e-05, 5.7820000000000094e-05, 5.8249999999999275e-05, 5.811099999999958e-05, 5.8208000000000565e-05, 5.8028000000001634e-05, 5.8000000000002494e-05, 5.8250000000002744e-05, 5.854099999999876e-05, 5.8486000000003424e-05, 5.8429999999998206e-05, 5.7971999999999885e-05, 5.8235999999999705e-05, 5.786099999999933e-05, 5.8472000000000385e-05, 5.8458000000000815e-05, 5.812500000000262e-05, 5.8013999999998594e-05, 5.7583999999999413e-05, 5.816699999999786e-05, 5.815300000000176e-05, 5.8541999999998234e-05, 5.7820000000000094e-05, 5.811099999999958e-05, 5.8278000000001884e-05, 5.820900000000004e-05, 5.7958000000000315e-05, 5.7999999999999025e-05, 5.827699999999894e-05, 5.816700000000133e-05]</msg>
<status status="PASS" starttime="20201029 18:19:11.140" endtime="20201029 18:19:11.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.134" endtime="20201029 18:19:11.143"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:11.148" endtime="20201029 18:19:11.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.146" endtime="20201029 18:19:11.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.144" endtime="20201029 18:19:11.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.757" endtime="20201029 18:19:11.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.757" endtime="20201029 18:19:11.169"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.178" endtime="20201029 18:19:11.196"></status>
</kw>
<msg timestamp="20201029 18:19:11.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.177" endtime="20201029 18:19:11.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.197" endtime="20201029 18:19:11.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.200" endtime="20201029 18:19:11.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.174" endtime="20201029 18:19:11.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.172" endtime="20201029 18:19:11.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.210" endtime="20201029 18:19:11.497"></status>
</kw>
<msg timestamp="20201029 18:19:11.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023377528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023436222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.208" endtime="20201029 18:19:11.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023377528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023436222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.501" endtime="20201029 18:19:11.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.510" endtime="20201029 18:19:11.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.205" endtime="20201029 18:19:11.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.203" endtime="20201029 18:19:11.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:11.517" level="INFO">${RESULT} = [{'diff': 5.8693999999998026e-05}, {'diff': 5.888900000000294e-05}, {'diff': 5.8944000000001745e-05}, {'diff': 5.9541999999999234e-05}, {'diff': 5.9486000000000955e-05}, {'diff': 5.912500000000015e-05...</msg>
<status status="PASS" starttime="20201029 18:19:11.514" endtime="20201029 18:19:11.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:11.521" level="INFO">${ACCURACY} = {'diff': [5.8693999999998026e-05, 5.888900000000294e-05, 5.8944000000001745e-05, 5.9541999999999234e-05, 5.9486000000000955e-05, 5.912500000000015e-05, 5.8986000000000455e-05, 5.9208000000001565e-05, ...</msg>
<status status="PASS" starttime="20201029 18:19:11.518" endtime="20201029 18:19:11.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.526" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 18:19:11.525" endtime="20201029 18:19:11.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.529" level="INFO">VALUE: [5.8693999999998026e-05, 5.888900000000294e-05, 5.8944000000001745e-05, 5.9541999999999234e-05, 5.9486000000000955e-05, 5.912500000000015e-05, 5.8986000000000455e-05, 5.9208000000001565e-05, 5.861100000000008e-05, 5.938899999999997e-05, 5.9514000000000095e-05, 5.941700000000258e-05, 5.9527999999999665e-05, 5.9070000000001344e-05, 5.9138000000000246e-05, 5.8597999999999983e-05, 5.9306000000002024e-05, 5.95689999999989e-05, 5.920900000000104e-05, 5.915299999999929e-05, 5.916699999999886e-05, 5.9166000000002855e-05, 5.879100000000248e-05, 5.881900000000162e-05, 5.9208000000001565e-05, 5.9208000000001565e-05, 5.9000000000000025e-05, 5.9221999999997665e-05, 5.943100000000215e-05, 5.930500000000255e-05, 5.9000000000000025e-05, 5.8722000000000635e-05, 5.9429999999999206e-05, 5.9235999999997235e-05, 5.8958000000001315e-05, 5.8792000000001954e-05, 5.9514000000000095e-05, 5.9387999999997027e-05, 5.9527999999999665e-05, 5.945899999999782e-05, 5.915300000000276e-05, 5.934700000000126e-05, 5.894500000000122e-05, 5.8584000000000414e-05, 5.9249999999996805e-05, 5.9292000000002454e-05, 5.95689999999989e-05, 5.9000000000000025e-05, 5.9250000000000275e-05, 5.958299999999847e-05]</msg>
<status status="PASS" starttime="20201029 18:19:11.527" endtime="20201029 18:19:11.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.522" endtime="20201029 18:19:11.530"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:11.534" endtime="20201029 18:19:11.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.532" endtime="20201029 18:19:11.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.531" endtime="20201029 18:19:11.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.170" endtime="20201029 18:19:11.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.169" endtime="20201029 18:19:11.556"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.565" endtime="20201029 18:19:11.583"></status>
</kw>
<msg timestamp="20201029 18:19:11.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.563" endtime="20201029 18:19:11.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.584" endtime="20201029 18:19:11.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.587" endtime="20201029 18:19:11.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.561" endtime="20201029 18:19:11.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.558" endtime="20201029 18:19:11.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.596" endtime="20201029 18:19:11.882"></status>
</kw>
<msg timestamp="20201029 18:19:11.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024602847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024662764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.595" endtime="20201029 18:19:11.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024602847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024662764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.886" endtime="20201029 18:19:11.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.895" endtime="20201029 18:19:11.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.592" endtime="20201029 18:19:11.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.590" endtime="20201029 18:19:11.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:11.902" level="INFO">${RESULT} = [{'diff': 5.991699999999961e-05}, {'diff': 5.991699999999961e-05}, {'diff': 6.016699999999986e-05}, {'diff': 5.993100000000265e-05}, {'diff': 6.0513999999997625e-05}, {'diff': 6.0194000000002995e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:11.898" endtime="20201029 18:19:11.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:11.906" level="INFO">${ACCURACY} = {'diff': [5.991699999999961e-05, 5.991699999999961e-05, 6.016699999999986e-05, 5.993100000000265e-05, 6.0513999999997625e-05, 6.0194000000002995e-05, 6.0555999999999804e-05, 6.0319999999999124e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:19:11.903" endtime="20201029 18:19:11.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.911" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 18:19:11.910" endtime="20201029 18:19:11.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.913" level="INFO">VALUE: [5.991699999999961e-05, 5.991699999999961e-05, 6.016699999999986e-05, 5.993100000000265e-05, 6.0513999999997625e-05, 6.0194000000002995e-05, 6.0555999999999804e-05, 6.0319999999999124e-05, 5.9862000000000803e-05, 5.9834000000001664e-05, 6.03750000000014e-05, 5.990300000000004e-05, 6.036099999999836e-05, 6.0361999999997834e-05, 5.9929999999999706e-05, 5.984699999999829e-05, 6.0430000000000206e-05, 6.0402000000001066e-05, 6.0458000000002815e-05, 6.027699999999747e-05, 6.031899999999965e-05, 5.990300000000004e-05, 6.0041999999999734e-05, 5.988900000000047e-05, 6.031899999999965e-05, 6.041700000000011e-05, 6.0069999999998874e-05, 5.98750000000009e-05, 6.0457999999999346e-05, 6.044499999999925e-05, 5.993100000000265e-05, 5.961100000000108e-05, 6.034700000000226e-05, 6.036100000000183e-05, 6.0305999999999554e-05, 6.015300000000029e-05, 6.0236000000001705e-05, 5.998700000000093e-05, 5.955499999999933e-05, 6.0137999999997777e-05, 5.9722000000001635e-05, 6.0221999999998665e-05, 6.001300000000112e-05, 5.9929999999999706e-05, 6.0485999999998485e-05, 5.988900000000047e-05, 5.980499999999958e-05, 6.0250000000001275e-05, 5.9777999999999915e-05, 6.03750000000014e-05]</msg>
<status status="PASS" starttime="20201029 18:19:11.912" endtime="20201029 18:19:11.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.907" endtime="20201029 18:19:11.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:11.920" endtime="20201029 18:19:11.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.918" endtime="20201029 18:19:11.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.917" endtime="20201029 18:19:11.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.557" endtime="20201029 18:19:11.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.556" endtime="20201029 18:19:11.940"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.949" endtime="20201029 18:19:11.966"></status>
</kw>
<msg timestamp="20201029 18:19:11.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.948" endtime="20201029 18:19:11.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.968" endtime="20201029 18:19:11.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.970" endtime="20201029 18:19:11.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.945" endtime="20201029 18:19:11.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.943" endtime="20201029 18:19:11.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.980" endtime="20201029 18:19:12.262"></status>
</kw>
<msg timestamp="20201029 18:19:12.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022389403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022450153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.978" endtime="20201029 18:19:12.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022389403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022450153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:12.267" endtime="20201029 18:19:12.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.275" endtime="20201029 18:19:12.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.975" endtime="20201029 18:19:12.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.973" endtime="20201029 18:19:12.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:12.282" level="INFO">${RESULT} = [{'diff': 6.0750000000001775e-05}, {'diff': 6.0777999999997445e-05}, {'diff': 6.119400000000053e-05}, {'diff': 6.147200000000339e-05}, {'diff': 6.154199999999777e-05}, {'diff': 6.127699999999847e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:12.279" endtime="20201029 18:19:12.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:12.287" level="INFO">${ACCURACY} = {'diff': [6.0750000000001775e-05, 6.0777999999997445e-05, 6.119400000000053e-05, 6.147200000000339e-05, 6.154199999999777e-05, 6.127699999999847e-05, 6.1195e-05, 6.113900000000172e-05, 6.0999999999998...</msg>
<status status="PASS" starttime="20201029 18:19:12.283" endtime="20201029 18:19:12.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.292" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 18:19:12.291" endtime="20201029 18:19:12.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.295" level="INFO">VALUE: [6.0750000000001775e-05, 6.0777999999997445e-05, 6.119400000000053e-05, 6.147200000000339e-05, 6.154199999999777e-05, 6.127699999999847e-05, 6.1195e-05, 6.113900000000172e-05, 6.0999999999998555e-05, 6.126399999999838e-05, 6.063900000000122e-05, 6.134799999999926e-05, 6.145800000000035e-05, 6.08750000000019e-05, 6.0916000000001136e-05, 6.062499999999818e-05, 6.1014000000001595e-05, 6.0901999999998097e-05, 6.087499999999843e-05, 6.05689999999999e-05, 6.112499999999868e-05, 6.140300000000154e-05, 6.0792000000000485e-05, 6.131900000000065e-05, 6.108299999999997e-05, 6.109699999999954e-05, 6.141599999999817e-05, 6.094499999999975e-05, 6.130600000000055e-05, 6.104200000000073e-05, 6.118100000000043e-05, 6.13339999999997e-05, 6.143099999999721e-05, 6.1028000000001165e-05, 6.147300000000286e-05, 6.15560000000008e-05, 6.148700000000243e-05, 6.149999999999906e-05, 6.144400000000078e-05, 6.0943999999996806e-05, 6.105500000000083e-05, 6.149999999999906e-05, 6.156899999999743e-05, 6.14300000000012e-05, 6.0972000000002885e-05, 6.151399999999863e-05, 6.0806000000000054e-05, 6.116700000000086e-05, 6.148599999999949e-05, 6.0985999999998985e-05]</msg>
<status status="PASS" starttime="20201029 18:19:12.293" endtime="20201029 18:19:12.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.288" endtime="20201029 18:19:12.296"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:12.300" endtime="20201029 18:19:12.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.299" endtime="20201029 18:19:12.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.297" endtime="20201029 18:19:12.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.941" endtime="20201029 18:19:12.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.941" endtime="20201029 18:19:12.321"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.330" endtime="20201029 18:19:12.348"></status>
</kw>
<msg timestamp="20201029 18:19:12.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.328" endtime="20201029 18:19:12.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.349" endtime="20201029 18:19:12.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.352" endtime="20201029 18:19:12.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.326" endtime="20201029 18:19:12.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.323" endtime="20201029 18:19:12.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.362" endtime="20201029 18:19:12.648"></status>
</kw>
<msg timestamp="20201029 18:19:12.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022829236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022891444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:12.360" endtime="20201029 18:19:12.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022829236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022891444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:12.652" endtime="20201029 18:19:12.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.661" endtime="20201029 18:19:12.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.357" endtime="20201029 18:19:12.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.355" endtime="20201029 18:19:12.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:12.668" level="INFO">${RESULT} = [{'diff': 6.22080000000011e-05}, {'diff': 6.202699999999922e-05}, {'diff': 6.245800000000135e-05}, {'diff': 6.25560000000018e-05}, {'diff': 6.23889999999995e-05}, {'diff': 6.215300000000229e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:19:12.665" endtime="20201029 18:19:12.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:12.672" level="INFO">${ACCURACY} = {'diff': [6.22080000000011e-05, 6.202699999999922e-05, 6.245800000000135e-05, 6.25560000000018e-05, 6.23889999999995e-05, 6.215300000000229e-05, 6.194400000000128e-05, 6.194400000000128e-05, 6.2361000...</msg>
<status status="PASS" starttime="20201029 18:19:12.669" endtime="20201029 18:19:12.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.677" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 18:19:12.676" endtime="20201029 18:19:12.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.679" level="INFO">VALUE: [6.22080000000011e-05, 6.202699999999922e-05, 6.245800000000135e-05, 6.25560000000018e-05, 6.23889999999995e-05, 6.215300000000229e-05, 6.194400000000128e-05, 6.194400000000128e-05, 6.236100000000036e-05, 6.233300000000122e-05, 6.216699999999839e-05, 6.205599999999784e-05, 6.22499999999998e-05, 6.161099999999961e-05, 6.216699999999839e-05, 6.161099999999961e-05, 6.231999999999766e-05, 6.186099999999986e-05, 6.233300000000122e-05, 6.205599999999784e-05, 6.176400000000234e-05, 6.227799999999895e-05, 6.247300000000039e-05, 6.19019999999991e-05, 6.162499999999918e-05, 6.252699999999972e-05, 6.152700000000219e-05, 6.219399999999806e-05, 6.227700000000294e-05, 6.198599999999999e-05, 6.193100000000118e-05, 6.198599999999999e-05, 6.255500000000233e-05, 6.199999999999956e-05, 6.191699999999814e-05, 6.183300000000072e-05, 6.223600000000024e-05, 6.254199999999877e-05, 6.175000000000277e-05, 6.208300000000097e-05, 6.223600000000024e-05, 6.231999999999766e-05, 6.240299999999907e-05, 6.230500000000208e-05, 6.161099999999961e-05, 6.220900000000057e-05, 6.161200000000255e-05, 6.244400000000178e-05, 6.198699999999946e-05, 6.226399999999938e-05]</msg>
<status status="PASS" starttime="20201029 18:19:12.678" endtime="20201029 18:19:12.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.673" endtime="20201029 18:19:12.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:12.685" endtime="20201029 18:19:12.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.683" endtime="20201029 18:19:12.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.682" endtime="20201029 18:19:12.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.322" endtime="20201029 18:19:12.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.321" endtime="20201029 18:19:12.705"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.715" endtime="20201029 18:19:12.733"></status>
</kw>
<msg timestamp="20201029 18:19:12.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.713" endtime="20201029 18:19:12.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.734" endtime="20201029 18:19:12.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.737" endtime="20201029 18:19:12.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.710" endtime="20201029 18:19:12.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.708" endtime="20201029 18:19:12.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.746" endtime="20201029 18:19:13.032"></status>
</kw>
<msg timestamp="20201029 18:19:13.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023578264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023641694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:12.745" endtime="20201029 18:19:13.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023578264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023641694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.036" endtime="20201029 18:19:13.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.045" endtime="20201029 18:19:13.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.742" endtime="20201029 18:19:13.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.740" endtime="20201029 18:19:13.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:13.052" level="INFO">${RESULT} = [{'diff': 6.342999999999974e-05}, {'diff': 6.301400000000013e-05}, {'diff': 6.297200000000142e-05}, {'diff': 6.297200000000142e-05}, {'diff': 6.295800000000185e-05}, {'diff': 6.313900000000025e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:13.048" endtime="20201029 18:19:13.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:13.056" level="INFO">${ACCURACY} = {'diff': [6.342999999999974e-05, 6.301400000000013e-05, 6.297200000000142e-05, 6.297200000000142e-05, 6.295800000000185e-05, 6.313900000000025e-05, 6.291699999999914e-05, 6.345799999999888e-05, 6.2791...</msg>
<status status="PASS" starttime="20201029 18:19:13.053" endtime="20201029 18:19:13.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.061" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 18:19:13.060" endtime="20201029 18:19:13.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.063" level="INFO">VALUE: [6.342999999999974e-05, 6.301400000000013e-05, 6.297200000000142e-05, 6.297200000000142e-05, 6.295800000000185e-05, 6.313900000000025e-05, 6.291699999999914e-05, 6.345799999999888e-05, 6.279199999999902e-05, 6.281899999999868e-05, 6.348600000000149e-05, 6.290299999999957e-05, 6.358399999999848e-05, 6.258399999999747e-05, 6.286099999999739e-05, 6.263800000000028e-05, 6.33890000000005e-05, 6.327799999999995e-05, 6.352700000000072e-05, 6.352700000000072e-05, 6.295900000000132e-05, 6.352700000000072e-05, 6.348600000000149e-05, 6.280500000000258e-05, 6.352700000000072e-05, 6.294400000000228e-05, 6.351400000000063e-05, 6.355499999999986e-05, 6.261100000000061e-05, 6.33890000000005e-05, 6.298599999999752e-05, 6.355499999999986e-05, 6.30279999999997e-05, 6.286100000000086e-05, 6.347199999999845e-05, 6.33890000000005e-05, 6.348599999999802e-05, 6.298600000000099e-05, 6.344499999999878e-05, 6.286100000000086e-05, 6.263899999999975e-05, 6.351399999999716e-05, 6.313899999999678e-05, 6.354200000000323e-05, 6.295900000000132e-05, 6.341699999999964e-05, 6.344500000000225e-05, 6.286200000000033e-05, 6.280499999999911e-05, 6.329100000000004e-05]</msg>
<status status="PASS" starttime="20201029 18:19:13.062" endtime="20201029 18:19:13.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.057" endtime="20201029 18:19:13.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:13.070" endtime="20201029 18:19:13.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.068" endtime="20201029 18:19:13.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.067" endtime="20201029 18:19:13.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.706" endtime="20201029 18:19:13.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.706" endtime="20201029 18:19:13.090"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.100" endtime="20201029 18:19:13.117"></status>
</kw>
<msg timestamp="20201029 18:19:13.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.098" endtime="20201029 18:19:13.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.118" endtime="20201029 18:19:13.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.121" endtime="20201029 18:19:13.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.095" endtime="20201029 18:19:13.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.093" endtime="20201029 18:19:13.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.130" endtime="20201029 18:19:13.416"></status>
</kw>
<msg timestamp="20201029 18:19:13.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022692208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022756319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.129" endtime="20201029 18:19:13.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022692208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022756319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.420" endtime="20201029 18:19:13.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.429" endtime="20201029 18:19:13.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.126" endtime="20201029 18:19:13.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.124" endtime="20201029 18:19:13.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:13.436" level="INFO">${RESULT} = [{'diff': 6.411100000000211e-05}, {'diff': 6.443000000000074e-05}, {'diff': 6.417999999999702e-05}, {'diff': 6.386099999999839e-05}, {'diff': 6.3889000000001e-05}, {'diff': 6.362500000000118e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:13.433" endtime="20201029 18:19:13.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:13.441" level="INFO">${ACCURACY} = {'diff': [6.411100000000211e-05, 6.443000000000074e-05, 6.417999999999702e-05, 6.386099999999839e-05, 6.3889000000001e-05, 6.362500000000118e-05, 6.411099999999864e-05, 6.452799999999773e-05, 6.420799...</msg>
<status status="PASS" starttime="20201029 18:19:13.437" endtime="20201029 18:19:13.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.446" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 18:19:13.445" endtime="20201029 18:19:13.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.448" level="INFO">VALUE: [6.411100000000211e-05, 6.443000000000074e-05, 6.417999999999702e-05, 6.386099999999839e-05, 6.3889000000001e-05, 6.362500000000118e-05, 6.411099999999864e-05, 6.452799999999773e-05, 6.420799999999963e-05, 6.356899999999943e-05, 6.40829999999995e-05, 6.441699999999717e-05, 6.415300000000082e-05, 6.361099999999814e-05, 6.447299999999892e-05, 6.363900000000075e-05, 6.427800000000095e-05, 6.358400000000194e-05, 6.379200000000002e-05, 6.436099999999889e-05, 6.384800000000176e-05, 6.45699999999999e-05, 6.424999999999834e-05, 6.443100000000021e-05, 6.383299999999925e-05, 6.39020000000011e-05, 6.408300000000297e-05, 6.367999999999999e-05, 6.447199999999945e-05, 6.413899999999778e-05, 6.455500000000086e-05, 6.442999999999727e-05, 6.362499999999771e-05, 6.436099999999889e-05, 6.390300000000057e-05, 6.416700000000039e-05, 6.398599999999852e-05, 6.393099999999971e-05, 6.379200000000002e-05, 6.376400000000088e-05, 6.448599999999902e-05, 6.40280000000007e-05, 6.454099999999782e-05, 6.434800000000226e-05, 6.43479999999988e-05, 6.429200000000052e-05, 6.362500000000118e-05, 6.427800000000095e-05, 6.365200000000085e-05, 6.44159999999977e-05]</msg>
<status status="PASS" starttime="20201029 18:19:13.447" endtime="20201029 18:19:13.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.442" endtime="20201029 18:19:13.450"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:13.454" endtime="20201029 18:19:13.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.452" endtime="20201029 18:19:13.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.451" endtime="20201029 18:19:13.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.091" endtime="20201029 18:19:13.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.091" endtime="20201029 18:19:13.474"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.484" endtime="20201029 18:19:13.501"></status>
</kw>
<msg timestamp="20201029 18:19:13.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.482" endtime="20201029 18:19:13.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.502" endtime="20201029 18:19:13.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.505" endtime="20201029 18:19:13.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.479" endtime="20201029 18:19:13.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.477" endtime="20201029 18:19:13.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.514" endtime="20201029 18:19:13.801"></status>
</kw>
<msg timestamp="20201029 18:19:13.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022559167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022623875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.513" endtime="20201029 18:19:13.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022559167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022623875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.805" endtime="20201029 18:19:13.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.814" endtime="20201029 18:19:13.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.510" endtime="20201029 18:19:13.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.508" endtime="20201029 18:19:13.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:13.821" level="INFO">${RESULT} = [{'diff': 6.470800000000013e-05}, {'diff': 6.523599999999977e-05}, {'diff': 6.495799999999691e-05}, {'diff': 6.459699999999957e-05}, {'diff': 6.555600000000134e-05}, {'diff': 6.547200000000045e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:13.818" endtime="20201029 18:19:13.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:13.825" level="INFO">${ACCURACY} = {'diff': [6.470800000000013e-05, 6.523599999999977e-05, 6.495799999999691e-05, 6.459699999999957e-05, 6.555600000000134e-05, 6.547200000000045e-05, 6.52220000000002e-05, 6.480600000000059e-05, 6.54590...</msg>
<status status="PASS" starttime="20201029 18:19:13.822" endtime="20201029 18:19:13.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.830" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 18:19:13.829" endtime="20201029 18:19:13.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.832" level="INFO">VALUE: [6.470800000000013e-05, 6.523599999999977e-05, 6.495799999999691e-05, 6.459699999999957e-05, 6.555600000000134e-05, 6.547200000000045e-05, 6.52220000000002e-05, 6.480600000000059e-05, 6.545900000000035e-05, 6.532000000000066e-05, 6.491600000000167e-05, 6.497199999999995e-05, 6.523699999999924e-05, 6.551399999999916e-05, 6.529100000000204e-05, 6.506899999999746e-05, 6.498599999999952e-05, 6.456900000000043e-05, 6.498599999999952e-05, 6.4583e-05, 6.513899999999878e-05, 6.465300000000132e-05, 6.54159999999987e-05, 6.555500000000186e-05, 6.536099999999989e-05, 6.505600000000084e-05, 6.491700000000114e-05, 6.493100000000071e-05, 6.511099999999964e-05, 6.487499999999896e-05, 6.55280000000022e-05, 6.552799999999873e-05, 6.513899999999878e-05, 6.529200000000152e-05, 6.529200000000152e-05, 6.49029999999981e-05, 6.538899999999903e-05, 6.49159999999982e-05, 6.529099999999857e-05, 6.540300000000207e-05, 6.499999999999909e-05, 6.515199999999888e-05, 6.480500000000111e-05, 6.4583e-05, 6.556899999999796e-05, 6.54440000000013e-05, 6.499999999999909e-05, 6.526400000000238e-05, 6.482000000000016e-05, 6.512499999999921e-05]</msg>
<status status="PASS" starttime="20201029 18:19:13.831" endtime="20201029 18:19:13.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.826" endtime="20201029 18:19:13.838"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:13.842" endtime="20201029 18:19:13.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.840" endtime="20201029 18:19:13.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.839" endtime="20201029 18:19:13.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.475" endtime="20201029 18:19:13.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.475" endtime="20201029 18:19:13.863"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.872" endtime="20201029 18:19:13.892"></status>
</kw>
<msg timestamp="20201029 18:19:13.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.870" endtime="20201029 18:19:13.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.893" endtime="20201029 18:19:13.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.896" endtime="20201029 18:19:13.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.868" endtime="20201029 18:19:13.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.865" endtime="20201029 18:19:13.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.906" endtime="20201029 18:19:14.191"></status>
</kw>
<msg timestamp="20201029 18:19:14.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025751667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025817597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.904" endtime="20201029 18:19:14.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025751667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025817597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:14.195" endtime="20201029 18:19:14.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.205" endtime="20201029 18:19:14.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.901" endtime="20201029 18:19:14.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.900" endtime="20201029 18:19:14.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:14.217" level="INFO">${RESULT} = [{'diff': 6.593000000000224e-05}, {'diff': 6.611100000000064e-05}, {'diff': 6.587499999999996e-05}, {'diff': 6.648600000000102e-05}, {'diff': 6.648600000000102e-05}, {'diff': 6.592999999999877e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:14.212" endtime="20201029 18:19:14.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:14.224" level="INFO">${ACCURACY} = {'diff': [6.593000000000224e-05, 6.611100000000064e-05, 6.587499999999996e-05, 6.648600000000102e-05, 6.648600000000102e-05, 6.592999999999877e-05, 6.588899999999953e-05, 6.655500000000286e-05, 6.6555...</msg>
<status status="PASS" starttime="20201029 18:19:14.219" endtime="20201029 18:19:14.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.232" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 18:19:14.230" endtime="20201029 18:19:14.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.235" level="INFO">VALUE: [6.593000000000224e-05, 6.611100000000064e-05, 6.587499999999996e-05, 6.648600000000102e-05, 6.648600000000102e-05, 6.592999999999877e-05, 6.588899999999953e-05, 6.655500000000286e-05, 6.655500000000286e-05, 6.625000000000034e-05, 6.619499999999806e-05, 6.558299999999753e-05, 6.586100000000039e-05, 6.65419999999993e-05, 6.591699999999867e-05, 6.631999999999819e-05, 6.561100000000014e-05, 6.602699999999975e-05, 6.647200000000145e-05, 6.631899999999871e-05, 6.606999999999794e-05, 6.601399999999966e-05, 6.601399999999966e-05, 6.615199999999988e-05, 6.600000000000009e-05, 6.562499999999971e-05, 6.654099999999982e-05, 6.652700000000025e-05, 6.609700000000107e-05, 6.581900000000168e-05, 6.60419999999988e-05, 6.591699999999867e-05, 6.559700000000057e-05, 6.5583000000001e-05, 6.556900000000143e-05, 6.561100000000014e-05, 6.586100000000039e-05, 6.638900000000003e-05, 6.60280000000027e-05, 6.60700000000014e-05, 6.608400000000098e-05, 6.620799999999816e-05, 6.562499999999971e-05, 6.637500000000046e-05, 6.651400000000016e-05, 6.615299999999935e-05, 6.65419999999993e-05, 6.634699999999785e-05, 6.611100000000064e-05, 6.586099999999692e-05]</msg>
<status status="PASS" starttime="20201029 18:19:14.233" endtime="20201029 18:19:14.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.225" endtime="20201029 18:19:14.237"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:14.241" endtime="20201029 18:19:14.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.239" endtime="20201029 18:19:14.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.238" endtime="20201029 18:19:14.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.864" endtime="20201029 18:19:14.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.863" endtime="20201029 18:19:14.262"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.271" endtime="20201029 18:19:14.288"></status>
</kw>
<msg timestamp="20201029 18:19:14.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:14.269" endtime="20201029 18:19:14.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:14.290" endtime="20201029 18:19:14.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.293" endtime="20201029 18:19:14.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.266" endtime="20201029 18:19:14.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.264" endtime="20201029 18:19:14.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.302" endtime="20201029 18:19:14.588"></status>
</kw>
<msg timestamp="20201029 18:19:14.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022599958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022667389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:14.300" endtime="20201029 18:19:14.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022599958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022667389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:14.592" endtime="20201029 18:19:14.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.601" endtime="20201029 18:19:14.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.298" endtime="20201029 18:19:14.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.296" endtime="20201029 18:19:14.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:14.608" level="INFO">${RESULT} = [{'diff': 6.743099999999974e-05}, {'diff': 6.677799999999998e-05}, {'diff': 6.65969999999981e-05}, {'diff': 6.718099999999949e-05}, {'diff': 6.694500000000228e-05}, {'diff': 6.694500000000228e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:14.604" endtime="20201029 18:19:14.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:14.613" level="INFO">${ACCURACY} = {'diff': [6.743099999999974e-05, 6.677799999999998e-05, 6.65969999999981e-05, 6.718099999999949e-05, 6.694500000000228e-05, 6.694500000000228e-05, 6.732000000000266e-05, 6.725000000000134e-05, 6.72780...</msg>
<status status="PASS" starttime="20201029 18:19:14.609" endtime="20201029 18:19:14.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.618" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 18:19:14.617" endtime="20201029 18:19:14.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.620" level="INFO">VALUE: [6.743099999999974e-05, 6.677799999999998e-05, 6.65969999999981e-05, 6.718099999999949e-05, 6.694500000000228e-05, 6.694500000000228e-05, 6.732000000000266e-05, 6.725000000000134e-05, 6.727800000000048e-05, 6.695899999999838e-05, 6.684699999999835e-05, 6.733299999999928e-05, 6.694400000000281e-05, 6.65969999999981e-05, 6.706899999999946e-05, 6.713900000000078e-05, 6.679200000000302e-05, 6.733400000000223e-05, 6.736100000000189e-05, 6.713900000000078e-05, 6.692999999999977e-05, 6.691699999999967e-05, 6.679200000000302e-05, 6.662500000000071e-05, 6.686100000000139e-05, 6.691699999999967e-05, 6.718099999999949e-05, 6.692999999999977e-05, 6.688900000000053e-05, 6.72090000000021e-05, 6.661200000000062e-05, 6.732000000000266e-05, 6.731999999999919e-05, 6.744499999999931e-05, 6.694499999999881e-05, 6.70969999999986e-05, 6.747200000000245e-05, 6.747200000000245e-05, 6.695800000000238e-05, 6.70830000000025e-05, 6.684699999999835e-05, 6.748599999999855e-05, 6.749999999999812e-05, 6.712500000000121e-05, 6.658299999999853e-05, 6.661099999999767e-05, 6.691699999999967e-05, 6.65969999999981e-05, 6.748600000000202e-05, 6.743099999999974e-05]</msg>
<status status="PASS" starttime="20201029 18:19:14.619" endtime="20201029 18:19:14.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.614" endtime="20201029 18:19:14.622"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:14.626" endtime="20201029 18:19:14.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.624" endtime="20201029 18:19:14.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.623" endtime="20201029 18:19:14.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.263" endtime="20201029 18:19:14.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.262" endtime="20201029 18:19:14.646"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.655" endtime="20201029 18:19:14.673"></status>
</kw>
<msg timestamp="20201029 18:19:14.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:14.654" endtime="20201029 18:19:14.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:14.674" endtime="20201029 18:19:14.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.676" endtime="20201029 18:19:14.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.651" endtime="20201029 18:19:14.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.649" endtime="20201029 18:19:14.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.685" endtime="20201029 18:19:14.971"></status>
</kw>
<msg timestamp="20201029 18:19:14.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022389458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022457903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:14.684" endtime="20201029 18:19:14.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022389458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022457903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:14.975" endtime="20201029 18:19:14.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.983" endtime="20201029 18:19:14.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.681" endtime="20201029 18:19:14.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.680" endtime="20201029 18:19:14.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:14.990" level="INFO">${RESULT} = [{'diff': 6.844500000000031e-05}, {'diff': 6.848599999999955e-05}, {'diff': 6.827800000000148e-05}, {'diff': 6.77229999999987e-05}, {'diff': 6.763899999999781e-05}, {'diff': 6.829200000000105e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:14.987" endtime="20201029 18:19:14.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:14.994" level="INFO">${ACCURACY} = {'diff': [6.844500000000031e-05, 6.848599999999955e-05, 6.827800000000148e-05, 6.77229999999987e-05, 6.763899999999781e-05, 6.829200000000105e-05, 6.849999999999912e-05, 6.763899999999781e-05, 6.78880...</msg>
<status status="PASS" starttime="20201029 18:19:14.991" endtime="20201029 18:19:14.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.998" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 18:19:14.997" endtime="20201029 18:19:14.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.001" level="INFO">VALUE: [6.844500000000031e-05, 6.848599999999955e-05, 6.827800000000148e-05, 6.77229999999987e-05, 6.763899999999781e-05, 6.829200000000105e-05, 6.849999999999912e-05, 6.763899999999781e-05, 6.788800000000206e-05, 6.82909999999981e-05, 6.849999999999912e-05, 6.827699999999853e-05, 6.80420000000008e-05, 6.79299999999973e-05, 6.829199999999758e-05, 6.820800000000016e-05, 6.85559999999974e-05, 6.784699999999935e-05, 6.855499999999792e-05, 6.786099999999892e-05, 6.808300000000003e-05, 6.812499999999874e-05, 6.834699999999985e-05, 6.797300000000242e-05, 6.797299999999895e-05, 6.782000000000316e-05, 6.82359999999993e-05, 6.849999999999912e-05, 6.849999999999912e-05, 6.763900000000128e-05, 6.801400000000166e-05, 6.831900000000071e-05, 6.818000000000102e-05, 6.855499999999792e-05, 6.82359999999993e-05, 6.802699999999828e-05, 6.806900000000046e-05, 6.802700000000175e-05, 6.788899999999806e-05, 6.819400000000059e-05, 6.851399999999869e-05, 6.841700000000117e-05, 6.811100000000264e-05, 6.797199999999948e-05, 6.819500000000006e-05, 6.844400000000084e-05, 6.827799999999801e-05, 6.857000000000044e-05, 6.841700000000117e-05, 6.800000000000209e-05]</msg>
<status status="PASS" starttime="20201029 18:19:15.000" endtime="20201029 18:19:15.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.995" endtime="20201029 18:19:15.002"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:15.006" endtime="20201029 18:19:15.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.004" endtime="20201029 18:19:15.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.003" endtime="20201029 18:19:15.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.647" endtime="20201029 18:19:15.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.647" endtime="20201029 18:19:15.027"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.035" endtime="20201029 18:19:15.053"></status>
</kw>
<msg timestamp="20201029 18:19:15.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.034" endtime="20201029 18:19:15.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.054" endtime="20201029 18:19:15.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.057" endtime="20201029 18:19:15.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.031" endtime="20201029 18:19:15.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.029" endtime="20201029 18:19:15.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.066" endtime="20201029 18:19:15.365"></status>
</kw>
<msg timestamp="20201029 18:19:15.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022732042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022800903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.064" endtime="20201029 18:19:15.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022732042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022800903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.369" endtime="20201029 18:19:15.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.377" endtime="20201029 18:19:15.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.062" endtime="20201029 18:19:15.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.060" endtime="20201029 18:19:15.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:15.384" level="INFO">${RESULT} = [{'diff': 6.886099999999992e-05}, {'diff': 6.899999999999962e-05}, {'diff': 6.94299999999988e-05}, {'diff': 6.952799999999926e-05}, {'diff': 6.888899999999906e-05}, {'diff': 6.944500000000131e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:15.381" endtime="20201029 18:19:15.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:15.388" level="INFO">${ACCURACY} = {'diff': [6.886099999999992e-05, 6.899999999999962e-05, 6.94299999999988e-05, 6.952799999999926e-05, 6.888899999999906e-05, 6.944500000000131e-05, 6.866700000000142e-05, 6.862499999999924e-05, 6.91389...</msg>
<status status="PASS" starttime="20201029 18:19:15.385" endtime="20201029 18:19:15.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.392" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 18:19:15.391" endtime="20201029 18:19:15.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.395" level="INFO">VALUE: [6.886099999999992e-05, 6.899999999999962e-05, 6.94299999999988e-05, 6.952799999999926e-05, 6.888899999999906e-05, 6.944500000000131e-05, 6.866700000000142e-05, 6.862499999999924e-05, 6.913899999999931e-05, 6.950000000000012e-05, 6.898600000000005e-05, 6.937499999999999e-05, 6.900000000000309e-05, 6.932000000000119e-05, 6.85970000000001e-05, 6.888900000000253e-05, 6.955499999999892e-05, 6.895800000000091e-05, 6.916599999999898e-05, 6.931900000000171e-05, 6.936100000000042e-05, 6.931899999999824e-05, 6.91109999999967e-05, 6.911100000000017e-05, 6.912499999999974e-05, 6.881899999999774e-05, 6.887499999999949e-05, 6.887499999999949e-05, 6.918099999999802e-05, 6.930600000000162e-05, 6.936100000000042e-05, 6.911100000000017e-05, 6.887499999999949e-05, 6.866699999999795e-05, 6.906999999999747e-05, 6.905600000000137e-05, 6.951399999999969e-05, 6.937499999999999e-05, 6.927699999999953e-05, 6.913799999999984e-05, 6.922200000000073e-05, 6.926399999999944e-05, 6.884700000000035e-05, 6.89169999999982e-05, 6.90970000000006e-05, 6.898600000000005e-05, 6.908300000000103e-05, 6.936100000000042e-05, 6.926399999999944e-05, 6.887499999999949e-05]</msg>
<status status="PASS" starttime="20201029 18:19:15.393" endtime="20201029 18:19:15.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.389" endtime="20201029 18:19:15.397"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:15.401" endtime="20201029 18:19:15.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.399" endtime="20201029 18:19:15.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.398" endtime="20201029 18:19:15.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.028" endtime="20201029 18:19:15.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.027" endtime="20201029 18:19:15.421"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.430" endtime="20201029 18:19:15.447"></status>
</kw>
<msg timestamp="20201029 18:19:15.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.428" endtime="20201029 18:19:15.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.448" endtime="20201029 18:19:15.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.451" endtime="20201029 18:19:15.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.426" endtime="20201029 18:19:15.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.424" endtime="20201029 18:19:15.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.460" endtime="20201029 18:19:15.745"></status>
</kw>
<msg timestamp="20201029 18:19:15.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021921125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.458" endtime="20201029 18:19:15.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021921125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.750" endtime="20201029 18:19:15.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.758" endtime="20201029 18:19:15.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.456" endtime="20201029 18:19:15.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.454" endtime="20201029 18:19:15.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:15.765" level="INFO">${RESULT} = [{'diff': 7.008299999999856e-05}, {'diff': 7.044499999999884e-05}, {'diff': 7.034699999999838e-05}, {'diff': 7.006999999999847e-05}, {'diff': 7.038900000000056e-05}, {'diff': 7.030599999999915e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:15.761" endtime="20201029 18:19:15.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:15.770" level="INFO">${ACCURACY} = {'diff': [7.008299999999856e-05, 7.044499999999884e-05, 7.034699999999838e-05, 7.006999999999847e-05, 7.038900000000056e-05, 7.030599999999915e-05, 6.980599999999865e-05, 7.027800000000001e-05, 6.9986...</msg>
<status status="PASS" starttime="20201029 18:19:15.766" endtime="20201029 18:19:15.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.774" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 18:19:15.773" endtime="20201029 18:19:15.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.776" level="INFO">VALUE: [7.008299999999856e-05, 7.044499999999884e-05, 7.034699999999838e-05, 7.006999999999847e-05, 7.038900000000056e-05, 7.030599999999915e-05, 6.980599999999865e-05, 7.027800000000001e-05, 6.998600000000105e-05, 7.001400000000019e-05, 7.030599999999915e-05, 6.966599999999948e-05, 6.997299999999748e-05, 7.037499999999752e-05, 6.966699999999895e-05, 7.019400000000259e-05, 7.030499999999967e-05, 7.040200000000066e-05, 6.993000000000277e-05, 7.044400000000284e-05, 7.019400000000259e-05, 6.995800000000191e-05, 7.025000000000087e-05, 7.019400000000259e-05, 6.998600000000105e-05, 7.012500000000074e-05, 7.045799999999894e-05, 7.057000000000244e-05, 7.040300000000013e-05, 6.987500000000049e-05, 6.979200000000255e-05, 6.961200000000015e-05, 7.038900000000056e-05, 7.052800000000026e-05, 7.000000000000062e-05, 7.012500000000074e-05, 7.026300000000096e-05, 7.012500000000074e-05, 7.034700000000185e-05, 7.02910000000001e-05, 7.055499999999992e-05, 7.015299999999988e-05, 7.04169999999997e-05, 6.976399999999994e-05, 7.054199999999983e-05, 7.034700000000185e-05, 6.980599999999865e-05, 7.009699999999813e-05, 6.958299999999806e-05, 7.045899999999841e-05]</msg>
<status status="PASS" starttime="20201029 18:19:15.775" endtime="20201029 18:19:15.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.770" endtime="20201029 18:19:15.778"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:15.782" endtime="20201029 18:19:15.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.780" endtime="20201029 18:19:15.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.779" endtime="20201029 18:19:15.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.422" endtime="20201029 18:19:15.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.422" endtime="20201029 18:19:15.802"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.811" endtime="20201029 18:19:15.828"></status>
</kw>
<msg timestamp="20201029 18:19:15.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.809" endtime="20201029 18:19:15.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.830" endtime="20201029 18:19:15.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.832" endtime="20201029 18:19:15.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.807" endtime="20201029 18:19:15.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.805" endtime="20201029 18:19:15.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.841" endtime="20201029 18:19:16.128"></status>
</kw>
<msg timestamp="20201029 18:19:16.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022183389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022254903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.840" endtime="20201029 18:19:16.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022183389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022254903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:16.133" endtime="20201029 18:19:16.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.141" endtime="20201029 18:19:16.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.837" endtime="20201029 18:19:16.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.836" endtime="20201029 18:19:16.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:16.148" level="INFO">${RESULT} = [{'diff': 7.151399999999822e-05}, {'diff': 7.058399999999854e-05}, {'diff': 7.058399999999854e-05}, {'diff': 7.130600000000015e-05}, {'diff': 7.08620000000014e-05}, {'diff': 7.083399999999879e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:16.145" endtime="20201029 18:19:16.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:16.152" level="INFO">${ACCURACY} = {'diff': [7.151399999999822e-05, 7.058399999999854e-05, 7.058399999999854e-05, 7.130600000000015e-05, 7.08620000000014e-05, 7.083399999999879e-05, 7.05979999999981e-05, 7.120799999999969e-05, 7.129100...</msg>
<status status="PASS" starttime="20201029 18:19:16.149" endtime="20201029 18:19:16.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.156" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 18:19:16.155" endtime="20201029 18:19:16.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.159" level="INFO">VALUE: [7.151399999999822e-05, 7.058399999999854e-05, 7.058399999999854e-05, 7.130600000000015e-05, 7.08620000000014e-05, 7.083399999999879e-05, 7.05979999999981e-05, 7.120799999999969e-05, 7.12910000000011e-05, 7.145799999999994e-05, 7.130500000000067e-05, 7.063900000000081e-05, 7.152800000000126e-05, 7.098599999999858e-05, 7.11109999999987e-05, 7.065300000000038e-05, 7.101400000000119e-05, 7.15690000000005e-05, 7.123599999999883e-05, 7.133299999999981e-05, 7.084699999999888e-05, 7.150000000000212e-05, 7.130600000000015e-05, 7.154099999999788e-05, 7.076400000000094e-05, 7.087499999999802e-05, 7.090299999999716e-05, 7.090300000000063e-05, 7.129200000000058e-05, 7.148699999999855e-05, 7.061100000000167e-05, 7.122199999999926e-05, 7.094399999999987e-05, 7.090300000000063e-05, 7.102699999999781e-05, 7.122199999999926e-05, 7.137500000000199e-05, 7.109699999999913e-05, 7.066699999999995e-05, 7.115300000000088e-05, 7.083399999999879e-05, 7.083300000000278e-05, 7.098599999999858e-05, 7.131999999999972e-05, 7.122200000000273e-05, 7.098600000000205e-05, 7.091599999999726e-05, 7.120899999999916e-05, 7.118100000000002e-05, 7.062500000000124e-05]</msg>
<status status="PASS" starttime="20201029 18:19:16.158" endtime="20201029 18:19:16.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.153" endtime="20201029 18:19:16.160"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:16.164" endtime="20201029 18:19:16.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.162" endtime="20201029 18:19:16.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.161" endtime="20201029 18:19:16.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.803" endtime="20201029 18:19:16.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.803" endtime="20201029 18:19:16.185"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.193" endtime="20201029 18:19:16.211"></status>
</kw>
<msg timestamp="20201029 18:19:16.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.192" endtime="20201029 18:19:16.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.213" endtime="20201029 18:19:16.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.215" endtime="20201029 18:19:16.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.189" endtime="20201029 18:19:16.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.187" endtime="20201029 18:19:16.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.224" endtime="20201029 18:19:16.509"></status>
</kw>
<msg timestamp="20201029 18:19:16.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022724333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022796028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:16.223" endtime="20201029 18:19:16.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022724333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022796028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:16.513" endtime="20201029 18:19:16.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.522" endtime="20201029 18:19:16.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.220" endtime="20201029 18:19:16.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.218" endtime="20201029 18:19:16.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:16.528" level="INFO">${RESULT} = [{'diff': 7.169500000000009e-05}, {'diff': 7.22369999999993e-05}, {'diff': 7.222299999999973e-05}, {'diff': 7.252800000000226e-05}, {'diff': 7.199999999999915e-05}, {'diff': 7.209700000000013e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:16.525" endtime="20201029 18:19:16.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:16.532" level="INFO">${ACCURACY} = {'diff': [7.169500000000009e-05, 7.22369999999993e-05, 7.222299999999973e-05, 7.252800000000226e-05, 7.199999999999915e-05, 7.209700000000013e-05, 7.22629999999995e-05, 7.245800000000094e-05, 7.197200...</msg>
<status status="PASS" starttime="20201029 18:19:16.529" endtime="20201029 18:19:16.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.537" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 18:19:16.536" endtime="20201029 18:19:16.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.539" level="INFO">VALUE: [7.169500000000009e-05, 7.22369999999993e-05, 7.222299999999973e-05, 7.252800000000226e-05, 7.199999999999915e-05, 7.209700000000013e-05, 7.22629999999995e-05, 7.245800000000094e-05, 7.197200000000001e-05, 7.21109999999997e-05, 7.19439999999974e-05, 7.230500000000167e-05, 7.18049999999977e-05, 7.187500000000249e-05, 7.187499999999902e-05, 7.184699999999988e-05, 7.249999999999965e-05, 7.199999999999915e-05, 7.237499999999952e-05, 7.161100000000267e-05, 7.194500000000034e-05, 7.230599999999768e-05, 7.230600000000115e-05, 7.163900000000181e-05, 7.234799999999986e-05, 7.194499999999687e-05, 7.233300000000081e-05, 7.233299999999734e-05, 7.220800000000069e-05, 7.163799999999887e-05, 7.190199999999869e-05, 7.16109999999992e-05, 7.156899999999702e-05, 7.190300000000163e-05, 7.229099999999863e-05, 7.184699999999988e-05, 7.199999999999915e-05, 7.205500000000142e-05, 7.188899999999859e-05, 7.216700000000145e-05, 7.249999999999965e-05, 7.208300000000056e-05, 7.248600000000008e-05, 7.250000000000312e-05, 7.225000000000287e-05, 7.216700000000145e-05, 7.238900000000256e-05, 7.199999999999915e-05, 7.15560000000004e-05, 7.237499999999952e-05]</msg>
<status status="PASS" starttime="20201029 18:19:16.538" endtime="20201029 18:19:16.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.533" endtime="20201029 18:19:16.541"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:16.545" endtime="20201029 18:19:16.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.544" endtime="20201029 18:19:16.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.542" endtime="20201029 18:19:16.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.186" endtime="20201029 18:19:16.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.185" endtime="20201029 18:19:16.566"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.574" endtime="20201029 18:19:16.592"></status>
</kw>
<msg timestamp="20201029 18:19:16.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.573" endtime="20201029 18:19:16.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.594" endtime="20201029 18:19:16.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.596" endtime="20201029 18:19:16.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.570" endtime="20201029 18:19:16.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.568" endtime="20201029 18:19:16.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.606" endtime="20201029 18:19:16.892"></status>
</kw>
<msg timestamp="20201029 18:19:16.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021839653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021912417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:16.604" endtime="20201029 18:19:16.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021839653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021912417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:16.896" endtime="20201029 18:19:16.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.905" endtime="20201029 18:19:16.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.602" endtime="20201029 18:19:16.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.600" endtime="20201029 18:19:16.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:16.911" level="INFO">${RESULT} = [{'diff': 7.276399999999947e-05}, {'diff': 7.28049999999987e-05}, {'diff': 7.284800000000036e-05}, {'diff': 7.336099999999748e-05}, {'diff': 7.295799999999797e-05}, {'diff': 7.337499999999705e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:16.908" endtime="20201029 18:19:16.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:16.916" level="INFO">${ACCURACY} = {'diff': [7.276399999999947e-05, 7.28049999999987e-05, 7.284800000000036e-05, 7.336099999999748e-05, 7.295799999999797e-05, 7.337499999999705e-05, 7.341599999999976e-05, 7.34439999999989e-05, 7.327799...</msg>
<status status="PASS" starttime="20201029 18:19:16.912" endtime="20201029 18:19:16.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.921" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 18:19:16.920" endtime="20201029 18:19:16.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.923" level="INFO">VALUE: [7.276399999999947e-05, 7.28049999999987e-05, 7.284800000000036e-05, 7.336099999999748e-05, 7.295799999999797e-05, 7.337499999999705e-05, 7.341599999999976e-05, 7.34439999999989e-05, 7.327799999999954e-05, 7.28049999999987e-05, 7.312500000000027e-05, 7.311099999999723e-05, 7.31110000000007e-05, 7.35829999999986e-05, 7.291699999999873e-05, 7.327799999999954e-05, 7.338900000000009e-05, 7.320799999999822e-05, 7.352799999999979e-05, 7.295900000000091e-05, 7.312500000000027e-05, 7.330599999999868e-05, 7.336100000000095e-05, 7.345899999999794e-05, 7.347299999999751e-05, 7.33049999999992e-05, 7.305500000000242e-05, 7.350000000000065e-05, 7.347199999999804e-05, 7.315299999999941e-05, 7.298600000000058e-05, 7.313899999999984e-05, 7.284700000000088e-05, 7.284699999999741e-05, 7.347200000000151e-05, 7.337500000000052e-05, 7.287500000000002e-05, 7.283300000000131e-05, 7.261099999999673e-05, 7.26110000000002e-05, 7.313899999999984e-05, 7.286100000000045e-05, 7.352799999999979e-05, 7.332000000000172e-05, 7.251399999999922e-05, 7.315299999999941e-05, 7.287500000000002e-05, 7.31110000000007e-05, 7.298600000000058e-05, 7.290199999999969e-05]</msg>
<status status="PASS" starttime="20201029 18:19:16.922" endtime="20201029 18:19:16.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.917" endtime="20201029 18:19:16.924"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:16.928" endtime="20201029 18:19:16.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.926" endtime="20201029 18:19:16.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.925" endtime="20201029 18:19:16.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.567" endtime="20201029 18:19:16.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.566" endtime="20201029 18:19:16.949"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.957" endtime="20201029 18:19:16.975"></status>
</kw>
<msg timestamp="20201029 18:19:16.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.956" endtime="20201029 18:19:16.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.977" endtime="20201029 18:19:16.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.979" endtime="20201029 18:19:16.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.953" endtime="20201029 18:19:16.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.951" endtime="20201029 18:19:16.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.988" endtime="20201029 18:19:17.275"></status>
</kw>
<msg timestamp="20201029 18:19:17.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021930458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022004514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:16.987" endtime="20201029 18:19:17.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021930458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022004514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:17.280" endtime="20201029 18:19:17.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.288" endtime="20201029 18:19:17.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.984" endtime="20201029 18:19:17.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.983" endtime="20201029 18:19:17.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:17.294" level="INFO">${RESULT} = [{'diff': 7.405599999999943e-05}, {'diff': 7.388900000000059e-05}, {'diff': 7.401400000000072e-05}, {'diff': 7.450000000000165e-05}, {'diff': 7.40560000000029e-05}, {'diff': 7.4069999999999e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:19:17.291" endtime="20201029 18:19:17.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:17.299" level="INFO">${ACCURACY} = {'diff': [7.405599999999943e-05, 7.388900000000059e-05, 7.401400000000072e-05, 7.450000000000165e-05, 7.40560000000029e-05, 7.4069999999999e-05, 7.397199999999854e-05, 7.384699999999841e-05, 7.4166000...</msg>
<status status="PASS" starttime="20201029 18:19:17.295" endtime="20201029 18:19:17.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.303" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 18:19:17.302" endtime="20201029 18:19:17.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.305" level="INFO">VALUE: [7.405599999999943e-05, 7.388900000000059e-05, 7.401400000000072e-05, 7.450000000000165e-05, 7.40560000000029e-05, 7.4069999999999e-05, 7.397199999999854e-05, 7.384699999999841e-05, 7.416600000000051e-05, 7.452700000000131e-05, 7.386100000000145e-05, 7.456900000000002e-05, 7.455599999999993e-05, 7.434699999999891e-05, 7.363899999999687e-05, 7.43050000000002e-05, 7.422199999999879e-05, 7.380599999999918e-05, 7.44439999999999e-05, 7.437500000000152e-05, 7.39309999999993e-05, 7.386200000000093e-05, 7.438900000000109e-05, 7.400000000000115e-05, 7.418099999999955e-05, 7.42500000000014e-05, 7.426400000000097e-05, 7.429200000000011e-05, 7.379100000000013e-05, 7.398700000000105e-05, 7.388900000000059e-05, 7.44439999999999e-05, 7.427700000000106e-05, 7.395799999999897e-05, 7.416600000000051e-05, 7.433299999999934e-05, 7.38049999999997e-05, 7.379199999999961e-05, 7.413900000000084e-05, 7.43050000000002e-05, 7.419499999999912e-05, 7.386100000000145e-05, 7.423599999999836e-05, 7.437499999999805e-05, 7.40829999999991e-05, 7.444499999999937e-05, 7.408400000000204e-05, 7.365299999999991e-05, 7.391699999999973e-05, 7.448699999999808e-05]</msg>
<status status="PASS" starttime="20201029 18:19:17.304" endtime="20201029 18:19:17.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.299" endtime="20201029 18:19:17.307"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:17.310" endtime="20201029 18:19:17.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.309" endtime="20201029 18:19:17.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.308" endtime="20201029 18:19:17.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.950" endtime="20201029 18:19:17.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.949" endtime="20201029 18:19:17.331"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.340" endtime="20201029 18:19:17.361"></status>
</kw>
<msg timestamp="20201029 18:19:17.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:17.338" endtime="20201029 18:19:17.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:17.362" endtime="20201029 18:19:17.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.365" endtime="20201029 18:19:17.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.336" endtime="20201029 18:19:17.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.334" endtime="20201029 18:19:17.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.374" endtime="20201029 18:19:17.660"></status>
</kw>
<msg timestamp="20201029 18:19:17.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024884944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024960319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:17.372" endtime="20201029 18:19:17.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024884944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024960319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:17.664" endtime="20201029 18:19:17.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.672" endtime="20201029 18:19:17.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.370" endtime="20201029 18:19:17.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.368" endtime="20201029 18:19:17.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:17.679" level="INFO">${RESULT} = [{'diff': 7.537500000000252e-05}, {'diff': 7.534699999999991e-05}, {'diff': 7.491600000000126e-05}, {'diff': 7.52769999999986e-05}, {'diff': 7.551400000000222e-05}, {'diff': 7.501399999999825e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:17.676" endtime="20201029 18:19:17.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:17.683" level="INFO">${ACCURACY} = {'diff': [7.537500000000252e-05, 7.534699999999991e-05, 7.491600000000126e-05, 7.52769999999986e-05, 7.551400000000222e-05, 7.501399999999825e-05, 7.523599999999936e-05, 7.500000000000215e-05, 7.52080...</msg>
<status status="PASS" starttime="20201029 18:19:17.680" endtime="20201029 18:19:17.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.688" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 18:19:17.686" endtime="20201029 18:19:17.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.690" level="INFO">VALUE: [7.537500000000252e-05, 7.534699999999991e-05, 7.491600000000126e-05, 7.52769999999986e-05, 7.551400000000222e-05, 7.501399999999825e-05, 7.523599999999936e-05, 7.500000000000215e-05, 7.520800000000022e-05, 7.52500000000024e-05, 7.502799999999782e-05, 7.506900000000052e-05, 7.536099999999948e-05, 7.494499999999987e-05, 7.554199999999789e-05, 7.529200000000111e-05, 7.49310000000003e-05, 7.490300000000116e-05, 7.524999999999893e-05, 7.550000000000265e-05, 7.488899999999812e-05, 7.462500000000177e-05, 7.46110000000022e-05, 7.463900000000134e-05, 7.507e-05, 7.462500000000177e-05, 7.505500000000095e-05, 7.499999999999868e-05, 7.513899999999837e-05, 7.50830000000001e-05, 7.505600000000043e-05, 7.465300000000091e-05, 7.534699999999991e-05, 7.505600000000043e-05, 7.455599999999993e-05, 7.502799999999782e-05, 7.558400000000007e-05, 7.524999999999893e-05, 7.529200000000111e-05, 7.526400000000197e-05, 7.537499999999905e-05, 7.466600000000101e-05, 7.520800000000022e-05, 7.520800000000022e-05, 7.515199999999847e-05, 7.509699999999966e-05, 7.522199999999979e-05, 7.486099999999898e-05, 7.483299999999984e-05, 7.506900000000052e-05]</msg>
<status status="PASS" starttime="20201029 18:19:17.689" endtime="20201029 18:19:17.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.684" endtime="20201029 18:19:17.692"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:17.696" endtime="20201029 18:19:17.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.694" endtime="20201029 18:19:17.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.693" endtime="20201029 18:19:17.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.332" endtime="20201029 18:19:17.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.331" endtime="20201029 18:19:17.716"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.725" endtime="20201029 18:19:17.742"></status>
</kw>
<msg timestamp="20201029 18:19:17.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:17.723" endtime="20201029 18:19:17.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:17.744" endtime="20201029 18:19:17.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.746" endtime="20201029 18:19:17.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.721" endtime="20201029 18:19:17.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.719" endtime="20201029 18:19:17.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.755" endtime="20201029 18:19:18.040"></status>
</kw>
<msg timestamp="20201029 18:19:18.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021842486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021918944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:17.754" endtime="20201029 18:19:18.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021842486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021918944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.044" endtime="20201029 18:19:18.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.053" endtime="20201029 18:19:18.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.751" endtime="20201029 18:19:18.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.749" endtime="20201029 18:19:18.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:18.059" level="INFO">${RESULT} = [{'diff': 7.6457999999998e-05}, {'diff': 7.591699999999826e-05}, {'diff': 7.64029999999992e-05}, {'diff': 7.633300000000134e-05}, {'diff': 7.586099999999998e-05}, {'diff': 7.559700000000016e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:19:18.056" endtime="20201029 18:19:18.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:18.064" level="INFO">${ACCURACY} = {'diff': [7.6457999999998e-05, 7.591699999999826e-05, 7.64029999999992e-05, 7.633300000000134e-05, 7.586099999999998e-05, 7.559700000000016e-05, 7.629199999999864e-05, 7.559700000000016e-05, 7.6097000...</msg>
<status status="PASS" starttime="20201029 18:19:18.060" endtime="20201029 18:19:18.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.069" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 18:19:18.068" endtime="20201029 18:19:18.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.071" level="INFO">VALUE: [7.6457999999998e-05, 7.591699999999826e-05, 7.64029999999992e-05, 7.633300000000134e-05, 7.586099999999998e-05, 7.559700000000016e-05, 7.629199999999864e-05, 7.559700000000016e-05, 7.609700000000066e-05, 7.583400000000032e-05, 7.619399999999818e-05, 7.624999999999993e-05, 7.611100000000023e-05, 7.630599999999821e-05, 7.594500000000087e-05, 7.624999999999993e-05, 7.588899999999912e-05, 7.62639999999995e-05, 7.633300000000134e-05, 7.599999999999968e-05, 7.648600000000061e-05, 7.587500000000302e-05, 7.59440000000014e-05, 7.626300000000003e-05, 7.616599999999904e-05, 7.55830000000006e-05, 7.648600000000061e-05, 7.580499999999823e-05, 7.637500000000005e-05, 7.637500000000005e-05, 7.591699999999826e-05, 7.588899999999912e-05, 7.599999999999968e-05, 7.652799999999932e-05, 7.634699999999744e-05, 7.637500000000005e-05, 7.588899999999912e-05, 7.599999999999968e-05, 7.613899999999937e-05, 7.633400000000082e-05, 7.580599999999771e-05, 7.620900000000069e-05, 7.622300000000026e-05, 7.59029999999987e-05, 7.60969999999972e-05, 7.624999999999993e-05, 7.601399999999925e-05, 7.62769999999996e-05, 7.566600000000201e-05, 7.604199999999839e-05]</msg>
<status status="PASS" starttime="20201029 18:19:18.070" endtime="20201029 18:19:18.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.065" endtime="20201029 18:19:18.072"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:18.076" endtime="20201029 18:19:18.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.075" endtime="20201029 18:19:18.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.073" endtime="20201029 18:19:18.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.717" endtime="20201029 18:19:18.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.717" endtime="20201029 18:19:18.099"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.114" endtime="20201029 18:19:18.132"></status>
</kw>
<msg timestamp="20201029 18:19:18.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.112" endtime="20201029 18:19:18.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.133" endtime="20201029 18:19:18.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.136" endtime="20201029 18:19:18.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.107" endtime="20201029 18:19:18.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.102" endtime="20201029 18:19:18.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.145" endtime="20201029 18:19:18.430"></status>
</kw>
<msg timestamp="20201029 18:19:18.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030937153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031014361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.143" endtime="20201029 18:19:18.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030937153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031014361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.434" endtime="20201029 18:19:18.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.443" endtime="20201029 18:19:18.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.141" endtime="20201029 18:19:18.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.139" endtime="20201029 18:19:18.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:18.449" level="INFO">${RESULT} = [{'diff': 7.720800000000222e-05}, {'diff': 7.715299999999994e-05}, {'diff': 7.706999999999853e-05}, {'diff': 7.73189999999993e-05}, {'diff': 7.751399999999381e-05}, {'diff': 7.729199999999964e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:18.446" endtime="20201029 18:19:18.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:18.453" level="INFO">${ACCURACY} = {'diff': [7.720800000000222e-05, 7.715299999999994e-05, 7.706999999999853e-05, 7.73189999999993e-05, 7.751399999999381e-05, 7.729199999999964e-05, 7.718099999999561e-05, 7.690300000000316e-05, 7.68059...</msg>
<status status="PASS" starttime="20201029 18:19:18.450" endtime="20201029 18:19:18.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.458" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 18:19:18.457" endtime="20201029 18:19:18.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.460" level="INFO">VALUE: [7.720800000000222e-05, 7.715299999999994e-05, 7.706999999999853e-05, 7.73189999999993e-05, 7.751399999999381e-05, 7.729199999999964e-05, 7.718099999999561e-05, 7.690300000000316e-05, 7.680599999999871e-05, 7.659799999999717e-05, 7.680600000000565e-05, 7.71389999999969e-05, 7.744399999999596e-05, 7.7151999999997e-05, 7.66110000000042e-05, 7.688899999999665e-05, 7.730499999999974e-05, 7.747200000000204e-05, 7.708300000000556e-05, 7.747200000000204e-05, 7.719400000000265e-05, 7.716699999999604e-05, 7.69310000000023e-05, 7.698600000000111e-05, 7.707000000000547e-05, 7.705599999999896e-05, 7.704200000000633e-05, 7.747200000000204e-05, 7.715300000000341e-05, 7.719500000000212e-05, 7.740300000000366e-05, 7.68189999999988e-05, 7.697300000000101e-05, 7.662499999999683e-05, 7.701300000000078e-05, 7.695800000000197e-05, 7.740200000000419e-05, 7.698600000000111e-05, 7.693000000000283e-05, 7.754100000000042e-05, 7.725000000000093e-05, 7.708299999999862e-05, 7.700000000000068e-05, 7.722200000000179e-05, 7.702799999999982e-05, 7.74719999999951e-05, 7.748600000000161e-05, 7.679199999999914e-05, 7.730499999999974e-05, 7.704199999999939e-05]</msg>
<status status="PASS" starttime="20201029 18:19:18.459" endtime="20201029 18:19:18.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.454" endtime="20201029 18:19:18.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:18.465" endtime="20201029 18:19:18.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.464" endtime="20201029 18:19:18.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.463" endtime="20201029 18:19:18.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.100" endtime="20201029 18:19:18.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.100" endtime="20201029 18:19:18.486"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.495" endtime="20201029 18:19:18.513"></status>
</kw>
<msg timestamp="20201029 18:19:18.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.493" endtime="20201029 18:19:18.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.515" endtime="20201029 18:19:18.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.517" endtime="20201029 18:19:18.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.490" endtime="20201029 18:19:18.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.488" endtime="20201029 18:19:18.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.526" endtime="20201029 18:19:18.812"></status>
</kw>
<msg timestamp="20201029 18:19:18.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022800986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022879417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.525" endtime="20201029 18:19:18.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022800986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022879417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.816" endtime="20201029 18:19:18.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.824" endtime="20201029 18:19:18.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.522" endtime="20201029 18:19:18.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.520" endtime="20201029 18:19:18.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:18.831" level="INFO">${RESULT} = [{'diff': 7.843100000000033e-05}, {'diff': 7.841700000000076e-05}, {'diff': 7.816699999999704e-05}, {'diff': 7.791700000000026e-05}, {'diff': 7.783399999999885e-05}, {'diff': 7.779200000000014e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:18.828" endtime="20201029 18:19:18.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:18.835" level="INFO">${ACCURACY} = {'diff': [7.843100000000033e-05, 7.841700000000076e-05, 7.816699999999704e-05, 7.791700000000026e-05, 7.783399999999885e-05, 7.779200000000014e-05, 7.756999999999903e-05, 7.802800000000082e-05, 7.8262...</msg>
<status status="PASS" starttime="20201029 18:19:18.832" endtime="20201029 18:19:18.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.839" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 18:19:18.838" endtime="20201029 18:19:18.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.842" level="INFO">VALUE: [7.843100000000033e-05, 7.841700000000076e-05, 7.816699999999704e-05, 7.791700000000026e-05, 7.783399999999885e-05, 7.779200000000014e-05, 7.756999999999903e-05, 7.802800000000082e-05, 7.826299999999856e-05, 7.780500000000024e-05, 7.829100000000117e-05, 7.76250000000013e-05, 7.786099999999851e-05, 7.848599999999914e-05, 7.856900000000056e-05, 7.851400000000175e-05, 7.812499999999833e-05, 7.766700000000001e-05, 7.81250000000018e-05, 7.851399999999828e-05, 7.8458e-05, 7.80839999999991e-05, 7.791600000000079e-05, 7.788900000000112e-05, 7.838899999999815e-05, 7.797199999999907e-05, 7.763900000000087e-05, 7.786200000000146e-05, 7.805599999999996e-05, 7.822199999999932e-05, 7.816600000000104e-05, 7.83190000000003e-05, 7.837500000000205e-05, 7.844400000000043e-05, 7.76250000000013e-05, 7.790299999999722e-05, 7.806900000000006e-05, 7.850000000000218e-05, 7.784700000000241e-05, 7.823599999999889e-05, 7.761099999999826e-05, 7.76389999999974e-05, 7.787500000000155e-05, 7.852800000000132e-05, 7.848599999999914e-05, 7.813900000000137e-05, 7.851400000000175e-05, 7.820900000000269e-05, 7.80839999999991e-05, 7.79449999999994e-05]</msg>
<status status="PASS" starttime="20201029 18:19:18.840" endtime="20201029 18:19:18.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.836" endtime="20201029 18:19:18.849"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:18.852" endtime="20201029 18:19:18.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.851" endtime="20201029 18:19:18.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.850" endtime="20201029 18:19:18.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.487" endtime="20201029 18:19:18.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.486" endtime="20201029 18:19:18.873"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.882" endtime="20201029 18:19:18.899"></status>
</kw>
<msg timestamp="20201029 18:19:18.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.880" endtime="20201029 18:19:18.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.901" endtime="20201029 18:19:18.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.903" endtime="20201029 18:19:18.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.878" endtime="20201029 18:19:18.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.876" endtime="20201029 18:19:18.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.912" endtime="20201029 18:19:19.195"></status>
</kw>
<msg timestamp="20201029 18:19:19.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021868736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021947931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.911" endtime="20201029 18:19:19.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021868736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021947931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:19.199" endtime="20201029 18:19:19.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.208" endtime="20201029 18:19:19.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.908" endtime="20201029 18:19:19.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.906" endtime="20201029 18:19:19.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:19.214" level="INFO">${RESULT} = [{'diff': 7.919500000000065e-05}, {'diff': 7.937499999999958e-05}, {'diff': 7.9458000000001e-05}, {'diff': 7.954099999999895e-05}, {'diff': 7.933300000000088e-05}, {'diff': 7.952799999999885e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:19.211" endtime="20201029 18:19:19.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:19.219" level="INFO">${ACCURACY} = {'diff': [7.919500000000065e-05, 7.937499999999958e-05, 7.9458000000001e-05, 7.954099999999895e-05, 7.933300000000088e-05, 7.952799999999885e-05, 7.905499999999802e-05, 7.861099999999926e-05, 7.933300...</msg>
<status status="PASS" starttime="20201029 18:19:19.215" endtime="20201029 18:19:19.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.224" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 18:19:19.223" endtime="20201029 18:19:19.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.226" level="INFO">VALUE: [7.919500000000065e-05, 7.937499999999958e-05, 7.9458000000001e-05, 7.954099999999895e-05, 7.933300000000088e-05, 7.952799999999885e-05, 7.905499999999802e-05, 7.861099999999926e-05, 7.933300000000088e-05, 7.886099999999951e-05, 7.887499999999908e-05, 7.913900000000237e-05, 7.888899999999865e-05, 7.899999999999921e-05, 7.907000000000053e-05, 7.879199999999767e-05, 7.858300000000012e-05, 7.919499999999718e-05, 7.912499999999933e-05, 7.865300000000144e-05, 7.92779999999986e-05, 7.949999999999971e-05, 7.861099999999926e-05, 7.897200000000007e-05, 7.884699999999994e-05, 7.940199999999925e-05, 7.905500000000149e-05, 7.857000000000003e-05, 7.858300000000012e-05, 7.930499999999827e-05, 7.924999999999946e-05, 7.911099999999976e-05, 7.922200000000032e-05, 7.954199999999842e-05, 7.94450000000009e-05, 7.91389999999989e-05, 7.937499999999958e-05, 7.879200000000114e-05, 7.945900000000047e-05, 7.936100000000001e-05, 7.933400000000035e-05, 7.937500000000305e-05, 7.901399999999878e-05, 7.912499999999933e-05, 7.886100000000298e-05, 7.92909999999987e-05, 7.858300000000012e-05, 7.891599999999832e-05, 7.897200000000007e-05, 7.879200000000114e-05]</msg>
<status status="PASS" starttime="20201029 18:19:19.225" endtime="20201029 18:19:19.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.220" endtime="20201029 18:19:19.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:19.231" endtime="20201029 18:19:19.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.230" endtime="20201029 18:19:19.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.229" endtime="20201029 18:19:19.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.874" endtime="20201029 18:19:19.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.873" endtime="20201029 18:19:19.252"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.260" endtime="20201029 18:19:19.278"></status>
</kw>
<msg timestamp="20201029 18:19:19.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.259" endtime="20201029 18:19:19.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.280" endtime="20201029 18:19:19.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.282" endtime="20201029 18:19:19.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.256" endtime="20201029 18:19:19.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.254" endtime="20201029 18:19:19.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.291" endtime="20201029 18:19:19.578"></status>
</kw>
<msg timestamp="20201029 18:19:19.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:19.290" endtime="20201029 18:19:19.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:19.582" endtime="20201029 18:19:19.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.591" endtime="20201029 18:19:19.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.287" endtime="20201029 18:19:19.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.285" endtime="20201029 18:19:19.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:19.597" level="INFO">${RESULT} = [{'diff': 8.055599999999899e-05}, {'diff': 8.037500000000058e-05}, {'diff': 8.005499999999902e-05}, {'diff': 8.023599999999742e-05}, {'diff': 7.993000000000236e-05}, {'diff': 7.98190000000018e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:19.594" endtime="20201029 18:19:19.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:19.601" level="INFO">${ACCURACY} = {'diff': [8.055599999999899e-05, 8.037500000000058e-05, 8.005499999999902e-05, 8.023599999999742e-05, 7.993000000000236e-05, 7.98190000000018e-05, 7.95970000000007e-05, 8.02779999999996e-05, 8.0555999...</msg>
<status status="PASS" starttime="20201029 18:19:19.598" endtime="20201029 18:19:19.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.606" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 18:19:19.605" endtime="20201029 18:19:19.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.608" level="INFO">VALUE: [8.055599999999899e-05, 8.037500000000058e-05, 8.005499999999902e-05, 8.023599999999742e-05, 7.993000000000236e-05, 7.98190000000018e-05, 7.95970000000007e-05, 8.02779999999996e-05, 8.055599999999899e-05, 8.034699999999798e-05, 8.01389999999999e-05, 8.037500000000058e-05, 7.96389999999994e-05, 8.052799999999985e-05, 8.056999999999856e-05, 7.96389999999994e-05, 8.040299999999972e-05, 7.990299999999922e-05, 7.997200000000107e-05, 8.00840000000011e-05, 8.036200000000049e-05, 8.017999999999914e-05, 8.040200000000025e-05, 8.015299999999947e-05, 8.048600000000114e-05, 7.997200000000107e-05, 8.045799999999853e-05, 7.98190000000018e-05, 7.993000000000236e-05, 7.980600000000171e-05, 8.023600000000089e-05, 8.000000000000021e-05, 7.993099999999836e-05, 7.959699999999723e-05, 8.040299999999972e-05, 8.050000000000071e-05, 7.990299999999922e-05, 8.050000000000071e-05, 8.045900000000147e-05, 7.99030000000027e-05, 8.012500000000033e-05, 7.993100000000183e-05, 8.00840000000011e-05, 8.048700000000061e-05, 8.020799999999828e-05, 7.997200000000107e-05, 8.002699999999988e-05, 8.02779999999996e-05, 8.026400000000003e-05, 8.005500000000249e-05]</msg>
<status status="PASS" starttime="20201029 18:19:19.607" endtime="20201029 18:19:19.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.602" endtime="20201029 18:19:19.609"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:19.613" endtime="20201029 18:19:19.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.612" endtime="20201029 18:19:19.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.610" endtime="20201029 18:19:19.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.253" endtime="20201029 18:19:19.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.252" endtime="20201029 18:19:19.634"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.642" endtime="20201029 18:19:19.662"></status>
</kw>
<msg timestamp="20201029 18:19:19.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.641" endtime="20201029 18:19:19.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.664" endtime="20201029 18:19:19.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.666" endtime="20201029 18:19:19.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.638" endtime="20201029 18:19:19.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.636" endtime="20201029 18:19:19.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.675" endtime="20201029 18:19:19.959"></status>
</kw>
<msg timestamp="20201029 18:19:19.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022742542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022823528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:19.674" endtime="20201029 18:19:19.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022742542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022823528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:19.964" endtime="20201029 18:19:19.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.972" endtime="20201029 18:19:19.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.671" endtime="20201029 18:19:19.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.669" endtime="20201029 18:19:19.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:19.978" level="INFO">${RESULT} = [{'diff': 8.098599999999817e-05}, {'diff': 8.138900000000115e-05}, {'diff': 8.126400000000103e-05}, {'diff': 8.138900000000115e-05}, {'diff': 8.140300000000072e-05}, {'diff': 8.102799999999688e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:19.975" endtime="20201029 18:19:19.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:19.983" level="INFO">${ACCURACY} = {'diff': [8.098599999999817e-05, 8.138900000000115e-05, 8.126400000000103e-05, 8.138900000000115e-05, 8.140300000000072e-05, 8.102799999999688e-05, 8.1152000000001e-05, 8.08329999999989e-05, 8.1000000...</msg>
<status status="PASS" starttime="20201029 18:19:19.979" endtime="20201029 18:19:19.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.987" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 18:19:19.986" endtime="20201029 18:19:19.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.989" level="INFO">VALUE: [8.098599999999817e-05, 8.138900000000115e-05, 8.126400000000103e-05, 8.138900000000115e-05, 8.140300000000072e-05, 8.102799999999688e-05, 8.1152000000001e-05, 8.08329999999989e-05, 8.100000000000121e-05, 8.062500000000083e-05, 8.06390000000004e-05, 8.102800000000035e-05, 8.090300000000022e-05, 8.130500000000027e-05, 8.144399999999996e-05, 8.104100000000045e-05, 8.080599999999924e-05, 8.120799999999928e-05, 8.144499999999943e-05, 8.150000000000171e-05, 8.140300000000072e-05, 8.111200000000124e-05, 8.087499999999762e-05, 8.091600000000032e-05, 8.081999999999881e-05, 8.140300000000072e-05, 8.101299999999784e-05, 8.154099999999748e-05, 8.084699999999848e-05, 8.09719999999986e-05, 8.118000000000014e-05, 8.102800000000035e-05, 8.125000000000146e-05, 8.149999999999824e-05, 8.130599999999974e-05, 8.090300000000022e-05, 8.13329999999994e-05, 8.13329999999994e-05, 8.116700000000004e-05, 8.14719999999991e-05, 8.106999999999906e-05, 8.14719999999991e-05, 8.119399999999971e-05, 8.09450000000024e-05, 8.100000000000121e-05, 8.087499999999762e-05, 8.116600000000057e-05, 8.127700000000113e-05, 8.131899999999984e-05, 8.118000000000014e-05]</msg>
<status status="PASS" starttime="20201029 18:19:19.988" endtime="20201029 18:19:19.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.983" endtime="20201029 18:19:19.992"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:19.995" endtime="20201029 18:19:20.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.994" endtime="20201029 18:19:20.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.993" endtime="20201029 18:19:20.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.635" endtime="20201029 18:19:20.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.634" endtime="20201029 18:19:20.016"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.025" endtime="20201029 18:19:20.042"></status>
</kw>
<msg timestamp="20201029 18:19:20.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.023" endtime="20201029 18:19:20.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.043" endtime="20201029 18:19:20.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.046" endtime="20201029 18:19:20.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.021" endtime="20201029 18:19:20.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.018" endtime="20201029 18:19:20.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.055" endtime="20201029 18:19:20.341"></status>
</kw>
<msg timestamp="20201029 18:19:20.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021907167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.053" endtime="20201029 18:19:20.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021907167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.345" endtime="20201029 18:19:20.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.353" endtime="20201029 18:19:20.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.051" endtime="20201029 18:19:20.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.049" endtime="20201029 18:19:20.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:20.360" level="INFO">${RESULT} = [{'diff': 8.259699999999676e-05}, {'diff': 8.199999999999874e-05}, {'diff': 8.180600000000024e-05}, {'diff': 8.158399999999913e-05}, {'diff': 8.183399999999938e-05}, {'diff': 8.23330000000004e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:20.357" endtime="20201029 18:19:20.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:20.365" level="INFO">${ACCURACY} = {'diff': [8.259699999999676e-05, 8.199999999999874e-05, 8.180600000000024e-05, 8.158399999999913e-05, 8.183399999999938e-05, 8.23330000000004e-05, 8.19589999999995e-05, 8.222199999999985e-05, 8.244400...</msg>
<status status="PASS" starttime="20201029 18:19:20.361" endtime="20201029 18:19:20.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.369" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 18:19:20.368" endtime="20201029 18:19:20.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.372" level="INFO">VALUE: [8.259699999999676e-05, 8.199999999999874e-05, 8.180600000000024e-05, 8.158399999999913e-05, 8.183399999999938e-05, 8.23330000000004e-05, 8.19589999999995e-05, 8.222199999999985e-05, 8.244400000000096e-05, 8.243000000000139e-05, 8.234699999999998e-05, 8.180500000000077e-05, 8.224999999999899e-05, 8.16390000000014e-05, 8.238900000000215e-05, 8.243000000000139e-05, 8.244399999999749e-05, 8.202800000000135e-05, 8.170799999999978e-05, 8.188900000000165e-05, 8.200000000000221e-05, 8.232000000000031e-05, 8.223599999999942e-05, 8.219500000000018e-05, 8.21109999999993e-05, 8.257000000000056e-05, 8.202800000000135e-05, 8.251299999999934e-05, 8.237499999999912e-05, 8.19719999999996e-05, 8.254100000000195e-05, 8.195800000000003e-05, 8.223599999999942e-05, 8.23049999999978e-05, 8.256900000000109e-05, 8.188799999999871e-05, 8.180600000000024e-05, 8.254200000000142e-05, 8.216700000000104e-05, 8.180600000000024e-05, 8.251399999999881e-05, 8.24170000000013e-05, 8.207000000000006e-05, 8.19589999999995e-05, 8.190299999999776e-05, 8.188799999999871e-05, 8.250000000000271e-05, 8.238799999999921e-05, 8.252699999999891e-05, 8.21109999999993e-05]</msg>
<status status="PASS" starttime="20201029 18:19:20.370" endtime="20201029 18:19:20.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.366" endtime="20201029 18:19:20.373"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:20.377" endtime="20201029 18:19:20.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.375" endtime="20201029 18:19:20.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.374" endtime="20201029 18:19:20.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.017" endtime="20201029 18:19:20.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.016" endtime="20201029 18:19:20.398"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.406" endtime="20201029 18:19:20.424"></status>
</kw>
<msg timestamp="20201029 18:19:20.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.405" endtime="20201029 18:19:20.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.426" endtime="20201029 18:19:20.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.428" endtime="20201029 18:19:20.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.402" endtime="20201029 18:19:20.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.400" endtime="20201029 18:19:20.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.437" endtime="20201029 18:19:20.724"></status>
</kw>
<msg timestamp="20201029 18:19:20.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022314014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022397194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.435" endtime="20201029 18:19:20.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022314014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022397194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.728" endtime="20201029 18:19:20.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.737" endtime="20201029 18:19:20.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.433" endtime="20201029 18:19:20.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.431" endtime="20201029 18:19:20.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:20.743" level="INFO">${RESULT} = [{'diff': 8.317999999999867e-05}, {'diff': 8.295800000000103e-05}, {'diff': 8.342999999999892e-05}, {'diff': 8.273599999999992e-05}, {'diff': 8.286100000000005e-05}, {'diff': 8.34309999999984e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:20.740" endtime="20201029 18:19:20.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:20.747" level="INFO">${ACCURACY} = {'diff': [8.317999999999867e-05, 8.295800000000103e-05, 8.342999999999892e-05, 8.273599999999992e-05, 8.286100000000005e-05, 8.34309999999984e-05, 8.342999999999892e-05, 8.292999999999842e-05, 8.33470...</msg>
<status status="PASS" starttime="20201029 18:19:20.744" endtime="20201029 18:19:20.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.752" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 18:19:20.751" endtime="20201029 18:19:20.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.754" level="INFO">VALUE: [8.317999999999867e-05, 8.295800000000103e-05, 8.342999999999892e-05, 8.273599999999992e-05, 8.286100000000005e-05, 8.34309999999984e-05, 8.342999999999892e-05, 8.292999999999842e-05, 8.334700000000098e-05, 8.29309999999979e-05, 8.26109999999998e-05, 8.284700000000048e-05, 8.337500000000012e-05, 8.320799999999781e-05, 8.299999999999974e-05, 8.329200000000217e-05, 8.299999999999974e-05, 8.355499999999905e-05, 8.281999999999734e-05, 8.291600000000232e-05, 8.305500000000202e-05, 8.342999999999892e-05, 8.2846999999997e-05, 8.293000000000189e-05, 8.352799999999938e-05, 8.313899999999944e-05, 8.342999999999892e-05, 8.348600000000067e-05, 8.309700000000073e-05, 8.287499999999962e-05, 8.32919999999987e-05, 8.26529999999985e-05, 8.322199999999738e-05, 8.337500000000012e-05, 8.283400000000038e-05, 8.29309999999979e-05, 8.330600000000174e-05, 8.347300000000057e-05, 8.34720000000011e-05, 8.262500000000284e-05, 8.29720000000006e-05, 8.337500000000012e-05, 8.330500000000227e-05, 8.291600000000232e-05, 8.348600000000067e-05, 8.293100000000136e-05, 8.287499999999962e-05, 8.355600000000199e-05, 8.341599999999935e-05, 8.330599999999827e-05]</msg>
<status status="PASS" starttime="20201029 18:19:20.753" endtime="20201029 18:19:20.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.748" endtime="20201029 18:19:20.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:20.759" endtime="20201029 18:19:20.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.758" endtime="20201029 18:19:20.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.756" endtime="20201029 18:19:20.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.399" endtime="20201029 18:19:20.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.398" endtime="20201029 18:19:20.780"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.788" endtime="20201029 18:19:20.810"></status>
</kw>
<msg timestamp="20201029 18:19:20.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.787" endtime="20201029 18:19:20.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.811" endtime="20201029 18:19:20.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.814" endtime="20201029 18:19:20.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.784" endtime="20201029 18:19:20.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.782" endtime="20201029 18:19:20.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.823" endtime="20201029 18:19:21.109"></status>
</kw>
<msg timestamp="20201029 18:19:21.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025291806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025375528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.821" endtime="20201029 18:19:21.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025291806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025375528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.113" endtime="20201029 18:19:21.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.121" endtime="20201029 18:19:21.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.819" endtime="20201029 18:19:21.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.817" endtime="20201029 18:19:21.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:21.128" level="INFO">${RESULT} = [{'diff': 8.372200000000135e-05}, {'diff': 8.427800000000013e-05}, {'diff': 8.420900000000175e-05}, {'diff': 8.401400000000031e-05}, {'diff': 8.413900000000044e-05}, {'diff': 8.44859999999982e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:21.125" endtime="20201029 18:19:21.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:21.132" level="INFO">${ACCURACY} = {'diff': [8.372200000000135e-05, 8.427800000000013e-05, 8.420900000000175e-05, 8.401400000000031e-05, 8.413900000000044e-05, 8.44859999999982e-05, 8.43469999999985e-05, 8.419399999999924e-05, 8.415200...</msg>
<status status="PASS" starttime="20201029 18:19:21.129" endtime="20201029 18:19:21.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.136" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 18:19:21.135" endtime="20201029 18:19:21.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.139" level="INFO">VALUE: [8.372200000000135e-05, 8.427800000000013e-05, 8.420900000000175e-05, 8.401400000000031e-05, 8.413900000000044e-05, 8.44859999999982e-05, 8.43469999999985e-05, 8.419399999999924e-05, 8.415200000000053e-05, 8.436099999999808e-05, 8.425000000000099e-05, 8.383299999999844e-05, 8.397300000000107e-05, 8.359700000000123e-05, 8.455599999999952e-05, 8.380600000000224e-05, 8.423600000000142e-05, 8.425000000000099e-05, 8.39309999999989e-05, 8.36529999999995e-05, 8.441699999999983e-05, 8.362500000000037e-05, 8.390299999999976e-05, 8.39309999999989e-05, 8.411099999999783e-05, 8.456899999999962e-05, 8.386100000000105e-05, 8.391599999999985e-05, 8.36529999999995e-05, 8.441599999999688e-05, 8.433299999999894e-05, 8.402799999999988e-05, 8.419399999999924e-05, 8.418099999999915e-05, 8.386099999999758e-05, 8.44309999999994e-05, 8.36110000000008e-05, 8.39720000000016e-05, 8.437500000000112e-05, 8.398600000000117e-05, 8.409700000000173e-05, 8.400000000000074e-05, 8.417999999999967e-05, 8.398699999999718e-05, 8.390200000000028e-05, 8.426299999999762e-05, 8.411099999999783e-05, 8.409700000000173e-05, 8.36110000000008e-05, 8.409700000000173e-05]</msg>
<status status="PASS" starttime="20201029 18:19:21.138" endtime="20201029 18:19:21.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.133" endtime="20201029 18:19:21.141"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:21.145" endtime="20201029 18:19:21.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.143" endtime="20201029 18:19:21.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.142" endtime="20201029 18:19:21.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.781" endtime="20201029 18:19:21.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.780" endtime="20201029 18:19:21.166"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.174" endtime="20201029 18:19:21.198"></status>
</kw>
<msg timestamp="20201029 18:19:21.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.173" endtime="20201029 18:19:21.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.200" endtime="20201029 18:19:21.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.202" endtime="20201029 18:19:21.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.170" endtime="20201029 18:19:21.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.168" endtime="20201029 18:19:21.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.212" endtime="20201029 18:19:21.498"></status>
</kw>
<msg timestamp="20201029 18:19:21.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022011597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022096931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.210" endtime="20201029 18:19:21.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022011597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022096931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.502" endtime="20201029 18:19:21.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.511" endtime="20201029 18:19:21.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.208" endtime="20201029 18:19:21.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.206" endtime="20201029 18:19:21.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:21.517" level="INFO">${RESULT} = [{'diff': 8.533399999999941e-05}, {'diff': 8.522299999999886e-05}, {'diff': 8.501299999999837e-05}, {'diff': 8.51110000000023e-05}, {'diff': 8.486099999999858e-05}, {'diff': 8.511099999999883e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:21.514" endtime="20201029 18:19:21.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:21.522" level="INFO">${ACCURACY} = {'diff': [8.533399999999941e-05, 8.522299999999886e-05, 8.501299999999837e-05, 8.51110000000023e-05, 8.486099999999858e-05, 8.511099999999883e-05, 8.512500000000187e-05, 8.508299999999969e-05, 8.49300...</msg>
<status status="PASS" starttime="20201029 18:19:21.518" endtime="20201029 18:19:21.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.527" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 18:19:21.526" endtime="20201029 18:19:21.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.529" level="INFO">VALUE: [8.533399999999941e-05, 8.522299999999886e-05, 8.501299999999837e-05, 8.51110000000023e-05, 8.486099999999858e-05, 8.511099999999883e-05, 8.512500000000187e-05, 8.508299999999969e-05, 8.493000000000042e-05, 8.544400000000049e-05, 8.552800000000138e-05, 8.466700000000008e-05, 8.527800000000113e-05, 8.504200000000045e-05, 8.501400000000131e-05, 8.516700000000058e-05, 8.51249999999984e-05, 8.531999999999984e-05, 8.458399999999866e-05, 8.54310000000004e-05, 8.491699999999686e-05, 8.483399999999891e-05, 8.463900000000094e-05, 8.540200000000178e-05, 8.522199999999938e-05, 8.513800000000196e-05, 8.512500000000187e-05, 8.53469999999995e-05, 8.502800000000088e-05, 8.513900000000144e-05, 8.51249999999984e-05, 8.4846999999999e-05, 8.49309999999999e-05, 8.483299999999944e-05, 8.511099999999883e-05, 8.551400000000181e-05, 8.513900000000144e-05, 8.557000000000009e-05, 8.519499999999972e-05, 8.49309999999999e-05, 8.531999999999984e-05, 8.51249999999984e-05, 8.48050000000003e-05, 8.524999999999852e-05, 8.520799999999981e-05, 8.502700000000141e-05, 8.455500000000005e-05, 8.508299999999969e-05, 8.547199999999963e-05, 8.522199999999938e-05]</msg>
<status status="PASS" starttime="20201029 18:19:21.528" endtime="20201029 18:19:21.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.523" endtime="20201029 18:19:21.531"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:21.534" endtime="20201029 18:19:21.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.533" endtime="20201029 18:19:21.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.531" endtime="20201029 18:19:21.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.166" endtime="20201029 18:19:21.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.166" endtime="20201029 18:19:21.555"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.563" endtime="20201029 18:19:21.581"></status>
</kw>
<msg timestamp="20201029 18:19:21.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.562" endtime="20201029 18:19:21.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.583" endtime="20201029 18:19:21.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.585" endtime="20201029 18:19:21.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.559" endtime="20201029 18:19:21.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.557" endtime="20201029 18:19:21.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.594" endtime="20201029 18:19:21.877"></status>
</kw>
<msg timestamp="20201029 18:19:21.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021791458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.592" endtime="20201029 18:19:21.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021791458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.882" endtime="20201029 18:19:21.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.890" endtime="20201029 18:19:21.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.590" endtime="20201029 18:19:21.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.588" endtime="20201029 18:19:21.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:21.896" level="INFO">${RESULT} = [{'diff': 8.64310000000014e-05}, {'diff': 8.608400000000016e-05}, {'diff': 8.59729999999996e-05}, {'diff': 8.605600000000102e-05}, {'diff': 8.651299999999987e-05}, {'diff': 8.654100000000248e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:21.893" endtime="20201029 18:19:21.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:21.901" level="INFO">${ACCURACY} = {'diff': [8.64310000000014e-05, 8.608400000000016e-05, 8.59729999999996e-05, 8.605600000000102e-05, 8.651299999999987e-05, 8.654100000000248e-05, 8.623599999999995e-05, 8.605499999999808e-05, 8.559699...</msg>
<status status="PASS" starttime="20201029 18:19:21.897" endtime="20201029 18:19:21.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.905" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 18:19:21.904" endtime="20201029 18:19:21.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.908" level="INFO">VALUE: [8.64310000000014e-05, 8.608400000000016e-05, 8.59729999999996e-05, 8.605600000000102e-05, 8.651299999999987e-05, 8.654100000000248e-05, 8.623599999999995e-05, 8.605499999999808e-05, 8.559699999999976e-05, 8.64860000000002e-05, 8.606900000000112e-05, 8.604099999999851e-05, 8.623599999999995e-05, 8.61669999999981e-05, 8.594400000000099e-05, 8.61669999999981e-05, 8.620799999999734e-05, 8.626399999999909e-05, 8.56110000000028e-05, 8.583399999999991e-05, 8.59859999999997e-05, 8.591700000000133e-05, 8.561099999999933e-05, 8.590300000000176e-05, 8.656899999999815e-05, 8.576400000000206e-05, 8.63470000000005e-05, 8.616599999999863e-05, 8.611099999999983e-05, 8.622200000000038e-05, 8.588900000000219e-05, 8.605500000000155e-05, 8.604199999999798e-05, 8.655500000000205e-05, 8.5847e-05, 8.62920000000017e-05, 8.599999999999927e-05, 8.557000000000009e-05, 8.586099999999958e-05, 8.633400000000041e-05, 8.604200000000145e-05, 8.588899999999872e-05, 8.580600000000077e-05, 8.608400000000016e-05, 8.634699999999704e-05, 8.649999999999977e-05, 8.590199999999881e-05, 8.562500000000237e-05, 8.592999999999795e-05, 8.58050000000013e-05]</msg>
<status status="PASS" starttime="20201029 18:19:21.906" endtime="20201029 18:19:21.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.901" endtime="20201029 18:19:21.909"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:21.912" endtime="20201029 18:19:21.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.911" endtime="20201029 18:19:21.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.910" endtime="20201029 18:19:21.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.556" endtime="20201029 18:19:21.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.555" endtime="20201029 18:19:21.933"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.942" endtime="20201029 18:19:21.960"></status>
</kw>
<msg timestamp="20201029 18:19:21.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.940" endtime="20201029 18:19:21.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.962" endtime="20201029 18:19:21.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.964" endtime="20201029 18:19:21.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.938" endtime="20201029 18:19:21.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.935" endtime="20201029 18:19:21.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.973" endtime="20201029 18:19:22.259"></status>
</kw>
<msg timestamp="20201029 18:19:22.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022768792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022855847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.972" endtime="20201029 18:19:22.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022768792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022855847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.263" endtime="20201029 18:19:22.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.272" endtime="20201029 18:19:22.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.969" endtime="20201029 18:19:22.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.967" endtime="20201029 18:19:22.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:22.278" level="INFO">${RESULT} = [{'diff': 8.705499999999908e-05}, {'diff': 8.734800000000098e-05}, {'diff': 8.747299999999764e-05}, {'diff': 8.661100000000033e-05}, {'diff': 8.745799999999859e-05}, {'diff': 8.740299999999979e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:22.275" endtime="20201029 18:19:22.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:22.282" level="INFO">${ACCURACY} = {'diff': [8.705499999999908e-05, 8.734800000000098e-05, 8.747299999999764e-05, 8.661100000000033e-05, 8.745799999999859e-05, 8.740299999999979e-05, 8.693099999999843e-05, 8.730600000000227e-05, 8.6820...</msg>
<status status="PASS" starttime="20201029 18:19:22.279" endtime="20201029 18:19:22.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.287" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 18:19:22.286" endtime="20201029 18:19:22.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.289" level="INFO">VALUE: [8.705499999999908e-05, 8.734800000000098e-05, 8.747299999999764e-05, 8.661100000000033e-05, 8.745799999999859e-05, 8.740299999999979e-05, 8.693099999999843e-05, 8.730600000000227e-05, 8.682000000000134e-05, 8.730499999999933e-05, 8.718099999999868e-05, 8.715299999999954e-05, 8.69860000000007e-05, 8.700000000000027e-05, 8.659699999999729e-05, 8.713899999999997e-05, 8.720800000000181e-05, 8.719399999999877e-05, 8.66249999999999e-05, 8.697199999999766e-05, 8.71250000000004e-05, 8.690300000000276e-05, 8.731999999999837e-05, 8.690299999999929e-05, 8.691699999999886e-05, 8.709799999999726e-05, 8.676399999999959e-05, 8.708399999999769e-05, 8.733399999999794e-05, 8.737500000000065e-05, 8.690300000000276e-05, 8.729199999999923e-05, 8.71250000000004e-05, 8.658300000000119e-05, 8.722199999999791e-05, 8.708299999999822e-05, 8.726400000000009e-05, 8.681900000000187e-05, 8.686100000000058e-05, 8.659700000000076e-05, 8.690299999999929e-05, 8.741699999999936e-05, 8.740299999999979e-05, 8.702799999999941e-05, 8.708400000000116e-05, 8.727799999999966e-05, 8.706999999999812e-05, 8.748599999999773e-05, 8.740299999999979e-05, 8.670899999999732e-05]</msg>
<status status="PASS" starttime="20201029 18:19:22.288" endtime="20201029 18:19:22.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.283" endtime="20201029 18:19:22.291"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:22.295" endtime="20201029 18:19:22.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.293" endtime="20201029 18:19:22.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.292" endtime="20201029 18:19:22.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.934" endtime="20201029 18:19:22.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.933" endtime="20201029 18:19:22.316"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.324" endtime="20201029 18:19:22.343"></status>
</kw>
<msg timestamp="20201029 18:19:22.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.323" endtime="20201029 18:19:22.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.344" endtime="20201029 18:19:22.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.347" endtime="20201029 18:19:22.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.320" endtime="20201029 18:19:22.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.318" endtime="20201029 18:19:22.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.356" endtime="20201029 18:19:22.641"></status>
</kw>
<msg timestamp="20201029 18:19:22.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021978514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022066278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.354" endtime="20201029 18:19:22.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021978514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022066278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.645" endtime="20201029 18:19:22.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.654" endtime="20201029 18:19:22.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.352" endtime="20201029 18:19:22.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.350" endtime="20201029 18:19:22.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:22.660" level="INFO">${RESULT} = [{'diff': 8.776400000000059e-05}, {'diff': 8.837500000000165e-05}, {'diff': 8.845899999999907e-05}, {'diff': 8.837499999999818e-05}, {'diff': 8.815299999999707e-05}, {'diff': 8.836099999999861e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:22.657" endtime="20201029 18:19:22.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:22.665" level="INFO">${ACCURACY} = {'diff': [8.776400000000059e-05, 8.837500000000165e-05, 8.845899999999907e-05, 8.837499999999818e-05, 8.815299999999707e-05, 8.836099999999861e-05, 8.851400000000134e-05, 8.84860000000022e-05, 8.76390...</msg>
<status status="PASS" starttime="20201029 18:19:22.661" endtime="20201029 18:19:22.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.670" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 18:19:22.669" endtime="20201029 18:19:22.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.672" level="INFO">VALUE: [8.776400000000059e-05, 8.837500000000165e-05, 8.845899999999907e-05, 8.837499999999818e-05, 8.815299999999707e-05, 8.836099999999861e-05, 8.851400000000134e-05, 8.84860000000022e-05, 8.763900000000047e-05, 8.84449999999995e-05, 8.822300000000186e-05, 8.793099999999943e-05, 8.84869999999982e-05, 8.784699999999854e-05, 8.825000000000152e-05, 8.822200000000238e-05, 8.837499999999818e-05, 8.827699999999772e-05, 8.780499999999983e-05, 8.787500000000115e-05, 8.808399999999869e-05, 8.797200000000213e-05, 8.788899999999725e-05, 8.837499999999818e-05, 8.808299999999922e-05, 8.837500000000165e-05, 8.765300000000004e-05, 8.783400000000191e-05, 8.854200000000048e-05, 8.836200000000155e-05, 8.790300000000029e-05, 8.780499999999983e-05, 8.813900000000097e-05, 8.847200000000263e-05, 8.834699999999904e-05, 8.823599999999848e-05, 8.811099999999836e-05, 8.822199999999891e-05, 8.83189999999999e-05, 8.830500000000033e-05, 8.780499999999983e-05, 8.790300000000029e-05, 8.833299999999947e-05, 8.841700000000036e-05, 8.797200000000213e-05, 8.83059999999998e-05, 8.856999999999962e-05, 8.787500000000115e-05, 8.793099999999943e-05, 8.783400000000191e-05]</msg>
<status status="PASS" starttime="20201029 18:19:22.671" endtime="20201029 18:19:22.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.666" endtime="20201029 18:19:22.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:22.677" endtime="20201029 18:19:22.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.676" endtime="20201029 18:19:22.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.675" endtime="20201029 18:19:22.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.317" endtime="20201029 18:19:22.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.316" endtime="20201029 18:19:22.698"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.707" endtime="20201029 18:19:22.725"></status>
</kw>
<msg timestamp="20201029 18:19:22.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.705" endtime="20201029 18:19:22.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.726" endtime="20201029 18:19:22.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.729" endtime="20201029 18:19:22.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.703" endtime="20201029 18:19:22.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.700" endtime="20201029 18:19:22.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.741" endtime="20201029 18:19:23.028"></status>
</kw>
<msg timestamp="20201029 18:19:23.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021995528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022084778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.739" endtime="20201029 18:19:23.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021995528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022084778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.032" endtime="20201029 18:19:23.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.040" endtime="20201029 18:19:23.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.736" endtime="20201029 18:19:23.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.733" endtime="20201029 18:19:23.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:23.047" level="INFO">${RESULT} = [{'diff': 8.924999999999905e-05}, {'diff': 8.907000000000012e-05}, {'diff': 8.920899999999982e-05}, {'diff': 8.897199999999966e-05}, {'diff': 8.877799999999769e-05}, {'diff': 8.883299999999997e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:23.044" endtime="20201029 18:19:23.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:23.051" level="INFO">${ACCURACY} = {'diff': [8.924999999999905e-05, 8.907000000000012e-05, 8.920899999999982e-05, 8.897199999999966e-05, 8.877799999999769e-05, 8.883299999999997e-05, 8.931899999999743e-05, 8.920800000000034e-05, 8.9360...</msg>
<status status="PASS" starttime="20201029 18:19:23.048" endtime="20201029 18:19:23.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.055" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 18:19:23.054" endtime="20201029 18:19:23.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.058" level="INFO">VALUE: [8.924999999999905e-05, 8.907000000000012e-05, 8.920899999999982e-05, 8.897199999999966e-05, 8.877799999999769e-05, 8.883299999999997e-05, 8.931899999999743e-05, 8.920800000000034e-05, 8.936099999999961e-05, 8.945800000000059e-05, 8.89860000000027e-05, 8.894400000000052e-05, 8.922199999999991e-05, 8.883299999999997e-05, 8.901400000000184e-05, 8.951399999999887e-05, 8.943100000000093e-05, 8.8945e-05, 8.920899999999982e-05, 8.926399999999862e-05, 8.926299999999915e-05, 8.941599999999841e-05, 8.937499999999918e-05, 8.863800000000199e-05, 8.937499999999918e-05, 8.944400000000102e-05, 8.937499999999918e-05, 8.873600000000245e-05, 8.883299999999997e-05, 8.891600000000138e-05, 8.927799999999819e-05, 8.855500000000058e-05, 8.88060000000003e-05, 8.88190000000004e-05, 8.895899999999957e-05, 8.918099999999721e-05, 8.94450000000005e-05, 8.902799999999794e-05, 8.915299999999807e-05, 8.859800000000223e-05, 8.906899999999718e-05, 8.90129999999989e-05, 8.879099999999779e-05, 8.938799999999927e-05, 8.884699999999954e-05, 8.926399999999862e-05, 8.893000000000095e-05, 8.938899999999875e-05, 8.861099999999886e-05, 8.938899999999875e-05]</msg>
<status status="PASS" starttime="20201029 18:19:23.057" endtime="20201029 18:19:23.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.052" endtime="20201029 18:19:23.060"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:23.063" endtime="20201029 18:19:23.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.062" endtime="20201029 18:19:23.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.060" endtime="20201029 18:19:23.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.699" endtime="20201029 18:19:23.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.698" endtime="20201029 18:19:23.084"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.093" endtime="20201029 18:19:23.112"></status>
</kw>
<msg timestamp="20201029 18:19:23.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.091" endtime="20201029 18:19:23.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.113" endtime="20201029 18:19:23.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.116" endtime="20201029 18:19:23.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.088" endtime="20201029 18:19:23.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.086" endtime="20201029 18:19:23.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.125" endtime="20201029 18:19:23.410"></status>
</kw>
<msg timestamp="20201029 18:19:23.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022841514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022931375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.123" endtime="20201029 18:19:23.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022841514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022931375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.415" endtime="20201029 18:19:23.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.423" endtime="20201029 18:19:23.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.121" endtime="20201029 18:19:23.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.119" endtime="20201029 18:19:23.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:23.430" level="INFO">${RESULT} = [{'diff': 8.986100000000011e-05}, {'diff': 9.058300000000172e-05}, {'diff': 9.055499999999911e-05}, {'diff': 8.987499999999968e-05}, {'diff': 9.043100000000193e-05}, {'diff': 9.01389999999995e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:23.426" endtime="20201029 18:19:23.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:23.434" level="INFO">${ACCURACY} = {'diff': [8.986100000000011e-05, 9.058300000000172e-05, 9.055499999999911e-05, 8.987499999999968e-05, 9.043100000000193e-05, 9.01389999999995e-05, 9.023600000000048e-05, 8.990199999999934e-05, 8.99999...</msg>
<status status="PASS" starttime="20201029 18:19:23.431" endtime="20201029 18:19:23.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.438" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 18:19:23.437" endtime="20201029 18:19:23.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.441" level="INFO">VALUE: [8.986100000000011e-05, 9.058300000000172e-05, 9.055499999999911e-05, 8.987499999999968e-05, 9.043100000000193e-05, 9.01389999999995e-05, 9.023600000000048e-05, 8.990199999999934e-05, 8.99999999999998e-05, 8.9638999999999e-05, 8.959799999999976e-05, 9.055599999999858e-05, 8.963900000000247e-05, 9.004199999999851e-05, 8.990199999999934e-05, 8.995799999999762e-05, 9.042999999999898e-05, 9.047200000000116e-05, 9.036100000000061e-05, 8.99999999999998e-05, 9.027800000000266e-05, 9.040299999999932e-05, 8.961099999999986e-05, 8.991700000000186e-05, 9.040299999999932e-05, 8.983400000000044e-05, 9.025000000000005e-05, 8.994400000000152e-05, 8.977800000000216e-05, 9.033400000000094e-05, 9.008400000000069e-05, 9.001400000000284e-05, 9.005500000000208e-05, 9.045800000000159e-05, 8.981899999999793e-05, 8.961099999999986e-05, 9.019400000000177e-05, 8.965300000000204e-05, 9.055600000000205e-05, 8.980500000000183e-05, 8.981899999999793e-05, 9.058400000000119e-05, 9.015300000000254e-05, 9.036100000000061e-05, 8.96519999999991e-05, 9.042999999999898e-05, 9.037500000000018e-05, 9.034800000000051e-05, 9.020900000000082e-05, 8.991700000000186e-05]</msg>
<status status="PASS" starttime="20201029 18:19:23.439" endtime="20201029 18:19:23.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.435" endtime="20201029 18:19:23.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:23.446" endtime="20201029 18:19:23.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.445" endtime="20201029 18:19:23.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.444" endtime="20201029 18:19:23.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.085" endtime="20201029 18:19:23.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.084" endtime="20201029 18:19:23.467"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.476" endtime="20201029 18:19:23.494"></status>
</kw>
<msg timestamp="20201029 18:19:23.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.474" endtime="20201029 18:19:23.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.495" endtime="20201029 18:19:23.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.498" endtime="20201029 18:19:23.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.472" endtime="20201029 18:19:23.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.469" endtime="20201029 18:19:23.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.507" endtime="20201029 18:19:23.793"></status>
</kw>
<msg timestamp="20201029 18:19:23.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021942278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022033222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.505" endtime="20201029 18:19:23.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021942278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022033222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.797" endtime="20201029 18:19:23.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.805" endtime="20201029 18:19:23.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.503" endtime="20201029 18:19:23.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.501" endtime="20201029 18:19:23.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:23.812" level="INFO">${RESULT} = [{'diff': 9.094400000000252e-05}, {'diff': 9.102799999999994e-05}, {'diff': 9.118100000000268e-05}, {'diff': 9.112500000000093e-05}, {'diff': 9.093100000000243e-05}, {'diff': 9.097300000000114e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:23.808" endtime="20201029 18:19:23.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:23.817" level="INFO">${ACCURACY} = {'diff': [9.094400000000252e-05, 9.102799999999994e-05, 9.118100000000268e-05, 9.112500000000093e-05, 9.093100000000243e-05, 9.097300000000114e-05, 9.084800000000101e-05, 9.154200000000001e-05, 9.1319...</msg>
<status status="PASS" starttime="20201029 18:19:23.813" endtime="20201029 18:19:23.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.821" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 18:19:23.820" endtime="20201029 18:19:23.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.824" level="INFO">VALUE: [9.094400000000252e-05, 9.102799999999994e-05, 9.118100000000268e-05, 9.112500000000093e-05, 9.093100000000243e-05, 9.097300000000114e-05, 9.084800000000101e-05, 9.154200000000001e-05, 9.13199999999989e-05, 9.14589999999986e-05, 9.087499999999721e-05, 9.058400000000119e-05, 9.115199999999712e-05, 9.063800000000052e-05, 9.086099999999764e-05, 9.108299999999875e-05, 9.11939999999993e-05, 9.068099999999871e-05, 9.083399999999797e-05, 9.144399999999955e-05, 9.090299999999982e-05, 9.083400000000144e-05, 9.109699999999832e-05, 9.087500000000068e-05, 9.15139999999974e-05, 9.08199999999984e-05, 9.090299999999982e-05, 9.15000000000013e-05, 9.079200000000273e-05, 9.152800000000044e-05, 9.11390000000005e-05, 9.054099999999954e-05, 9.151400000000087e-05, 9.08190000000024e-05, 9.062500000000043e-05, 9.09589999999981e-05, 9.059699999999782e-05, 9.115300000000007e-05, 9.088900000000025e-05, 9.130599999999933e-05, 9.126400000000062e-05, 9.130599999999933e-05, 9.105599999999908e-05, 9.130599999999933e-05, 9.11390000000005e-05, 9.127800000000019e-05, 9.127800000000019e-05, 9.082000000000187e-05, 9.129199999999976e-05, 9.149999999999783e-05]</msg>
<status status="PASS" starttime="20201029 18:19:23.822" endtime="20201029 18:19:23.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.818" endtime="20201029 18:19:23.825"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:23.829" endtime="20201029 18:19:23.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.827" endtime="20201029 18:19:23.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.826" endtime="20201029 18:19:23.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.468" endtime="20201029 18:19:23.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.467" endtime="20201029 18:19:23.849"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.858" endtime="20201029 18:19:23.877"></status>
</kw>
<msg timestamp="20201029 18:19:23.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.856" endtime="20201029 18:19:23.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.879" endtime="20201029 18:19:23.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.881" endtime="20201029 18:19:23.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.854" endtime="20201029 18:19:23.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.852" endtime="20201029 18:19:23.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.890" endtime="20201029 18:19:24.176"></status>
</kw>
<msg timestamp="20201029 18:19:24.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022074375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.889" endtime="20201029 18:19:24.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022074375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:24.181" endtime="20201029 18:19:24.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.189" endtime="20201029 18:19:24.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.886" endtime="20201029 18:19:24.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.884" endtime="20201029 18:19:24.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:24.196" level="INFO">${RESULT} = [{'diff': 9.249999999999883e-05}, {'diff': 9.183300000000297e-05}, {'diff': 9.245800000000012e-05}, {'diff': 9.159699999999882e-05}, {'diff': 9.1639000000001e-05}, {'diff': 9.211100000000236e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:24.192" endtime="20201029 18:19:24.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:24.200" level="INFO">${ACCURACY} = {'diff': [9.249999999999883e-05, 9.183300000000297e-05, 9.245800000000012e-05, 9.159699999999882e-05, 9.1639000000001e-05, 9.211100000000236e-05, 9.194499999999953e-05, 9.209799999999879e-05, 9.190300...</msg>
<status status="PASS" starttime="20201029 18:19:24.197" endtime="20201029 18:19:24.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.204" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 18:19:24.203" endtime="20201029 18:19:24.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.207" level="INFO">VALUE: [9.249999999999883e-05, 9.183300000000297e-05, 9.245800000000012e-05, 9.159699999999882e-05, 9.1639000000001e-05, 9.211100000000236e-05, 9.194499999999953e-05, 9.209799999999879e-05, 9.190300000000082e-05, 9.211099999999889e-05, 9.234699999999957e-05, 9.212500000000193e-05, 9.25139999999984e-05, 9.213899999999803e-05, 9.216600000000116e-05, 9.180499999999689e-05, 9.236100000000261e-05, 9.18329999999995e-05, 9.20139999999979e-05, 9.206900000000018e-05, 9.204200000000051e-05, 9.233400000000294e-05, 9.206999999999965e-05, 9.224999999999858e-05, 9.211100000000236e-05, 9.191700000000039e-05, 9.236199999999861e-05, 9.159800000000176e-05, 9.187499999999821e-05, 9.161099999999839e-05, 9.222199999999944e-05, 9.229100000000129e-05, 9.236099999999914e-05, 9.249999999999883e-05, 9.204200000000051e-05, 9.245800000000012e-05, 9.215300000000107e-05, 9.212500000000193e-05, 9.256899999999721e-05, 9.241699999999742e-05, 9.177800000000069e-05, 9.162500000000143e-05, 9.198600000000223e-05, 9.191700000000039e-05, 9.213899999999803e-05, 9.20139999999979e-05, 9.218000000000073e-05, 9.208299999999975e-05, 9.224999999999858e-05, 9.226399999999815e-05]</msg>
<status status="PASS" starttime="20201029 18:19:24.205" endtime="20201029 18:19:24.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.201" endtime="20201029 18:19:24.213"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:24.216" endtime="20201029 18:19:24.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.215" endtime="20201029 18:19:24.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.214" endtime="20201029 18:19:24.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.850" endtime="20201029 18:19:24.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.850" endtime="20201029 18:19:24.237"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.247" endtime="20201029 18:19:24.268"></status>
</kw>
<msg timestamp="20201029 18:19:24.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:24.245" endtime="20201029 18:19:24.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:24.270" endtime="20201029 18:19:24.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.272" endtime="20201029 18:19:24.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.242" endtime="20201029 18:19:24.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.240" endtime="20201029 18:19:24.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.281" endtime="20201029 18:19:24.564"></status>
</kw>
<msg timestamp="20201029 18:19:24.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026377625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026471139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:24.280" endtime="20201029 18:19:24.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026377625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026471139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:24.568" endtime="20201029 18:19:24.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.577" endtime="20201029 18:19:24.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.277" endtime="20201029 18:19:24.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.275" endtime="20201029 18:19:24.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:24.583" level="INFO">${RESULT} = [{'diff': 9.351400000000287e-05}, {'diff': 9.288899999999878e-05}, {'diff': 9.311099999999989e-05}, {'diff': 9.330600000000133e-05}, {'diff': 9.319500000000078e-05}, {'diff': 9.309799999999979e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:24.580" endtime="20201029 18:19:24.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:24.588" level="INFO">${ACCURACY} = {'diff': [9.351400000000287e-05, 9.288899999999878e-05, 9.311099999999989e-05, 9.330600000000133e-05, 9.319500000000078e-05, 9.309799999999979e-05, 9.34590000000006e-05, 9.322200000000044e-05, 9.26379...</msg>
<status status="PASS" starttime="20201029 18:19:24.584" endtime="20201029 18:19:24.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.592" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 18:19:24.591" endtime="20201029 18:19:24.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.594" level="INFO">VALUE: [9.351400000000287e-05, 9.288899999999878e-05, 9.311099999999989e-05, 9.330600000000133e-05, 9.319500000000078e-05, 9.309799999999979e-05, 9.34590000000006e-05, 9.322200000000044e-05, 9.263799999999905e-05, 9.342999999999851e-05, 9.329100000000229e-05, 9.290299999999835e-05, 9.294399999999758e-05, 9.349999999999983e-05, 9.313899999999903e-05, 9.334700000000057e-05, 9.311099999999989e-05, 9.337499999999971e-05, 9.286099999999964e-05, 9.262500000000243e-05, 9.262499999999896e-05, 9.331900000000143e-05, 9.307000000000065e-05, 9.322200000000044e-05, 9.344500000000103e-05, 9.323600000000001e-05, 9.317999999999826e-05, 9.35269999999995e-05, 9.305499999999814e-05, 9.334700000000057e-05, 9.316699999999817e-05, 9.319500000000078e-05, 9.331900000000143e-05, 9.281900000000093e-05, 9.349999999999983e-05, 9.357000000000115e-05, 9.280599999999736e-05, 9.318100000000121e-05, 9.298599999999976e-05, 9.279199999999779e-05, 9.28200000000004e-05, 9.352799999999897e-05, 9.337500000000318e-05, 9.349999999999983e-05, 9.356900000000168e-05, 9.341600000000241e-05, 9.308300000000075e-05, 9.286100000000311e-05, 9.31940000000013e-05, 9.308300000000075e-05]</msg>
<status status="PASS" starttime="20201029 18:19:24.593" endtime="20201029 18:19:24.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.588" endtime="20201029 18:19:24.597"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:24.600" endtime="20201029 18:19:24.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.599" endtime="20201029 18:19:24.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.598" endtime="20201029 18:19:24.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.238" endtime="20201029 18:19:24.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.238" endtime="20201029 18:19:24.621"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.630" endtime="20201029 18:19:24.648"></status>
</kw>
<msg timestamp="20201029 18:19:24.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:24.628" endtime="20201029 18:19:24.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:24.650" endtime="20201029 18:19:24.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.652" endtime="20201029 18:19:24.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.625" endtime="20201029 18:19:24.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.623" endtime="20201029 18:19:24.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.661" endtime="20201029 18:19:24.946"></status>
</kw>
<msg timestamp="20201029 18:19:24.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021839542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021934028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:24.660" endtime="20201029 18:19:24.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021839542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021934028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:24.950" endtime="20201029 18:19:24.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.959" endtime="20201029 18:19:24.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.657" endtime="20201029 18:19:24.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.655" endtime="20201029 18:19:24.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:24.965" level="INFO">${RESULT} = [{'diff': 9.448600000000126e-05}, {'diff': 9.43880000000008e-05}, {'diff': 9.416699999999917e-05}, {'diff': 9.390199999999987e-05}, {'diff': 9.443099999999899e-05}, {'diff': 9.412500000000046e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:24.962" endtime="20201029 18:19:24.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:24.970" level="INFO">${ACCURACY} = {'diff': [9.448600000000126e-05, 9.43880000000008e-05, 9.416699999999917e-05, 9.390199999999987e-05, 9.443099999999899e-05, 9.412500000000046e-05, 9.411100000000089e-05, 9.355500000000211e-05, 9.38889...</msg>
<status status="PASS" starttime="20201029 18:19:24.966" endtime="20201029 18:19:24.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.975" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 18:19:24.973" endtime="20201029 18:19:24.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.977" level="INFO">VALUE: [9.448600000000126e-05, 9.43880000000008e-05, 9.416699999999917e-05, 9.390199999999987e-05, 9.443099999999899e-05, 9.412500000000046e-05, 9.411100000000089e-05, 9.355500000000211e-05, 9.388899999999978e-05, 9.41529999999996e-05, 9.41940000000023e-05, 9.361100000000039e-05, 9.429199999999929e-05, 9.431899999999896e-05, 9.413900000000003e-05, 9.384700000000107e-05, 9.393100000000196e-05, 9.36529999999991e-05, 9.430599999999886e-05, 9.440299999999985e-05, 9.394500000000153e-05, 9.388900000000325e-05, 9.429099999999982e-05, 9.41659999999997e-05, 9.361100000000039e-05, 9.418100000000221e-05, 9.363899999999953e-05, 9.438900000000028e-05, 9.409700000000132e-05, 9.388899999999978e-05, 9.380599999999836e-05, 9.43469999999981e-05, 9.452799999999997e-05, 9.430599999999886e-05, 9.406999999999818e-05, 9.401300000000043e-05, 9.380600000000183e-05, 9.416700000000264e-05, 9.398600000000076e-05, 9.383400000000097e-05, 9.404099999999957e-05, 9.391599999999944e-05, 9.405499999999914e-05, 9.392999999999901e-05, 9.438900000000028e-05, 9.361100000000039e-05, 9.395800000000162e-05, 9.38330000000015e-05, 9.405600000000208e-05, 9.405599999999861e-05]</msg>
<status status="PASS" starttime="20201029 18:19:24.976" endtime="20201029 18:19:24.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.971" endtime="20201029 18:19:24.978"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:24.982" endtime="20201029 18:19:25.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.981" endtime="20201029 18:19:25.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.979" endtime="20201029 18:19:25.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.622" endtime="20201029 18:19:25.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.621" endtime="20201029 18:19:25.003"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.011" endtime="20201029 18:19:25.030"></status>
</kw>
<msg timestamp="20201029 18:19:25.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.010" endtime="20201029 18:19:25.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.031" endtime="20201029 18:19:25.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.034" endtime="20201029 18:19:25.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.007" endtime="20201029 18:19:25.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.005" endtime="20201029 18:19:25.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.043" endtime="20201029 18:19:25.329"></status>
</kw>
<msg timestamp="20201029 18:19:25.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021903097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021998764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:25.041" endtime="20201029 18:19:25.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021903097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021998764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:25.333" endtime="20201029 18:19:25.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.342" endtime="20201029 18:19:25.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.039" endtime="20201029 18:19:25.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.037" endtime="20201029 18:19:25.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:25.348" level="INFO">${RESULT} = [{'diff': 9.566700000000067e-05}, {'diff': 9.544399999999661e-05}, {'diff': 9.512499999999799e-05}, {'diff': 9.512499999999799e-05}, {'diff': 9.50140000000009e-05}, {'diff': 9.498600000000176e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:25.345" endtime="20201029 18:19:25.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:25.352" level="INFO">${ACCURACY} = {'diff': [9.566700000000067e-05, 9.544399999999661e-05, 9.512499999999799e-05, 9.512499999999799e-05, 9.50140000000009e-05, 9.498600000000176e-05, 9.497300000000167e-05, 9.523599999999854e-05, 9.49589...</msg>
<status status="PASS" starttime="20201029 18:19:25.349" endtime="20201029 18:19:25.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.357" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 18:19:25.356" endtime="20201029 18:19:25.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.359" level="INFO">VALUE: [9.566700000000067e-05, 9.544399999999661e-05, 9.512499999999799e-05, 9.512499999999799e-05, 9.50140000000009e-05, 9.498600000000176e-05, 9.497300000000167e-05, 9.523599999999854e-05, 9.495899999999863e-05, 9.531999999999943e-05, 9.529100000000082e-05, 9.500000000000133e-05, 9.49859999999983e-05, 9.480499999999989e-05, 9.527800000000072e-05, 9.487500000000121e-05, 9.550000000000183e-05, 9.462499999999749e-05, 9.54859999999988e-05, 9.541700000000042e-05, 9.530599999999986e-05, 9.541700000000042e-05, 9.490300000000035e-05, 9.54859999999988e-05, 9.520900000000235e-05, 9.463900000000053e-05, 9.509700000000232e-05, 9.538799999999834e-05, 9.490200000000087e-05, 9.493000000000001e-05, 9.524999999999811e-05, 9.459700000000182e-05, 9.491600000000044e-05, 9.46530000000001e-05, 9.550000000000183e-05, 9.555600000000011e-05, 9.477800000000022e-05, 9.495799999999915e-05, 9.458299999999878e-05, 9.520899999999888e-05, 9.507000000000265e-05, 9.53200000000029e-05, 9.522299999999845e-05, 9.458399999999825e-05, 9.472199999999847e-05, 9.518000000000026e-05, 9.554100000000107e-05, 9.512500000000146e-05, 9.543000000000051e-05, 9.481899999999946e-05]</msg>
<status status="PASS" starttime="20201029 18:19:25.358" endtime="20201029 18:19:25.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.353" endtime="20201029 18:19:25.361"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:25.364" endtime="20201029 18:19:25.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.363" endtime="20201029 18:19:25.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.362" endtime="20201029 18:19:25.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.004" endtime="20201029 18:19:25.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.003" endtime="20201029 18:19:25.385"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.394" endtime="20201029 18:19:25.413"></status>
</kw>
<msg timestamp="20201029 18:19:25.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.392" endtime="20201029 18:19:25.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.415" endtime="20201029 18:19:25.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.417" endtime="20201029 18:19:25.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.389" endtime="20201029 18:19:25.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.387" endtime="20201029 18:19:25.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.426" endtime="20201029 18:19:25.711"></status>
</kw>
<msg timestamp="20201029 18:19:25.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022757083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022853, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:25.425" endtime="20201029 18:19:25.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022757083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022853, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:25.716" endtime="20201029 18:19:25.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.724" endtime="20201029 18:19:25.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.422" endtime="20201029 18:19:25.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.421" endtime="20201029 18:19:25.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:25.731" level="INFO">${RESULT} = [{'diff': 9.591699999999745e-05}, {'diff': 9.562499999999849e-05}, {'diff': 9.563899999999806e-05}, {'diff': 9.608399999999975e-05}, {'diff': 9.65279999999985e-05}, {'diff': 9.649999999999936e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:25.728" endtime="20201029 18:19:25.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:25.735" level="INFO">${ACCURACY} = {'diff': [9.591699999999745e-05, 9.562499999999849e-05, 9.563899999999806e-05, 9.608399999999975e-05, 9.65279999999985e-05, 9.649999999999936e-05, 9.602699999999853e-05, 9.624999999999911e-05, 9.62359...</msg>
<status status="PASS" starttime="20201029 18:19:25.732" endtime="20201029 18:19:25.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.739" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 18:19:25.738" endtime="20201029 18:19:25.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.742" level="INFO">VALUE: [9.591699999999745e-05, 9.562499999999849e-05, 9.563899999999806e-05, 9.608399999999975e-05, 9.65279999999985e-05, 9.649999999999936e-05, 9.602699999999853e-05, 9.624999999999911e-05, 9.623599999999954e-05, 9.63470000000001e-05, 9.631899999999749e-05, 9.612500000000246e-05, 9.559700000000282e-05, 9.626399999999868e-05, 9.58469999999996e-05, 9.645900000000013e-05, 9.597199999999972e-05, 9.649999999999936e-05, 9.556999999999968e-05, 9.563900000000153e-05, 9.626399999999868e-05, 9.586099999999917e-05, 9.6027999999998e-05, 9.631900000000096e-05, 9.648699999999927e-05, 9.62080000000004e-05, 9.648600000000326e-05, 9.624999999999911e-05, 9.583300000000003e-05, 9.593000000000101e-05, 9.587499999999874e-05, 9.605500000000114e-05, 9.575000000000208e-05, 9.647200000000022e-05, 9.588900000000178e-05, 9.563899999999806e-05, 9.638899999999881e-05, 9.587500000000221e-05, 9.6027999999998e-05, 9.650000000000283e-05, 9.640299999999838e-05, 9.604200000000104e-05, 9.595899999999963e-05, 9.633300000000053e-05, 9.630500000000139e-05, 9.590200000000187e-05, 9.652800000000197e-05, 9.651399999999893e-05, 9.619399999999736e-05, 9.608399999999975e-05]</msg>
<status status="PASS" starttime="20201029 18:19:25.740" endtime="20201029 18:19:25.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.736" endtime="20201029 18:19:25.744"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:25.748" endtime="20201029 18:19:25.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.746" endtime="20201029 18:19:25.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.745" endtime="20201029 18:19:25.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.386" endtime="20201029 18:19:25.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.385" endtime="20201029 18:19:25.768"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.777" endtime="20201029 18:19:25.795"></status>
</kw>
<msg timestamp="20201029 18:19:25.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.775" endtime="20201029 18:19:25.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.797" endtime="20201029 18:19:25.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.799" endtime="20201029 18:19:25.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.773" endtime="20201029 18:19:25.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.771" endtime="20201029 18:19:25.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.808" endtime="20201029 18:19:26.093"></status>
</kw>
<msg timestamp="20201029 18:19:26.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021796806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021893861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:25.806" endtime="20201029 18:19:26.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021796806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021893861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:26.097" endtime="20201029 18:19:26.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.105" endtime="20201029 18:19:26.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.804" endtime="20201029 18:19:26.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.802" endtime="20201029 18:19:26.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:26.112" level="INFO">${RESULT} = [{'diff': 9.705500000000214e-05}, {'diff': 9.731999999999796e-05}, {'diff': 9.738899999999981e-05}, {'diff': 9.693100000000149e-05}, {'diff': 9.690300000000235e-05}, {'diff': 9.725000000000011e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:26.109" endtime="20201029 18:19:26.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:26.117" level="INFO">${ACCURACY} = {'diff': [9.705500000000214e-05, 9.731999999999796e-05, 9.738899999999981e-05, 9.693100000000149e-05, 9.690300000000235e-05, 9.725000000000011e-05, 9.725000000000011e-05, 9.744500000000156e-05, 9.7457...</msg>
<status status="PASS" starttime="20201029 18:19:26.113" endtime="20201029 18:19:26.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.121" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 18:19:26.120" endtime="20201029 18:19:26.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.124" level="INFO">VALUE: [9.705500000000214e-05, 9.731999999999796e-05, 9.738899999999981e-05, 9.693100000000149e-05, 9.690300000000235e-05, 9.725000000000011e-05, 9.725000000000011e-05, 9.744500000000156e-05, 9.745799999999818e-05, 9.705599999999814e-05, 9.715299999999913e-05, 9.709699999999738e-05, 9.700000000000333e-05, 9.708300000000128e-05, 9.725000000000011e-05, 9.750000000000036e-05, 9.699999999999986e-05, 9.662499999999949e-05, 9.708299999999781e-05, 9.694500000000106e-05, 9.74860000000008e-05, 9.708300000000128e-05, 9.683399999999703e-05, 9.722300000000045e-05, 9.744500000000156e-05, 9.738899999999981e-05, 9.737500000000024e-05, 9.718000000000226e-05, 9.699999999999986e-05, 9.730500000000239e-05, 9.705499999999867e-05, 9.661099999999992e-05, 9.663899999999906e-05, 9.708299999999781e-05, 9.661099999999992e-05, 9.719399999999837e-05, 9.66530000000021e-05, 9.68470000000006e-05, 9.690299999999888e-05, 9.679199999999832e-05, 9.693100000000149e-05, 9.68340000000005e-05, 9.726399999999968e-05, 9.719499999999784e-05, 9.687499999999974e-05, 9.744399999999862e-05, 9.691599999999898e-05, 9.752700000000003e-05, 9.688899999999931e-05, 9.751399999999993e-05]</msg>
<status status="PASS" starttime="20201029 18:19:26.122" endtime="20201029 18:19:26.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.118" endtime="20201029 18:19:26.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:26.129" endtime="20201029 18:19:26.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.127" endtime="20201029 18:19:26.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.126" endtime="20201029 18:19:26.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.769" endtime="20201029 18:19:26.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.769" endtime="20201029 18:19:26.149"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.158" endtime="20201029 18:19:26.177"></status>
</kw>
<msg timestamp="20201029 18:19:26.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.156" endtime="20201029 18:19:26.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.178" endtime="20201029 18:19:26.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.181" endtime="20201029 18:19:26.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.154" endtime="20201029 18:19:26.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.152" endtime="20201029 18:19:26.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.190" endtime="20201029 18:19:26.477"></status>
</kw>
<msg timestamp="20201029 18:19:26.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02225025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022348639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:26.188" endtime="20201029 18:19:26.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02225025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022348639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:26.482" endtime="20201029 18:19:26.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.490" endtime="20201029 18:19:26.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.186" endtime="20201029 18:19:26.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.184" endtime="20201029 18:19:26.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:26.497" level="INFO">${RESULT} = [{'diff': 9.838900000000081e-05}, {'diff': 9.845899999999866e-05}, {'diff': 9.755599999999864e-05}, {'diff': 9.837499999999777e-05}, {'diff': 9.833399999999853e-05}, {'diff': 9.80410000000001e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:26.493" endtime="20201029 18:19:26.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:26.501" level="INFO">${ACCURACY} = {'diff': [9.838900000000081e-05, 9.845899999999866e-05, 9.755599999999864e-05, 9.837499999999777e-05, 9.833399999999853e-05, 9.80410000000001e-05, 9.84020000000009e-05, 9.847200000000222e-05, 9.765300...</msg>
<status status="PASS" starttime="20201029 18:19:26.498" endtime="20201029 18:19:26.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.505" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 18:19:26.504" endtime="20201029 18:19:26.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.508" level="INFO">VALUE: [9.838900000000081e-05, 9.845899999999866e-05, 9.755599999999864e-05, 9.837499999999777e-05, 9.833399999999853e-05, 9.80410000000001e-05, 9.84020000000009e-05, 9.847200000000222e-05, 9.76530000000031e-05, 9.801400000000043e-05, 9.85280000000005e-05, 9.823600000000154e-05, 9.788900000000031e-05, 9.762500000000049e-05, 9.777799999999975e-05, 9.8028e-05, 9.777799999999975e-05, 9.758399999999778e-05, 9.823599999999807e-05, 9.781999999999846e-05, 9.805599999999914e-05, 9.805599999999914e-05, 9.844499999999909e-05, 9.811100000000142e-05, 9.819399999999937e-05, 9.80410000000001e-05, 9.822200000000197e-05, 9.822200000000197e-05, 9.826400000000068e-05, 9.823600000000154e-05, 9.819399999999937e-05, 9.818100000000274e-05, 9.805599999999914e-05, 9.824999999999764e-05, 9.781999999999846e-05, 9.779199999999932e-05, 9.784699999999813e-05, 9.777799999999975e-05, 9.804199999999957e-05, 9.78340000000015e-05, 9.815200000000066e-05, 9.811100000000142e-05, 9.758299999999831e-05, 9.787500000000074e-05, 9.831899999999949e-05, 9.81799999999998e-05, 9.772200000000147e-05, 9.790299999999988e-05, 9.844499999999909e-05, 9.837500000000124e-05]</msg>
<status status="PASS" starttime="20201029 18:19:26.506" endtime="20201029 18:19:26.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.502" endtime="20201029 18:19:26.509"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:26.513" endtime="20201029 18:19:26.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.511" endtime="20201029 18:19:26.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.510" endtime="20201029 18:19:26.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.150" endtime="20201029 18:19:26.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.150" endtime="20201029 18:19:26.533"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.542" endtime="20201029 18:19:26.562"></status>
</kw>
<msg timestamp="20201029 18:19:26.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.540" endtime="20201029 18:19:26.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.564" endtime="20201029 18:19:26.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.566" endtime="20201029 18:19:26.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.538" endtime="20201029 18:19:26.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.536" endtime="20201029 18:19:26.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.575" endtime="20201029 18:19:26.861"></status>
</kw>
<msg timestamp="20201029 18:19:26.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022834708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022933847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:26.574" endtime="20201029 18:19:26.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022834708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022933847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:26.865" endtime="20201029 18:19:26.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.873" endtime="20201029 18:19:26.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.571" endtime="20201029 18:19:26.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.569" endtime="20201029 18:19:26.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:26.880" level="INFO">${RESULT} = [{'diff': 9.913900000000156e-05}, {'diff': 9.898599999999882e-05}, {'diff': 9.945800000000019e-05}, {'diff': 9.898599999999882e-05}, {'diff': 9.919499999999984e-05}, {'diff': 9.887500000000174e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:26.876" endtime="20201029 18:19:26.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:26.884" level="INFO">${ACCURACY} = {'diff': [9.913900000000156e-05, 9.898599999999882e-05, 9.945800000000019e-05, 9.898599999999882e-05, 9.919499999999984e-05, 9.887500000000174e-05, 9.909699999999938e-05, 9.940300000000138e-05, 9.9319...</msg>
<status status="PASS" starttime="20201029 18:19:26.881" endtime="20201029 18:19:26.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.888" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 18:19:26.887" endtime="20201029 18:19:26.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.891" level="INFO">VALUE: [9.913900000000156e-05, 9.898599999999882e-05, 9.945800000000019e-05, 9.898599999999882e-05, 9.919499999999984e-05, 9.887500000000174e-05, 9.909699999999938e-05, 9.940300000000138e-05, 9.931999999999996e-05, 9.92219999999995e-05, 9.944500000000009e-05, 9.924999999999864e-05, 9.893000000000055e-05, 9.933300000000006e-05, 9.909699999999938e-05, 9.938900000000181e-05, 9.929099999999788e-05, 9.897199999999926e-05, 9.945800000000019e-05, 9.951399999999846e-05, 9.952799999999803e-05, 9.881899999999999e-05, 9.88059999999999e-05, 9.88609999999987e-05, 9.869399999999987e-05, 9.948599999999932e-05, 9.937500000000224e-05, 9.91670000000007e-05, 9.936199999999867e-05, 9.926400000000168e-05, 9.89999999999984e-05, 9.887500000000174e-05, 9.938899999999834e-05, 9.901399999999796e-05, 9.930500000000092e-05, 9.927799999999778e-05, 9.890299999999741e-05, 9.927800000000125e-05, 9.856899999999974e-05, 9.906999999999971e-05, 9.857000000000268e-05, 9.931999999999996e-05, 9.905600000000014e-05, 9.955600000000064e-05, 9.865300000000063e-05, 9.893000000000055e-05, 9.909699999999938e-05, 9.954099999999813e-05, 9.884699999999913e-05, 9.872200000000247e-05]</msg>
<status status="PASS" starttime="20201029 18:19:26.889" endtime="20201029 18:19:26.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.885" endtime="20201029 18:19:26.893"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:26.897" endtime="20201029 18:19:26.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.895" endtime="20201029 18:19:26.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.894" endtime="20201029 18:19:26.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.534" endtime="20201029 18:19:26.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.534" endtime="20201029 18:19:26.917"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.926" endtime="20201029 18:19:26.946"></status>
</kw>
<msg timestamp="20201029 18:19:26.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.924" endtime="20201029 18:19:26.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.947" endtime="20201029 18:19:26.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.950" endtime="20201029 18:19:26.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.922" endtime="20201029 18:19:26.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.920" endtime="20201029 18:19:26.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.959" endtime="20201029 18:19:27.243"></status>
</kw>
<msg timestamp="20201029 18:19:27.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021857417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021957833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:26.957" endtime="20201029 18:19:27.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021857417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021957833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:27.247" endtime="20201029 18:19:27.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.255" endtime="20201029 18:19:27.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.955" endtime="20201029 18:19:27.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.953" endtime="20201029 18:19:27.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:27.262" level="INFO">${RESULT} = [{'diff': 0.000100415999999999}, {'diff': 0.0001002220000000005}, {'diff': 0.00010006900000000124}, {'diff': 9.991699999999798e-05}, {'diff': 9.994400000000112e-05}, {'diff': 0.00010007000000000071}, ...</msg>
<status status="PASS" starttime="20201029 18:19:27.259" endtime="20201029 18:19:27.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:27.267" level="INFO">${ACCURACY} = {'diff': [0.000100415999999999, 0.0001002220000000005, 0.00010006900000000124, 9.991699999999798e-05, 9.994400000000112e-05, 0.00010007000000000071, 0.00010043100000000152, 9.993100000000102e-05, 0.00...</msg>
<status status="PASS" starttime="20201029 18:19:27.263" endtime="20201029 18:19:27.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.271" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 18:19:27.270" endtime="20201029 18:19:27.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.274" level="INFO">VALUE: [0.000100415999999999, 0.0001002220000000005, 0.00010006900000000124, 9.991699999999798e-05, 9.994400000000112e-05, 0.00010007000000000071, 0.00010043100000000152, 9.993100000000102e-05, 0.00010055599999999817, 0.0001002220000000005, 0.00010040299999999891, 0.00010044499999999762, 9.99999999999994e-05, 9.98060000000009e-05, 0.00010020799999999747, 0.00010037499999999977, 0.00010037500000000324, 9.988899999999884e-05, 9.995800000000069e-05, 9.987499999999927e-05, 0.00010037500000000324, 0.00010004200000000157, 0.00010009700000000038, 9.98609999999997e-05, 0.0001005419999999986, 9.958399999999978e-05, 0.00010009700000000038, 0.00010029199999999835, 0.0001001670000000017, 0.00010023699999999955, 9.988800000000284e-05, 0.00010034700000000063, 9.995800000000069e-05, 0.00010038900000000281, 9.976399999999871e-05, 0.00010030499999999845, 0.00010006900000000124, 0.00010038899999999934, 0.00010007000000000071, 9.995800000000069e-05, 0.0001000419999999981, 9.983400000000003e-05, 0.00010057000000000121, 0.00010022299999999998, 0.00010057000000000121, 9.991699999999798e-05, 0.00010027799999999878, 0.00010011099999999995, 9.962500000000249e-05, 0.00010024999999999964]</msg>
<status status="PASS" starttime="20201029 18:19:27.272" endtime="20201029 18:19:27.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.267" endtime="20201029 18:19:27.275"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:27.279" endtime="20201029 18:19:27.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.277" endtime="20201029 18:19:27.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.276" endtime="20201029 18:19:27.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.918" endtime="20201029 18:19:27.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.918" endtime="20201029 18:19:27.300"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.308" endtime="20201029 18:19:27.327"></status>
</kw>
<msg timestamp="20201029 18:19:27.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.307" endtime="20201029 18:19:27.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.329" endtime="20201029 18:19:27.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.331" endtime="20201029 18:19:27.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.304" endtime="20201029 18:19:27.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.302" endtime="20201029 18:19:27.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.340" endtime="20201029 18:19:27.627"></status>
</kw>
<msg timestamp="20201029 18:19:27.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022057889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022159486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:27.339" endtime="20201029 18:19:27.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022057889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022159486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:27.631" endtime="20201029 18:19:27.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.639" endtime="20201029 18:19:27.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.336" endtime="20201029 18:19:27.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.335" endtime="20201029 18:19:27.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:27.646" level="INFO">${RESULT} = [{'diff': 0.00010159699999999841}, {'diff': 0.00010081899999999852}, {'diff': 0.00010158300000000231}, {'diff': 0.00010122199999999804}, {'diff': 0.00010123600000000108}, {'diff': 0.000101375000000000...</msg>
<status status="PASS" starttime="20201029 18:19:27.643" endtime="20201029 18:19:27.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:27.650" level="INFO">${ACCURACY} = {'diff': [0.00010159699999999841, 0.00010081899999999852, 0.00010158300000000231, 0.00010122199999999804, 0.00010123600000000108, 0.00010137500000000077, 0.00010087500000000027, 0.00010140299999999991...</msg>
<status status="PASS" starttime="20201029 18:19:27.647" endtime="20201029 18:19:27.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.654" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 18:19:27.653" endtime="20201029 18:19:27.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.656" level="INFO">VALUE: [0.00010159699999999841, 0.00010081899999999852, 0.00010158300000000231, 0.00010122199999999804, 0.00010123600000000108, 0.00010137500000000077, 0.00010087500000000027, 0.00010140299999999991, 0.00010115299999999966, 0.0001013480000000011, 0.00010152800000000003, 0.0001011939999999989, 0.00010156899999999927, 0.00010113900000000009, 0.00010120799999999847, 0.00010081899999999852, 0.00010133299999999859, 0.00010090299999999941, 0.00010152800000000003, 0.00010088899999999984, 0.00010108299999999834, 0.00010095799999999822, 0.00010127799999999978, 0.00010124999999999718, 0.00010097300000000073, 0.00010095799999999822, 0.00010106900000000224, 0.00010140299999999991, 0.00010106900000000224, 0.00010059699999999741, 0.00010126400000000021, 0.00010151400000000046, 0.0001012359999999976, 0.00010130499999999945, 0.00010079199999999885, 0.00010148600000000133, 0.00010140299999999991, 0.00010082000000000146, 0.00010134700000000163, 0.00010079199999999885, 0.0001010419999999991, 0.00010154100000000013, 0.00010136099999999773, 0.0001015549999999997, 0.00010120799999999847, 0.000101416, 0.00010148600000000133, 0.00010106899999999877, 0.00010080500000000242, 0.0001006809999999983]</msg>
<status status="PASS" starttime="20201029 18:19:27.655" endtime="20201029 18:19:27.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.650" endtime="20201029 18:19:27.658"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:27.661" endtime="20201029 18:19:27.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.660" endtime="20201029 18:19:27.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.659" endtime="20201029 18:19:27.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.300" endtime="20201029 18:19:27.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.300" endtime="20201029 18:19:27.682"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.691" endtime="20201029 18:19:27.713"></status>
</kw>
<msg timestamp="20201029 18:19:27.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.689" endtime="20201029 18:19:27.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.714" endtime="20201029 18:19:27.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.717" endtime="20201029 18:19:27.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.687" endtime="20201029 18:19:27.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.685" endtime="20201029 18:19:27.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.726" endtime="20201029 18:19:28.012"></status>
</kw>
<msg timestamp="20201029 18:19:28.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025080417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025182986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:27.724" endtime="20201029 18:19:28.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025080417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025182986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.016" endtime="20201029 18:19:28.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.024" endtime="20201029 18:19:28.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.722" endtime="20201029 18:19:28.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.720" endtime="20201029 18:19:28.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:28.031" level="INFO">${RESULT} = [{'diff': 0.00010256900000000027}, {'diff': 0.00010254199999999714}, {'diff': 0.0001025420000000006}, {'diff': 0.00010215300000000066}, {'diff': 0.00010234699999999916}, {'diff': 0.0001022780000000007...</msg>
<status status="PASS" starttime="20201029 18:19:28.027" endtime="20201029 18:19:28.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:28.034" level="INFO">${ACCURACY} = {'diff': [0.00010256900000000027, 0.00010254199999999714, 0.0001025420000000006, 0.00010215300000000066, 0.00010234699999999916, 0.00010227800000000078, 0.00010252799999999757, 0.00010193099999999955,...</msg>
<status status="PASS" starttime="20201029 18:19:28.031" endtime="20201029 18:19:28.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.039" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 18:19:28.038" endtime="20201029 18:19:28.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.041" level="INFO">VALUE: [0.00010256900000000027, 0.00010254199999999714, 0.0001025420000000006, 0.00010215300000000066, 0.00010234699999999916, 0.00010227800000000078, 0.00010252799999999757, 0.00010193099999999955, 0.00010163900000000059, 0.00010222299999999851, 0.0001023749999999983, 0.00010197199999999879, 0.00010209700000000238, 0.00010197199999999879, 0.00010161099999999798, 0.00010180499999999995, 0.00010224999999999818, 0.00010234700000000263, 0.00010191699999999998, 0.00010159700000000188, 0.00010244400000000015, 0.00010227800000000078, 0.00010186099999999823, 0.00010216700000000023, 0.00010232000000000296, 0.00010191699999999998, 0.00010224999999999818, 0.00010179199999999985, 0.00010229100000000088, 0.00010213900000000109, 0.00010244400000000015, 0.00010225000000000165, 0.00010218000000000033, 0.00010188900000000084, 0.0001025550000000007, 0.00010202800000000053, 0.00010229200000000035, 0.00010249999999999843, 0.00010158299999999884, 0.00010183299999999909, 0.00010248600000000233, 0.0001018480000000016, 0.00010209800000000185, 0.0001023619999999982, 0.0001020000000000014, 0.00010213800000000162, 0.00010205599999999967, 0.00010158300000000231, 0.0001024299999999971, 0.00010229200000000035]</msg>
<status status="PASS" starttime="20201029 18:19:28.040" endtime="20201029 18:19:28.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.035" endtime="20201029 18:19:28.043"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:28.047" endtime="20201029 18:19:28.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.046" endtime="20201029 18:19:28.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.044" endtime="20201029 18:19:28.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.683" endtime="20201029 18:19:28.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.682" endtime="20201029 18:19:28.068"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.076" endtime="20201029 18:19:28.096"></status>
</kw>
<msg timestamp="20201029 18:19:28.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.075" endtime="20201029 18:19:28.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.098" endtime="20201029 18:19:28.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.100" endtime="20201029 18:19:28.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.072" endtime="20201029 18:19:28.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.070" endtime="20201029 18:19:28.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.109" endtime="20201029 18:19:28.395"></status>
</kw>
<msg timestamp="20201029 18:19:28.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021831403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021934944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.108" endtime="20201029 18:19:28.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021831403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021934944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.399" endtime="20201029 18:19:28.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.407" endtime="20201029 18:19:28.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.105" endtime="20201029 18:19:28.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.103" endtime="20201029 18:19:28.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:28.414" level="INFO">${RESULT} = [{'diff': 0.00010354100000000213}, {'diff': 0.00010299999999999893}, {'diff': 0.00010343000000000158}, {'diff': 0.00010317999999999786}, {'diff': 0.0001030420000000011}, {'diff': 0.0001026110000000024...</msg>
<status status="PASS" starttime="20201029 18:19:28.411" endtime="20201029 18:19:28.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:28.419" level="INFO">${ACCURACY} = {'diff': [0.00010354100000000213, 0.00010299999999999893, 0.00010343000000000158, 0.00010317999999999786, 0.0001030420000000011, 0.00010261100000000245, 0.00010338899999999887, 0.0001033200000000005, ...</msg>
<status status="PASS" starttime="20201029 18:19:28.415" endtime="20201029 18:19:28.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.423" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 18:19:28.422" endtime="20201029 18:19:28.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.426" level="INFO">VALUE: [0.00010354100000000213, 0.00010299999999999893, 0.00010343000000000158, 0.00010317999999999786, 0.0001030420000000011, 0.00010261100000000245, 0.00010338899999999887, 0.0001033200000000005, 0.00010338899999999887, 0.00010322200000000004, 0.00010284799999999913, 0.00010294500000000012, 0.0001029299999999976, 0.00010301400000000197, 0.00010331900000000102, 0.00010280500000000095, 0.00010355499999999823, 0.0001028610000000027, 0.00010315299999999819, 0.00010302800000000154, 0.00010312499999999905, 0.0001028610000000027, 0.00010343100000000105, 0.00010279200000000085, 0.00010307000000000024, 0.00010338899999999887, 0.0001033749999999993, 0.00010338900000000234, 0.00010261200000000192, 0.00010290199999999847, 0.0001028749999999988, 0.0001029160000000015, 0.00010354099999999866, 0.00010258299999999984, 0.00010338899999999887, 0.00010290300000000141, 0.00010284699999999966, 0.00010309699999999991, 0.00010263900000000159, 0.0001030139999999985, 0.00010357000000000074, 0.00010361099999999998, 0.00010355600000000117, 0.0001033619999999992, 0.0001033749999999993, 0.00010329099999999841, 0.00010259699999999941, 0.00010342999999999811, 0.00010279100000000138, 0.00010338900000000234]</msg>
<status status="PASS" starttime="20201029 18:19:28.424" endtime="20201029 18:19:28.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.420" endtime="20201029 18:19:28.427"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:28.431" endtime="20201029 18:19:28.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.429" endtime="20201029 18:19:28.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.428" endtime="20201029 18:19:28.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.069" endtime="20201029 18:19:28.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.068" endtime="20201029 18:19:28.451"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.460" endtime="20201029 18:19:28.479"></status>
</kw>
<msg timestamp="20201029 18:19:28.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.458" endtime="20201029 18:19:28.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.480" endtime="20201029 18:19:28.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.483" endtime="20201029 18:19:28.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.456" endtime="20201029 18:19:28.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.454" endtime="20201029 18:19:28.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.492" endtime="20201029 18:19:28.777"></status>
</kw>
<msg timestamp="20201029 18:19:28.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022027972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022132444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.490" endtime="20201029 18:19:28.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022027972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022132444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.782" endtime="20201029 18:19:28.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.790" endtime="20201029 18:19:28.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.488" endtime="20201029 18:19:28.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.486" endtime="20201029 18:19:28.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:28.796" level="INFO">${RESULT} = [{'diff': 0.00010447200000000129}, {'diff': 0.00010397200000000079}, {'diff': 0.0001040689999999983}, {'diff': 0.00010390299999999894}, {'diff': 0.00010420800000000147}, {'diff': 0.0001044029999999994...</msg>
<status status="PASS" starttime="20201029 18:19:28.793" endtime="20201029 18:19:28.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:28.800" level="INFO">${ACCURACY} = {'diff': [0.00010447200000000129, 0.00010397200000000079, 0.0001040689999999983, 0.00010390299999999894, 0.00010420800000000147, 0.00010440299999999944, 0.00010455499999999923, 0.00010390300000000241,...</msg>
<status status="PASS" starttime="20201029 18:19:28.797" endtime="20201029 18:19:28.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.805" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 18:19:28.804" endtime="20201029 18:19:28.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.807" level="INFO">VALUE: [0.00010447200000000129, 0.00010397200000000079, 0.0001040689999999983, 0.00010390299999999894, 0.00010420800000000147, 0.00010440299999999944, 0.00010455499999999923, 0.00010390300000000241, 0.0001042360000000006, 0.00010358300000000084, 0.00010363900000000259, 0.00010415199999999972, 0.00010456999999999828, 0.00010394500000000112, 0.00010462500000000055, 0.00010383400000000056, 0.00010384800000000013, 0.0001038749999999998, 0.00010402699999999959, 0.00010391699999999851, 0.00010437499999999683, 0.00010394499999999765, 0.00010417999999999886, 0.00010425000000000018, 0.00010383300000000109, 0.00010419500000000137, 0.00010384699999999719, 0.00010434700000000116, 0.00010383400000000056, 0.00010383400000000056, 0.00010390299999999894, 0.00010361099999999998, 0.00010391599999999904, 0.0001040550000000022, 0.00010444400000000215, 0.00010413899999999962, 0.00010409700000000091, 0.00010412500000000005, 0.00010397200000000079, 0.0001045420000000026, 0.00010419399999999843, 0.00010386100000000023, 0.00010404199999999864, 0.00010444500000000162, 0.00010454199999999914, 0.00010408400000000081, 0.00010450000000000043, 0.00010413800000000015, 0.00010390300000000241, 0.00010440199999999997]</msg>
<status status="PASS" starttime="20201029 18:19:28.806" endtime="20201029 18:19:28.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.801" endtime="20201029 18:19:28.808"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:28.812" endtime="20201029 18:19:28.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.810" endtime="20201029 18:19:28.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.809" endtime="20201029 18:19:28.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.452" endtime="20201029 18:19:28.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.452" endtime="20201029 18:19:28.833"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.841" endtime="20201029 18:19:28.862"></status>
</kw>
<msg timestamp="20201029 18:19:28.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.840" endtime="20201029 18:19:28.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.863" endtime="20201029 18:19:28.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.866" endtime="20201029 18:19:28.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.837" endtime="20201029 18:19:28.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.835" endtime="20201029 18:19:28.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.875" endtime="20201029 18:19:29.160"></status>
</kw>
<msg timestamp="20201029 18:19:29.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022769653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022874611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.873" endtime="20201029 18:19:29.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022769653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022874611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.164" endtime="20201029 18:19:29.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.172" endtime="20201029 18:19:29.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.871" endtime="20201029 18:19:29.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.869" endtime="20201029 18:19:29.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:29.179" level="INFO">${RESULT} = [{'diff': 0.00010495799999999875}, {'diff': 0.00010458299999999837}, {'diff': 0.00010540299999999697}, {'diff': 0.00010511100000000148}, {'diff': 0.00010513900000000062}, {'diff': 0.000105471999999998...</msg>
<status status="PASS" starttime="20201029 18:19:29.176" endtime="20201029 18:19:29.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:29.183" level="INFO">${ACCURACY} = {'diff': [0.00010495799999999875, 0.00010458299999999837, 0.00010540299999999697, 0.00010511100000000148, 0.00010513900000000062, 0.00010547199999999882, 0.0001055559999999997, 0.00010551299999999805,...</msg>
<status status="PASS" starttime="20201029 18:19:29.180" endtime="20201029 18:19:29.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.187" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 18:19:29.186" endtime="20201029 18:19:29.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.190" level="INFO">VALUE: [0.00010495799999999875, 0.00010458299999999837, 0.00010540299999999697, 0.00010511100000000148, 0.00010513900000000062, 0.00010547199999999882, 0.0001055559999999997, 0.00010551299999999805, 0.00010512500000000105, 0.00010458299999999837, 0.00010486100000000123, 0.0001048750000000008, 0.00010548600000000186, 0.00010490299999999994, 0.00010517999999999986, 0.00010536100000000173, 0.0001051810000000028, 0.0001051810000000028, 0.00010491699999999951, 0.00010502700000000059, 0.0001052360000000016, 0.00010458400000000131, 0.00010497300000000126, 0.00010509699999999844, 0.00010515300000000019, 0.00010551300000000152, 0.00010490200000000047, 0.00010504100000000016, 0.00010543099999999958, 0.00010490299999999994, 0.00010481900000000252, 0.00010509699999999844, 0.00010501399999999703, 0.00010534699999999869, 0.00010516699999999976, 0.00010513900000000062, 0.00010493099999999908, 0.00010544499999999915, 0.0001053750000000013, 0.00010544399999999968, 0.00010500000000000093, 0.00010547200000000229, 0.00010497200000000179, 0.00010494400000000265, 0.00010502800000000007, 0.00010491600000000004, 0.00010536100000000173, 0.00010547199999999882, 0.00010486099999999776, 0.0001045689999999988]</msg>
<status status="PASS" starttime="20201029 18:19:29.188" endtime="20201029 18:19:29.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.183" endtime="20201029 18:19:29.192"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:29.195" endtime="20201029 18:19:29.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.194" endtime="20201029 18:19:29.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.193" endtime="20201029 18:19:29.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.834" endtime="20201029 18:19:29.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.833" endtime="20201029 18:19:29.216"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.225" endtime="20201029 18:19:29.243"></status>
</kw>
<msg timestamp="20201029 18:19:29.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.223" endtime="20201029 18:19:29.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.245" endtime="20201029 18:19:29.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.247" endtime="20201029 18:19:29.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.221" endtime="20201029 18:19:29.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.218" endtime="20201029 18:19:29.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.256" endtime="20201029 18:19:29.542"></status>
</kw>
<msg timestamp="20201029 18:19:29.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021809708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021915444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.255" endtime="20201029 18:19:29.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021809708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021915444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.546" endtime="20201029 18:19:29.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.554" endtime="20201029 18:19:29.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.252" endtime="20201029 18:19:29.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.250" endtime="20201029 18:19:29.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:29.560" level="INFO">${RESULT} = [{'diff': 0.00010573599999999864}, {'diff': 0.00010645800000000025}, {'diff': 0.00010647199999999982}, {'diff': 0.00010651399999999853}, {'diff': 0.00010633300000000012}, {'diff': 0.000106000000000001...</msg>
<status status="PASS" starttime="20201029 18:19:29.557" endtime="20201029 18:19:29.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:29.565" level="INFO">${ACCURACY} = {'diff': [0.00010573599999999864, 0.00010645800000000025, 0.00010647199999999982, 0.00010651399999999853, 0.00010633300000000012, 0.00010600000000000193, 0.00010615299999999772, 0.00010654200000000114...</msg>
<status status="PASS" starttime="20201029 18:19:29.561" endtime="20201029 18:19:29.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.570" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 18:19:29.569" endtime="20201029 18:19:29.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.572" level="INFO">VALUE: [0.00010573599999999864, 0.00010645800000000025, 0.00010647199999999982, 0.00010651399999999853, 0.00010633300000000012, 0.00010600000000000193, 0.00010615299999999772, 0.00010654200000000114, 0.00010622199999999957, 0.00010626399999999828, 0.00010657000000000028, 0.00010654200000000114, 0.00010587499999999833, 0.00010657000000000028, 0.0001061949999999999, 0.00010587499999999833, 0.0001058750000000018, 0.0001060690000000003, 0.00010605500000000073, 0.00010595799999999975, 0.00010615299999999772, 0.0001062360000000026, 0.00010618099999999686, 0.00010645800000000025, 0.00010595799999999975, 0.00010629199999999742, 0.0001060560000000002, 0.00010591700000000051, 0.00010581900000000005, 0.00010651299999999905, 0.00010640200000000197, 0.0001062499999999987, 0.00010605500000000073, 0.00010588900000000137, 0.00010654200000000114, 0.00010598599999999889, 0.00010579200000000039, 0.00010643100000000058, 0.00010584699999999919, 0.00010604200000000064, 0.00010630600000000046, 0.0001061949999999999, 0.00010620899999999947, 0.00010561100000000198, 0.00010598699999999836, 0.00010630600000000046, 0.00010594400000000018, 0.00010562499999999808, 0.00010598599999999889, 0.00010597199999999932]</msg>
<status status="PASS" starttime="20201029 18:19:29.571" endtime="20201029 18:19:29.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.566" endtime="20201029 18:19:29.577"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:29.581" endtime="20201029 18:19:29.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.580" endtime="20201029 18:19:29.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.578" endtime="20201029 18:19:29.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.217" endtime="20201029 18:19:29.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.216" endtime="20201029 18:19:29.602"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.611" endtime="20201029 18:19:29.630"></status>
</kw>
<msg timestamp="20201029 18:19:29.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.609" endtime="20201029 18:19:29.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.632" endtime="20201029 18:19:29.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.634" endtime="20201029 18:19:29.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.606" endtime="20201029 18:19:29.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.604" endtime="20201029 18:19:29.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.643" endtime="20201029 18:19:29.929"></status>
</kw>
<msg timestamp="20201029 18:19:29.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022161153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022268097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.642" endtime="20201029 18:19:29.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022161153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022268097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.934" endtime="20201029 18:19:29.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.942" endtime="20201029 18:19:29.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.639" endtime="20201029 18:19:29.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.637" endtime="20201029 18:19:29.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:29.948" level="INFO">${RESULT} = [{'diff': 0.00010694400000000118}, {'diff': 0.00010727799999999885}, {'diff': 0.00010680500000000148}, {'diff': 0.00010716600000000229}, {'diff': 0.00010729199999999842}, {'diff': 0.000107417000000002...</msg>
<status status="PASS" starttime="20201029 18:19:29.945" endtime="20201029 18:19:29.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:29.952" level="INFO">${ACCURACY} = {'diff': [0.00010694400000000118, 0.00010727799999999885, 0.00010680500000000148, 0.00010716600000000229, 0.00010729199999999842, 0.00010741700000000201, 0.00010659699999999994, 0.00010694500000000065...</msg>
<status status="PASS" starttime="20201029 18:19:29.949" endtime="20201029 18:19:29.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.957" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 18:19:29.956" endtime="20201029 18:19:29.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.959" level="INFO">VALUE: [0.00010694400000000118, 0.00010727799999999885, 0.00010680500000000148, 0.00010716600000000229, 0.00010729199999999842, 0.00010741700000000201, 0.00010659699999999994, 0.00010694500000000065, 0.00010744500000000115, 0.00010709799999999992, 0.00010698599999999989, 0.00010698599999999989, 0.0001072499999999997, 0.00010661099999999951, 0.00010694399999999771, 0.00010743000000000211, 0.00010659699999999994, 0.00010684699999999672, 0.0001072499999999997, 0.00010713899999999915, 0.00010731900000000155, 0.0001070560000000012, 0.00010741699999999854, 0.00010659699999999994, 0.00010729199999999842, 0.00010698599999999989, 0.00010682000000000053, 0.00010704200000000164, 0.00010748600000000039, 0.00010691599999999857, 0.0001067080000000005, 0.00010742999999999864, 0.00010727800000000232, 0.00010677800000000182, 0.00010661100000000298, 0.00010729200000000189, 0.00010705599999999774, 0.00010718100000000133, 0.00010727799999999885, 0.00010663900000000212, 0.00010697200000000032, 0.00010709700000000044, 0.00010718100000000133, 0.00010701399999999903, 0.00010687499999999933, 0.00010694400000000118, 0.00010713899999999915, 0.00010744399999999821, 0.00010754099999999919, 0.00010747200000000082]</msg>
<status status="PASS" starttime="20201029 18:19:29.958" endtime="20201029 18:19:29.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.953" endtime="20201029 18:19:29.961"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:29.964" endtime="20201029 18:19:29.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.963" endtime="20201029 18:19:29.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.961" endtime="20201029 18:19:29.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.603" endtime="20201029 18:19:29.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.602" endtime="20201029 18:19:29.985"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.994" endtime="20201029 18:19:30.014"></status>
</kw>
<msg timestamp="20201029 18:19:30.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.992" endtime="20201029 18:19:30.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.015" endtime="20201029 18:19:30.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.018" endtime="20201029 18:19:30.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.989" endtime="20201029 18:19:30.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.987" endtime="20201029 18:19:30.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.027" endtime="20201029 18:19:30.313"></status>
</kw>
<msg timestamp="20201029 18:19:30.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023128347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023236458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.025" endtime="20201029 18:19:30.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023128347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023236458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.317" endtime="20201029 18:19:30.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.325" endtime="20201029 18:19:30.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.023" endtime="20201029 18:19:30.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.021" endtime="20201029 18:19:30.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:30.332" level="INFO">${RESULT} = [{'diff': 0.00010811100000000101}, {'diff': 0.00010837500000000083}, {'diff': 0.00010790299999999947}, {'diff': 0.00010833300000000212}, {'diff': 0.00010826400000000028}, {'diff': 0.000108139000000000...</msg>
<status status="PASS" starttime="20201029 18:19:30.329" endtime="20201029 18:19:30.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:30.336" level="INFO">${ACCURACY} = {'diff': [0.00010811100000000101, 0.00010837500000000083, 0.00010790299999999947, 0.00010833300000000212, 0.00010826400000000028, 0.00010813900000000015, 0.00010811100000000101, 0.00010830599999999899...</msg>
<status status="PASS" starttime="20201029 18:19:30.333" endtime="20201029 18:19:30.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.341" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 18:19:30.340" endtime="20201029 18:19:30.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.343" level="INFO">VALUE: [0.00010811100000000101, 0.00010837500000000083, 0.00010790299999999947, 0.00010833300000000212, 0.00010826400000000028, 0.00010813900000000015, 0.00010811100000000101, 0.00010830599999999899, 0.00010795799999999828, 0.00010818099999999886, 0.00010781999999999806, 0.00010790300000000294, 0.00010844500000000215, 0.00010761199999999999, 0.00010836200000000074, 0.00010762500000000008, 0.00010833299999999865, 0.00010784700000000119, 0.00010844400000000268, 0.00010800000000000046, 0.000108208000000002, 0.00010801400000000003, 0.00010845800000000225, 0.00010827799999999985, 0.00010797200000000132, 0.00010831999999999856, 0.00010801300000000055, 0.00010818099999999886, 0.00010784699999999772, 0.00010813900000000015, 0.00010838799999999746, 0.00010786099999999729, 0.00010841600000000007, 0.0001082769999999969, 0.00010780500000000248, 0.0001083890000000004, 0.00010850000000000096, 0.00010847200000000182, 0.00010815299999999972, 0.00010811099999999754, 0.00010830599999999899, 0.0001083890000000004, 0.00010761199999999999, 0.00010795900000000122, 0.00010838800000000093, 0.00010800000000000046, 0.00010793000000000261, 0.00010787500000000033, 0.00010830499999999951, 0.0001085560000000027]</msg>
<status status="PASS" starttime="20201029 18:19:30.342" endtime="20201029 18:19:30.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.337" endtime="20201029 18:19:30.346"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:30.349" endtime="20201029 18:19:30.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.348" endtime="20201029 18:19:30.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.347" endtime="20201029 18:19:30.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.986" endtime="20201029 18:19:30.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.985" endtime="20201029 18:19:30.370"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.379" endtime="20201029 18:19:30.398"></status>
</kw>
<msg timestamp="20201029 18:19:30.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.377" endtime="20201029 18:19:30.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.400" endtime="20201029 18:19:30.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.402" endtime="20201029 18:19:30.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.374" endtime="20201029 18:19:30.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.372" endtime="20201029 18:19:30.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.411" endtime="20201029 18:19:30.696"></status>
</kw>
<msg timestamp="20201029 18:19:30.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021836458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021945292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.409" endtime="20201029 18:19:30.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021836458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021945292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.701" endtime="20201029 18:19:30.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.709" endtime="20201029 18:19:30.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.407" endtime="20201029 18:19:30.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.405" endtime="20201029 18:19:30.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:30.715" level="INFO">${RESULT} = [{'diff': 0.0001088340000000021}, {'diff': 0.0001095280000000011}, {'diff': 0.00010875000000000121}, {'diff': 0.00010954100000000119}, {'diff': 0.00010879100000000044}, {'diff': 0.00010899999999999799...</msg>
<status status="PASS" starttime="20201029 18:19:30.712" endtime="20201029 18:19:30.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:30.720" level="INFO">${ACCURACY} = {'diff': [0.0001088340000000021, 0.0001095280000000011, 0.00010875000000000121, 0.00010954100000000119, 0.00010879100000000044, 0.00010899999999999799, 0.00010951399999999806, 0.00010891700000000004, ...</msg>
<status status="PASS" starttime="20201029 18:19:30.716" endtime="20201029 18:19:30.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.724" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 18:19:30.723" endtime="20201029 18:19:30.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.727" level="INFO">VALUE: [0.0001088340000000021, 0.0001095280000000011, 0.00010875000000000121, 0.00010954100000000119, 0.00010879100000000044, 0.00010899999999999799, 0.00010951399999999806, 0.00010891700000000004, 0.000108902999999997, 0.00010895799999999928, 0.00010941700000000054, 0.00010886100000000176, 0.00010923600000000214, 0.00010949999999999849, 0.00010886099999999829, 0.00010925000000000171, 0.00010895900000000222, 0.0001092219999999991, 0.0001094020000000015, 0.00010913900000000115, 0.0001090699999999993, 0.00010936100000000226, 0.0001087219999999986, 0.00010919399999999996, 0.00010911099999999854, 0.00010887500000000133, 0.0001088890000000009, 0.0001090280000000006, 0.00010934699999999922, 0.00010893099999999961, 0.00010925000000000171, 0.00010887500000000133, 0.00010931999999999956, 0.00010918000000000039, 0.00010883299999999915, 0.00010936100000000226, 0.0001088890000000009, 0.0001090699999999993, 0.00010887499999999786, 0.00010955600000000024, 0.00010880599999999949, 0.00010951400000000153, 0.00010893099999999961, 0.00010887499999999786, 0.00010955600000000024, 0.00010947199999999935, 0.00010909800000000192, 0.0001094029999999975, 0.00010934699999999922, 0.00010912500000000158]</msg>
<status status="PASS" starttime="20201029 18:19:30.726" endtime="20201029 18:19:30.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.721" endtime="20201029 18:19:30.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:30.732" endtime="20201029 18:19:30.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.730" endtime="20201029 18:19:30.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.729" endtime="20201029 18:19:30.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.371" endtime="20201029 18:19:30.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.370" endtime="20201029 18:19:30.752"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.761" endtime="20201029 18:19:30.781"></status>
</kw>
<msg timestamp="20201029 18:19:30.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.760" endtime="20201029 18:19:30.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.782" endtime="20201029 18:19:30.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.784" endtime="20201029 18:19:30.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.757" endtime="20201029 18:19:30.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.755" endtime="20201029 18:19:30.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.794" endtime="20201029 18:19:31.080"></status>
</kw>
<msg timestamp="20201029 18:19:31.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021962736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.792" endtime="20201029 18:19:31.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021962736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:31.084" endtime="20201029 18:19:31.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.092" endtime="20201029 18:19:31.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.790" endtime="20201029 18:19:31.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.788" endtime="20201029 18:19:31.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:31.099" level="INFO">${RESULT} = [{'diff': 0.00011012499999999911}, {'diff': 0.00011013899999999868}, {'diff': 0.00011000000000000246}, {'diff': 0.000109902999999998}, {'diff': 0.00010995800000000028}, {'diff': 0.00010965300000000122...</msg>
<status status="PASS" starttime="20201029 18:19:31.096" endtime="20201029 18:19:31.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:31.103" level="INFO">${ACCURACY} = {'diff': [0.00011012499999999911, 0.00011013899999999868, 0.00011000000000000246, 0.000109902999999998, 0.00010995800000000028, 0.00010965300000000122, 0.00010998599999999942, 0.00011020800000000053, ...</msg>
<status status="PASS" starttime="20201029 18:19:31.100" endtime="20201029 18:19:31.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.107" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 18:19:31.106" endtime="20201029 18:19:31.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.110" level="INFO">VALUE: [0.00011012499999999911, 0.00011013899999999868, 0.00011000000000000246, 0.000109902999999998, 0.00010995800000000028, 0.00010965300000000122, 0.00010998599999999942, 0.00011020800000000053, 0.00010997199999999985, 0.00010993100000000061, 0.00010994500000000018, 0.00011023700000000261, 0.0001098479999999992, 0.00010961100000000251, 0.00011041700000000154, 0.000109902000000002, 0.00011030499999999804, 0.00010995800000000028, 0.00011051399999999906, 0.00010959699999999947, 0.0001095829999999999, 0.00010986099999999929, 0.000110209, 0.00011009800000000292, 0.00010999999999999899, 0.00010994500000000018, 0.00011005600000000074, 0.0001105419999999982, 0.00011020800000000053, 0.00011051399999999906, 0.00010981900000000058, 0.00011001399999999856, 0.00010990300000000147, 0.00011023599999999967, 0.00011009699999999997, 0.00011012499999999911, 0.00011030600000000099, 0.00011051399999999906, 0.0001100280000000016, 0.00011013899999999868, 0.00011011099999999954, 0.00011049999999999949, 0.00011045900000000025, 0.00011040199999999903, 0.00011006899999999736, 0.00011016699999999782, 0.00010981900000000058, 0.00010979100000000144, 0.0001100830000000004, 0.0001095829999999999]</msg>
<status status="PASS" starttime="20201029 18:19:31.108" endtime="20201029 18:19:31.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.104" endtime="20201029 18:19:31.111"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:31.115" endtime="20201029 18:19:31.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.113" endtime="20201029 18:19:31.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.112" endtime="20201029 18:19:31.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.753" endtime="20201029 18:19:31.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.753" endtime="20201029 18:19:31.135"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.144" endtime="20201029 18:19:31.167"></status>
</kw>
<msg timestamp="20201029 18:19:31.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:31.142" endtime="20201029 18:19:31.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:31.168" endtime="20201029 18:19:31.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.171" endtime="20201029 18:19:31.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.140" endtime="20201029 18:19:31.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.138" endtime="20201029 18:19:31.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.180" endtime="20201029 18:19:31.467"></status>
</kw>
<msg timestamp="20201029 18:19:31.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025096125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025206889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:31.178" endtime="20201029 18:19:31.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025096125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025206889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:31.472" endtime="20201029 18:19:31.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.480" endtime="20201029 18:19:31.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.176" endtime="20201029 18:19:31.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.174" endtime="20201029 18:19:31.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:31.486" level="INFO">${RESULT} = [{'diff': 0.00011076399999999931}, {'diff': 0.00011091699999999857}, {'diff': 0.00011080599999999802}, {'diff': 0.00011108400000000088}, {'diff': 0.00011144500000000168}, {'diff': 0.000111138999999999...</msg>
<status status="PASS" starttime="20201029 18:19:31.483" endtime="20201029 18:19:31.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:31.491" level="INFO">${ACCURACY} = {'diff': [0.00011076399999999931, 0.00011091699999999857, 0.00011080599999999802, 0.00011108400000000088, 0.00011144500000000168, 0.00011113899999999968, 0.00011095900000000075, 0.00011065300000000222...</msg>
<status status="PASS" starttime="20201029 18:19:31.487" endtime="20201029 18:19:31.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.495" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 18:19:31.494" endtime="20201029 18:19:31.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.498" level="INFO">VALUE: [0.00011076399999999931, 0.00011091699999999857, 0.00011080599999999802, 0.00011108400000000088, 0.00011144500000000168, 0.00011113899999999968, 0.00011095900000000075, 0.00011065300000000222, 0.00011133300000000165, 0.00011088899999999943, 0.00011097199999999738, 0.00011069500000000093, 0.00011079099999999897, 0.00011059700000000047, 0.00011081900000000158, 0.00011134700000000122, 0.00011105599999999827, 0.00011094499999999771, 0.00011084700000000072, 0.00011145900000000125, 0.00011101300000000008, 0.000111209000000001, 0.00011098699999999989, 0.0001105830000000009, 0.0001105830000000009, 0.0001110549999999988, 0.00011104100000000269, 0.00011059700000000047, 0.00011150000000000049, 0.00011062499999999961, 0.00011097200000000085, 0.00011080599999999802, 0.00011082000000000106, 0.00011138899999999993, 0.00011093100000000161, 0.00011098699999999989, 0.00011138899999999993, 0.00011118100000000186, 0.00011099999999999999, 0.00011152700000000015, 0.00011123600000000067, 0.00011056899999999786, 0.0001112220000000011, 0.00011151400000000006, 0.00011106899999999836, 0.00011062499999999961, 0.00011119500000000143, 0.00011091699999999857, 0.00011102799999999913, 0.0001108480000000002]</msg>
<status status="PASS" starttime="20201029 18:19:31.496" endtime="20201029 18:19:31.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.491" endtime="20201029 18:19:31.500"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:31.503" endtime="20201029 18:19:31.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.502" endtime="20201029 18:19:31.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.501" endtime="20201029 18:19:31.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.136" endtime="20201029 18:19:31.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.136" endtime="20201029 18:19:31.524"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.533" endtime="20201029 18:19:31.553"></status>
</kw>
<msg timestamp="20201029 18:19:31.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:31.531" endtime="20201029 18:19:31.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:31.554" endtime="20201029 18:19:31.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.557" endtime="20201029 18:19:31.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.528" endtime="20201029 18:19:31.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.526" endtime="20201029 18:19:31.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.566" endtime="20201029 18:19:31.851"></status>
</kw>
<msg timestamp="20201029 18:19:31.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022025347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:31.564" endtime="20201029 18:19:31.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022025347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:31.855" endtime="20201029 18:19:31.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.863" endtime="20201029 18:19:31.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.562" endtime="20201029 18:19:31.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.560" endtime="20201029 18:19:31.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:31.870" level="INFO">${RESULT} = [{'diff': 0.00011265300000000075}, {'diff': 0.00011162500000000061}, {'diff': 0.00011234700000000222}, {'diff': 0.00011202800000000013}, {'diff': 0.00011236099999999832}, {'diff': 0.000112417000000000...</msg>
<status status="PASS" starttime="20201029 18:19:31.867" endtime="20201029 18:19:31.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:31.875" level="INFO">${ACCURACY} = {'diff': [0.00011265300000000075, 0.00011162500000000061, 0.00011234700000000222, 0.00011202800000000013, 0.00011236099999999832, 0.00011241700000000007, 0.00011244499999999921, 0.00011251399999999759...</msg>
<status status="PASS" starttime="20201029 18:19:31.871" endtime="20201029 18:19:31.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.879" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 18:19:31.878" endtime="20201029 18:19:31.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.882" level="INFO">VALUE: [0.00011265300000000075, 0.00011162500000000061, 0.00011234700000000222, 0.00011202800000000013, 0.00011236099999999832, 0.00011241700000000007, 0.00011244499999999921, 0.00011251399999999759, 0.0001125420000000002, 0.00011251400000000106, 0.00011236100000000179, 0.0001120549999999998, 0.0001122229999999981, 0.0001115830000000019, 0.00011216600000000035, 0.00011225000000000124, 0.00011202800000000013, 0.00011181900000000258, 0.00011200000000000099, 0.00011226399999999734, 0.00011232000000000256, 0.00011201400000000056, 0.00011200000000000099, 0.00011240299999999703, 0.00011180499999999954, 0.00011209700000000197, 0.00011247199999999888, 0.00011254100000000072, 0.00011245800000000278, 0.00011201400000000056, 0.00011231899999999961, 0.00011190200000000053, 0.00011198599999999795, 0.00011186099999999782, 0.00011162500000000061, 0.00011213900000000068, 0.00011213899999999721, 0.00011187500000000086, 0.00011240199999999756, 0.00011200000000000099, 0.00011236100000000179, 0.00011256999999999934, 0.00011226400000000081, 0.00011194400000000271, 0.00011180499999999954, 0.00011217999999999992, 0.00011184700000000172, 0.00011243099999999964, 0.00011191700000000304, 0.0001115830000000019]</msg>
<status status="PASS" starttime="20201029 18:19:31.880" endtime="20201029 18:19:31.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.875" endtime="20201029 18:19:31.883"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:31.886" endtime="20201029 18:19:31.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.885" endtime="20201029 18:19:31.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.884" endtime="20201029 18:19:31.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.525" endtime="20201029 18:19:31.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.524" endtime="20201029 18:19:31.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.407" endtime="20201029 18:19:31.907"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:53.337" endtime="20201029 18:19:31.908" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:18:13.044" endtime="20201029 18:19:31.911"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.964" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:19:31.972" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:19:33.334" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:19:31.963" endtime="20201029 18:19:33.335"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.340" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:19:33.338" endtime="20201029 18:19:33.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.961" endtime="20201029 18:19:33.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:33.347" endtime="20201029 18:19:33.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.344" endtime="20201029 18:19:33.533"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.545" endtime="20201029 18:19:33.559"></status>
</kw>
<msg timestamp="20201029 18:19:33.560" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.544" endtime="20201029 18:19:33.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.562" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.561" endtime="20201029 18:19:33.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.565" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:33.563" endtime="20201029 18:19:33.566"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:33.541" endtime="20201029 18:19:33.566"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:33.539" endtime="20201029 18:19:33.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.538" endtime="20201029 18:19:33.567"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:33.571" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:33.570" endtime="20201029 18:19:33.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.568" endtime="20201029 18:19:33.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.537" endtime="20201029 18:19:33.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.536" endtime="20201029 18:19:33.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.573" endtime="20201029 18:19:33.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.535" endtime="20201029 18:19:33.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.575" endtime="20201029 18:19:33.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.534" endtime="20201029 18:19:33.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.960" endtime="20201029 18:19:33.578"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:33.584" endtime="20201029 18:19:33.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.582" endtime="20201029 18:19:33.604"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.617" endtime="20201029 18:19:33.630"></status>
</kw>
<msg timestamp="20201029 18:19:33.630" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.615" endtime="20201029 18:19:33.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.633" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.631" endtime="20201029 18:19:33.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.637" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:33.634" endtime="20201029 18:19:33.637"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:33.612" endtime="20201029 18:19:33.638"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:33.610" endtime="20201029 18:19:33.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.609" endtime="20201029 18:19:33.639"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:33.642" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:33.642" endtime="20201029 18:19:33.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.639" endtime="20201029 18:19:33.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.608" endtime="20201029 18:19:33.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.607" endtime="20201029 18:19:33.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.644" endtime="20201029 18:19:33.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.606" endtime="20201029 18:19:33.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.604" endtime="20201029 18:19:33.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.581" endtime="20201029 18:19:33.647"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.655" endtime="20201029 18:19:39.776"></status>
</kw>
<msg timestamp="20201029 18:19:39.777" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.653" endtime="20201029 18:19:39.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.783" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:39.780" endtime="20201029 18:19:39.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.785" endtime="20201029 18:19:39.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.651" endtime="20201029 18:19:39.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.649" endtime="20201029 18:19:39.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:39.795" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201029 18:19:39.792" endtime="20201029 18:19:39.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.804" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:39.802" endtime="20201029 18:19:39.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.809" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:19:39.807" endtime="20201029 18:19:39.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.797" endtime="20201029 18:19:39.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.819" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:39.816" endtime="20201029 18:19:39.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.823" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:19:39.821" endtime="20201029 18:19:39.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.812" endtime="20201029 18:19:39.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.832" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:19:39.830" endtime="20201029 18:19:39.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:39.837" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 18:19:39.835" endtime="20201029 18:19:39.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.826" endtime="20201029 18:19:39.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:39.852" endtime="20201029 18:19:40.160"></status>
</kw>
<msg timestamp="20201029 18:19:40.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061376778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161397764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:39.849" endtime="20201029 18:19:40.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061376778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161397764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:40.164" endtime="20201029 18:19:40.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.172" endtime="20201029 18:19:40.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.843" endtime="20201029 18:19:40.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:39.840" endtime="20201029 18:19:40.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:19:40.179" level="INFO">${FILTERED} = [{'diff': 0.100020986}, {'diff': 0.10000550000000002}, {'diff': 0.10000679200000001}, {'diff': 0.10000679100000004}, {'diff': 0.10000677799999996}, {'diff': 0.10000681900000008}, {'diff': 0.1000067359...</msg>
<status status="PASS" starttime="20201029 18:19:40.176" endtime="20201029 18:19:40.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:40.183" level="INFO">${RESULT} = {'diff': [0.100020986, 0.10000550000000002, 0.10000679200000001, 0.10000679100000004, 0.10000677799999996, 0.10000681900000008, 0.10000673599999998, 0.10000684800000004, 0.10000673599999998, 0.1000067...</msg>
<status status="PASS" starttime="20201029 18:19:40.180" endtime="20201029 18:19:40.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.187" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:19:40.186" endtime="20201029 18:19:40.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.189" level="INFO">VALUE: [0.100020986, 0.10000550000000002, 0.10000679200000001, 0.10000679100000004, 0.10000677799999996, 0.10000681900000008, 0.10000673599999998, 0.10000684800000004, 0.10000673599999998, 0.10000676399999997, 0.10000674999999992, 0.10000674999999992, 0.10000683399999999, 0.10000676399999997, 0.10000677800000002, 0.10000672300000013, 0.1000068329999999, 0.10000681900000008, 4.73000000056345e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 0.10000724999999999, 0.10000675000000037, 0.10000676399999975, 0.10000675000000037, 0.10000676299999967, 0.10000676400000019, 0.10000676400000019, 0.10000674999999992, 0.10000683399999977, 0.10000676399999975, 0.10000676400000019, 0.10000676300000011, 0.10000674999999992, 0.10000684799999959, 0.10000676399999975, 0.10000674999999948, 0.10000676399999975, 0.10000676399999975, 0.10000677699999994, 0.10000675000000037, 0.10000676400000064, 0.10000676399999975, 0.10000676399999975, 0.10000676399999975, 0.10000677800000002]</msg>
<status status="PASS" starttime="20201029 18:19:40.188" endtime="20201029 18:19:40.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.184" endtime="20201029 18:19:40.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.647" endtime="20201029 18:19:40.191"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 18:19:33.578" endtime="20201029 18:19:40.192" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:40.198" endtime="20201029 18:19:40.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.197" endtime="20201029 18:19:40.218"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.232" endtime="20201029 18:19:40.245"></status>
</kw>
<msg timestamp="20201029 18:19:40.246" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:40.230" endtime="20201029 18:19:40.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.248" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:40.247" endtime="20201029 18:19:40.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:40.251" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:40.249" endtime="20201029 18:19:40.252"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:40.228" endtime="20201029 18:19:40.252"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:40.225" endtime="20201029 18:19:40.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.223" endtime="20201029 18:19:40.253"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:40.257" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:40.256" endtime="20201029 18:19:40.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.254" endtime="20201029 18:19:40.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.222" endtime="20201029 18:19:40.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.222" endtime="20201029 18:19:40.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.259" endtime="20201029 18:19:40.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.220" endtime="20201029 18:19:40.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.219" endtime="20201029 18:19:40.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.195" endtime="20201029 18:19:40.261"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:40.269" endtime="20201029 18:19:46.391"></status>
</kw>
<msg timestamp="20201029 18:19:46.392" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:40.268" endtime="20201029 18:19:46.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.397" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:46.394" endtime="20201029 18:19:46.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.399" endtime="20201029 18:19:46.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.265" endtime="20201029 18:19:46.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.263" endtime="20201029 18:19:46.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:46.409" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201029 18:19:46.406" endtime="20201029 18:19:46.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.418" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:46.416" endtime="20201029 18:19:46.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.423" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:19:46.421" endtime="20201029 18:19:46.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.412" endtime="20201029 18:19:46.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.435" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:46.431" endtime="20201029 18:19:46.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.442" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:19:46.437" endtime="20201029 18:19:46.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.426" endtime="20201029 18:19:46.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.454" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:19:46.451" endtime="20201029 18:19:46.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.462" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 18:19:46.460" endtime="20201029 18:19:46.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.446" endtime="20201029 18:19:46.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.479" endtime="20201029 18:19:46.777"></status>
</kw>
<msg timestamp="20201029 18:19:46.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061576861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161607694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:46.477" endtime="20201029 18:19:46.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061576861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161607694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:46.781" endtime="20201029 18:19:46.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.789" endtime="20201029 18:19:46.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.470" endtime="20201029 18:19:46.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.466" endtime="20201029 18:19:46.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:19:46.796" level="INFO">${FILTERED} = [{'diff': 0.100030833}, {'diff': 0.09999572200000004}, {'diff': 0.10000677799999996}, {'diff': 0.10000688899999999}, {'diff': 0.10000776400000005}, {'diff': 0.10000562499999999}, {'diff': 0.1000069169...</msg>
<status status="PASS" starttime="20201029 18:19:46.793" endtime="20201029 18:19:46.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:46.800" level="INFO">${RESULT} = {'diff': [0.100030833, 0.09999572200000004, 0.10000677799999996, 0.10000688899999999, 0.10000776400000005, 0.10000562499999999, 0.10000691699999997, 0.10000677700000005, 0.10000777799999994, 0.1000057...</msg>
<status status="PASS" starttime="20201029 18:19:46.797" endtime="20201029 18:19:46.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.805" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:19:46.804" endtime="20201029 18:19:46.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.808" level="INFO">VALUE: [0.100030833, 0.09999572200000004, 0.10000677799999996, 0.10000688899999999, 0.10000776400000005, 0.10000562499999999, 0.10000691699999997, 0.10000677700000005, 0.10000777799999994, 0.10000576399999994, 0.10000786099999992, 0.10000577799999988, 0.10000776400000011, 0.1000057780000001, 0.10000776399999989, 0.10000580599999997, 0.10000776300000003, 0.10000577799999988, 0.10000776300000003, 0.10000577799999988, 0.100007819, 0.1000057360000004, 0.10000777799999971, 0.10000579200000015, 0.10000777800000016, 0.10000576400000005, 0.1000078470000001, 0.10000586100000008, 0.10000779199999998, 0.10000576400000005, 0.10000777799999971, 0.10000577799999988, 0.10000790299999984, 0.10000573599999996, 0.10000777700000008, 0.10000577800000032, 0.10000787499999975, 0.10000576400000005, 0.10000777800000016, 0.10000579100000007, 0.10000777800000016, 0.10000579200000015, 0.10000777800000016, 0.10000579199999926, 0.10000777700000008, 0.10000577799999988, 0.10000777800000016, 0.10000583299999999, 0.10000773600000024, 0.10000583299999999]</msg>
<status status="PASS" starttime="20201029 18:19:46.806" endtime="20201029 18:19:46.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.801" endtime="20201029 18:19:46.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:40.262" endtime="20201029 18:19:46.814"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 18:19:40.193" endtime="20201029 18:19:46.814" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:46.821" endtime="20201029 18:19:46.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.820" endtime="20201029 18:19:46.841"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.855" endtime="20201029 18:19:46.869"></status>
</kw>
<msg timestamp="20201029 18:19:46.869" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:46.853" endtime="20201029 18:19:46.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.872" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:46.870" endtime="20201029 18:19:46.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:46.875" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:46.873" endtime="20201029 18:19:46.875"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:46.850" endtime="20201029 18:19:46.876"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:46.848" endtime="20201029 18:19:46.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.847" endtime="20201029 18:19:46.877"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:46.881" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:46.880" endtime="20201029 18:19:46.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.878" endtime="20201029 18:19:46.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.846" endtime="20201029 18:19:46.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.845" endtime="20201029 18:19:46.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.883" endtime="20201029 18:19:46.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.844" endtime="20201029 18:19:46.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.842" endtime="20201029 18:19:46.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.818" endtime="20201029 18:19:46.885"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:46.895" endtime="20201029 18:19:53.018"></status>
</kw>
<msg timestamp="20201029 18:19:53.019" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:46.892" endtime="20201029 18:19:53.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.025" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:53.021" endtime="20201029 18:19:53.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.027" endtime="20201029 18:19:53.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.890" endtime="20201029 18:19:53.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.888" endtime="20201029 18:19:53.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:53.039" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201029 18:19:53.035" endtime="20201029 18:19:53.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.049" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:53.046" endtime="20201029 18:19:53.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.053" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:19:53.051" endtime="20201029 18:19:53.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.041" endtime="20201029 18:19:53.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.063" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:53.061" endtime="20201029 18:19:53.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.068" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:19:53.066" endtime="20201029 18:19:53.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.056" endtime="20201029 18:19:53.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.078" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:19:53.076" endtime="20201029 18:19:53.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.083" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 18:19:53.081" endtime="20201029 18:19:53.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.071" endtime="20201029 18:19:53.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.100" endtime="20201029 18:19:53.404"></status>
</kw>
<msg timestamp="20201029 18:19:53.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064520097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164555361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:53.096" endtime="20201029 18:19:53.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064520097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164555361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:53.410" endtime="20201029 18:19:53.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.420" endtime="20201029 18:19:53.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.090" endtime="20201029 18:19:53.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.086" endtime="20201029 18:19:53.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:19:53.429" level="INFO">${FILTERED} = [{'diff': 0.10003526400000001}, {'diff': 0.09999180499999999}, {'diff': 0.10000787500000002}, {'diff': 0.10000575}, {'diff': 0.10000780599999998}, {'diff': 0.10000582000000002}, {'diff': 0.10000774999...</msg>
<status status="PASS" starttime="20201029 18:19:53.424" endtime="20201029 18:19:53.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:53.438" level="INFO">${RESULT} = {'diff': [0.10003526400000001, 0.09999180499999999, 0.10000787500000002, 0.10000575, 0.10000780599999998, 0.10000582000000002, 0.10000774999999995, 0.10000573600000007, 0.10000774999999995, 0.10000580...</msg>
<status status="PASS" starttime="20201029 18:19:53.430" endtime="20201029 18:19:53.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.443" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:19:53.442" endtime="20201029 18:19:53.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.445" level="INFO">VALUE: [0.10003526400000001, 0.09999180499999999, 0.10000787500000002, 0.10000575, 0.10000780599999998, 0.10000582000000002, 0.10000774999999995, 0.10000573600000007, 0.10000774999999995, 0.10000580600000009, 0.10000625000000007, 0.10000773599999979, 0.10000573600000018, 0.10000781999999986, 0.1000058199999998, 0.10000776399999989, 0.10000573600000018, 0.10000776300000003, 0.10000576399999983, 0.1000077909999999, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.419999995481817e-07]</msg>
<status status="PASS" starttime="20201029 18:19:53.444" endtime="20201029 18:19:53.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.439" endtime="20201029 18:19:53.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:46.886" endtime="20201029 18:19:53.447"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 18:19:46.816" endtime="20201029 18:19:53.448" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:53.454" endtime="20201029 18:19:53.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.453" endtime="20201029 18:19:53.474"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.488" endtime="20201029 18:19:53.502"></status>
</kw>
<msg timestamp="20201029 18:19:53.503" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:53.486" endtime="20201029 18:19:53.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.505" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:53.504" endtime="20201029 18:19:53.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:53.509" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:53.507" endtime="20201029 18:19:53.509"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:53.484" endtime="20201029 18:19:53.510"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:53.481" endtime="20201029 18:19:53.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.480" endtime="20201029 18:19:53.510"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:53.515" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:53.515" endtime="20201029 18:19:53.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.511" endtime="20201029 18:19:53.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.479" endtime="20201029 18:19:53.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.478" endtime="20201029 18:19:53.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.517" endtime="20201029 18:19:53.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.477" endtime="20201029 18:19:53.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.475" endtime="20201029 18:19:53.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.452" endtime="20201029 18:19:53.520"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:53.529" endtime="20201029 18:19:59.652"></status>
</kw>
<msg timestamp="20201029 18:19:59.653" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:53.527" endtime="20201029 18:19:59.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.659" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:59.655" endtime="20201029 18:19:59.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.661" endtime="20201029 18:19:59.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.524" endtime="20201029 18:19:59.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.522" endtime="20201029 18:19:59.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:59.676" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201029 18:19:59.671" endtime="20201029 18:19:59.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.685" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:59.683" endtime="20201029 18:19:59.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.689" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:19:59.687" endtime="20201029 18:19:59.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.678" endtime="20201029 18:19:59.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.700" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:59.698" endtime="20201029 18:19:59.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.704" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:19:59.703" endtime="20201029 18:19:59.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.693" endtime="20201029 18:19:59.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.709" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:19:59.708" endtime="20201029 18:19:59.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:59.711" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 18:19:59.710" endtime="20201029 18:19:59.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.705" endtime="20201029 18:19:59.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:59.719" endtime="20201029 18:20:00.015"></status>
</kw>
<msg timestamp="20201029 18:20:00.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064604708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164643528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:59.717" endtime="20201029 18:20:00.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064604708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164643528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:00.019" endtime="20201029 18:20:00.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.028" endtime="20201029 18:20:00.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.714" endtime="20201029 18:20:00.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:59.713" endtime="20201029 18:20:00.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:20:00.034" level="INFO">${FILTERED} = [{'diff': 0.10003882000000001}, {'diff': 0.09998779200000002}, {'diff': 0.10000694500000001}, {'diff': 0.10000661200000005}, {'diff': 0.10000674999999998}, {'diff': 0.10000690300000004}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201029 18:20:00.031" endtime="20201029 18:20:00.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:00.039" level="INFO">${RESULT} = {'diff': [0.10003882000000001, 0.09998779200000002, 0.10000694500000001, 0.10000661200000005, 0.10000674999999998, 0.10000690300000004, 0.100007764, 0.10000577799999999, 0.10000772299999994, 0.1000058...</msg>
<status status="PASS" starttime="20201029 18:20:00.035" endtime="20201029 18:20:00.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.043" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:20:00.042" endtime="20201029 18:20:00.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.045" level="INFO">VALUE: [0.10003882000000001, 0.09998779200000002, 0.10000694500000001, 0.10000661200000005, 0.10000674999999998, 0.10000690300000004, 0.100007764, 0.10000577799999999, 0.10000772299999994, 0.10000584700000004, 0.10000774999999984, 0.10000577799999988, 0.10000775000000006, 0.10000577799999988, 0.10000773600000001, 0.10000583400000007, 0.10000783300000005, 0.10000576400000005, 0.10000776399999989, 0.1000057780000001, 0.10000775000000006, 0.10000577799999988, 0.10000777799999971, 0.10000573599999996, 0.10000775000000006, 0.10000584700000026, 0.10000775000000006, 0.10000583299999999, 0.10000784699999965, 0.10000576399999961, 0.10000775000000006, 0.10000584700000026, 0.10000775000000006, 0.10000590300000001, 5.419999999922709e-07, 5.409999999095305e-07, 0.1000062220000002, 0.10000776399999989, 0.10000576400000005, 0.1000077629999998, 0.1000057640000005, 0.10000777700000008, 0.10000574999999934, 0.10000776399999989, 0.10000580599999953, 0.10000773599999935, 0.10000576399999961, 0.10000776399999989, 0.10000577799999988, 0.1000077500000005]</msg>
<status status="PASS" starttime="20201029 18:20:00.044" endtime="20201029 18:20:00.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.039" endtime="20201029 18:20:00.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:53.521" endtime="20201029 18:20:00.047"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 18:19:53.449" endtime="20201029 18:20:00.048" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:00.055" endtime="20201029 18:20:00.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.053" endtime="20201029 18:20:00.075"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.089" endtime="20201029 18:20:00.103"></status>
</kw>
<msg timestamp="20201029 18:20:00.103" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:00.088" endtime="20201029 18:20:00.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.106" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:00.105" endtime="20201029 18:20:00.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:00.109" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:00.107" endtime="20201029 18:20:00.110"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:00.085" endtime="20201029 18:20:00.110"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:00.082" endtime="20201029 18:20:00.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.080" endtime="20201029 18:20:00.111"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:00.115" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:00.114" endtime="20201029 18:20:00.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.112" endtime="20201029 18:20:00.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.079" endtime="20201029 18:20:00.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.079" endtime="20201029 18:20:00.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.117" endtime="20201029 18:20:00.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.077" endtime="20201029 18:20:00.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.075" endtime="20201029 18:20:00.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.052" endtime="20201029 18:20:00.120"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:00.128" endtime="20201029 18:20:06.251"></status>
</kw>
<msg timestamp="20201029 18:20:06.252" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:00.126" endtime="20201029 18:20:06.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.258" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:06.254" endtime="20201029 18:20:06.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:06.260" endtime="20201029 18:20:06.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.124" endtime="20201029 18:20:06.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.122" endtime="20201029 18:20:06.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:06.272" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201029 18:20:06.268" endtime="20201029 18:20:06.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.281" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:06.279" endtime="20201029 18:20:06.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.286" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:20:06.284" endtime="20201029 18:20:06.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.274" endtime="20201029 18:20:06.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.296" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:06.294" endtime="20201029 18:20:06.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.301" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:20:06.299" endtime="20201029 18:20:06.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.289" endtime="20201029 18:20:06.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.311" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:20:06.309" endtime="20201029 18:20:06.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.316" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 18:20:06.314" endtime="20201029 18:20:06.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.304" endtime="20201029 18:20:06.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:06.336" endtime="20201029 18:20:06.642"></status>
</kw>
<msg timestamp="20201029 18:20:06.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063903069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163980292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:06.332" endtime="20201029 18:20:06.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063903069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163980292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:06.647" endtime="20201029 18:20:06.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:06.655" endtime="20201029 18:20:06.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.326" endtime="20201029 18:20:06.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.319" endtime="20201029 18:20:06.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:20:06.662" level="INFO">${FILTERED} = [{'diff': 0.10007722299999999}, {'diff': 0.09994965299999997}, {'diff': 4.720000000291158e-07}, {'diff': 5.419999999922709e-07}, {'diff': 4.7200000008462695e-07}, {'diff': 5.419999999922709e-07}, {'di...</msg>
<status status="PASS" starttime="20201029 18:20:06.658" endtime="20201029 18:20:06.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:06.666" level="INFO">${RESULT} = {'diff': [0.10007722299999999, 0.09994965299999997, 4.720000000291158e-07, 5.419999999922709e-07, 4.7200000008462695e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.409999...</msg>
<status status="PASS" starttime="20201029 18:20:06.663" endtime="20201029 18:20:06.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.670" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:20:06.669" endtime="20201029 18:20:06.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.673" level="INFO">VALUE: [0.10007722299999999, 0.09994965299999997, 4.720000000291158e-07, 5.419999999922709e-07, 4.7200000008462695e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.729999998343004e-07, 5.410000001315751e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000824999999969, 0.10000677800000002, 0.1000057919999997, 0.1000067910000002, 0.10000677800000002, 0.10000677800000002, 0.10000677800000002, 0.10000780600000025, 0.10000576400000005, 0.10000777799999971, 0.10000586100000008, 0.1000077909999999, 0.10000576399999961, 0.10000786099999992, 0.10000577799999988, 0.10000786099999992, 0.10000581899999972, 0.10000676400000064, 0.10000776399999989, 0.10000686100000067, 0.10000577799999988, 0.10000687500000005, 0.10000677800000002]</msg>
<status status="PASS" starttime="20201029 18:20:06.672" endtime="20201029 18:20:06.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.667" endtime="20201029 18:20:06.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:00.120" endtime="20201029 18:20:06.675"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 18:20:00.049" endtime="20201029 18:20:06.675" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:06.683" endtime="20201029 18:20:06.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.681" endtime="20201029 18:20:06.703"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:06.716" endtime="20201029 18:20:06.730"></status>
</kw>
<msg timestamp="20201029 18:20:06.731" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:06.715" endtime="20201029 18:20:06.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.734" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:06.732" endtime="20201029 18:20:06.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:06.737" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:06.735" endtime="20201029 18:20:06.737"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:06.712" endtime="20201029 18:20:06.738"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:06.710" endtime="20201029 18:20:06.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.708" endtime="20201029 18:20:06.739"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:06.742" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:06.742" endtime="20201029 18:20:06.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.740" endtime="20201029 18:20:06.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.708" endtime="20201029 18:20:06.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.707" endtime="20201029 18:20:06.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:06.744" endtime="20201029 18:20:06.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.705" endtime="20201029 18:20:06.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.704" endtime="20201029 18:20:06.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.679" endtime="20201029 18:20:06.747"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:06.756" endtime="20201029 18:20:12.879"></status>
</kw>
<msg timestamp="20201029 18:20:12.880" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:06.754" endtime="20201029 18:20:12.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:12.886" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:12.882" endtime="20201029 18:20:12.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:12.888" endtime="20201029 18:20:12.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.751" endtime="20201029 18:20:12.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.749" endtime="20201029 18:20:12.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:12.906" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201029 18:20:12.901" endtime="20201029 18:20:12.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:12.926" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:12.920" endtime="20201029 18:20:12.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:12.935" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:20:12.931" endtime="20201029 18:20:12.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.911" endtime="20201029 18:20:12.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:12.945" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:12.943" endtime="20201029 18:20:12.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:12.950" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:20:12.947" endtime="20201029 18:20:12.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.938" endtime="20201029 18:20:12.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:12.959" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:20:12.957" endtime="20201029 18:20:12.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:12.964" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 18:20:12.962" endtime="20201029 18:20:12.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.953" endtime="20201029 18:20:12.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:12.979" endtime="20201029 18:20:13.277"></status>
</kw>
<msg timestamp="20201029 18:20:13.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063086653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163175222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:12.976" endtime="20201029 18:20:13.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063086653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163175222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:13.281" endtime="20201029 18:20:13.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:13.289" endtime="20201029 18:20:13.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.971" endtime="20201029 18:20:13.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:12.967" endtime="20201029 18:20:13.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:20:13.296" level="INFO">${FILTERED} = [{'diff': 0.100088569}, {'diff': 0.10002741700000001}, {'diff': 0.09991668100000001}, {'diff': 0.10000783299999999}, {'diff': 0.10000673600000004}, {'diff': 0.10000573599999996}, {'diff': 0.1000068750...</msg>
<status status="PASS" starttime="20201029 18:20:13.293" endtime="20201029 18:20:13.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:13.301" level="INFO">${RESULT} = {'diff': [0.100088569, 0.10002741700000001, 0.09991668100000001, 0.10000783299999999, 0.10000673600000004, 0.10000573599999996, 0.10000687500000005, 0.10000770800000003, 0.10000675000000003, 0.1000058...</msg>
<status status="PASS" starttime="20201029 18:20:13.297" endtime="20201029 18:20:13.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.305" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:20:13.304" endtime="20201029 18:20:13.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:13.308" level="INFO">VALUE: [0.100088569, 0.10002741700000001, 0.09991668100000001, 0.10000783299999999, 0.10000673600000004, 0.10000573599999996, 0.10000687500000005, 0.10000770800000003, 0.10000675000000003, 0.10000583299999999, 0.10000674999999992, 0.1000078470000001, 0.10000676399999997, 0.10000679099999998, 4.729999998343004e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 0.10000724999999999, 0.10000577800000032, 0.10000673599999965, 0.10000788900000002, 0.10000674999999992, 0.10000572200000013, 0.10000784700000054, 0.10000675000000037, 0.1000057640000005, 0.10000677699999994, 0.10000776399999989, 0.10000675000000037, 0.10000576399999961, 0.10000676399999975, 0.10000782000000008, 0.10000670799999956, 0.10000683300000013, 0.1000068470000004]</msg>
<status status="PASS" starttime="20201029 18:20:13.306" endtime="20201029 18:20:13.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:13.302" endtime="20201029 18:20:13.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:06.748" endtime="20201029 18:20:13.310"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201029 18:20:06.677" endtime="20201029 18:20:13.310" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:19:31.920" endtime="20201029 18:20:13.317"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 18:17:30.522" endtime="20201029 18:20:13.350"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
